{
  "version": 3,
  "sources": ["../../node_modules/@empower-plastic/empowerjs/module/codegen/cosmwasm/wasm/v1/types.js"],
  "sourcesContent": ["import { Any } from \"../../../google/protobuf/any\";\nimport * as _m0 from \"protobufjs/minimal\";\nimport { isSet, bytesFromBase64, base64FromBytes, Long } from \"../../../helpers\";\n/** AccessType permission types */\nexport let AccessType = /*#__PURE__*/function (AccessType) {\n  AccessType[AccessType[\"ACCESS_TYPE_UNSPECIFIED\"] = 0] = \"ACCESS_TYPE_UNSPECIFIED\";\n  AccessType[AccessType[\"ACCESS_TYPE_NOBODY\"] = 1] = \"ACCESS_TYPE_NOBODY\";\n  AccessType[AccessType[\"ACCESS_TYPE_ONLY_ADDRESS\"] = 2] = \"ACCESS_TYPE_ONLY_ADDRESS\";\n  AccessType[AccessType[\"ACCESS_TYPE_EVERYBODY\"] = 3] = \"ACCESS_TYPE_EVERYBODY\";\n  AccessType[AccessType[\"ACCESS_TYPE_ANY_OF_ADDRESSES\"] = 4] = \"ACCESS_TYPE_ANY_OF_ADDRESSES\";\n  AccessType[AccessType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n  return AccessType;\n}({});\nexport const AccessTypeSDKType = AccessType;\nexport function accessTypeFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"ACCESS_TYPE_UNSPECIFIED\":\n      return AccessType.ACCESS_TYPE_UNSPECIFIED;\n    case 1:\n    case \"ACCESS_TYPE_NOBODY\":\n      return AccessType.ACCESS_TYPE_NOBODY;\n    case 2:\n    case \"ACCESS_TYPE_ONLY_ADDRESS\":\n      return AccessType.ACCESS_TYPE_ONLY_ADDRESS;\n    case 3:\n    case \"ACCESS_TYPE_EVERYBODY\":\n      return AccessType.ACCESS_TYPE_EVERYBODY;\n    case 4:\n    case \"ACCESS_TYPE_ANY_OF_ADDRESSES\":\n      return AccessType.ACCESS_TYPE_ANY_OF_ADDRESSES;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return AccessType.UNRECOGNIZED;\n  }\n}\nexport function accessTypeToJSON(object) {\n  switch (object) {\n    case AccessType.ACCESS_TYPE_UNSPECIFIED:\n      return \"ACCESS_TYPE_UNSPECIFIED\";\n    case AccessType.ACCESS_TYPE_NOBODY:\n      return \"ACCESS_TYPE_NOBODY\";\n    case AccessType.ACCESS_TYPE_ONLY_ADDRESS:\n      return \"ACCESS_TYPE_ONLY_ADDRESS\";\n    case AccessType.ACCESS_TYPE_EVERYBODY:\n      return \"ACCESS_TYPE_EVERYBODY\";\n    case AccessType.ACCESS_TYPE_ANY_OF_ADDRESSES:\n      return \"ACCESS_TYPE_ANY_OF_ADDRESSES\";\n    case AccessType.UNRECOGNIZED:\n    default:\n      return \"UNRECOGNIZED\";\n  }\n}\n/** ContractCodeHistoryOperationType actions that caused a code change */\nexport let ContractCodeHistoryOperationType = /*#__PURE__*/function (ContractCodeHistoryOperationType) {\n  ContractCodeHistoryOperationType[ContractCodeHistoryOperationType[\"CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED\"] = 0] = \"CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED\";\n  ContractCodeHistoryOperationType[ContractCodeHistoryOperationType[\"CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT\"] = 1] = \"CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT\";\n  ContractCodeHistoryOperationType[ContractCodeHistoryOperationType[\"CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE\"] = 2] = \"CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE\";\n  ContractCodeHistoryOperationType[ContractCodeHistoryOperationType[\"CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS\"] = 3] = \"CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS\";\n  ContractCodeHistoryOperationType[ContractCodeHistoryOperationType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n  return ContractCodeHistoryOperationType;\n}({});\nexport const ContractCodeHistoryOperationTypeSDKType = ContractCodeHistoryOperationType;\nexport function contractCodeHistoryOperationTypeFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED\":\n      return ContractCodeHistoryOperationType.CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED;\n    case 1:\n    case \"CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT\":\n      return ContractCodeHistoryOperationType.CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT;\n    case 2:\n    case \"CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE\":\n      return ContractCodeHistoryOperationType.CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE;\n    case 3:\n    case \"CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS\":\n      return ContractCodeHistoryOperationType.CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return ContractCodeHistoryOperationType.UNRECOGNIZED;\n  }\n}\nexport function contractCodeHistoryOperationTypeToJSON(object) {\n  switch (object) {\n    case ContractCodeHistoryOperationType.CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED:\n      return \"CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED\";\n    case ContractCodeHistoryOperationType.CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT:\n      return \"CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT\";\n    case ContractCodeHistoryOperationType.CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE:\n      return \"CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE\";\n    case ContractCodeHistoryOperationType.CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS:\n      return \"CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS\";\n    case ContractCodeHistoryOperationType.UNRECOGNIZED:\n    default:\n      return \"UNRECOGNIZED\";\n  }\n}\n/** AccessTypeParam */\n\n/** AccessTypeParam */\n\n/** AccessConfig access control type. */\n\n/** AccessConfig access control type. */\n\n/** Params defines the set of wasm parameters. */\n\n/** Params defines the set of wasm parameters. */\n\n/** CodeInfo is data for the uploaded contract WASM code */\n\n/** CodeInfo is data for the uploaded contract WASM code */\n\n/** ContractInfo stores a WASM contract instance */\n\n/** ContractInfo stores a WASM contract instance */\n\n/** ContractCodeHistoryEntry metadata to a contract. */\n\n/** ContractCodeHistoryEntry metadata to a contract. */\n\n/**\n * AbsoluteTxPosition is a unique transaction position that allows for global\n * ordering of transactions.\n */\n\n/**\n * AbsoluteTxPosition is a unique transaction position that allows for global\n * ordering of transactions.\n */\n\n/** Model is a struct that holds a KV pair */\n\n/** Model is a struct that holds a KV pair */\n\nfunction createBaseAccessTypeParam() {\n  return {\n    value: 0\n  };\n}\nexport const AccessTypeParam = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.value !== 0) {\n      writer.uint32(8).int32(message.value);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseAccessTypeParam();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.value = reader.int32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      value: isSet(object.value) ? accessTypeFromJSON(object.value) : 0\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.value !== undefined && (obj.value = accessTypeToJSON(message.value));\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$value;\n    const message = createBaseAccessTypeParam();\n    message.value = (_object$value = object.value) !== null && _object$value !== void 0 ? _object$value : 0;\n    return message;\n  }\n};\nfunction createBaseAccessConfig() {\n  return {\n    permission: 0,\n    address: \"\",\n    addresses: []\n  };\n}\nexport const AccessConfig = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.permission !== 0) {\n      writer.uint32(8).int32(message.permission);\n    }\n    if (message.address !== \"\") {\n      writer.uint32(18).string(message.address);\n    }\n    for (const v of message.addresses) {\n      writer.uint32(26).string(v);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseAccessConfig();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.permission = reader.int32();\n          break;\n        case 2:\n          message.address = reader.string();\n          break;\n        case 3:\n          message.addresses.push(reader.string());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      permission: isSet(object.permission) ? accessTypeFromJSON(object.permission) : 0,\n      address: isSet(object.address) ? String(object.address) : \"\",\n      addresses: Array.isArray(object === null || object === void 0 ? void 0 : object.addresses) ? object.addresses.map(e => String(e)) : []\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.permission !== undefined && (obj.permission = accessTypeToJSON(message.permission));\n    message.address !== undefined && (obj.address = message.address);\n    if (message.addresses) {\n      obj.addresses = message.addresses.map(e => e);\n    } else {\n      obj.addresses = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$permission, _object$address, _object$addresses;\n    const message = createBaseAccessConfig();\n    message.permission = (_object$permission = object.permission) !== null && _object$permission !== void 0 ? _object$permission : 0;\n    message.address = (_object$address = object.address) !== null && _object$address !== void 0 ? _object$address : \"\";\n    message.addresses = ((_object$addresses = object.addresses) === null || _object$addresses === void 0 ? void 0 : _object$addresses.map(e => e)) || [];\n    return message;\n  }\n};\nfunction createBaseParams() {\n  return {\n    codeUploadAccess: undefined,\n    instantiateDefaultPermission: 0\n  };\n}\nexport const Params = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.codeUploadAccess !== undefined) {\n      AccessConfig.encode(message.codeUploadAccess, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.instantiateDefaultPermission !== 0) {\n      writer.uint32(16).int32(message.instantiateDefaultPermission);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseParams();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.codeUploadAccess = AccessConfig.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.instantiateDefaultPermission = reader.int32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      codeUploadAccess: isSet(object.codeUploadAccess) ? AccessConfig.fromJSON(object.codeUploadAccess) : undefined,\n      instantiateDefaultPermission: isSet(object.instantiateDefaultPermission) ? accessTypeFromJSON(object.instantiateDefaultPermission) : 0\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.codeUploadAccess !== undefined && (obj.codeUploadAccess = message.codeUploadAccess ? AccessConfig.toJSON(message.codeUploadAccess) : undefined);\n    message.instantiateDefaultPermission !== undefined && (obj.instantiateDefaultPermission = accessTypeToJSON(message.instantiateDefaultPermission));\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$instantiateDe;\n    const message = createBaseParams();\n    message.codeUploadAccess = object.codeUploadAccess !== undefined && object.codeUploadAccess !== null ? AccessConfig.fromPartial(object.codeUploadAccess) : undefined;\n    message.instantiateDefaultPermission = (_object$instantiateDe = object.instantiateDefaultPermission) !== null && _object$instantiateDe !== void 0 ? _object$instantiateDe : 0;\n    return message;\n  }\n};\nfunction createBaseCodeInfo() {\n  return {\n    codeHash: new Uint8Array(),\n    creator: \"\",\n    instantiateConfig: undefined\n  };\n}\nexport const CodeInfo = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.codeHash.length !== 0) {\n      writer.uint32(10).bytes(message.codeHash);\n    }\n    if (message.creator !== \"\") {\n      writer.uint32(18).string(message.creator);\n    }\n    if (message.instantiateConfig !== undefined) {\n      AccessConfig.encode(message.instantiateConfig, writer.uint32(42).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseCodeInfo();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.codeHash = reader.bytes();\n          break;\n        case 2:\n          message.creator = reader.string();\n          break;\n        case 5:\n          message.instantiateConfig = AccessConfig.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      codeHash: isSet(object.codeHash) ? bytesFromBase64(object.codeHash) : new Uint8Array(),\n      creator: isSet(object.creator) ? String(object.creator) : \"\",\n      instantiateConfig: isSet(object.instantiateConfig) ? AccessConfig.fromJSON(object.instantiateConfig) : undefined\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.codeHash !== undefined && (obj.codeHash = base64FromBytes(message.codeHash !== undefined ? message.codeHash : new Uint8Array()));\n    message.creator !== undefined && (obj.creator = message.creator);\n    message.instantiateConfig !== undefined && (obj.instantiateConfig = message.instantiateConfig ? AccessConfig.toJSON(message.instantiateConfig) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$codeHash, _object$creator;\n    const message = createBaseCodeInfo();\n    message.codeHash = (_object$codeHash = object.codeHash) !== null && _object$codeHash !== void 0 ? _object$codeHash : new Uint8Array();\n    message.creator = (_object$creator = object.creator) !== null && _object$creator !== void 0 ? _object$creator : \"\";\n    message.instantiateConfig = object.instantiateConfig !== undefined && object.instantiateConfig !== null ? AccessConfig.fromPartial(object.instantiateConfig) : undefined;\n    return message;\n  }\n};\nfunction createBaseContractInfo() {\n  return {\n    codeId: BigInt(\"0\"),\n    creator: \"\",\n    admin: \"\",\n    label: \"\",\n    created: undefined,\n    ibcPortId: \"\",\n    extension: undefined\n  };\n}\nexport const ContractInfo = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.codeId !== BigInt(0)) {\n      writer.uint32(8).uint64(Long.fromString(message.codeId.toString()));\n    }\n    if (message.creator !== \"\") {\n      writer.uint32(18).string(message.creator);\n    }\n    if (message.admin !== \"\") {\n      writer.uint32(26).string(message.admin);\n    }\n    if (message.label !== \"\") {\n      writer.uint32(34).string(message.label);\n    }\n    if (message.created !== undefined) {\n      AbsoluteTxPosition.encode(message.created, writer.uint32(42).fork()).ldelim();\n    }\n    if (message.ibcPortId !== \"\") {\n      writer.uint32(50).string(message.ibcPortId);\n    }\n    if (message.extension !== undefined) {\n      Any.encode(message.extension, writer.uint32(58).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseContractInfo();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.codeId = BigInt(reader.uint64().toString());\n          break;\n        case 2:\n          message.creator = reader.string();\n          break;\n        case 3:\n          message.admin = reader.string();\n          break;\n        case 4:\n          message.label = reader.string();\n          break;\n        case 5:\n          message.created = AbsoluteTxPosition.decode(reader, reader.uint32());\n          break;\n        case 6:\n          message.ibcPortId = reader.string();\n          break;\n        case 7:\n          message.extension = Any.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      codeId: isSet(object.codeId) ? BigInt(object.codeId.toString()) : BigInt(\"0\"),\n      creator: isSet(object.creator) ? String(object.creator) : \"\",\n      admin: isSet(object.admin) ? String(object.admin) : \"\",\n      label: isSet(object.label) ? String(object.label) : \"\",\n      created: isSet(object.created) ? AbsoluteTxPosition.fromJSON(object.created) : undefined,\n      ibcPortId: isSet(object.ibcPortId) ? String(object.ibcPortId) : \"\",\n      extension: isSet(object.extension) ? Any.fromJSON(object.extension) : undefined\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.codeId !== undefined && (obj.codeId = (message.codeId || BigInt(\"0\")).toString());\n    message.creator !== undefined && (obj.creator = message.creator);\n    message.admin !== undefined && (obj.admin = message.admin);\n    message.label !== undefined && (obj.label = message.label);\n    message.created !== undefined && (obj.created = message.created ? AbsoluteTxPosition.toJSON(message.created) : undefined);\n    message.ibcPortId !== undefined && (obj.ibcPortId = message.ibcPortId);\n    message.extension !== undefined && (obj.extension = message.extension ? Any.toJSON(message.extension) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$creator2, _object$admin, _object$label, _object$ibcPortId;\n    const message = createBaseContractInfo();\n    message.codeId = object.codeId !== undefined && object.codeId !== null ? BigInt(object.codeId.toString()) : BigInt(\"0\");\n    message.creator = (_object$creator2 = object.creator) !== null && _object$creator2 !== void 0 ? _object$creator2 : \"\";\n    message.admin = (_object$admin = object.admin) !== null && _object$admin !== void 0 ? _object$admin : \"\";\n    message.label = (_object$label = object.label) !== null && _object$label !== void 0 ? _object$label : \"\";\n    message.created = object.created !== undefined && object.created !== null ? AbsoluteTxPosition.fromPartial(object.created) : undefined;\n    message.ibcPortId = (_object$ibcPortId = object.ibcPortId) !== null && _object$ibcPortId !== void 0 ? _object$ibcPortId : \"\";\n    message.extension = object.extension !== undefined && object.extension !== null ? Any.fromPartial(object.extension) : undefined;\n    return message;\n  }\n};\nfunction createBaseContractCodeHistoryEntry() {\n  return {\n    operation: 0,\n    codeId: BigInt(\"0\"),\n    updated: undefined,\n    msg: new Uint8Array()\n  };\n}\nexport const ContractCodeHistoryEntry = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.operation !== 0) {\n      writer.uint32(8).int32(message.operation);\n    }\n    if (message.codeId !== BigInt(0)) {\n      writer.uint32(16).uint64(Long.fromString(message.codeId.toString()));\n    }\n    if (message.updated !== undefined) {\n      AbsoluteTxPosition.encode(message.updated, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.msg.length !== 0) {\n      writer.uint32(34).bytes(message.msg);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseContractCodeHistoryEntry();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.operation = reader.int32();\n          break;\n        case 2:\n          message.codeId = BigInt(reader.uint64().toString());\n          break;\n        case 3:\n          message.updated = AbsoluteTxPosition.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.msg = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      operation: isSet(object.operation) ? contractCodeHistoryOperationTypeFromJSON(object.operation) : 0,\n      codeId: isSet(object.codeId) ? BigInt(object.codeId.toString()) : BigInt(\"0\"),\n      updated: isSet(object.updated) ? AbsoluteTxPosition.fromJSON(object.updated) : undefined,\n      msg: isSet(object.msg) ? bytesFromBase64(object.msg) : new Uint8Array()\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.operation !== undefined && (obj.operation = contractCodeHistoryOperationTypeToJSON(message.operation));\n    message.codeId !== undefined && (obj.codeId = (message.codeId || BigInt(\"0\")).toString());\n    message.updated !== undefined && (obj.updated = message.updated ? AbsoluteTxPosition.toJSON(message.updated) : undefined);\n    message.msg !== undefined && (obj.msg = base64FromBytes(message.msg !== undefined ? message.msg : new Uint8Array()));\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$operation, _object$msg;\n    const message = createBaseContractCodeHistoryEntry();\n    message.operation = (_object$operation = object.operation) !== null && _object$operation !== void 0 ? _object$operation : 0;\n    message.codeId = object.codeId !== undefined && object.codeId !== null ? BigInt(object.codeId.toString()) : BigInt(\"0\");\n    message.updated = object.updated !== undefined && object.updated !== null ? AbsoluteTxPosition.fromPartial(object.updated) : undefined;\n    message.msg = (_object$msg = object.msg) !== null && _object$msg !== void 0 ? _object$msg : new Uint8Array();\n    return message;\n  }\n};\nfunction createBaseAbsoluteTxPosition() {\n  return {\n    blockHeight: BigInt(\"0\"),\n    txIndex: BigInt(\"0\")\n  };\n}\nexport const AbsoluteTxPosition = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.blockHeight !== BigInt(0)) {\n      writer.uint32(8).uint64(Long.fromString(message.blockHeight.toString()));\n    }\n    if (message.txIndex !== BigInt(0)) {\n      writer.uint32(16).uint64(Long.fromString(message.txIndex.toString()));\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseAbsoluteTxPosition();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.blockHeight = BigInt(reader.uint64().toString());\n          break;\n        case 2:\n          message.txIndex = BigInt(reader.uint64().toString());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      blockHeight: isSet(object.blockHeight) ? BigInt(object.blockHeight.toString()) : BigInt(\"0\"),\n      txIndex: isSet(object.txIndex) ? BigInt(object.txIndex.toString()) : BigInt(\"0\")\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.blockHeight !== undefined && (obj.blockHeight = (message.blockHeight || BigInt(\"0\")).toString());\n    message.txIndex !== undefined && (obj.txIndex = (message.txIndex || BigInt(\"0\")).toString());\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseAbsoluteTxPosition();\n    message.blockHeight = object.blockHeight !== undefined && object.blockHeight !== null ? BigInt(object.blockHeight.toString()) : BigInt(\"0\");\n    message.txIndex = object.txIndex !== undefined && object.txIndex !== null ? BigInt(object.txIndex.toString()) : BigInt(\"0\");\n    return message;\n  }\n};\nfunction createBaseModel() {\n  return {\n    key: new Uint8Array(),\n    value: new Uint8Array()\n  };\n}\nexport const Model = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.key.length !== 0) {\n      writer.uint32(10).bytes(message.key);\n    }\n    if (message.value.length !== 0) {\n      writer.uint32(18).bytes(message.value);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseModel();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.bytes();\n          break;\n        case 2:\n          message.value = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      key: isSet(object.key) ? bytesFromBase64(object.key) : new Uint8Array(),\n      value: isSet(object.value) ? bytesFromBase64(object.value) : new Uint8Array()\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n    message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$key, _object$value2;\n    const message = createBaseModel();\n    message.key = (_object$key = object.key) !== null && _object$key !== void 0 ? _object$key : new Uint8Array();\n    message.value = (_object$value2 = object.value) !== null && _object$value2 !== void 0 ? _object$value2 : new Uint8Array();\n    return message;\n  }\n};"],
  "mappings": "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",
  "names": ["AccessType", "ContractCodeHistoryOperationType", "Long"]
}
