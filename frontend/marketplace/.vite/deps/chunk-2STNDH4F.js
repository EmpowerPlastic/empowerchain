import {
  require_long,
  require_minimal
} from "./chunk-YTDFOCYR.js";
import {
  require_inherits_browser
} from "./chunk-5SHKMPQI.js";
import {
  __commonJS
} from "./chunk-I7XXR53E.js";

// browser-external:buffer
var require_buffer = __commonJS({
  "browser-external:buffer"(exports, module) {
    module.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "buffer" has been externalized for browser compatibility. Cannot access "buffer.${key}" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// node_modules/bn.js/lib/bn.js
var require_bn = __commonJS({
  "node_modules/bn.js/lib/bn.js"(exports, module) {
    (function(module2, exports2) {
      "use strict";
      function assert(val, msg) {
        if (!val)
          throw new Error(msg || "Assertion failed");
      }
      function inherits(ctor, superCtor) {
        ctor.super_ = superCtor;
        var TempCtor = function() {
        };
        TempCtor.prototype = superCtor.prototype;
        ctor.prototype = new TempCtor();
        ctor.prototype.constructor = ctor;
      }
      function BN(number, base, endian) {
        if (BN.isBN(number)) {
          return number;
        }
        this.negative = 0;
        this.words = null;
        this.length = 0;
        this.red = null;
        if (number !== null) {
          if (base === "le" || base === "be") {
            endian = base;
            base = 10;
          }
          this._init(number || 0, base || 10, endian || "be");
        }
      }
      if (typeof module2 === "object") {
        module2.exports = BN;
      } else {
        exports2.BN = BN;
      }
      BN.BN = BN;
      BN.wordSize = 26;
      var Buffer2;
      try {
        if (typeof window !== "undefined" && typeof window.Buffer !== "undefined") {
          Buffer2 = window.Buffer;
        } else {
          Buffer2 = require_buffer().Buffer;
        }
      } catch (e) {
      }
      BN.isBN = function isBN(num) {
        if (num instanceof BN) {
          return true;
        }
        return num !== null && typeof num === "object" && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
      };
      BN.max = function max(left, right) {
        if (left.cmp(right) > 0)
          return left;
        return right;
      };
      BN.min = function min(left, right) {
        if (left.cmp(right) < 0)
          return left;
        return right;
      };
      BN.prototype._init = function init(number, base, endian) {
        if (typeof number === "number") {
          return this._initNumber(number, base, endian);
        }
        if (typeof number === "object") {
          return this._initArray(number, base, endian);
        }
        if (base === "hex") {
          base = 16;
        }
        assert(base === (base | 0) && base >= 2 && base <= 36);
        number = number.toString().replace(/\s+/g, "");
        var start = 0;
        if (number[0] === "-") {
          start++;
          this.negative = 1;
        }
        if (start < number.length) {
          if (base === 16) {
            this._parseHex(number, start, endian);
          } else {
            this._parseBase(number, base, start);
            if (endian === "le") {
              this._initArray(this.toArray(), base, endian);
            }
          }
        }
      };
      BN.prototype._initNumber = function _initNumber(number, base, endian) {
        if (number < 0) {
          this.negative = 1;
          number = -number;
        }
        if (number < 67108864) {
          this.words = [number & 67108863];
          this.length = 1;
        } else if (number < 4503599627370496) {
          this.words = [
            number & 67108863,
            number / 67108864 & 67108863
          ];
          this.length = 2;
        } else {
          assert(number < 9007199254740992);
          this.words = [
            number & 67108863,
            number / 67108864 & 67108863,
            1
          ];
          this.length = 3;
        }
        if (endian !== "le")
          return;
        this._initArray(this.toArray(), base, endian);
      };
      BN.prototype._initArray = function _initArray(number, base, endian) {
        assert(typeof number.length === "number");
        if (number.length <= 0) {
          this.words = [0];
          this.length = 1;
          return this;
        }
        this.length = Math.ceil(number.length / 3);
        this.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          this.words[i] = 0;
        }
        var j, w;
        var off = 0;
        if (endian === "be") {
          for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
            w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
              off -= 26;
              j++;
            }
          }
        } else if (endian === "le") {
          for (i = 0, j = 0; i < number.length; i += 3) {
            w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
              off -= 26;
              j++;
            }
          }
        }
        return this._strip();
      };
      function parseHex4Bits(string, index) {
        var c = string.charCodeAt(index);
        if (c >= 48 && c <= 57) {
          return c - 48;
        } else if (c >= 65 && c <= 70) {
          return c - 55;
        } else if (c >= 97 && c <= 102) {
          return c - 87;
        } else {
          assert(false, "Invalid character in " + string);
        }
      }
      function parseHexByte(string, lowerBound, index) {
        var r = parseHex4Bits(string, index);
        if (index - 1 >= lowerBound) {
          r |= parseHex4Bits(string, index - 1) << 4;
        }
        return r;
      }
      BN.prototype._parseHex = function _parseHex(number, start, endian) {
        this.length = Math.ceil((number.length - start) / 6);
        this.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          this.words[i] = 0;
        }
        var off = 0;
        var j = 0;
        var w;
        if (endian === "be") {
          for (i = number.length - 1; i >= start; i -= 2) {
            w = parseHexByte(number, start, i) << off;
            this.words[j] |= w & 67108863;
            if (off >= 18) {
              off -= 18;
              j += 1;
              this.words[j] |= w >>> 26;
            } else {
              off += 8;
            }
          }
        } else {
          var parseLength = number.length - start;
          for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
            w = parseHexByte(number, start, i) << off;
            this.words[j] |= w & 67108863;
            if (off >= 18) {
              off -= 18;
              j += 1;
              this.words[j] |= w >>> 26;
            } else {
              off += 8;
            }
          }
        }
        this._strip();
      };
      function parseBase(str, start, end, mul) {
        var r = 0;
        var b = 0;
        var len = Math.min(str.length, end);
        for (var i = start; i < len; i++) {
          var c = str.charCodeAt(i) - 48;
          r *= mul;
          if (c >= 49) {
            b = c - 49 + 10;
          } else if (c >= 17) {
            b = c - 17 + 10;
          } else {
            b = c;
          }
          assert(c >= 0 && b < mul, "Invalid character");
          r += b;
        }
        return r;
      }
      BN.prototype._parseBase = function _parseBase(number, base, start) {
        this.words = [0];
        this.length = 1;
        for (var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base) {
          limbLen++;
        }
        limbLen--;
        limbPow = limbPow / base | 0;
        var total = number.length - start;
        var mod = total % limbLen;
        var end = Math.min(total, total - mod) + start;
        var word = 0;
        for (var i = start; i < end; i += limbLen) {
          word = parseBase(number, i, i + limbLen, base);
          this.imuln(limbPow);
          if (this.words[0] + word < 67108864) {
            this.words[0] += word;
          } else {
            this._iaddn(word);
          }
        }
        if (mod !== 0) {
          var pow = 1;
          word = parseBase(number, i, number.length, base);
          for (i = 0; i < mod; i++) {
            pow *= base;
          }
          this.imuln(pow);
          if (this.words[0] + word < 67108864) {
            this.words[0] += word;
          } else {
            this._iaddn(word);
          }
        }
        this._strip();
      };
      BN.prototype.copy = function copy(dest) {
        dest.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          dest.words[i] = this.words[i];
        }
        dest.length = this.length;
        dest.negative = this.negative;
        dest.red = this.red;
      };
      function move(dest, src) {
        dest.words = src.words;
        dest.length = src.length;
        dest.negative = src.negative;
        dest.red = src.red;
      }
      BN.prototype._move = function _move(dest) {
        move(dest, this);
      };
      BN.prototype.clone = function clone() {
        var r = new BN(null);
        this.copy(r);
        return r;
      };
      BN.prototype._expand = function _expand(size) {
        while (this.length < size) {
          this.words[this.length++] = 0;
        }
        return this;
      };
      BN.prototype._strip = function strip() {
        while (this.length > 1 && this.words[this.length - 1] === 0) {
          this.length--;
        }
        return this._normSign();
      };
      BN.prototype._normSign = function _normSign() {
        if (this.length === 1 && this.words[0] === 0) {
          this.negative = 0;
        }
        return this;
      };
      if (typeof Symbol !== "undefined" && typeof Symbol.for === "function") {
        try {
          BN.prototype[Symbol.for("nodejs.util.inspect.custom")] = inspect;
        } catch (e) {
          BN.prototype.inspect = inspect;
        }
      } else {
        BN.prototype.inspect = inspect;
      }
      function inspect() {
        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
      }
      var zeros = [
        "",
        "0",
        "00",
        "000",
        "0000",
        "00000",
        "000000",
        "0000000",
        "00000000",
        "000000000",
        "0000000000",
        "00000000000",
        "000000000000",
        "0000000000000",
        "00000000000000",
        "000000000000000",
        "0000000000000000",
        "00000000000000000",
        "000000000000000000",
        "0000000000000000000",
        "00000000000000000000",
        "000000000000000000000",
        "0000000000000000000000",
        "00000000000000000000000",
        "000000000000000000000000",
        "0000000000000000000000000"
      ];
      var groupSizes = [
        0,
        0,
        25,
        16,
        12,
        11,
        10,
        9,
        8,
        8,
        7,
        7,
        7,
        7,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5
      ];
      var groupBases = [
        0,
        0,
        33554432,
        43046721,
        16777216,
        48828125,
        60466176,
        40353607,
        16777216,
        43046721,
        1e7,
        19487171,
        35831808,
        62748517,
        7529536,
        11390625,
        16777216,
        24137569,
        34012224,
        47045881,
        64e6,
        4084101,
        5153632,
        6436343,
        7962624,
        9765625,
        11881376,
        14348907,
        17210368,
        20511149,
        243e5,
        28629151,
        33554432,
        39135393,
        45435424,
        52521875,
        60466176
      ];
      BN.prototype.toString = function toString(base, padding) {
        base = base || 10;
        padding = padding | 0 || 1;
        var out;
        if (base === 16 || base === "hex") {
          out = "";
          var off = 0;
          var carry = 0;
          for (var i = 0; i < this.length; i++) {
            var w = this.words[i];
            var word = ((w << off | carry) & 16777215).toString(16);
            carry = w >>> 24 - off & 16777215;
            off += 2;
            if (off >= 26) {
              off -= 26;
              i--;
            }
            if (carry !== 0 || i !== this.length - 1) {
              out = zeros[6 - word.length] + word + out;
            } else {
              out = word + out;
            }
          }
          if (carry !== 0) {
            out = carry.toString(16) + out;
          }
          while (out.length % padding !== 0) {
            out = "0" + out;
          }
          if (this.negative !== 0) {
            out = "-" + out;
          }
          return out;
        }
        if (base === (base | 0) && base >= 2 && base <= 36) {
          var groupSize = groupSizes[base];
          var groupBase = groupBases[base];
          out = "";
          var c = this.clone();
          c.negative = 0;
          while (!c.isZero()) {
            var r = c.modrn(groupBase).toString(base);
            c = c.idivn(groupBase);
            if (!c.isZero()) {
              out = zeros[groupSize - r.length] + r + out;
            } else {
              out = r + out;
            }
          }
          if (this.isZero()) {
            out = "0" + out;
          }
          while (out.length % padding !== 0) {
            out = "0" + out;
          }
          if (this.negative !== 0) {
            out = "-" + out;
          }
          return out;
        }
        assert(false, "Base should be between 2 and 36");
      };
      BN.prototype.toNumber = function toNumber() {
        var ret = this.words[0];
        if (this.length === 2) {
          ret += this.words[1] * 67108864;
        } else if (this.length === 3 && this.words[2] === 1) {
          ret += 4503599627370496 + this.words[1] * 67108864;
        } else if (this.length > 2) {
          assert(false, "Number can only safely store up to 53 bits");
        }
        return this.negative !== 0 ? -ret : ret;
      };
      BN.prototype.toJSON = function toJSON() {
        return this.toString(16, 2);
      };
      if (Buffer2) {
        BN.prototype.toBuffer = function toBuffer(endian, length) {
          return this.toArrayLike(Buffer2, endian, length);
        };
      }
      BN.prototype.toArray = function toArray(endian, length) {
        return this.toArrayLike(Array, endian, length);
      };
      var allocate = function allocate2(ArrayType, size) {
        if (ArrayType.allocUnsafe) {
          return ArrayType.allocUnsafe(size);
        }
        return new ArrayType(size);
      };
      BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {
        this._strip();
        var byteLength = this.byteLength();
        var reqLength = length || Math.max(1, byteLength);
        assert(byteLength <= reqLength, "byte array longer than desired length");
        assert(reqLength > 0, "Requested array length <= 0");
        var res = allocate(ArrayType, reqLength);
        var postfix = endian === "le" ? "LE" : "BE";
        this["_toArrayLike" + postfix](res, byteLength);
        return res;
      };
      BN.prototype._toArrayLikeLE = function _toArrayLikeLE(res, byteLength) {
        var position = 0;
        var carry = 0;
        for (var i = 0, shift = 0; i < this.length; i++) {
          var word = this.words[i] << shift | carry;
          res[position++] = word & 255;
          if (position < res.length) {
            res[position++] = word >> 8 & 255;
          }
          if (position < res.length) {
            res[position++] = word >> 16 & 255;
          }
          if (shift === 6) {
            if (position < res.length) {
              res[position++] = word >> 24 & 255;
            }
            carry = 0;
            shift = 0;
          } else {
            carry = word >>> 24;
            shift += 2;
          }
        }
        if (position < res.length) {
          res[position++] = carry;
          while (position < res.length) {
            res[position++] = 0;
          }
        }
      };
      BN.prototype._toArrayLikeBE = function _toArrayLikeBE(res, byteLength) {
        var position = res.length - 1;
        var carry = 0;
        for (var i = 0, shift = 0; i < this.length; i++) {
          var word = this.words[i] << shift | carry;
          res[position--] = word & 255;
          if (position >= 0) {
            res[position--] = word >> 8 & 255;
          }
          if (position >= 0) {
            res[position--] = word >> 16 & 255;
          }
          if (shift === 6) {
            if (position >= 0) {
              res[position--] = word >> 24 & 255;
            }
            carry = 0;
            shift = 0;
          } else {
            carry = word >>> 24;
            shift += 2;
          }
        }
        if (position >= 0) {
          res[position--] = carry;
          while (position >= 0) {
            res[position--] = 0;
          }
        }
      };
      if (Math.clz32) {
        BN.prototype._countBits = function _countBits(w) {
          return 32 - Math.clz32(w);
        };
      } else {
        BN.prototype._countBits = function _countBits(w) {
          var t = w;
          var r = 0;
          if (t >= 4096) {
            r += 13;
            t >>>= 13;
          }
          if (t >= 64) {
            r += 7;
            t >>>= 7;
          }
          if (t >= 8) {
            r += 4;
            t >>>= 4;
          }
          if (t >= 2) {
            r += 2;
            t >>>= 2;
          }
          return r + t;
        };
      }
      BN.prototype._zeroBits = function _zeroBits(w) {
        if (w === 0)
          return 26;
        var t = w;
        var r = 0;
        if ((t & 8191) === 0) {
          r += 13;
          t >>>= 13;
        }
        if ((t & 127) === 0) {
          r += 7;
          t >>>= 7;
        }
        if ((t & 15) === 0) {
          r += 4;
          t >>>= 4;
        }
        if ((t & 3) === 0) {
          r += 2;
          t >>>= 2;
        }
        if ((t & 1) === 0) {
          r++;
        }
        return r;
      };
      BN.prototype.bitLength = function bitLength() {
        var w = this.words[this.length - 1];
        var hi = this._countBits(w);
        return (this.length - 1) * 26 + hi;
      };
      function toBitArray(num) {
        var w = new Array(num.bitLength());
        for (var bit = 0; bit < w.length; bit++) {
          var off = bit / 26 | 0;
          var wbit = bit % 26;
          w[bit] = num.words[off] >>> wbit & 1;
        }
        return w;
      }
      BN.prototype.zeroBits = function zeroBits() {
        if (this.isZero())
          return 0;
        var r = 0;
        for (var i = 0; i < this.length; i++) {
          var b = this._zeroBits(this.words[i]);
          r += b;
          if (b !== 26)
            break;
        }
        return r;
      };
      BN.prototype.byteLength = function byteLength() {
        return Math.ceil(this.bitLength() / 8);
      };
      BN.prototype.toTwos = function toTwos(width) {
        if (this.negative !== 0) {
          return this.abs().inotn(width).iaddn(1);
        }
        return this.clone();
      };
      BN.prototype.fromTwos = function fromTwos(width) {
        if (this.testn(width - 1)) {
          return this.notn(width).iaddn(1).ineg();
        }
        return this.clone();
      };
      BN.prototype.isNeg = function isNeg() {
        return this.negative !== 0;
      };
      BN.prototype.neg = function neg() {
        return this.clone().ineg();
      };
      BN.prototype.ineg = function ineg() {
        if (!this.isZero()) {
          this.negative ^= 1;
        }
        return this;
      };
      BN.prototype.iuor = function iuor(num) {
        while (this.length < num.length) {
          this.words[this.length++] = 0;
        }
        for (var i = 0; i < num.length; i++) {
          this.words[i] = this.words[i] | num.words[i];
        }
        return this._strip();
      };
      BN.prototype.ior = function ior(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuor(num);
      };
      BN.prototype.or = function or(num) {
        if (this.length > num.length)
          return this.clone().ior(num);
        return num.clone().ior(this);
      };
      BN.prototype.uor = function uor(num) {
        if (this.length > num.length)
          return this.clone().iuor(num);
        return num.clone().iuor(this);
      };
      BN.prototype.iuand = function iuand(num) {
        var b;
        if (this.length > num.length) {
          b = num;
        } else {
          b = this;
        }
        for (var i = 0; i < b.length; i++) {
          this.words[i] = this.words[i] & num.words[i];
        }
        this.length = b.length;
        return this._strip();
      };
      BN.prototype.iand = function iand(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuand(num);
      };
      BN.prototype.and = function and(num) {
        if (this.length > num.length)
          return this.clone().iand(num);
        return num.clone().iand(this);
      };
      BN.prototype.uand = function uand(num) {
        if (this.length > num.length)
          return this.clone().iuand(num);
        return num.clone().iuand(this);
      };
      BN.prototype.iuxor = function iuxor(num) {
        var a;
        var b;
        if (this.length > num.length) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        for (var i = 0; i < b.length; i++) {
          this.words[i] = a.words[i] ^ b.words[i];
        }
        if (this !== a) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        this.length = a.length;
        return this._strip();
      };
      BN.prototype.ixor = function ixor(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuxor(num);
      };
      BN.prototype.xor = function xor(num) {
        if (this.length > num.length)
          return this.clone().ixor(num);
        return num.clone().ixor(this);
      };
      BN.prototype.uxor = function uxor(num) {
        if (this.length > num.length)
          return this.clone().iuxor(num);
        return num.clone().iuxor(this);
      };
      BN.prototype.inotn = function inotn(width) {
        assert(typeof width === "number" && width >= 0);
        var bytesNeeded = Math.ceil(width / 26) | 0;
        var bitsLeft = width % 26;
        this._expand(bytesNeeded);
        if (bitsLeft > 0) {
          bytesNeeded--;
        }
        for (var i = 0; i < bytesNeeded; i++) {
          this.words[i] = ~this.words[i] & 67108863;
        }
        if (bitsLeft > 0) {
          this.words[i] = ~this.words[i] & 67108863 >> 26 - bitsLeft;
        }
        return this._strip();
      };
      BN.prototype.notn = function notn(width) {
        return this.clone().inotn(width);
      };
      BN.prototype.setn = function setn(bit, val) {
        assert(typeof bit === "number" && bit >= 0);
        var off = bit / 26 | 0;
        var wbit = bit % 26;
        this._expand(off + 1);
        if (val) {
          this.words[off] = this.words[off] | 1 << wbit;
        } else {
          this.words[off] = this.words[off] & ~(1 << wbit);
        }
        return this._strip();
      };
      BN.prototype.iadd = function iadd(num) {
        var r;
        if (this.negative !== 0 && num.negative === 0) {
          this.negative = 0;
          r = this.isub(num);
          this.negative ^= 1;
          return this._normSign();
        } else if (this.negative === 0 && num.negative !== 0) {
          num.negative = 0;
          r = this.isub(num);
          num.negative = 1;
          return r._normSign();
        }
        var a, b;
        if (this.length > num.length) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        var carry = 0;
        for (var i = 0; i < b.length; i++) {
          r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
          this.words[i] = r & 67108863;
          carry = r >>> 26;
        }
        for (; carry !== 0 && i < a.length; i++) {
          r = (a.words[i] | 0) + carry;
          this.words[i] = r & 67108863;
          carry = r >>> 26;
        }
        this.length = a.length;
        if (carry !== 0) {
          this.words[this.length] = carry;
          this.length++;
        } else if (a !== this) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        return this;
      };
      BN.prototype.add = function add(num) {
        var res;
        if (num.negative !== 0 && this.negative === 0) {
          num.negative = 0;
          res = this.sub(num);
          num.negative ^= 1;
          return res;
        } else if (num.negative === 0 && this.negative !== 0) {
          this.negative = 0;
          res = num.sub(this);
          this.negative = 1;
          return res;
        }
        if (this.length > num.length)
          return this.clone().iadd(num);
        return num.clone().iadd(this);
      };
      BN.prototype.isub = function isub(num) {
        if (num.negative !== 0) {
          num.negative = 0;
          var r = this.iadd(num);
          num.negative = 1;
          return r._normSign();
        } else if (this.negative !== 0) {
          this.negative = 0;
          this.iadd(num);
          this.negative = 1;
          return this._normSign();
        }
        var cmp = this.cmp(num);
        if (cmp === 0) {
          this.negative = 0;
          this.length = 1;
          this.words[0] = 0;
          return this;
        }
        var a, b;
        if (cmp > 0) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        var carry = 0;
        for (var i = 0; i < b.length; i++) {
          r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
          carry = r >> 26;
          this.words[i] = r & 67108863;
        }
        for (; carry !== 0 && i < a.length; i++) {
          r = (a.words[i] | 0) + carry;
          carry = r >> 26;
          this.words[i] = r & 67108863;
        }
        if (carry === 0 && i < a.length && a !== this) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        this.length = Math.max(this.length, i);
        if (a !== this) {
          this.negative = 1;
        }
        return this._strip();
      };
      BN.prototype.sub = function sub(num) {
        return this.clone().isub(num);
      };
      function smallMulTo(self2, num, out) {
        out.negative = num.negative ^ self2.negative;
        var len = self2.length + num.length | 0;
        out.length = len;
        len = len - 1 | 0;
        var a = self2.words[0] | 0;
        var b = num.words[0] | 0;
        var r = a * b;
        var lo = r & 67108863;
        var carry = r / 67108864 | 0;
        out.words[0] = lo;
        for (var k = 1; k < len; k++) {
          var ncarry = carry >>> 26;
          var rword = carry & 67108863;
          var maxJ = Math.min(k, num.length - 1);
          for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {
            var i = k - j | 0;
            a = self2.words[i] | 0;
            b = num.words[j] | 0;
            r = a * b + rword;
            ncarry += r / 67108864 | 0;
            rword = r & 67108863;
          }
          out.words[k] = rword | 0;
          carry = ncarry | 0;
        }
        if (carry !== 0) {
          out.words[k] = carry | 0;
        } else {
          out.length--;
        }
        return out._strip();
      }
      var comb10MulTo = function comb10MulTo2(self2, num, out) {
        var a = self2.words;
        var b = num.words;
        var o = out.words;
        var c = 0;
        var lo;
        var mid;
        var hi;
        var a0 = a[0] | 0;
        var al0 = a0 & 8191;
        var ah0 = a0 >>> 13;
        var a1 = a[1] | 0;
        var al1 = a1 & 8191;
        var ah1 = a1 >>> 13;
        var a2 = a[2] | 0;
        var al2 = a2 & 8191;
        var ah2 = a2 >>> 13;
        var a3 = a[3] | 0;
        var al3 = a3 & 8191;
        var ah3 = a3 >>> 13;
        var a4 = a[4] | 0;
        var al4 = a4 & 8191;
        var ah4 = a4 >>> 13;
        var a5 = a[5] | 0;
        var al5 = a5 & 8191;
        var ah5 = a5 >>> 13;
        var a6 = a[6] | 0;
        var al6 = a6 & 8191;
        var ah6 = a6 >>> 13;
        var a7 = a[7] | 0;
        var al7 = a7 & 8191;
        var ah7 = a7 >>> 13;
        var a8 = a[8] | 0;
        var al8 = a8 & 8191;
        var ah8 = a8 >>> 13;
        var a9 = a[9] | 0;
        var al9 = a9 & 8191;
        var ah9 = a9 >>> 13;
        var b0 = b[0] | 0;
        var bl0 = b0 & 8191;
        var bh0 = b0 >>> 13;
        var b1 = b[1] | 0;
        var bl1 = b1 & 8191;
        var bh1 = b1 >>> 13;
        var b2 = b[2] | 0;
        var bl2 = b2 & 8191;
        var bh2 = b2 >>> 13;
        var b3 = b[3] | 0;
        var bl3 = b3 & 8191;
        var bh3 = b3 >>> 13;
        var b4 = b[4] | 0;
        var bl4 = b4 & 8191;
        var bh4 = b4 >>> 13;
        var b5 = b[5] | 0;
        var bl5 = b5 & 8191;
        var bh5 = b5 >>> 13;
        var b6 = b[6] | 0;
        var bl6 = b6 & 8191;
        var bh6 = b6 >>> 13;
        var b7 = b[7] | 0;
        var bl7 = b7 & 8191;
        var bh7 = b7 >>> 13;
        var b8 = b[8] | 0;
        var bl8 = b8 & 8191;
        var bh8 = b8 >>> 13;
        var b9 = b[9] | 0;
        var bl9 = b9 & 8191;
        var bh9 = b9 >>> 13;
        out.negative = self2.negative ^ num.negative;
        out.length = 19;
        lo = Math.imul(al0, bl0);
        mid = Math.imul(al0, bh0);
        mid = mid + Math.imul(ah0, bl0) | 0;
        hi = Math.imul(ah0, bh0);
        var w0 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;
        w0 &= 67108863;
        lo = Math.imul(al1, bl0);
        mid = Math.imul(al1, bh0);
        mid = mid + Math.imul(ah1, bl0) | 0;
        hi = Math.imul(ah1, bh0);
        lo = lo + Math.imul(al0, bl1) | 0;
        mid = mid + Math.imul(al0, bh1) | 0;
        mid = mid + Math.imul(ah0, bl1) | 0;
        hi = hi + Math.imul(ah0, bh1) | 0;
        var w1 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;
        w1 &= 67108863;
        lo = Math.imul(al2, bl0);
        mid = Math.imul(al2, bh0);
        mid = mid + Math.imul(ah2, bl0) | 0;
        hi = Math.imul(ah2, bh0);
        lo = lo + Math.imul(al1, bl1) | 0;
        mid = mid + Math.imul(al1, bh1) | 0;
        mid = mid + Math.imul(ah1, bl1) | 0;
        hi = hi + Math.imul(ah1, bh1) | 0;
        lo = lo + Math.imul(al0, bl2) | 0;
        mid = mid + Math.imul(al0, bh2) | 0;
        mid = mid + Math.imul(ah0, bl2) | 0;
        hi = hi + Math.imul(ah0, bh2) | 0;
        var w2 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;
        w2 &= 67108863;
        lo = Math.imul(al3, bl0);
        mid = Math.imul(al3, bh0);
        mid = mid + Math.imul(ah3, bl0) | 0;
        hi = Math.imul(ah3, bh0);
        lo = lo + Math.imul(al2, bl1) | 0;
        mid = mid + Math.imul(al2, bh1) | 0;
        mid = mid + Math.imul(ah2, bl1) | 0;
        hi = hi + Math.imul(ah2, bh1) | 0;
        lo = lo + Math.imul(al1, bl2) | 0;
        mid = mid + Math.imul(al1, bh2) | 0;
        mid = mid + Math.imul(ah1, bl2) | 0;
        hi = hi + Math.imul(ah1, bh2) | 0;
        lo = lo + Math.imul(al0, bl3) | 0;
        mid = mid + Math.imul(al0, bh3) | 0;
        mid = mid + Math.imul(ah0, bl3) | 0;
        hi = hi + Math.imul(ah0, bh3) | 0;
        var w3 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;
        w3 &= 67108863;
        lo = Math.imul(al4, bl0);
        mid = Math.imul(al4, bh0);
        mid = mid + Math.imul(ah4, bl0) | 0;
        hi = Math.imul(ah4, bh0);
        lo = lo + Math.imul(al3, bl1) | 0;
        mid = mid + Math.imul(al3, bh1) | 0;
        mid = mid + Math.imul(ah3, bl1) | 0;
        hi = hi + Math.imul(ah3, bh1) | 0;
        lo = lo + Math.imul(al2, bl2) | 0;
        mid = mid + Math.imul(al2, bh2) | 0;
        mid = mid + Math.imul(ah2, bl2) | 0;
        hi = hi + Math.imul(ah2, bh2) | 0;
        lo = lo + Math.imul(al1, bl3) | 0;
        mid = mid + Math.imul(al1, bh3) | 0;
        mid = mid + Math.imul(ah1, bl3) | 0;
        hi = hi + Math.imul(ah1, bh3) | 0;
        lo = lo + Math.imul(al0, bl4) | 0;
        mid = mid + Math.imul(al0, bh4) | 0;
        mid = mid + Math.imul(ah0, bl4) | 0;
        hi = hi + Math.imul(ah0, bh4) | 0;
        var w4 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;
        w4 &= 67108863;
        lo = Math.imul(al5, bl0);
        mid = Math.imul(al5, bh0);
        mid = mid + Math.imul(ah5, bl0) | 0;
        hi = Math.imul(ah5, bh0);
        lo = lo + Math.imul(al4, bl1) | 0;
        mid = mid + Math.imul(al4, bh1) | 0;
        mid = mid + Math.imul(ah4, bl1) | 0;
        hi = hi + Math.imul(ah4, bh1) | 0;
        lo = lo + Math.imul(al3, bl2) | 0;
        mid = mid + Math.imul(al3, bh2) | 0;
        mid = mid + Math.imul(ah3, bl2) | 0;
        hi = hi + Math.imul(ah3, bh2) | 0;
        lo = lo + Math.imul(al2, bl3) | 0;
        mid = mid + Math.imul(al2, bh3) | 0;
        mid = mid + Math.imul(ah2, bl3) | 0;
        hi = hi + Math.imul(ah2, bh3) | 0;
        lo = lo + Math.imul(al1, bl4) | 0;
        mid = mid + Math.imul(al1, bh4) | 0;
        mid = mid + Math.imul(ah1, bl4) | 0;
        hi = hi + Math.imul(ah1, bh4) | 0;
        lo = lo + Math.imul(al0, bl5) | 0;
        mid = mid + Math.imul(al0, bh5) | 0;
        mid = mid + Math.imul(ah0, bl5) | 0;
        hi = hi + Math.imul(ah0, bh5) | 0;
        var w5 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;
        w5 &= 67108863;
        lo = Math.imul(al6, bl0);
        mid = Math.imul(al6, bh0);
        mid = mid + Math.imul(ah6, bl0) | 0;
        hi = Math.imul(ah6, bh0);
        lo = lo + Math.imul(al5, bl1) | 0;
        mid = mid + Math.imul(al5, bh1) | 0;
        mid = mid + Math.imul(ah5, bl1) | 0;
        hi = hi + Math.imul(ah5, bh1) | 0;
        lo = lo + Math.imul(al4, bl2) | 0;
        mid = mid + Math.imul(al4, bh2) | 0;
        mid = mid + Math.imul(ah4, bl2) | 0;
        hi = hi + Math.imul(ah4, bh2) | 0;
        lo = lo + Math.imul(al3, bl3) | 0;
        mid = mid + Math.imul(al3, bh3) | 0;
        mid = mid + Math.imul(ah3, bl3) | 0;
        hi = hi + Math.imul(ah3, bh3) | 0;
        lo = lo + Math.imul(al2, bl4) | 0;
        mid = mid + Math.imul(al2, bh4) | 0;
        mid = mid + Math.imul(ah2, bl4) | 0;
        hi = hi + Math.imul(ah2, bh4) | 0;
        lo = lo + Math.imul(al1, bl5) | 0;
        mid = mid + Math.imul(al1, bh5) | 0;
        mid = mid + Math.imul(ah1, bl5) | 0;
        hi = hi + Math.imul(ah1, bh5) | 0;
        lo = lo + Math.imul(al0, bl6) | 0;
        mid = mid + Math.imul(al0, bh6) | 0;
        mid = mid + Math.imul(ah0, bl6) | 0;
        hi = hi + Math.imul(ah0, bh6) | 0;
        var w6 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;
        w6 &= 67108863;
        lo = Math.imul(al7, bl0);
        mid = Math.imul(al7, bh0);
        mid = mid + Math.imul(ah7, bl0) | 0;
        hi = Math.imul(ah7, bh0);
        lo = lo + Math.imul(al6, bl1) | 0;
        mid = mid + Math.imul(al6, bh1) | 0;
        mid = mid + Math.imul(ah6, bl1) | 0;
        hi = hi + Math.imul(ah6, bh1) | 0;
        lo = lo + Math.imul(al5, bl2) | 0;
        mid = mid + Math.imul(al5, bh2) | 0;
        mid = mid + Math.imul(ah5, bl2) | 0;
        hi = hi + Math.imul(ah5, bh2) | 0;
        lo = lo + Math.imul(al4, bl3) | 0;
        mid = mid + Math.imul(al4, bh3) | 0;
        mid = mid + Math.imul(ah4, bl3) | 0;
        hi = hi + Math.imul(ah4, bh3) | 0;
        lo = lo + Math.imul(al3, bl4) | 0;
        mid = mid + Math.imul(al3, bh4) | 0;
        mid = mid + Math.imul(ah3, bl4) | 0;
        hi = hi + Math.imul(ah3, bh4) | 0;
        lo = lo + Math.imul(al2, bl5) | 0;
        mid = mid + Math.imul(al2, bh5) | 0;
        mid = mid + Math.imul(ah2, bl5) | 0;
        hi = hi + Math.imul(ah2, bh5) | 0;
        lo = lo + Math.imul(al1, bl6) | 0;
        mid = mid + Math.imul(al1, bh6) | 0;
        mid = mid + Math.imul(ah1, bl6) | 0;
        hi = hi + Math.imul(ah1, bh6) | 0;
        lo = lo + Math.imul(al0, bl7) | 0;
        mid = mid + Math.imul(al0, bh7) | 0;
        mid = mid + Math.imul(ah0, bl7) | 0;
        hi = hi + Math.imul(ah0, bh7) | 0;
        var w7 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;
        w7 &= 67108863;
        lo = Math.imul(al8, bl0);
        mid = Math.imul(al8, bh0);
        mid = mid + Math.imul(ah8, bl0) | 0;
        hi = Math.imul(ah8, bh0);
        lo = lo + Math.imul(al7, bl1) | 0;
        mid = mid + Math.imul(al7, bh1) | 0;
        mid = mid + Math.imul(ah7, bl1) | 0;
        hi = hi + Math.imul(ah7, bh1) | 0;
        lo = lo + Math.imul(al6, bl2) | 0;
        mid = mid + Math.imul(al6, bh2) | 0;
        mid = mid + Math.imul(ah6, bl2) | 0;
        hi = hi + Math.imul(ah6, bh2) | 0;
        lo = lo + Math.imul(al5, bl3) | 0;
        mid = mid + Math.imul(al5, bh3) | 0;
        mid = mid + Math.imul(ah5, bl3) | 0;
        hi = hi + Math.imul(ah5, bh3) | 0;
        lo = lo + Math.imul(al4, bl4) | 0;
        mid = mid + Math.imul(al4, bh4) | 0;
        mid = mid + Math.imul(ah4, bl4) | 0;
        hi = hi + Math.imul(ah4, bh4) | 0;
        lo = lo + Math.imul(al3, bl5) | 0;
        mid = mid + Math.imul(al3, bh5) | 0;
        mid = mid + Math.imul(ah3, bl5) | 0;
        hi = hi + Math.imul(ah3, bh5) | 0;
        lo = lo + Math.imul(al2, bl6) | 0;
        mid = mid + Math.imul(al2, bh6) | 0;
        mid = mid + Math.imul(ah2, bl6) | 0;
        hi = hi + Math.imul(ah2, bh6) | 0;
        lo = lo + Math.imul(al1, bl7) | 0;
        mid = mid + Math.imul(al1, bh7) | 0;
        mid = mid + Math.imul(ah1, bl7) | 0;
        hi = hi + Math.imul(ah1, bh7) | 0;
        lo = lo + Math.imul(al0, bl8) | 0;
        mid = mid + Math.imul(al0, bh8) | 0;
        mid = mid + Math.imul(ah0, bl8) | 0;
        hi = hi + Math.imul(ah0, bh8) | 0;
        var w8 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;
        w8 &= 67108863;
        lo = Math.imul(al9, bl0);
        mid = Math.imul(al9, bh0);
        mid = mid + Math.imul(ah9, bl0) | 0;
        hi = Math.imul(ah9, bh0);
        lo = lo + Math.imul(al8, bl1) | 0;
        mid = mid + Math.imul(al8, bh1) | 0;
        mid = mid + Math.imul(ah8, bl1) | 0;
        hi = hi + Math.imul(ah8, bh1) | 0;
        lo = lo + Math.imul(al7, bl2) | 0;
        mid = mid + Math.imul(al7, bh2) | 0;
        mid = mid + Math.imul(ah7, bl2) | 0;
        hi = hi + Math.imul(ah7, bh2) | 0;
        lo = lo + Math.imul(al6, bl3) | 0;
        mid = mid + Math.imul(al6, bh3) | 0;
        mid = mid + Math.imul(ah6, bl3) | 0;
        hi = hi + Math.imul(ah6, bh3) | 0;
        lo = lo + Math.imul(al5, bl4) | 0;
        mid = mid + Math.imul(al5, bh4) | 0;
        mid = mid + Math.imul(ah5, bl4) | 0;
        hi = hi + Math.imul(ah5, bh4) | 0;
        lo = lo + Math.imul(al4, bl5) | 0;
        mid = mid + Math.imul(al4, bh5) | 0;
        mid = mid + Math.imul(ah4, bl5) | 0;
        hi = hi + Math.imul(ah4, bh5) | 0;
        lo = lo + Math.imul(al3, bl6) | 0;
        mid = mid + Math.imul(al3, bh6) | 0;
        mid = mid + Math.imul(ah3, bl6) | 0;
        hi = hi + Math.imul(ah3, bh6) | 0;
        lo = lo + Math.imul(al2, bl7) | 0;
        mid = mid + Math.imul(al2, bh7) | 0;
        mid = mid + Math.imul(ah2, bl7) | 0;
        hi = hi + Math.imul(ah2, bh7) | 0;
        lo = lo + Math.imul(al1, bl8) | 0;
        mid = mid + Math.imul(al1, bh8) | 0;
        mid = mid + Math.imul(ah1, bl8) | 0;
        hi = hi + Math.imul(ah1, bh8) | 0;
        lo = lo + Math.imul(al0, bl9) | 0;
        mid = mid + Math.imul(al0, bh9) | 0;
        mid = mid + Math.imul(ah0, bl9) | 0;
        hi = hi + Math.imul(ah0, bh9) | 0;
        var w9 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;
        w9 &= 67108863;
        lo = Math.imul(al9, bl1);
        mid = Math.imul(al9, bh1);
        mid = mid + Math.imul(ah9, bl1) | 0;
        hi = Math.imul(ah9, bh1);
        lo = lo + Math.imul(al8, bl2) | 0;
        mid = mid + Math.imul(al8, bh2) | 0;
        mid = mid + Math.imul(ah8, bl2) | 0;
        hi = hi + Math.imul(ah8, bh2) | 0;
        lo = lo + Math.imul(al7, bl3) | 0;
        mid = mid + Math.imul(al7, bh3) | 0;
        mid = mid + Math.imul(ah7, bl3) | 0;
        hi = hi + Math.imul(ah7, bh3) | 0;
        lo = lo + Math.imul(al6, bl4) | 0;
        mid = mid + Math.imul(al6, bh4) | 0;
        mid = mid + Math.imul(ah6, bl4) | 0;
        hi = hi + Math.imul(ah6, bh4) | 0;
        lo = lo + Math.imul(al5, bl5) | 0;
        mid = mid + Math.imul(al5, bh5) | 0;
        mid = mid + Math.imul(ah5, bl5) | 0;
        hi = hi + Math.imul(ah5, bh5) | 0;
        lo = lo + Math.imul(al4, bl6) | 0;
        mid = mid + Math.imul(al4, bh6) | 0;
        mid = mid + Math.imul(ah4, bl6) | 0;
        hi = hi + Math.imul(ah4, bh6) | 0;
        lo = lo + Math.imul(al3, bl7) | 0;
        mid = mid + Math.imul(al3, bh7) | 0;
        mid = mid + Math.imul(ah3, bl7) | 0;
        hi = hi + Math.imul(ah3, bh7) | 0;
        lo = lo + Math.imul(al2, bl8) | 0;
        mid = mid + Math.imul(al2, bh8) | 0;
        mid = mid + Math.imul(ah2, bl8) | 0;
        hi = hi + Math.imul(ah2, bh8) | 0;
        lo = lo + Math.imul(al1, bl9) | 0;
        mid = mid + Math.imul(al1, bh9) | 0;
        mid = mid + Math.imul(ah1, bl9) | 0;
        hi = hi + Math.imul(ah1, bh9) | 0;
        var w10 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;
        w10 &= 67108863;
        lo = Math.imul(al9, bl2);
        mid = Math.imul(al9, bh2);
        mid = mid + Math.imul(ah9, bl2) | 0;
        hi = Math.imul(ah9, bh2);
        lo = lo + Math.imul(al8, bl3) | 0;
        mid = mid + Math.imul(al8, bh3) | 0;
        mid = mid + Math.imul(ah8, bl3) | 0;
        hi = hi + Math.imul(ah8, bh3) | 0;
        lo = lo + Math.imul(al7, bl4) | 0;
        mid = mid + Math.imul(al7, bh4) | 0;
        mid = mid + Math.imul(ah7, bl4) | 0;
        hi = hi + Math.imul(ah7, bh4) | 0;
        lo = lo + Math.imul(al6, bl5) | 0;
        mid = mid + Math.imul(al6, bh5) | 0;
        mid = mid + Math.imul(ah6, bl5) | 0;
        hi = hi + Math.imul(ah6, bh5) | 0;
        lo = lo + Math.imul(al5, bl6) | 0;
        mid = mid + Math.imul(al5, bh6) | 0;
        mid = mid + Math.imul(ah5, bl6) | 0;
        hi = hi + Math.imul(ah5, bh6) | 0;
        lo = lo + Math.imul(al4, bl7) | 0;
        mid = mid + Math.imul(al4, bh7) | 0;
        mid = mid + Math.imul(ah4, bl7) | 0;
        hi = hi + Math.imul(ah4, bh7) | 0;
        lo = lo + Math.imul(al3, bl8) | 0;
        mid = mid + Math.imul(al3, bh8) | 0;
        mid = mid + Math.imul(ah3, bl8) | 0;
        hi = hi + Math.imul(ah3, bh8) | 0;
        lo = lo + Math.imul(al2, bl9) | 0;
        mid = mid + Math.imul(al2, bh9) | 0;
        mid = mid + Math.imul(ah2, bl9) | 0;
        hi = hi + Math.imul(ah2, bh9) | 0;
        var w11 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;
        w11 &= 67108863;
        lo = Math.imul(al9, bl3);
        mid = Math.imul(al9, bh3);
        mid = mid + Math.imul(ah9, bl3) | 0;
        hi = Math.imul(ah9, bh3);
        lo = lo + Math.imul(al8, bl4) | 0;
        mid = mid + Math.imul(al8, bh4) | 0;
        mid = mid + Math.imul(ah8, bl4) | 0;
        hi = hi + Math.imul(ah8, bh4) | 0;
        lo = lo + Math.imul(al7, bl5) | 0;
        mid = mid + Math.imul(al7, bh5) | 0;
        mid = mid + Math.imul(ah7, bl5) | 0;
        hi = hi + Math.imul(ah7, bh5) | 0;
        lo = lo + Math.imul(al6, bl6) | 0;
        mid = mid + Math.imul(al6, bh6) | 0;
        mid = mid + Math.imul(ah6, bl6) | 0;
        hi = hi + Math.imul(ah6, bh6) | 0;
        lo = lo + Math.imul(al5, bl7) | 0;
        mid = mid + Math.imul(al5, bh7) | 0;
        mid = mid + Math.imul(ah5, bl7) | 0;
        hi = hi + Math.imul(ah5, bh7) | 0;
        lo = lo + Math.imul(al4, bl8) | 0;
        mid = mid + Math.imul(al4, bh8) | 0;
        mid = mid + Math.imul(ah4, bl8) | 0;
        hi = hi + Math.imul(ah4, bh8) | 0;
        lo = lo + Math.imul(al3, bl9) | 0;
        mid = mid + Math.imul(al3, bh9) | 0;
        mid = mid + Math.imul(ah3, bl9) | 0;
        hi = hi + Math.imul(ah3, bh9) | 0;
        var w12 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;
        w12 &= 67108863;
        lo = Math.imul(al9, bl4);
        mid = Math.imul(al9, bh4);
        mid = mid + Math.imul(ah9, bl4) | 0;
        hi = Math.imul(ah9, bh4);
        lo = lo + Math.imul(al8, bl5) | 0;
        mid = mid + Math.imul(al8, bh5) | 0;
        mid = mid + Math.imul(ah8, bl5) | 0;
        hi = hi + Math.imul(ah8, bh5) | 0;
        lo = lo + Math.imul(al7, bl6) | 0;
        mid = mid + Math.imul(al7, bh6) | 0;
        mid = mid + Math.imul(ah7, bl6) | 0;
        hi = hi + Math.imul(ah7, bh6) | 0;
        lo = lo + Math.imul(al6, bl7) | 0;
        mid = mid + Math.imul(al6, bh7) | 0;
        mid = mid + Math.imul(ah6, bl7) | 0;
        hi = hi + Math.imul(ah6, bh7) | 0;
        lo = lo + Math.imul(al5, bl8) | 0;
        mid = mid + Math.imul(al5, bh8) | 0;
        mid = mid + Math.imul(ah5, bl8) | 0;
        hi = hi + Math.imul(ah5, bh8) | 0;
        lo = lo + Math.imul(al4, bl9) | 0;
        mid = mid + Math.imul(al4, bh9) | 0;
        mid = mid + Math.imul(ah4, bl9) | 0;
        hi = hi + Math.imul(ah4, bh9) | 0;
        var w13 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;
        w13 &= 67108863;
        lo = Math.imul(al9, bl5);
        mid = Math.imul(al9, bh5);
        mid = mid + Math.imul(ah9, bl5) | 0;
        hi = Math.imul(ah9, bh5);
        lo = lo + Math.imul(al8, bl6) | 0;
        mid = mid + Math.imul(al8, bh6) | 0;
        mid = mid + Math.imul(ah8, bl6) | 0;
        hi = hi + Math.imul(ah8, bh6) | 0;
        lo = lo + Math.imul(al7, bl7) | 0;
        mid = mid + Math.imul(al7, bh7) | 0;
        mid = mid + Math.imul(ah7, bl7) | 0;
        hi = hi + Math.imul(ah7, bh7) | 0;
        lo = lo + Math.imul(al6, bl8) | 0;
        mid = mid + Math.imul(al6, bh8) | 0;
        mid = mid + Math.imul(ah6, bl8) | 0;
        hi = hi + Math.imul(ah6, bh8) | 0;
        lo = lo + Math.imul(al5, bl9) | 0;
        mid = mid + Math.imul(al5, bh9) | 0;
        mid = mid + Math.imul(ah5, bl9) | 0;
        hi = hi + Math.imul(ah5, bh9) | 0;
        var w14 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;
        w14 &= 67108863;
        lo = Math.imul(al9, bl6);
        mid = Math.imul(al9, bh6);
        mid = mid + Math.imul(ah9, bl6) | 0;
        hi = Math.imul(ah9, bh6);
        lo = lo + Math.imul(al8, bl7) | 0;
        mid = mid + Math.imul(al8, bh7) | 0;
        mid = mid + Math.imul(ah8, bl7) | 0;
        hi = hi + Math.imul(ah8, bh7) | 0;
        lo = lo + Math.imul(al7, bl8) | 0;
        mid = mid + Math.imul(al7, bh8) | 0;
        mid = mid + Math.imul(ah7, bl8) | 0;
        hi = hi + Math.imul(ah7, bh8) | 0;
        lo = lo + Math.imul(al6, bl9) | 0;
        mid = mid + Math.imul(al6, bh9) | 0;
        mid = mid + Math.imul(ah6, bl9) | 0;
        hi = hi + Math.imul(ah6, bh9) | 0;
        var w15 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;
        w15 &= 67108863;
        lo = Math.imul(al9, bl7);
        mid = Math.imul(al9, bh7);
        mid = mid + Math.imul(ah9, bl7) | 0;
        hi = Math.imul(ah9, bh7);
        lo = lo + Math.imul(al8, bl8) | 0;
        mid = mid + Math.imul(al8, bh8) | 0;
        mid = mid + Math.imul(ah8, bl8) | 0;
        hi = hi + Math.imul(ah8, bh8) | 0;
        lo = lo + Math.imul(al7, bl9) | 0;
        mid = mid + Math.imul(al7, bh9) | 0;
        mid = mid + Math.imul(ah7, bl9) | 0;
        hi = hi + Math.imul(ah7, bh9) | 0;
        var w16 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;
        w16 &= 67108863;
        lo = Math.imul(al9, bl8);
        mid = Math.imul(al9, bh8);
        mid = mid + Math.imul(ah9, bl8) | 0;
        hi = Math.imul(ah9, bh8);
        lo = lo + Math.imul(al8, bl9) | 0;
        mid = mid + Math.imul(al8, bh9) | 0;
        mid = mid + Math.imul(ah8, bl9) | 0;
        hi = hi + Math.imul(ah8, bh9) | 0;
        var w17 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;
        w17 &= 67108863;
        lo = Math.imul(al9, bl9);
        mid = Math.imul(al9, bh9);
        mid = mid + Math.imul(ah9, bl9) | 0;
        hi = Math.imul(ah9, bh9);
        var w18 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;
        w18 &= 67108863;
        o[0] = w0;
        o[1] = w1;
        o[2] = w2;
        o[3] = w3;
        o[4] = w4;
        o[5] = w5;
        o[6] = w6;
        o[7] = w7;
        o[8] = w8;
        o[9] = w9;
        o[10] = w10;
        o[11] = w11;
        o[12] = w12;
        o[13] = w13;
        o[14] = w14;
        o[15] = w15;
        o[16] = w16;
        o[17] = w17;
        o[18] = w18;
        if (c !== 0) {
          o[19] = c;
          out.length++;
        }
        return out;
      };
      if (!Math.imul) {
        comb10MulTo = smallMulTo;
      }
      function bigMulTo(self2, num, out) {
        out.negative = num.negative ^ self2.negative;
        out.length = self2.length + num.length;
        var carry = 0;
        var hncarry = 0;
        for (var k = 0; k < out.length - 1; k++) {
          var ncarry = hncarry;
          hncarry = 0;
          var rword = carry & 67108863;
          var maxJ = Math.min(k, num.length - 1);
          for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {
            var i = k - j;
            var a = self2.words[i] | 0;
            var b = num.words[j] | 0;
            var r = a * b;
            var lo = r & 67108863;
            ncarry = ncarry + (r / 67108864 | 0) | 0;
            lo = lo + rword | 0;
            rword = lo & 67108863;
            ncarry = ncarry + (lo >>> 26) | 0;
            hncarry += ncarry >>> 26;
            ncarry &= 67108863;
          }
          out.words[k] = rword;
          carry = ncarry;
          ncarry = hncarry;
        }
        if (carry !== 0) {
          out.words[k] = carry;
        } else {
          out.length--;
        }
        return out._strip();
      }
      function jumboMulTo(self2, num, out) {
        return bigMulTo(self2, num, out);
      }
      BN.prototype.mulTo = function mulTo(num, out) {
        var res;
        var len = this.length + num.length;
        if (this.length === 10 && num.length === 10) {
          res = comb10MulTo(this, num, out);
        } else if (len < 63) {
          res = smallMulTo(this, num, out);
        } else if (len < 1024) {
          res = bigMulTo(this, num, out);
        } else {
          res = jumboMulTo(this, num, out);
        }
        return res;
      };
      function FFTM(x, y) {
        this.x = x;
        this.y = y;
      }
      FFTM.prototype.makeRBT = function makeRBT(N) {
        var t = new Array(N);
        var l = BN.prototype._countBits(N) - 1;
        for (var i = 0; i < N; i++) {
          t[i] = this.revBin(i, l, N);
        }
        return t;
      };
      FFTM.prototype.revBin = function revBin(x, l, N) {
        if (x === 0 || x === N - 1)
          return x;
        var rb = 0;
        for (var i = 0; i < l; i++) {
          rb |= (x & 1) << l - i - 1;
          x >>= 1;
        }
        return rb;
      };
      FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {
        for (var i = 0; i < N; i++) {
          rtws[i] = rws[rbt[i]];
          itws[i] = iws[rbt[i]];
        }
      };
      FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {
        this.permute(rbt, rws, iws, rtws, itws, N);
        for (var s = 1; s < N; s <<= 1) {
          var l = s << 1;
          var rtwdf = Math.cos(2 * Math.PI / l);
          var itwdf = Math.sin(2 * Math.PI / l);
          for (var p = 0; p < N; p += l) {
            var rtwdf_ = rtwdf;
            var itwdf_ = itwdf;
            for (var j = 0; j < s; j++) {
              var re = rtws[p + j];
              var ie = itws[p + j];
              var ro = rtws[p + j + s];
              var io = itws[p + j + s];
              var rx = rtwdf_ * ro - itwdf_ * io;
              io = rtwdf_ * io + itwdf_ * ro;
              ro = rx;
              rtws[p + j] = re + ro;
              itws[p + j] = ie + io;
              rtws[p + j + s] = re - ro;
              itws[p + j + s] = ie - io;
              if (j !== l) {
                rx = rtwdf * rtwdf_ - itwdf * itwdf_;
                itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                rtwdf_ = rx;
              }
            }
          }
        }
      };
      FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
        var N = Math.max(m, n) | 1;
        var odd = N & 1;
        var i = 0;
        for (N = N / 2 | 0; N; N = N >>> 1) {
          i++;
        }
        return 1 << i + 1 + odd;
      };
      FFTM.prototype.conjugate = function conjugate(rws, iws, N) {
        if (N <= 1)
          return;
        for (var i = 0; i < N / 2; i++) {
          var t = rws[i];
          rws[i] = rws[N - i - 1];
          rws[N - i - 1] = t;
          t = iws[i];
          iws[i] = -iws[N - i - 1];
          iws[N - i - 1] = -t;
        }
      };
      FFTM.prototype.normalize13b = function normalize13b(ws, N) {
        var carry = 0;
        for (var i = 0; i < N / 2; i++) {
          var w = Math.round(ws[2 * i + 1] / N) * 8192 + Math.round(ws[2 * i] / N) + carry;
          ws[i] = w & 67108863;
          if (w < 67108864) {
            carry = 0;
          } else {
            carry = w / 67108864 | 0;
          }
        }
        return ws;
      };
      FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {
        var carry = 0;
        for (var i = 0; i < len; i++) {
          carry = carry + (ws[i] | 0);
          rws[2 * i] = carry & 8191;
          carry = carry >>> 13;
          rws[2 * i + 1] = carry & 8191;
          carry = carry >>> 13;
        }
        for (i = 2 * len; i < N; ++i) {
          rws[i] = 0;
        }
        assert(carry === 0);
        assert((carry & ~8191) === 0);
      };
      FFTM.prototype.stub = function stub(N) {
        var ph = new Array(N);
        for (var i = 0; i < N; i++) {
          ph[i] = 0;
        }
        return ph;
      };
      FFTM.prototype.mulp = function mulp(x, y, out) {
        var N = 2 * this.guessLen13b(x.length, y.length);
        var rbt = this.makeRBT(N);
        var _ = this.stub(N);
        var rws = new Array(N);
        var rwst = new Array(N);
        var iwst = new Array(N);
        var nrws = new Array(N);
        var nrwst = new Array(N);
        var niwst = new Array(N);
        var rmws = out.words;
        rmws.length = N;
        this.convert13b(x.words, x.length, rws, N);
        this.convert13b(y.words, y.length, nrws, N);
        this.transform(rws, _, rwst, iwst, N, rbt);
        this.transform(nrws, _, nrwst, niwst, N, rbt);
        for (var i = 0; i < N; i++) {
          var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
          iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
          rwst[i] = rx;
        }
        this.conjugate(rwst, iwst, N);
        this.transform(rwst, iwst, rmws, _, N, rbt);
        this.conjugate(rmws, _, N);
        this.normalize13b(rmws, N);
        out.negative = x.negative ^ y.negative;
        out.length = x.length + y.length;
        return out._strip();
      };
      BN.prototype.mul = function mul(num) {
        var out = new BN(null);
        out.words = new Array(this.length + num.length);
        return this.mulTo(num, out);
      };
      BN.prototype.mulf = function mulf(num) {
        var out = new BN(null);
        out.words = new Array(this.length + num.length);
        return jumboMulTo(this, num, out);
      };
      BN.prototype.imul = function imul(num) {
        return this.clone().mulTo(num, this);
      };
      BN.prototype.imuln = function imuln(num) {
        var isNegNum = num < 0;
        if (isNegNum)
          num = -num;
        assert(typeof num === "number");
        assert(num < 67108864);
        var carry = 0;
        for (var i = 0; i < this.length; i++) {
          var w = (this.words[i] | 0) * num;
          var lo = (w & 67108863) + (carry & 67108863);
          carry >>= 26;
          carry += w / 67108864 | 0;
          carry += lo >>> 26;
          this.words[i] = lo & 67108863;
        }
        if (carry !== 0) {
          this.words[i] = carry;
          this.length++;
        }
        return isNegNum ? this.ineg() : this;
      };
      BN.prototype.muln = function muln(num) {
        return this.clone().imuln(num);
      };
      BN.prototype.sqr = function sqr() {
        return this.mul(this);
      };
      BN.prototype.isqr = function isqr() {
        return this.imul(this.clone());
      };
      BN.prototype.pow = function pow(num) {
        var w = toBitArray(num);
        if (w.length === 0)
          return new BN(1);
        var res = this;
        for (var i = 0; i < w.length; i++, res = res.sqr()) {
          if (w[i] !== 0)
            break;
        }
        if (++i < w.length) {
          for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
            if (w[i] === 0)
              continue;
            res = res.mul(q);
          }
        }
        return res;
      };
      BN.prototype.iushln = function iushln(bits) {
        assert(typeof bits === "number" && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        var carryMask = 67108863 >>> 26 - r << 26 - r;
        var i;
        if (r !== 0) {
          var carry = 0;
          for (i = 0; i < this.length; i++) {
            var newCarry = this.words[i] & carryMask;
            var c = (this.words[i] | 0) - newCarry << r;
            this.words[i] = c | carry;
            carry = newCarry >>> 26 - r;
          }
          if (carry) {
            this.words[i] = carry;
            this.length++;
          }
        }
        if (s !== 0) {
          for (i = this.length - 1; i >= 0; i--) {
            this.words[i + s] = this.words[i];
          }
          for (i = 0; i < s; i++) {
            this.words[i] = 0;
          }
          this.length += s;
        }
        return this._strip();
      };
      BN.prototype.ishln = function ishln(bits) {
        assert(this.negative === 0);
        return this.iushln(bits);
      };
      BN.prototype.iushrn = function iushrn(bits, hint, extended) {
        assert(typeof bits === "number" && bits >= 0);
        var h;
        if (hint) {
          h = (hint - hint % 26) / 26;
        } else {
          h = 0;
        }
        var r = bits % 26;
        var s = Math.min((bits - r) / 26, this.length);
        var mask = 67108863 ^ 67108863 >>> r << r;
        var maskedWords = extended;
        h -= s;
        h = Math.max(0, h);
        if (maskedWords) {
          for (var i = 0; i < s; i++) {
            maskedWords.words[i] = this.words[i];
          }
          maskedWords.length = s;
        }
        if (s === 0) {
        } else if (this.length > s) {
          this.length -= s;
          for (i = 0; i < this.length; i++) {
            this.words[i] = this.words[i + s];
          }
        } else {
          this.words[0] = 0;
          this.length = 1;
        }
        var carry = 0;
        for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
          var word = this.words[i] | 0;
          this.words[i] = carry << 26 - r | word >>> r;
          carry = word & mask;
        }
        if (maskedWords && carry !== 0) {
          maskedWords.words[maskedWords.length++] = carry;
        }
        if (this.length === 0) {
          this.words[0] = 0;
          this.length = 1;
        }
        return this._strip();
      };
      BN.prototype.ishrn = function ishrn(bits, hint, extended) {
        assert(this.negative === 0);
        return this.iushrn(bits, hint, extended);
      };
      BN.prototype.shln = function shln(bits) {
        return this.clone().ishln(bits);
      };
      BN.prototype.ushln = function ushln(bits) {
        return this.clone().iushln(bits);
      };
      BN.prototype.shrn = function shrn(bits) {
        return this.clone().ishrn(bits);
      };
      BN.prototype.ushrn = function ushrn(bits) {
        return this.clone().iushrn(bits);
      };
      BN.prototype.testn = function testn(bit) {
        assert(typeof bit === "number" && bit >= 0);
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        if (this.length <= s)
          return false;
        var w = this.words[s];
        return !!(w & q);
      };
      BN.prototype.imaskn = function imaskn(bits) {
        assert(typeof bits === "number" && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        assert(this.negative === 0, "imaskn works only with positive numbers");
        if (this.length <= s) {
          return this;
        }
        if (r !== 0) {
          s++;
        }
        this.length = Math.min(s, this.length);
        if (r !== 0) {
          var mask = 67108863 ^ 67108863 >>> r << r;
          this.words[this.length - 1] &= mask;
        }
        return this._strip();
      };
      BN.prototype.maskn = function maskn(bits) {
        return this.clone().imaskn(bits);
      };
      BN.prototype.iaddn = function iaddn(num) {
        assert(typeof num === "number");
        assert(num < 67108864);
        if (num < 0)
          return this.isubn(-num);
        if (this.negative !== 0) {
          if (this.length === 1 && (this.words[0] | 0) <= num) {
            this.words[0] = num - (this.words[0] | 0);
            this.negative = 0;
            return this;
          }
          this.negative = 0;
          this.isubn(num);
          this.negative = 1;
          return this;
        }
        return this._iaddn(num);
      };
      BN.prototype._iaddn = function _iaddn(num) {
        this.words[0] += num;
        for (var i = 0; i < this.length && this.words[i] >= 67108864; i++) {
          this.words[i] -= 67108864;
          if (i === this.length - 1) {
            this.words[i + 1] = 1;
          } else {
            this.words[i + 1]++;
          }
        }
        this.length = Math.max(this.length, i + 1);
        return this;
      };
      BN.prototype.isubn = function isubn(num) {
        assert(typeof num === "number");
        assert(num < 67108864);
        if (num < 0)
          return this.iaddn(-num);
        if (this.negative !== 0) {
          this.negative = 0;
          this.iaddn(num);
          this.negative = 1;
          return this;
        }
        this.words[0] -= num;
        if (this.length === 1 && this.words[0] < 0) {
          this.words[0] = -this.words[0];
          this.negative = 1;
        } else {
          for (var i = 0; i < this.length && this.words[i] < 0; i++) {
            this.words[i] += 67108864;
            this.words[i + 1] -= 1;
          }
        }
        return this._strip();
      };
      BN.prototype.addn = function addn(num) {
        return this.clone().iaddn(num);
      };
      BN.prototype.subn = function subn(num) {
        return this.clone().isubn(num);
      };
      BN.prototype.iabs = function iabs() {
        this.negative = 0;
        return this;
      };
      BN.prototype.abs = function abs() {
        return this.clone().iabs();
      };
      BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {
        var len = num.length + shift;
        var i;
        this._expand(len);
        var w;
        var carry = 0;
        for (i = 0; i < num.length; i++) {
          w = (this.words[i + shift] | 0) + carry;
          var right = (num.words[i] | 0) * mul;
          w -= right & 67108863;
          carry = (w >> 26) - (right / 67108864 | 0);
          this.words[i + shift] = w & 67108863;
        }
        for (; i < this.length - shift; i++) {
          w = (this.words[i + shift] | 0) + carry;
          carry = w >> 26;
          this.words[i + shift] = w & 67108863;
        }
        if (carry === 0)
          return this._strip();
        assert(carry === -1);
        carry = 0;
        for (i = 0; i < this.length; i++) {
          w = -(this.words[i] | 0) + carry;
          carry = w >> 26;
          this.words[i] = w & 67108863;
        }
        this.negative = 1;
        return this._strip();
      };
      BN.prototype._wordDiv = function _wordDiv(num, mode) {
        var shift = this.length - num.length;
        var a = this.clone();
        var b = num;
        var bhi = b.words[b.length - 1] | 0;
        var bhiBits = this._countBits(bhi);
        shift = 26 - bhiBits;
        if (shift !== 0) {
          b = b.ushln(shift);
          a.iushln(shift);
          bhi = b.words[b.length - 1] | 0;
        }
        var m = a.length - b.length;
        var q;
        if (mode !== "mod") {
          q = new BN(null);
          q.length = m + 1;
          q.words = new Array(q.length);
          for (var i = 0; i < q.length; i++) {
            q.words[i] = 0;
          }
        }
        var diff = a.clone()._ishlnsubmul(b, 1, m);
        if (diff.negative === 0) {
          a = diff;
          if (q) {
            q.words[m] = 1;
          }
        }
        for (var j = m - 1; j >= 0; j--) {
          var qj = (a.words[b.length + j] | 0) * 67108864 + (a.words[b.length + j - 1] | 0);
          qj = Math.min(qj / bhi | 0, 67108863);
          a._ishlnsubmul(b, qj, j);
          while (a.negative !== 0) {
            qj--;
            a.negative = 0;
            a._ishlnsubmul(b, 1, j);
            if (!a.isZero()) {
              a.negative ^= 1;
            }
          }
          if (q) {
            q.words[j] = qj;
          }
        }
        if (q) {
          q._strip();
        }
        a._strip();
        if (mode !== "div" && shift !== 0) {
          a.iushrn(shift);
        }
        return {
          div: q || null,
          mod: a
        };
      };
      BN.prototype.divmod = function divmod(num, mode, positive) {
        assert(!num.isZero());
        if (this.isZero()) {
          return {
            div: new BN(0),
            mod: new BN(0)
          };
        }
        var div, mod, res;
        if (this.negative !== 0 && num.negative === 0) {
          res = this.neg().divmod(num, mode);
          if (mode !== "mod") {
            div = res.div.neg();
          }
          if (mode !== "div") {
            mod = res.mod.neg();
            if (positive && mod.negative !== 0) {
              mod.iadd(num);
            }
          }
          return {
            div,
            mod
          };
        }
        if (this.negative === 0 && num.negative !== 0) {
          res = this.divmod(num.neg(), mode);
          if (mode !== "mod") {
            div = res.div.neg();
          }
          return {
            div,
            mod: res.mod
          };
        }
        if ((this.negative & num.negative) !== 0) {
          res = this.neg().divmod(num.neg(), mode);
          if (mode !== "div") {
            mod = res.mod.neg();
            if (positive && mod.negative !== 0) {
              mod.isub(num);
            }
          }
          return {
            div: res.div,
            mod
          };
        }
        if (num.length > this.length || this.cmp(num) < 0) {
          return {
            div: new BN(0),
            mod: this
          };
        }
        if (num.length === 1) {
          if (mode === "div") {
            return {
              div: this.divn(num.words[0]),
              mod: null
            };
          }
          if (mode === "mod") {
            return {
              div: null,
              mod: new BN(this.modrn(num.words[0]))
            };
          }
          return {
            div: this.divn(num.words[0]),
            mod: new BN(this.modrn(num.words[0]))
          };
        }
        return this._wordDiv(num, mode);
      };
      BN.prototype.div = function div(num) {
        return this.divmod(num, "div", false).div;
      };
      BN.prototype.mod = function mod(num) {
        return this.divmod(num, "mod", false).mod;
      };
      BN.prototype.umod = function umod(num) {
        return this.divmod(num, "mod", true).mod;
      };
      BN.prototype.divRound = function divRound(num) {
        var dm = this.divmod(num);
        if (dm.mod.isZero())
          return dm.div;
        var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;
        var half = num.ushrn(1);
        var r2 = num.andln(1);
        var cmp = mod.cmp(half);
        if (cmp < 0 || r2 === 1 && cmp === 0)
          return dm.div;
        return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
      };
      BN.prototype.modrn = function modrn(num) {
        var isNegNum = num < 0;
        if (isNegNum)
          num = -num;
        assert(num <= 67108863);
        var p = (1 << 26) % num;
        var acc = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          acc = (p * acc + (this.words[i] | 0)) % num;
        }
        return isNegNum ? -acc : acc;
      };
      BN.prototype.modn = function modn(num) {
        return this.modrn(num);
      };
      BN.prototype.idivn = function idivn(num) {
        var isNegNum = num < 0;
        if (isNegNum)
          num = -num;
        assert(num <= 67108863);
        var carry = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          var w = (this.words[i] | 0) + carry * 67108864;
          this.words[i] = w / num | 0;
          carry = w % num;
        }
        this._strip();
        return isNegNum ? this.ineg() : this;
      };
      BN.prototype.divn = function divn(num) {
        return this.clone().idivn(num);
      };
      BN.prototype.egcd = function egcd(p) {
        assert(p.negative === 0);
        assert(!p.isZero());
        var x = this;
        var y = p.clone();
        if (x.negative !== 0) {
          x = x.umod(p);
        } else {
          x = x.clone();
        }
        var A = new BN(1);
        var B = new BN(0);
        var C = new BN(0);
        var D = new BN(1);
        var g = 0;
        while (x.isEven() && y.isEven()) {
          x.iushrn(1);
          y.iushrn(1);
          ++g;
        }
        var yp = y.clone();
        var xp = x.clone();
        while (!x.isZero()) {
          for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1)
            ;
          if (i > 0) {
            x.iushrn(i);
            while (i-- > 0) {
              if (A.isOdd() || B.isOdd()) {
                A.iadd(yp);
                B.isub(xp);
              }
              A.iushrn(1);
              B.iushrn(1);
            }
          }
          for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1)
            ;
          if (j > 0) {
            y.iushrn(j);
            while (j-- > 0) {
              if (C.isOdd() || D.isOdd()) {
                C.iadd(yp);
                D.isub(xp);
              }
              C.iushrn(1);
              D.iushrn(1);
            }
          }
          if (x.cmp(y) >= 0) {
            x.isub(y);
            A.isub(C);
            B.isub(D);
          } else {
            y.isub(x);
            C.isub(A);
            D.isub(B);
          }
        }
        return {
          a: C,
          b: D,
          gcd: y.iushln(g)
        };
      };
      BN.prototype._invmp = function _invmp(p) {
        assert(p.negative === 0);
        assert(!p.isZero());
        var a = this;
        var b = p.clone();
        if (a.negative !== 0) {
          a = a.umod(p);
        } else {
          a = a.clone();
        }
        var x1 = new BN(1);
        var x2 = new BN(0);
        var delta = b.clone();
        while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
          for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1)
            ;
          if (i > 0) {
            a.iushrn(i);
            while (i-- > 0) {
              if (x1.isOdd()) {
                x1.iadd(delta);
              }
              x1.iushrn(1);
            }
          }
          for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1)
            ;
          if (j > 0) {
            b.iushrn(j);
            while (j-- > 0) {
              if (x2.isOdd()) {
                x2.iadd(delta);
              }
              x2.iushrn(1);
            }
          }
          if (a.cmp(b) >= 0) {
            a.isub(b);
            x1.isub(x2);
          } else {
            b.isub(a);
            x2.isub(x1);
          }
        }
        var res;
        if (a.cmpn(1) === 0) {
          res = x1;
        } else {
          res = x2;
        }
        if (res.cmpn(0) < 0) {
          res.iadd(p);
        }
        return res;
      };
      BN.prototype.gcd = function gcd(num) {
        if (this.isZero())
          return num.abs();
        if (num.isZero())
          return this.abs();
        var a = this.clone();
        var b = num.clone();
        a.negative = 0;
        b.negative = 0;
        for (var shift = 0; a.isEven() && b.isEven(); shift++) {
          a.iushrn(1);
          b.iushrn(1);
        }
        do {
          while (a.isEven()) {
            a.iushrn(1);
          }
          while (b.isEven()) {
            b.iushrn(1);
          }
          var r = a.cmp(b);
          if (r < 0) {
            var t = a;
            a = b;
            b = t;
          } else if (r === 0 || b.cmpn(1) === 0) {
            break;
          }
          a.isub(b);
        } while (true);
        return b.iushln(shift);
      };
      BN.prototype.invm = function invm(num) {
        return this.egcd(num).a.umod(num);
      };
      BN.prototype.isEven = function isEven() {
        return (this.words[0] & 1) === 0;
      };
      BN.prototype.isOdd = function isOdd() {
        return (this.words[0] & 1) === 1;
      };
      BN.prototype.andln = function andln(num) {
        return this.words[0] & num;
      };
      BN.prototype.bincn = function bincn(bit) {
        assert(typeof bit === "number");
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        if (this.length <= s) {
          this._expand(s + 1);
          this.words[s] |= q;
          return this;
        }
        var carry = q;
        for (var i = s; carry !== 0 && i < this.length; i++) {
          var w = this.words[i] | 0;
          w += carry;
          carry = w >>> 26;
          w &= 67108863;
          this.words[i] = w;
        }
        if (carry !== 0) {
          this.words[i] = carry;
          this.length++;
        }
        return this;
      };
      BN.prototype.isZero = function isZero() {
        return this.length === 1 && this.words[0] === 0;
      };
      BN.prototype.cmpn = function cmpn(num) {
        var negative = num < 0;
        if (this.negative !== 0 && !negative)
          return -1;
        if (this.negative === 0 && negative)
          return 1;
        this._strip();
        var res;
        if (this.length > 1) {
          res = 1;
        } else {
          if (negative) {
            num = -num;
          }
          assert(num <= 67108863, "Number is too big");
          var w = this.words[0] | 0;
          res = w === num ? 0 : w < num ? -1 : 1;
        }
        if (this.negative !== 0)
          return -res | 0;
        return res;
      };
      BN.prototype.cmp = function cmp(num) {
        if (this.negative !== 0 && num.negative === 0)
          return -1;
        if (this.negative === 0 && num.negative !== 0)
          return 1;
        var res = this.ucmp(num);
        if (this.negative !== 0)
          return -res | 0;
        return res;
      };
      BN.prototype.ucmp = function ucmp(num) {
        if (this.length > num.length)
          return 1;
        if (this.length < num.length)
          return -1;
        var res = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          var a = this.words[i] | 0;
          var b = num.words[i] | 0;
          if (a === b)
            continue;
          if (a < b) {
            res = -1;
          } else if (a > b) {
            res = 1;
          }
          break;
        }
        return res;
      };
      BN.prototype.gtn = function gtn(num) {
        return this.cmpn(num) === 1;
      };
      BN.prototype.gt = function gt(num) {
        return this.cmp(num) === 1;
      };
      BN.prototype.gten = function gten(num) {
        return this.cmpn(num) >= 0;
      };
      BN.prototype.gte = function gte(num) {
        return this.cmp(num) >= 0;
      };
      BN.prototype.ltn = function ltn(num) {
        return this.cmpn(num) === -1;
      };
      BN.prototype.lt = function lt(num) {
        return this.cmp(num) === -1;
      };
      BN.prototype.lten = function lten(num) {
        return this.cmpn(num) <= 0;
      };
      BN.prototype.lte = function lte(num) {
        return this.cmp(num) <= 0;
      };
      BN.prototype.eqn = function eqn(num) {
        return this.cmpn(num) === 0;
      };
      BN.prototype.eq = function eq(num) {
        return this.cmp(num) === 0;
      };
      BN.red = function red(num) {
        return new Red(num);
      };
      BN.prototype.toRed = function toRed(ctx) {
        assert(!this.red, "Already a number in reduction context");
        assert(this.negative === 0, "red works only with positives");
        return ctx.convertTo(this)._forceRed(ctx);
      };
      BN.prototype.fromRed = function fromRed() {
        assert(this.red, "fromRed works only with numbers in reduction context");
        return this.red.convertFrom(this);
      };
      BN.prototype._forceRed = function _forceRed(ctx) {
        this.red = ctx;
        return this;
      };
      BN.prototype.forceRed = function forceRed(ctx) {
        assert(!this.red, "Already a number in reduction context");
        return this._forceRed(ctx);
      };
      BN.prototype.redAdd = function redAdd(num) {
        assert(this.red, "redAdd works only with red numbers");
        return this.red.add(this, num);
      };
      BN.prototype.redIAdd = function redIAdd(num) {
        assert(this.red, "redIAdd works only with red numbers");
        return this.red.iadd(this, num);
      };
      BN.prototype.redSub = function redSub(num) {
        assert(this.red, "redSub works only with red numbers");
        return this.red.sub(this, num);
      };
      BN.prototype.redISub = function redISub(num) {
        assert(this.red, "redISub works only with red numbers");
        return this.red.isub(this, num);
      };
      BN.prototype.redShl = function redShl(num) {
        assert(this.red, "redShl works only with red numbers");
        return this.red.shl(this, num);
      };
      BN.prototype.redMul = function redMul(num) {
        assert(this.red, "redMul works only with red numbers");
        this.red._verify2(this, num);
        return this.red.mul(this, num);
      };
      BN.prototype.redIMul = function redIMul(num) {
        assert(this.red, "redMul works only with red numbers");
        this.red._verify2(this, num);
        return this.red.imul(this, num);
      };
      BN.prototype.redSqr = function redSqr() {
        assert(this.red, "redSqr works only with red numbers");
        this.red._verify1(this);
        return this.red.sqr(this);
      };
      BN.prototype.redISqr = function redISqr() {
        assert(this.red, "redISqr works only with red numbers");
        this.red._verify1(this);
        return this.red.isqr(this);
      };
      BN.prototype.redSqrt = function redSqrt() {
        assert(this.red, "redSqrt works only with red numbers");
        this.red._verify1(this);
        return this.red.sqrt(this);
      };
      BN.prototype.redInvm = function redInvm() {
        assert(this.red, "redInvm works only with red numbers");
        this.red._verify1(this);
        return this.red.invm(this);
      };
      BN.prototype.redNeg = function redNeg() {
        assert(this.red, "redNeg works only with red numbers");
        this.red._verify1(this);
        return this.red.neg(this);
      };
      BN.prototype.redPow = function redPow(num) {
        assert(this.red && !num.red, "redPow(normalNum)");
        this.red._verify1(this);
        return this.red.pow(this, num);
      };
      var primes = {
        k256: null,
        p224: null,
        p192: null,
        p25519: null
      };
      function MPrime(name, p) {
        this.name = name;
        this.p = new BN(p, 16);
        this.n = this.p.bitLength();
        this.k = new BN(1).iushln(this.n).isub(this.p);
        this.tmp = this._tmp();
      }
      MPrime.prototype._tmp = function _tmp() {
        var tmp = new BN(null);
        tmp.words = new Array(Math.ceil(this.n / 13));
        return tmp;
      };
      MPrime.prototype.ireduce = function ireduce(num) {
        var r = num;
        var rlen;
        do {
          this.split(r, this.tmp);
          r = this.imulK(r);
          r = r.iadd(this.tmp);
          rlen = r.bitLength();
        } while (rlen > this.n);
        var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
        if (cmp === 0) {
          r.words[0] = 0;
          r.length = 1;
        } else if (cmp > 0) {
          r.isub(this.p);
        } else {
          if (r.strip !== void 0) {
            r.strip();
          } else {
            r._strip();
          }
        }
        return r;
      };
      MPrime.prototype.split = function split(input, out) {
        input.iushrn(this.n, 0, out);
      };
      MPrime.prototype.imulK = function imulK(num) {
        return num.imul(this.k);
      };
      function K256() {
        MPrime.call(
          this,
          "k256",
          "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f"
        );
      }
      inherits(K256, MPrime);
      K256.prototype.split = function split(input, output) {
        var mask = 4194303;
        var outLen = Math.min(input.length, 9);
        for (var i = 0; i < outLen; i++) {
          output.words[i] = input.words[i];
        }
        output.length = outLen;
        if (input.length <= 9) {
          input.words[0] = 0;
          input.length = 1;
          return;
        }
        var prev = input.words[9];
        output.words[output.length++] = prev & mask;
        for (i = 10; i < input.length; i++) {
          var next = input.words[i] | 0;
          input.words[i - 10] = (next & mask) << 4 | prev >>> 22;
          prev = next;
        }
        prev >>>= 22;
        input.words[i - 10] = prev;
        if (prev === 0 && input.length > 10) {
          input.length -= 10;
        } else {
          input.length -= 9;
        }
      };
      K256.prototype.imulK = function imulK(num) {
        num.words[num.length] = 0;
        num.words[num.length + 1] = 0;
        num.length += 2;
        var lo = 0;
        for (var i = 0; i < num.length; i++) {
          var w = num.words[i] | 0;
          lo += w * 977;
          num.words[i] = lo & 67108863;
          lo = w * 64 + (lo / 67108864 | 0);
        }
        if (num.words[num.length - 1] === 0) {
          num.length--;
          if (num.words[num.length - 1] === 0) {
            num.length--;
          }
        }
        return num;
      };
      function P224() {
        MPrime.call(
          this,
          "p224",
          "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001"
        );
      }
      inherits(P224, MPrime);
      function P192() {
        MPrime.call(
          this,
          "p192",
          "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff"
        );
      }
      inherits(P192, MPrime);
      function P25519() {
        MPrime.call(
          this,
          "25519",
          "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed"
        );
      }
      inherits(P25519, MPrime);
      P25519.prototype.imulK = function imulK(num) {
        var carry = 0;
        for (var i = 0; i < num.length; i++) {
          var hi = (num.words[i] | 0) * 19 + carry;
          var lo = hi & 67108863;
          hi >>>= 26;
          num.words[i] = lo;
          carry = hi;
        }
        if (carry !== 0) {
          num.words[num.length++] = carry;
        }
        return num;
      };
      BN._prime = function prime(name) {
        if (primes[name])
          return primes[name];
        var prime2;
        if (name === "k256") {
          prime2 = new K256();
        } else if (name === "p224") {
          prime2 = new P224();
        } else if (name === "p192") {
          prime2 = new P192();
        } else if (name === "p25519") {
          prime2 = new P25519();
        } else {
          throw new Error("Unknown prime " + name);
        }
        primes[name] = prime2;
        return prime2;
      };
      function Red(m) {
        if (typeof m === "string") {
          var prime = BN._prime(m);
          this.m = prime.p;
          this.prime = prime;
        } else {
          assert(m.gtn(1), "modulus must be greater than 1");
          this.m = m;
          this.prime = null;
        }
      }
      Red.prototype._verify1 = function _verify1(a) {
        assert(a.negative === 0, "red works only with positives");
        assert(a.red, "red works only with red numbers");
      };
      Red.prototype._verify2 = function _verify2(a, b) {
        assert((a.negative | b.negative) === 0, "red works only with positives");
        assert(
          a.red && a.red === b.red,
          "red works only with red numbers"
        );
      };
      Red.prototype.imod = function imod(a) {
        if (this.prime)
          return this.prime.ireduce(a)._forceRed(this);
        move(a, a.umod(this.m)._forceRed(this));
        return a;
      };
      Red.prototype.neg = function neg(a) {
        if (a.isZero()) {
          return a.clone();
        }
        return this.m.sub(a)._forceRed(this);
      };
      Red.prototype.add = function add(a, b) {
        this._verify2(a, b);
        var res = a.add(b);
        if (res.cmp(this.m) >= 0) {
          res.isub(this.m);
        }
        return res._forceRed(this);
      };
      Red.prototype.iadd = function iadd(a, b) {
        this._verify2(a, b);
        var res = a.iadd(b);
        if (res.cmp(this.m) >= 0) {
          res.isub(this.m);
        }
        return res;
      };
      Red.prototype.sub = function sub(a, b) {
        this._verify2(a, b);
        var res = a.sub(b);
        if (res.cmpn(0) < 0) {
          res.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Red.prototype.isub = function isub(a, b) {
        this._verify2(a, b);
        var res = a.isub(b);
        if (res.cmpn(0) < 0) {
          res.iadd(this.m);
        }
        return res;
      };
      Red.prototype.shl = function shl(a, num) {
        this._verify1(a);
        return this.imod(a.ushln(num));
      };
      Red.prototype.imul = function imul(a, b) {
        this._verify2(a, b);
        return this.imod(a.imul(b));
      };
      Red.prototype.mul = function mul(a, b) {
        this._verify2(a, b);
        return this.imod(a.mul(b));
      };
      Red.prototype.isqr = function isqr(a) {
        return this.imul(a, a.clone());
      };
      Red.prototype.sqr = function sqr(a) {
        return this.mul(a, a);
      };
      Red.prototype.sqrt = function sqrt(a) {
        if (a.isZero())
          return a.clone();
        var mod3 = this.m.andln(3);
        assert(mod3 % 2 === 1);
        if (mod3 === 3) {
          var pow = this.m.add(new BN(1)).iushrn(2);
          return this.pow(a, pow);
        }
        var q = this.m.subn(1);
        var s = 0;
        while (!q.isZero() && q.andln(1) === 0) {
          s++;
          q.iushrn(1);
        }
        assert(!q.isZero());
        var one = new BN(1).toRed(this);
        var nOne = one.redNeg();
        var lpow = this.m.subn(1).iushrn(1);
        var z = this.m.bitLength();
        z = new BN(2 * z * z).toRed(this);
        while (this.pow(z, lpow).cmp(nOne) !== 0) {
          z.redIAdd(nOne);
        }
        var c = this.pow(z, q);
        var r = this.pow(a, q.addn(1).iushrn(1));
        var t = this.pow(a, q);
        var m = s;
        while (t.cmp(one) !== 0) {
          var tmp = t;
          for (var i = 0; tmp.cmp(one) !== 0; i++) {
            tmp = tmp.redSqr();
          }
          assert(i < m);
          var b = this.pow(c, new BN(1).iushln(m - i - 1));
          r = r.redMul(b);
          c = b.redSqr();
          t = t.redMul(c);
          m = i;
        }
        return r;
      };
      Red.prototype.invm = function invm(a) {
        var inv = a._invmp(this.m);
        if (inv.negative !== 0) {
          inv.negative = 0;
          return this.imod(inv).redNeg();
        } else {
          return this.imod(inv);
        }
      };
      Red.prototype.pow = function pow(a, num) {
        if (num.isZero())
          return new BN(1).toRed(this);
        if (num.cmpn(1) === 0)
          return a.clone();
        var windowSize = 4;
        var wnd = new Array(1 << windowSize);
        wnd[0] = new BN(1).toRed(this);
        wnd[1] = a;
        for (var i = 2; i < wnd.length; i++) {
          wnd[i] = this.mul(wnd[i - 1], a);
        }
        var res = wnd[0];
        var current = 0;
        var currentLen = 0;
        var start = num.bitLength() % 26;
        if (start === 0) {
          start = 26;
        }
        for (i = num.length - 1; i >= 0; i--) {
          var word = num.words[i];
          for (var j = start - 1; j >= 0; j--) {
            var bit = word >> j & 1;
            if (res !== wnd[0]) {
              res = this.sqr(res);
            }
            if (bit === 0 && current === 0) {
              currentLen = 0;
              continue;
            }
            current <<= 1;
            current |= bit;
            currentLen++;
            if (currentLen !== windowSize && (i !== 0 || j !== 0))
              continue;
            res = this.mul(res, wnd[current]);
            currentLen = 0;
            current = 0;
          }
          start = 26;
        }
        return res;
      };
      Red.prototype.convertTo = function convertTo(num) {
        var r = num.umod(this.m);
        return r === num ? r.clone() : r;
      };
      Red.prototype.convertFrom = function convertFrom(num) {
        var res = num.clone();
        res.red = null;
        return res;
      };
      BN.mont = function mont(num) {
        return new Mont(num);
      };
      function Mont(m) {
        Red.call(this, m);
        this.shift = this.m.bitLength();
        if (this.shift % 26 !== 0) {
          this.shift += 26 - this.shift % 26;
        }
        this.r = new BN(1).iushln(this.shift);
        this.r2 = this.imod(this.r.sqr());
        this.rinv = this.r._invmp(this.m);
        this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
        this.minv = this.minv.umod(this.r);
        this.minv = this.r.sub(this.minv);
      }
      inherits(Mont, Red);
      Mont.prototype.convertTo = function convertTo(num) {
        return this.imod(num.ushln(this.shift));
      };
      Mont.prototype.convertFrom = function convertFrom(num) {
        var r = this.imod(num.mul(this.rinv));
        r.red = null;
        return r;
      };
      Mont.prototype.imul = function imul(a, b) {
        if (a.isZero() || b.isZero()) {
          a.words[0] = 0;
          a.length = 1;
          return a;
        }
        var t = a.imul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) {
          res = u.isub(this.m);
        } else if (u.cmpn(0) < 0) {
          res = u.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Mont.prototype.mul = function mul(a, b) {
        if (a.isZero() || b.isZero())
          return new BN(0)._forceRed(this);
        var t = a.mul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) {
          res = u.isub(this.m);
        } else if (u.cmpn(0) < 0) {
          res = u.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Mont.prototype.invm = function invm(a) {
        var res = this.imod(a._invmp(this.m).mul(this.r2));
        return res._forceRed(this);
      };
    })(typeof module === "undefined" || module, exports);
  }
});

// node_modules/@cosmjs/math/build/decimal.js
var require_decimal = __commonJS({
  "node_modules/@cosmjs/math/build/decimal.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Decimal = void 0;
    var bn_js_1 = __importDefault(require_bn());
    var maxFractionalDigits = 100;
    var Decimal = class _Decimal {
      constructor(atomics, fractionalDigits) {
        if (!atomics.match(/^[0-9]+$/)) {
          throw new Error("Invalid string format. Only non-negative integers in decimal representation supported.");
        }
        this.data = {
          atomics: new bn_js_1.default(atomics),
          fractionalDigits
        };
      }
      static fromUserInput(input, fractionalDigits) {
        _Decimal.verifyFractionalDigits(fractionalDigits);
        const badCharacter = input.match(/[^0-9.]/);
        if (badCharacter) {
          throw new Error(`Invalid character at position ${badCharacter.index + 1}`);
        }
        let whole;
        let fractional;
        if (input === "") {
          whole = "0";
          fractional = "";
        } else if (input.search(/\./) === -1) {
          whole = input;
          fractional = "";
        } else {
          const parts = input.split(".");
          switch (parts.length) {
            case 0:
            case 1:
              throw new Error("Fewer than two elements in split result. This must not happen here.");
            case 2:
              if (!parts[1])
                throw new Error("Fractional part missing");
              whole = parts[0];
              fractional = parts[1].replace(/0+$/, "");
              break;
            default:
              throw new Error("More than one separator found");
          }
        }
        if (fractional.length > fractionalDigits) {
          throw new Error("Got more fractional digits than supported");
        }
        const quantity = `${whole}${fractional.padEnd(fractionalDigits, "0")}`;
        return new _Decimal(quantity, fractionalDigits);
      }
      static fromAtomics(atomics, fractionalDigits) {
        _Decimal.verifyFractionalDigits(fractionalDigits);
        return new _Decimal(atomics, fractionalDigits);
      }
      /**
       * Creates a Decimal with value 0.0 and the given number of fractial digits.
       *
       * Fractional digits are not relevant for the value but needed to be able
       * to perform arithmetic operations with other decimals.
       */
      static zero(fractionalDigits) {
        _Decimal.verifyFractionalDigits(fractionalDigits);
        return new _Decimal("0", fractionalDigits);
      }
      /**
       * Creates a Decimal with value 1.0 and the given number of fractial digits.
       *
       * Fractional digits are not relevant for the value but needed to be able
       * to perform arithmetic operations with other decimals.
       */
      static one(fractionalDigits) {
        _Decimal.verifyFractionalDigits(fractionalDigits);
        return new _Decimal("1" + "0".repeat(fractionalDigits), fractionalDigits);
      }
      static verifyFractionalDigits(fractionalDigits) {
        if (!Number.isInteger(fractionalDigits))
          throw new Error("Fractional digits is not an integer");
        if (fractionalDigits < 0)
          throw new Error("Fractional digits must not be negative");
        if (fractionalDigits > maxFractionalDigits) {
          throw new Error(`Fractional digits must not exceed ${maxFractionalDigits}`);
        }
      }
      static compare(a, b) {
        if (a.fractionalDigits !== b.fractionalDigits)
          throw new Error("Fractional digits do not match");
        return a.data.atomics.cmp(new bn_js_1.default(b.atomics));
      }
      get atomics() {
        return this.data.atomics.toString();
      }
      get fractionalDigits() {
        return this.data.fractionalDigits;
      }
      /** Creates a new instance with the same value */
      clone() {
        return new _Decimal(this.atomics, this.fractionalDigits);
      }
      /** Returns the greatest decimal <= this which has no fractional part (rounding down) */
      floor() {
        const factor = new bn_js_1.default(10).pow(new bn_js_1.default(this.data.fractionalDigits));
        const whole = this.data.atomics.div(factor);
        const fractional = this.data.atomics.mod(factor);
        if (fractional.isZero()) {
          return this.clone();
        } else {
          return _Decimal.fromAtomics(whole.mul(factor).toString(), this.fractionalDigits);
        }
      }
      /** Returns the smallest decimal >= this which has no fractional part (rounding up) */
      ceil() {
        const factor = new bn_js_1.default(10).pow(new bn_js_1.default(this.data.fractionalDigits));
        const whole = this.data.atomics.div(factor);
        const fractional = this.data.atomics.mod(factor);
        if (fractional.isZero()) {
          return this.clone();
        } else {
          return _Decimal.fromAtomics(whole.addn(1).mul(factor).toString(), this.fractionalDigits);
        }
      }
      toString() {
        const factor = new bn_js_1.default(10).pow(new bn_js_1.default(this.data.fractionalDigits));
        const whole = this.data.atomics.div(factor);
        const fractional = this.data.atomics.mod(factor);
        if (fractional.isZero()) {
          return whole.toString();
        } else {
          const fullFractionalPart = fractional.toString().padStart(this.data.fractionalDigits, "0");
          const trimmedFractionalPart = fullFractionalPart.replace(/0+$/, "");
          return `${whole.toString()}.${trimmedFractionalPart}`;
        }
      }
      /**
       * Returns an approximation as a float type. Only use this if no
       * exact calculation is required.
       */
      toFloatApproximation() {
        const out = Number(this.toString());
        if (Number.isNaN(out))
          throw new Error("Conversion to number failed");
        return out;
      }
      /**
       * a.plus(b) returns a+b.
       *
       * Both values need to have the same fractional digits.
       */
      plus(b) {
        if (this.fractionalDigits !== b.fractionalDigits)
          throw new Error("Fractional digits do not match");
        const sum = this.data.atomics.add(new bn_js_1.default(b.atomics));
        return new _Decimal(sum.toString(), this.fractionalDigits);
      }
      /**
       * a.minus(b) returns a-b.
       *
       * Both values need to have the same fractional digits.
       * The resulting difference needs to be non-negative.
       */
      minus(b) {
        if (this.fractionalDigits !== b.fractionalDigits)
          throw new Error("Fractional digits do not match");
        const difference = this.data.atomics.sub(new bn_js_1.default(b.atomics));
        if (difference.ltn(0))
          throw new Error("Difference must not be negative");
        return new _Decimal(difference.toString(), this.fractionalDigits);
      }
      /**
       * a.multiply(b) returns a*b.
       *
       * We only allow multiplication by unsigned integers to avoid rounding errors.
       */
      multiply(b) {
        const product = this.data.atomics.mul(new bn_js_1.default(b.toString()));
        return new _Decimal(product.toString(), this.fractionalDigits);
      }
      equals(b) {
        return _Decimal.compare(this, b) === 0;
      }
      isLessThan(b) {
        return _Decimal.compare(this, b) < 0;
      }
      isLessThanOrEqual(b) {
        return _Decimal.compare(this, b) <= 0;
      }
      isGreaterThan(b) {
        return _Decimal.compare(this, b) > 0;
      }
      isGreaterThanOrEqual(b) {
        return _Decimal.compare(this, b) >= 0;
      }
    };
    exports.Decimal = Decimal;
  }
});

// node_modules/@cosmjs/math/build/integers.js
var require_integers = __commonJS({
  "node_modules/@cosmjs/math/build/integers.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Uint64 = exports.Uint53 = exports.Int53 = exports.Uint32 = void 0;
    var bn_js_1 = __importDefault(require_bn());
    var uint64MaxValue = new bn_js_1.default("18446744073709551615", 10, "be");
    var Uint32 = class _Uint32 {
      constructor(input) {
        if (Number.isNaN(input)) {
          throw new Error("Input is not a number");
        }
        if (!Number.isInteger(input)) {
          throw new Error("Input is not an integer");
        }
        if (input < 0 || input > 4294967295) {
          throw new Error("Input not in uint32 range: " + input.toString());
        }
        this.data = input;
      }
      /** @deprecated use Uint32.fromBytes */
      static fromBigEndianBytes(bytes) {
        return _Uint32.fromBytes(bytes);
      }
      /**
       * Creates a Uint32 from a fixed length byte array.
       *
       * @param bytes a list of exactly 4 bytes
       * @param endianess defaults to big endian
       */
      static fromBytes(bytes, endianess = "be") {
        if (bytes.length !== 4) {
          throw new Error("Invalid input length. Expected 4 bytes.");
        }
        for (let i = 0; i < bytes.length; ++i) {
          if (!Number.isInteger(bytes[i]) || bytes[i] > 255 || bytes[i] < 0) {
            throw new Error("Invalid value in byte. Found: " + bytes[i]);
          }
        }
        const beBytes = endianess === "be" ? bytes : Array.from(bytes).reverse();
        return new _Uint32(beBytes[0] * 2 ** 24 + beBytes[1] * 2 ** 16 + beBytes[2] * 2 ** 8 + beBytes[3]);
      }
      static fromString(str) {
        if (!str.match(/^[0-9]+$/)) {
          throw new Error("Invalid string format");
        }
        return new _Uint32(Number.parseInt(str, 10));
      }
      toBytesBigEndian() {
        return new Uint8Array([
          Math.floor(this.data / 2 ** 24) & 255,
          Math.floor(this.data / 2 ** 16) & 255,
          Math.floor(this.data / 2 ** 8) & 255,
          Math.floor(this.data / 2 ** 0) & 255
        ]);
      }
      toBytesLittleEndian() {
        return new Uint8Array([
          Math.floor(this.data / 2 ** 0) & 255,
          Math.floor(this.data / 2 ** 8) & 255,
          Math.floor(this.data / 2 ** 16) & 255,
          Math.floor(this.data / 2 ** 24) & 255
        ]);
      }
      toNumber() {
        return this.data;
      }
      toBigInt() {
        return BigInt(this.toNumber());
      }
      toString() {
        return this.data.toString();
      }
    };
    exports.Uint32 = Uint32;
    var Int53 = class _Int53 {
      constructor(input) {
        if (Number.isNaN(input)) {
          throw new Error("Input is not a number");
        }
        if (!Number.isInteger(input)) {
          throw new Error("Input is not an integer");
        }
        if (input < Number.MIN_SAFE_INTEGER || input > Number.MAX_SAFE_INTEGER) {
          throw new Error("Input not in int53 range: " + input.toString());
        }
        this.data = input;
      }
      static fromString(str) {
        if (!str.match(/^-?[0-9]+$/)) {
          throw new Error("Invalid string format");
        }
        return new _Int53(Number.parseInt(str, 10));
      }
      toNumber() {
        return this.data;
      }
      toBigInt() {
        return BigInt(this.toNumber());
      }
      toString() {
        return this.data.toString();
      }
    };
    exports.Int53 = Int53;
    var Uint53 = class _Uint53 {
      constructor(input) {
        const signed = new Int53(input);
        if (signed.toNumber() < 0) {
          throw new Error("Input is negative");
        }
        this.data = signed;
      }
      static fromString(str) {
        const signed = Int53.fromString(str);
        return new _Uint53(signed.toNumber());
      }
      toNumber() {
        return this.data.toNumber();
      }
      toBigInt() {
        return BigInt(this.toNumber());
      }
      toString() {
        return this.data.toString();
      }
    };
    exports.Uint53 = Uint53;
    var Uint64 = class _Uint64 {
      constructor(data) {
        if (data.isNeg()) {
          throw new Error("Input is negative");
        }
        if (data.gt(uint64MaxValue)) {
          throw new Error("Input exceeds uint64 range");
        }
        this.data = data;
      }
      /** @deprecated use Uint64.fromBytes */
      static fromBytesBigEndian(bytes) {
        return _Uint64.fromBytes(bytes);
      }
      /**
       * Creates a Uint64 from a fixed length byte array.
       *
       * @param bytes a list of exactly 8 bytes
       * @param endianess defaults to big endian
       */
      static fromBytes(bytes, endianess = "be") {
        if (bytes.length !== 8) {
          throw new Error("Invalid input length. Expected 8 bytes.");
        }
        for (let i = 0; i < bytes.length; ++i) {
          if (!Number.isInteger(bytes[i]) || bytes[i] > 255 || bytes[i] < 0) {
            throw new Error("Invalid value in byte. Found: " + bytes[i]);
          }
        }
        const beBytes = endianess === "be" ? Array.from(bytes) : Array.from(bytes).reverse();
        return new _Uint64(new bn_js_1.default(beBytes));
      }
      static fromString(str) {
        if (!str.match(/^[0-9]+$/)) {
          throw new Error("Invalid string format");
        }
        return new _Uint64(new bn_js_1.default(str, 10, "be"));
      }
      static fromNumber(input) {
        if (Number.isNaN(input)) {
          throw new Error("Input is not a number");
        }
        if (!Number.isInteger(input)) {
          throw new Error("Input is not an integer");
        }
        let bigint;
        try {
          bigint = new bn_js_1.default(input);
        } catch {
          throw new Error("Input is not a safe integer");
        }
        return new _Uint64(bigint);
      }
      toBytesBigEndian() {
        return Uint8Array.from(this.data.toArray("be", 8));
      }
      toBytesLittleEndian() {
        return Uint8Array.from(this.data.toArray("le", 8));
      }
      toString() {
        return this.data.toString(10);
      }
      toBigInt() {
        return BigInt(this.toString());
      }
      toNumber() {
        return this.data.toNumber();
      }
    };
    exports.Uint64 = Uint64;
  }
});

// node_modules/@cosmjs/math/build/index.js
var require_build = __commonJS({
  "node_modules/@cosmjs/math/build/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Uint64 = exports.Uint53 = exports.Uint32 = exports.Int53 = exports.Decimal = void 0;
    var decimal_1 = require_decimal();
    Object.defineProperty(exports, "Decimal", { enumerable: true, get: function() {
      return decimal_1.Decimal;
    } });
    var integers_1 = require_integers();
    Object.defineProperty(exports, "Int53", { enumerable: true, get: function() {
      return integers_1.Int53;
    } });
    Object.defineProperty(exports, "Uint32", { enumerable: true, get: function() {
      return integers_1.Uint32;
    } });
    Object.defineProperty(exports, "Uint53", { enumerable: true, get: function() {
      return integers_1.Uint53;
    } });
    Object.defineProperty(exports, "Uint64", { enumerable: true, get: function() {
      return integers_1.Uint64;
    } });
  }
});

// node_modules/@cosmjs/proto-signing/build/coins.js
var require_coins = __commonJS({
  "node_modules/@cosmjs/proto-signing/build/coins.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.parseCoins = void 0;
    function parseCoins(input) {
      return input.replace(/\s/g, "").split(",").filter(Boolean).map((part) => {
        const match = part.match(/^([0-9]+)([a-zA-Z][a-zA-Z0-9/]{2,127})$/);
        if (!match)
          throw new Error("Got an invalid coin string");
        return {
          amount: match[1].replace(/^0+/, "") || "0",
          denom: match[2]
        };
      });
    }
    exports.parseCoins = parseCoins;
  }
});

// node_modules/cosmjs-types/helpers.js
var require_helpers = __commonJS({
  "node_modules/cosmjs-types/helpers.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.fromJsonTimestamp = exports.fromTimestamp = exports.toTimestamp = exports.setPaginationParams = exports.isObject = exports.isSet = exports.fromDuration = exports.toDuration = exports.omitDefault = exports.base64FromBytes = exports.bytesFromBase64 = exports.Long = void 0;
    var _m0 = __importStar(require_minimal());
    var long_1 = __importDefault(require_long());
    exports.Long = long_1.default;
    if (_m0.util.Long !== long_1.default) {
      _m0.util.Long = long_1.default;
      _m0.configure();
    }
    var globalThis2 = (() => {
      if (typeof globalThis2 !== "undefined")
        return globalThis2;
      if (typeof self !== "undefined")
        return self;
      if (typeof window !== "undefined")
        return window;
      if (typeof global !== "undefined")
        return global;
      throw "Unable to locate global object";
    })();
    var atob2 = globalThis2.atob || ((b64) => globalThis2.Buffer.from(b64, "base64").toString("binary"));
    function bytesFromBase64(b64) {
      const bin = atob2(b64);
      const arr = new Uint8Array(bin.length);
      for (let i = 0; i < bin.length; ++i) {
        arr[i] = bin.charCodeAt(i);
      }
      return arr;
    }
    exports.bytesFromBase64 = bytesFromBase64;
    var btoa2 = globalThis2.btoa || ((bin) => globalThis2.Buffer.from(bin, "binary").toString("base64"));
    function base64FromBytes(arr) {
      const bin = [];
      arr.forEach((byte) => {
        bin.push(String.fromCharCode(byte));
      });
      return btoa2(bin.join(""));
    }
    exports.base64FromBytes = base64FromBytes;
    function omitDefault(input) {
      if (typeof input === "string") {
        return input === "" ? void 0 : input;
      }
      if (typeof input === "number") {
        return input === 0 ? void 0 : input;
      }
      if (long_1.default.isLong(input)) {
        return input.isZero() ? void 0 : input;
      }
      throw new Error(`Got unsupported type ${typeof input}`);
    }
    exports.omitDefault = omitDefault;
    function toDuration(duration) {
      return {
        seconds: long_1.default.fromNumber(Math.floor(parseInt(duration) / 1e9)),
        nanos: parseInt(duration) % 1e9
      };
    }
    exports.toDuration = toDuration;
    function fromDuration(duration) {
      return (parseInt(duration.seconds.toString()) * 1e9 + duration.nanos).toString();
    }
    exports.fromDuration = fromDuration;
    function isSet(value) {
      return value !== null && value !== void 0;
    }
    exports.isSet = isSet;
    function isObject(value) {
      return typeof value === "object" && value !== null;
    }
    exports.isObject = isObject;
    var setPaginationParams = (options, pagination) => {
      if (!pagination) {
        return options;
      }
      if (typeof (pagination == null ? void 0 : pagination.countTotal) !== "undefined") {
        options.params["pagination.count_total"] = pagination.countTotal;
      }
      if (typeof (pagination == null ? void 0 : pagination.key) !== "undefined") {
        options.params["pagination.key"] = Buffer.from(pagination.key).toString("base64");
      }
      if (typeof (pagination == null ? void 0 : pagination.limit) !== "undefined") {
        options.params["pagination.limit"] = pagination.limit.toString();
      }
      if (typeof (pagination == null ? void 0 : pagination.offset) !== "undefined") {
        options.params["pagination.offset"] = pagination.offset.toString();
      }
      if (typeof (pagination == null ? void 0 : pagination.reverse) !== "undefined") {
        options.params["pagination.reverse"] = pagination.reverse;
      }
      return options;
    };
    exports.setPaginationParams = setPaginationParams;
    function toTimestamp(date) {
      const seconds = numberToLong(date.getTime() / 1e3);
      const nanos = date.getTime() % 1e3 * 1e6;
      return {
        seconds,
        nanos
      };
    }
    exports.toTimestamp = toTimestamp;
    function fromTimestamp(t) {
      let millis = t.seconds.toNumber() * 1e3;
      millis += t.nanos / 1e6;
      return new Date(millis);
    }
    exports.fromTimestamp = fromTimestamp;
    var timestampFromJSON = (object) => {
      return {
        seconds: isSet(object.seconds) ? long_1.default.fromValue(object.seconds) : long_1.default.ZERO,
        nanos: isSet(object.nanos) ? Number(object.nanos) : 0
      };
    };
    function fromJsonTimestamp(o) {
      if (o instanceof Date) {
        return toTimestamp(o);
      } else if (typeof o === "string") {
        return toTimestamp(new Date(o));
      } else {
        return timestampFromJSON(o);
      }
    }
    exports.fromJsonTimestamp = fromJsonTimestamp;
    function numberToLong(number) {
      return long_1.default.fromNumber(number);
    }
  }
});

// node_modules/cosmjs-types/google/protobuf/any.js
var require_any = __commonJS({
  "node_modules/cosmjs-types/google/protobuf/any.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Any = exports.protobufPackage = void 0;
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "google.protobuf";
    function createBaseAny() {
      return {
        typeUrl: "",
        value: new Uint8Array()
      };
    }
    exports.Any = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.typeUrl !== "") {
          writer.uint32(10).string(message.typeUrl);
        }
        if (message.value.length !== 0) {
          writer.uint32(18).bytes(message.value);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseAny();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.typeUrl = reader.string();
              break;
            case 2:
              message.value = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          typeUrl: (0, helpers_1.isSet)(object.typeUrl) ? String(object.typeUrl) : "",
          value: (0, helpers_1.isSet)(object.value) ? (0, helpers_1.bytesFromBase64)(object.value) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.typeUrl !== void 0 && (obj.typeUrl = message.typeUrl);
        message.value !== void 0 && (obj.value = (0, helpers_1.base64FromBytes)(message.value !== void 0 ? message.value : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseAny();
        message.typeUrl = object.typeUrl ?? "";
        message.value = object.value ?? new Uint8Array();
        return message;
      }
    };
  }
});

// node_modules/cosmjs-types/cosmos/crypto/multisig/v1beta1/multisig.js
var require_multisig = __commonJS({
  "node_modules/cosmjs-types/cosmos/crypto/multisig/v1beta1/multisig.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.CompactBitArray = exports.MultiSignature = exports.protobufPackage = void 0;
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.crypto.multisig.v1beta1";
    function createBaseMultiSignature() {
      return {
        signatures: []
      };
    }
    exports.MultiSignature = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.signatures) {
          writer.uint32(10).bytes(v);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMultiSignature();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.signatures.push(reader.bytes());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          signatures: Array.isArray(object == null ? void 0 : object.signatures) ? object.signatures.map((e) => (0, helpers_1.bytesFromBase64)(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.signatures) {
          obj.signatures = message.signatures.map((e) => (0, helpers_1.base64FromBytes)(e !== void 0 ? e : new Uint8Array()));
        } else {
          obj.signatures = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseMultiSignature();
        message.signatures = ((_a = object.signatures) == null ? void 0 : _a.map((e) => e)) || [];
        return message;
      }
    };
    function createBaseCompactBitArray() {
      return {
        extraBitsStored: 0,
        elems: new Uint8Array()
      };
    }
    exports.CompactBitArray = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.extraBitsStored !== 0) {
          writer.uint32(8).uint32(message.extraBitsStored);
        }
        if (message.elems.length !== 0) {
          writer.uint32(18).bytes(message.elems);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseCompactBitArray();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.extraBitsStored = reader.uint32();
              break;
            case 2:
              message.elems = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          extraBitsStored: (0, helpers_1.isSet)(object.extraBitsStored) ? Number(object.extraBitsStored) : 0,
          elems: (0, helpers_1.isSet)(object.elems) ? (0, helpers_1.bytesFromBase64)(object.elems) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.extraBitsStored !== void 0 && (obj.extraBitsStored = Math.round(message.extraBitsStored));
        message.elems !== void 0 && (obj.elems = (0, helpers_1.base64FromBytes)(message.elems !== void 0 ? message.elems : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseCompactBitArray();
        message.extraBitsStored = object.extraBitsStored ?? 0;
        message.elems = object.elems ?? new Uint8Array();
        return message;
      }
    };
  }
});

// node_modules/cosmjs-types/cosmos/tx/signing/v1beta1/signing.js
var require_signing = __commonJS({
  "node_modules/cosmjs-types/cosmos/tx/signing/v1beta1/signing.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SignatureDescriptor_Data_Multi = exports.SignatureDescriptor_Data_Single = exports.SignatureDescriptor_Data = exports.SignatureDescriptor = exports.SignatureDescriptors = exports.signModeToJSON = exports.signModeFromJSON = exports.SignMode = exports.protobufPackage = void 0;
    var multisig_1 = require_multisig();
    var any_1 = require_any();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.tx.signing.v1beta1";
    var SignMode;
    (function(SignMode2) {
      SignMode2[SignMode2["SIGN_MODE_UNSPECIFIED"] = 0] = "SIGN_MODE_UNSPECIFIED";
      SignMode2[SignMode2["SIGN_MODE_DIRECT"] = 1] = "SIGN_MODE_DIRECT";
      SignMode2[SignMode2["SIGN_MODE_TEXTUAL"] = 2] = "SIGN_MODE_TEXTUAL";
      SignMode2[SignMode2["SIGN_MODE_LEGACY_AMINO_JSON"] = 127] = "SIGN_MODE_LEGACY_AMINO_JSON";
      SignMode2[SignMode2["SIGN_MODE_EIP_191"] = 191] = "SIGN_MODE_EIP_191";
      SignMode2[SignMode2["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
    })(SignMode = exports.SignMode || (exports.SignMode = {}));
    function signModeFromJSON(object) {
      switch (object) {
        case 0:
        case "SIGN_MODE_UNSPECIFIED":
          return SignMode.SIGN_MODE_UNSPECIFIED;
        case 1:
        case "SIGN_MODE_DIRECT":
          return SignMode.SIGN_MODE_DIRECT;
        case 2:
        case "SIGN_MODE_TEXTUAL":
          return SignMode.SIGN_MODE_TEXTUAL;
        case 127:
        case "SIGN_MODE_LEGACY_AMINO_JSON":
          return SignMode.SIGN_MODE_LEGACY_AMINO_JSON;
        case 191:
        case "SIGN_MODE_EIP_191":
          return SignMode.SIGN_MODE_EIP_191;
        case -1:
        case "UNRECOGNIZED":
        default:
          return SignMode.UNRECOGNIZED;
      }
    }
    exports.signModeFromJSON = signModeFromJSON;
    function signModeToJSON(object) {
      switch (object) {
        case SignMode.SIGN_MODE_UNSPECIFIED:
          return "SIGN_MODE_UNSPECIFIED";
        case SignMode.SIGN_MODE_DIRECT:
          return "SIGN_MODE_DIRECT";
        case SignMode.SIGN_MODE_TEXTUAL:
          return "SIGN_MODE_TEXTUAL";
        case SignMode.SIGN_MODE_LEGACY_AMINO_JSON:
          return "SIGN_MODE_LEGACY_AMINO_JSON";
        case SignMode.SIGN_MODE_EIP_191:
          return "SIGN_MODE_EIP_191";
        case SignMode.UNRECOGNIZED:
        default:
          return "UNRECOGNIZED";
      }
    }
    exports.signModeToJSON = signModeToJSON;
    function createBaseSignatureDescriptors() {
      return {
        signatures: []
      };
    }
    exports.SignatureDescriptors = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.signatures) {
          exports.SignatureDescriptor.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseSignatureDescriptors();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.signatures.push(exports.SignatureDescriptor.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          signatures: Array.isArray(object == null ? void 0 : object.signatures) ? object.signatures.map((e) => exports.SignatureDescriptor.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.signatures) {
          obj.signatures = message.signatures.map((e) => e ? exports.SignatureDescriptor.toJSON(e) : void 0);
        } else {
          obj.signatures = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseSignatureDescriptors();
        message.signatures = ((_a = object.signatures) == null ? void 0 : _a.map((e) => exports.SignatureDescriptor.fromPartial(e))) || [];
        return message;
      }
    };
    function createBaseSignatureDescriptor() {
      return {
        publicKey: void 0,
        data: void 0,
        sequence: helpers_1.Long.UZERO
      };
    }
    exports.SignatureDescriptor = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.publicKey !== void 0) {
          any_1.Any.encode(message.publicKey, writer.uint32(10).fork()).ldelim();
        }
        if (message.data !== void 0) {
          exports.SignatureDescriptor_Data.encode(message.data, writer.uint32(18).fork()).ldelim();
        }
        if (!message.sequence.isZero()) {
          writer.uint32(24).uint64(message.sequence);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseSignatureDescriptor();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.publicKey = any_1.Any.decode(reader, reader.uint32());
              break;
            case 2:
              message.data = exports.SignatureDescriptor_Data.decode(reader, reader.uint32());
              break;
            case 3:
              message.sequence = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          publicKey: (0, helpers_1.isSet)(object.publicKey) ? any_1.Any.fromJSON(object.publicKey) : void 0,
          data: (0, helpers_1.isSet)(object.data) ? exports.SignatureDescriptor_Data.fromJSON(object.data) : void 0,
          sequence: (0, helpers_1.isSet)(object.sequence) ? helpers_1.Long.fromValue(object.sequence) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.publicKey !== void 0 && (obj.publicKey = message.publicKey ? any_1.Any.toJSON(message.publicKey) : void 0);
        message.data !== void 0 && (obj.data = message.data ? exports.SignatureDescriptor_Data.toJSON(message.data) : void 0);
        message.sequence !== void 0 && (obj.sequence = (message.sequence || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseSignatureDescriptor();
        message.publicKey = object.publicKey !== void 0 && object.publicKey !== null ? any_1.Any.fromPartial(object.publicKey) : void 0;
        message.data = object.data !== void 0 && object.data !== null ? exports.SignatureDescriptor_Data.fromPartial(object.data) : void 0;
        message.sequence = object.sequence !== void 0 && object.sequence !== null ? helpers_1.Long.fromValue(object.sequence) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseSignatureDescriptor_Data() {
      return {
        single: void 0,
        multi: void 0
      };
    }
    exports.SignatureDescriptor_Data = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.single !== void 0) {
          exports.SignatureDescriptor_Data_Single.encode(message.single, writer.uint32(10).fork()).ldelim();
        }
        if (message.multi !== void 0) {
          exports.SignatureDescriptor_Data_Multi.encode(message.multi, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseSignatureDescriptor_Data();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.single = exports.SignatureDescriptor_Data_Single.decode(reader, reader.uint32());
              break;
            case 2:
              message.multi = exports.SignatureDescriptor_Data_Multi.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          single: (0, helpers_1.isSet)(object.single) ? exports.SignatureDescriptor_Data_Single.fromJSON(object.single) : void 0,
          multi: (0, helpers_1.isSet)(object.multi) ? exports.SignatureDescriptor_Data_Multi.fromJSON(object.multi) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.single !== void 0 && (obj.single = message.single ? exports.SignatureDescriptor_Data_Single.toJSON(message.single) : void 0);
        message.multi !== void 0 && (obj.multi = message.multi ? exports.SignatureDescriptor_Data_Multi.toJSON(message.multi) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseSignatureDescriptor_Data();
        message.single = object.single !== void 0 && object.single !== null ? exports.SignatureDescriptor_Data_Single.fromPartial(object.single) : void 0;
        message.multi = object.multi !== void 0 && object.multi !== null ? exports.SignatureDescriptor_Data_Multi.fromPartial(object.multi) : void 0;
        return message;
      }
    };
    function createBaseSignatureDescriptor_Data_Single() {
      return {
        mode: 0,
        signature: new Uint8Array()
      };
    }
    exports.SignatureDescriptor_Data_Single = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.mode !== 0) {
          writer.uint32(8).int32(message.mode);
        }
        if (message.signature.length !== 0) {
          writer.uint32(18).bytes(message.signature);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseSignatureDescriptor_Data_Single();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.mode = reader.int32();
              break;
            case 2:
              message.signature = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          mode: (0, helpers_1.isSet)(object.mode) ? signModeFromJSON(object.mode) : 0,
          signature: (0, helpers_1.isSet)(object.signature) ? (0, helpers_1.bytesFromBase64)(object.signature) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.mode !== void 0 && (obj.mode = signModeToJSON(message.mode));
        message.signature !== void 0 && (obj.signature = (0, helpers_1.base64FromBytes)(message.signature !== void 0 ? message.signature : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseSignatureDescriptor_Data_Single();
        message.mode = object.mode ?? 0;
        message.signature = object.signature ?? new Uint8Array();
        return message;
      }
    };
    function createBaseSignatureDescriptor_Data_Multi() {
      return {
        bitarray: void 0,
        signatures: []
      };
    }
    exports.SignatureDescriptor_Data_Multi = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.bitarray !== void 0) {
          multisig_1.CompactBitArray.encode(message.bitarray, writer.uint32(10).fork()).ldelim();
        }
        for (const v of message.signatures) {
          exports.SignatureDescriptor_Data.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseSignatureDescriptor_Data_Multi();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.bitarray = multisig_1.CompactBitArray.decode(reader, reader.uint32());
              break;
            case 2:
              message.signatures.push(exports.SignatureDescriptor_Data.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          bitarray: (0, helpers_1.isSet)(object.bitarray) ? multisig_1.CompactBitArray.fromJSON(object.bitarray) : void 0,
          signatures: Array.isArray(object == null ? void 0 : object.signatures) ? object.signatures.map((e) => exports.SignatureDescriptor_Data.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.bitarray !== void 0 && (obj.bitarray = message.bitarray ? multisig_1.CompactBitArray.toJSON(message.bitarray) : void 0);
        if (message.signatures) {
          obj.signatures = message.signatures.map((e) => e ? exports.SignatureDescriptor_Data.toJSON(e) : void 0);
        } else {
          obj.signatures = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseSignatureDescriptor_Data_Multi();
        message.bitarray = object.bitarray !== void 0 && object.bitarray !== null ? multisig_1.CompactBitArray.fromPartial(object.bitarray) : void 0;
        message.signatures = ((_a = object.signatures) == null ? void 0 : _a.map((e) => exports.SignatureDescriptor_Data.fromPartial(e))) || [];
        return message;
      }
    };
  }
});

// node_modules/cosmjs-types/cosmos/base/v1beta1/coin.js
var require_coin = __commonJS({
  "node_modules/cosmjs-types/cosmos/base/v1beta1/coin.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.DecProto = exports.IntProto = exports.DecCoin = exports.Coin = exports.protobufPackage = void 0;
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.base.v1beta1";
    function createBaseCoin() {
      return {
        denom: "",
        amount: ""
      };
    }
    exports.Coin = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.denom !== "") {
          writer.uint32(10).string(message.denom);
        }
        if (message.amount !== "") {
          writer.uint32(18).string(message.amount);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseCoin();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.denom = reader.string();
              break;
            case 2:
              message.amount = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          denom: (0, helpers_1.isSet)(object.denom) ? String(object.denom) : "",
          amount: (0, helpers_1.isSet)(object.amount) ? String(object.amount) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.denom !== void 0 && (obj.denom = message.denom);
        message.amount !== void 0 && (obj.amount = message.amount);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseCoin();
        message.denom = object.denom ?? "";
        message.amount = object.amount ?? "";
        return message;
      }
    };
    function createBaseDecCoin() {
      return {
        denom: "",
        amount: ""
      };
    }
    exports.DecCoin = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.denom !== "") {
          writer.uint32(10).string(message.denom);
        }
        if (message.amount !== "") {
          writer.uint32(18).string(message.amount);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseDecCoin();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.denom = reader.string();
              break;
            case 2:
              message.amount = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          denom: (0, helpers_1.isSet)(object.denom) ? String(object.denom) : "",
          amount: (0, helpers_1.isSet)(object.amount) ? String(object.amount) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.denom !== void 0 && (obj.denom = message.denom);
        message.amount !== void 0 && (obj.amount = message.amount);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseDecCoin();
        message.denom = object.denom ?? "";
        message.amount = object.amount ?? "";
        return message;
      }
    };
    function createBaseIntProto() {
      return {
        int: ""
      };
    }
    exports.IntProto = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.int !== "") {
          writer.uint32(10).string(message.int);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseIntProto();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.int = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          int: (0, helpers_1.isSet)(object.int) ? String(object.int) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.int !== void 0 && (obj.int = message.int);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseIntProto();
        message.int = object.int ?? "";
        return message;
      }
    };
    function createBaseDecProto() {
      return {
        dec: ""
      };
    }
    exports.DecProto = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.dec !== "") {
          writer.uint32(10).string(message.dec);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseDecProto();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.dec = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          dec: (0, helpers_1.isSet)(object.dec) ? String(object.dec) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.dec !== void 0 && (obj.dec = message.dec);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseDecProto();
        message.dec = object.dec ?? "";
        return message;
      }
    };
  }
});

// node_modules/cosmjs-types/cosmos/tx/v1beta1/tx.js
var require_tx = __commonJS({
  "node_modules/cosmjs-types/cosmos/tx/v1beta1/tx.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Fee = exports.ModeInfo_Multi = exports.ModeInfo_Single = exports.ModeInfo = exports.SignerInfo = exports.AuthInfo = exports.TxBody = exports.SignDoc = exports.TxRaw = exports.Tx = exports.protobufPackage = void 0;
    var any_1 = require_any();
    var signing_1 = require_signing();
    var multisig_1 = require_multisig();
    var coin_1 = require_coin();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.tx.v1beta1";
    function createBaseTx() {
      return {
        body: void 0,
        authInfo: void 0,
        signatures: []
      };
    }
    exports.Tx = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.body !== void 0) {
          exports.TxBody.encode(message.body, writer.uint32(10).fork()).ldelim();
        }
        if (message.authInfo !== void 0) {
          exports.AuthInfo.encode(message.authInfo, writer.uint32(18).fork()).ldelim();
        }
        for (const v of message.signatures) {
          writer.uint32(26).bytes(v);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseTx();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.body = exports.TxBody.decode(reader, reader.uint32());
              break;
            case 2:
              message.authInfo = exports.AuthInfo.decode(reader, reader.uint32());
              break;
            case 3:
              message.signatures.push(reader.bytes());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          body: (0, helpers_1.isSet)(object.body) ? exports.TxBody.fromJSON(object.body) : void 0,
          authInfo: (0, helpers_1.isSet)(object.authInfo) ? exports.AuthInfo.fromJSON(object.authInfo) : void 0,
          signatures: Array.isArray(object == null ? void 0 : object.signatures) ? object.signatures.map((e) => (0, helpers_1.bytesFromBase64)(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.body !== void 0 && (obj.body = message.body ? exports.TxBody.toJSON(message.body) : void 0);
        message.authInfo !== void 0 && (obj.authInfo = message.authInfo ? exports.AuthInfo.toJSON(message.authInfo) : void 0);
        if (message.signatures) {
          obj.signatures = message.signatures.map((e) => (0, helpers_1.base64FromBytes)(e !== void 0 ? e : new Uint8Array()));
        } else {
          obj.signatures = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseTx();
        message.body = object.body !== void 0 && object.body !== null ? exports.TxBody.fromPartial(object.body) : void 0;
        message.authInfo = object.authInfo !== void 0 && object.authInfo !== null ? exports.AuthInfo.fromPartial(object.authInfo) : void 0;
        message.signatures = ((_a = object.signatures) == null ? void 0 : _a.map((e) => e)) || [];
        return message;
      }
    };
    function createBaseTxRaw() {
      return {
        bodyBytes: new Uint8Array(),
        authInfoBytes: new Uint8Array(),
        signatures: []
      };
    }
    exports.TxRaw = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.bodyBytes.length !== 0) {
          writer.uint32(10).bytes(message.bodyBytes);
        }
        if (message.authInfoBytes.length !== 0) {
          writer.uint32(18).bytes(message.authInfoBytes);
        }
        for (const v of message.signatures) {
          writer.uint32(26).bytes(v);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseTxRaw();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.bodyBytes = reader.bytes();
              break;
            case 2:
              message.authInfoBytes = reader.bytes();
              break;
            case 3:
              message.signatures.push(reader.bytes());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          bodyBytes: (0, helpers_1.isSet)(object.bodyBytes) ? (0, helpers_1.bytesFromBase64)(object.bodyBytes) : new Uint8Array(),
          authInfoBytes: (0, helpers_1.isSet)(object.authInfoBytes) ? (0, helpers_1.bytesFromBase64)(object.authInfoBytes) : new Uint8Array(),
          signatures: Array.isArray(object == null ? void 0 : object.signatures) ? object.signatures.map((e) => (0, helpers_1.bytesFromBase64)(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.bodyBytes !== void 0 && (obj.bodyBytes = (0, helpers_1.base64FromBytes)(message.bodyBytes !== void 0 ? message.bodyBytes : new Uint8Array()));
        message.authInfoBytes !== void 0 && (obj.authInfoBytes = (0, helpers_1.base64FromBytes)(message.authInfoBytes !== void 0 ? message.authInfoBytes : new Uint8Array()));
        if (message.signatures) {
          obj.signatures = message.signatures.map((e) => (0, helpers_1.base64FromBytes)(e !== void 0 ? e : new Uint8Array()));
        } else {
          obj.signatures = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseTxRaw();
        message.bodyBytes = object.bodyBytes ?? new Uint8Array();
        message.authInfoBytes = object.authInfoBytes ?? new Uint8Array();
        message.signatures = ((_a = object.signatures) == null ? void 0 : _a.map((e) => e)) || [];
        return message;
      }
    };
    function createBaseSignDoc() {
      return {
        bodyBytes: new Uint8Array(),
        authInfoBytes: new Uint8Array(),
        chainId: "",
        accountNumber: helpers_1.Long.UZERO
      };
    }
    exports.SignDoc = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.bodyBytes.length !== 0) {
          writer.uint32(10).bytes(message.bodyBytes);
        }
        if (message.authInfoBytes.length !== 0) {
          writer.uint32(18).bytes(message.authInfoBytes);
        }
        if (message.chainId !== "") {
          writer.uint32(26).string(message.chainId);
        }
        if (!message.accountNumber.isZero()) {
          writer.uint32(32).uint64(message.accountNumber);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseSignDoc();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.bodyBytes = reader.bytes();
              break;
            case 2:
              message.authInfoBytes = reader.bytes();
              break;
            case 3:
              message.chainId = reader.string();
              break;
            case 4:
              message.accountNumber = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          bodyBytes: (0, helpers_1.isSet)(object.bodyBytes) ? (0, helpers_1.bytesFromBase64)(object.bodyBytes) : new Uint8Array(),
          authInfoBytes: (0, helpers_1.isSet)(object.authInfoBytes) ? (0, helpers_1.bytesFromBase64)(object.authInfoBytes) : new Uint8Array(),
          chainId: (0, helpers_1.isSet)(object.chainId) ? String(object.chainId) : "",
          accountNumber: (0, helpers_1.isSet)(object.accountNumber) ? helpers_1.Long.fromValue(object.accountNumber) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.bodyBytes !== void 0 && (obj.bodyBytes = (0, helpers_1.base64FromBytes)(message.bodyBytes !== void 0 ? message.bodyBytes : new Uint8Array()));
        message.authInfoBytes !== void 0 && (obj.authInfoBytes = (0, helpers_1.base64FromBytes)(message.authInfoBytes !== void 0 ? message.authInfoBytes : new Uint8Array()));
        message.chainId !== void 0 && (obj.chainId = message.chainId);
        message.accountNumber !== void 0 && (obj.accountNumber = (message.accountNumber || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseSignDoc();
        message.bodyBytes = object.bodyBytes ?? new Uint8Array();
        message.authInfoBytes = object.authInfoBytes ?? new Uint8Array();
        message.chainId = object.chainId ?? "";
        message.accountNumber = object.accountNumber !== void 0 && object.accountNumber !== null ? helpers_1.Long.fromValue(object.accountNumber) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseTxBody() {
      return {
        messages: [],
        memo: "",
        timeoutHeight: helpers_1.Long.UZERO,
        extensionOptions: [],
        nonCriticalExtensionOptions: []
      };
    }
    exports.TxBody = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.messages) {
          any_1.Any.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.memo !== "") {
          writer.uint32(18).string(message.memo);
        }
        if (!message.timeoutHeight.isZero()) {
          writer.uint32(24).uint64(message.timeoutHeight);
        }
        for (const v of message.extensionOptions) {
          any_1.Any.encode(v, writer.uint32(8186).fork()).ldelim();
        }
        for (const v of message.nonCriticalExtensionOptions) {
          any_1.Any.encode(v, writer.uint32(16378).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseTxBody();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.messages.push(any_1.Any.decode(reader, reader.uint32()));
              break;
            case 2:
              message.memo = reader.string();
              break;
            case 3:
              message.timeoutHeight = reader.uint64();
              break;
            case 1023:
              message.extensionOptions.push(any_1.Any.decode(reader, reader.uint32()));
              break;
            case 2047:
              message.nonCriticalExtensionOptions.push(any_1.Any.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          messages: Array.isArray(object == null ? void 0 : object.messages) ? object.messages.map((e) => any_1.Any.fromJSON(e)) : [],
          memo: (0, helpers_1.isSet)(object.memo) ? String(object.memo) : "",
          timeoutHeight: (0, helpers_1.isSet)(object.timeoutHeight) ? helpers_1.Long.fromValue(object.timeoutHeight) : helpers_1.Long.UZERO,
          extensionOptions: Array.isArray(object == null ? void 0 : object.extensionOptions) ? object.extensionOptions.map((e) => any_1.Any.fromJSON(e)) : [],
          nonCriticalExtensionOptions: Array.isArray(object == null ? void 0 : object.nonCriticalExtensionOptions) ? object.nonCriticalExtensionOptions.map((e) => any_1.Any.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.messages) {
          obj.messages = message.messages.map((e) => e ? any_1.Any.toJSON(e) : void 0);
        } else {
          obj.messages = [];
        }
        message.memo !== void 0 && (obj.memo = message.memo);
        message.timeoutHeight !== void 0 && (obj.timeoutHeight = (message.timeoutHeight || helpers_1.Long.UZERO).toString());
        if (message.extensionOptions) {
          obj.extensionOptions = message.extensionOptions.map((e) => e ? any_1.Any.toJSON(e) : void 0);
        } else {
          obj.extensionOptions = [];
        }
        if (message.nonCriticalExtensionOptions) {
          obj.nonCriticalExtensionOptions = message.nonCriticalExtensionOptions.map((e) => e ? any_1.Any.toJSON(e) : void 0);
        } else {
          obj.nonCriticalExtensionOptions = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a, _b, _c;
        const message = createBaseTxBody();
        message.messages = ((_a = object.messages) == null ? void 0 : _a.map((e) => any_1.Any.fromPartial(e))) || [];
        message.memo = object.memo ?? "";
        message.timeoutHeight = object.timeoutHeight !== void 0 && object.timeoutHeight !== null ? helpers_1.Long.fromValue(object.timeoutHeight) : helpers_1.Long.UZERO;
        message.extensionOptions = ((_b = object.extensionOptions) == null ? void 0 : _b.map((e) => any_1.Any.fromPartial(e))) || [];
        message.nonCriticalExtensionOptions = ((_c = object.nonCriticalExtensionOptions) == null ? void 0 : _c.map((e) => any_1.Any.fromPartial(e))) || [];
        return message;
      }
    };
    function createBaseAuthInfo() {
      return {
        signerInfos: [],
        fee: void 0
      };
    }
    exports.AuthInfo = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.signerInfos) {
          exports.SignerInfo.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.fee !== void 0) {
          exports.Fee.encode(message.fee, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseAuthInfo();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.signerInfos.push(exports.SignerInfo.decode(reader, reader.uint32()));
              break;
            case 2:
              message.fee = exports.Fee.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          signerInfos: Array.isArray(object == null ? void 0 : object.signerInfos) ? object.signerInfos.map((e) => exports.SignerInfo.fromJSON(e)) : [],
          fee: (0, helpers_1.isSet)(object.fee) ? exports.Fee.fromJSON(object.fee) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.signerInfos) {
          obj.signerInfos = message.signerInfos.map((e) => e ? exports.SignerInfo.toJSON(e) : void 0);
        } else {
          obj.signerInfos = [];
        }
        message.fee !== void 0 && (obj.fee = message.fee ? exports.Fee.toJSON(message.fee) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseAuthInfo();
        message.signerInfos = ((_a = object.signerInfos) == null ? void 0 : _a.map((e) => exports.SignerInfo.fromPartial(e))) || [];
        message.fee = object.fee !== void 0 && object.fee !== null ? exports.Fee.fromPartial(object.fee) : void 0;
        return message;
      }
    };
    function createBaseSignerInfo() {
      return {
        publicKey: void 0,
        modeInfo: void 0,
        sequence: helpers_1.Long.UZERO
      };
    }
    exports.SignerInfo = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.publicKey !== void 0) {
          any_1.Any.encode(message.publicKey, writer.uint32(10).fork()).ldelim();
        }
        if (message.modeInfo !== void 0) {
          exports.ModeInfo.encode(message.modeInfo, writer.uint32(18).fork()).ldelim();
        }
        if (!message.sequence.isZero()) {
          writer.uint32(24).uint64(message.sequence);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseSignerInfo();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.publicKey = any_1.Any.decode(reader, reader.uint32());
              break;
            case 2:
              message.modeInfo = exports.ModeInfo.decode(reader, reader.uint32());
              break;
            case 3:
              message.sequence = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          publicKey: (0, helpers_1.isSet)(object.publicKey) ? any_1.Any.fromJSON(object.publicKey) : void 0,
          modeInfo: (0, helpers_1.isSet)(object.modeInfo) ? exports.ModeInfo.fromJSON(object.modeInfo) : void 0,
          sequence: (0, helpers_1.isSet)(object.sequence) ? helpers_1.Long.fromValue(object.sequence) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.publicKey !== void 0 && (obj.publicKey = message.publicKey ? any_1.Any.toJSON(message.publicKey) : void 0);
        message.modeInfo !== void 0 && (obj.modeInfo = message.modeInfo ? exports.ModeInfo.toJSON(message.modeInfo) : void 0);
        message.sequence !== void 0 && (obj.sequence = (message.sequence || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseSignerInfo();
        message.publicKey = object.publicKey !== void 0 && object.publicKey !== null ? any_1.Any.fromPartial(object.publicKey) : void 0;
        message.modeInfo = object.modeInfo !== void 0 && object.modeInfo !== null ? exports.ModeInfo.fromPartial(object.modeInfo) : void 0;
        message.sequence = object.sequence !== void 0 && object.sequence !== null ? helpers_1.Long.fromValue(object.sequence) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseModeInfo() {
      return {
        single: void 0,
        multi: void 0
      };
    }
    exports.ModeInfo = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.single !== void 0) {
          exports.ModeInfo_Single.encode(message.single, writer.uint32(10).fork()).ldelim();
        }
        if (message.multi !== void 0) {
          exports.ModeInfo_Multi.encode(message.multi, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseModeInfo();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.single = exports.ModeInfo_Single.decode(reader, reader.uint32());
              break;
            case 2:
              message.multi = exports.ModeInfo_Multi.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          single: (0, helpers_1.isSet)(object.single) ? exports.ModeInfo_Single.fromJSON(object.single) : void 0,
          multi: (0, helpers_1.isSet)(object.multi) ? exports.ModeInfo_Multi.fromJSON(object.multi) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.single !== void 0 && (obj.single = message.single ? exports.ModeInfo_Single.toJSON(message.single) : void 0);
        message.multi !== void 0 && (obj.multi = message.multi ? exports.ModeInfo_Multi.toJSON(message.multi) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseModeInfo();
        message.single = object.single !== void 0 && object.single !== null ? exports.ModeInfo_Single.fromPartial(object.single) : void 0;
        message.multi = object.multi !== void 0 && object.multi !== null ? exports.ModeInfo_Multi.fromPartial(object.multi) : void 0;
        return message;
      }
    };
    function createBaseModeInfo_Single() {
      return {
        mode: 0
      };
    }
    exports.ModeInfo_Single = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.mode !== 0) {
          writer.uint32(8).int32(message.mode);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseModeInfo_Single();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.mode = reader.int32();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          mode: (0, helpers_1.isSet)(object.mode) ? (0, signing_1.signModeFromJSON)(object.mode) : 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.mode !== void 0 && (obj.mode = (0, signing_1.signModeToJSON)(message.mode));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseModeInfo_Single();
        message.mode = object.mode ?? 0;
        return message;
      }
    };
    function createBaseModeInfo_Multi() {
      return {
        bitarray: void 0,
        modeInfos: []
      };
    }
    exports.ModeInfo_Multi = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.bitarray !== void 0) {
          multisig_1.CompactBitArray.encode(message.bitarray, writer.uint32(10).fork()).ldelim();
        }
        for (const v of message.modeInfos) {
          exports.ModeInfo.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseModeInfo_Multi();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.bitarray = multisig_1.CompactBitArray.decode(reader, reader.uint32());
              break;
            case 2:
              message.modeInfos.push(exports.ModeInfo.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          bitarray: (0, helpers_1.isSet)(object.bitarray) ? multisig_1.CompactBitArray.fromJSON(object.bitarray) : void 0,
          modeInfos: Array.isArray(object == null ? void 0 : object.modeInfos) ? object.modeInfos.map((e) => exports.ModeInfo.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.bitarray !== void 0 && (obj.bitarray = message.bitarray ? multisig_1.CompactBitArray.toJSON(message.bitarray) : void 0);
        if (message.modeInfos) {
          obj.modeInfos = message.modeInfos.map((e) => e ? exports.ModeInfo.toJSON(e) : void 0);
        } else {
          obj.modeInfos = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseModeInfo_Multi();
        message.bitarray = object.bitarray !== void 0 && object.bitarray !== null ? multisig_1.CompactBitArray.fromPartial(object.bitarray) : void 0;
        message.modeInfos = ((_a = object.modeInfos) == null ? void 0 : _a.map((e) => exports.ModeInfo.fromPartial(e))) || [];
        return message;
      }
    };
    function createBaseFee() {
      return {
        amount: [],
        gasLimit: helpers_1.Long.UZERO,
        payer: "",
        granter: ""
      };
    }
    exports.Fee = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.amount) {
          coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (!message.gasLimit.isZero()) {
          writer.uint32(16).uint64(message.gasLimit);
        }
        if (message.payer !== "") {
          writer.uint32(26).string(message.payer);
        }
        if (message.granter !== "") {
          writer.uint32(34).string(message.granter);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseFee();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            case 2:
              message.gasLimit = reader.uint64();
              break;
            case 3:
              message.payer = reader.string();
              break;
            case 4:
              message.granter = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          amount: Array.isArray(object == null ? void 0 : object.amount) ? object.amount.map((e) => coin_1.Coin.fromJSON(e)) : [],
          gasLimit: (0, helpers_1.isSet)(object.gasLimit) ? helpers_1.Long.fromValue(object.gasLimit) : helpers_1.Long.UZERO,
          payer: (0, helpers_1.isSet)(object.payer) ? String(object.payer) : "",
          granter: (0, helpers_1.isSet)(object.granter) ? String(object.granter) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.amount) {
          obj.amount = message.amount.map((e) => e ? coin_1.Coin.toJSON(e) : void 0);
        } else {
          obj.amount = [];
        }
        message.gasLimit !== void 0 && (obj.gasLimit = (message.gasLimit || helpers_1.Long.UZERO).toString());
        message.payer !== void 0 && (obj.payer = message.payer);
        message.granter !== void 0 && (obj.granter = message.granter);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseFee();
        message.amount = ((_a = object.amount) == null ? void 0 : _a.map((e) => coin_1.Coin.fromPartial(e))) || [];
        message.gasLimit = object.gasLimit !== void 0 && object.gasLimit !== null ? helpers_1.Long.fromValue(object.gasLimit) : helpers_1.Long.UZERO;
        message.payer = object.payer ?? "";
        message.granter = object.granter ?? "";
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/proto-signing/build/decode.js
var require_decode = __commonJS({
  "node_modules/@cosmjs/proto-signing/build/decode.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.decodeTxRaw = void 0;
    var tx_1 = require_tx();
    function decodeTxRaw(tx) {
      const txRaw = tx_1.TxRaw.decode(tx);
      return {
        authInfo: tx_1.AuthInfo.decode(txRaw.authInfoBytes),
        body: tx_1.TxBody.decode(txRaw.bodyBytes),
        signatures: txRaw.signatures
      };
    }
    exports.decodeTxRaw = decodeTxRaw;
  }
});

// node_modules/@cosmjs/encoding/build/ascii.js
var require_ascii = __commonJS({
  "node_modules/@cosmjs/encoding/build/ascii.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.fromAscii = exports.toAscii = void 0;
    function toAscii(input) {
      const toNums = (str) => str.split("").map((x) => {
        const charCode = x.charCodeAt(0);
        if (charCode < 32 || charCode > 126) {
          throw new Error("Cannot encode character that is out of printable ASCII range: " + charCode);
        }
        return charCode;
      });
      return Uint8Array.from(toNums(input));
    }
    exports.toAscii = toAscii;
    function fromAscii(data) {
      const fromNums = (listOfNumbers) => listOfNumbers.map((x) => {
        if (x < 32 || x > 126) {
          throw new Error("Cannot decode character that is out of printable ASCII range: " + x);
        }
        return String.fromCharCode(x);
      });
      return fromNums(Array.from(data)).join("");
    }
    exports.fromAscii = fromAscii;
  }
});

// node_modules/base64-js/index.js
var require_base64_js = __commonJS({
  "node_modules/base64-js/index.js"(exports) {
    "use strict";
    exports.byteLength = byteLength;
    exports.toByteArray = toByteArray;
    exports.fromByteArray = fromByteArray;
    var lookup = [];
    var revLookup = [];
    var Arr = typeof Uint8Array !== "undefined" ? Uint8Array : Array;
    var code = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
    for (i = 0, len = code.length; i < len; ++i) {
      lookup[i] = code[i];
      revLookup[code.charCodeAt(i)] = i;
    }
    var i;
    var len;
    revLookup["-".charCodeAt(0)] = 62;
    revLookup["_".charCodeAt(0)] = 63;
    function getLens(b64) {
      var len2 = b64.length;
      if (len2 % 4 > 0) {
        throw new Error("Invalid string. Length must be a multiple of 4");
      }
      var validLen = b64.indexOf("=");
      if (validLen === -1)
        validLen = len2;
      var placeHoldersLen = validLen === len2 ? 0 : 4 - validLen % 4;
      return [validLen, placeHoldersLen];
    }
    function byteLength(b64) {
      var lens = getLens(b64);
      var validLen = lens[0];
      var placeHoldersLen = lens[1];
      return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
    }
    function _byteLength(b64, validLen, placeHoldersLen) {
      return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
    }
    function toByteArray(b64) {
      var tmp;
      var lens = getLens(b64);
      var validLen = lens[0];
      var placeHoldersLen = lens[1];
      var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));
      var curByte = 0;
      var len2 = placeHoldersLen > 0 ? validLen - 4 : validLen;
      var i2;
      for (i2 = 0; i2 < len2; i2 += 4) {
        tmp = revLookup[b64.charCodeAt(i2)] << 18 | revLookup[b64.charCodeAt(i2 + 1)] << 12 | revLookup[b64.charCodeAt(i2 + 2)] << 6 | revLookup[b64.charCodeAt(i2 + 3)];
        arr[curByte++] = tmp >> 16 & 255;
        arr[curByte++] = tmp >> 8 & 255;
        arr[curByte++] = tmp & 255;
      }
      if (placeHoldersLen === 2) {
        tmp = revLookup[b64.charCodeAt(i2)] << 2 | revLookup[b64.charCodeAt(i2 + 1)] >> 4;
        arr[curByte++] = tmp & 255;
      }
      if (placeHoldersLen === 1) {
        tmp = revLookup[b64.charCodeAt(i2)] << 10 | revLookup[b64.charCodeAt(i2 + 1)] << 4 | revLookup[b64.charCodeAt(i2 + 2)] >> 2;
        arr[curByte++] = tmp >> 8 & 255;
        arr[curByte++] = tmp & 255;
      }
      return arr;
    }
    function tripletToBase64(num) {
      return lookup[num >> 18 & 63] + lookup[num >> 12 & 63] + lookup[num >> 6 & 63] + lookup[num & 63];
    }
    function encodeChunk(uint8, start, end) {
      var tmp;
      var output = [];
      for (var i2 = start; i2 < end; i2 += 3) {
        tmp = (uint8[i2] << 16 & 16711680) + (uint8[i2 + 1] << 8 & 65280) + (uint8[i2 + 2] & 255);
        output.push(tripletToBase64(tmp));
      }
      return output.join("");
    }
    function fromByteArray(uint8) {
      var tmp;
      var len2 = uint8.length;
      var extraBytes = len2 % 3;
      var parts = [];
      var maxChunkLength = 16383;
      for (var i2 = 0, len22 = len2 - extraBytes; i2 < len22; i2 += maxChunkLength) {
        parts.push(encodeChunk(uint8, i2, i2 + maxChunkLength > len22 ? len22 : i2 + maxChunkLength));
      }
      if (extraBytes === 1) {
        tmp = uint8[len2 - 1];
        parts.push(
          lookup[tmp >> 2] + lookup[tmp << 4 & 63] + "=="
        );
      } else if (extraBytes === 2) {
        tmp = (uint8[len2 - 2] << 8) + uint8[len2 - 1];
        parts.push(
          lookup[tmp >> 10] + lookup[tmp >> 4 & 63] + lookup[tmp << 2 & 63] + "="
        );
      }
      return parts.join("");
    }
  }
});

// node_modules/@cosmjs/encoding/build/base64.js
var require_base64 = __commonJS({
  "node_modules/@cosmjs/encoding/build/base64.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.fromBase64 = exports.toBase64 = void 0;
    var base64js = __importStar(require_base64_js());
    function toBase64(data) {
      return base64js.fromByteArray(data);
    }
    exports.toBase64 = toBase64;
    function fromBase64(base64String) {
      if (!base64String.match(/^[a-zA-Z0-9+/]*={0,2}$/)) {
        throw new Error("Invalid base64 string format");
      }
      return base64js.toByteArray(base64String);
    }
    exports.fromBase64 = fromBase64;
  }
});

// node_modules/bech32/index.js
var require_bech32 = __commonJS({
  "node_modules/bech32/index.js"(exports, module) {
    "use strict";
    var ALPHABET = "qpzry9x8gf2tvdw0s3jn54khce6mua7l";
    var ALPHABET_MAP = {};
    for (z = 0; z < ALPHABET.length; z++) {
      x = ALPHABET.charAt(z);
      if (ALPHABET_MAP[x] !== void 0)
        throw new TypeError(x + " is ambiguous");
      ALPHABET_MAP[x] = z;
    }
    var x;
    var z;
    function polymodStep(pre) {
      var b = pre >> 25;
      return (pre & 33554431) << 5 ^ -(b >> 0 & 1) & 996825010 ^ -(b >> 1 & 1) & 642813549 ^ -(b >> 2 & 1) & 513874426 ^ -(b >> 3 & 1) & 1027748829 ^ -(b >> 4 & 1) & 705979059;
    }
    function prefixChk(prefix) {
      var chk = 1;
      for (var i = 0; i < prefix.length; ++i) {
        var c = prefix.charCodeAt(i);
        if (c < 33 || c > 126)
          return "Invalid prefix (" + prefix + ")";
        chk = polymodStep(chk) ^ c >> 5;
      }
      chk = polymodStep(chk);
      for (i = 0; i < prefix.length; ++i) {
        var v = prefix.charCodeAt(i);
        chk = polymodStep(chk) ^ v & 31;
      }
      return chk;
    }
    function encode(prefix, words, LIMIT) {
      LIMIT = LIMIT || 90;
      if (prefix.length + 7 + words.length > LIMIT)
        throw new TypeError("Exceeds length limit");
      prefix = prefix.toLowerCase();
      var chk = prefixChk(prefix);
      if (typeof chk === "string")
        throw new Error(chk);
      var result = prefix + "1";
      for (var i = 0; i < words.length; ++i) {
        var x2 = words[i];
        if (x2 >> 5 !== 0)
          throw new Error("Non 5-bit word");
        chk = polymodStep(chk) ^ x2;
        result += ALPHABET.charAt(x2);
      }
      for (i = 0; i < 6; ++i) {
        chk = polymodStep(chk);
      }
      chk ^= 1;
      for (i = 0; i < 6; ++i) {
        var v = chk >> (5 - i) * 5 & 31;
        result += ALPHABET.charAt(v);
      }
      return result;
    }
    function __decode(str, LIMIT) {
      LIMIT = LIMIT || 90;
      if (str.length < 8)
        return str + " too short";
      if (str.length > LIMIT)
        return "Exceeds length limit";
      var lowered = str.toLowerCase();
      var uppered = str.toUpperCase();
      if (str !== lowered && str !== uppered)
        return "Mixed-case string " + str;
      str = lowered;
      var split = str.lastIndexOf("1");
      if (split === -1)
        return "No separator character for " + str;
      if (split === 0)
        return "Missing prefix for " + str;
      var prefix = str.slice(0, split);
      var wordChars = str.slice(split + 1);
      if (wordChars.length < 6)
        return "Data too short";
      var chk = prefixChk(prefix);
      if (typeof chk === "string")
        return chk;
      var words = [];
      for (var i = 0; i < wordChars.length; ++i) {
        var c = wordChars.charAt(i);
        var v = ALPHABET_MAP[c];
        if (v === void 0)
          return "Unknown character " + c;
        chk = polymodStep(chk) ^ v;
        if (i + 6 >= wordChars.length)
          continue;
        words.push(v);
      }
      if (chk !== 1)
        return "Invalid checksum for " + str;
      return { prefix, words };
    }
    function decodeUnsafe() {
      var res = __decode.apply(null, arguments);
      if (typeof res === "object")
        return res;
    }
    function decode(str) {
      var res = __decode.apply(null, arguments);
      if (typeof res === "object")
        return res;
      throw new Error(res);
    }
    function convert(data, inBits, outBits, pad) {
      var value = 0;
      var bits = 0;
      var maxV = (1 << outBits) - 1;
      var result = [];
      for (var i = 0; i < data.length; ++i) {
        value = value << inBits | data[i];
        bits += inBits;
        while (bits >= outBits) {
          bits -= outBits;
          result.push(value >> bits & maxV);
        }
      }
      if (pad) {
        if (bits > 0) {
          result.push(value << outBits - bits & maxV);
        }
      } else {
        if (bits >= inBits)
          return "Excess padding";
        if (value << outBits - bits & maxV)
          return "Non-zero padding";
      }
      return result;
    }
    function toWordsUnsafe(bytes) {
      var res = convert(bytes, 8, 5, true);
      if (Array.isArray(res))
        return res;
    }
    function toWords(bytes) {
      var res = convert(bytes, 8, 5, true);
      if (Array.isArray(res))
        return res;
      throw new Error(res);
    }
    function fromWordsUnsafe(words) {
      var res = convert(words, 5, 8, false);
      if (Array.isArray(res))
        return res;
    }
    function fromWords(words) {
      var res = convert(words, 5, 8, false);
      if (Array.isArray(res))
        return res;
      throw new Error(res);
    }
    module.exports = {
      decodeUnsafe,
      decode,
      encode,
      toWordsUnsafe,
      toWords,
      fromWordsUnsafe,
      fromWords
    };
  }
});

// node_modules/@cosmjs/encoding/build/bech32.js
var require_bech322 = __commonJS({
  "node_modules/@cosmjs/encoding/build/bech32.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.normalizeBech32 = exports.fromBech32 = exports.toBech32 = void 0;
    var bech32 = __importStar(require_bech32());
    function toBech32(prefix, data, limit) {
      const address = bech32.encode(prefix, bech32.toWords(data), limit);
      return address;
    }
    exports.toBech32 = toBech32;
    function fromBech32(address, limit = Infinity) {
      const decodedAddress = bech32.decode(address, limit);
      return {
        prefix: decodedAddress.prefix,
        data: new Uint8Array(bech32.fromWords(decodedAddress.words))
      };
    }
    exports.fromBech32 = fromBech32;
    function normalizeBech32(address) {
      const { prefix, data } = fromBech32(address);
      return toBech32(prefix, data);
    }
    exports.normalizeBech32 = normalizeBech32;
  }
});

// node_modules/@cosmjs/encoding/build/hex.js
var require_hex = __commonJS({
  "node_modules/@cosmjs/encoding/build/hex.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.fromHex = exports.toHex = void 0;
    function toHex(data) {
      let out = "";
      for (const byte of data) {
        out += ("0" + byte.toString(16)).slice(-2);
      }
      return out;
    }
    exports.toHex = toHex;
    function fromHex(hexstring) {
      if (hexstring.length % 2 !== 0) {
        throw new Error("hex string length must be a multiple of 2");
      }
      const out = new Uint8Array(hexstring.length / 2);
      for (let i = 0; i < out.length; i++) {
        const j = 2 * i;
        const hexByteAsString = hexstring.slice(j, j + 2);
        if (!hexByteAsString.match(/[0-9a-f]{2}/i)) {
          throw new Error("hex string contains invalid characters");
        }
        out[i] = parseInt(hexByteAsString, 16);
      }
      return out;
    }
    exports.fromHex = fromHex;
  }
});

// node_modules/@cosmjs/encoding/build/rfc3339.js
var require_rfc3339 = __commonJS({
  "node_modules/@cosmjs/encoding/build/rfc3339.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.toRfc3339 = exports.fromRfc3339 = void 0;
    var rfc3339Matcher = /^(\d{4})-(\d{2})-(\d{2})[T ](\d{2}):(\d{2}):(\d{2})(\.\d{1,9})?((?:[+-]\d{2}:\d{2})|Z)$/;
    function padded(integer, length = 2) {
      return integer.toString().padStart(length, "0");
    }
    function fromRfc3339(str) {
      const matches = rfc3339Matcher.exec(str);
      if (!matches) {
        throw new Error("Date string is not in RFC3339 format");
      }
      const year = +matches[1];
      const month = +matches[2];
      const day = +matches[3];
      const hour = +matches[4];
      const minute = +matches[5];
      const second = +matches[6];
      const milliSeconds = matches[7] ? Math.floor(+matches[7] * 1e3) : 0;
      let tzOffsetSign;
      let tzOffsetHours;
      let tzOffsetMinutes;
      if (matches[8] === "Z") {
        tzOffsetSign = 1;
        tzOffsetHours = 0;
        tzOffsetMinutes = 0;
      } else {
        tzOffsetSign = matches[8].substring(0, 1) === "-" ? -1 : 1;
        tzOffsetHours = +matches[8].substring(1, 3);
        tzOffsetMinutes = +matches[8].substring(4, 6);
      }
      const tzOffset = tzOffsetSign * (tzOffsetHours * 60 + tzOffsetMinutes) * 60;
      const timestamp = Date.UTC(year, month - 1, day, hour, minute, second, milliSeconds) - tzOffset * 1e3;
      return new Date(timestamp);
    }
    exports.fromRfc3339 = fromRfc3339;
    function toRfc3339(date) {
      const year = date.getUTCFullYear();
      const month = padded(date.getUTCMonth() + 1);
      const day = padded(date.getUTCDate());
      const hour = padded(date.getUTCHours());
      const minute = padded(date.getUTCMinutes());
      const second = padded(date.getUTCSeconds());
      const ms = padded(date.getUTCMilliseconds(), 3);
      return `${year}-${month}-${day}T${hour}:${minute}:${second}.${ms}Z`;
    }
    exports.toRfc3339 = toRfc3339;
  }
});

// node_modules/@cosmjs/encoding/build/utf8.js
var require_utf8 = __commonJS({
  "node_modules/@cosmjs/encoding/build/utf8.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.fromUtf8 = exports.toUtf8 = void 0;
    function toUtf8(str) {
      return new TextEncoder().encode(str);
    }
    exports.toUtf8 = toUtf8;
    function fromUtf8(data, lossy = false) {
      const fatal = !lossy;
      return new TextDecoder("utf-8", { fatal }).decode(data);
    }
    exports.fromUtf8 = fromUtf8;
  }
});

// node_modules/@cosmjs/encoding/build/index.js
var require_build2 = __commonJS({
  "node_modules/@cosmjs/encoding/build/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.toUtf8 = exports.fromUtf8 = exports.toRfc3339 = exports.fromRfc3339 = exports.toHex = exports.fromHex = exports.toBech32 = exports.normalizeBech32 = exports.fromBech32 = exports.toBase64 = exports.fromBase64 = exports.toAscii = exports.fromAscii = void 0;
    var ascii_1 = require_ascii();
    Object.defineProperty(exports, "fromAscii", { enumerable: true, get: function() {
      return ascii_1.fromAscii;
    } });
    Object.defineProperty(exports, "toAscii", { enumerable: true, get: function() {
      return ascii_1.toAscii;
    } });
    var base64_1 = require_base64();
    Object.defineProperty(exports, "fromBase64", { enumerable: true, get: function() {
      return base64_1.fromBase64;
    } });
    Object.defineProperty(exports, "toBase64", { enumerable: true, get: function() {
      return base64_1.toBase64;
    } });
    var bech32_1 = require_bech322();
    Object.defineProperty(exports, "fromBech32", { enumerable: true, get: function() {
      return bech32_1.fromBech32;
    } });
    Object.defineProperty(exports, "normalizeBech32", { enumerable: true, get: function() {
      return bech32_1.normalizeBech32;
    } });
    Object.defineProperty(exports, "toBech32", { enumerable: true, get: function() {
      return bech32_1.toBech32;
    } });
    var hex_1 = require_hex();
    Object.defineProperty(exports, "fromHex", { enumerable: true, get: function() {
      return hex_1.fromHex;
    } });
    Object.defineProperty(exports, "toHex", { enumerable: true, get: function() {
      return hex_1.toHex;
    } });
    var rfc3339_1 = require_rfc3339();
    Object.defineProperty(exports, "fromRfc3339", { enumerable: true, get: function() {
      return rfc3339_1.fromRfc3339;
    } });
    Object.defineProperty(exports, "toRfc3339", { enumerable: true, get: function() {
      return rfc3339_1.toRfc3339;
    } });
    var utf8_1 = require_utf8();
    Object.defineProperty(exports, "fromUtf8", { enumerable: true, get: function() {
      return utf8_1.fromUtf8;
    } });
    Object.defineProperty(exports, "toUtf8", { enumerable: true, get: function() {
      return utf8_1.toUtf8;
    } });
  }
});

// node_modules/@cosmjs/utils/build/arrays.js
var require_arrays = __commonJS({
  "node_modules/@cosmjs/utils/build/arrays.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.arrayContentStartsWith = exports.arrayContentEquals = void 0;
    function arrayContentEquals(a, b) {
      if (a.length !== b.length)
        return false;
      for (let i = 0; i < a.length; ++i) {
        if (a[i] !== b[i])
          return false;
      }
      return true;
    }
    exports.arrayContentEquals = arrayContentEquals;
    function arrayContentStartsWith(a, b) {
      if (a.length < b.length)
        return false;
      for (let i = 0; i < b.length; ++i) {
        if (a[i] !== b[i])
          return false;
      }
      return true;
    }
    exports.arrayContentStartsWith = arrayContentStartsWith;
  }
});

// node_modules/@cosmjs/utils/build/assert.js
var require_assert = __commonJS({
  "node_modules/@cosmjs/utils/build/assert.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.assertDefinedAndNotNull = exports.assertDefined = exports.assert = void 0;
    function assert(condition, msg) {
      if (!condition) {
        throw new Error(msg || "condition is not truthy");
      }
    }
    exports.assert = assert;
    function assertDefined(value, msg) {
      if (value === void 0) {
        throw new Error(msg ?? "value is undefined");
      }
    }
    exports.assertDefined = assertDefined;
    function assertDefinedAndNotNull(value, msg) {
      if (value === void 0 || value === null) {
        throw new Error(msg ?? "value is undefined or null");
      }
    }
    exports.assertDefinedAndNotNull = assertDefinedAndNotNull;
  }
});

// node_modules/@cosmjs/utils/build/sleep.js
var require_sleep = __commonJS({
  "node_modules/@cosmjs/utils/build/sleep.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.sleep = void 0;
    async function sleep(ms) {
      return new Promise((resolve) => setTimeout(resolve, ms));
    }
    exports.sleep = sleep;
  }
});

// node_modules/@cosmjs/utils/build/typechecks.js
var require_typechecks = __commonJS({
  "node_modules/@cosmjs/utils/build/typechecks.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isDefined = exports.isUint8Array = exports.isNonNullObject = void 0;
    function isNonNullObject(data) {
      return typeof data === "object" && data !== null;
    }
    exports.isNonNullObject = isNonNullObject;
    function isUint8Array(data) {
      if (!isNonNullObject(data))
        return false;
      if (Object.prototype.toString.call(data) !== "[object Uint8Array]")
        return false;
      if (typeof Buffer !== "undefined" && typeof Buffer.isBuffer !== "undefined") {
        if (Buffer.isBuffer(data))
          return false;
      }
      return true;
    }
    exports.isUint8Array = isUint8Array;
    function isDefined(value) {
      return value !== void 0;
    }
    exports.isDefined = isDefined;
  }
});

// node_modules/@cosmjs/utils/build/index.js
var require_build3 = __commonJS({
  "node_modules/@cosmjs/utils/build/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isUint8Array = exports.isNonNullObject = exports.isDefined = exports.sleep = exports.assertDefinedAndNotNull = exports.assertDefined = exports.assert = exports.arrayContentStartsWith = exports.arrayContentEquals = void 0;
    var arrays_1 = require_arrays();
    Object.defineProperty(exports, "arrayContentEquals", { enumerable: true, get: function() {
      return arrays_1.arrayContentEquals;
    } });
    Object.defineProperty(exports, "arrayContentStartsWith", { enumerable: true, get: function() {
      return arrays_1.arrayContentStartsWith;
    } });
    var assert_1 = require_assert();
    Object.defineProperty(exports, "assert", { enumerable: true, get: function() {
      return assert_1.assert;
    } });
    Object.defineProperty(exports, "assertDefined", { enumerable: true, get: function() {
      return assert_1.assertDefined;
    } });
    Object.defineProperty(exports, "assertDefinedAndNotNull", { enumerable: true, get: function() {
      return assert_1.assertDefinedAndNotNull;
    } });
    var sleep_1 = require_sleep();
    Object.defineProperty(exports, "sleep", { enumerable: true, get: function() {
      return sleep_1.sleep;
    } });
    var typechecks_1 = require_typechecks();
    Object.defineProperty(exports, "isDefined", { enumerable: true, get: function() {
      return typechecks_1.isDefined;
    } });
    Object.defineProperty(exports, "isNonNullObject", { enumerable: true, get: function() {
      return typechecks_1.isNonNullObject;
    } });
    Object.defineProperty(exports, "isUint8Array", { enumerable: true, get: function() {
      return typechecks_1.isUint8Array;
    } });
  }
});

// node_modules/@noble/hashes/_assert.js
var require_assert2 = __commonJS({
  "node_modules/@noble/hashes/_assert.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.output = exports.exists = exports.hash = exports.bytes = exports.bool = exports.number = void 0;
    function number(n) {
      if (!Number.isSafeInteger(n) || n < 0)
        throw new Error(`Wrong positive integer: ${n}`);
    }
    exports.number = number;
    function bool(b) {
      if (typeof b !== "boolean")
        throw new Error(`Expected boolean, not ${b}`);
    }
    exports.bool = bool;
    function isBytes(a) {
      return a instanceof Uint8Array || a != null && typeof a === "object" && a.constructor.name === "Uint8Array";
    }
    function bytes(b, ...lengths) {
      if (!isBytes(b))
        throw new Error("Expected Uint8Array");
      if (lengths.length > 0 && !lengths.includes(b.length))
        throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);
    }
    exports.bytes = bytes;
    function hash(hash2) {
      if (typeof hash2 !== "function" || typeof hash2.create !== "function")
        throw new Error("Hash should be wrapped by utils.wrapConstructor");
      number(hash2.outputLen);
      number(hash2.blockLen);
    }
    exports.hash = hash;
    function exists(instance, checkFinished = true) {
      if (instance.destroyed)
        throw new Error("Hash instance has been destroyed");
      if (checkFinished && instance.finished)
        throw new Error("Hash#digest() has already been called");
    }
    exports.exists = exists;
    function output(out, instance) {
      bytes(out);
      const min = instance.outputLen;
      if (out.length < min) {
        throw new Error(`digestInto() expects output buffer of length at least ${min}`);
      }
    }
    exports.output = output;
    var assert = { number, bool, bytes, hash, exists, output };
    exports.default = assert;
  }
});

// node_modules/@noble/hashes/crypto.js
var require_crypto = __commonJS({
  "node_modules/@noble/hashes/crypto.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.crypto = void 0;
    exports.crypto = typeof globalThis === "object" && "crypto" in globalThis ? globalThis.crypto : void 0;
  }
});

// node_modules/@noble/hashes/utils.js
var require_utils = __commonJS({
  "node_modules/@noble/hashes/utils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.randomBytes = exports.wrapXOFConstructorWithOpts = exports.wrapConstructorWithOpts = exports.wrapConstructor = exports.checkOpts = exports.Hash = exports.concatBytes = exports.toBytes = exports.utf8ToBytes = exports.asyncLoop = exports.nextTick = exports.hexToBytes = exports.bytesToHex = exports.isLE = exports.rotr = exports.createView = exports.u32 = exports.u8 = void 0;
    var crypto_1 = require_crypto();
    var u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);
    exports.u8 = u8;
    var u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));
    exports.u32 = u32;
    function isBytes(a) {
      return a instanceof Uint8Array || a != null && typeof a === "object" && a.constructor.name === "Uint8Array";
    }
    var createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);
    exports.createView = createView;
    var rotr = (word, shift) => word << 32 - shift | word >>> shift;
    exports.rotr = rotr;
    exports.isLE = new Uint8Array(new Uint32Array([287454020]).buffer)[0] === 68;
    if (!exports.isLE)
      throw new Error("Non little-endian hardware is not supported");
    var hexes = Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, "0"));
    function bytesToHex(bytes) {
      if (!isBytes(bytes))
        throw new Error("Uint8Array expected");
      let hex = "";
      for (let i = 0; i < bytes.length; i++) {
        hex += hexes[bytes[i]];
      }
      return hex;
    }
    exports.bytesToHex = bytesToHex;
    var asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };
    function asciiToBase16(char) {
      if (char >= asciis._0 && char <= asciis._9)
        return char - asciis._0;
      if (char >= asciis._A && char <= asciis._F)
        return char - (asciis._A - 10);
      if (char >= asciis._a && char <= asciis._f)
        return char - (asciis._a - 10);
      return;
    }
    function hexToBytes(hex) {
      if (typeof hex !== "string")
        throw new Error("hex string expected, got " + typeof hex);
      const hl = hex.length;
      const al = hl / 2;
      if (hl % 2)
        throw new Error("padded hex string expected, got unpadded hex of length " + hl);
      const array = new Uint8Array(al);
      for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {
        const n1 = asciiToBase16(hex.charCodeAt(hi));
        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));
        if (n1 === void 0 || n2 === void 0) {
          const char = hex[hi] + hex[hi + 1];
          throw new Error('hex string expected, got non-hex character "' + char + '" at index ' + hi);
        }
        array[ai] = n1 * 16 + n2;
      }
      return array;
    }
    exports.hexToBytes = hexToBytes;
    var nextTick = async () => {
    };
    exports.nextTick = nextTick;
    async function asyncLoop(iters, tick, cb) {
      let ts = Date.now();
      for (let i = 0; i < iters; i++) {
        cb(i);
        const diff = Date.now() - ts;
        if (diff >= 0 && diff < tick)
          continue;
        await (0, exports.nextTick)();
        ts += diff;
      }
    }
    exports.asyncLoop = asyncLoop;
    function utf8ToBytes(str) {
      if (typeof str !== "string")
        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);
      return new Uint8Array(new TextEncoder().encode(str));
    }
    exports.utf8ToBytes = utf8ToBytes;
    function toBytes(data) {
      if (typeof data === "string")
        data = utf8ToBytes(data);
      if (!isBytes(data))
        throw new Error(`expected Uint8Array, got ${typeof data}`);
      return data;
    }
    exports.toBytes = toBytes;
    function concatBytes(...arrays) {
      let sum = 0;
      for (let i = 0; i < arrays.length; i++) {
        const a = arrays[i];
        if (!isBytes(a))
          throw new Error("Uint8Array expected");
        sum += a.length;
      }
      const res = new Uint8Array(sum);
      for (let i = 0, pad = 0; i < arrays.length; i++) {
        const a = arrays[i];
        res.set(a, pad);
        pad += a.length;
      }
      return res;
    }
    exports.concatBytes = concatBytes;
    var Hash = class {
      // Safe version that clones internal state
      clone() {
        return this._cloneInto();
      }
    };
    exports.Hash = Hash;
    var toStr = {}.toString;
    function checkOpts(defaults, opts) {
      if (opts !== void 0 && toStr.call(opts) !== "[object Object]")
        throw new Error("Options should be object or undefined");
      const merged = Object.assign(defaults, opts);
      return merged;
    }
    exports.checkOpts = checkOpts;
    function wrapConstructor(hashCons) {
      const hashC = (msg) => hashCons().update(toBytes(msg)).digest();
      const tmp = hashCons();
      hashC.outputLen = tmp.outputLen;
      hashC.blockLen = tmp.blockLen;
      hashC.create = () => hashCons();
      return hashC;
    }
    exports.wrapConstructor = wrapConstructor;
    function wrapConstructorWithOpts(hashCons) {
      const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();
      const tmp = hashCons({});
      hashC.outputLen = tmp.outputLen;
      hashC.blockLen = tmp.blockLen;
      hashC.create = (opts) => hashCons(opts);
      return hashC;
    }
    exports.wrapConstructorWithOpts = wrapConstructorWithOpts;
    function wrapXOFConstructorWithOpts(hashCons) {
      const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();
      const tmp = hashCons({});
      hashC.outputLen = tmp.outputLen;
      hashC.blockLen = tmp.blockLen;
      hashC.create = (opts) => hashCons(opts);
      return hashC;
    }
    exports.wrapXOFConstructorWithOpts = wrapXOFConstructorWithOpts;
    function randomBytes(bytesLength = 32) {
      if (crypto_1.crypto && typeof crypto_1.crypto.getRandomValues === "function") {
        return crypto_1.crypto.getRandomValues(new Uint8Array(bytesLength));
      }
      throw new Error("crypto.getRandomValues must be defined");
    }
    exports.randomBytes = randomBytes;
  }
});

// node_modules/@noble/hashes/hmac.js
var require_hmac = __commonJS({
  "node_modules/@noble/hashes/hmac.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.hmac = exports.HMAC = void 0;
    var _assert_js_1 = require_assert2();
    var utils_js_1 = require_utils();
    var HMAC = class extends utils_js_1.Hash {
      constructor(hash, _key) {
        super();
        this.finished = false;
        this.destroyed = false;
        (0, _assert_js_1.hash)(hash);
        const key = (0, utils_js_1.toBytes)(_key);
        this.iHash = hash.create();
        if (typeof this.iHash.update !== "function")
          throw new Error("Expected instance of class which extends utils.Hash");
        this.blockLen = this.iHash.blockLen;
        this.outputLen = this.iHash.outputLen;
        const blockLen = this.blockLen;
        const pad = new Uint8Array(blockLen);
        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);
        for (let i = 0; i < pad.length; i++)
          pad[i] ^= 54;
        this.iHash.update(pad);
        this.oHash = hash.create();
        for (let i = 0; i < pad.length; i++)
          pad[i] ^= 54 ^ 92;
        this.oHash.update(pad);
        pad.fill(0);
      }
      update(buf) {
        (0, _assert_js_1.exists)(this);
        this.iHash.update(buf);
        return this;
      }
      digestInto(out) {
        (0, _assert_js_1.exists)(this);
        (0, _assert_js_1.bytes)(out, this.outputLen);
        this.finished = true;
        this.iHash.digestInto(out);
        this.oHash.update(out);
        this.oHash.digestInto(out);
        this.destroy();
      }
      digest() {
        const out = new Uint8Array(this.oHash.outputLen);
        this.digestInto(out);
        return out;
      }
      _cloneInto(to) {
        to || (to = Object.create(Object.getPrototypeOf(this), {}));
        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;
        to = to;
        to.finished = finished;
        to.destroyed = destroyed;
        to.blockLen = blockLen;
        to.outputLen = outputLen;
        to.oHash = oHash._cloneInto(to.oHash);
        to.iHash = iHash._cloneInto(to.iHash);
        return to;
      }
      destroy() {
        this.destroyed = true;
        this.oHash.destroy();
        this.iHash.destroy();
      }
    };
    exports.HMAC = HMAC;
    var hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();
    exports.hmac = hmac;
    exports.hmac.create = (hash, key) => new HMAC(hash, key);
  }
});

// node_modules/@noble/hashes/pbkdf2.js
var require_pbkdf2 = __commonJS({
  "node_modules/@noble/hashes/pbkdf2.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.pbkdf2Async = exports.pbkdf2 = void 0;
    var _assert_js_1 = require_assert2();
    var hmac_js_1 = require_hmac();
    var utils_js_1 = require_utils();
    function pbkdf2Init(hash, _password, _salt, _opts) {
      (0, _assert_js_1.hash)(hash);
      const opts = (0, utils_js_1.checkOpts)({ dkLen: 32, asyncTick: 10 }, _opts);
      const { c, dkLen, asyncTick } = opts;
      (0, _assert_js_1.number)(c);
      (0, _assert_js_1.number)(dkLen);
      (0, _assert_js_1.number)(asyncTick);
      if (c < 1)
        throw new Error("PBKDF2: iterations (c) should be >= 1");
      const password = (0, utils_js_1.toBytes)(_password);
      const salt = (0, utils_js_1.toBytes)(_salt);
      const DK = new Uint8Array(dkLen);
      const PRF = hmac_js_1.hmac.create(hash, password);
      const PRFSalt = PRF._cloneInto().update(salt);
      return { c, dkLen, asyncTick, DK, PRF, PRFSalt };
    }
    function pbkdf2Output(PRF, PRFSalt, DK, prfW, u) {
      PRF.destroy();
      PRFSalt.destroy();
      if (prfW)
        prfW.destroy();
      u.fill(0);
      return DK;
    }
    function pbkdf2(hash, password, salt, opts) {
      const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);
      let prfW;
      const arr = new Uint8Array(4);
      const view = (0, utils_js_1.createView)(arr);
      const u = new Uint8Array(PRF.outputLen);
      for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {
        const Ti = DK.subarray(pos, pos + PRF.outputLen);
        view.setInt32(0, ti, false);
        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);
        Ti.set(u.subarray(0, Ti.length));
        for (let ui = 1; ui < c; ui++) {
          PRF._cloneInto(prfW).update(u).digestInto(u);
          for (let i = 0; i < Ti.length; i++)
            Ti[i] ^= u[i];
        }
      }
      return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);
    }
    exports.pbkdf2 = pbkdf2;
    async function pbkdf2Async(hash, password, salt, opts) {
      const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);
      let prfW;
      const arr = new Uint8Array(4);
      const view = (0, utils_js_1.createView)(arr);
      const u = new Uint8Array(PRF.outputLen);
      for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {
        const Ti = DK.subarray(pos, pos + PRF.outputLen);
        view.setInt32(0, ti, false);
        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);
        Ti.set(u.subarray(0, Ti.length));
        await (0, utils_js_1.asyncLoop)(c - 1, asyncTick, () => {
          PRF._cloneInto(prfW).update(u).digestInto(u);
          for (let i = 0; i < Ti.length; i++)
            Ti[i] ^= u[i];
        });
      }
      return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);
    }
    exports.pbkdf2Async = pbkdf2Async;
  }
});

// node_modules/@noble/hashes/_sha2.js
var require_sha2 = __commonJS({
  "node_modules/@noble/hashes/_sha2.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SHA2 = void 0;
    var _assert_js_1 = require_assert2();
    var utils_js_1 = require_utils();
    function setBigUint64(view, byteOffset, value, isLE) {
      if (typeof view.setBigUint64 === "function")
        return view.setBigUint64(byteOffset, value, isLE);
      const _32n = BigInt(32);
      const _u32_max = BigInt(4294967295);
      const wh = Number(value >> _32n & _u32_max);
      const wl = Number(value & _u32_max);
      const h = isLE ? 4 : 0;
      const l = isLE ? 0 : 4;
      view.setUint32(byteOffset + h, wh, isLE);
      view.setUint32(byteOffset + l, wl, isLE);
    }
    var SHA2 = class extends utils_js_1.Hash {
      constructor(blockLen, outputLen, padOffset, isLE) {
        super();
        this.blockLen = blockLen;
        this.outputLen = outputLen;
        this.padOffset = padOffset;
        this.isLE = isLE;
        this.finished = false;
        this.length = 0;
        this.pos = 0;
        this.destroyed = false;
        this.buffer = new Uint8Array(blockLen);
        this.view = (0, utils_js_1.createView)(this.buffer);
      }
      update(data) {
        (0, _assert_js_1.exists)(this);
        const { view, buffer, blockLen } = this;
        data = (0, utils_js_1.toBytes)(data);
        const len = data.length;
        for (let pos = 0; pos < len; ) {
          const take = Math.min(blockLen - this.pos, len - pos);
          if (take === blockLen) {
            const dataView = (0, utils_js_1.createView)(data);
            for (; blockLen <= len - pos; pos += blockLen)
              this.process(dataView, pos);
            continue;
          }
          buffer.set(data.subarray(pos, pos + take), this.pos);
          this.pos += take;
          pos += take;
          if (this.pos === blockLen) {
            this.process(view, 0);
            this.pos = 0;
          }
        }
        this.length += data.length;
        this.roundClean();
        return this;
      }
      digestInto(out) {
        (0, _assert_js_1.exists)(this);
        (0, _assert_js_1.output)(out, this);
        this.finished = true;
        const { buffer, view, blockLen, isLE } = this;
        let { pos } = this;
        buffer[pos++] = 128;
        this.buffer.subarray(pos).fill(0);
        if (this.padOffset > blockLen - pos) {
          this.process(view, 0);
          pos = 0;
        }
        for (let i = pos; i < blockLen; i++)
          buffer[i] = 0;
        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);
        this.process(view, 0);
        const oview = (0, utils_js_1.createView)(out);
        const len = this.outputLen;
        if (len % 4)
          throw new Error("_sha2: outputLen should be aligned to 32bit");
        const outLen = len / 4;
        const state = this.get();
        if (outLen > state.length)
          throw new Error("_sha2: outputLen bigger than state");
        for (let i = 0; i < outLen; i++)
          oview.setUint32(4 * i, state[i], isLE);
      }
      digest() {
        const { buffer, outputLen } = this;
        this.digestInto(buffer);
        const res = buffer.slice(0, outputLen);
        this.destroy();
        return res;
      }
      _cloneInto(to) {
        to || (to = new this.constructor());
        to.set(...this.get());
        const { blockLen, buffer, length, finished, destroyed, pos } = this;
        to.length = length;
        to.pos = pos;
        to.finished = finished;
        to.destroyed = destroyed;
        if (length % blockLen)
          to.buffer.set(buffer);
        return to;
      }
    };
    exports.SHA2 = SHA2;
  }
});

// node_modules/@noble/hashes/_u64.js
var require_u64 = __commonJS({
  "node_modules/@noble/hashes/_u64.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.add5L = exports.add5H = exports.add4H = exports.add4L = exports.add3H = exports.add3L = exports.add = exports.rotlBL = exports.rotlBH = exports.rotlSL = exports.rotlSH = exports.rotr32L = exports.rotr32H = exports.rotrBL = exports.rotrBH = exports.rotrSL = exports.rotrSH = exports.shrSL = exports.shrSH = exports.toBig = exports.split = exports.fromBig = void 0;
    var U32_MASK64 = BigInt(2 ** 32 - 1);
    var _32n = BigInt(32);
    function fromBig(n, le = false) {
      if (le)
        return { h: Number(n & U32_MASK64), l: Number(n >> _32n & U32_MASK64) };
      return { h: Number(n >> _32n & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };
    }
    exports.fromBig = fromBig;
    function split(lst, le = false) {
      let Ah = new Uint32Array(lst.length);
      let Al = new Uint32Array(lst.length);
      for (let i = 0; i < lst.length; i++) {
        const { h, l } = fromBig(lst[i], le);
        [Ah[i], Al[i]] = [h, l];
      }
      return [Ah, Al];
    }
    exports.split = split;
    var toBig = (h, l) => BigInt(h >>> 0) << _32n | BigInt(l >>> 0);
    exports.toBig = toBig;
    var shrSH = (h, _l, s) => h >>> s;
    exports.shrSH = shrSH;
    var shrSL = (h, l, s) => h << 32 - s | l >>> s;
    exports.shrSL = shrSL;
    var rotrSH = (h, l, s) => h >>> s | l << 32 - s;
    exports.rotrSH = rotrSH;
    var rotrSL = (h, l, s) => h << 32 - s | l >>> s;
    exports.rotrSL = rotrSL;
    var rotrBH = (h, l, s) => h << 64 - s | l >>> s - 32;
    exports.rotrBH = rotrBH;
    var rotrBL = (h, l, s) => h >>> s - 32 | l << 64 - s;
    exports.rotrBL = rotrBL;
    var rotr32H = (_h, l) => l;
    exports.rotr32H = rotr32H;
    var rotr32L = (h, _l) => h;
    exports.rotr32L = rotr32L;
    var rotlSH = (h, l, s) => h << s | l >>> 32 - s;
    exports.rotlSH = rotlSH;
    var rotlSL = (h, l, s) => l << s | h >>> 32 - s;
    exports.rotlSL = rotlSL;
    var rotlBH = (h, l, s) => l << s - 32 | h >>> 64 - s;
    exports.rotlBH = rotlBH;
    var rotlBL = (h, l, s) => h << s - 32 | l >>> 64 - s;
    exports.rotlBL = rotlBL;
    function add(Ah, Al, Bh, Bl) {
      const l = (Al >>> 0) + (Bl >>> 0);
      return { h: Ah + Bh + (l / 2 ** 32 | 0) | 0, l: l | 0 };
    }
    exports.add = add;
    var add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);
    exports.add3L = add3L;
    var add3H = (low, Ah, Bh, Ch) => Ah + Bh + Ch + (low / 2 ** 32 | 0) | 0;
    exports.add3H = add3H;
    var add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);
    exports.add4L = add4L;
    var add4H = (low, Ah, Bh, Ch, Dh) => Ah + Bh + Ch + Dh + (low / 2 ** 32 | 0) | 0;
    exports.add4H = add4H;
    var add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);
    exports.add5L = add5L;
    var add5H = (low, Ah, Bh, Ch, Dh, Eh) => Ah + Bh + Ch + Dh + Eh + (low / 2 ** 32 | 0) | 0;
    exports.add5H = add5H;
    var u64 = {
      fromBig,
      split,
      toBig,
      shrSH,
      shrSL,
      rotrSH,
      rotrSL,
      rotrBH,
      rotrBL,
      rotr32H,
      rotr32L,
      rotlSH,
      rotlSL,
      rotlBH,
      rotlBL,
      add,
      add3L,
      add3H,
      add4L,
      add4H,
      add5H,
      add5L
    };
    exports.default = u64;
  }
});

// node_modules/@noble/hashes/sha512.js
var require_sha512 = __commonJS({
  "node_modules/@noble/hashes/sha512.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.sha384 = exports.sha512_256 = exports.sha512_224 = exports.sha512 = exports.SHA512 = void 0;
    var _sha2_js_1 = require_sha2();
    var _u64_js_1 = require_u64();
    var utils_js_1 = require_utils();
    var [SHA512_Kh, SHA512_Kl] = (() => _u64_js_1.default.split([
      "0x428a2f98d728ae22",
      "0x7137449123ef65cd",
      "0xb5c0fbcfec4d3b2f",
      "0xe9b5dba58189dbbc",
      "0x3956c25bf348b538",
      "0x59f111f1b605d019",
      "0x923f82a4af194f9b",
      "0xab1c5ed5da6d8118",
      "0xd807aa98a3030242",
      "0x12835b0145706fbe",
      "0x243185be4ee4b28c",
      "0x550c7dc3d5ffb4e2",
      "0x72be5d74f27b896f",
      "0x80deb1fe3b1696b1",
      "0x9bdc06a725c71235",
      "0xc19bf174cf692694",
      "0xe49b69c19ef14ad2",
      "0xefbe4786384f25e3",
      "0x0fc19dc68b8cd5b5",
      "0x240ca1cc77ac9c65",
      "0x2de92c6f592b0275",
      "0x4a7484aa6ea6e483",
      "0x5cb0a9dcbd41fbd4",
      "0x76f988da831153b5",
      "0x983e5152ee66dfab",
      "0xa831c66d2db43210",
      "0xb00327c898fb213f",
      "0xbf597fc7beef0ee4",
      "0xc6e00bf33da88fc2",
      "0xd5a79147930aa725",
      "0x06ca6351e003826f",
      "0x142929670a0e6e70",
      "0x27b70a8546d22ffc",
      "0x2e1b21385c26c926",
      "0x4d2c6dfc5ac42aed",
      "0x53380d139d95b3df",
      "0x650a73548baf63de",
      "0x766a0abb3c77b2a8",
      "0x81c2c92e47edaee6",
      "0x92722c851482353b",
      "0xa2bfe8a14cf10364",
      "0xa81a664bbc423001",
      "0xc24b8b70d0f89791",
      "0xc76c51a30654be30",
      "0xd192e819d6ef5218",
      "0xd69906245565a910",
      "0xf40e35855771202a",
      "0x106aa07032bbd1b8",
      "0x19a4c116b8d2d0c8",
      "0x1e376c085141ab53",
      "0x2748774cdf8eeb99",
      "0x34b0bcb5e19b48a8",
      "0x391c0cb3c5c95a63",
      "0x4ed8aa4ae3418acb",
      "0x5b9cca4f7763e373",
      "0x682e6ff3d6b2b8a3",
      "0x748f82ee5defb2fc",
      "0x78a5636f43172f60",
      "0x84c87814a1f0ab72",
      "0x8cc702081a6439ec",
      "0x90befffa23631e28",
      "0xa4506cebde82bde9",
      "0xbef9a3f7b2c67915",
      "0xc67178f2e372532b",
      "0xca273eceea26619c",
      "0xd186b8c721c0c207",
      "0xeada7dd6cde0eb1e",
      "0xf57d4f7fee6ed178",
      "0x06f067aa72176fba",
      "0x0a637dc5a2c898a6",
      "0x113f9804bef90dae",
      "0x1b710b35131c471b",
      "0x28db77f523047d84",
      "0x32caab7b40c72493",
      "0x3c9ebe0a15c9bebc",
      "0x431d67c49c100d4c",
      "0x4cc5d4becb3e42b6",
      "0x597f299cfc657e2a",
      "0x5fcb6fab3ad6faec",
      "0x6c44198c4a475817"
    ].map((n) => BigInt(n))))();
    var SHA512_W_H = new Uint32Array(80);
    var SHA512_W_L = new Uint32Array(80);
    var SHA512 = class extends _sha2_js_1.SHA2 {
      constructor() {
        super(128, 64, 16, false);
        this.Ah = 1779033703 | 0;
        this.Al = 4089235720 | 0;
        this.Bh = 3144134277 | 0;
        this.Bl = 2227873595 | 0;
        this.Ch = 1013904242 | 0;
        this.Cl = 4271175723 | 0;
        this.Dh = 2773480762 | 0;
        this.Dl = 1595750129 | 0;
        this.Eh = 1359893119 | 0;
        this.El = 2917565137 | 0;
        this.Fh = 2600822924 | 0;
        this.Fl = 725511199 | 0;
        this.Gh = 528734635 | 0;
        this.Gl = 4215389547 | 0;
        this.Hh = 1541459225 | 0;
        this.Hl = 327033209 | 0;
      }
      // prettier-ignore
      get() {
        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;
        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];
      }
      // prettier-ignore
      set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {
        this.Ah = Ah | 0;
        this.Al = Al | 0;
        this.Bh = Bh | 0;
        this.Bl = Bl | 0;
        this.Ch = Ch | 0;
        this.Cl = Cl | 0;
        this.Dh = Dh | 0;
        this.Dl = Dl | 0;
        this.Eh = Eh | 0;
        this.El = El | 0;
        this.Fh = Fh | 0;
        this.Fl = Fl | 0;
        this.Gh = Gh | 0;
        this.Gl = Gl | 0;
        this.Hh = Hh | 0;
        this.Hl = Hl | 0;
      }
      process(view, offset) {
        for (let i = 0; i < 16; i++, offset += 4) {
          SHA512_W_H[i] = view.getUint32(offset);
          SHA512_W_L[i] = view.getUint32(offset += 4);
        }
        for (let i = 16; i < 80; i++) {
          const W15h = SHA512_W_H[i - 15] | 0;
          const W15l = SHA512_W_L[i - 15] | 0;
          const s0h = _u64_js_1.default.rotrSH(W15h, W15l, 1) ^ _u64_js_1.default.rotrSH(W15h, W15l, 8) ^ _u64_js_1.default.shrSH(W15h, W15l, 7);
          const s0l = _u64_js_1.default.rotrSL(W15h, W15l, 1) ^ _u64_js_1.default.rotrSL(W15h, W15l, 8) ^ _u64_js_1.default.shrSL(W15h, W15l, 7);
          const W2h = SHA512_W_H[i - 2] | 0;
          const W2l = SHA512_W_L[i - 2] | 0;
          const s1h = _u64_js_1.default.rotrSH(W2h, W2l, 19) ^ _u64_js_1.default.rotrBH(W2h, W2l, 61) ^ _u64_js_1.default.shrSH(W2h, W2l, 6);
          const s1l = _u64_js_1.default.rotrSL(W2h, W2l, 19) ^ _u64_js_1.default.rotrBL(W2h, W2l, 61) ^ _u64_js_1.default.shrSL(W2h, W2l, 6);
          const SUMl = _u64_js_1.default.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);
          const SUMh = _u64_js_1.default.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);
          SHA512_W_H[i] = SUMh | 0;
          SHA512_W_L[i] = SUMl | 0;
        }
        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;
        for (let i = 0; i < 80; i++) {
          const sigma1h = _u64_js_1.default.rotrSH(Eh, El, 14) ^ _u64_js_1.default.rotrSH(Eh, El, 18) ^ _u64_js_1.default.rotrBH(Eh, El, 41);
          const sigma1l = _u64_js_1.default.rotrSL(Eh, El, 14) ^ _u64_js_1.default.rotrSL(Eh, El, 18) ^ _u64_js_1.default.rotrBL(Eh, El, 41);
          const CHIh = Eh & Fh ^ ~Eh & Gh;
          const CHIl = El & Fl ^ ~El & Gl;
          const T1ll = _u64_js_1.default.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);
          const T1h = _u64_js_1.default.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);
          const T1l = T1ll | 0;
          const sigma0h = _u64_js_1.default.rotrSH(Ah, Al, 28) ^ _u64_js_1.default.rotrBH(Ah, Al, 34) ^ _u64_js_1.default.rotrBH(Ah, Al, 39);
          const sigma0l = _u64_js_1.default.rotrSL(Ah, Al, 28) ^ _u64_js_1.default.rotrBL(Ah, Al, 34) ^ _u64_js_1.default.rotrBL(Ah, Al, 39);
          const MAJh = Ah & Bh ^ Ah & Ch ^ Bh & Ch;
          const MAJl = Al & Bl ^ Al & Cl ^ Bl & Cl;
          Hh = Gh | 0;
          Hl = Gl | 0;
          Gh = Fh | 0;
          Gl = Fl | 0;
          Fh = Eh | 0;
          Fl = El | 0;
          ({ h: Eh, l: El } = _u64_js_1.default.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));
          Dh = Ch | 0;
          Dl = Cl | 0;
          Ch = Bh | 0;
          Cl = Bl | 0;
          Bh = Ah | 0;
          Bl = Al | 0;
          const All = _u64_js_1.default.add3L(T1l, sigma0l, MAJl);
          Ah = _u64_js_1.default.add3H(All, T1h, sigma0h, MAJh);
          Al = All | 0;
        }
        ({ h: Ah, l: Al } = _u64_js_1.default.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));
        ({ h: Bh, l: Bl } = _u64_js_1.default.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));
        ({ h: Ch, l: Cl } = _u64_js_1.default.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));
        ({ h: Dh, l: Dl } = _u64_js_1.default.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));
        ({ h: Eh, l: El } = _u64_js_1.default.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));
        ({ h: Fh, l: Fl } = _u64_js_1.default.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));
        ({ h: Gh, l: Gl } = _u64_js_1.default.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));
        ({ h: Hh, l: Hl } = _u64_js_1.default.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));
        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);
      }
      roundClean() {
        SHA512_W_H.fill(0);
        SHA512_W_L.fill(0);
      }
      destroy() {
        this.buffer.fill(0);
        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
      }
    };
    exports.SHA512 = SHA512;
    var SHA512_224 = class extends SHA512 {
      constructor() {
        super();
        this.Ah = 2352822216 | 0;
        this.Al = 424955298 | 0;
        this.Bh = 1944164710 | 0;
        this.Bl = 2312950998 | 0;
        this.Ch = 502970286 | 0;
        this.Cl = 855612546 | 0;
        this.Dh = 1738396948 | 0;
        this.Dl = 1479516111 | 0;
        this.Eh = 258812777 | 0;
        this.El = 2077511080 | 0;
        this.Fh = 2011393907 | 0;
        this.Fl = 79989058 | 0;
        this.Gh = 1067287976 | 0;
        this.Gl = 1780299464 | 0;
        this.Hh = 286451373 | 0;
        this.Hl = 2446758561 | 0;
        this.outputLen = 28;
      }
    };
    var SHA512_256 = class extends SHA512 {
      constructor() {
        super();
        this.Ah = 573645204 | 0;
        this.Al = 4230739756 | 0;
        this.Bh = 2673172387 | 0;
        this.Bl = 3360449730 | 0;
        this.Ch = 596883563 | 0;
        this.Cl = 1867755857 | 0;
        this.Dh = 2520282905 | 0;
        this.Dl = 1497426621 | 0;
        this.Eh = 2519219938 | 0;
        this.El = 2827943907 | 0;
        this.Fh = 3193839141 | 0;
        this.Fl = 1401305490 | 0;
        this.Gh = 721525244 | 0;
        this.Gl = 746961066 | 0;
        this.Hh = 246885852 | 0;
        this.Hl = 2177182882 | 0;
        this.outputLen = 32;
      }
    };
    var SHA384 = class extends SHA512 {
      constructor() {
        super();
        this.Ah = 3418070365 | 0;
        this.Al = 3238371032 | 0;
        this.Bh = 1654270250 | 0;
        this.Bl = 914150663 | 0;
        this.Ch = 2438529370 | 0;
        this.Cl = 812702999 | 0;
        this.Dh = 355462360 | 0;
        this.Dl = 4144912697 | 0;
        this.Eh = 1731405415 | 0;
        this.El = 4290775857 | 0;
        this.Fh = 2394180231 | 0;
        this.Fl = 1750603025 | 0;
        this.Gh = 3675008525 | 0;
        this.Gl = 1694076839 | 0;
        this.Hh = 1203062813 | 0;
        this.Hl = 3204075428 | 0;
        this.outputLen = 48;
      }
    };
    exports.sha512 = (0, utils_js_1.wrapConstructor)(() => new SHA512());
    exports.sha512_224 = (0, utils_js_1.wrapConstructor)(() => new SHA512_224());
    exports.sha512_256 = (0, utils_js_1.wrapConstructor)(() => new SHA512_256());
    exports.sha384 = (0, utils_js_1.wrapConstructor)(() => new SHA384());
  }
});

// browser-external:crypto
var require_crypto2 = __commonJS({
  "browser-external:crypto"(exports, module) {
    module.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "crypto" has been externalized for browser compatibility. Cannot access "crypto.${key}" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// node_modules/@cosmjs/crypto/build/pbkdf2.js
var require_pbkdf22 = __commonJS({
  "node_modules/@cosmjs/crypto/build/pbkdf2.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.pbkdf2Sha512 = exports.pbkdf2Sha512Noble = exports.pbkdf2Sha512NodeCrypto = exports.pbkdf2Sha512Subtle = exports.getSubtle = exports.getNodeCrypto = void 0;
    var utils_1 = require_build3();
    var pbkdf2_1 = require_pbkdf2();
    var sha512_1 = require_sha512();
    async function getNodeCrypto() {
      try {
        const nodeCrypto = await Promise.resolve().then(() => __importStar(require_crypto2()));
        if (typeof nodeCrypto === "object" && Object.keys(nodeCrypto).length <= 1) {
          return void 0;
        }
        return nodeCrypto;
      } catch {
        return void 0;
      }
    }
    exports.getNodeCrypto = getNodeCrypto;
    async function getSubtle() {
      var _a, _b, _c;
      let subtle = (_a = globalThis == null ? void 0 : globalThis.crypto) == null ? void 0 : _a.subtle;
      if (!subtle)
        subtle = (_c = (_b = globalThis == null ? void 0 : globalThis.crypto) == null ? void 0 : _b.webcrypto) == null ? void 0 : _c.subtle;
      return subtle;
    }
    exports.getSubtle = getSubtle;
    async function pbkdf2Sha512Subtle(subtle, secret, salt, iterations, keylen) {
      (0, utils_1.assert)(subtle, "Argument subtle is falsy");
      (0, utils_1.assert)(typeof subtle === "object", "Argument subtle is not of type object");
      (0, utils_1.assert)(typeof subtle.importKey === "function", "subtle.importKey is not a function");
      (0, utils_1.assert)(typeof subtle.deriveBits === "function", "subtle.deriveBits is not a function");
      return subtle.importKey("raw", secret, { name: "PBKDF2" }, false, ["deriveBits"]).then((key) => subtle.deriveBits({
        name: "PBKDF2",
        salt,
        iterations,
        hash: { name: "SHA-512" }
      }, key, keylen * 8).then((buffer) => new Uint8Array(buffer)));
    }
    exports.pbkdf2Sha512Subtle = pbkdf2Sha512Subtle;
    async function pbkdf2Sha512NodeCrypto(nodeCrypto, secret, salt, iterations, keylen) {
      (0, utils_1.assert)(nodeCrypto, "Argument nodeCrypto is falsy");
      (0, utils_1.assert)(typeof nodeCrypto === "object", "Argument nodeCrypto is not of type object");
      (0, utils_1.assert)(typeof nodeCrypto.pbkdf2 === "function", "nodeCrypto.pbkdf2 is not a function");
      return new Promise((resolve, reject) => {
        nodeCrypto.pbkdf2(secret, salt, iterations, keylen, "sha512", (error, result) => {
          if (error) {
            reject(error);
          } else {
            resolve(Uint8Array.from(result));
          }
        });
      });
    }
    exports.pbkdf2Sha512NodeCrypto = pbkdf2Sha512NodeCrypto;
    async function pbkdf2Sha512Noble(secret, salt, iterations, keylen) {
      return (0, pbkdf2_1.pbkdf2Async)(sha512_1.sha512, secret, salt, { c: iterations, dkLen: keylen });
    }
    exports.pbkdf2Sha512Noble = pbkdf2Sha512Noble;
    async function pbkdf2Sha512(secret, salt, iterations, keylen) {
      const subtle = await getSubtle();
      if (subtle) {
        return pbkdf2Sha512Subtle(subtle, secret, salt, iterations, keylen);
      } else {
        const nodeCrypto = await getNodeCrypto();
        if (nodeCrypto) {
          return pbkdf2Sha512NodeCrypto(nodeCrypto, secret, salt, iterations, keylen);
        } else {
          return pbkdf2Sha512Noble(secret, salt, iterations, keylen);
        }
      }
    }
    exports.pbkdf2Sha512 = pbkdf2Sha512;
  }
});

// node_modules/@noble/hashes/sha256.js
var require_sha256 = __commonJS({
  "node_modules/@noble/hashes/sha256.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.sha224 = exports.sha256 = void 0;
    var _sha2_js_1 = require_sha2();
    var utils_js_1 = require_utils();
    var Chi = (a, b, c) => a & b ^ ~a & c;
    var Maj = (a, b, c) => a & b ^ a & c ^ b & c;
    var SHA256_K = new Uint32Array([
      1116352408,
      1899447441,
      3049323471,
      3921009573,
      961987163,
      1508970993,
      2453635748,
      2870763221,
      3624381080,
      310598401,
      607225278,
      1426881987,
      1925078388,
      2162078206,
      2614888103,
      3248222580,
      3835390401,
      4022224774,
      264347078,
      604807628,
      770255983,
      1249150122,
      1555081692,
      1996064986,
      2554220882,
      2821834349,
      2952996808,
      3210313671,
      3336571891,
      3584528711,
      113926993,
      338241895,
      666307205,
      773529912,
      1294757372,
      1396182291,
      1695183700,
      1986661051,
      2177026350,
      2456956037,
      2730485921,
      2820302411,
      3259730800,
      3345764771,
      3516065817,
      3600352804,
      4094571909,
      275423344,
      430227734,
      506948616,
      659060556,
      883997877,
      958139571,
      1322822218,
      1537002063,
      1747873779,
      1955562222,
      2024104815,
      2227730452,
      2361852424,
      2428436474,
      2756734187,
      3204031479,
      3329325298
    ]);
    var IV = new Uint32Array([
      1779033703,
      3144134277,
      1013904242,
      2773480762,
      1359893119,
      2600822924,
      528734635,
      1541459225
    ]);
    var SHA256_W = new Uint32Array(64);
    var SHA256 = class extends _sha2_js_1.SHA2 {
      constructor() {
        super(64, 32, 8, false);
        this.A = IV[0] | 0;
        this.B = IV[1] | 0;
        this.C = IV[2] | 0;
        this.D = IV[3] | 0;
        this.E = IV[4] | 0;
        this.F = IV[5] | 0;
        this.G = IV[6] | 0;
        this.H = IV[7] | 0;
      }
      get() {
        const { A, B, C, D, E, F, G, H } = this;
        return [A, B, C, D, E, F, G, H];
      }
      // prettier-ignore
      set(A, B, C, D, E, F, G, H) {
        this.A = A | 0;
        this.B = B | 0;
        this.C = C | 0;
        this.D = D | 0;
        this.E = E | 0;
        this.F = F | 0;
        this.G = G | 0;
        this.H = H | 0;
      }
      process(view, offset) {
        for (let i = 0; i < 16; i++, offset += 4)
          SHA256_W[i] = view.getUint32(offset, false);
        for (let i = 16; i < 64; i++) {
          const W15 = SHA256_W[i - 15];
          const W2 = SHA256_W[i - 2];
          const s0 = (0, utils_js_1.rotr)(W15, 7) ^ (0, utils_js_1.rotr)(W15, 18) ^ W15 >>> 3;
          const s1 = (0, utils_js_1.rotr)(W2, 17) ^ (0, utils_js_1.rotr)(W2, 19) ^ W2 >>> 10;
          SHA256_W[i] = s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16] | 0;
        }
        let { A, B, C, D, E, F, G, H } = this;
        for (let i = 0; i < 64; i++) {
          const sigma1 = (0, utils_js_1.rotr)(E, 6) ^ (0, utils_js_1.rotr)(E, 11) ^ (0, utils_js_1.rotr)(E, 25);
          const T1 = H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i] | 0;
          const sigma0 = (0, utils_js_1.rotr)(A, 2) ^ (0, utils_js_1.rotr)(A, 13) ^ (0, utils_js_1.rotr)(A, 22);
          const T2 = sigma0 + Maj(A, B, C) | 0;
          H = G;
          G = F;
          F = E;
          E = D + T1 | 0;
          D = C;
          C = B;
          B = A;
          A = T1 + T2 | 0;
        }
        A = A + this.A | 0;
        B = B + this.B | 0;
        C = C + this.C | 0;
        D = D + this.D | 0;
        E = E + this.E | 0;
        F = F + this.F | 0;
        G = G + this.G | 0;
        H = H + this.H | 0;
        this.set(A, B, C, D, E, F, G, H);
      }
      roundClean() {
        SHA256_W.fill(0);
      }
      destroy() {
        this.set(0, 0, 0, 0, 0, 0, 0, 0);
        this.buffer.fill(0);
      }
    };
    var SHA224 = class extends SHA256 {
      constructor() {
        super();
        this.A = 3238371032 | 0;
        this.B = 914150663 | 0;
        this.C = 812702999 | 0;
        this.D = 4144912697 | 0;
        this.E = 4290775857 | 0;
        this.F = 1750603025 | 0;
        this.G = 1694076839 | 0;
        this.H = 3204075428 | 0;
        this.outputLen = 28;
      }
    };
    exports.sha256 = (0, utils_js_1.wrapConstructor)(() => new SHA256());
    exports.sha224 = (0, utils_js_1.wrapConstructor)(() => new SHA224());
  }
});

// node_modules/@cosmjs/crypto/build/utils.js
var require_utils2 = __commonJS({
  "node_modules/@cosmjs/crypto/build/utils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.toRealUint8Array = void 0;
    function toRealUint8Array(data) {
      if (data instanceof Uint8Array)
        return data;
      else
        return Uint8Array.from(data);
    }
    exports.toRealUint8Array = toRealUint8Array;
  }
});

// node_modules/@cosmjs/crypto/build/sha.js
var require_sha = __commonJS({
  "node_modules/@cosmjs/crypto/build/sha.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.sha512 = exports.Sha512 = exports.sha256 = exports.Sha256 = void 0;
    var sha256_1 = require_sha256();
    var sha512_1 = require_sha512();
    var utils_1 = require_utils2();
    var Sha256 = class {
      constructor(firstData) {
        this.blockSize = 512 / 8;
        this.impl = sha256_1.sha256.create();
        if (firstData) {
          this.update(firstData);
        }
      }
      update(data) {
        this.impl.update((0, utils_1.toRealUint8Array)(data));
        return this;
      }
      digest() {
        return this.impl.digest();
      }
    };
    exports.Sha256 = Sha256;
    function sha256(data) {
      return new Sha256(data).digest();
    }
    exports.sha256 = sha256;
    var Sha512 = class {
      constructor(firstData) {
        this.blockSize = 1024 / 8;
        this.impl = sha512_1.sha512.create();
        if (firstData) {
          this.update(firstData);
        }
      }
      update(data) {
        this.impl.update((0, utils_1.toRealUint8Array)(data));
        return this;
      }
      digest() {
        return this.impl.digest();
      }
    };
    exports.Sha512 = Sha512;
    function sha512(data) {
      return new Sha512(data).digest();
    }
    exports.sha512 = sha512;
  }
});

// node_modules/@cosmjs/crypto/build/bip39.js
var require_bip39 = __commonJS({
  "node_modules/@cosmjs/crypto/build/bip39.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Bip39 = exports.EnglishMnemonic = exports.mnemonicToEntropy = exports.entropyToMnemonic = void 0;
    var encoding_1 = require_build2();
    var pbkdf2_1 = require_pbkdf22();
    var sha_1 = require_sha();
    var wordlist = [
      "abandon",
      "ability",
      "able",
      "about",
      "above",
      "absent",
      "absorb",
      "abstract",
      "absurd",
      "abuse",
      "access",
      "accident",
      "account",
      "accuse",
      "achieve",
      "acid",
      "acoustic",
      "acquire",
      "across",
      "act",
      "action",
      "actor",
      "actress",
      "actual",
      "adapt",
      "add",
      "addict",
      "address",
      "adjust",
      "admit",
      "adult",
      "advance",
      "advice",
      "aerobic",
      "affair",
      "afford",
      "afraid",
      "again",
      "age",
      "agent",
      "agree",
      "ahead",
      "aim",
      "air",
      "airport",
      "aisle",
      "alarm",
      "album",
      "alcohol",
      "alert",
      "alien",
      "all",
      "alley",
      "allow",
      "almost",
      "alone",
      "alpha",
      "already",
      "also",
      "alter",
      "always",
      "amateur",
      "amazing",
      "among",
      "amount",
      "amused",
      "analyst",
      "anchor",
      "ancient",
      "anger",
      "angle",
      "angry",
      "animal",
      "ankle",
      "announce",
      "annual",
      "another",
      "answer",
      "antenna",
      "antique",
      "anxiety",
      "any",
      "apart",
      "apology",
      "appear",
      "apple",
      "approve",
      "april",
      "arch",
      "arctic",
      "area",
      "arena",
      "argue",
      "arm",
      "armed",
      "armor",
      "army",
      "around",
      "arrange",
      "arrest",
      "arrive",
      "arrow",
      "art",
      "artefact",
      "artist",
      "artwork",
      "ask",
      "aspect",
      "assault",
      "asset",
      "assist",
      "assume",
      "asthma",
      "athlete",
      "atom",
      "attack",
      "attend",
      "attitude",
      "attract",
      "auction",
      "audit",
      "august",
      "aunt",
      "author",
      "auto",
      "autumn",
      "average",
      "avocado",
      "avoid",
      "awake",
      "aware",
      "away",
      "awesome",
      "awful",
      "awkward",
      "axis",
      "baby",
      "bachelor",
      "bacon",
      "badge",
      "bag",
      "balance",
      "balcony",
      "ball",
      "bamboo",
      "banana",
      "banner",
      "bar",
      "barely",
      "bargain",
      "barrel",
      "base",
      "basic",
      "basket",
      "battle",
      "beach",
      "bean",
      "beauty",
      "because",
      "become",
      "beef",
      "before",
      "begin",
      "behave",
      "behind",
      "believe",
      "below",
      "belt",
      "bench",
      "benefit",
      "best",
      "betray",
      "better",
      "between",
      "beyond",
      "bicycle",
      "bid",
      "bike",
      "bind",
      "biology",
      "bird",
      "birth",
      "bitter",
      "black",
      "blade",
      "blame",
      "blanket",
      "blast",
      "bleak",
      "bless",
      "blind",
      "blood",
      "blossom",
      "blouse",
      "blue",
      "blur",
      "blush",
      "board",
      "boat",
      "body",
      "boil",
      "bomb",
      "bone",
      "bonus",
      "book",
      "boost",
      "border",
      "boring",
      "borrow",
      "boss",
      "bottom",
      "bounce",
      "box",
      "boy",
      "bracket",
      "brain",
      "brand",
      "brass",
      "brave",
      "bread",
      "breeze",
      "brick",
      "bridge",
      "brief",
      "bright",
      "bring",
      "brisk",
      "broccoli",
      "broken",
      "bronze",
      "broom",
      "brother",
      "brown",
      "brush",
      "bubble",
      "buddy",
      "budget",
      "buffalo",
      "build",
      "bulb",
      "bulk",
      "bullet",
      "bundle",
      "bunker",
      "burden",
      "burger",
      "burst",
      "bus",
      "business",
      "busy",
      "butter",
      "buyer",
      "buzz",
      "cabbage",
      "cabin",
      "cable",
      "cactus",
      "cage",
      "cake",
      "call",
      "calm",
      "camera",
      "camp",
      "can",
      "canal",
      "cancel",
      "candy",
      "cannon",
      "canoe",
      "canvas",
      "canyon",
      "capable",
      "capital",
      "captain",
      "car",
      "carbon",
      "card",
      "cargo",
      "carpet",
      "carry",
      "cart",
      "case",
      "cash",
      "casino",
      "castle",
      "casual",
      "cat",
      "catalog",
      "catch",
      "category",
      "cattle",
      "caught",
      "cause",
      "caution",
      "cave",
      "ceiling",
      "celery",
      "cement",
      "census",
      "century",
      "cereal",
      "certain",
      "chair",
      "chalk",
      "champion",
      "change",
      "chaos",
      "chapter",
      "charge",
      "chase",
      "chat",
      "cheap",
      "check",
      "cheese",
      "chef",
      "cherry",
      "chest",
      "chicken",
      "chief",
      "child",
      "chimney",
      "choice",
      "choose",
      "chronic",
      "chuckle",
      "chunk",
      "churn",
      "cigar",
      "cinnamon",
      "circle",
      "citizen",
      "city",
      "civil",
      "claim",
      "clap",
      "clarify",
      "claw",
      "clay",
      "clean",
      "clerk",
      "clever",
      "click",
      "client",
      "cliff",
      "climb",
      "clinic",
      "clip",
      "clock",
      "clog",
      "close",
      "cloth",
      "cloud",
      "clown",
      "club",
      "clump",
      "cluster",
      "clutch",
      "coach",
      "coast",
      "coconut",
      "code",
      "coffee",
      "coil",
      "coin",
      "collect",
      "color",
      "column",
      "combine",
      "come",
      "comfort",
      "comic",
      "common",
      "company",
      "concert",
      "conduct",
      "confirm",
      "congress",
      "connect",
      "consider",
      "control",
      "convince",
      "cook",
      "cool",
      "copper",
      "copy",
      "coral",
      "core",
      "corn",
      "correct",
      "cost",
      "cotton",
      "couch",
      "country",
      "couple",
      "course",
      "cousin",
      "cover",
      "coyote",
      "crack",
      "cradle",
      "craft",
      "cram",
      "crane",
      "crash",
      "crater",
      "crawl",
      "crazy",
      "cream",
      "credit",
      "creek",
      "crew",
      "cricket",
      "crime",
      "crisp",
      "critic",
      "crop",
      "cross",
      "crouch",
      "crowd",
      "crucial",
      "cruel",
      "cruise",
      "crumble",
      "crunch",
      "crush",
      "cry",
      "crystal",
      "cube",
      "culture",
      "cup",
      "cupboard",
      "curious",
      "current",
      "curtain",
      "curve",
      "cushion",
      "custom",
      "cute",
      "cycle",
      "dad",
      "damage",
      "damp",
      "dance",
      "danger",
      "daring",
      "dash",
      "daughter",
      "dawn",
      "day",
      "deal",
      "debate",
      "debris",
      "decade",
      "december",
      "decide",
      "decline",
      "decorate",
      "decrease",
      "deer",
      "defense",
      "define",
      "defy",
      "degree",
      "delay",
      "deliver",
      "demand",
      "demise",
      "denial",
      "dentist",
      "deny",
      "depart",
      "depend",
      "deposit",
      "depth",
      "deputy",
      "derive",
      "describe",
      "desert",
      "design",
      "desk",
      "despair",
      "destroy",
      "detail",
      "detect",
      "develop",
      "device",
      "devote",
      "diagram",
      "dial",
      "diamond",
      "diary",
      "dice",
      "diesel",
      "diet",
      "differ",
      "digital",
      "dignity",
      "dilemma",
      "dinner",
      "dinosaur",
      "direct",
      "dirt",
      "disagree",
      "discover",
      "disease",
      "dish",
      "dismiss",
      "disorder",
      "display",
      "distance",
      "divert",
      "divide",
      "divorce",
      "dizzy",
      "doctor",
      "document",
      "dog",
      "doll",
      "dolphin",
      "domain",
      "donate",
      "donkey",
      "donor",
      "door",
      "dose",
      "double",
      "dove",
      "draft",
      "dragon",
      "drama",
      "drastic",
      "draw",
      "dream",
      "dress",
      "drift",
      "drill",
      "drink",
      "drip",
      "drive",
      "drop",
      "drum",
      "dry",
      "duck",
      "dumb",
      "dune",
      "during",
      "dust",
      "dutch",
      "duty",
      "dwarf",
      "dynamic",
      "eager",
      "eagle",
      "early",
      "earn",
      "earth",
      "easily",
      "east",
      "easy",
      "echo",
      "ecology",
      "economy",
      "edge",
      "edit",
      "educate",
      "effort",
      "egg",
      "eight",
      "either",
      "elbow",
      "elder",
      "electric",
      "elegant",
      "element",
      "elephant",
      "elevator",
      "elite",
      "else",
      "embark",
      "embody",
      "embrace",
      "emerge",
      "emotion",
      "employ",
      "empower",
      "empty",
      "enable",
      "enact",
      "end",
      "endless",
      "endorse",
      "enemy",
      "energy",
      "enforce",
      "engage",
      "engine",
      "enhance",
      "enjoy",
      "enlist",
      "enough",
      "enrich",
      "enroll",
      "ensure",
      "enter",
      "entire",
      "entry",
      "envelope",
      "episode",
      "equal",
      "equip",
      "era",
      "erase",
      "erode",
      "erosion",
      "error",
      "erupt",
      "escape",
      "essay",
      "essence",
      "estate",
      "eternal",
      "ethics",
      "evidence",
      "evil",
      "evoke",
      "evolve",
      "exact",
      "example",
      "excess",
      "exchange",
      "excite",
      "exclude",
      "excuse",
      "execute",
      "exercise",
      "exhaust",
      "exhibit",
      "exile",
      "exist",
      "exit",
      "exotic",
      "expand",
      "expect",
      "expire",
      "explain",
      "expose",
      "express",
      "extend",
      "extra",
      "eye",
      "eyebrow",
      "fabric",
      "face",
      "faculty",
      "fade",
      "faint",
      "faith",
      "fall",
      "false",
      "fame",
      "family",
      "famous",
      "fan",
      "fancy",
      "fantasy",
      "farm",
      "fashion",
      "fat",
      "fatal",
      "father",
      "fatigue",
      "fault",
      "favorite",
      "feature",
      "february",
      "federal",
      "fee",
      "feed",
      "feel",
      "female",
      "fence",
      "festival",
      "fetch",
      "fever",
      "few",
      "fiber",
      "fiction",
      "field",
      "figure",
      "file",
      "film",
      "filter",
      "final",
      "find",
      "fine",
      "finger",
      "finish",
      "fire",
      "firm",
      "first",
      "fiscal",
      "fish",
      "fit",
      "fitness",
      "fix",
      "flag",
      "flame",
      "flash",
      "flat",
      "flavor",
      "flee",
      "flight",
      "flip",
      "float",
      "flock",
      "floor",
      "flower",
      "fluid",
      "flush",
      "fly",
      "foam",
      "focus",
      "fog",
      "foil",
      "fold",
      "follow",
      "food",
      "foot",
      "force",
      "forest",
      "forget",
      "fork",
      "fortune",
      "forum",
      "forward",
      "fossil",
      "foster",
      "found",
      "fox",
      "fragile",
      "frame",
      "frequent",
      "fresh",
      "friend",
      "fringe",
      "frog",
      "front",
      "frost",
      "frown",
      "frozen",
      "fruit",
      "fuel",
      "fun",
      "funny",
      "furnace",
      "fury",
      "future",
      "gadget",
      "gain",
      "galaxy",
      "gallery",
      "game",
      "gap",
      "garage",
      "garbage",
      "garden",
      "garlic",
      "garment",
      "gas",
      "gasp",
      "gate",
      "gather",
      "gauge",
      "gaze",
      "general",
      "genius",
      "genre",
      "gentle",
      "genuine",
      "gesture",
      "ghost",
      "giant",
      "gift",
      "giggle",
      "ginger",
      "giraffe",
      "girl",
      "give",
      "glad",
      "glance",
      "glare",
      "glass",
      "glide",
      "glimpse",
      "globe",
      "gloom",
      "glory",
      "glove",
      "glow",
      "glue",
      "goat",
      "goddess",
      "gold",
      "good",
      "goose",
      "gorilla",
      "gospel",
      "gossip",
      "govern",
      "gown",
      "grab",
      "grace",
      "grain",
      "grant",
      "grape",
      "grass",
      "gravity",
      "great",
      "green",
      "grid",
      "grief",
      "grit",
      "grocery",
      "group",
      "grow",
      "grunt",
      "guard",
      "guess",
      "guide",
      "guilt",
      "guitar",
      "gun",
      "gym",
      "habit",
      "hair",
      "half",
      "hammer",
      "hamster",
      "hand",
      "happy",
      "harbor",
      "hard",
      "harsh",
      "harvest",
      "hat",
      "have",
      "hawk",
      "hazard",
      "head",
      "health",
      "heart",
      "heavy",
      "hedgehog",
      "height",
      "hello",
      "helmet",
      "help",
      "hen",
      "hero",
      "hidden",
      "high",
      "hill",
      "hint",
      "hip",
      "hire",
      "history",
      "hobby",
      "hockey",
      "hold",
      "hole",
      "holiday",
      "hollow",
      "home",
      "honey",
      "hood",
      "hope",
      "horn",
      "horror",
      "horse",
      "hospital",
      "host",
      "hotel",
      "hour",
      "hover",
      "hub",
      "huge",
      "human",
      "humble",
      "humor",
      "hundred",
      "hungry",
      "hunt",
      "hurdle",
      "hurry",
      "hurt",
      "husband",
      "hybrid",
      "ice",
      "icon",
      "idea",
      "identify",
      "idle",
      "ignore",
      "ill",
      "illegal",
      "illness",
      "image",
      "imitate",
      "immense",
      "immune",
      "impact",
      "impose",
      "improve",
      "impulse",
      "inch",
      "include",
      "income",
      "increase",
      "index",
      "indicate",
      "indoor",
      "industry",
      "infant",
      "inflict",
      "inform",
      "inhale",
      "inherit",
      "initial",
      "inject",
      "injury",
      "inmate",
      "inner",
      "innocent",
      "input",
      "inquiry",
      "insane",
      "insect",
      "inside",
      "inspire",
      "install",
      "intact",
      "interest",
      "into",
      "invest",
      "invite",
      "involve",
      "iron",
      "island",
      "isolate",
      "issue",
      "item",
      "ivory",
      "jacket",
      "jaguar",
      "jar",
      "jazz",
      "jealous",
      "jeans",
      "jelly",
      "jewel",
      "job",
      "join",
      "joke",
      "journey",
      "joy",
      "judge",
      "juice",
      "jump",
      "jungle",
      "junior",
      "junk",
      "just",
      "kangaroo",
      "keen",
      "keep",
      "ketchup",
      "key",
      "kick",
      "kid",
      "kidney",
      "kind",
      "kingdom",
      "kiss",
      "kit",
      "kitchen",
      "kite",
      "kitten",
      "kiwi",
      "knee",
      "knife",
      "knock",
      "know",
      "lab",
      "label",
      "labor",
      "ladder",
      "lady",
      "lake",
      "lamp",
      "language",
      "laptop",
      "large",
      "later",
      "latin",
      "laugh",
      "laundry",
      "lava",
      "law",
      "lawn",
      "lawsuit",
      "layer",
      "lazy",
      "leader",
      "leaf",
      "learn",
      "leave",
      "lecture",
      "left",
      "leg",
      "legal",
      "legend",
      "leisure",
      "lemon",
      "lend",
      "length",
      "lens",
      "leopard",
      "lesson",
      "letter",
      "level",
      "liar",
      "liberty",
      "library",
      "license",
      "life",
      "lift",
      "light",
      "like",
      "limb",
      "limit",
      "link",
      "lion",
      "liquid",
      "list",
      "little",
      "live",
      "lizard",
      "load",
      "loan",
      "lobster",
      "local",
      "lock",
      "logic",
      "lonely",
      "long",
      "loop",
      "lottery",
      "loud",
      "lounge",
      "love",
      "loyal",
      "lucky",
      "luggage",
      "lumber",
      "lunar",
      "lunch",
      "luxury",
      "lyrics",
      "machine",
      "mad",
      "magic",
      "magnet",
      "maid",
      "mail",
      "main",
      "major",
      "make",
      "mammal",
      "man",
      "manage",
      "mandate",
      "mango",
      "mansion",
      "manual",
      "maple",
      "marble",
      "march",
      "margin",
      "marine",
      "market",
      "marriage",
      "mask",
      "mass",
      "master",
      "match",
      "material",
      "math",
      "matrix",
      "matter",
      "maximum",
      "maze",
      "meadow",
      "mean",
      "measure",
      "meat",
      "mechanic",
      "medal",
      "media",
      "melody",
      "melt",
      "member",
      "memory",
      "mention",
      "menu",
      "mercy",
      "merge",
      "merit",
      "merry",
      "mesh",
      "message",
      "metal",
      "method",
      "middle",
      "midnight",
      "milk",
      "million",
      "mimic",
      "mind",
      "minimum",
      "minor",
      "minute",
      "miracle",
      "mirror",
      "misery",
      "miss",
      "mistake",
      "mix",
      "mixed",
      "mixture",
      "mobile",
      "model",
      "modify",
      "mom",
      "moment",
      "monitor",
      "monkey",
      "monster",
      "month",
      "moon",
      "moral",
      "more",
      "morning",
      "mosquito",
      "mother",
      "motion",
      "motor",
      "mountain",
      "mouse",
      "move",
      "movie",
      "much",
      "muffin",
      "mule",
      "multiply",
      "muscle",
      "museum",
      "mushroom",
      "music",
      "must",
      "mutual",
      "myself",
      "mystery",
      "myth",
      "naive",
      "name",
      "napkin",
      "narrow",
      "nasty",
      "nation",
      "nature",
      "near",
      "neck",
      "need",
      "negative",
      "neglect",
      "neither",
      "nephew",
      "nerve",
      "nest",
      "net",
      "network",
      "neutral",
      "never",
      "news",
      "next",
      "nice",
      "night",
      "noble",
      "noise",
      "nominee",
      "noodle",
      "normal",
      "north",
      "nose",
      "notable",
      "note",
      "nothing",
      "notice",
      "novel",
      "now",
      "nuclear",
      "number",
      "nurse",
      "nut",
      "oak",
      "obey",
      "object",
      "oblige",
      "obscure",
      "observe",
      "obtain",
      "obvious",
      "occur",
      "ocean",
      "october",
      "odor",
      "off",
      "offer",
      "office",
      "often",
      "oil",
      "okay",
      "old",
      "olive",
      "olympic",
      "omit",
      "once",
      "one",
      "onion",
      "online",
      "only",
      "open",
      "opera",
      "opinion",
      "oppose",
      "option",
      "orange",
      "orbit",
      "orchard",
      "order",
      "ordinary",
      "organ",
      "orient",
      "original",
      "orphan",
      "ostrich",
      "other",
      "outdoor",
      "outer",
      "output",
      "outside",
      "oval",
      "oven",
      "over",
      "own",
      "owner",
      "oxygen",
      "oyster",
      "ozone",
      "pact",
      "paddle",
      "page",
      "pair",
      "palace",
      "palm",
      "panda",
      "panel",
      "panic",
      "panther",
      "paper",
      "parade",
      "parent",
      "park",
      "parrot",
      "party",
      "pass",
      "patch",
      "path",
      "patient",
      "patrol",
      "pattern",
      "pause",
      "pave",
      "payment",
      "peace",
      "peanut",
      "pear",
      "peasant",
      "pelican",
      "pen",
      "penalty",
      "pencil",
      "people",
      "pepper",
      "perfect",
      "permit",
      "person",
      "pet",
      "phone",
      "photo",
      "phrase",
      "physical",
      "piano",
      "picnic",
      "picture",
      "piece",
      "pig",
      "pigeon",
      "pill",
      "pilot",
      "pink",
      "pioneer",
      "pipe",
      "pistol",
      "pitch",
      "pizza",
      "place",
      "planet",
      "plastic",
      "plate",
      "play",
      "please",
      "pledge",
      "pluck",
      "plug",
      "plunge",
      "poem",
      "poet",
      "point",
      "polar",
      "pole",
      "police",
      "pond",
      "pony",
      "pool",
      "popular",
      "portion",
      "position",
      "possible",
      "post",
      "potato",
      "pottery",
      "poverty",
      "powder",
      "power",
      "practice",
      "praise",
      "predict",
      "prefer",
      "prepare",
      "present",
      "pretty",
      "prevent",
      "price",
      "pride",
      "primary",
      "print",
      "priority",
      "prison",
      "private",
      "prize",
      "problem",
      "process",
      "produce",
      "profit",
      "program",
      "project",
      "promote",
      "proof",
      "property",
      "prosper",
      "protect",
      "proud",
      "provide",
      "public",
      "pudding",
      "pull",
      "pulp",
      "pulse",
      "pumpkin",
      "punch",
      "pupil",
      "puppy",
      "purchase",
      "purity",
      "purpose",
      "purse",
      "push",
      "put",
      "puzzle",
      "pyramid",
      "quality",
      "quantum",
      "quarter",
      "question",
      "quick",
      "quit",
      "quiz",
      "quote",
      "rabbit",
      "raccoon",
      "race",
      "rack",
      "radar",
      "radio",
      "rail",
      "rain",
      "raise",
      "rally",
      "ramp",
      "ranch",
      "random",
      "range",
      "rapid",
      "rare",
      "rate",
      "rather",
      "raven",
      "raw",
      "razor",
      "ready",
      "real",
      "reason",
      "rebel",
      "rebuild",
      "recall",
      "receive",
      "recipe",
      "record",
      "recycle",
      "reduce",
      "reflect",
      "reform",
      "refuse",
      "region",
      "regret",
      "regular",
      "reject",
      "relax",
      "release",
      "relief",
      "rely",
      "remain",
      "remember",
      "remind",
      "remove",
      "render",
      "renew",
      "rent",
      "reopen",
      "repair",
      "repeat",
      "replace",
      "report",
      "require",
      "rescue",
      "resemble",
      "resist",
      "resource",
      "response",
      "result",
      "retire",
      "retreat",
      "return",
      "reunion",
      "reveal",
      "review",
      "reward",
      "rhythm",
      "rib",
      "ribbon",
      "rice",
      "rich",
      "ride",
      "ridge",
      "rifle",
      "right",
      "rigid",
      "ring",
      "riot",
      "ripple",
      "risk",
      "ritual",
      "rival",
      "river",
      "road",
      "roast",
      "robot",
      "robust",
      "rocket",
      "romance",
      "roof",
      "rookie",
      "room",
      "rose",
      "rotate",
      "rough",
      "round",
      "route",
      "royal",
      "rubber",
      "rude",
      "rug",
      "rule",
      "run",
      "runway",
      "rural",
      "sad",
      "saddle",
      "sadness",
      "safe",
      "sail",
      "salad",
      "salmon",
      "salon",
      "salt",
      "salute",
      "same",
      "sample",
      "sand",
      "satisfy",
      "satoshi",
      "sauce",
      "sausage",
      "save",
      "say",
      "scale",
      "scan",
      "scare",
      "scatter",
      "scene",
      "scheme",
      "school",
      "science",
      "scissors",
      "scorpion",
      "scout",
      "scrap",
      "screen",
      "script",
      "scrub",
      "sea",
      "search",
      "season",
      "seat",
      "second",
      "secret",
      "section",
      "security",
      "seed",
      "seek",
      "segment",
      "select",
      "sell",
      "seminar",
      "senior",
      "sense",
      "sentence",
      "series",
      "service",
      "session",
      "settle",
      "setup",
      "seven",
      "shadow",
      "shaft",
      "shallow",
      "share",
      "shed",
      "shell",
      "sheriff",
      "shield",
      "shift",
      "shine",
      "ship",
      "shiver",
      "shock",
      "shoe",
      "shoot",
      "shop",
      "short",
      "shoulder",
      "shove",
      "shrimp",
      "shrug",
      "shuffle",
      "shy",
      "sibling",
      "sick",
      "side",
      "siege",
      "sight",
      "sign",
      "silent",
      "silk",
      "silly",
      "silver",
      "similar",
      "simple",
      "since",
      "sing",
      "siren",
      "sister",
      "situate",
      "six",
      "size",
      "skate",
      "sketch",
      "ski",
      "skill",
      "skin",
      "skirt",
      "skull",
      "slab",
      "slam",
      "sleep",
      "slender",
      "slice",
      "slide",
      "slight",
      "slim",
      "slogan",
      "slot",
      "slow",
      "slush",
      "small",
      "smart",
      "smile",
      "smoke",
      "smooth",
      "snack",
      "snake",
      "snap",
      "sniff",
      "snow",
      "soap",
      "soccer",
      "social",
      "sock",
      "soda",
      "soft",
      "solar",
      "soldier",
      "solid",
      "solution",
      "solve",
      "someone",
      "song",
      "soon",
      "sorry",
      "sort",
      "soul",
      "sound",
      "soup",
      "source",
      "south",
      "space",
      "spare",
      "spatial",
      "spawn",
      "speak",
      "special",
      "speed",
      "spell",
      "spend",
      "sphere",
      "spice",
      "spider",
      "spike",
      "spin",
      "spirit",
      "split",
      "spoil",
      "sponsor",
      "spoon",
      "sport",
      "spot",
      "spray",
      "spread",
      "spring",
      "spy",
      "square",
      "squeeze",
      "squirrel",
      "stable",
      "stadium",
      "staff",
      "stage",
      "stairs",
      "stamp",
      "stand",
      "start",
      "state",
      "stay",
      "steak",
      "steel",
      "stem",
      "step",
      "stereo",
      "stick",
      "still",
      "sting",
      "stock",
      "stomach",
      "stone",
      "stool",
      "story",
      "stove",
      "strategy",
      "street",
      "strike",
      "strong",
      "struggle",
      "student",
      "stuff",
      "stumble",
      "style",
      "subject",
      "submit",
      "subway",
      "success",
      "such",
      "sudden",
      "suffer",
      "sugar",
      "suggest",
      "suit",
      "summer",
      "sun",
      "sunny",
      "sunset",
      "super",
      "supply",
      "supreme",
      "sure",
      "surface",
      "surge",
      "surprise",
      "surround",
      "survey",
      "suspect",
      "sustain",
      "swallow",
      "swamp",
      "swap",
      "swarm",
      "swear",
      "sweet",
      "swift",
      "swim",
      "swing",
      "switch",
      "sword",
      "symbol",
      "symptom",
      "syrup",
      "system",
      "table",
      "tackle",
      "tag",
      "tail",
      "talent",
      "talk",
      "tank",
      "tape",
      "target",
      "task",
      "taste",
      "tattoo",
      "taxi",
      "teach",
      "team",
      "tell",
      "ten",
      "tenant",
      "tennis",
      "tent",
      "term",
      "test",
      "text",
      "thank",
      "that",
      "theme",
      "then",
      "theory",
      "there",
      "they",
      "thing",
      "this",
      "thought",
      "three",
      "thrive",
      "throw",
      "thumb",
      "thunder",
      "ticket",
      "tide",
      "tiger",
      "tilt",
      "timber",
      "time",
      "tiny",
      "tip",
      "tired",
      "tissue",
      "title",
      "toast",
      "tobacco",
      "today",
      "toddler",
      "toe",
      "together",
      "toilet",
      "token",
      "tomato",
      "tomorrow",
      "tone",
      "tongue",
      "tonight",
      "tool",
      "tooth",
      "top",
      "topic",
      "topple",
      "torch",
      "tornado",
      "tortoise",
      "toss",
      "total",
      "tourist",
      "toward",
      "tower",
      "town",
      "toy",
      "track",
      "trade",
      "traffic",
      "tragic",
      "train",
      "transfer",
      "trap",
      "trash",
      "travel",
      "tray",
      "treat",
      "tree",
      "trend",
      "trial",
      "tribe",
      "trick",
      "trigger",
      "trim",
      "trip",
      "trophy",
      "trouble",
      "truck",
      "true",
      "truly",
      "trumpet",
      "trust",
      "truth",
      "try",
      "tube",
      "tuition",
      "tumble",
      "tuna",
      "tunnel",
      "turkey",
      "turn",
      "turtle",
      "twelve",
      "twenty",
      "twice",
      "twin",
      "twist",
      "two",
      "type",
      "typical",
      "ugly",
      "umbrella",
      "unable",
      "unaware",
      "uncle",
      "uncover",
      "under",
      "undo",
      "unfair",
      "unfold",
      "unhappy",
      "uniform",
      "unique",
      "unit",
      "universe",
      "unknown",
      "unlock",
      "until",
      "unusual",
      "unveil",
      "update",
      "upgrade",
      "uphold",
      "upon",
      "upper",
      "upset",
      "urban",
      "urge",
      "usage",
      "use",
      "used",
      "useful",
      "useless",
      "usual",
      "utility",
      "vacant",
      "vacuum",
      "vague",
      "valid",
      "valley",
      "valve",
      "van",
      "vanish",
      "vapor",
      "various",
      "vast",
      "vault",
      "vehicle",
      "velvet",
      "vendor",
      "venture",
      "venue",
      "verb",
      "verify",
      "version",
      "very",
      "vessel",
      "veteran",
      "viable",
      "vibrant",
      "vicious",
      "victory",
      "video",
      "view",
      "village",
      "vintage",
      "violin",
      "virtual",
      "virus",
      "visa",
      "visit",
      "visual",
      "vital",
      "vivid",
      "vocal",
      "voice",
      "void",
      "volcano",
      "volume",
      "vote",
      "voyage",
      "wage",
      "wagon",
      "wait",
      "walk",
      "wall",
      "walnut",
      "want",
      "warfare",
      "warm",
      "warrior",
      "wash",
      "wasp",
      "waste",
      "water",
      "wave",
      "way",
      "wealth",
      "weapon",
      "wear",
      "weasel",
      "weather",
      "web",
      "wedding",
      "weekend",
      "weird",
      "welcome",
      "west",
      "wet",
      "whale",
      "what",
      "wheat",
      "wheel",
      "when",
      "where",
      "whip",
      "whisper",
      "wide",
      "width",
      "wife",
      "wild",
      "will",
      "win",
      "window",
      "wine",
      "wing",
      "wink",
      "winner",
      "winter",
      "wire",
      "wisdom",
      "wise",
      "wish",
      "witness",
      "wolf",
      "woman",
      "wonder",
      "wood",
      "wool",
      "word",
      "work",
      "world",
      "worry",
      "worth",
      "wrap",
      "wreck",
      "wrestle",
      "wrist",
      "write",
      "wrong",
      "yard",
      "year",
      "yellow",
      "you",
      "young",
      "youth",
      "zebra",
      "zero",
      "zone",
      "zoo"
    ];
    function bytesToBitstring(bytes) {
      return Array.from(bytes).map((byte) => byte.toString(2).padStart(8, "0")).join("");
    }
    function deriveChecksumBits(entropy) {
      const entropyLengthBits = entropy.length * 8;
      const checksumLengthBits = entropyLengthBits / 32;
      const hash = (0, sha_1.sha256)(entropy);
      return bytesToBitstring(hash).slice(0, checksumLengthBits);
    }
    function bitstringToByte(bin) {
      return parseInt(bin, 2);
    }
    var allowedEntropyLengths = [16, 20, 24, 28, 32];
    var allowedWordLengths = [12, 15, 18, 21, 24];
    function entropyToMnemonic(entropy) {
      if (allowedEntropyLengths.indexOf(entropy.length) === -1) {
        throw new Error("invalid input length");
      }
      const entropyBits = bytesToBitstring(entropy);
      const checksumBits = deriveChecksumBits(entropy);
      const bits = entropyBits + checksumBits;
      const chunks = bits.match(/(.{11})/g);
      const words = chunks.map((binary) => {
        const index = bitstringToByte(binary);
        return wordlist[index];
      });
      return words.join(" ");
    }
    exports.entropyToMnemonic = entropyToMnemonic;
    var invalidNumberOfWorks = "Invalid number of words";
    var wordNotInWordlist = "Found word that is not in the wordlist";
    var invalidEntropy = "Invalid entropy";
    var invalidChecksum = "Invalid mnemonic checksum";
    function normalize(str) {
      return str.normalize("NFKD");
    }
    function mnemonicToEntropy(mnemonic) {
      const words = normalize(mnemonic).split(" ");
      if (!allowedWordLengths.includes(words.length)) {
        throw new Error(invalidNumberOfWorks);
      }
      const bits = words.map((word) => {
        const index = wordlist.indexOf(word);
        if (index === -1) {
          throw new Error(wordNotInWordlist);
        }
        return index.toString(2).padStart(11, "0");
      }).join("");
      const dividerIndex = Math.floor(bits.length / 33) * 32;
      const entropyBits = bits.slice(0, dividerIndex);
      const checksumBits = bits.slice(dividerIndex);
      const entropyBytes = entropyBits.match(/(.{1,8})/g).map(bitstringToByte);
      if (entropyBytes.length < 16 || entropyBytes.length > 32 || entropyBytes.length % 4 !== 0) {
        throw new Error(invalidEntropy);
      }
      const entropy = Uint8Array.from(entropyBytes);
      const newChecksum = deriveChecksumBits(entropy);
      if (newChecksum !== checksumBits) {
        throw new Error(invalidChecksum);
      }
      return entropy;
    }
    exports.mnemonicToEntropy = mnemonicToEntropy;
    var EnglishMnemonic = class _EnglishMnemonic {
      constructor(mnemonic) {
        if (!_EnglishMnemonic.mnemonicMatcher.test(mnemonic)) {
          throw new Error("Invalid mnemonic format");
        }
        const words = mnemonic.split(" ");
        const allowedWordsLengths = [12, 15, 18, 21, 24];
        if (allowedWordsLengths.indexOf(words.length) === -1) {
          throw new Error(`Invalid word count in mnemonic (allowed: ${allowedWordsLengths} got: ${words.length})`);
        }
        for (const word of words) {
          if (_EnglishMnemonic.wordlist.indexOf(word) === -1) {
            throw new Error("Mnemonic contains invalid word");
          }
        }
        mnemonicToEntropy(mnemonic);
        this.data = mnemonic;
      }
      toString() {
        return this.data;
      }
    };
    exports.EnglishMnemonic = EnglishMnemonic;
    EnglishMnemonic.wordlist = wordlist;
    EnglishMnemonic.mnemonicMatcher = /^[a-z]+( [a-z]+)*$/;
    var Bip39 = class {
      /**
       * Encodes raw entropy of length 16, 20, 24, 28 or 32 bytes as an English mnemonic between 12 and 24 words.
       *
       * | Entropy            | Words |
       * |--------------------|-------|
       * | 128 bit (16 bytes) |    12 |
       * | 160 bit (20 bytes) |    15 |
       * | 192 bit (24 bytes) |    18 |
       * | 224 bit (28 bytes) |    21 |
       * | 256 bit (32 bytes) |    24 |
       *
       *
       * @see https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki#generating-the-mnemonic
       * @param entropy The entropy to be encoded. This must be cryptographically secure.
       */
      static encode(entropy) {
        return new EnglishMnemonic(entropyToMnemonic(entropy));
      }
      static decode(mnemonic) {
        return mnemonicToEntropy(mnemonic.toString());
      }
      static async mnemonicToSeed(mnemonic, password) {
        const mnemonicBytes = (0, encoding_1.toUtf8)(normalize(mnemonic.toString()));
        const salt = "mnemonic" + (password ? normalize(password) : "");
        const saltBytes = (0, encoding_1.toUtf8)(salt);
        return (0, pbkdf2_1.pbkdf2Sha512)(mnemonicBytes, saltBytes, 2048, 64);
      }
    };
    exports.Bip39 = Bip39;
  }
});

// node_modules/@cosmjs/crypto/build/hmac.js
var require_hmac2 = __commonJS({
  "node_modules/@cosmjs/crypto/build/hmac.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Hmac = void 0;
    var Hmac = class {
      constructor(hashFunctionConstructor, originalKey) {
        const blockSize = new hashFunctionConstructor().blockSize;
        this.hash = (data) => new hashFunctionConstructor().update(data).digest();
        let key = originalKey;
        if (key.length > blockSize) {
          key = this.hash(key);
        }
        if (key.length < blockSize) {
          const zeroPadding = new Uint8Array(blockSize - key.length);
          key = new Uint8Array([...key, ...zeroPadding]);
        }
        this.oKeyPad = key.map((keyByte) => keyByte ^ 92);
        this.iKeyPad = key.map((keyByte) => keyByte ^ 54);
        this.messageHasher = new hashFunctionConstructor();
        this.blockSize = blockSize;
        this.update(this.iKeyPad);
      }
      update(data) {
        this.messageHasher.update(data);
        return this;
      }
      digest() {
        const innerHash = this.messageHasher.digest();
        return this.hash(new Uint8Array([...this.oKeyPad, ...innerHash]));
      }
    };
    exports.Hmac = Hmac;
  }
});

// node_modules/@noble/hashes/sha3.js
var require_sha3 = __commonJS({
  "node_modules/@noble/hashes/sha3.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.shake256 = exports.shake128 = exports.keccak_512 = exports.keccak_384 = exports.keccak_256 = exports.keccak_224 = exports.sha3_512 = exports.sha3_384 = exports.sha3_256 = exports.sha3_224 = exports.Keccak = exports.keccakP = void 0;
    var _assert_js_1 = require_assert2();
    var _u64_js_1 = require_u64();
    var utils_js_1 = require_utils();
    var [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];
    var _0n = BigInt(0);
    var _1n = BigInt(1);
    var _2n = BigInt(2);
    var _7n = BigInt(7);
    var _256n = BigInt(256);
    var _0x71n = BigInt(113);
    for (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {
      [x, y] = [y, (2 * x + 3 * y) % 5];
      SHA3_PI.push(2 * (5 * y + x));
      SHA3_ROTL.push((round + 1) * (round + 2) / 2 % 64);
      let t = _0n;
      for (let j = 0; j < 7; j++) {
        R = (R << _1n ^ (R >> _7n) * _0x71n) % _256n;
        if (R & _2n)
          t ^= _1n << (_1n << BigInt(j)) - _1n;
      }
      _SHA3_IOTA.push(t);
    }
    var [SHA3_IOTA_H, SHA3_IOTA_L] = (0, _u64_js_1.split)(_SHA3_IOTA, true);
    var rotlH = (h, l, s) => s > 32 ? (0, _u64_js_1.rotlBH)(h, l, s) : (0, _u64_js_1.rotlSH)(h, l, s);
    var rotlL = (h, l, s) => s > 32 ? (0, _u64_js_1.rotlBL)(h, l, s) : (0, _u64_js_1.rotlSL)(h, l, s);
    function keccakP(s, rounds = 24) {
      const B = new Uint32Array(5 * 2);
      for (let round = 24 - rounds; round < 24; round++) {
        for (let x = 0; x < 10; x++)
          B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];
        for (let x = 0; x < 10; x += 2) {
          const idx1 = (x + 8) % 10;
          const idx0 = (x + 2) % 10;
          const B0 = B[idx0];
          const B1 = B[idx0 + 1];
          const Th = rotlH(B0, B1, 1) ^ B[idx1];
          const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];
          for (let y = 0; y < 50; y += 10) {
            s[x + y] ^= Th;
            s[x + y + 1] ^= Tl;
          }
        }
        let curH = s[2];
        let curL = s[3];
        for (let t = 0; t < 24; t++) {
          const shift = SHA3_ROTL[t];
          const Th = rotlH(curH, curL, shift);
          const Tl = rotlL(curH, curL, shift);
          const PI = SHA3_PI[t];
          curH = s[PI];
          curL = s[PI + 1];
          s[PI] = Th;
          s[PI + 1] = Tl;
        }
        for (let y = 0; y < 50; y += 10) {
          for (let x = 0; x < 10; x++)
            B[x] = s[y + x];
          for (let x = 0; x < 10; x++)
            s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];
        }
        s[0] ^= SHA3_IOTA_H[round];
        s[1] ^= SHA3_IOTA_L[round];
      }
      B.fill(0);
    }
    exports.keccakP = keccakP;
    var Keccak = class _Keccak extends utils_js_1.Hash {
      // NOTE: we accept arguments in bytes instead of bits here.
      constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {
        super();
        this.blockLen = blockLen;
        this.suffix = suffix;
        this.outputLen = outputLen;
        this.enableXOF = enableXOF;
        this.rounds = rounds;
        this.pos = 0;
        this.posOut = 0;
        this.finished = false;
        this.destroyed = false;
        (0, _assert_js_1.number)(outputLen);
        if (0 >= this.blockLen || this.blockLen >= 200)
          throw new Error("Sha3 supports only keccak-f1600 function");
        this.state = new Uint8Array(200);
        this.state32 = (0, utils_js_1.u32)(this.state);
      }
      keccak() {
        keccakP(this.state32, this.rounds);
        this.posOut = 0;
        this.pos = 0;
      }
      update(data) {
        (0, _assert_js_1.exists)(this);
        const { blockLen, state } = this;
        data = (0, utils_js_1.toBytes)(data);
        const len = data.length;
        for (let pos = 0; pos < len; ) {
          const take = Math.min(blockLen - this.pos, len - pos);
          for (let i = 0; i < take; i++)
            state[this.pos++] ^= data[pos++];
          if (this.pos === blockLen)
            this.keccak();
        }
        return this;
      }
      finish() {
        if (this.finished)
          return;
        this.finished = true;
        const { state, suffix, pos, blockLen } = this;
        state[pos] ^= suffix;
        if ((suffix & 128) !== 0 && pos === blockLen - 1)
          this.keccak();
        state[blockLen - 1] ^= 128;
        this.keccak();
      }
      writeInto(out) {
        (0, _assert_js_1.exists)(this, false);
        (0, _assert_js_1.bytes)(out);
        this.finish();
        const bufferOut = this.state;
        const { blockLen } = this;
        for (let pos = 0, len = out.length; pos < len; ) {
          if (this.posOut >= blockLen)
            this.keccak();
          const take = Math.min(blockLen - this.posOut, len - pos);
          out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);
          this.posOut += take;
          pos += take;
        }
        return out;
      }
      xofInto(out) {
        if (!this.enableXOF)
          throw new Error("XOF is not possible for this instance");
        return this.writeInto(out);
      }
      xof(bytes) {
        (0, _assert_js_1.number)(bytes);
        return this.xofInto(new Uint8Array(bytes));
      }
      digestInto(out) {
        (0, _assert_js_1.output)(out, this);
        if (this.finished)
          throw new Error("digest() was already called");
        this.writeInto(out);
        this.destroy();
        return out;
      }
      digest() {
        return this.digestInto(new Uint8Array(this.outputLen));
      }
      destroy() {
        this.destroyed = true;
        this.state.fill(0);
      }
      _cloneInto(to) {
        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;
        to || (to = new _Keccak(blockLen, suffix, outputLen, enableXOF, rounds));
        to.state32.set(this.state32);
        to.pos = this.pos;
        to.posOut = this.posOut;
        to.finished = this.finished;
        to.rounds = rounds;
        to.suffix = suffix;
        to.outputLen = outputLen;
        to.enableXOF = enableXOF;
        to.destroyed = this.destroyed;
        return to;
      }
    };
    exports.Keccak = Keccak;
    var gen = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapConstructor)(() => new Keccak(blockLen, suffix, outputLen));
    exports.sha3_224 = gen(6, 144, 224 / 8);
    exports.sha3_256 = gen(6, 136, 256 / 8);
    exports.sha3_384 = gen(6, 104, 384 / 8);
    exports.sha3_512 = gen(6, 72, 512 / 8);
    exports.keccak_224 = gen(1, 144, 224 / 8);
    exports.keccak_256 = gen(1, 136, 256 / 8);
    exports.keccak_384 = gen(1, 104, 384 / 8);
    exports.keccak_512 = gen(1, 72, 512 / 8);
    var genShake = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapXOFConstructorWithOpts)((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === void 0 ? outputLen : opts.dkLen, true));
    exports.shake128 = genShake(31, 168, 128 / 8);
    exports.shake256 = genShake(31, 136, 256 / 8);
  }
});

// node_modules/@cosmjs/crypto/build/keccak.js
var require_keccak = __commonJS({
  "node_modules/@cosmjs/crypto/build/keccak.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.keccak256 = exports.Keccak256 = void 0;
    var sha3_1 = require_sha3();
    var utils_1 = require_utils2();
    var Keccak256 = class {
      constructor(firstData) {
        this.blockSize = 512 / 8;
        this.impl = sha3_1.keccak_256.create();
        if (firstData) {
          this.update(firstData);
        }
      }
      update(data) {
        this.impl.update((0, utils_1.toRealUint8Array)(data));
        return this;
      }
      digest() {
        return this.impl.digest();
      }
    };
    exports.Keccak256 = Keccak256;
    function keccak256(data) {
      return new Keccak256(data).digest();
    }
    exports.keccak256 = keccak256;
  }
});

// browser-external:fs
var require_fs = __commonJS({
  "browser-external:fs"(exports, module) {
    module.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "fs" has been externalized for browser compatibility. Cannot access "fs.${key}" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// browser-external:path
var require_path = __commonJS({
  "browser-external:path"(exports, module) {
    module.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "path" has been externalized for browser compatibility. Cannot access "path.${key}" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// node_modules/libsodium/dist/modules/libsodium.js
var require_libsodium = __commonJS({
  "node_modules/libsodium/dist/modules/libsodium.js"(exports, module) {
    !function(A) {
      function I(A2) {
        "use strict";
        var I2;
        void 0 === (I2 = A2) && (I2 = {});
        var g = I2;
        "object" != typeof g.sodium && ("object" == typeof global ? g = global : "object" == typeof window && (g = window));
        var C = I2;
        return I2.ready = new Promise(function(A3, I3) {
          (Q = C).onAbort = I3, Q.print = function(A4) {
          }, Q.printErr = function(A4) {
          }, Q.onRuntimeInitialized = function() {
            try {
              Q._crypto_secretbox_keybytes(), A3();
            } catch (A4) {
              I3(A4);
            }
          }, Q.useBackupModule = function() {
            return new Promise(function(A4, I4) {
              (Q2 = {}).onAbort = I4, Q2.onRuntimeInitialized = function() {
                Object.keys(C).forEach(function(A5) {
                  "getRandomValue" !== A5 && delete C[A5];
                }), Object.keys(Q2).forEach(function(A5) {
                  C[A5] = Q2[A5];
                }), A4();
              };
              var g3, B2, Q2 = void 0 !== Q2 ? Q2 : {}, i2 = Object.assign({}, Q2), E2 = "object" == typeof window, o2 = "function" == typeof importScripts, a2 = "object" == typeof process && "object" == typeof process.versions && "string" == typeof process.versions.node, f2 = "";
              if (a2) {
                var c2 = require_fs(), e2 = require_path();
                f2 = o2 ? e2.dirname(f2) + "/" : __dirname + "/", g3 = (A5, I5) => (A5 = function(A6) {
                  return A6.startsWith("file://");
                }(A5) ? new URL(A5) : e2.normalize(A5), c2.readFileSync(A5, I5 ? void 0 : "utf8")), B2 = (A5) => {
                  var I5 = g3(A5, true);
                  return I5.buffer || (I5 = new Uint8Array(I5)), I5;
                }, !Q2.thisProgram && process.argv.length > 1 && process.argv[1].replace(/\\/g, "/"), process.argv.slice(2), "undefined" != typeof module && (module.exports = Q2), Q2.inspect = () => "[Emscripten Module object]";
              } else
                (E2 || o2) && (o2 ? f2 = self.location.href : "undefined" != typeof document && document.currentScript && (f2 = document.currentScript.src), f2 = 0 !== f2.indexOf("blob:") ? f2.substr(0, f2.replace(/[?#].*/, "").lastIndexOf("/") + 1) : "", g3 = (A5) => {
                  var I5 = new XMLHttpRequest();
                  return I5.open("GET", A5, false), I5.send(null), I5.responseText;
                }, o2 && (B2 = (A5) => {
                  var I5 = new XMLHttpRequest();
                  return I5.open("GET", A5, false), I5.responseType = "arraybuffer", I5.send(null), new Uint8Array(I5.response);
                }));
              Q2.print;
              var r2, D2 = Q2.printErr || void 0;
              Object.assign(Q2, i2), i2 = null, Q2.arguments && Q2.arguments, Q2.thisProgram && Q2.thisProgram, Q2.quit && Q2.quit, Q2.wasmBinary && (r2 = Q2.wasmBinary), Q2.noExitRuntime;
              var t2, y2 = { Memory: function(A5) {
                this.buffer = new ArrayBuffer(65536 * A5.initial);
              }, Module: function(A5) {
              }, Instance: function(A5, I5) {
                this.exports = function(A6) {
                  for (var I6, g4 = new Uint8Array(123), C2 = 25; C2 >= 0; --C2)
                    g4[48 + C2] = 52 + C2, g4[65 + C2] = C2, g4[97 + C2] = 26 + C2;
                  function B3(A7, I7, C3) {
                    for (var B4, Q4, i3 = 0, E3 = I7, o3 = C3.length, a3 = I7 + (3 * o3 >> 2) - ("=" == C3[o3 - 2]) - ("=" == C3[o3 - 1]); i3 < o3; i3 += 4)
                      B4 = g4[C3.charCodeAt(i3 + 1)], Q4 = g4[C3.charCodeAt(i3 + 2)], A7[E3++] = g4[C3.charCodeAt(i3)] << 2 | B4 >> 4, E3 < a3 && (A7[E3++] = B4 << 4 | Q4 >> 2), E3 < a3 && (A7[E3++] = Q4 << 6 | g4[C3.charCodeAt(i3 + 3)]);
                  }
                  function Q3() {
                    throw new Error("abort");
                  }
                  return g4[43] = 62, g4[47] = 63, function(A7) {
                    var g5 = A7.a, C3 = g5.a, i3 = C3.buffer;
                    C3.grow = function(A8) {
                      A8 |= 0;
                      var g6 = 0 | hI(), B4 = g6 + A8 | 0;
                      if (g6 < B4 && B4 < 65536) {
                        var Q4 = new ArrayBuffer(c3(B4, 65536));
                        new Int8Array(Q4).set(E3), E3 = new Int8Array(Q4), new Int16Array(Q4), o3 = new Int32Array(Q4), a3 = new Uint8Array(Q4), new Uint16Array(Q4), f3 = new Uint32Array(Q4), new Float32Array(Q4), new Float64Array(Q4), i3 = Q4, C3.buffer = i3, I6 = a3;
                      }
                      return g6;
                    };
                    var E3 = new Int8Array(i3), o3 = (new Int16Array(i3), new Int32Array(i3)), a3 = new Uint8Array(i3), f3 = (new Uint16Array(i3), new Uint32Array(i3)), c3 = (new Float32Array(i3), new Float64Array(i3), Math.imul), e3 = (Math.fround, Math.abs, Math.clz32), r3 = (Math.min, Math.max, Math.floor, Math.ceil, Math.trunc, Math.sqrt, g5.b), D3 = g5.c, t3 = g5.d, y3 = g5.e, w3 = 102096, h3 = 0;
                    function n3(A8, I7) {
                      var g6, C4, B4, Q4, i4, o4 = 0, f4 = 0, c4 = 0, e4 = 0, r4 = 0, D4 = 0, t4 = 0, y4 = 0, w4 = 0, n4 = 0, s4 = 0, k4 = 0, F4 = 0, S4 = 0, H4 = 0, G4 = 0, _4 = 0, M4 = 0, p4 = 0, N4 = 0, J4 = 0, U4 = 0, Y4 = 0, d4 = 0, K4 = 0, b4 = 0, P4 = 0, v4 = 0, L4 = 0, R4 = 0, u4 = 0, x4 = 0, m4 = 0, l4 = 0, z4 = 0, q4 = 0, X3 = 0, j3 = 0, T2 = 0, O2 = 0, V2 = 0, Z2 = 0, W2 = 0, $2 = 0, AA2 = 0, IA2 = 0, gA2 = 0, CA2 = 0, BA2 = 0, QA2 = 0, iA2 = 0, EA2 = 0, oA2 = 0, aA2 = 0, fA2 = 0, cA2 = 0, eA2 = 0, rA2 = 0, tA2 = 0, yA2 = 0, wA2 = 0, hA2 = 0, nA2 = 0, sA2 = 0, kA2 = 0, FA2 = 0, SA2 = 0, HA2 = 0, GA2 = 0, _A2 = 0, MA2 = 0, pA2 = 0, NA2 = 0, JA2 = 0;
                      rA2 = a3[I7 + 40 | 0] | a3[I7 + 41 | 0] << 8 | a3[I7 + 42 | 0] << 16 | a3[I7 + 43 | 0] << 24, yA2 = o4 = a3[I7 + 44 | 0] | a3[I7 + 45 | 0] << 8 | a3[I7 + 46 | 0] << 16 | a3[I7 + 47 | 0] << 24, gA2 = a3[I7 + 104 | 0] | a3[I7 + 105 | 0] << 8 | a3[I7 + 106 | 0] << 16 | a3[I7 + 107 | 0] << 24, wA2 = o4 = a3[I7 + 108 | 0] | a3[I7 + 109 | 0] << 8 | a3[I7 + 110 | 0] << 16 | a3[I7 + 111 | 0] << 24, o4 = a3[I7 + 68 | 0] | a3[I7 + 69 | 0] << 8 | a3[I7 + 70 | 0] << 16 | a3[I7 + 71 | 0] << 24, X3 = a3[I7 + 64 | 0] | a3[I7 + 65 | 0] << 8 | a3[I7 + 66 | 0] << 16 | a3[I7 + 67 | 0] << 24, BA2 = o4, MA2 = o4 = a3[I7 + 36 | 0] | a3[I7 + 37 | 0] << 8 | a3[I7 + 38 | 0] << 16 | a3[I7 + 39 | 0] << 24, _4 = o4, oA2 = a3[I7 + 120 | 0] | a3[I7 + 121 | 0] << 8 | a3[I7 + 122 | 0] << 16 | a3[I7 + 123 | 0] << 24, kA2 = o4 = a3[I7 + 124 | 0] | a3[I7 + 125 | 0] << 8 | a3[I7 + 126 | 0] << 16 | a3[I7 + 127 | 0] << 24, B4 = o4 = a3[I7 + 92 | 0] | a3[I7 + 93 | 0] << 8 | a3[I7 + 94 | 0] << 16 | a3[I7 + 95 | 0] << 24, g6 = a3[I7 + 88 | 0] | a3[I7 + 89 | 0] << 8 | a3[I7 + 90 | 0] << 16 | a3[I7 + 91 | 0] << 24, q4 = o4, EA2 = a3[I7 + 80 | 0] | a3[I7 + 81 | 0] << 8 | a3[I7 + 82 | 0] << 16 | a3[I7 + 83 | 0] << 24, nA2 = o4 = a3[I7 + 84 | 0] | a3[I7 + 85 | 0] << 8 | a3[I7 + 86 | 0] << 16 | a3[I7 + 87 | 0] << 24, j3 = o4, QA2 = a3[A8 + 16 | 0] | a3[A8 + 17 | 0] << 8 | a3[A8 + 18 | 0] << 16 | a3[A8 + 19 | 0] << 24, o4 = (fA2 = a3[A8 + 52 | 0] | a3[A8 + 53 | 0] << 8 | a3[A8 + 54 | 0] << 16 | a3[A8 + 55 | 0] << 24) + _4 | 0, l4 = (aA2 = a3[A8 + 48 | 0] | a3[A8 + 49 | 0] << 8 | a3[A8 + 50 | 0] << 16 | a3[A8 + 51 | 0] << 24) + (cA2 = a3[I7 + 32 | 0] | a3[I7 + 33 | 0] << 8 | a3[I7 + 34 | 0] << 16 | a3[I7 + 35 | 0] << 24) | 0, o4 = (a3[A8 + 20 | 0] | a3[A8 + 21 | 0] << 8 | a3[A8 + 22 | 0] << 16 | a3[A8 + 23 | 0] << 24) + (aA2 >>> 0 > l4 >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = (QA2 = (f4 = l4) >>> 0 > (l4 = l4 + QA2 | 0) >>> 0 ? o4 + 1 | 0 : o4) + yA2 | 0, iA2 = tA2 = l4 + rA2 | 0, tA2 = o4 = tA2 >>> 0 < l4 >>> 0 ? o4 + 1 | 0 : o4, l4 = DA(l4 ^ (a3[A8 + 80 | 0] | a3[A8 + 81 | 0] << 8 | a3[A8 + 82 | 0] << 16 | a3[A8 + 83 | 0] << 24) ^ -79577749, QA2 ^ (a3[A8 + 84 | 0] | a3[A8 + 85 | 0] << 8 | a3[A8 + 86 | 0] << 16 | a3[A8 + 87 | 0] << 24) ^ 528734635, 32), HA2 = o4 = h3, o4 = o4 + 1013904242 | 0, QA2 = l4, V2 = o4 = (l4 = l4 - 23791573 | 0) >>> 0 < 4271175723 ? o4 + 1 | 0 : o4, fA2 = DA(l4 ^ aA2, o4 ^ fA2, 40), o4 = (o4 = tA2) + (tA2 = h3) | 0, aA2 = DA(QA2 ^ (w4 = aA2 = fA2 + iA2 | 0), HA2 ^ (n4 = w4 >>> 0 < fA2 >>> 0 ? o4 + 1 | 0 : o4), 48), o4 = V2 + (x4 = h3) | 0, S4 = o4 = (aA2 = l4 + (s4 = aA2) | 0) >>> 0 < l4 >>> 0 ? o4 + 1 | 0 : o4, aA2 = o4 = DA(fA2 ^ (F4 = aA2), tA2 ^ o4, 1), V2 = l4 = h3, tA2 = a3[I7 + 24 | 0] | a3[I7 + 25 | 0] << 8 | a3[I7 + 26 | 0] << 16 | a3[I7 + 27 | 0] << 24, HA2 = o4 = a3[I7 + 28 | 0] | a3[I7 + 29 | 0] << 8 | a3[I7 + 30 | 0] << 16 | a3[I7 + 31 | 0] << 24, eA2 = a3[A8 + 8 | 0] | a3[A8 + 9 | 0] << 8 | a3[A8 + 10 | 0] << 16 | a3[A8 + 11 | 0] << 24, l4 = (fA2 = a3[I7 + 16 | 0] | a3[I7 + 17 | 0] << 8 | a3[I7 + 18 | 0] << 16 | a3[I7 + 19 | 0] << 24) + (QA2 = a3[A8 + 40 | 0] | a3[A8 + 41 | 0] << 8 | a3[A8 + 42 | 0] << 16 | a3[A8 + 43 | 0] << 24) | 0, o4 = (pA2 = a3[I7 + 20 | 0] | a3[I7 + 21 | 0] << 8 | a3[I7 + 22 | 0] << 16 | a3[I7 + 23 | 0] << 24) + (JA2 = a3[A8 + 44 | 0] | a3[A8 + 45 | 0] << 8 | a3[A8 + 46 | 0] << 16 | a3[A8 + 47 | 0] << 24) | 0, o4 = (a3[A8 + 12 | 0] | a3[A8 + 13 | 0] << 8 | a3[A8 + 14 | 0] << 16 | a3[A8 + 15 | 0] << 24) + (l4 >>> 0 < QA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = HA2 + (iA2 = (f4 = l4) >>> 0 > (l4 = l4 + eA2 | 0) >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = (eA2 = l4 + tA2 | 0) >>> 0 < l4 >>> 0 ? o4 + 1 | 0 : o4, f4 = DA(l4 ^ (a3[A8 + 72 | 0] | a3[A8 + 73 | 0] << 8 | a3[A8 + 74 | 0] << 16 | a3[A8 + 75 | 0] << 24) ^ 725511199, iA2 ^ (a3[A8 + 76 | 0] | a3[A8 + 77 | 0] << 8 | a3[A8 + 78 | 0] << 16 | a3[A8 + 79 | 0] << 24) ^ -1694144372, 32), D4 = DA(QA2 ^ (c4 = f4 - 2067093701 | 0), JA2 ^ (R4 = (K4 = l4 = h3) - ((f4 >>> 0 < 2067093701) + 1150833018 | 0) | 0), 40), o4 = (m4 = h3) + o4 | 0, o4 = (d4 = (H4 = l4 = D4 + eA2 | 0) >>> 0 < D4 >>> 0 ? o4 + 1 | 0 : o4) + V2 | 0, o4 = (H4 >>> 0 > (l4 = H4 + aA2 | 0) >>> 0 ? o4 + 1 | 0 : o4) + j3 | 0, o4 = (QA2 = (e4 = l4) >>> 0 > (l4 = l4 + EA2 | 0) >>> 0 ? o4 + 1 | 0 : o4) + q4 | 0, v4 = q4 = l4 + g6 | 0, y4 = o4 = q4 >>> 0 < l4 >>> 0 ? o4 + 1 | 0 : o4, k4 = aA2, FA2 = V2, V2 = l4, iA2 = QA2, aA2 = a3[I7 + 8 | 0] | a3[I7 + 9 | 0] << 8 | a3[I7 + 10 | 0] << 16 | a3[I7 + 11 | 0] << 24, l4 = o4 = a3[I7 + 12 | 0] | a3[I7 + 13 | 0] << 8 | a3[I7 + 14 | 0] << 16 | a3[I7 + 15 | 0] << 24, JA2 = o4 = a3[0 | A8] | a3[A8 + 1 | 0] << 8 | a3[A8 + 2 | 0] << 16 | a3[A8 + 3 | 0] << 24, Q4 = QA2 = a3[A8 + 4 | 0] | a3[A8 + 5 | 0] << 8 | a3[A8 + 6 | 0] << 16 | a3[A8 + 7 | 0] << 24, j3 = o4, o4 = (GA2 = a3[I7 + 4 | 0] | a3[I7 + 5 | 0] << 8 | a3[I7 + 6 | 0] << 16 | a3[I7 + 7 | 0] << 24) + (r4 = a3[A8 + 36 | 0] | a3[A8 + 37 | 0] << 8 | a3[A8 + 38 | 0] << 16 | a3[A8 + 39 | 0] << 24) | 0, o4 = Q4 + ((q4 = a3[A8 + 32 | 0] | a3[A8 + 33 | 0] << 8 | a3[A8 + 34 | 0] << 16 | a3[A8 + 35 | 0] << 24) >>> 0 > (e4 = q4 + (QA2 = a3[0 | I7] | a3[I7 + 1 | 0] << 8 | a3[I7 + 2 | 0] << 16 | a3[I7 + 3 | 0] << 24) | 0) >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = (eA2 = (j3 = e4 + j3 | 0) >>> 0 < e4 >>> 0 ? o4 + 1 | 0 : o4) + l4 | 0, sA2 = e4 = j3 + aA2 | 0, e4 = o4 = e4 >>> 0 < j3 >>> 0 ? o4 + 1 | 0 : o4, t4 = q4, q4 = DA(j3 ^ (a3[0 | (o4 = A8 - -64 | 0)] | a3[o4 + 1 | 0] << 8 | a3[o4 + 2 | 0] << 16 | a3[o4 + 3 | 0] << 24) ^ -1377402159, eA2 ^ (a3[o4 + 4 | 0] | a3[o4 + 5 | 0] << 8 | a3[o4 + 6 | 0] << 16 | a3[o4 + 7 | 0] << 24) ^ 1359893119, 32), eA2 = o4 = h3, o4 = o4 + 1779033703 | 0, j3 = q4, J4 = o4 = (q4 = q4 - 205731576 | 0) >>> 0 < 4089235720 ? o4 + 1 | 0 : o4, r4 = DA(t4 ^ (G4 = q4), o4 ^ r4, 40), o4 = (P4 = h3) + e4 | 0, t4 = DA(j3 ^ (e4 = q4 = r4 + sA2 | 0), eA2 ^ (M4 = r4 >>> 0 > e4 >>> 0 ? o4 + 1 | 0 : o4), 48), o4 = DA(t4 ^ V2, (W2 = h3) ^ iA2, 32), O2 = q4 = h3, L4 = o4, C4 = o4 = a3[I7 + 60 | 0] | a3[I7 + 61 | 0] << 8 | a3[I7 + 62 | 0] << 16 | a3[I7 + 63 | 0] << 24, eA2 = sA2 = a3[I7 + 56 | 0] | a3[I7 + 57 | 0] << 8 | a3[I7 + 58 | 0] << 16 | a3[I7 + 59 | 0] << 24, N4 = a3[A8 + 24 | 0] | a3[A8 + 25 | 0] << 8 | a3[A8 + 26 | 0] << 16 | a3[A8 + 27 | 0] << 24, q4 = (iA2 = a3[I7 + 48 | 0] | a3[I7 + 49 | 0] << 8 | a3[I7 + 50 | 0] << 16 | a3[I7 + 51 | 0] << 24) + (j3 = a3[A8 + 56 | 0] | a3[A8 + 57 | 0] << 8 | a3[A8 + 58 | 0] << 16 | a3[A8 + 59 | 0] << 24) | 0, o4 = (_A2 = a3[I7 + 52 | 0] | a3[I7 + 53 | 0] << 8 | a3[I7 + 54 | 0] << 16 | a3[I7 + 55 | 0] << 24) + (b4 = a3[A8 + 60 | 0] | a3[A8 + 61 | 0] << 8 | a3[A8 + 62 | 0] << 16 | a3[A8 + 63 | 0] << 24) | 0, o4 = (a3[A8 + 28 | 0] | a3[A8 + 29 | 0] << 8 | a3[A8 + 30 | 0] << 16 | a3[A8 + 31 | 0] << 24) + (q4 >>> 0 < j3 >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = C4 + (V2 = (p4 = q4) >>> 0 > (q4 = N4 + q4 | 0) >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = (N4 = q4 + eA2 | 0) >>> 0 < q4 >>> 0 ? o4 + 1 | 0 : o4, V2 = DA(q4 ^ (a3[A8 + 88 | 0] | a3[A8 + 89 | 0] << 8 | a3[A8 + 90 | 0] << 16 | a3[A8 + 91 | 0] << 24) ^ 327033209, V2 ^ (a3[A8 + 92 | 0] | a3[A8 + 93 | 0] << 8 | a3[A8 + 94 | 0] << 16 | a3[A8 + 95 | 0] << 24) ^ 1541459225, 32), j3 = DA(j3 ^ (eA2 = V2 + 1595750129 | 0), (p4 = b4) ^ (b4 = (U4 = q4 = h3) - ((V2 >>> 0 < 2699217167) + 1521486533 | 0) | 0), 40), o4 = (IA2 = h3) + o4 | 0, q4 = DA((N4 = q4 = j3 + N4 | 0) ^ V2, U4 ^ (p4 = N4 >>> 0 < j3 >>> 0 ? o4 + 1 | 0 : o4), 48), o4 = b4 + ($2 = h3) | 0, Y4 = o4 = (q4 = eA2 + (b4 = q4) | 0) >>> 0 < eA2 >>> 0 ? o4 + 1 | 0 : o4, o4 = O2 + o4 | 0, T2 = k4 ^ (V2 = L4 + (U4 = q4) | 0), k4 = o4 = V2 >>> 0 < U4 >>> 0 ? o4 + 1 | 0 : o4, eA2 = DA(T2, o4 ^ FA2, 40), o4 = (FA2 = h3) + y4 | 0, q4 = DA(v4 = L4 ^ (y4 = q4 = eA2 + v4 | 0), O2 ^ (L4 = y4 >>> 0 < eA2 >>> 0 ? o4 + 1 | 0 : o4), 48), o4 = k4 + (CA2 = h3) | 0, O2 = o4 = (k4 = V2 + (v4 = q4) | 0) >>> 0 < V2 >>> 0 ? o4 + 1 | 0 : o4, q4 = (u4 = DA(k4 ^ eA2, FA2 ^ o4, 1)) + (V2 = a3[I7 + 72 | 0] | a3[I7 + 73 | 0] << 8 | a3[I7 + 74 | 0] << 16 | a3[I7 + 75 | 0] << 24) | 0, o4 = (hA2 = h3) + (FA2 = a3[I7 + 76 | 0] | a3[I7 + 77 | 0] << 8 | a3[I7 + 78 | 0] << 16 | a3[I7 + 79 | 0] << 24) | 0, SA2 = q4, z4 = q4 >>> 0 < V2 >>> 0 ? o4 + 1 | 0 : o4, Z2 = wA2, q4 = a3[I7 + 96 | 0] | a3[I7 + 97 | 0] << 8 | a3[I7 + 98 | 0] << 16 | a3[I7 + 99 | 0] << 24, eA2 = o4 = a3[I7 + 100 | 0] | a3[I7 + 101 | 0] << 8 | a3[I7 + 102 | 0] << 16 | a3[I7 + 103 | 0] << 24, j3 = (o4 = w4) + (w4 = DA(U4 ^ j3, Y4 ^ IA2, 1)) | 0, o4 = (U4 = h3) + n4 | 0, o4 = (w4 >>> 0 > j3 >>> 0 ? o4 + 1 | 0 : o4) + eA2 | 0, o4 = (n4 = (n4 = j3) >>> 0 > (j3 = q4 + j3 | 0) >>> 0 ? o4 + 1 | 0 : o4) + Z2 | 0, T2 = Y4 = j3 + gA2 | 0, Y4 = o4 = Y4 >>> 0 < j3 >>> 0 ? o4 + 1 | 0 : o4, H4 = DA(f4 ^ H4, d4 ^ K4, 48), d4 = o4 = DA(H4 ^ j3, (K4 = h3) ^ n4, 32), o4 = J4 + W2 | 0, o4 = (IA2 = j3 = h3) + (G4 = (j3 = t4 + G4 | 0) >>> 0 < t4 >>> 0 ? o4 + 1 | 0 : o4) | 0, J4 = o4 = (n4 = j3) >>> 0 > (t4 = n4 + d4 | 0) >>> 0 ? o4 + 1 | 0 : o4, w4 = DA(t4 ^ w4, U4 ^ o4, 40), o4 = (W2 = h3) + Y4 | 0, o4 = (U4 = w4 >>> 0 > (Y4 = j3 = w4 + T2 | 0) >>> 0 ? o4 + 1 | 0 : o4) + z4 | 0, o4 = (f4 = Y4 >>> 0 > (j3 = Y4 + SA2 | 0) >>> 0 ? o4 + 1 | 0 : o4) + kA2 | 0, SA2 = z4 = j3 + oA2 | 0, z4 = o4 = z4 >>> 0 < j3 >>> 0 ? o4 + 1 | 0 : o4, T2 = j3, Z2 = f4, j3 = a3[I7 + 116 | 0] | a3[I7 + 117 | 0] << 8 | a3[I7 + 118 | 0] << 16 | a3[I7 + 119 | 0] << 24, I7 = a3[I7 + 112 | 0] | a3[I7 + 113 | 0] << 8 | a3[I7 + 114 | 0] << 16 | a3[I7 + 115 | 0] << 24, r4 = DA(r4 ^ n4, G4 ^ P4, 1), o4 = (P4 = h3) + p4 | 0, o4 = ((f4 = r4 + N4 | 0) >>> 0 < r4 >>> 0 ? o4 + 1 | 0 : o4) + j3 | 0, o4 = (n4 = (G4 = f4) >>> 0 > (f4 = I7 + f4 | 0) >>> 0 ? o4 + 1 | 0 : o4) + kA2 | 0, NA2 = G4 = f4 + oA2 | 0, G4 = o4 = G4 >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4, o4 = DA(f4 ^ s4, n4 ^ x4, 32), AA2 = f4 = h3, s4 = o4, n4 = f4, o4 = K4 + R4 | 0, H4 = f4 = c4 + H4 | 0, N4 = o4 = f4 >>> 0 < c4 >>> 0 ? o4 + 1 | 0 : o4, o4 = o4 + n4 | 0, p4 = f4 = f4 + s4 | 0, x4 = o4 = H4 >>> 0 > f4 >>> 0 ? o4 + 1 | 0 : o4, n4 = DA(f4 ^ r4, P4 ^ o4, 40), o4 = (P4 = h3) + G4 | 0, s4 = DA((f4 = n4 + NA2 | 0) ^ s4, AA2 ^ (c4 = f4 >>> 0 < n4 >>> 0 ? o4 + 1 | 0 : o4), 48), o4 = DA(s4 ^ T2, (NA2 = h3) ^ Z2, 32), AA2 = r4 = h3, G4 = o4, T2 = r4, D4 = DA(D4 ^ H4, N4 ^ m4, 1), o4 = M4 + (H4 = h3) | 0, o4 = ((r4 = e4) >>> 0 > (e4 = e4 + D4 | 0) >>> 0 ? o4 + 1 | 0 : o4) + BA2 | 0, o4 = (e4 = (r4 = e4 + X3 | 0) >>> 0 < e4 >>> 0 ? o4 + 1 | 0 : o4) + FA2 | 0, Z2 = M4 = r4 + V2 | 0, M4 = o4 = M4 >>> 0 < r4 >>> 0 ? o4 + 1 | 0 : o4, N4 = D4, r4 = DA(r4 ^ b4, e4 ^ $2, 32), o4 = (b4 = h3) + S4 | 0, F4 = DA(N4 ^ (e4 = D4 = r4 + F4 | 0), (S4 = r4 >>> 0 > e4 >>> 0 ? o4 + 1 | 0 : o4) ^ H4, 40), o4 = ($2 = h3) + M4 | 0, H4 = D4 = F4 + Z2 | 0, D4 = DA(r4 ^ D4, b4 ^ (M4 = D4 >>> 0 < F4 >>> 0 ? o4 + 1 | 0 : o4), 48), o4 = S4 + (i4 = h3) | 0, S4 = D4, b4 = o4 = (D4 = e4 + D4 | 0) >>> 0 < e4 >>> 0 ? o4 + 1 | 0 : o4, o4 = o4 + T2 | 0, o4 = (N4 = D4) >>> 0 > (D4 = D4 + G4 | 0) >>> 0 ? o4 + 1 | 0 : o4, T2 = D4, D4 ^= u4, u4 = o4, r4 = DA(D4, hA2 ^ o4, 40), o4 = (hA2 = h3) + z4 | 0, z4 = D4 = r4 + SA2 | 0, o4 = B4 + (Z2 = r4 >>> 0 > D4 >>> 0 ? o4 + 1 | 0 : o4) | 0, SA2 = D4 = D4 + g6 | 0, K4 = o4 = D4 >>> 0 < g6 >>> 0 ? o4 + 1 | 0 : o4, D4 = f4, R4 = gA2, m4 = wA2, f4 = DA(d4 ^ Y4, U4 ^ IA2, 48), o4 = J4 + (IA2 = h3) | 0, d4 = f4, J4 = o4 = (e4 = t4 + f4 | 0) >>> 0 < t4 >>> 0 ? o4 + 1 | 0 : o4, f4 = DA(e4 ^ w4, W2 ^ o4, 1), o4 = (t4 = h3) + m4 | 0, o4 = ((w4 = f4 + R4 | 0) >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4) + c4 | 0, o4 = _A2 + (D4 = (c4 = D4 + w4 | 0) >>> 0 < w4 >>> 0 ? o4 + 1 | 0 : o4) | 0, Y4 = w4 = c4 + iA2 | 0, w4 = o4 = w4 >>> 0 < iA2 >>> 0 ? o4 + 1 | 0 : o4, c4 = DA(c4 ^ S4, D4 ^ i4, 32), o4 = O2 + (U4 = h3) | 0, S4 = c4, k4 = o4 = (c4 = k4 + c4 | 0) >>> 0 < k4 >>> 0 ? o4 + 1 | 0 : o4, D4 = DA(f4 ^ c4, o4 ^ t4, 40), o4 = (o4 = w4) + (w4 = h3) | 0, t4 = f4 = D4 + Y4 | 0, f4 = DA(f4 ^ S4, U4 ^ (Y4 = f4 >>> 0 < D4 >>> 0 ? o4 + 1 | 0 : o4), 48), o4 = k4 + (W2 = h3) | 0, U4 = f4, O2 = o4 = (k4 = c4 + f4 | 0) >>> 0 < c4 >>> 0 ? o4 + 1 | 0 : o4, f4 = DA(D4 ^ k4, w4 ^ o4, 1), o4 = (w4 = h3) + K4 | 0, o4 = C4 + (D4 = (c4 = f4 + SA2 | 0) >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4) | 0, SA2 = S4 = c4 + sA2 | 0, S4 = o4 = S4 >>> 0 < sA2 >>> 0 ? o4 + 1 | 0 : o4, K4 = f4, R4 = w4, o4 = x4 + NA2 | 0, o4 = (f4 = s4 + p4 | 0) >>> 0 < s4 >>> 0 ? o4 + 1 | 0 : o4, s4 = f4, p4 = o4, o4 = DA(f4 ^ n4, P4 ^ o4, 1), n4 = w4 = h3, f4 = o4, o4 = M4 + j3 | 0, o4 = ((H4 = I7 + H4 | 0) >>> 0 < I7 >>> 0 ? o4 + 1 | 0 : o4) + w4 | 0, o4 = nA2 + (H4 = (w4 = f4 + H4 | 0) >>> 0 < H4 >>> 0 ? o4 + 1 | 0 : o4) | 0, x4 = M4 = w4 + EA2 | 0, M4 = o4 = M4 >>> 0 < EA2 >>> 0 ? o4 + 1 | 0 : o4, w4 = DA(w4 ^ v4, H4 ^ CA2, 32), o4 = J4 + (v4 = h3) | 0, H4 = w4, J4 = o4 = (J4 = e4) >>> 0 > (e4 = e4 + w4 | 0) >>> 0 ? o4 + 1 | 0 : o4, w4 = DA(f4 ^ e4, o4 ^ n4, 40), o4 = (P4 = h3) + M4 | 0, n4 = f4 = w4 + x4 | 0, f4 = DA(M4 = f4 ^ H4, v4 ^ (H4 = f4 >>> 0 < w4 >>> 0 ? o4 + 1 | 0 : o4), 48), o4 = J4 + (CA2 = h3) | 0, J4 = f4, M4 = f4 = e4 + f4 | 0, v4 = o4 = f4 >>> 0 < e4 >>> 0 ? o4 + 1 | 0 : o4, x4 = c4, m4 = D4, f4 = DA(F4 ^ N4, b4 ^ $2, 1), o4 = (e4 = h3) + _4 | 0, o4 = L4 + ((c4 = f4 + cA2 | 0) >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = BA2 + (D4 = (c4 = c4 + y4 | 0) >>> 0 < y4 >>> 0 ? o4 + 1 | 0 : o4) | 0, L4 = y4 = c4 + X3 | 0, y4 = o4 = y4 >>> 0 < c4 >>> 0 ? o4 + 1 | 0 : o4, F4 = f4, f4 = (c4 = DA(c4 ^ d4, D4 ^ IA2, 32)) + s4 | 0, o4 = (s4 = h3) + p4 | 0, D4 = f4, e4 = DA(f4 ^ F4, (d4 = f4 >>> 0 < c4 >>> 0 ? o4 + 1 | 0 : o4) ^ e4, 40), o4 = (IA2 = h3) + y4 | 0, y4 = f4 = e4 + L4 | 0, N4 = DA(f4 ^ c4, s4 ^ (L4 = f4 >>> 0 < e4 >>> 0 ? o4 + 1 | 0 : o4), 48), c4 = DA(N4 ^ x4, (o4 = m4) ^ (m4 = h3), 32), o4 = (x4 = h3) + v4 | 0, s4 = f4 = c4 + M4 | 0, F4 = DA(f4 ^ K4, (p4 = f4 >>> 0 < c4 >>> 0 ? o4 + 1 | 0 : o4) ^ R4, 40), o4 = (K4 = h3) + S4 | 0, S4 = f4 = F4 + SA2 | 0, f4 = DA(f4 ^ c4, x4 ^ (b4 = f4 >>> 0 < F4 >>> 0 ? o4 + 1 | 0 : o4), 48), o4 = p4 + ($2 = h3) | 0, p4 = f4, x4 = o4 = (c4 = s4) >>> 0 > (s4 = s4 + f4 | 0) >>> 0 ? o4 + 1 | 0 : o4, f4 = DA(s4 ^ F4, K4 ^ o4, 1), o4 = kA2 + (SA2 = h3) | 0, K4 = f4, NA2 = f4 = oA2 + f4 | 0, F4 = o4 = f4 >>> 0 < oA2 >>> 0 ? o4 + 1 | 0 : o4, c4 = rA2, f4 = DA(w4 ^ M4, P4 ^ v4, 1), o4 = Y4 + (w4 = h3) | 0, o4 = ((M4 = t4) >>> 0 > (t4 = f4 + t4 | 0) >>> 0 ? o4 + 1 | 0 : o4) + yA2 | 0, o4 = (M4 = (c4 = c4 + t4 | 0) >>> 0 < t4 >>> 0 ? o4 + 1 | 0 : o4) + HA2 | 0, R4 = t4 = c4 + tA2 | 0, Y4 = o4 = t4 >>> 0 < c4 >>> 0 ? o4 + 1 | 0 : o4, v4 = f4, t4 = DA(G4 ^ z4, Z2 ^ AA2, 48), o4 = DA(t4 ^ c4, (P4 = h3) ^ M4, 32), AA2 = f4 = h3, G4 = o4, c4 = f4, o4 = d4 + m4 | 0, o4 = (f4 = D4 + N4 | 0) >>> 0 < D4 >>> 0 ? o4 + 1 | 0 : o4, D4 = f4, d4 = o4, o4 = o4 + c4 | 0, M4 = f4 = f4 + G4 | 0, N4 = o4 = D4 >>> 0 > f4 >>> 0 ? o4 + 1 | 0 : o4, c4 = DA(f4 ^ v4, o4 ^ w4, 40), o4 = (o4 = Y4) + (Y4 = h3) | 0, v4 = f4 = c4 + R4 | 0, z4 = o4 = f4 >>> 0 < c4 >>> 0 ? o4 + 1 | 0 : o4, o4 = o4 + F4 | 0, Z2 = o4 = (w4 = f4 + NA2 | 0) >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4, F4 = o4, f4 = DA(e4 ^ D4, d4 ^ IA2, 1), o4 = l4 + (e4 = h3) | 0, o4 = H4 + ((D4 = f4 + aA2 | 0) >>> 0 < aA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = eA2 + (n4 = (D4 = D4 + n4 | 0) >>> 0 < n4 >>> 0 ? o4 + 1 | 0 : o4) | 0, R4 = H4 = D4 + q4 | 0, H4 = o4 = H4 >>> 0 < q4 >>> 0 ? o4 + 1 | 0 : o4, d4 = f4, o4 = DA(D4 ^ U4, n4 ^ W2, 32), m4 = f4 = h3, D4 = o4, n4 = f4, o4 = P4 + u4 | 0, U4 = f4 = t4 + T2 | 0, u4 = o4 = f4 >>> 0 < t4 >>> 0 ? o4 + 1 | 0 : o4, o4 = o4 + n4 | 0, o4 = (t4 = f4 + D4 | 0) >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4, f4 = t4 ^ d4, d4 = o4, n4 = DA(f4, o4 ^ e4, 40), o4 = (W2 = h3) + H4 | 0, e4 = f4 = n4 + R4 | 0, T2 = DA(f4 ^ D4, m4 ^ (H4 = f4 >>> 0 < n4 >>> 0 ? o4 + 1 | 0 : o4), 48), o4 = DA(T2 ^ w4, (IA2 = h3) ^ F4, 32), NA2 = f4 = h3, R4 = o4, F4 = f4, f4 = DA(r4 ^ U4, u4 ^ hA2, 1), o4 = L4 + (r4 = h3) | 0, o4 = GA2 + ((D4 = f4 + y4 | 0) >>> 0 < y4 >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = (y4 = (D4 = D4 + QA2 | 0) >>> 0 < QA2 >>> 0 ? o4 + 1 | 0 : o4) + pA2 | 0, U4 = L4 = D4 + fA2 | 0, L4 = o4 = L4 >>> 0 < D4 >>> 0 ? o4 + 1 | 0 : o4, D4 = DA(D4 ^ J4, y4 ^ CA2, 32), o4 = O2 + (u4 = h3) | 0, J4 = D4, y4 = r4, r4 = o4 = (D4 = k4 + D4 | 0) >>> 0 < k4 >>> 0 ? o4 + 1 | 0 : o4, y4 = DA(f4 ^ D4, y4 ^ o4, 40), o4 = (CA2 = h3) + L4 | 0, k4 = f4 = y4 + U4 | 0, f4 = DA(U4 = f4 ^ J4, u4 ^ (J4 = f4 >>> 0 < y4 >>> 0 ? o4 + 1 | 0 : o4), 48), o4 = r4 + (P4 = h3) | 0, r4 = f4, L4 = f4 = D4 + f4 | 0, U4 = o4 = f4 >>> 0 < D4 >>> 0 ? o4 + 1 | 0 : o4, o4 = o4 + F4 | 0, O2 = o4 = (F4 = f4 + R4 | 0) >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4, D4 = DA(F4 ^ K4, SA2 ^ o4, 40), o4 = Z2 + (u4 = h3) | 0, o4 = ((f4 = D4 + w4 | 0) >>> 0 < w4 >>> 0 ? o4 + 1 | 0 : o4) + wA2 | 0, w4 = f4, Z2 = f4 = f4 + gA2 | 0, K4 = o4 = w4 >>> 0 > f4 >>> 0 ? o4 + 1 | 0 : o4, m4 = BA2, w4 = DA(G4 ^ v4, z4 ^ AA2, 48), o4 = (hA2 = h3) + N4 | 0, G4 = f4 = w4 + M4 | 0, o4 = DA(f4 ^ c4, (M4 = f4 >>> 0 < w4 >>> 0 ? o4 + 1 | 0 : o4) ^ Y4, 1), Y4 = c4 = h3, f4 = o4, o4 = H4 + B4 | 0, o4 = ((e4 = e4 + g6 | 0) >>> 0 < g6 >>> 0 ? o4 + 1 | 0 : o4) + c4 | 0, o4 = (e4 = (c4 = f4 + e4 | 0) >>> 0 < e4 >>> 0 ? o4 + 1 | 0 : o4) + m4 | 0, N4 = H4 = c4 + X3 | 0, H4 = o4 = H4 >>> 0 < c4 >>> 0 ? o4 + 1 | 0 : o4, c4 = DA(c4 ^ r4, e4 ^ P4, 32), o4 = x4 + (v4 = h3) | 0, s4 = o4 = (r4 = c4 + s4 | 0) >>> 0 < s4 >>> 0 ? o4 + 1 | 0 : o4, e4 = DA(f4 ^ r4, o4 ^ Y4, 40), o4 = (z4 = h3) + H4 | 0, H4 = f4 = e4 + N4 | 0, c4 = DA(f4 ^ c4, v4 ^ (Y4 = f4 >>> 0 < e4 >>> 0 ? o4 + 1 | 0 : o4), 48), o4 = s4 + (N4 = h3) | 0, v4 = o4 = (s4 = c4 + r4 | 0) >>> 0 < r4 >>> 0 ? o4 + 1 | 0 : o4, f4 = DA(e4 ^ s4, z4 ^ o4, 1), o4 = (z4 = h3) + K4 | 0, o4 = FA2 + ((r4 = f4 + Z2 | 0) >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = (e4 = (r4 = r4 + V2 | 0) >>> 0 < V2 >>> 0 ? o4 + 1 | 0 : o4) + _4 | 0, SA2 = _4 = r4 + cA2 | 0, _4 = o4 = _4 >>> 0 < r4 >>> 0 ? o4 + 1 | 0 : o4, x4 = f4, m4 = r4, P4 = e4, r4 = rA2, f4 = DA(y4 ^ L4, U4 ^ CA2, 1), o4 = b4 + (y4 = h3) | 0, o4 = ((e4 = S4) >>> 0 > (S4 = f4 + S4 | 0) >>> 0 ? o4 + 1 | 0 : o4) + yA2 | 0, o4 = pA2 + (e4 = (r4 = r4 + S4 | 0) >>> 0 < S4 >>> 0 ? o4 + 1 | 0 : o4) | 0, b4 = S4 = r4 + fA2 | 0, L4 = o4 = S4 >>> 0 < fA2 >>> 0 ? o4 + 1 | 0 : o4, S4 = f4, e4 = o4 = DA(r4 ^ w4, e4 ^ hA2, 32), o4 = d4 + IA2 | 0, o4 = (U4 = f4 = h3) + (t4 = (f4 = t4 + T2 | 0) >>> 0 < t4 >>> 0 ? o4 + 1 | 0 : o4) | 0, d4 = o4 = (w4 = f4 + e4 | 0) >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4, S4 = DA(w4 ^ S4, o4 ^ y4, 40), o4 = (IA2 = h3) + L4 | 0, L4 = DA(b4 = (r4 = S4 + b4 | 0) ^ e4, U4 ^ (e4 = r4 >>> 0 < S4 >>> 0 ? o4 + 1 | 0 : o4), 48), o4 = DA(L4 ^ m4, (CA2 = h3) ^ P4, 32), hA2 = y4 = h3, b4 = o4, U4 = y4, f4 = DA(f4 ^ n4, t4 ^ W2, 1), o4 = eA2 + (y4 = h3) | 0, o4 = J4 + ((t4 = f4 + q4 | 0) >>> 0 < q4 >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = GA2 + (k4 = (t4 = t4 + k4 | 0) >>> 0 < k4 >>> 0 ? o4 + 1 | 0 : o4) | 0, m4 = n4 = t4 + QA2 | 0, n4 = o4 = n4 >>> 0 < QA2 >>> 0 ? o4 + 1 | 0 : o4, J4 = f4, T2 = y4, t4 = DA(t4 ^ p4, k4 ^ $2, 32), o4 = (p4 = h3) + M4 | 0, y4 = f4 = t4 + G4 | 0, k4 = DA(f4 ^ J4, (G4 = f4 >>> 0 < t4 >>> 0 ? o4 + 1 | 0 : o4) ^ T2, 40), o4 = (W2 = h3) + n4 | 0, J4 = f4 = k4 + m4 | 0, f4 = DA(f4 ^ t4, p4 ^ (M4 = f4 >>> 0 < k4 >>> 0 ? o4 + 1 | 0 : o4), 48), o4 = G4 + (m4 = h3) | 0, n4 = f4, G4 = f4 = y4 + f4 | 0, p4 = o4 = f4 >>> 0 < y4 >>> 0 ? o4 + 1 | 0 : o4, o4 = o4 + U4 | 0, U4 = f4 = f4 + b4 | 0, t4 = z4, z4 = o4 = G4 >>> 0 > f4 >>> 0 ? o4 + 1 | 0 : o4, t4 = DA(f4 ^ x4, t4 ^ o4, 40), o4 = (o4 = _4) + (_4 = h3) | 0, T2 = f4 = t4 + SA2 | 0, x4 = o4 = f4 >>> 0 < t4 >>> 0 ? o4 + 1 | 0 : o4, y4 = e4, f4 = DA(R4 ^ Z2, K4 ^ NA2, 48), o4 = O2 + ($2 = h3) | 0, O2 = f4, e4 = (f4 = F4 + f4 | 0) ^ D4, D4 = o4 = f4 >>> 0 < F4 >>> 0 ? o4 + 1 | 0 : o4, e4 = DA(e4, o4 ^ u4, 1), o4 = (u4 = h3) + y4 | 0, o4 = C4 + ((r4 = e4 + r4 | 0) >>> 0 < e4 >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = (y4 = (r4 = r4 + sA2 | 0) >>> 0 < sA2 >>> 0 ? o4 + 1 | 0 : o4) + l4 | 0, Z2 = F4 = r4 + aA2 | 0, F4 = o4 = F4 >>> 0 < r4 >>> 0 ? o4 + 1 | 0 : o4, r4 = DA(r4 ^ n4, y4 ^ m4, 32), o4 = v4 + (K4 = h3) | 0, v4 = r4, s4 = o4 = (y4 = s4 + r4 | 0) >>> 0 < s4 >>> 0 ? o4 + 1 | 0 : o4, e4 = DA(e4 ^ y4, u4 ^ o4, 40), o4 = (o4 = F4) + (F4 = h3) | 0, n4 = r4 = e4 + Z2 | 0, r4 = DA(R4 = r4 ^ v4, K4 ^ (v4 = r4 >>> 0 < e4 >>> 0 ? o4 + 1 | 0 : o4), 48), o4 = s4 + (SA2 = h3) | 0, u4 = r4, Z2 = o4 = (s4 = y4 + r4 | 0) >>> 0 < y4 >>> 0 ? o4 + 1 | 0 : o4, r4 = DA(e4 ^ s4, F4 ^ o4, 1), o4 = (F4 = h3) + x4 | 0, o4 = B4 + ((e4 = r4 + T2 | 0) >>> 0 < r4 >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = j3 + (y4 = (e4 = e4 + g6 | 0) >>> 0 < g6 >>> 0 ? o4 + 1 | 0 : o4) | 0, NA2 = K4 = I7 + e4 | 0, K4 = o4 = K4 >>> 0 < I7 >>> 0 ? o4 + 1 | 0 : o4, R4 = r4, m4 = F4, F4 = e4, P4 = y4, r4 = DA(k4 ^ G4, p4 ^ W2, 1), o4 = (y4 = h3) + Y4 | 0, o4 = nA2 + ((e4 = r4 + H4 | 0) >>> 0 < r4 >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = (k4 = (e4 = e4 + EA2 | 0) >>> 0 < EA2 >>> 0 ? o4 + 1 | 0 : o4) + j3 | 0, Y4 = H4 = I7 + e4 | 0, H4 = o4 = H4 >>> 0 < e4 >>> 0 ? o4 + 1 | 0 : o4, G4 = r4, e4 = o4 = DA(e4 ^ O2, k4 ^ $2, 32), k4 = r4 = h3, o4 = d4 + CA2 | 0, d4 = o4 = (r4 = w4 + L4 | 0) >>> 0 < w4 >>> 0 ? o4 + 1 | 0 : o4, o4 = o4 + k4 | 0, o4 = (w4 = r4) >>> 0 > (r4 = r4 + e4 | 0) >>> 0 ? o4 + 1 | 0 : o4, L4 = r4, r4 ^= G4, G4 = o4, y4 = DA(r4, o4 ^ y4, 40), o4 = (W2 = h3) + H4 | 0, k4 = DA(H4 = (r4 = y4 + Y4 | 0) ^ e4, k4 ^ (e4 = r4 >>> 0 < y4 >>> 0 ? o4 + 1 | 0 : o4), 48), o4 = DA(k4 ^ F4, (o4 = P4) ^ (P4 = h3), 32), $2 = F4 = h3, H4 = o4, Y4 = D4, D4 = c4, o4 = DA(w4 ^ S4, d4 ^ IA2, 1), p4 = c4 = h3, w4 = o4, o4 = M4 + HA2 | 0, o4 = ((S4 = J4 + tA2 | 0) >>> 0 < tA2 >>> 0 ? o4 + 1 | 0 : o4) + c4 | 0, S4 = o4 = (c4 = w4 + S4 | 0) >>> 0 < S4 >>> 0 ? o4 + 1 | 0 : o4, D4 = DA(c4 ^ D4, o4 ^ N4, 32), o4 = (o4 = Y4) + (Y4 = h3) | 0, w4 = DA((f4 = D4 + f4 | 0) ^ w4, p4 ^ (d4 = f4 >>> 0 < D4 >>> 0 ? o4 + 1 | 0 : o4), 40), o4 = S4 + (IA2 = h3) | 0, J4 = w4, o4 = _A2 + ((M4 = c4) >>> 0 > (c4 = c4 + w4 | 0) >>> 0 ? o4 + 1 | 0 : o4) | 0, M4 = o4 = (w4 = c4 + iA2 | 0) >>> 0 < iA2 >>> 0 ? o4 + 1 | 0 : o4, c4 = DA(D4 ^ w4, Y4 ^ o4, 48), o4 = d4 + (CA2 = h3) | 0, N4 = f4, D4 = c4, d4 = f4 = f4 + c4 | 0, Y4 = o4 = N4 >>> 0 > f4 >>> 0 ? o4 + 1 | 0 : o4, o4 = o4 + F4 | 0, N4 = o4 = (F4 = f4 + H4 | 0) >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4, f4 = (S4 = DA(F4 ^ R4, o4 ^ m4, 40)) + NA2 | 0, o4 = (NA2 = h3) + K4 | 0, p4 = f4, O2 = f4 >>> 0 < S4 >>> 0 ? o4 + 1 | 0 : o4, f4 = DA(b4 ^ T2, x4 ^ hA2, 48), o4 = (b4 = h3) + z4 | 0, U4 = c4 = f4 + U4 | 0, R4 = _4, _4 = o4 = c4 >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4, o4 = DA(c4 ^ t4, R4 ^ o4, 1), T2 = c4 = h3, t4 = o4, o4 = e4 + C4 | 0, o4 = ((r4 = r4 + sA2 | 0) >>> 0 < sA2 >>> 0 ? o4 + 1 | 0 : o4) + c4 | 0, o4 = FA2 + (r4 = (c4 = r4 + t4 | 0) >>> 0 < r4 >>> 0 ? o4 + 1 | 0 : o4) | 0, x4 = e4 = c4 + V2 | 0, e4 = o4 = e4 >>> 0 < V2 >>> 0 ? o4 + 1 | 0 : o4, c4 = DA(c4 ^ D4, r4 ^ CA2, 32), o4 = Z2 + (K4 = h3) | 0, z4 = c4, c4 = (D4 = s4 + c4 | 0) ^ t4, t4 = o4 = D4 >>> 0 < s4 >>> 0 ? o4 + 1 | 0 : o4, r4 = DA(c4, T2 ^ o4, 40), o4 = (o4 = e4) + (e4 = h3) | 0, T2 = c4 = r4 + x4 | 0, c4 = DA(s4 = c4 ^ z4, K4 ^ (z4 = c4 >>> 0 < r4 >>> 0 ? o4 + 1 | 0 : o4), 48), o4 = t4 + (CA2 = h3) | 0, Z2 = c4, D4 = o4 = (c4 = D4 + c4 | 0) >>> 0 < D4 >>> 0 ? o4 + 1 | 0 : o4, r4 = DA(c4 ^ r4, e4 ^ o4, 1), o4 = (s4 = h3) + O2 | 0, o4 = kA2 + ((e4 = r4 + p4 | 0) >>> 0 < r4 >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = (t4 = (e4 = e4 + oA2 | 0) >>> 0 < oA2 >>> 0 ? o4 + 1 | 0 : o4) + BA2 | 0, AA2 = x4 = e4 + X3 | 0, x4 = o4 = x4 >>> 0 < e4 >>> 0 ? o4 + 1 | 0 : o4, K4 = r4, R4 = e4, m4 = t4, r4 = DA(J4 ^ d4, Y4 ^ IA2, 1), o4 = (Y4 = h3) + wA2 | 0, o4 = v4 + (r4 >>> 0 > (e4 = r4 + gA2 | 0) >>> 0 ? o4 + 1 | 0 : o4) | 0, t4 = o4 = (e4 = e4 + n4 | 0) >>> 0 < n4 >>> 0 ? o4 + 1 | 0 : o4, o4 = DA(f4 ^ e4, o4 ^ b4, 32), b4 = f4 = h3, n4 = o4, o4 = G4 + P4 | 0, o4 = (f4 = k4 + L4 | 0) >>> 0 < k4 >>> 0 ? o4 + 1 | 0 : o4, k4 = f4, d4 = o4, o4 = b4 + o4 | 0, G4 = f4 = f4 + n4 | 0, J4 = o4 = k4 >>> 0 > f4 >>> 0 ? o4 + 1 | 0 : o4, f4 = DA(f4 ^ r4, Y4 ^ o4, 40), o4 = t4 + (P4 = h3) | 0, L4 = f4, o4 = eA2 + ((f4 = e4 + f4 | 0) >>> 0 < e4 >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = (f4 = f4 + q4 | 0) >>> 0 < q4 >>> 0 ? o4 + 1 | 0 : o4, Y4 = f4, f4 ^= n4, n4 = o4, t4 = DA(f4, b4 ^ o4, 48), o4 = DA(t4 ^ R4, (o4 = m4) ^ (m4 = h3), 32), IA2 = f4 = h3, b4 = o4, v4 = f4, f4 = DA(y4 ^ k4, d4 ^ W2, 1), o4 = HA2 + (e4 = h3) | 0, o4 = M4 + ((r4 = f4 + tA2 | 0) >>> 0 < tA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = (y4 = (r4 = r4 + w4 | 0) >>> 0 < w4 >>> 0 ? o4 + 1 | 0 : o4) + l4 | 0, M4 = k4 = r4 + aA2 | 0, k4 = o4 = k4 >>> 0 < r4 >>> 0 ? o4 + 1 | 0 : o4, w4 = f4, d4 = e4, f4 = (r4 = DA(r4 ^ u4, y4 ^ SA2, 32)) + U4 | 0, o4 = (U4 = h3) + _4 | 0, e4 = f4, y4 = DA(y4 = f4 ^ w4, (w4 = f4 >>> 0 < r4 >>> 0 ? o4 + 1 | 0 : o4) ^ d4, 40), o4 = (W2 = h3) + k4 | 0, k4 = f4 = y4 + M4 | 0, r4 = DA(f4 ^ r4, U4 ^ (_4 = f4 >>> 0 < y4 >>> 0 ? o4 + 1 | 0 : o4), 48), o4 = w4 + (d4 = h3) | 0, M4 = f4 = r4 + e4 | 0, U4 = o4 = f4 >>> 0 < e4 >>> 0 ? o4 + 1 | 0 : o4, o4 = o4 + v4 | 0, v4 = o4 = (w4 = f4 + b4 | 0) >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4, e4 = DA(w4 ^ K4, o4 ^ s4, 40), o4 = (u4 = h3) + x4 | 0, x4 = f4 = e4 + AA2 | 0, K4 = o4 = f4 >>> 0 < e4 >>> 0 ? o4 + 1 | 0 : o4, f4 = c4, s4 = D4, D4 = r4, c4 = DA(H4 ^ p4, O2 ^ $2, 48), o4 = N4 + (AA2 = h3) | 0, H4 = c4, F4 = o4 = (r4 = F4 + c4 | 0) >>> 0 < F4 >>> 0 ? o4 + 1 | 0 : o4, o4 = DA(r4 ^ S4, NA2 ^ o4, 1), N4 = c4 = h3, S4 = o4, o4 = n4 + MA2 | 0, o4 = ((n4 = Y4 + cA2 | 0) >>> 0 < cA2 >>> 0 ? o4 + 1 | 0 : o4) + c4 | 0, n4 = o4 = (c4 = n4 + S4 | 0) >>> 0 < n4 >>> 0 ? o4 + 1 | 0 : o4, D4 = DA(c4 ^ D4, o4 ^ d4, 32), o4 = (Y4 = h3) + s4 | 0, S4 = DA((f4 = D4 + f4 | 0) ^ S4, N4 ^ (s4 = f4 >>> 0 < D4 >>> 0 ? o4 + 1 | 0 : o4), 40), o4 = n4 + (p4 = h3) | 0, o4 = GA2 + ((n4 = c4) >>> 0 > (c4 = c4 + S4 | 0) >>> 0 ? o4 + 1 | 0 : o4) | 0, d4 = o4 = (n4 = c4 + QA2 | 0) >>> 0 < QA2 >>> 0 ? o4 + 1 | 0 : o4, c4 = DA(D4 ^ n4, Y4 ^ o4, 48), o4 = s4 + ($2 = h3) | 0, Y4 = c4, N4 = o4 = (s4 = f4 + c4 | 0) >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4, f4 = DA(s4 ^ S4, p4 ^ o4, 1), o4 = (S4 = h3) + K4 | 0, o4 = nA2 + ((c4 = f4 + x4 | 0) >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = kA2 + (D4 = (c4 = c4 + EA2 | 0) >>> 0 < EA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, hA2 = p4 = c4 + oA2 | 0, p4 = o4 = p4 >>> 0 < oA2 >>> 0 ? o4 + 1 | 0 : o4, O2 = f4, R4 = c4, f4 = DA(y4 ^ M4, U4 ^ W2, 1), o4 = (y4 = h3) + z4 | 0, o4 = pA2 + ((c4 = f4 + T2 | 0) >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = _A2 + (M4 = (c4 = c4 + fA2 | 0) >>> 0 < fA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, T2 = U4 = c4 + iA2 | 0, U4 = o4 = U4 >>> 0 < iA2 >>> 0 ? o4 + 1 | 0 : o4, z4 = f4, o4 = DA(c4 ^ H4, M4 ^ AA2, 32), AA2 = f4 = h3, c4 = o4, o4 = J4 + m4 | 0, G4 = f4 = t4 + G4 | 0, H4 = o4 = f4 >>> 0 < t4 >>> 0 ? o4 + 1 | 0 : o4, o4 = AA2 + o4 | 0, J4 = o4 = (t4 = f4 + c4 | 0) >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4, y4 = DA(t4 ^ z4, o4 ^ y4, 40), o4 = (m4 = h3) + U4 | 0, M4 = f4 = y4 + T2 | 0, z4 = DA(f4 ^ c4, AA2 ^ (U4 = f4 >>> 0 < y4 >>> 0 ? o4 + 1 | 0 : o4), 48), o4 = DA(z4 ^ R4, (AA2 = h3) ^ D4, 32), W2 = f4 = h3, T2 = o4, D4 = f4, c4 = rA2, f4 = DA(G4 ^ L4, H4 ^ P4, 1), o4 = _4 + (H4 = h3) | 0, o4 = ((G4 = k4) >>> 0 > (k4 = f4 + k4 | 0) >>> 0 ? o4 + 1 | 0 : o4) + yA2 | 0, o4 = nA2 + (k4 = (c4 = c4 + k4 | 0) >>> 0 < k4 >>> 0 ? o4 + 1 | 0 : o4) | 0, G4 = _4 = c4 + EA2 | 0, _4 = o4 = _4 >>> 0 < EA2 >>> 0 ? o4 + 1 | 0 : o4, c4 = DA(c4 ^ Z2, k4 ^ CA2, 32), o4 = F4 + (L4 = h3) | 0, F4 = c4, o4 = (c4 = r4 + c4 | 0) >>> 0 < r4 >>> 0 ? o4 + 1 | 0 : o4, r4 = H4, H4 = o4, r4 = DA(f4 ^ c4, r4 ^ o4, 40), o4 = (P4 = h3) + _4 | 0, k4 = f4 = r4 + G4 | 0, f4 = DA(f4 ^ F4, L4 ^ (_4 = f4 >>> 0 < r4 >>> 0 ? o4 + 1 | 0 : o4), 48), o4 = H4 + (R4 = h3) | 0, H4 = f4, G4 = f4 = c4 + f4 | 0, L4 = o4 = f4 >>> 0 < c4 >>> 0 ? o4 + 1 | 0 : o4, o4 = o4 + D4 | 0, o4 = (F4 = f4 + T2 | 0) >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4, f4 = F4 ^ O2, O2 = o4, S4 = DA(f4, o4 ^ S4, 40), o4 = (CA2 = h3) + p4 | 0, p4 = f4 = S4 + hA2 | 0, Z2 = f4 >>> 0 < S4 >>> 0 ? o4 + 1 | 0 : o4, f4 = DA(b4 ^ x4, K4 ^ IA2, 48), o4 = v4 + (IA2 = h3) | 0, b4 = f4, o4 = (f4 = w4 + f4 | 0) >>> 0 < w4 >>> 0 ? o4 + 1 | 0 : o4, w4 = f4, v4 = o4, o4 = DA(f4 ^ e4, o4 ^ u4, 1), u4 = f4 = h3, D4 = o4, o4 = U4 + FA2 | 0, o4 = ((c4 = M4 + V2 | 0) >>> 0 < V2 >>> 0 ? o4 + 1 | 0 : o4) + f4 | 0, o4 = GA2 + (c4 = (f4 = c4 + D4 | 0) >>> 0 < c4 >>> 0 ? o4 + 1 | 0 : o4) | 0, M4 = e4 = f4 + QA2 | 0, e4 = o4 = e4 >>> 0 < QA2 >>> 0 ? o4 + 1 | 0 : o4, f4 = DA(f4 ^ H4, c4 ^ R4, 32), o4 = N4 + (U4 = h3) | 0, H4 = f4, s4 = o4 = (c4 = s4 + f4 | 0) >>> 0 < s4 >>> 0 ? o4 + 1 | 0 : o4, D4 = DA(c4 ^ D4, u4 ^ o4, 40), o4 = (u4 = h3) + e4 | 0, M4 = f4 = D4 + M4 | 0, f4 = DA(e4 = f4 ^ H4, U4 ^ (H4 = f4 >>> 0 < D4 >>> 0 ? o4 + 1 | 0 : o4), 48), o4 = s4 + (hA2 = h3) | 0, s4 = f4, N4 = o4 = (e4 = c4 + f4 | 0) >>> 0 < c4 >>> 0 ? o4 + 1 | 0 : o4, f4 = DA(e4 ^ D4, u4 ^ o4, 1), o4 = (U4 = h3) + Z2 | 0, o4 = HA2 + ((c4 = f4 + p4 | 0) >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = (D4 = (c4 = c4 + tA2 | 0) >>> 0 < tA2 >>> 0 ? o4 + 1 | 0 : o4) + wA2 | 0, SA2 = u4 = c4 + gA2 | 0, u4 = o4 = u4 >>> 0 < c4 >>> 0 ? o4 + 1 | 0 : o4, x4 = f4, K4 = c4, R4 = D4, f4 = DA(r4 ^ G4, P4 ^ L4, 1), o4 = pA2 + (D4 = h3) | 0, o4 = d4 + ((c4 = f4 + fA2 | 0) >>> 0 < fA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = MA2 + (r4 = (c4 = c4 + n4 | 0) >>> 0 < n4 >>> 0 ? o4 + 1 | 0 : o4) | 0, L4 = n4 = c4 + cA2 | 0, n4 = o4 = n4 >>> 0 < cA2 >>> 0 ? o4 + 1 | 0 : o4, d4 = f4, G4 = D4, o4 = DA(c4 ^ b4, r4 ^ IA2, 32), b4 = f4 = h3, r4 = o4, c4 = f4, o4 = J4 + AA2 | 0, o4 = (f4 = t4 + z4 | 0) >>> 0 < t4 >>> 0 ? o4 + 1 | 0 : o4, t4 = f4, J4 = o4, o4 = o4 + c4 | 0, o4 = (D4 = f4 + r4 | 0) >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4, f4 = D4 ^ d4, d4 = o4, f4 = DA(f4, o4 ^ G4, 40), o4 = (o4 = n4) + (n4 = h3) | 0, G4 = c4 = f4 + L4 | 0, L4 = o4 = c4 >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4, b4 = DA(c4 ^ r4, b4 ^ o4, 48), o4 = DA(b4 ^ K4, (o4 = R4) ^ (R4 = h3), 32), P4 = c4 = h3, z4 = o4, c4 = DA(t4 ^ y4, J4 ^ m4, 1), o4 = (t4 = h3) + yA2 | 0, o4 = _4 + ((r4 = c4 + rA2 | 0) >>> 0 < c4 >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = C4 + (y4 = (r4 = r4 + k4 | 0) >>> 0 < k4 >>> 0 ? o4 + 1 | 0 : o4) | 0, m4 = k4 = r4 + sA2 | 0, k4 = o4 = k4 >>> 0 < sA2 >>> 0 ? o4 + 1 | 0 : o4, _4 = c4, J4 = t4, r4 = DA(r4 ^ Y4, y4 ^ $2, 32), o4 = (Y4 = h3) + v4 | 0, t4 = c4 = r4 + w4 | 0, c4 = (y4 = DA(c4 ^ _4, (w4 = c4 >>> 0 < r4 >>> 0 ? o4 + 1 | 0 : o4) ^ J4, 40)) + m4 | 0, o4 = (m4 = h3) + k4 | 0, _4 = c4, c4 = DA(c4 ^ r4, Y4 ^ (J4 = c4 >>> 0 < y4 >>> 0 ? o4 + 1 | 0 : o4), 48), o4 = w4 + (AA2 = h3) | 0, Y4 = c4, v4 = c4 = t4 + c4 | 0, K4 = o4 = c4 >>> 0 < t4 >>> 0 ? o4 + 1 | 0 : o4, o4 = P4 + o4 | 0, o4 = (r4 = c4 + z4 | 0) >>> 0 < c4 >>> 0 ? o4 + 1 | 0 : o4, c4 = U4, U4 = o4, t4 = DA(r4 ^ x4, c4 ^ o4, 40), o4 = (IA2 = h3) + u4 | 0, k4 = c4 = t4 + SA2 | 0, o4 = DA(c4 ^ z4, P4 ^ (u4 = c4 >>> 0 < t4 >>> 0 ? o4 + 1 | 0 : o4), 48), P4 = c4 = h3, z4 = o4, c4 = f4, o4 = d4 + R4 | 0, d4 = f4 = D4 + b4 | 0, b4 = o4 = f4 >>> 0 < D4 >>> 0 ? o4 + 1 | 0 : o4, o4 = DA(f4 ^ c4, o4 ^ n4, 1), D4 = c4 = h3, f4 = o4, o4 = J4 + B4 | 0, o4 = ((w4 = _4 + g6 | 0) >>> 0 < g6 >>> 0 ? o4 + 1 | 0 : o4) + c4 | 0, o4 = eA2 + (w4 = (c4 = f4 + w4 | 0) >>> 0 < w4 >>> 0 ? o4 + 1 | 0 : o4) | 0, R4 = n4 = c4 + q4 | 0, n4 = o4 = n4 >>> 0 < q4 >>> 0 ? o4 + 1 | 0 : o4, _4 = f4, J4 = D4, f4 = DA(p4 ^ T2, Z2 ^ W2, 48), o4 = O2 + (W2 = h3) | 0, p4 = f4, o4 = (f4 = F4 + f4 | 0) >>> 0 < F4 >>> 0 ? o4 + 1 | 0 : o4, F4 = f4, c4 = DA(c4 ^ s4, w4 ^ hA2, 32), O2 = o4, o4 = o4 + (T2 = h3) | 0, D4 = f4 = c4 + f4 | 0, w4 = DA(f4 ^ _4, (s4 = f4 >>> 0 < c4 >>> 0 ? o4 + 1 | 0 : o4) ^ J4, 40), o4 = (Z2 = h3) + n4 | 0, n4 = f4 = w4 + R4 | 0, f4 = DA(f4 ^ c4, T2 ^ (_4 = f4 >>> 0 < w4 >>> 0 ? o4 + 1 | 0 : o4), 48), o4 = s4 + ($2 = h3) | 0, J4 = f4, T2 = o4 = (s4 = D4 + f4 | 0) >>> 0 < D4 >>> 0 ? o4 + 1 | 0 : o4, f4 = DA(w4 ^ s4, Z2 ^ o4, 1), o4 = GA2 + (R4 = h3) | 0, Z2 = f4, hA2 = f4 = QA2 + f4 | 0, D4 = o4 = f4 >>> 0 < QA2 >>> 0 ? o4 + 1 | 0 : o4, f4 = DA(S4 ^ F4, O2 ^ CA2, 1), o4 = (w4 = h3) + L4 | 0, o4 = _A2 + ((c4 = f4 + G4 | 0) >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = BA2 + (F4 = (c4 = c4 + iA2 | 0) >>> 0 < iA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, O2 = S4 = c4 + X3 | 0, S4 = o4 = S4 >>> 0 < X3 >>> 0 ? o4 + 1 | 0 : o4, G4 = w4, c4 = DA(c4 ^ Y4, F4 ^ AA2, 32), o4 = N4 + (AA2 = h3) | 0, L4 = c4, o4 = (w4 = e4 + c4 | 0) >>> 0 < e4 >>> 0 ? o4 + 1 | 0 : o4, e4 = G4, G4 = o4, F4 = DA(f4 ^ w4, e4 ^ o4, 40), o4 = (CA2 = h3) + S4 | 0, Y4 = f4 = F4 + O2 | 0, o4 = (N4 = f4 >>> 0 < F4 >>> 0 ? o4 + 1 | 0 : o4) + D4 | 0, S4 = o4 = (D4 = f4 + hA2 | 0) >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4, O2 = o4 = DA(D4 ^ z4, o4 ^ P4, 32), x4 = f4 = h3, f4 = DA(y4 ^ v4, K4 ^ m4, 1), o4 = (e4 = h3) + H4 | 0, o4 = j3 + ((c4 = f4 + M4 | 0) >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = (y4 = (c4 = I7 + c4 | 0) >>> 0 < I7 >>> 0 ? o4 + 1 | 0 : o4) + l4 | 0, K4 = H4 = c4 + aA2 | 0, H4 = o4 = H4 >>> 0 < c4 >>> 0 ? o4 + 1 | 0 : o4, M4 = f4, v4 = e4, c4 = DA(c4 ^ p4, y4 ^ W2, 32), o4 = (p4 = h3) + b4 | 0, e4 = f4 = c4 + d4 | 0, f4 = (y4 = DA(f4 ^ M4, (d4 = f4 >>> 0 < c4 >>> 0 ? o4 + 1 | 0 : o4) ^ v4, 40)) + K4 | 0, o4 = (K4 = h3) + H4 | 0, H4 = f4, f4 = DA(f4 ^ c4, p4 ^ (M4 = f4 >>> 0 < y4 >>> 0 ? o4 + 1 | 0 : o4), 48), o4 = d4 + (W2 = h3) | 0, d4 = f4, p4 = o4 = (f4 = e4 + f4 | 0) >>> 0 < e4 >>> 0 ? o4 + 1 | 0 : o4, o4 = o4 + x4 | 0, b4 = o4 = (e4 = f4) >>> 0 > (f4 = f4 + O2 | 0) >>> 0 ? o4 + 1 | 0 : o4, c4 = DA(f4 ^ Z2, R4 ^ o4, 40), o4 = S4 + (R4 = h3) | 0, v4 = c4, o4 = B4 + ((c4 = D4 + c4 | 0) >>> 0 < D4 >>> 0 ? o4 + 1 | 0 : o4) | 0, Z2 = c4 = c4 + g6 | 0, D4 = c4 ^ O2, O2 = o4 = c4 >>> 0 < g6 >>> 0 ? o4 + 1 | 0 : o4, c4 = DA(D4, x4 ^ o4, 48), o4 = b4 + (x4 = h3) | 0, b4 = o4 = (S4 = f4 + c4 | 0) >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4, f4 = o4 = DA(S4 ^ v4, R4 ^ o4, 1), v4 = D4 = h3, D4 = DA(e4 ^ y4, p4 ^ K4, 1), o4 = _4 + (y4 = h3) | 0, o4 = _A2 + ((e4 = D4 + n4 | 0) >>> 0 < n4 >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = nA2 + (n4 = (e4 = e4 + iA2 | 0) >>> 0 < iA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, R4 = _4 = e4 + EA2 | 0, _4 = o4 = _4 >>> 0 < EA2 >>> 0 ? o4 + 1 | 0 : o4, p4 = D4, K4 = y4, o4 = U4 + P4 | 0, o4 = (D4 = r4 + z4 | 0) >>> 0 < r4 >>> 0 ? o4 + 1 | 0 : o4, U4 = D4, L4 = DA(Y4 ^ L4, N4 ^ AA2, 48), y4 = DA(e4 ^ L4, n4 ^ (AA2 = h3), 32), Y4 = o4, o4 = o4 + (hA2 = h3) | 0, n4 = D4 = y4 + D4 | 0, D4 = DA(D4 ^ p4, (N4 = D4 >>> 0 < y4 >>> 0 ? o4 + 1 | 0 : o4) ^ K4, 40), o4 = (p4 = h3) + _4 | 0, K4 = o4 = (r4 = D4 + R4 | 0) >>> 0 < D4 >>> 0 ? o4 + 1 | 0 : o4, o4 = o4 + v4 | 0, o4 = C4 + ((z4 = r4) >>> 0 > (r4 = f4 + r4 | 0) >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = (e4 = (r4 = r4 + sA2 | 0) >>> 0 < sA2 >>> 0 ? o4 + 1 | 0 : o4) + yA2 | 0, SA2 = _4 = r4 + rA2 | 0, R4 = o4 = _4 >>> 0 < r4 >>> 0 ? o4 + 1 | 0 : o4, m4 = f4, P4 = r4, o4 = DA(t4 ^ U4, Y4 ^ IA2, 1), t4 = r4 = h3, f4 = o4, o4 = M4 + pA2 | 0, o4 = ((_4 = H4 + fA2 | 0) >>> 0 < fA2 >>> 0 ? o4 + 1 | 0 : o4) + r4 | 0, o4 = eA2 + (_4 = (r4 = f4 + _4 | 0) >>> 0 < _4 >>> 0 ? o4 + 1 | 0 : o4) | 0, Y4 = H4 = r4 + q4 | 0, H4 = o4 = H4 >>> 0 < q4 >>> 0 ? o4 + 1 | 0 : o4, M4 = f4, o4 = DA(r4 ^ J4, _4 ^ $2, 32), U4 = f4 = h3, r4 = o4, _4 = f4, o4 = G4 + AA2 | 0, G4 = f4 = w4 + L4 | 0, J4 = o4 = f4 >>> 0 < w4 >>> 0 ? o4 + 1 | 0 : o4, o4 = o4 + _4 | 0, o4 = (w4 = f4 + r4 | 0) >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4;
                      f4 = w4 ^ M4, M4 = o4, _4 = DA(f4, o4 ^ t4, 40), o4 = (AA2 = h3) + H4 | 0, L4 = DA(H4 = (f4 = _4 + Y4 | 0) ^ r4, U4 ^ (r4 = f4 >>> 0 < _4 >>> 0 ? o4 + 1 | 0 : o4), 48), o4 = DA(o4 = L4 ^ P4, (P4 = h3) ^ e4, 32), IA2 = e4 = h3, Y4 = o4, H4 = e4, e4 = DA(F4 ^ G4, J4 ^ CA2, 1), o4 = BA2 + (F4 = h3) | 0, o4 = u4 + ((t4 = e4 + X3 | 0) >>> 0 < X3 >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = HA2 + (k4 = (t4 = t4 + k4 | 0) >>> 0 < k4 >>> 0 ? o4 + 1 | 0 : o4) | 0, J4 = G4 = t4 + tA2 | 0, G4 = o4 = G4 >>> 0 < tA2 >>> 0 ? o4 + 1 | 0 : o4, t4 = DA(t4 ^ d4, k4 ^ W2, 32), o4 = T2 + (U4 = h3) | 0, d4 = t4, s4 = o4 = (t4 = s4 + t4 | 0) >>> 0 < s4 >>> 0 ? o4 + 1 | 0 : o4, k4 = DA(e4 ^ t4, o4 ^ F4, 40), o4 = (W2 = h3) + G4 | 0, F4 = e4 = k4 + J4 | 0, e4 = DA(G4 = e4 ^ d4, U4 ^ (d4 = e4 >>> 0 < k4 >>> 0 ? o4 + 1 | 0 : o4), 48), o4 = s4 + ($2 = h3) | 0, G4 = e4, J4 = e4 = t4 + e4 | 0, U4 = o4 = e4 >>> 0 < t4 >>> 0 ? o4 + 1 | 0 : o4, o4 = o4 + H4 | 0, o4 = (t4 = e4 + Y4 | 0) >>> 0 < e4 >>> 0 ? o4 + 1 | 0 : o4, e4 = v4, v4 = o4, s4 = DA(t4 ^ m4, e4 ^ o4, 40), o4 = (u4 = h3) + R4 | 0, H4 = e4 = s4 + SA2 | 0, e4 = DA(R4 = e4 ^ Y4, IA2 ^ (Y4 = e4 >>> 0 < s4 >>> 0 ? o4 + 1 | 0 : o4), 48), o4 = v4 + (IA2 = h3) | 0, v4 = e4, t4 = o4 = (e4 = t4 + e4 | 0) >>> 0 < t4 >>> 0 ? o4 + 1 | 0 : o4, u4 = o4 = DA(e4 ^ s4, u4 ^ o4, 1), CA2 = o4, T2 = s4 = h3, s4 = r4, r4 = D4, D4 = DA(y4 ^ z4, K4 ^ hA2, 48), o4 = N4 + (hA2 = h3) | 0, N4 = D4, o4 = (D4 = n4 + D4 | 0) >>> 0 < n4 >>> 0 ? o4 + 1 | 0 : o4, n4 = f4, f4 = r4 ^ D4, r4 = o4, f4 = DA(f4, o4 ^ p4, 1), o4 = (p4 = h3) + s4 | 0, o4 = MA2 + (f4 >>> 0 > (y4 = n4 + f4 | 0) >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = wA2 + (n4 = (y4 = y4 + cA2 | 0) >>> 0 < cA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, z4 = s4 = y4 + gA2 | 0, s4 = o4 = s4 >>> 0 < gA2 >>> 0 ? o4 + 1 | 0 : o4, y4 = DA(y4 ^ G4, n4 ^ $2, 32), o4 = b4 + (K4 = h3) | 0, G4 = o4 = (n4 = y4 + S4 | 0) >>> 0 < S4 >>> 0 ? o4 + 1 | 0 : o4, S4 = DA(f4 ^ n4, p4 ^ o4, 40), o4 = ($2 = h3) + s4 | 0, p4 = f4 = S4 + z4 | 0, y4 = DA(f4 ^ y4, K4 ^ (b4 = f4 >>> 0 < S4 >>> 0 ? o4 + 1 | 0 : o4), 48), o4 = G4 + (z4 = h3) | 0, K4 = f4 = y4 + n4 | 0, G4 = f4, R4 = o4 = f4 >>> 0 < n4 >>> 0 ? o4 + 1 | 0 : o4, n4 = D4, s4 = r4, o4 = M4 + P4 | 0, o4 = (f4 = w4 + L4 | 0) >>> 0 < w4 >>> 0 ? o4 + 1 | 0 : o4, w4 = f4, f4 ^= _4, _4 = o4, o4 = DA(f4, AA2 ^ o4, 1), m4 = f4 = h3, M4 = o4, r4 = o4, o4 = d4 + l4 | 0, o4 = ((D4 = F4 + aA2 | 0) >>> 0 < aA2 >>> 0 ? o4 + 1 | 0 : o4) + f4 | 0, F4 = o4 = (f4 = D4) >>> 0 > (D4 = r4 + D4 | 0) >>> 0 ? o4 + 1 | 0 : o4, r4 = DA(c4 ^ D4, o4 ^ x4, 32), o4 = (o4 = s4) + (s4 = h3) | 0, L4 = f4 = r4 + n4 | 0, c4 = DA(c4 = f4 ^ M4, m4 ^ (M4 = f4 >>> 0 < r4 >>> 0 ? o4 + 1 | 0 : o4), 40), o4 = F4 + (x4 = h3) | 0, o4 = FA2 + ((f4 = c4 + D4 | 0) >>> 0 < D4 >>> 0 ? o4 + 1 | 0 : o4) | 0, m4 = o4 = (n4 = f4 + V2 | 0) >>> 0 < V2 >>> 0 ? o4 + 1 | 0 : o4, s4 = DA(r4 ^ n4, s4 ^ o4, 48), SA2 = o4 = h3, f4 = DA(k4 ^ J4, U4 ^ W2, 1), o4 = (r4 = h3) + O2 | 0, o4 = kA2 + ((D4 = f4 + Z2 | 0) >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = j3 + (k4 = (D4 = D4 + oA2 | 0) >>> 0 < oA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, O2 = F4 = I7 + D4 | 0, J4 = o4 = F4 >>> 0 < I7 >>> 0 ? o4 + 1 | 0 : o4, U4 = f4, F4 = DA(D4 ^ N4, k4 ^ hA2, 32), o4 = (W2 = h3) + _4 | 0, _4 = f4 = F4 + w4 | 0, D4 = DA(f4 ^ U4, (N4 = f4 >>> 0 < F4 >>> 0 ? o4 + 1 | 0 : o4) ^ r4, 40), o4 = (o4 = J4) + (J4 = h3) | 0, U4 = f4 = D4 + O2 | 0, O2 = o4 = f4 >>> 0 < D4 >>> 0 ? o4 + 1 | 0 : o4, r4 = o4, o4 = j3 + T2 | 0, o4 = ((k4 = I7 + u4 | 0) >>> 0 < I7 >>> 0 ? o4 + 1 | 0 : o4) + r4 | 0, d4 = o4 = (r4 = f4 + k4 | 0) >>> 0 < k4 >>> 0 ? o4 + 1 | 0 : o4, f4 = DA(r4 ^ s4, SA2 ^ o4, 32), o4 = (u4 = h3) + R4 | 0, w4 = DA((k4 = f4 + G4 | 0) ^ CA2, (o4 = k4 >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4) ^ T2, 40), T2 = o4, o4 = wA2 + (G4 = h3) | 0, o4 = d4 + ((Z2 = w4 + gA2 | 0) >>> 0 < gA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = (d4 = r4 + Z2 | 0) >>> 0 < r4 >>> 0 ? o4 + 1 | 0 : o4, r4 = u4, u4 = o4, r4 = DA(f4 ^ d4, r4 ^ o4, 48), o4 = (o4 = T2) + (T2 = h3) | 0, f4 = w4 ^ (k4 = r4 + k4 | 0), w4 = o4 = k4 >>> 0 < r4 >>> 0 ? o4 + 1 | 0 : o4, Z2 = o4 = DA(f4, o4 ^ G4, 1), CA2 = o4, P4 = f4 = h3, G4 = e4, AA2 = t4, e4 = D4, D4 = DA(F4 ^ U4, O2 ^ W2, 48), o4 = N4 + (U4 = h3) | 0, F4 = f4 = D4 + _4 | 0, _4 = o4 = f4 >>> 0 < _4 >>> 0 ? o4 + 1 | 0 : o4, e4 = DA(f4 ^ e4, o4 ^ J4, 1), o4 = (O2 = h3) + MA2 | 0, o4 = m4 + ((f4 = e4 + cA2 | 0) >>> 0 < e4 >>> 0 ? o4 + 1 | 0 : o4) | 0, n4 = o4 = (t4 = f4 + n4 | 0) >>> 0 < n4 >>> 0 ? o4 + 1 | 0 : o4, f4 = DA(t4 ^ y4, o4 ^ z4, 32), o4 = (J4 = h3) + AA2 | 0, G4 = y4 = f4 + G4 | 0, N4 = o4 = y4 >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4, e4 = DA(e4 ^ y4, o4 ^ O2, 40), o4 = nA2 + (hA2 = h3) | 0, O2 = e4, o4 = n4 + ((e4 = EA2 + e4 | 0) >>> 0 < EA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, t4 = o4 = (e4 = e4 + t4 | 0) >>> 0 < t4 >>> 0 ? o4 + 1 | 0 : o4, y4 = DA(f4 ^ e4, o4 ^ J4, 48), o4 = (o4 = N4) + (N4 = h3) | 0, z4 = f4 = y4 + G4 | 0, J4 = f4, m4 = o4 = f4 >>> 0 < y4 >>> 0 ? o4 + 1 | 0 : o4, o4 = M4 + SA2 | 0, G4 = (f4 = s4 + L4 | 0) ^ c4, c4 = o4 = f4 >>> 0 < s4 >>> 0 ? o4 + 1 | 0 : o4, o4 = DA(G4, o4 ^ x4, 1), x4 = n4 = h3, G4 = o4, o4 = b4 + eA2 | 0, o4 = ((s4 = p4 + q4 | 0) >>> 0 < q4 >>> 0 ? o4 + 1 | 0 : o4) + n4 | 0, M4 = o4 = (M4 = s4) >>> 0 > (s4 = s4 + G4 | 0) >>> 0 ? o4 + 1 | 0 : o4, L4 = n4 = DA(s4 ^ v4, IA2 ^ o4, 32), p4 = o4 = h3, o4 = o4 + _4 | 0, b4 = n4 = n4 + F4 | 0, v4 = o4 = L4 >>> 0 > n4 >>> 0 ? o4 + 1 | 0 : o4, n4 = DA(n4 ^ G4, x4 ^ o4, 40), o4 = yA2 + (x4 = h3) | 0, o4 = M4 + ((F4 = n4 + rA2 | 0) >>> 0 < rA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, F4 = o4 = (G4 = s4) >>> 0 > (s4 = s4 + F4 | 0) >>> 0 ? o4 + 1 | 0 : o4, G4 = DA(s4 ^ L4, o4 ^ p4, 48), IA2 = o4 = h3, _4 = o4, S4 = DA(S4 ^ K4, R4 ^ $2, 1), M4 = o4 = h3, L4 = D4, o4 = o4 + l4 | 0, o4 = Y4 + ((D4 = S4 + aA2 | 0) >>> 0 < aA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = (D4 = D4 + H4 | 0) >>> 0 < H4 >>> 0 ? o4 + 1 | 0 : o4, H4 = D4 ^ L4, L4 = o4, H4 = DA(H4, o4 ^ U4, 32), o4 = ($2 = h3) + c4 | 0, Y4 = f4 = H4 + f4 | 0, c4 = DA(f4 ^ S4, (c4 = M4) ^ (M4 = f4 >>> 0 < H4 >>> 0 ? o4 + 1 | 0 : o4), 40), o4 = kA2 + (p4 = h3) | 0, o4 = L4 + ((f4 = c4 + oA2 | 0) >>> 0 < oA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, L4 = f4 = f4 + D4 | 0, U4 = o4 = f4 >>> 0 < D4 >>> 0 ? o4 + 1 | 0 : o4, D4 = o4, o4 = P4 + _A2 | 0, o4 = ((S4 = Z2 + iA2 | 0) >>> 0 < iA2 >>> 0 ? o4 + 1 | 0 : o4) + D4 | 0, Z2 = o4 = (D4 = f4 + S4 | 0) >>> 0 < S4 >>> 0 ? o4 + 1 | 0 : o4, f4 = DA(D4 ^ G4, o4 ^ _4, 32), o4 = (K4 = h3) + m4 | 0, _4 = DA((S4 = f4 + J4 | 0) ^ CA2, (o4 = S4 >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4) ^ P4, 40), R4 = J4 = h3, P4 = o4, o4 = J4 + HA2 | 0, o4 = Z2 + ((J4 = _4 + tA2 | 0) >>> 0 < tA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, Z2 = o4 = (J4 = D4 + J4 | 0) >>> 0 < D4 >>> 0 ? o4 + 1 | 0 : o4, D4 = DA(f4 ^ J4, o4 ^ K4, 48), o4 = (K4 = h3) + P4 | 0, f4 = (S4 = D4 + S4 | 0) ^ _4, _4 = o4 = S4 >>> 0 < D4 >>> 0 ? o4 + 1 | 0 : o4, R4 = o4 = DA(f4, o4 ^ R4, 1), P4 = f4 = h3, AA2 = k4, W2 = y4, y4 = c4, c4 = DA(H4 ^ L4, U4 ^ $2, 48), o4 = (H4 = h3) + M4 | 0, M4 = f4 = c4 + Y4 | 0, L4 = o4 = f4 >>> 0 < c4 >>> 0 ? o4 + 1 | 0 : o4, y4 = DA(f4 ^ y4, o4 ^ p4, 1), o4 = (p4 = h3) + GA2 | 0, o4 = ((f4 = y4 + QA2 | 0) >>> 0 < y4 >>> 0 ? o4 + 1 | 0 : o4) + F4 | 0, s4 = o4 = (k4 = f4 + s4 | 0) >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4, f4 = DA(k4 ^ W2, o4 ^ N4, 32), o4 = (F4 = h3) + w4 | 0, Y4 = w4 = f4 + AA2 | 0, N4 = o4 = w4 >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4, y4 = DA(y4 ^ w4, o4 ^ p4, 40), o4 = C4 + (W2 = h3) | 0, p4 = y4, o4 = s4 + ((y4 = sA2 + y4 | 0) >>> 0 < sA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, U4 = o4 = (w4 = y4 + k4 | 0) >>> 0 < k4 >>> 0 ? o4 + 1 | 0 : o4, y4 = DA(f4 ^ w4, o4 ^ F4, 48), o4 = (o4 = N4) + (N4 = h3) | 0, Y4 = f4 = y4 + Y4 | 0, AA2 = o4 = f4 >>> 0 < y4 >>> 0 ? o4 + 1 | 0 : o4, s4 = r4, k4 = e4, o4 = v4 + IA2 | 0, r4 = o4 = (f4 = G4 + b4 | 0) >>> 0 < G4 >>> 0 ? o4 + 1 | 0 : o4, e4 = DA(f4 ^ n4, o4 ^ x4, 1), o4 = (n4 = h3) + BA2 | 0, o4 = ((F4 = e4 + X3 | 0) >>> 0 < e4 >>> 0 ? o4 + 1 | 0 : o4) + t4 | 0, t4 = DA(s4 ^ (k4 = k4 + F4 | 0), (o4 = k4 >>> 0 < F4 >>> 0 ? o4 + 1 | 0 : o4) ^ T2, 32), F4 = o4, G4 = e4, o4 = (s4 = h3) + L4 | 0, o4 = (e4 = t4 + M4 | 0) >>> 0 < t4 >>> 0 ? o4 + 1 | 0 : o4, M4 = e4, e4 ^= G4, G4 = o4, e4 = DA(e4, o4 ^ n4, 40), o4 = B4 + (L4 = h3) | 0, o4 = ((n4 = e4 + g6 | 0) >>> 0 < g6 >>> 0 ? o4 + 1 | 0 : o4) + F4 | 0, b4 = o4 = (F4 = n4) >>> 0 > (n4 = n4 + k4 | 0) >>> 0 ? o4 + 1 | 0 : o4, s4 = DA(t4 ^ n4, o4 ^ s4, 48), IA2 = o4 = h3, k4 = o4, t4 = DA(z4 ^ O2, m4 ^ hA2, 1), v4 = o4 = h3, O2 = r4, o4 = o4 + FA2 | 0, o4 = u4 + ((r4 = t4 + V2 | 0) >>> 0 < V2 >>> 0 ? o4 + 1 | 0 : o4) | 0, F4 = H4, H4 = o4 = (r4 = r4 + d4 | 0) >>> 0 < d4 >>> 0 ? o4 + 1 | 0 : o4, F4 = DA(c4 ^ r4, F4 ^ o4, 32), o4 = ($2 = h3) + O2 | 0, d4 = f4 = F4 + f4 | 0, c4 = DA(f4 ^ t4, (c4 = v4) ^ (v4 = f4 >>> 0 < F4 >>> 0 ? o4 + 1 | 0 : o4), 40), o4 = pA2 + (O2 = h3) | 0, o4 = H4 + ((f4 = c4 + fA2 | 0) >>> 0 < fA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, u4 = f4 = f4 + r4 | 0, z4 = o4 = f4 >>> 0 < r4 >>> 0 ? o4 + 1 | 0 : o4, r4 = o4, o4 = P4 + eA2 | 0, o4 = ((t4 = q4 + R4 | 0) >>> 0 < q4 >>> 0 ? o4 + 1 | 0 : o4) + r4 | 0, H4 = o4 = (r4 = f4 + t4 | 0) >>> 0 < t4 >>> 0 ? o4 + 1 | 0 : o4, f4 = DA(r4 ^ s4, o4 ^ k4, 32), o4 = (T2 = h3) + AA2 | 0, k4 = DA((t4 = f4 + Y4 | 0) ^ R4, (o4 = t4 >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4) ^ P4, 40), R4 = o4, o4 = l4 + (x4 = h3) | 0, o4 = H4 + ((m4 = k4 + aA2 | 0) >>> 0 < aA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = (H4 = r4 + m4 | 0) >>> 0 < r4 >>> 0 ? o4 + 1 | 0 : o4, r4 = T2, T2 = o4, r4 = DA(f4 ^ H4, r4 ^ o4, 48), o4 = (o4 = R4) + (R4 = h3) | 0, f4 = (t4 = r4 + t4 | 0) ^ k4, k4 = o4 = t4 >>> 0 < r4 >>> 0 ? o4 + 1 | 0 : o4, x4 = o4 = DA(f4, o4 ^ x4, 1), m4 = f4 = h3, P4 = y4, y4 = c4, c4 = DA(F4 ^ u4, z4 ^ $2, 48), o4 = (o4 = v4) + (v4 = h3) | 0, d4 = f4 = c4 + d4 | 0, F4 = O2, O2 = o4 = f4 >>> 0 < c4 >>> 0 ? o4 + 1 | 0 : o4, y4 = DA(f4 ^ y4, F4 ^ o4, 1), o4 = (u4 = h3) + HA2 | 0, o4 = b4 + ((f4 = y4 + tA2 | 0) >>> 0 < y4 >>> 0 ? o4 + 1 | 0 : o4) | 0, F4 = n4, n4 = f4 + n4 | 0, f4 = N4, N4 = o4 = F4 >>> 0 > n4 >>> 0 ? o4 + 1 | 0 : o4, f4 = DA(n4 ^ P4, f4 ^ o4, 32), o4 = (o4 = _4) + (_4 = h3) | 0, b4 = o4 = (F4 = f4 + S4 | 0) >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4, S4 = F4, y4 = DA(y4 ^ F4, o4 ^ u4, 40), o4 = FA2 + ($2 = h3) | 0, u4 = y4, o4 = N4 + ((y4 = V2 + y4 | 0) >>> 0 < V2 >>> 0 ? o4 + 1 | 0 : o4) | 0, N4 = o4 = (F4 = y4 + n4 | 0) >>> 0 < n4 >>> 0 ? o4 + 1 | 0 : o4, y4 = DA(f4 ^ F4, o4 ^ _4, 48), o4 = (o4 = b4) + (b4 = h3) | 0, z4 = f4 = y4 + S4 | 0, P4 = o4 = f4 >>> 0 < y4 >>> 0 ? o4 + 1 | 0 : o4, S4 = D4, o4 = G4 + IA2 | 0, D4 = o4 = (f4 = s4 + M4 | 0) >>> 0 < s4 >>> 0 ? o4 + 1 | 0 : o4, e4 = DA(f4 ^ e4, o4 ^ L4, 1), o4 = wA2 + (s4 = h3) | 0, o4 = U4 + ((n4 = e4 + gA2 | 0) >>> 0 < gA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, G4 = (n4 = w4 + n4 | 0) ^ S4, S4 = o4 = n4 >>> 0 < w4 >>> 0 ? o4 + 1 | 0 : o4, w4 = DA(G4, o4 ^ K4, 32), _4 = o4 = h3, G4 = e4, o4 = o4 + O2 | 0, o4 = (e4 = w4 + d4 | 0) >>> 0 < w4 >>> 0 ? o4 + 1 | 0 : o4, M4 = e4, e4 ^= G4, G4 = o4, e4 = DA(e4, o4 ^ s4, 40), o4 = B4 + (L4 = h3) | 0, o4 = S4 + ((s4 = e4 + g6 | 0) >>> 0 < g6 >>> 0 ? o4 + 1 | 0 : o4) | 0, U4 = o4 = (s4 = n4 + s4 | 0) >>> 0 < n4 >>> 0 ? o4 + 1 | 0 : o4, S4 = DA(w4 ^ s4, o4 ^ _4, 48), IA2 = o4 = h3, n4 = o4, w4 = DA(p4 ^ Y4, W2 ^ AA2, 1), d4 = o4 = h3, Y4 = D4, o4 = o4 + C4 | 0, o4 = Z2 + ((D4 = w4 + sA2 | 0) >>> 0 < sA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, J4 = o4 = (D4 = D4 + J4 | 0) >>> 0 < J4 >>> 0 ? o4 + 1 | 0 : o4, _4 = DA(c4 ^ D4, o4 ^ v4, 32), o4 = (CA2 = h3) + Y4 | 0, Y4 = f4 = _4 + f4 | 0, c4 = DA(f4 ^ w4, (p4 = f4 >>> 0 < _4 >>> 0 ? o4 + 1 | 0 : o4) ^ d4, 40), o4 = j3 + (v4 = h3) | 0, o4 = J4 + ((f4 = I7 + c4 | 0) >>> 0 < I7 >>> 0 ? o4 + 1 | 0 : o4) | 0, J4 = f4 = f4 + D4 | 0, O2 = o4 = f4 >>> 0 < D4 >>> 0 ? o4 + 1 | 0 : o4, D4 = o4, o4 = m4 + kA2 | 0, o4 = ((w4 = x4 + oA2 | 0) >>> 0 < oA2 >>> 0 ? o4 + 1 | 0 : o4) + D4 | 0, d4 = o4 = (D4 = f4 + w4 | 0) >>> 0 < w4 >>> 0 ? o4 + 1 | 0 : o4, f4 = DA(D4 ^ S4, o4 ^ n4, 32), o4 = (Z2 = h3) + P4 | 0, n4 = DA((w4 = f4 + z4 | 0) ^ x4, (o4 = w4 >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4) ^ m4, 40), K4 = o4, o4 = MA2 + (x4 = h3) | 0, o4 = d4 + ((m4 = n4 + cA2 | 0) >>> 0 < cA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = (d4 = D4 + m4 | 0) >>> 0 < D4 >>> 0 ? o4 + 1 | 0 : o4, D4 = Z2, Z2 = o4, D4 = DA(f4 ^ d4, D4 ^ o4, 48), o4 = (o4 = K4) + (K4 = h3) | 0, f4 = (w4 = D4 + w4 | 0) ^ n4, n4 = o4 = w4 >>> 0 < D4 >>> 0 ? o4 + 1 | 0 : o4, x4 = o4 = DA(f4, o4 ^ x4, 1), hA2 = o4, m4 = f4 = h3, AA2 = t4, W2 = y4, t4 = c4, c4 = DA(_4 ^ J4, O2 ^ CA2, 48), o4 = (_4 = h3) + p4 | 0, J4 = f4 = c4 + Y4 | 0, Y4 = o4 = f4 >>> 0 < c4 >>> 0 ? o4 + 1 | 0 : o4, t4 = DA(f4 ^ t4, o4 ^ v4, 1), o4 = (v4 = h3) + yA2 | 0, o4 = U4 + ((f4 = t4 + rA2 | 0) >>> 0 < t4 >>> 0 ? o4 + 1 | 0 : o4) | 0, s4 = o4 = (y4 = f4 + s4 | 0) >>> 0 < s4 >>> 0 ? o4 + 1 | 0 : o4, f4 = DA(y4 ^ W2, o4 ^ b4, 32), o4 = (p4 = h3) + k4 | 0, b4 = o4 = (k4 = f4 + AA2 | 0) >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4, t4 = DA(t4 ^ k4, o4 ^ v4, 40), o4 = GA2 + (CA2 = h3) | 0, U4 = t4, o4 = s4 + ((t4 = QA2 + t4 | 0) >>> 0 < QA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, s4 = t4 + y4 | 0, t4 = p4, p4 = o4 = s4 >>> 0 < y4 >>> 0 ? o4 + 1 | 0 : o4, t4 = DA(f4 ^ s4, t4 ^ o4, 48), o4 = (o4 = b4) + (b4 = h3) | 0, v4 = f4 = t4 + k4 | 0, O2 = o4 = f4 >>> 0 < t4 >>> 0 ? o4 + 1 | 0 : o4, y4 = r4, o4 = G4 + IA2 | 0, r4 = o4 = (f4 = S4 + M4 | 0) >>> 0 < S4 >>> 0 ? o4 + 1 | 0 : o4, e4 = DA(f4 ^ e4, o4 ^ L4, 1), o4 = (S4 = h3) + pA2 | 0, o4 = N4 + ((k4 = e4 + fA2 | 0) >>> 0 < e4 >>> 0 ? o4 + 1 | 0 : o4) | 0, y4 = DA(y4 ^ (k4 = k4 + F4 | 0), (o4 = k4 >>> 0 < F4 >>> 0 ? o4 + 1 | 0 : o4) ^ R4, 32), G4 = F4 = h3, F4 = o4, M4 = e4, o4 = G4 + Y4 | 0, o4 = (e4 = y4 + J4 | 0) >>> 0 < y4 >>> 0 ? o4 + 1 | 0 : o4, J4 = e4, e4 ^= M4, M4 = o4, e4 = DA(e4, o4 ^ S4, 40), o4 = nA2 + (L4 = h3) | 0, o4 = ((S4 = e4 + EA2 | 0) >>> 0 < EA2 >>> 0 ? o4 + 1 | 0 : o4) + F4 | 0, N4 = G4, G4 = o4 = (F4 = k4 + S4 | 0) >>> 0 < S4 >>> 0 ? o4 + 1 | 0 : o4, S4 = DA(y4 ^ F4, N4 ^ o4, 48), IA2 = o4 = h3, k4 = o4, y4 = DA(z4 ^ u4, P4 ^ $2, 1), Y4 = o4 = h3, N4 = r4, o4 = o4 + BA2 | 0, o4 = T2 + ((r4 = y4 + X3 | 0) >>> 0 < X3 >>> 0 ? o4 + 1 | 0 : o4) | 0, H4 = o4 = (r4 = r4 + H4 | 0) >>> 0 < H4 >>> 0 ? o4 + 1 | 0 : o4, _4 = DA(c4 ^ r4, o4 ^ _4, 32), o4 = ($2 = h3) + N4 | 0, N4 = f4 = _4 + f4 | 0, c4 = DA(f4 ^ y4, (c4 = Y4) ^ (Y4 = f4 >>> 0 < _4 >>> 0 ? o4 + 1 | 0 : o4), 40), o4 = _A2 + (u4 = h3) | 0, o4 = H4 + ((f4 = c4 + iA2 | 0) >>> 0 < iA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, z4 = f4 = f4 + r4 | 0, T2 = o4 = f4 >>> 0 < r4 >>> 0 ? o4 + 1 | 0 : o4, r4 = o4, o4 = m4 + B4 | 0, o4 = ((y4 = x4 + g6 | 0) >>> 0 < g6 >>> 0 ? o4 + 1 | 0 : o4) + r4 | 0, H4 = o4 = (r4 = f4 + y4 | 0) >>> 0 < y4 >>> 0 ? o4 + 1 | 0 : o4, f4 = DA(r4 ^ S4, o4 ^ k4, 32), o4 = (x4 = h3) + O2 | 0, k4 = DA((y4 = f4 + v4 | 0) ^ hA2, (o4 = y4 >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4) ^ m4, 40), m4 = o4, o4 = HA2 + (R4 = h3) | 0, o4 = H4 + ((P4 = k4 + tA2 | 0) >>> 0 < tA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = (H4 = r4 + P4 | 0) >>> 0 < r4 >>> 0 ? o4 + 1 | 0 : o4, r4 = x4, x4 = o4, r4 = DA(f4 ^ H4, r4 ^ o4, 48), o4 = (o4 = m4) + (m4 = h3) | 0, f4 = (y4 = r4 + y4 | 0) ^ k4, k4 = o4 = y4 >>> 0 < r4 >>> 0 ? o4 + 1 | 0 : o4, R4 = o4 = DA(f4, o4 ^ R4, 1), P4 = f4 = h3, AA2 = w4, W2 = t4, t4 = c4, c4 = DA(_4 ^ z4, T2 ^ $2, 48), o4 = (_4 = h3) + Y4 | 0, Y4 = f4 = c4 + N4 | 0, N4 = o4 = f4 >>> 0 < c4 >>> 0 ? o4 + 1 | 0 : o4, t4 = DA(f4 ^ t4, o4 ^ u4, 1), o4 = (u4 = h3) + GA2 | 0, o4 = G4 + ((f4 = t4 + QA2 | 0) >>> 0 < t4 >>> 0 ? o4 + 1 | 0 : o4) | 0, F4 = o4 = (w4 = f4 + F4 | 0) >>> 0 < F4 >>> 0 ? o4 + 1 | 0 : o4, f4 = DA(w4 ^ W2, o4 ^ b4, 32), o4 = (G4 = h3) + n4 | 0, b4 = o4 = (n4 = f4 + AA2 | 0) >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4, t4 = DA(t4 ^ n4, o4 ^ u4, 40), o4 = BA2 + ($2 = h3) | 0, u4 = t4, o4 = F4 + ((t4 = X3 + t4 | 0) >>> 0 < X3 >>> 0 ? o4 + 1 | 0 : o4) | 0, F4 = t4 + w4 | 0, t4 = G4, G4 = o4 = F4 >>> 0 < w4 >>> 0 ? o4 + 1 | 0 : o4, t4 = DA(f4 ^ F4, t4 ^ o4, 48), o4 = (o4 = b4) + (b4 = h3) | 0, z4 = f4 = t4 + n4 | 0, T2 = o4 = f4 >>> 0 < t4 >>> 0 ? o4 + 1 | 0 : o4, w4 = D4, o4 = M4 + IA2 | 0, D4 = o4 = (f4 = S4 + J4 | 0) >>> 0 < S4 >>> 0 ? o4 + 1 | 0 : o4, e4 = DA(f4 ^ e4, o4 ^ L4, 1), o4 = _A2 + (S4 = h3) | 0, o4 = p4 + ((n4 = e4 + iA2 | 0) >>> 0 < iA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, s4 = o4 = (n4 = n4 + s4 | 0) >>> 0 < s4 >>> 0 ? o4 + 1 | 0 : o4, w4 = DA(w4 ^ n4, o4 ^ K4, 32), J4 = o4 = h3, M4 = e4, o4 = o4 + N4 | 0, o4 = (e4 = w4 + Y4 | 0) >>> 0 < w4 >>> 0 ? o4 + 1 | 0 : o4, L4 = e4, e4 ^= M4, M4 = o4, e4 = DA(e4, o4 ^ S4, 40), o4 = kA2 + (Y4 = h3) | 0, o4 = s4 + ((S4 = e4 + oA2 | 0) >>> 0 < oA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = (s4 = n4 + S4 | 0) >>> 0 < n4 >>> 0 ? o4 + 1 | 0 : o4, n4 = J4, J4 = o4, S4 = DA(w4 ^ s4, n4 ^ o4, 48), IA2 = o4 = h3, n4 = o4, w4 = DA(U4 ^ v4, O2 ^ CA2, 1), N4 = o4 = h3, p4 = D4, o4 = o4 + j3 | 0, o4 = Z2 + ((D4 = I7 + w4 | 0) >>> 0 < I7 >>> 0 ? o4 + 1 | 0 : o4) | 0, d4 = o4 = (D4 = D4 + d4 | 0) >>> 0 < d4 >>> 0 ? o4 + 1 | 0 : o4, _4 = DA(c4 ^ D4, o4 ^ _4, 32), o4 = (CA2 = h3) + p4 | 0, p4 = f4 = _4 + f4 | 0, c4 = DA(f4 ^ w4, (c4 = N4) ^ (N4 = f4 >>> 0 < _4 >>> 0 ? o4 + 1 | 0 : o4), 40), o4 = FA2 + (U4 = h3) | 0, o4 = d4 + ((f4 = c4 + V2 | 0) >>> 0 < V2 >>> 0 ? o4 + 1 | 0 : o4) | 0, v4 = f4 = f4 + D4 | 0, O2 = o4 = f4 >>> 0 < D4 >>> 0 ? o4 + 1 | 0 : o4, D4 = o4, o4 = P4 + wA2 | 0, o4 = ((w4 = R4 + gA2 | 0) >>> 0 < gA2 >>> 0 ? o4 + 1 | 0 : o4) + D4 | 0, d4 = o4 = (D4 = f4 + w4 | 0) >>> 0 < w4 >>> 0 ? o4 + 1 | 0 : o4, f4 = DA(D4 ^ S4, o4 ^ n4, 32), o4 = (Z2 = h3) + T2 | 0, n4 = DA((w4 = f4 + z4 | 0) ^ R4, (o4 = w4 >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4) ^ P4, 40), R4 = o4, o4 = C4 + (K4 = h3) | 0, o4 = d4 + ((P4 = n4 + sA2 | 0) >>> 0 < sA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = (d4 = D4 + P4 | 0) >>> 0 < D4 >>> 0 ? o4 + 1 | 0 : o4, D4 = Z2, Z2 = o4, D4 = DA(f4 ^ d4, D4 ^ o4, 48), o4 = (o4 = R4) + (R4 = h3) | 0, f4 = (w4 = D4 + w4 | 0) ^ n4, n4 = o4 = w4 >>> 0 < D4 >>> 0 ? o4 + 1 | 0 : o4, K4 = o4 = DA(f4, o4 ^ K4, 1), P4 = f4 = h3, AA2 = y4, W2 = t4, t4 = c4, c4 = DA(_4 ^ v4, O2 ^ CA2, 48), o4 = (_4 = h3) + N4 | 0, N4 = f4 = c4 + p4 | 0, p4 = o4 = f4 >>> 0 < c4 >>> 0 ? o4 + 1 | 0 : o4, t4 = DA(f4 ^ t4, o4 ^ U4, 1), o4 = (U4 = h3) + eA2 | 0, o4 = J4 + ((f4 = t4 + q4 | 0) >>> 0 < t4 >>> 0 ? o4 + 1 | 0 : o4) | 0, s4 = o4 = (y4 = f4 + s4 | 0) >>> 0 < s4 >>> 0 ? o4 + 1 | 0 : o4, f4 = DA(y4 ^ W2, o4 ^ b4, 32), o4 = (J4 = h3) + k4 | 0, b4 = o4 = (k4 = f4 + AA2 | 0) >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4, t4 = DA(t4 ^ k4, o4 ^ U4, 40), o4 = pA2 + (CA2 = h3) | 0, U4 = t4, o4 = s4 + ((t4 = fA2 + t4 | 0) >>> 0 < fA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, s4 = t4 + y4 | 0, t4 = J4, J4 = o4 = s4 >>> 0 < y4 >>> 0 ? o4 + 1 | 0 : o4, t4 = DA(f4 ^ s4, t4 ^ o4, 48), o4 = (o4 = b4) + (b4 = h3) | 0, v4 = f4 = t4 + k4 | 0, O2 = o4 = f4 >>> 0 < t4 >>> 0 ? o4 + 1 | 0 : o4, y4 = r4, o4 = M4 + IA2 | 0, r4 = o4 = (f4 = S4 + L4 | 0) >>> 0 < S4 >>> 0 ? o4 + 1 | 0 : o4, e4 = DA(f4 ^ e4, o4 ^ Y4, 1), o4 = (S4 = h3) + nA2 | 0, o4 = G4 + ((k4 = e4 + EA2 | 0) >>> 0 < e4 >>> 0 ? o4 + 1 | 0 : o4) | 0, F4 = o4 = (k4 = k4 + F4 | 0) >>> 0 < F4 >>> 0 ? o4 + 1 | 0 : o4, y4 = DA(y4 ^ k4, o4 ^ m4, 32), G4 = o4 = h3, M4 = e4, o4 = o4 + p4 | 0, o4 = (e4 = y4 + N4 | 0) >>> 0 < y4 >>> 0 ? o4 + 1 | 0 : o4, L4 = e4, e4 ^= M4, M4 = o4, e4 = DA(e4, o4 ^ S4, 40), o4 = yA2 + (Y4 = h3) | 0, o4 = F4 + ((S4 = e4 + rA2 | 0) >>> 0 < rA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, N4 = G4, G4 = o4 = (F4 = k4 + S4 | 0) >>> 0 < k4 >>> 0 ? o4 + 1 | 0 : o4, S4 = DA(y4 ^ F4, N4 ^ o4, 48), IA2 = o4 = h3, k4 = o4, y4 = DA(z4 ^ u4, T2 ^ $2, 1), N4 = o4 = h3, p4 = r4, o4 = o4 + l4 | 0, o4 = x4 + ((r4 = y4 + aA2 | 0) >>> 0 < aA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, H4 = o4 = (r4 = r4 + H4 | 0) >>> 0 < H4 >>> 0 ? o4 + 1 | 0 : o4, _4 = DA(c4 ^ r4, o4 ^ _4, 32), o4 = ($2 = h3) + p4 | 0, p4 = f4 = _4 + f4 | 0, c4 = DA(f4 ^ y4, (c4 = N4) ^ (N4 = f4 >>> 0 < _4 >>> 0 ? o4 + 1 | 0 : o4), 40), o4 = MA2 + (u4 = h3) | 0, o4 = H4 + ((f4 = c4 + cA2 | 0) >>> 0 < cA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, z4 = f4 = f4 + r4 | 0, T2 = o4 = f4 >>> 0 < r4 >>> 0 ? o4 + 1 | 0 : o4, r4 = o4, o4 = P4 + C4 | 0, o4 = ((y4 = K4 + sA2 | 0) >>> 0 < sA2 >>> 0 ? o4 + 1 | 0 : o4) + r4 | 0, H4 = o4 = (r4 = f4 + y4 | 0) >>> 0 < y4 >>> 0 ? o4 + 1 | 0 : o4, f4 = DA(r4 ^ S4, o4 ^ k4, 32), o4 = (x4 = h3) + O2 | 0, k4 = DA((y4 = f4 + v4 | 0) ^ K4, (o4 = y4 >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4) ^ P4, 40), m4 = o4, o4 = _A2 + (K4 = h3) | 0, o4 = H4 + ((P4 = k4 + iA2 | 0) >>> 0 < iA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = (H4 = r4 + P4 | 0) >>> 0 < r4 >>> 0 ? o4 + 1 | 0 : o4, r4 = x4, x4 = o4, r4 = DA(f4 ^ H4, r4 ^ o4, 48), o4 = (o4 = m4) + (m4 = h3) | 0, f4 = (y4 = r4 + y4 | 0) ^ k4, k4 = o4 = y4 >>> 0 < r4 >>> 0 ? o4 + 1 | 0 : o4, K4 = o4 = DA(f4, o4 ^ K4, 1), P4 = f4 = h3, AA2 = w4, W2 = t4, t4 = c4, c4 = DA(_4 ^ z4, T2 ^ $2, 48), o4 = (_4 = h3) + N4 | 0, N4 = f4 = c4 + p4 | 0, p4 = o4 = f4 >>> 0 < c4 >>> 0 ? o4 + 1 | 0 : o4, t4 = DA(f4 ^ t4, o4 ^ u4, 1), o4 = (u4 = h3) + l4 | 0, o4 = G4 + ((f4 = t4 + aA2 | 0) >>> 0 < t4 >>> 0 ? o4 + 1 | 0 : o4) | 0, F4 = o4 = (w4 = f4 + F4 | 0) >>> 0 < F4 >>> 0 ? o4 + 1 | 0 : o4, f4 = DA(w4 ^ W2, o4 ^ b4, 32), o4 = (G4 = h3) + n4 | 0, b4 = o4 = (n4 = f4 + AA2 | 0) >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4, t4 = DA(t4 ^ n4, o4 ^ u4, 40), o4 = yA2 + ($2 = h3) | 0, u4 = t4, o4 = F4 + ((t4 = rA2 + t4 | 0) >>> 0 < rA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, F4 = t4 + w4 | 0, t4 = G4, G4 = o4 = F4 >>> 0 < w4 >>> 0 ? o4 + 1 | 0 : o4, t4 = DA(f4 ^ F4, t4 ^ o4, 48), o4 = (o4 = b4) + (b4 = h3) | 0, z4 = f4 = t4 + n4 | 0, T2 = o4 = f4 >>> 0 < t4 >>> 0 ? o4 + 1 | 0 : o4, w4 = D4, o4 = M4 + IA2 | 0, D4 = o4 = (f4 = S4 + L4 | 0) >>> 0 < S4 >>> 0 ? o4 + 1 | 0 : o4, e4 = DA(f4 ^ e4, o4 ^ Y4, 1), o4 = nA2 + (S4 = h3) | 0, o4 = J4 + ((n4 = e4 + EA2 | 0) >>> 0 < EA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, s4 = o4 = (n4 = n4 + s4 | 0) >>> 0 < s4 >>> 0 ? o4 + 1 | 0 : o4, w4 = DA(w4 ^ n4, o4 ^ R4, 32), J4 = o4 = h3, M4 = e4, o4 = o4 + p4 | 0, o4 = (e4 = w4 + N4 | 0) >>> 0 < w4 >>> 0 ? o4 + 1 | 0 : o4, L4 = e4, e4 ^= M4, M4 = o4, e4 = DA(e4, o4 ^ S4, 40), o4 = pA2 + (Y4 = h3) | 0, o4 = s4 + ((S4 = e4 + fA2 | 0) >>> 0 < fA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = (s4 = n4 + S4 | 0) >>> 0 < n4 >>> 0 ? o4 + 1 | 0 : o4, n4 = J4, J4 = o4, S4 = DA(w4 ^ s4, n4 ^ o4, 48), IA2 = o4 = h3, n4 = o4, w4 = DA(U4 ^ v4, O2 ^ CA2, 1), N4 = o4 = h3, p4 = D4, o4 = o4 + BA2 | 0, o4 = Z2 + ((D4 = w4 + X3 | 0) >>> 0 < X3 >>> 0 ? o4 + 1 | 0 : o4) | 0, d4 = o4 = (D4 = D4 + d4 | 0) >>> 0 < d4 >>> 0 ? o4 + 1 | 0 : o4, _4 = DA(c4 ^ D4, o4 ^ _4, 32), o4 = (CA2 = h3) + p4 | 0, p4 = f4 = _4 + f4 | 0, c4 = DA(f4 ^ w4, (c4 = N4) ^ (N4 = f4 >>> 0 < _4 >>> 0 ? o4 + 1 | 0 : o4), 40), o4 = MA2 + (U4 = h3) | 0, o4 = d4 + ((f4 = c4 + cA2 | 0) >>> 0 < cA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, v4 = f4 = f4 + D4 | 0, O2 = o4 = f4 >>> 0 < D4 >>> 0 ? o4 + 1 | 0 : o4, D4 = o4, o4 = P4 + FA2 | 0, o4 = ((w4 = K4 + V2 | 0) >>> 0 < V2 >>> 0 ? o4 + 1 | 0 : o4) + D4 | 0, d4 = o4 = (D4 = f4 + w4 | 0) >>> 0 < w4 >>> 0 ? o4 + 1 | 0 : o4, f4 = DA(D4 ^ S4, o4 ^ n4, 32), o4 = (Z2 = h3) + T2 | 0, n4 = DA((w4 = f4 + z4 | 0) ^ K4, (o4 = w4 >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4) ^ P4, 40), R4 = o4, o4 = j3 + (K4 = h3) | 0, o4 = d4 + ((P4 = I7 + n4 | 0) >>> 0 < I7 >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = (d4 = D4 + P4 | 0) >>> 0 < D4 >>> 0 ? o4 + 1 | 0 : o4, D4 = Z2, Z2 = o4, D4 = DA(f4 ^ d4, D4 ^ o4, 48), o4 = (o4 = R4) + (R4 = h3) | 0, f4 = (w4 = D4 + w4 | 0) ^ n4, n4 = o4 = w4 >>> 0 < D4 >>> 0 ? o4 + 1 | 0 : o4, K4 = o4 = DA(f4, o4 ^ K4, 1), P4 = f4 = h3, AA2 = y4, W2 = t4, t4 = c4, c4 = DA(_4 ^ v4, O2 ^ CA2, 48), o4 = (_4 = h3) + N4 | 0, N4 = f4 = c4 + p4 | 0, p4 = o4 = f4 >>> 0 < c4 >>> 0 ? o4 + 1 | 0 : o4, t4 = DA(f4 ^ t4, o4 ^ U4, 1), o4 = (U4 = h3) + kA2 | 0, o4 = J4 + ((f4 = t4 + oA2 | 0) >>> 0 < t4 >>> 0 ? o4 + 1 | 0 : o4) | 0, s4 = o4 = (y4 = f4 + s4 | 0) >>> 0 < s4 >>> 0 ? o4 + 1 | 0 : o4, f4 = DA(y4 ^ W2, o4 ^ b4, 32), o4 = (J4 = h3) + k4 | 0, b4 = o4 = (k4 = f4 + AA2 | 0) >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4, t4 = DA(t4 ^ k4, o4 ^ U4, 40), o4 = B4 + (CA2 = h3) | 0, U4 = t4, o4 = s4 + ((t4 = g6 + t4 | 0) >>> 0 < g6 >>> 0 ? o4 + 1 | 0 : o4) | 0, s4 = t4 + y4 | 0, t4 = J4, J4 = o4 = s4 >>> 0 < y4 >>> 0 ? o4 + 1 | 0 : o4, t4 = DA(f4 ^ s4, t4 ^ o4, 48), o4 = (o4 = b4) + (b4 = h3) | 0, v4 = f4 = t4 + k4 | 0, O2 = o4 = f4 >>> 0 < t4 >>> 0 ? o4 + 1 | 0 : o4, y4 = r4, o4 = M4 + IA2 | 0, r4 = o4 = (f4 = S4 + L4 | 0) >>> 0 < S4 >>> 0 ? o4 + 1 | 0 : o4, e4 = DA(f4 ^ e4, o4 ^ Y4, 1), o4 = (S4 = h3) + wA2 | 0, o4 = G4 + ((k4 = e4 + gA2 | 0) >>> 0 < e4 >>> 0 ? o4 + 1 | 0 : o4) | 0, F4 = o4 = (k4 = k4 + F4 | 0) >>> 0 < F4 >>> 0 ? o4 + 1 | 0 : o4, y4 = DA(y4 ^ k4, o4 ^ m4, 32), G4 = o4 = h3, M4 = e4, o4 = o4 + p4 | 0, o4 = (e4 = y4 + N4 | 0) >>> 0 < y4 >>> 0 ? o4 + 1 | 0 : o4, L4 = e4, e4 ^= M4, M4 = o4, e4 = DA(e4, o4 ^ S4, 40), o4 = GA2 + (Y4 = h3) | 0, o4 = F4 + ((S4 = e4 + QA2 | 0) >>> 0 < QA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, N4 = G4, G4 = o4 = (F4 = k4 + S4 | 0) >>> 0 < k4 >>> 0 ? o4 + 1 | 0 : o4, S4 = DA(y4 ^ F4, N4 ^ o4, 48), IA2 = o4 = h3, k4 = o4, y4 = DA(z4 ^ u4, T2 ^ $2, 1), N4 = o4 = h3, p4 = r4, o4 = o4 + HA2 | 0, o4 = x4 + ((r4 = y4 + tA2 | 0) >>> 0 < tA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, H4 = o4 = (r4 = r4 + H4 | 0) >>> 0 < H4 >>> 0 ? o4 + 1 | 0 : o4, _4 = DA(c4 ^ r4, o4 ^ _4, 32), o4 = ($2 = h3) + p4 | 0, p4 = f4 = _4 + f4 | 0, c4 = DA(f4 ^ y4, (c4 = N4) ^ (N4 = f4 >>> 0 < _4 >>> 0 ? o4 + 1 | 0 : o4), 40), o4 = eA2 + (u4 = h3) | 0, o4 = H4 + ((f4 = c4 + q4 | 0) >>> 0 < q4 >>> 0 ? o4 + 1 | 0 : o4) | 0, z4 = f4 = f4 + r4 | 0, T2 = o4 = f4 >>> 0 < r4 >>> 0 ? o4 + 1 | 0 : o4, r4 = o4, o4 = P4 + MA2 | 0, o4 = ((y4 = K4 + cA2 | 0) >>> 0 < cA2 >>> 0 ? o4 + 1 | 0 : o4) + r4 | 0, H4 = o4 = (r4 = f4 + y4 | 0) >>> 0 < y4 >>> 0 ? o4 + 1 | 0 : o4, f4 = DA(r4 ^ S4, o4 ^ k4, 32), o4 = (x4 = h3) + O2 | 0, k4 = DA((y4 = f4 + v4 | 0) ^ K4, (o4 = y4 >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4) ^ P4, 40), m4 = o4, o4 = yA2 + (K4 = h3) | 0, o4 = H4 + ((P4 = k4 + rA2 | 0) >>> 0 < rA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = (H4 = r4 + P4 | 0) >>> 0 < r4 >>> 0 ? o4 + 1 | 0 : o4, r4 = x4, x4 = o4, r4 = DA(f4 ^ H4, r4 ^ o4, 48), o4 = (o4 = m4) + (m4 = h3) | 0, f4 = (y4 = r4 + y4 | 0) ^ k4, k4 = o4 = y4 >>> 0 < r4 >>> 0 ? o4 + 1 | 0 : o4, K4 = o4 = DA(f4, o4 ^ K4, 1), P4 = f4 = h3, AA2 = w4, W2 = t4, t4 = c4, c4 = DA(_4 ^ z4, T2 ^ $2, 48), o4 = (_4 = h3) + N4 | 0, N4 = f4 = c4 + p4 | 0, p4 = o4 = f4 >>> 0 < c4 >>> 0 ? o4 + 1 | 0 : o4, t4 = DA(f4 ^ t4, o4 ^ u4, 1), o4 = (u4 = h3) + _A2 | 0, o4 = G4 + ((f4 = t4 + iA2 | 0) >>> 0 < t4 >>> 0 ? o4 + 1 | 0 : o4) | 0, F4 = o4 = (w4 = f4 + F4 | 0) >>> 0 < F4 >>> 0 ? o4 + 1 | 0 : o4, f4 = DA(w4 ^ W2, o4 ^ b4, 32), o4 = (G4 = h3) + n4 | 0, b4 = o4 = (n4 = f4 + AA2 | 0) >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4, t4 = DA(t4 ^ n4, o4 ^ u4, 40), o4 = C4 + ($2 = h3) | 0, u4 = t4, o4 = F4 + ((t4 = sA2 + t4 | 0) >>> 0 < sA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, F4 = t4 + w4 | 0, t4 = G4, G4 = o4 = F4 >>> 0 < w4 >>> 0 ? o4 + 1 | 0 : o4, t4 = DA(f4 ^ F4, t4 ^ o4, 48), o4 = (o4 = b4) + (b4 = h3) | 0, z4 = f4 = t4 + n4 | 0, T2 = o4 = f4 >>> 0 < t4 >>> 0 ? o4 + 1 | 0 : o4, w4 = D4, o4 = M4 + IA2 | 0, D4 = o4 = (f4 = S4 + L4 | 0) >>> 0 < S4 >>> 0 ? o4 + 1 | 0 : o4, e4 = DA(f4 ^ e4, o4 ^ Y4, 1), o4 = GA2 + (S4 = h3) | 0, o4 = J4 + ((n4 = e4 + QA2 | 0) >>> 0 < QA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, s4 = o4 = (n4 = n4 + s4 | 0) >>> 0 < s4 >>> 0 ? o4 + 1 | 0 : o4, w4 = DA(w4 ^ n4, o4 ^ R4, 32), J4 = o4 = h3, M4 = e4, o4 = o4 + p4 | 0, o4 = (e4 = w4 + N4 | 0) >>> 0 < w4 >>> 0 ? o4 + 1 | 0 : o4, L4 = e4, e4 ^= M4, M4 = o4, e4 = DA(e4, o4 ^ S4, 40), o4 = l4 + (Y4 = h3) | 0, o4 = s4 + ((S4 = e4 + aA2 | 0) >>> 0 < aA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = (s4 = n4 + S4 | 0) >>> 0 < n4 >>> 0 ? o4 + 1 | 0 : o4, n4 = J4, J4 = o4, S4 = DA(w4 ^ s4, n4 ^ o4, 48), IA2 = o4 = h3, n4 = o4, w4 = DA(U4 ^ v4, O2 ^ CA2, 1), N4 = o4 = h3, p4 = D4, o4 = o4 + pA2 | 0, o4 = Z2 + ((D4 = w4 + fA2 | 0) >>> 0 < fA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, d4 = o4 = (D4 = D4 + d4 | 0) >>> 0 < d4 >>> 0 ? o4 + 1 | 0 : o4, _4 = DA(c4 ^ D4, o4 ^ _4, 32), o4 = (CA2 = h3) + p4 | 0, p4 = f4 = _4 + f4 | 0, c4 = DA(f4 ^ w4, (c4 = N4) ^ (N4 = f4 >>> 0 < _4 >>> 0 ? o4 + 1 | 0 : o4), 40), o4 = HA2 + (U4 = h3) | 0, o4 = d4 + ((f4 = c4 + tA2 | 0) >>> 0 < tA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, v4 = f4 = f4 + D4 | 0, O2 = o4 = f4 >>> 0 < D4 >>> 0 ? o4 + 1 | 0 : o4, D4 = o4, o4 = P4 + nA2 | 0, o4 = ((w4 = K4 + EA2 | 0) >>> 0 < EA2 >>> 0 ? o4 + 1 | 0 : o4) + D4 | 0, d4 = o4 = (D4 = f4 + w4 | 0) >>> 0 < w4 >>> 0 ? o4 + 1 | 0 : o4, f4 = DA(D4 ^ S4, o4 ^ n4, 32), o4 = (Z2 = h3) + T2 | 0, n4 = DA((w4 = f4 + z4 | 0) ^ K4, (o4 = w4 >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4) ^ P4, 40), R4 = o4, o4 = B4 + (K4 = h3) | 0, o4 = d4 + ((P4 = n4 + g6 | 0) >>> 0 < g6 >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = (d4 = D4 + P4 | 0) >>> 0 < D4 >>> 0 ? o4 + 1 | 0 : o4, D4 = Z2, Z2 = o4, D4 = DA(f4 ^ d4, D4 ^ o4, 48), o4 = (o4 = R4) + (R4 = h3) | 0, f4 = (w4 = D4 + w4 | 0) ^ n4, n4 = o4 = w4 >>> 0 < D4 >>> 0 ? o4 + 1 | 0 : o4, K4 = o4 = DA(f4, o4 ^ K4, 1), P4 = f4 = h3, AA2 = y4, W2 = t4, t4 = c4, c4 = DA(_4 ^ v4, O2 ^ CA2, 48), o4 = (_4 = h3) + N4 | 0, N4 = f4 = c4 + p4 | 0, p4 = o4 = f4 >>> 0 < c4 >>> 0 ? o4 + 1 | 0 : o4, t4 = DA(f4 ^ t4, o4 ^ U4, 1), o4 = (v4 = h3) + BA2 | 0, o4 = J4 + ((f4 = t4 + X3 | 0) >>> 0 < t4 >>> 0 ? o4 + 1 | 0 : o4) | 0, s4 = o4 = (y4 = f4 + s4 | 0) >>> 0 < s4 >>> 0 ? o4 + 1 | 0 : o4, f4 = DA(y4 ^ W2, o4 ^ b4, 32), o4 = (J4 = h3) + k4 | 0, b4 = k4 = f4 + AA2 | 0, U4 = o4 = k4 >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4, t4 = DA(t4 ^ k4, o4 ^ v4, 40), o4 = FA2 + (AA2 = h3) | 0, v4 = t4, o4 = s4 + ((t4 = V2 + t4 | 0) >>> 0 < V2 >>> 0 ? o4 + 1 | 0 : o4) | 0, k4 = t4 + y4 | 0, t4 = J4, J4 = o4 = k4 >>> 0 < y4 >>> 0 ? o4 + 1 | 0 : o4, t4 = DA(f4 ^ k4, t4 ^ o4, 48), o4 = (o4 = U4) + (U4 = h3) | 0, b4 = f4 = t4 + b4 | 0, O2 = o4 = f4 >>> 0 < t4 >>> 0 ? o4 + 1 | 0 : o4, y4 = r4, o4 = M4 + IA2 | 0, r4 = o4 = (f4 = S4 + L4 | 0) >>> 0 < S4 >>> 0 ? o4 + 1 | 0 : o4, e4 = DA(f4 ^ e4, o4 ^ Y4, 1), o4 = (S4 = h3) + j3 | 0, o4 = G4 + ((s4 = I7 + e4 | 0) >>> 0 < e4 >>> 0 ? o4 + 1 | 0 : o4) | 0, F4 = o4 = (s4 = s4 + F4 | 0) >>> 0 < F4 >>> 0 ? o4 + 1 | 0 : o4, G4 = y4 = DA(y4 ^ s4, o4 ^ m4, 32), M4 = o4 = h3, L4 = e4, o4 = o4 + p4 | 0, o4 = (e4 = y4 + N4 | 0) >>> 0 < y4 >>> 0 ? o4 + 1 | 0 : o4, Y4 = e4, e4 ^= L4, L4 = o4, e4 = DA(e4, o4 ^ S4, 40), o4 = kA2 + (N4 = h3) | 0, o4 = F4 + ((y4 = e4 + oA2 | 0) >>> 0 < oA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, p4 = (y4 = y4 + s4 | 0) ^ G4, G4 = o4 = y4 >>> 0 < s4 >>> 0 ? o4 + 1 | 0 : o4, s4 = DA(p4, o4 ^ M4, 48), m4 = o4 = h3, S4 = o4, M4 = F4 = DA(z4 ^ u4, T2 ^ $2, 1), p4 = o4 = h3, u4 = r4, o4 = o4 + eA2 | 0, o4 = x4 + ((r4 = F4 + q4 | 0) >>> 0 < q4 >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = (r4 = r4 + H4 | 0) >>> 0 < H4 >>> 0 ? o4 + 1 | 0 : o4, H4 = _4, _4 = o4, F4 = DA(c4 ^ r4, H4 ^ o4, 32), o4 = (W2 = h3) + u4 | 0, H4 = f4 = F4 + f4 | 0, c4 = DA(c4 = f4 ^ M4, (M4 = f4 >>> 0 < F4 >>> 0 ? o4 + 1 | 0 : o4) ^ p4, 40), o4 = wA2 + (p4 = h3) | 0, o4 = _4 + ((f4 = c4 + gA2 | 0) >>> 0 < gA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, _4 = f4 = f4 + r4 | 0, u4 = o4 = f4 >>> 0 < r4 >>> 0 ? o4 + 1 | 0 : o4, r4 = o4, o4 = P4 + FA2 | 0, o4 = ((x4 = V2) >>> 0 > (V2 = K4 + V2 | 0) >>> 0 ? o4 + 1 | 0 : o4) + r4 | 0, FA2 = o4 = (f4 = f4 + V2 | 0) >>> 0 < V2 >>> 0 ? o4 + 1 | 0 : o4, V2 = DA(f4 ^ s4, o4 ^ S4, 32), o4 = (z4 = h3) + O2 | 0, S4 = DA((r4 = b4 + V2 | 0) ^ K4, (o4 = r4 >>> 0 < V2 >>> 0 ? o4 + 1 | 0 : o4) ^ P4, 40), x4 = o4, o4 = kA2 + (T2 = h3) | 0, o4 = FA2 + ((K4 = oA2) >>> 0 > (oA2 = S4 + oA2 | 0) >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = (oA2 = f4 + oA2 | 0) >>> 0 < f4 >>> 0 ? o4 + 1 | 0 : o4, f4 = V2 ^ oA2, V2 = o4;
                      kA2 = DA(f4, o4 ^ z4, 48), o4 = (FA2 = h3) + x4 | 0, r4 = o4 = (f4 = r4 + kA2 | 0) >>> 0 < kA2 >>> 0 ? o4 + 1 | 0 : o4, o4 = DA(f4 ^ S4, o4 ^ T2, 1), S4 = h3, z4 = o4, T2 = w4, w4 = gA2, x4 = wA2, wA2 = DA(F4 ^ _4, u4 ^ W2, 48), o4 = (F4 = h3) + M4 | 0, M4 = w4, H4 = o4 = (gA2 = H4 + wA2 | 0) >>> 0 < wA2 >>> 0 ? o4 + 1 | 0 : o4, w4 = DA(c4 ^ (_4 = gA2), o4 ^ p4, 1), o4 = (p4 = h3) + x4 | 0, o4 = G4 + (w4 >>> 0 > (gA2 = M4 + w4 | 0) >>> 0 ? o4 + 1 | 0 : o4) | 0, c4 = o4 = (gA2 = y4 + gA2 | 0) >>> 0 < y4 >>> 0 ? o4 + 1 | 0 : o4, t4 = DA(t4 ^ gA2, o4 ^ U4, 32), o4 = (o4 = n4) + (n4 = h3) | 0, G4 = y4 = t4 + T2 | 0, M4 = o4 = y4 >>> 0 < t4 >>> 0 ? o4 + 1 | 0 : o4, y4 = DA(y4 ^ w4, o4 ^ p4, 40), o4 = (p4 = h3) + _A2 | 0, o4 = (y4 >>> 0 > (iA2 = y4 + iA2 | 0) >>> 0 ? o4 + 1 | 0 : o4) + c4 | 0, c4 = o4 = (c4 = iA2) >>> 0 > (iA2 = gA2 + iA2 | 0) >>> 0 ? o4 + 1 | 0 : o4, t4 = DA(t4 ^ iA2, o4 ^ n4, 48), o4 = (w4 = h3) + M4 | 0, n4 = gA2 = t4 + G4 | 0, _A2 = o4 = gA2 >>> 0 < t4 >>> 0 ? o4 + 1 | 0 : o4, G4 = I7, M4 = j3, o4 = L4 + m4 | 0, gA2 = o4 = (I7 = s4 + Y4 | 0) >>> 0 < s4 >>> 0 ? o4 + 1 | 0 : o4, j3 = DA(I7 ^ e4, o4 ^ N4, 1), o4 = (s4 = h3) + M4 | 0, o4 = J4 + ((e4 = G4 + j3 | 0) >>> 0 < j3 >>> 0 ? o4 + 1 | 0 : o4) | 0, D4 = DA((e4 = e4 + k4 | 0) ^ D4, (o4 = e4 >>> 0 < k4 >>> 0 ? o4 + 1 | 0 : o4) ^ R4, 32), G4 = o4, J4 = EA2, EA2 = j3, o4 = (k4 = h3) + H4 | 0, H4 = s4, s4 = o4 = (j3 = D4 + _4 | 0) >>> 0 < D4 >>> 0 ? o4 + 1 | 0 : o4, EA2 = DA(j3 ^ EA2, H4 ^ o4, 40), o4 = (_4 = h3) + nA2 | 0, o4 = ((nA2 = J4 + EA2 | 0) >>> 0 < EA2 >>> 0 ? o4 + 1 | 0 : o4) + G4 | 0, G4 = nA2, e4 = D4 ^ (nA2 = e4 + nA2 | 0), D4 = o4 = G4 >>> 0 > nA2 >>> 0 ? o4 + 1 | 0 : o4, o4 = DA(e4, o4 ^ k4, 48), L4 = e4 = h3, k4 = o4, H4 = X3, G4 = BA2, X3 = DA(b4 ^ v4, O2 ^ AA2, 1), M4 = o4 = h3, o4 = o4 + MA2 | 0, o4 = Z2 + ((X3 = (J4 = X3) + cA2 | 0) >>> 0 < cA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, cA2 = o4 = (X3 = d4 + X3 | 0) >>> 0 < d4 >>> 0 ? o4 + 1 | 0 : o4, BA2 = DA(X3 ^ wA2, o4 ^ F4, 32), o4 = (d4 = h3) + gA2 | 0, gA2 = I7 = BA2 + I7 | 0, wA2 = DA(I7 ^ J4, (F4 = I7 >>> 0 < BA2 >>> 0 ? o4 + 1 | 0 : o4) ^ M4, 40), o4 = (o4 = G4) + (G4 = h3) | 0, o4 = cA2 + ((I7 = wA2 + H4 | 0) >>> 0 < wA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, cA2 = I7 = I7 + X3 | 0, MA2 = o4 = I7 >>> 0 < X3 >>> 0 ? o4 + 1 | 0 : o4, X3 = o4, o4 = S4 + GA2 | 0, o4 = ((J4 = QA2) >>> 0 > (QA2 = z4 + QA2 | 0) >>> 0 ? o4 + 1 | 0 : o4) + X3 | 0, GA2 = o4 = (X3 = I7 + QA2 | 0) >>> 0 < QA2 >>> 0 ? o4 + 1 | 0 : o4, QA2 = DA(k4 ^ X3, o4 ^ e4, 32), o4 = (J4 = h3) + _A2 | 0, e4 = I7 = QA2 + n4 | 0, I7 = DA(I7 ^ z4, (H4 = S4) ^ (S4 = I7 >>> 0 < QA2 >>> 0 ? o4 + 1 | 0 : o4), 40), o4 = pA2 + (M4 = h3) | 0, pA2 = I7, o4 = GA2 + ((I7 = fA2 + I7 | 0) >>> 0 < fA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = (I7 = I7 + X3 | 0) >>> 0 < X3 >>> 0 ? o4 + 1 | 0 : o4, GA2 = I7, Y4 = (a3[A8 + 8 | 0] | a3[A8 + 9 | 0] << 8 | a3[A8 + 10 | 0] << 16 | a3[A8 + 11 | 0] << 24) ^ I7, H4 = o4, N4 = o4 ^ (a3[A8 + 12 | 0] | a3[A8 + 13 | 0] << 8 | a3[A8 + 14 | 0] << 16 | a3[A8 + 15 | 0] << 24), X3 = DA(BA2 ^ cA2, d4 ^ MA2, 48), o4 = (cA2 = h3) + F4 | 0, F4 = I7 = X3 + gA2 | 0, MA2 = o4 = I7 >>> 0 < X3 >>> 0 ? o4 + 1 | 0 : o4, BA2 = rA2, o4 = s4 + L4 | 0, rA2 = o4 = (I7 = k4 + j3 | 0) >>> 0 < j3 >>> 0 ? o4 + 1 | 0 : o4, EA2 = DA(I7 ^ EA2, o4 ^ _4, 1), o4 = (k4 = h3) + yA2 | 0, o4 = ((BA2 = EA2 + BA2 | 0) >>> 0 < EA2 >>> 0 ? o4 + 1 | 0 : o4) + c4 | 0, BA2 = o4 = (yA2 = BA2 + iA2 | 0) >>> 0 < BA2 >>> 0 ? o4 + 1 | 0 : o4, gA2 = DA(yA2 ^ kA2, o4 ^ FA2, 32), o4 = (j3 = h3) + MA2 | 0, iA2 = o4 = (fA2 = gA2 + F4 | 0) >>> 0 < gA2 >>> 0 ? o4 + 1 | 0 : o4, kA2 = gA2, gA2 = DA(EA2 ^ fA2, o4 ^ k4, 40), o4 = (c4 = h3) + HA2 | 0, o4 = (gA2 >>> 0 > (EA2 = gA2 + tA2 | 0) >>> 0 ? o4 + 1 | 0 : o4) + BA2 | 0, s4 = j3, j3 = o4 = (yA2 = EA2 + yA2 | 0) >>> 0 < EA2 >>> 0 ? o4 + 1 | 0 : o4, EA2 = DA(kA2 ^ (tA2 = yA2), s4 ^ o4, 48), o4 = (k4 = h3) + iA2 | 0, o4 = (BA2 = EA2 + fA2 | 0) >>> 0 < EA2 >>> 0 ? o4 + 1 | 0 : o4, fA2 = BA2, BA2 ^= Y4, E3[A8 + 8 | 0] = BA2, E3[A8 + 9 | 0] = BA2 >>> 8, E3[A8 + 10 | 0] = BA2 >>> 16, E3[A8 + 11 | 0] = BA2 >>> 24, iA2 = o4, o4 ^= N4, E3[A8 + 12 | 0] = o4, E3[A8 + 13 | 0] = o4 >>> 8, E3[A8 + 14 | 0] = o4 >>> 16, E3[A8 + 15 | 0] = o4 >>> 24, yA2 = I7, BA2 = rA2, I7 = X3, X3 = DA(y4 ^ n4, p4 ^ _A2, 1), o4 = (HA2 = h3) + B4 | 0, o4 = (X3 >>> 0 > (rA2 = X3 + g6 | 0) >>> 0 ? o4 + 1 | 0 : o4) + V2 | 0, oA2 = o4 = (n4 = rA2) >>> 0 > (rA2 = oA2 + rA2 | 0) >>> 0 ? o4 + 1 | 0 : o4, I7 = DA(I7 ^ rA2, o4 ^ cA2, 32), o4 = (o4 = BA2) + (BA2 = h3) | 0, cA2 = o4 = (yA2 = I7 + yA2 | 0) >>> 0 < I7 >>> 0 ? o4 + 1 | 0 : o4, kA2 = I7, yA2 = DA(X3 ^ (V2 = yA2), o4 ^ HA2, 40), o4 = (y4 = h3) + C4 | 0, o4 = oA2 + ((I7 = yA2 + sA2 | 0) >>> 0 < yA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = (I7 = I7 + rA2 | 0) >>> 0 < rA2 >>> 0 ? o4 + 1 | 0 : o4, oA2 = I7, I7 ^= kA2, kA2 = o4, rA2 = DA(I7, o4 ^ BA2, 48), o4 = (n4 = h3) + cA2 | 0, V2 = I7 = rA2 + V2 | 0, cA2 = I7 >>> 0 < rA2 >>> 0 ? o4 + 1 | 0 : o4, wA2 = I7 = DA(F4 ^ wA2, G4 ^ MA2, 1), HA2 = o4 = h3, o4 = o4 + l4 | 0, o4 = D4 + ((I7 = I7 + aA2 | 0) >>> 0 < aA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, l4 = o4 = (X3 = I7 + nA2 | 0) >>> 0 < nA2 >>> 0 ? o4 + 1 | 0 : o4, I7 = (BA2 = DA(t4 ^ X3, o4 ^ w4, 32)) + f4 | 0, o4 = (f4 = h3) + r4 | 0, nA2 = I7, I7 = (aA2 = DA(D4 = I7 ^ wA2, (wA2 = I7 >>> 0 < BA2 >>> 0 ? o4 + 1 | 0 : o4) ^ HA2, 40)) + q4 | 0, o4 = (q4 = h3) + eA2 | 0, o4 = l4 + (I7 >>> 0 < aA2 >>> 0 ? o4 + 1 | 0 : o4) | 0, o4 = (l4 = I7 + X3 | 0) >>> 0 < X3 >>> 0 ? o4 + 1 | 0 : o4, X3 = l4 ^ JA2 ^ V2, E3[0 | (I7 = A8)] = X3, E3[I7 + 1 | 0] = X3 >>> 8, E3[I7 + 2 | 0] = X3 >>> 16, E3[I7 + 3 | 0] = X3 >>> 24, X3 = o4 ^ Q4 ^ cA2, E3[I7 + 4 | 0] = X3, E3[I7 + 5 | 0] = X3 >>> 8, E3[I7 + 6 | 0] = X3 >>> 16, E3[I7 + 7 | 0] = X3 >>> 24, X3 = (BA2 = DA(l4 ^ BA2, o4 ^ f4, 48)) + nA2 | 0, o4 = (nA2 = h3) + wA2 | 0, o4 = (wA2 = X3 >>> 0 < BA2 >>> 0 ? o4 + 1 | 0 : o4) ^ (a3[I7 + 20 | 0] | a3[I7 + 21 | 0] << 8 | a3[I7 + 22 | 0] << 16 | a3[I7 + 23 | 0] << 24) ^ kA2, l4 = (a3[I7 + 16 | 0] | a3[I7 + 17 | 0] << 8 | a3[I7 + 18 | 0] << 16 | a3[I7 + 19 | 0] << 24) ^ oA2 ^ X3, E3[I7 + 16 | 0] = l4, E3[I7 + 17 | 0] = l4 >>> 8, E3[I7 + 18 | 0] = l4 >>> 16, E3[I7 + 19 | 0] = l4 >>> 24, E3[I7 + 20 | 0] = o4, E3[I7 + 21 | 0] = o4 >>> 8, E3[I7 + 22 | 0] = o4 >>> 16, E3[I7 + 23 | 0] = o4 >>> 24, I7 = DA(QA2 ^ GA2, H4 ^ J4, 48), l4 = h3, oA2 = a3[A8 + 36 | 0] | a3[A8 + 37 | 0] << 8 | a3[A8 + 38 | 0] << 16 | a3[A8 + 39 | 0] << 24, o4 = (a3[A8 + 32 | 0] | a3[A8 + 33 | 0] << 8 | a3[A8 + 34 | 0] << 16 | a3[A8 + 35 | 0] << 24) ^ DA(gA2 ^ fA2, c4 ^ iA2, 1) ^ I7, E3[A8 + 32 | 0] = o4, E3[A8 + 33 | 0] = o4 >>> 8, E3[A8 + 34 | 0] = o4 >>> 16, E3[A8 + 35 | 0] = o4 >>> 24, o4 = h3 ^ oA2 ^ l4, E3[A8 + 36 | 0] = o4, E3[A8 + 37 | 0] = o4 >>> 8, E3[A8 + 38 | 0] = o4 >>> 16, E3[A8 + 39 | 0] = o4 >>> 24, o4 = S4 + l4 | 0, o4 = (oA2 = I7 + e4 | 0) >>> 0 < I7 >>> 0 ? o4 + 1 | 0 : o4, gA2 = (a3[(I7 = A8) + 28 | 0] | a3[I7 + 29 | 0] << 8 | a3[I7 + 30 | 0] << 16 | a3[I7 + 31 | 0] << 24) ^ j3 ^ o4, l4 = (a3[I7 + 24 | 0] | a3[I7 + 25 | 0] << 8 | a3[I7 + 26 | 0] << 16 | a3[I7 + 27 | 0] << 24) ^ tA2 ^ oA2, E3[I7 + 24 | 0] = l4, E3[I7 + 25 | 0] = l4 >>> 8, E3[I7 + 26 | 0] = l4 >>> 16, E3[I7 + 27 | 0] = l4 >>> 24, E3[I7 + 28 | 0] = gA2, E3[I7 + 29 | 0] = gA2 >>> 8, E3[I7 + 30 | 0] = gA2 >>> 16, E3[I7 + 31 | 0] = gA2 >>> 24, gA2 = a3[I7 + 44 | 0] | a3[I7 + 45 | 0] << 8 | a3[I7 + 46 | 0] << 16 | a3[I7 + 47 | 0] << 24, I7 = rA2 ^ (a3[I7 + 40 | 0] | a3[I7 + 41 | 0] << 8 | a3[I7 + 42 | 0] << 16 | a3[I7 + 43 | 0] << 24) ^ DA(X3 ^ aA2, q4 ^ wA2, 1), E3[A8 + 40 | 0] = I7, E3[A8 + 41 | 0] = I7 >>> 8, E3[A8 + 42 | 0] = I7 >>> 16, E3[A8 + 43 | 0] = I7 >>> 24, I7 = n4 ^ h3 ^ gA2, E3[A8 + 44 | 0] = I7, E3[A8 + 45 | 0] = I7 >>> 8, E3[A8 + 46 | 0] = I7 >>> 16, E3[A8 + 47 | 0] = I7 >>> 24, X3 = a3[A8 + 60 | 0] | a3[A8 + 61 | 0] << 8 | a3[A8 + 62 | 0] << 16 | a3[A8 + 63 | 0] << 24, I7 = BA2 ^ (a3[A8 + 56 | 0] | a3[A8 + 57 | 0] << 8 | a3[A8 + 58 | 0] << 16 | a3[A8 + 59 | 0] << 24) ^ DA(V2 ^ yA2, y4 ^ cA2, 1), E3[A8 + 56 | 0] = I7, E3[A8 + 57 | 0] = I7 >>> 8, E3[A8 + 58 | 0] = I7 >>> 16, E3[A8 + 59 | 0] = I7 >>> 24, I7 = nA2 ^ h3 ^ X3, E3[A8 + 60 | 0] = I7, E3[A8 + 61 | 0] = I7 >>> 8, E3[A8 + 62 | 0] = I7 >>> 16, E3[A8 + 63 | 0] = I7 >>> 24, X3 = a3[A8 + 52 | 0] | a3[A8 + 53 | 0] << 8 | a3[A8 + 54 | 0] << 16 | a3[A8 + 55 | 0] << 24, I7 = EA2 ^ (a3[A8 + 48 | 0] | a3[A8 + 49 | 0] << 8 | a3[A8 + 50 | 0] << 16 | a3[A8 + 51 | 0] << 24) ^ DA(oA2 ^ pA2, o4 ^ M4, 1), E3[A8 + 48 | 0] = I7, E3[A8 + 49 | 0] = I7 >>> 8, E3[A8 + 50 | 0] = I7 >>> 16, E3[A8 + 51 | 0] = I7 >>> 24, I7 = k4 ^ h3 ^ X3, E3[A8 + 52 | 0] = I7, E3[A8 + 53 | 0] = I7 >>> 8, E3[A8 + 54 | 0] = I7 >>> 16, E3[A8 + 55 | 0] = I7 >>> 24;
                    }
                    function s3(A8, I7, g6, C4, B4, Q4, i4) {
                      var f4, c4, e4, r4, D4, t4, y4, n4, s4, k4, S4, H4, G4, _4, M4, p4, J4, U4, Y4, d4, K4, b4, P4, v4, L4, x4, m4, l4, z4, q4, X3, j3, T2, O2, V2, Z2, W2, $2, AA2, IA2, gA2, CA2, BA2, QA2, iA2, EA2, oA2, fA2, eA2 = 0, rA2 = 0, DA2 = 0, tA2 = 0, yA2 = 0, wA2 = 0, hA2 = 0, nA2 = 0, sA2 = 0, FA2 = 0, SA2 = 0, HA2 = 0, GA2 = 0, _A2 = 0, pA2 = 0, NA2 = 0, JA2 = 0, UA2 = 0, YA2 = 0, dA2 = 0, KA2 = 0, bA2 = 0, PA2 = 0, vA2 = 0, LA2 = 0, RA2 = 0, uA2 = 0, xA2 = 0, mA2 = 0, lA2 = 0, zA2 = 0, qA2 = 0, XA2 = 0, jA2 = 0, TA2 = 0, OA2 = 0, VA2 = 0, ZA2 = 0, WA2 = 0, $A2 = 0, AI2 = 0, II2 = 0, gI2 = 0, CI2 = 0, BI2 = 0, QI2 = 0;
                      return w3 = e4 = w3 - 560 | 0, cA(DA2 = e4 + 352 | 0), i4 && R3(DA2, 35136, 34, 0), aA(e4 + 288 | 0, Q4, 32, 0), R3(tA2 = e4 + 352 | 0, e4 + 320 | 0, 32, 0), R3(tA2, g6, C4, B4), N3(tA2, nA2 = e4 + 224 | 0), sA2 = a3[(rA2 = Q4) + 32 | 0] | a3[rA2 + 33 | 0] << 8 | a3[rA2 + 34 | 0] << 16 | a3[rA2 + 35 | 0] << 24, SA2 = a3[rA2 + 36 | 0] | a3[rA2 + 37 | 0] << 8 | a3[rA2 + 38 | 0] << 16 | a3[rA2 + 39 | 0] << 24, yA2 = a3[rA2 + 40 | 0] | a3[rA2 + 41 | 0] << 8 | a3[rA2 + 42 | 0] << 16 | a3[rA2 + 43 | 0] << 24, eA2 = a3[rA2 + 44 | 0] | a3[rA2 + 45 | 0] << 8 | a3[rA2 + 46 | 0] << 16 | a3[rA2 + 47 | 0] << 24, DA2 = a3[rA2 + 48 | 0] | a3[rA2 + 49 | 0] << 8 | a3[rA2 + 50 | 0] << 16 | a3[rA2 + 51 | 0] << 24, Q4 = a3[rA2 + 52 | 0] | a3[rA2 + 53 | 0] << 8 | a3[rA2 + 54 | 0] << 16 | a3[rA2 + 55 | 0] << 24, wA2 = a3[rA2 + 60 | 0] | a3[rA2 + 61 | 0] << 8 | a3[rA2 + 62 | 0] << 16 | a3[rA2 + 63 | 0] << 24, rA2 = a3[rA2 + 56 | 0] | a3[rA2 + 57 | 0] << 8 | a3[rA2 + 58 | 0] << 16 | a3[rA2 + 59 | 0] << 24, E3[A8 + 56 | 0] = rA2, E3[A8 + 57 | 0] = rA2 >>> 8, E3[A8 + 58 | 0] = rA2 >>> 16, E3[A8 + 59 | 0] = rA2 >>> 24, E3[A8 + 60 | 0] = wA2, E3[A8 + 61 | 0] = wA2 >>> 8, E3[A8 + 62 | 0] = wA2 >>> 16, E3[A8 + 63 | 0] = wA2 >>> 24, E3[A8 + 48 | 0] = DA2, E3[A8 + 49 | 0] = DA2 >>> 8, E3[A8 + 50 | 0] = DA2 >>> 16, E3[A8 + 51 | 0] = DA2 >>> 24, E3[A8 + 52 | 0] = Q4, E3[A8 + 53 | 0] = Q4 >>> 8, E3[A8 + 54 | 0] = Q4 >>> 16, E3[A8 + 55 | 0] = Q4 >>> 24, E3[A8 + 40 | 0] = yA2, E3[A8 + 41 | 0] = yA2 >>> 8, E3[A8 + 42 | 0] = yA2 >>> 16, E3[A8 + 43 | 0] = yA2 >>> 24, E3[A8 + 44 | 0] = eA2, E3[A8 + 45 | 0] = eA2 >>> 8, E3[A8 + 46 | 0] = eA2 >>> 16, E3[A8 + 47 | 0] = eA2 >>> 24, E3[0 | (Q4 = A8 + 32 | 0)] = sA2, E3[Q4 + 1 | 0] = sA2 >>> 8, E3[Q4 + 2 | 0] = sA2 >>> 16, E3[Q4 + 3 | 0] = sA2 >>> 24, E3[Q4 + 4 | 0] = SA2, E3[Q4 + 5 | 0] = SA2 >>> 8, E3[Q4 + 6 | 0] = SA2 >>> 16, E3[Q4 + 7 | 0] = SA2 >>> 24, F3(nA2), u3(e4, nA2), MA(A8, e4), cA(tA2), i4 && R3(tA2, 35136, 34, 0), R3(i4 = e4 + 352 | 0, A8, 64, 0), R3(i4, g6, C4, B4), N3(i4, hA2 = e4 + 160 | 0), F3(hA2), E3[e4 + 288 | 0] = 248 & a3[e4 + 288 | 0], E3[e4 + 319 | 0] = 63 & a3[e4 + 319 | 0] | 64, g6 = a3[23 + (A8 = c4 = e4 + 288 | 0) | 0], yA2 = kA(r4 = a3[A8 + 21 | 0] | a3[A8 + 22 | 0] << 8 | g6 << 16 & 2031616, 0, D4 = (a3[hA2 + 28 | 0] | a3[hA2 + 29 | 0] << 8 | a3[hA2 + 30 | 0] << 16 | a3[hA2 + 31 | 0] << 24) >>> 7 | 0, 0), DA2 = h3, g6 = (A8 = a3[hA2 + 27 | 0]) >>> 24 | 0, B4 = A8 << 8 | (eA2 = a3[hA2 + 23 | 0] | a3[hA2 + 24 | 0] << 8 | a3[hA2 + 25 | 0] << 16 | a3[hA2 + 26 | 0] << 24) >>> 24, A8 = kA(t4 = 2097151 & ((3 & (SA2 = (A8 = (C4 = a3[hA2 + 28 | 0]) >>> 16 | 0) | g6)) << 30 | (g6 = (C4 <<= 16) | B4) >>> 2), 0, y4 = (i4 = a3[c4 + 23 | 0] | a3[c4 + 24 | 0] << 8 | a3[c4 + 25 | 0] << 16 | a3[c4 + 26 | 0] << 24) >>> 5 & 2097151, 0), g6 = h3 + DA2 | 0, C4 = A8 >>> 0 > (B4 = A8 + yA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, A8 = kA(n4 = (g6 = a3[hA2 + 23 | 0]) << 16 & 2031616 | a3[hA2 + 21 | 0] | a3[hA2 + 22 | 0] << 8, 0, s4 = (a3[c4 + 28 | 0] | a3[c4 + 29 | 0] << 8 | a3[c4 + 30 | 0] << 16 | a3[c4 + 31 | 0] << 24) >>> 7 | 0, 0), C4 = h3 + C4 | 0, DA2 = g6 = A8 + B4 | 0, B4 = A8 >>> 0 > g6 >>> 0 ? C4 + 1 | 0 : C4, C4 = (A8 = a3[c4 + 27 | 0]) >>> 24 | 0, i4 = A8 << 8 | i4 >>> 24, A8 = kA(k4 = 2097151 & ((3 & (C4 |= g6 = (A8 = a3[c4 + 28 | 0]) >>> 16 | 0)) << 30 | (g6 = (A8 <<= 16) | i4) >>> 2), 0, S4 = eA2 >>> 5 & 2097151, 0), g6 = h3 + B4 | 0, rA2 = C4 = A8 + DA2 | 0, B4 = A8 >>> 0 > C4 >>> 0 ? g6 + 1 | 0 : g6, eA2 = kA(y4, 0, S4, 0), DA2 = h3, g6 = (A8 = a3[c4 + 19 | 0]) >>> 24 | 0, i4 = A8 << 8 | (JA2 = a3[c4 + 15 | 0] | a3[c4 + 16 | 0] << 8 | a3[c4 + 17 | 0] << 16 | a3[c4 + 18 | 0] << 24) >>> 24, C4 = g6, g6 = kA(H4 = (7 & (C4 |= g6 = (A8 = a3[c4 + 20 | 0]) >>> 16 | 0)) << 29 | (g6 = (A8 <<= 16) | i4) >>> 3, SA2 = C4 >>> 3 | 0, D4, 0), A8 = h3 + DA2 | 0, A8 = g6 >>> 0 > (C4 = g6 + eA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, i4 = (g6 = kA(r4, 0, t4, 0)) + C4 | 0, C4 = h3 + A8 | 0, g6 = g6 >>> 0 > (eA2 = i4) >>> 0 ? C4 + 1 | 0 : C4, C4 = (A8 = a3[hA2 + 19 | 0]) >>> 24 | 0, DA2 = A8 << 8 | (NA2 = a3[hA2 + 15 | 0] | a3[hA2 + 16 | 0] << 8 | a3[hA2 + 17 | 0] << 16 | a3[hA2 + 18 | 0] << 24) >>> 24, A8 = kA(G4 = (7 & (yA2 = (A8 = (i4 = a3[hA2 + 20 | 0]) >>> 16 | 0) | C4)) << 29 | (C4 = (i4 <<= 16) | DA2) >>> 3, _4 = yA2 >>> 3 | 0, s4, 0), g6 = h3 + g6 | 0, g6 = A8 >>> 0 > (C4 = A8 + eA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, A8 = kA(n4, 0, k4, 0), g6 = h3 + g6 | 0, sA2 = g6 = A8 >>> 0 > (nA2 = A8 + C4 | 0) >>> 0 ? g6 + 1 | 0 : g6, HA2 = A8 = g6 - ((nA2 >>> 0 < 4293918720) - 1 | 0) | 0, C4 = (g6 = A8 >>> 21 | 0) + B4 | 0, eA2 = C4 = (A8 = (2097151 & A8) << 11 | (yA2 = nA2 - -1048576 | 0) >>> 21) >>> 0 > (rA2 = A8 + rA2 | 0) >>> 0 ? C4 + 1 | 0 : C4, _A2 = A8 = C4 - ((rA2 >>> 0 < 4293918720) - 1 | 0) | 0, wA2 = (2097151 & A8) << 11 | (DA2 = rA2 - -1048576 | 0) >>> 21, i4 = A8 >>> 21 | 0, A8 = kA(s4, 0, S4, 0), g6 = h3, C4 = A8, A8 = kA(D4, 0, y4, 0), g6 = h3 + g6 | 0, g6 = A8 >>> 0 > (C4 = C4 + A8 | 0) >>> 0 ? g6 + 1 | 0 : g6, GA2 = (A8 = C4) + (C4 = kA(t4, 0, k4, 0)) | 0, A8 = h3 + g6 | 0, A8 = C4 >>> 0 > GA2 >>> 0 ? A8 + 1 | 0 : A8, tA2 = GA2 - (g6 = -2097152 & (C4 = GA2 - -1048576 | 0)) | 0, g6 = (A8 - ((131071 & (B4 = A8 - ((GA2 >>> 0 < 4293918720) - 1 | 0) | 0)) + (g6 >>> 0 > GA2 >>> 0) | 0) | 0) + i4 | 0, z4 = g6 = (A8 = tA2 + wA2 | 0) >>> 0 < tA2 >>> 0 ? g6 + 1 | 0 : g6, q4 = A8, tA2 = kA(A8, g6, 470296, 0), wA2 = h3, g6 = kA(D4, 0, k4, 0), A8 = h3, i4 = g6, g6 = kA(t4, 0, s4, 0), A8 = h3 + A8 | 0, g6 = g6 >>> 0 > (i4 = i4 + g6 | 0) >>> 0 ? A8 + 1 | 0 : A8, A8 = B4 >>> 21 | 0, B4 = (2097151 & B4) << 11 | C4 >>> 21, C4 = A8 + g6 | 0, bA2 = B4 = (C4 = B4 >>> 0 > (i4 = B4 + i4 | 0) >>> 0 ? C4 + 1 | 0 : C4) - ((i4 >>> 0 < 4293918720) - 1 | 0) | 0, A8 = i4 - (g6 = -2097152 & (KA2 = i4 - -1048576 | 0)) | 0, X3 = i4 = C4 - ((131071 & B4) + (g6 >>> 0 > i4 >>> 0) | 0) | 0, j3 = g6 = rA2 - (C4 = -2097152 & DA2) | 0, T2 = B4 = eA2 - ((C4 >>> 0 > rA2 >>> 0) + _A2 | 0) | 0, O2 = A8, C4 = kA(A8, i4, 666643, 0), A8 = h3 + wA2 | 0, A8 = C4 >>> 0 > (i4 = C4 + tA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, C4 = kA(g6, B4, 654183, 0), g6 = h3 + A8 | 0, FA2 = B4 = C4 + i4 | 0, DA2 = C4 >>> 0 > B4 >>> 0 ? g6 + 1 | 0 : g6, GA2 = nA2 - (A8 = -2097152 & yA2) | 0, HA2 = sA2 - ((A8 >>> 0 > nA2 >>> 0) + HA2 | 0) | 0, g6 = kA(t4, 0, H4, SA2), C4 = h3, B4 = (A8 = g6) + (g6 = kA(M4 = JA2 >>> 6 & 2097151, 0, D4, 0)) | 0, A8 = h3 + C4 | 0, A8 = g6 >>> 0 > B4 >>> 0 ? A8 + 1 | 0 : A8, g6 = kA(y4, 0, n4, 0), C4 = h3 + A8 | 0, C4 = g6 >>> 0 > (B4 = g6 + B4 | 0) >>> 0 ? C4 + 1 | 0 : C4, A8 = kA(r4, 0, S4, 0), g6 = h3 + C4 | 0, g6 = A8 >>> 0 > (B4 = A8 + B4 | 0) >>> 0 ? g6 + 1 | 0 : g6, C4 = kA(s4, 0, p4 = NA2 >>> 6 & 2097151, 0), A8 = h3 + g6 | 0, A8 = C4 >>> 0 > (B4 = C4 + B4 | 0) >>> 0 ? A8 + 1 | 0 : A8, C4 = kA(k4, 0, G4, _4), g6 = h3 + A8 | 0, nA2 = B4 = C4 + B4 | 0, i4 = C4 >>> 0 > B4 >>> 0 ? g6 + 1 | 0 : g6, g6 = (A8 = a3[c4 + 14 | 0]) >>> 24 | 0, B4 = A8 << 8 | (sA2 = a3[c4 + 10 | 0] | a3[c4 + 11 | 0] << 8 | a3[c4 + 12 | 0] << 16 | a3[c4 + 13 | 0] << 24) >>> 24, g6 = kA(J4 = 2097151 & ((1 & (g6 |= A8 = (C4 = a3[c4 + 15 | 0]) >>> 16 | 0)) << 31 | (A8 = (C4 <<= 16) | B4) >>> 1), 0, D4, 0), A8 = h3, C4 = g6, g6 = kA(t4, 0, M4, 0), A8 = h3 + A8 | 0, A8 = g6 >>> 0 > (C4 = C4 + g6 | 0) >>> 0 ? A8 + 1 | 0 : A8, B4 = (g6 = kA(S4, 0, H4, SA2)) + C4 | 0, C4 = h3 + A8 | 0, C4 = g6 >>> 0 > B4 >>> 0 ? C4 + 1 | 0 : C4, A8 = kA(y4, 0, G4, _4), g6 = h3 + C4 | 0, g6 = A8 >>> 0 > (B4 = A8 + B4 | 0) >>> 0 ? g6 + 1 | 0 : g6, A8 = kA(r4, 0, n4, 0), g6 = h3 + g6 | 0, yA2 = C4 = A8 + B4 | 0, B4 = A8 >>> 0 > C4 >>> 0 ? g6 + 1 | 0 : g6, g6 = (A8 = a3[hA2 + 14 | 0]) >>> 24 | 0, eA2 = A8 << 8 | (rA2 = a3[hA2 + 10 | 0] | a3[hA2 + 11 | 0] << 8 | a3[hA2 + 12 | 0] << 16 | a3[hA2 + 13 | 0] << 24) >>> 24, C4 = g6, g6 = (A8 = a3[hA2 + 15 | 0]) >>> 16 | 0, g6 = kA(U4 = 2097151 & ((1 & (g6 |= C4)) << 31 | (A8 = A8 << 16 | eA2) >>> 1), 0, s4, 0), A8 = h3 + B4 | 0, A8 = g6 >>> 0 > (C4 = g6 + yA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = kA(k4, 0, p4, 0), A8 = h3 + A8 | 0, eA2 = A8 = g6 >>> 0 > (yA2 = g6 + C4 | 0) >>> 0 ? A8 + 1 | 0 : A8, PA2 = g6 = A8 - ((yA2 >>> 0 < 4293918720) - 1 | 0) | 0, C4 = (A8 = g6 >>> 21 | 0) + i4 | 0, wA2 = C4 = (g6 = (2097151 & g6) << 11 | (tA2 = yA2 - -1048576 | 0) >>> 21) >>> 0 > (_A2 = g6 + nA2 | 0) >>> 0 ? C4 + 1 | 0 : C4, YA2 = g6 = C4 - ((_A2 >>> 0 < 4293918720) - 1 | 0) | 0, A8 = (A8 = g6 >>> 21 | 0) + HA2 | 0, V2 = A8 = (g6 = (C4 = (2097151 & g6) << 11 | (nA2 = _A2 - -1048576 | 0) >>> 21) + GA2 | 0) >>> 0 < C4 >>> 0 ? A8 + 1 | 0 : A8, Z2 = g6, A8 = kA(g6, A8, -997805, -1), g6 = h3 + DA2 | 0, FA2 = C4 = A8 + FA2 | 0, DA2 = A8 >>> 0 > C4 >>> 0 ? g6 + 1 | 0 : g6, GA2 = (RA2 = a3[23 + (f4 = e4 + 224 | 0) | 0] | a3[f4 + 24 | 0] << 8 | a3[f4 + 25 | 0] << 16 | a3[f4 + 26 | 0] << 24) >>> 5 & 2097151, C4 = kA(Y4 = (A8 = a3[c4 + 2 | 0]) << 16 & 2031616 | a3[0 | c4] | a3[c4 + 1 | 0] << 8, 0, S4, 0), g6 = h3, B4 = (A8 = kA(n4, 0, d4 = (i4 = a3[c4 + 2 | 0] | a3[c4 + 3 | 0] << 8 | a3[c4 + 4 | 0] << 16 | a3[c4 + 5 | 0] << 24) >>> 5 & 2097151, 0)) + C4 | 0, C4 = h3 + g6 | 0, C4 = A8 >>> 0 > B4 >>> 0 ? C4 + 1 | 0 : C4, A8 = kA(K4 = (a3[c4 + 7 | 0] | a3[c4 + 8 | 0] << 8 | a3[c4 + 9 | 0] << 16 | a3[c4 + 10 | 0] << 24) >>> 7 & 2097151, 0, p4, 0), g6 = h3 + C4 | 0, g6 = A8 >>> 0 > (B4 = A8 + B4 | 0) >>> 0 ? g6 + 1 | 0 : g6, C4 = kA(U4, 0, b4 = sA2 >>> 4 & 2097151, 0), A8 = h3 + g6 | 0, sA2 = B4 = C4 + B4 | 0, B4 = C4 >>> 0 > B4 >>> 0 ? A8 + 1 | 0 : A8, i4 = (g6 = a3[c4 + 6 | 0]) << 8 | i4 >>> 24, C4 = A8 = g6 >>> 24 | 0, g6 = (A8 = a3[c4 + 7 | 0]) >>> 16 | 0, g6 = kA(P4 = 2097151 & ((3 & (g6 |= C4)) << 30 | (A8 = A8 << 16 | i4) >>> 2), 0, G4, _4), A8 = h3 + B4 | 0, A8 = g6 >>> 0 > (C4 = g6 + sA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, B4 = (g6 = kA(M4, 0, v4 = (a3[hA2 + 7 | 0] | a3[hA2 + 8 | 0] << 8 | a3[hA2 + 9 | 0] << 16 | a3[hA2 + 10 | 0] << 24) >>> 7 & 2097151, 0)) + C4 | 0, C4 = h3 + A8 | 0, C4 = g6 >>> 0 > B4 >>> 0 ? C4 + 1 | 0 : C4, g6 = kA(J4, 0, dA2 = rA2 >>> 4 & 2097151, 0), A8 = h3 + C4 | 0, i4 = g6 >>> 0 > (B4 = g6 + B4 | 0) >>> 0 ? A8 + 1 | 0 : A8, A8 = (g6 = a3[hA2 + 6 | 0]) >>> 24 | 0, sA2 = g6 << 8 | (rA2 = a3[hA2 + 2 | 0] | a3[hA2 + 3 | 0] << 8 | a3[hA2 + 4 | 0] << 16 | a3[hA2 + 5 | 0] << 24) >>> 24, g6 = A8, A8 = kA(H4, SA2, L4 = 2097151 & ((3 & (g6 |= C4 = (A8 = a3[hA2 + 7 | 0]) >>> 16 | 0)) << 30 | (A8 = A8 << 16 | sA2) >>> 2), 0), g6 = h3 + i4 | 0, g6 = A8 >>> 0 > (C4 = A8 + B4 | 0) >>> 0 ? g6 + 1 | 0 : g6, B4 = C4, C4 = kA(x4 = (A8 = a3[hA2 + 2 | 0]) << 16 & 2031616 | a3[0 | hA2] | a3[hA2 + 1 | 0] << 8, 0, y4, 0), A8 = h3 + g6 | 0, A8 = C4 >>> 0 > (B4 = B4 + C4 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = kA(r4, 0, m4 = rA2 >>> 5 & 2097151, 0), A8 = h3 + A8 | 0, A8 = g6 >>> 0 > (C4 = g6 + B4 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = C4, sA2 = C4 = C4 + GA2 | 0, i4 = g6 = g6 >>> 0 > C4 >>> 0 ? A8 + 1 | 0 : A8, B4 = a3[f4 + 21 | 0] | a3[f4 + 22 | 0] << 8, A8 = kA(n4, 0, Y4, 0), g6 = h3, rA2 = (C4 = A8) + (A8 = kA(G4, _4, d4, 0)) | 0, C4 = h3 + g6 | 0, C4 = A8 >>> 0 > rA2 >>> 0 ? C4 + 1 | 0 : C4, A8 = kA(U4, 0, K4, 0), g6 = h3 + C4 | 0, g6 = A8 >>> 0 > (rA2 = A8 + rA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, A8 = kA(b4, 0, dA2, 0), g6 = h3 + g6 | 0, g6 = A8 >>> 0 > (C4 = A8 + rA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, rA2 = (A8 = C4) + (C4 = kA(p4, 0, P4, 0)) | 0, A8 = h3 + g6 | 0, A8 = C4 >>> 0 > rA2 >>> 0 ? A8 + 1 | 0 : A8, g6 = kA(M4, 0, L4, 0), A8 = h3 + A8 | 0, A8 = g6 >>> 0 > (C4 = g6 + rA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, rA2 = (g6 = kA(J4, 0, v4, 0)) + C4 | 0, C4 = h3 + A8 | 0, C4 = g6 >>> 0 > rA2 >>> 0 ? C4 + 1 | 0 : C4, A8 = kA(H4, SA2, m4, 0), g6 = h3 + C4 | 0, g6 = A8 >>> 0 > (rA2 = A8 + rA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, A8 = kA(r4, 0, x4, 0), g6 = h3 + g6 | 0, A8 = A8 >>> 0 > (C4 = A8 + rA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, g6 = (g6 = C4) >>> 0 > (C4 = C4 + B4 | 0) >>> 0 ? A8 + 1 | 0 : A8, B4 = C4, C4 = (A8 = a3[f4 + 23 | 0]) << 16 & 2031616, A8 = g6, C4 = A8 = C4 >>> 0 > (B4 = B4 + C4 | 0) >>> 0 ? A8 + 1 | 0 : A8, hA2 = A8 = A8 - ((B4 >>> 0 < 4293918720) - 1 | 0) | 0, g6 = (g6 = A8 >>> 21 | 0) + i4 | 0, A8 = (g6 = (i4 = sA2 = (A8 = (2097151 & A8) << 11 | (rA2 = B4 - -1048576 | 0) >>> 21) + sA2 | 0) >>> 0 < A8 >>> 0 ? g6 + 1 | 0 : g6) + DA2 | 0, A8 = (DA2 = i4 + FA2 | 0) >>> 0 < i4 >>> 0 ? A8 + 1 | 0 : A8, JA2 = i4 - -1048576 | 0, pA2 = i4 = g6 - ((i4 >>> 0 < 4293918720) - 1 | 0) | 0, UA2 = DA2 - (g6 = -2097152 & JA2) | 0, vA2 = A8 - ((g6 >>> 0 > DA2 >>> 0) + i4 | 0) | 0, sA2 = B4, DA2 = C4, A8 = kA(j3, T2, 470296, 0), g6 = h3, C4 = A8, A8 = kA(q4, z4, 666643, 0), g6 = h3 + g6 | 0, g6 = A8 >>> 0 > (C4 = C4 + A8 | 0) >>> 0 ? g6 + 1 | 0 : g6, B4 = (A8 = C4) + (C4 = kA(Z2, V2, 654183, 0)) | 0, A8 = h3 + g6 | 0, NA2 = B4, i4 = C4 >>> 0 > B4 >>> 0 ? A8 + 1 | 0 : A8, g6 = kA(G4, _4, Y4, 0), A8 = h3, C4 = g6, g6 = kA(p4, 0, d4, 0), A8 = h3 + A8 | 0, A8 = g6 >>> 0 > (C4 = C4 + g6 | 0) >>> 0 ? A8 + 1 | 0 : A8, B4 = (g6 = C4) + (C4 = kA(K4, 0, dA2, 0)) | 0, g6 = h3 + A8 | 0, g6 = C4 >>> 0 > B4 >>> 0 ? g6 + 1 | 0 : g6, A8 = kA(b4, 0, v4, 0), C4 = h3 + g6 | 0, C4 = A8 >>> 0 > (B4 = A8 + B4 | 0) >>> 0 ? C4 + 1 | 0 : C4, A8 = kA(U4, 0, P4, 0), g6 = h3 + C4 | 0, g6 = A8 >>> 0 > (B4 = A8 + B4 | 0) >>> 0 ? g6 + 1 | 0 : g6, C4 = kA(M4, 0, m4, 0), A8 = h3 + g6 | 0, A8 = C4 >>> 0 > (B4 = C4 + B4 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = kA(J4, 0, L4, 0), A8 = h3 + A8 | 0, A8 = g6 >>> 0 > (C4 = g6 + B4 | 0) >>> 0 ? A8 + 1 | 0 : A8, B4 = (g6 = C4) + (C4 = kA(H4, SA2, x4, 0)) | 0, g6 = h3 + A8 | 0, GA2 = B4, C4 = C4 >>> 0 > B4 >>> 0 ? g6 + 1 | 0 : g6, g6 = (A8 = a3[f4 + 19 | 0]) >>> 24 | 0, HA2 = A8 << 8 | (FA2 = a3[f4 + 15 | 0] | a3[f4 + 16 | 0] << 8 | a3[f4 + 17 | 0] << 16 | a3[f4 + 18 | 0] << 24) >>> 24, C4 = ((LA2 = (A8 = (B4 = a3[f4 + 20 | 0]) >>> 16 | 0) | g6) >>> 3 | 0) + C4 | 0, GA2 = B4 = (g6 = (7 & LA2) << 29 | (g6 = (B4 <<= 16) | HA2) >>> 3) + GA2 | 0, B4 = g6 >>> 0 > B4 >>> 0 ? C4 + 1 | 0 : C4, HA2 = FA2 >>> 6 & 2097151, A8 = kA(p4, 0, Y4, 0), g6 = h3, C4 = A8, A8 = kA(U4, 0, d4, 0), g6 = h3 + g6 | 0, g6 = A8 >>> 0 > (C4 = C4 + A8 | 0) >>> 0 ? g6 + 1 | 0 : g6, FA2 = (A8 = C4) + (C4 = kA(K4, 0, v4, 0)) | 0, A8 = h3 + g6 | 0, A8 = C4 >>> 0 > FA2 >>> 0 ? A8 + 1 | 0 : A8, C4 = kA(b4, 0, L4, 0), g6 = h3 + A8 | 0, g6 = C4 >>> 0 > (FA2 = C4 + FA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, C4 = kA(P4, 0, dA2, 0), A8 = h3 + g6 | 0, A8 = C4 >>> 0 > (FA2 = C4 + FA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = kA(M4, 0, x4, 0), C4 = h3 + A8 | 0, C4 = g6 >>> 0 > (FA2 = g6 + FA2 | 0) >>> 0 ? C4 + 1 | 0 : C4, A8 = kA(J4, 0, m4, 0), g6 = h3 + C4 | 0, A8 = A8 >>> 0 > (FA2 = A8 + FA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, TA2 = A8 = (xA2 = FA2 + HA2 | 0) >>> 0 < FA2 >>> 0 ? A8 + 1 | 0 : A8, II2 = A8 = A8 - ((xA2 >>> 0 < 4293918720) - 1 | 0) | 0, C4 = (2097151 & A8) << 11 | (XA2 = xA2 - -1048576 | 0) >>> 21, A8 = (A8 >>> 21 | 0) + B4 | 0, VA2 = A8 = C4 >>> 0 > (OA2 = C4 + GA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, gI2 = A8 = A8 - ((OA2 >>> 0 < 4293918720) - 1 | 0) | 0, C4 = (2097151 & A8) << 11 | (lA2 = OA2 - -1048576 | 0) >>> 21, A8 = (A8 >>> 21 | 0) + i4 | 0, g6 = (C4 >>> 0 > (B4 = C4 + NA2 | 0) >>> 0 ? A8 + 1 | 0 : A8) + DA2 | 0, DA2 = (C4 = B4 + sA2 | 0) - (A8 = -2097152 & rA2) | 0, hA2 = A8 = (g6 = C4 >>> 0 < B4 >>> 0 ? g6 + 1 | 0 : g6) - ((A8 >>> 0 > C4 >>> 0) + hA2 | 0) | 0, CI2 = A8 = A8 - ((DA2 >>> 0 < 4293918720) - 1 | 0) | 0, C4 = (2097151 & A8) << 11 | (zA2 = DA2 - -1048576 | 0) >>> 21, A8 = (A8 >> 21) + vA2 | 0, B4 = A8 = C4 >>> 0 > (i4 = C4 + UA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, AI2 = A8 = A8 - ((i4 >>> 0 < 4293918720) - 1 | 0) | 0, qA2 = (2097151 & A8) << 11 | (NA2 = i4 - -1048576 | 0) >>> 21, sA2 = A8 >> 21, LA2 = _A2 - (A8 = -2097152 & nA2) | 0, YA2 = wA2 - ((A8 >>> 0 > _A2 >>> 0) + YA2 | 0) | 0, A8 = kA(D4, 0, s4, 0), jA2 = g6 = h3, UA2 = A8, FA2 = A8 - -1048576 | 0, mA2 = g6 = g6 - ((A8 >>> 0 < 4293918720) - 1 | 0) | 0, W2 = A8 = g6 >>> 21 | 0, A8 = kA(l4 = (2097151 & g6) << 11 | FA2 >>> 21, A8, -683901, -1), g6 = h3 + eA2 | 0, g6 = A8 >>> 0 > (C4 = A8 + yA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, nA2 = C4 - (A8 = -2097152 & tA2) | 0, rA2 = g6 - ((A8 >>> 0 > C4 >>> 0) + PA2 | 0) | 0, g6 = kA(S4, 0, M4, 0), A8 = h3, C4 = g6, g6 = kA(D4, 0, b4, 0), A8 = h3 + A8 | 0, A8 = g6 >>> 0 > (C4 = C4 + g6 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = kA(t4, 0, J4, 0), A8 = h3 + A8 | 0, A8 = g6 >>> 0 > (C4 = g6 + C4 | 0) >>> 0 ? A8 + 1 | 0 : A8, eA2 = (g6 = C4) + (C4 = kA(n4, 0, H4, SA2)) | 0, g6 = h3 + A8 | 0, g6 = C4 >>> 0 > eA2 >>> 0 ? g6 + 1 | 0 : g6, A8 = kA(y4, 0, p4, 0), C4 = h3 + g6 | 0, C4 = A8 >>> 0 > (eA2 = A8 + eA2 | 0) >>> 0 ? C4 + 1 | 0 : C4, A8 = kA(r4, 0, G4, _4), g6 = h3 + C4 | 0, g6 = A8 >>> 0 > (eA2 = A8 + eA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, C4 = kA(s4, 0, dA2, 0), A8 = h3 + g6 | 0, A8 = C4 >>> 0 > (eA2 = C4 + eA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = kA(k4, 0, U4, 0), A8 = h3 + A8 | 0, yA2 = C4 = g6 + eA2 | 0, eA2 = g6 >>> 0 > C4 >>> 0 ? A8 + 1 | 0 : A8, A8 = kA(t4, 0, b4, 0), g6 = h3, C4 = A8, A8 = kA(D4, 0, K4, 0), g6 = h3 + g6 | 0, g6 = A8 >>> 0 > (C4 = C4 + A8 | 0) >>> 0 ? g6 + 1 | 0 : g6, wA2 = (A8 = kA(n4, 0, M4, 0)) + C4 | 0, C4 = h3 + g6 | 0, C4 = A8 >>> 0 > wA2 >>> 0 ? C4 + 1 | 0 : C4, A8 = kA(S4, 0, J4, 0), g6 = h3 + C4 | 0, g6 = A8 >>> 0 > (wA2 = A8 + wA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, C4 = kA(H4, SA2, G4, _4), A8 = h3 + g6 | 0, A8 = C4 >>> 0 > (wA2 = C4 + wA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = kA(y4, 0, U4, 0), A8 = h3 + A8 | 0, A8 = g6 >>> 0 > (C4 = g6 + wA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, wA2 = (g6 = C4) + (C4 = kA(r4, 0, p4, 0)) | 0, g6 = h3 + A8 | 0, g6 = C4 >>> 0 > wA2 >>> 0 ? g6 + 1 | 0 : g6, A8 = kA(s4, 0, v4, 0), C4 = h3 + g6 | 0, C4 = A8 >>> 0 > (wA2 = A8 + wA2 | 0) >>> 0 ? C4 + 1 | 0 : C4, A8 = kA(k4, 0, dA2, 0), g6 = h3 + C4 | 0, HA2 = g6 = A8 >>> 0 > (GA2 = A8 + wA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, WA2 = A8 = g6 - ((GA2 >>> 0 < 4293918720) - 1 | 0) | 0, g6 = (2097151 & A8) << 11 | (_A2 = GA2 - -1048576 | 0) >>> 21, A8 = (A8 >>> 21 | 0) + eA2 | 0, tA2 = A8 = g6 >>> 0 > (PA2 = g6 + yA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, uA2 = A8 = A8 - ((PA2 >>> 0 < 4293918720) - 1 | 0) | 0, g6 = (C4 = A8 >>> 21 | 0) + rA2 | 0, nA2 = g6 = (A8 = (2097151 & A8) << 11 | (wA2 = PA2 - -1048576 | 0) >>> 21) >>> 0 > (vA2 = A8 + nA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, ZA2 = A8 = g6 - ((vA2 >>> 0 < 4293918720) - 1 | 0) | 0, eA2 = (2097151 & A8) << 11 | (rA2 = vA2 - -1048576 | 0) >>> 21, A8 = (A8 >> 21) + YA2 | 0, $2 = A8 = (g6 = eA2 + LA2 | 0) >>> 0 < eA2 >>> 0 ? A8 + 1 | 0 : A8, AA2 = g6, A8 = kA(g6, A8, -683901, -1), g6 = h3 + sA2 | 0, qA2 = C4 = A8 + qA2 | 0, sA2 = A8 >>> 0 > C4 >>> 0 ? g6 + 1 | 0 : g6, A8 = kA(t4, 0, Y4, 0), g6 = h3, C4 = A8, A8 = kA(S4, 0, d4, 0), g6 = h3 + g6 | 0, g6 = A8 >>> 0 > (C4 = C4 + A8 | 0) >>> 0 ? g6 + 1 | 0 : g6, eA2 = (A8 = C4) + (C4 = kA(G4, _4, K4, 0)) | 0, A8 = h3 + g6 | 0, A8 = C4 >>> 0 > eA2 >>> 0 ? A8 + 1 | 0 : A8, g6 = kA(p4, 0, b4, 0), C4 = h3 + A8 | 0, C4 = g6 >>> 0 > (eA2 = g6 + eA2 | 0) >>> 0 ? C4 + 1 | 0 : C4, g6 = kA(n4, 0, P4, 0), A8 = h3 + C4 | 0, A8 = g6 >>> 0 > (eA2 = g6 + eA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, C4 = kA(M4, 0, dA2, 0), g6 = h3 + A8 | 0, g6 = C4 >>> 0 > (eA2 = C4 + eA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, A8 = kA(J4, 0, U4, 0), g6 = h3 + g6 | 0, g6 = A8 >>> 0 > (C4 = A8 + eA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, eA2 = (A8 = C4) + (C4 = kA(H4, SA2, v4, 0)) | 0, A8 = h3 + g6 | 0, A8 = C4 >>> 0 > eA2 >>> 0 ? A8 + 1 | 0 : A8, g6 = kA(y4, 0, m4, 0), C4 = h3 + A8 | 0, C4 = g6 >>> 0 > (eA2 = g6 + eA2 | 0) >>> 0 ? C4 + 1 | 0 : C4, g6 = kA(r4, 0, L4, 0), A8 = h3 + C4 | 0, A8 = g6 >>> 0 > (eA2 = g6 + eA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, C4 = kA(k4, 0, x4, 0), g6 = h3 + A8 | 0, YA2 = eA2 = C4 + eA2 | 0, C4 = C4 >>> 0 > eA2 >>> 0 ? g6 + 1 | 0 : g6, g6 = (A8 = a3[f4 + 27 | 0]) >>> 24 | 0, yA2 = A8 << 8 | RA2 >>> 24, eA2 = 2097151 & ((3 & (g6 |= A8 = (eA2 = a3[f4 + 28 | 0]) >>> 16 | 0)) << 30 | (A8 = (eA2 <<= 16) | yA2) >>> 2), g6 = C4, yA2 = A8 = eA2 + YA2 | 0, eA2 = A8 >>> 0 < eA2 >>> 0 ? g6 + 1 | 0 : g6, LA2 = kA(O2, X3, 470296, 0), YA2 = h3, A8 = (C4 = (2097151 & bA2) << 11 | KA2 >>> 21) + (UA2 - (g6 = -2097152 & FA2) | 0) | 0, g6 = jA2 - ((524287 & mA2) + (g6 >>> 0 > UA2 >>> 0) | 0) + (bA2 >>> 21) | 0, IA2 = g6 = A8 >>> 0 < C4 >>> 0 ? g6 + 1 | 0 : g6, gA2 = A8, g6 = kA(A8, g6, 666643, 0), A8 = h3 + YA2 | 0, A8 = g6 >>> 0 > (C4 = g6 + LA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, FA2 = (g6 = kA(q4, z4, 654183, 0)) + C4 | 0, C4 = h3 + A8 | 0, C4 = g6 >>> 0 > FA2 >>> 0 ? C4 + 1 | 0 : C4, g6 = kA(j3, T2, -997805, -1), A8 = h3 + C4 | 0, A8 = g6 >>> 0 > (FA2 = g6 + FA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, C4 = kA(Z2, V2, 136657, 0), g6 = h3 + A8 | 0, JA2 = (A8 = (2097151 & pA2) << 11 | JA2 >>> 21) + (FA2 = C4 + FA2 | 0) | 0, g6 = (pA2 >>> 21 | 0) + (C4 >>> 0 > FA2 >>> 0 ? g6 + 1 | 0 : g6) | 0, mA2 = FA2 = eA2 - ((yA2 >>> 0 < 4293918720) - 1 | 0) | 0, A8 = (A8 >>> 0 > JA2 >>> 0 ? g6 + 1 | 0 : g6) + eA2 | 0, g6 = (eA2 = yA2 + JA2 | 0) - (C4 = -2097152 & (jA2 = yA2 - -1048576 | 0)) | 0, C4 = (A8 = (A8 = eA2 >>> 0 < JA2 >>> 0 ? A8 + 1 | 0 : A8) - ((C4 >>> 0 > eA2 >>> 0) + FA2 | 0) | 0) + sA2 | 0, LA2 = eA2 = A8 - ((g6 >>> 0 < 4293918720) - 1 | 0) | 0, UA2 = (C4 = (yA2 = g6 + qA2 | 0) >>> 0 < g6 >>> 0 ? C4 + 1 | 0 : C4) - (((g6 = -2097152 & (YA2 = g6 - -1048576 | 0)) >>> 0 > yA2 >>> 0) + eA2 | 0) | 0, RA2 = A8 = yA2 - g6 | 0, eA2 = i4, i4 = B4, $A2 = vA2 - (A8 = -2097152 & rA2) | 0, FA2 = nA2 - ((A8 >>> 0 > vA2 >>> 0) + ZA2 | 0) | 0, A8 = kA(gA2, IA2, -683901, -1), g6 = h3, B4 = (C4 = A8) + (A8 = kA(l4, W2, 136657, 0)) | 0, C4 = h3 + g6 | 0, g6 = tA2 + (A8 >>> 0 > B4 >>> 0 ? C4 + 1 | 0 : C4) | 0, wA2 = (C4 = B4 + PA2 | 0) - (A8 = -2097152 & wA2) | 0, nA2 = (g6 = C4 >>> 0 < PA2 >>> 0 ? g6 + 1 | 0 : g6) - ((A8 >>> 0 > C4 >>> 0) + uA2 | 0) | 0, g6 = kA(l4, W2, -997805, -1), A8 = h3 + HA2 | 0, A8 = g6 >>> 0 > (C4 = g6 + GA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, B4 = (g6 = kA(gA2, IA2, 136657, 0)) + C4 | 0, C4 = h3 + A8 | 0, C4 = g6 >>> 0 > B4 >>> 0 ? C4 + 1 | 0 : C4, A8 = kA(O2, X3, -683901, -1), g6 = h3 + C4 | 0, g6 = A8 >>> 0 > (B4 = A8 + B4 | 0) >>> 0 ? g6 + 1 | 0 : g6, rA2 = B4 - (A8 = -2097152 & _A2) | 0, sA2 = g6 - ((A8 >>> 0 > B4 >>> 0) + WA2 | 0) | 0, g6 = kA(S4, 0, b4, 0), A8 = h3, C4 = g6, g6 = kA(t4, 0, K4, 0), A8 = h3 + A8 | 0, A8 = g6 >>> 0 > (C4 = C4 + g6 | 0) >>> 0 ? A8 + 1 | 0 : A8, B4 = (g6 = kA(D4, 0, P4, 0)) + C4 | 0, C4 = h3 + A8 | 0, C4 = g6 >>> 0 > B4 >>> 0 ? C4 + 1 | 0 : C4, A8 = kA(G4, _4, M4, 0), g6 = h3 + C4 | 0, g6 = A8 >>> 0 > (B4 = A8 + B4 | 0) >>> 0 ? g6 + 1 | 0 : g6, C4 = kA(n4, 0, J4, 0), A8 = h3 + g6 | 0, A8 = C4 >>> 0 > (B4 = C4 + B4 | 0) >>> 0 ? A8 + 1 | 0 : A8, C4 = kA(H4, SA2, p4, 0), g6 = h3 + A8 | 0, g6 = C4 >>> 0 > (B4 = C4 + B4 | 0) >>> 0 ? g6 + 1 | 0 : g6, C4 = kA(y4, 0, dA2, 0), A8 = h3 + g6 | 0, A8 = C4 >>> 0 > (B4 = C4 + B4 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = kA(r4, 0, U4, 0), C4 = h3 + A8 | 0, C4 = g6 >>> 0 > (B4 = g6 + B4 | 0) >>> 0 ? C4 + 1 | 0 : C4, A8 = kA(s4, 0, L4, 0), g6 = h3 + C4 | 0, g6 = A8 >>> 0 > (B4 = A8 + B4 | 0) >>> 0 ? g6 + 1 | 0 : g6, C4 = kA(k4, 0, v4, 0), A8 = h3 + g6 | 0, yA2 = B4 = C4 + B4 | 0, B4 = C4 >>> 0 > B4 >>> 0 ? A8 + 1 | 0 : A8, A8 = kA(S4, 0, K4, 0), g6 = h3, C4 = A8, A8 = kA(D4, 0, d4, 0), g6 = h3 + g6 | 0, g6 = A8 >>> 0 > (C4 = C4 + A8 | 0) >>> 0 ? g6 + 1 | 0 : g6, tA2 = (A8 = C4) + (C4 = kA(n4, 0, b4, 0)) | 0, A8 = h3 + g6 | 0, A8 = C4 >>> 0 > tA2 >>> 0 ? A8 + 1 | 0 : A8, g6 = kA(t4, 0, P4, 0), C4 = h3 + A8 | 0, C4 = g6 >>> 0 > (tA2 = g6 + tA2 | 0) >>> 0 ? C4 + 1 | 0 : C4, A8 = kA(M4, 0, p4, 0), g6 = h3 + C4 | 0, g6 = A8 >>> 0 > (tA2 = A8 + tA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, C4 = kA(G4, _4, J4, 0), A8 = h3 + g6 | 0, A8 = C4 >>> 0 > (tA2 = C4 + tA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, C4 = kA(H4, SA2, U4, 0), g6 = h3 + A8 | 0, g6 = C4 >>> 0 > (tA2 = C4 + tA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, C4 = kA(y4, 0, v4, 0), A8 = h3 + g6 | 0, A8 = C4 >>> 0 > (tA2 = C4 + tA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = kA(r4, 0, dA2, 0), C4 = h3 + A8 | 0, C4 = g6 >>> 0 > (tA2 = g6 + tA2 | 0) >>> 0 ? C4 + 1 | 0 : C4, tA2 = (A8 = kA(s4, 0, m4, 0)) + tA2 | 0, g6 = h3 + C4 | 0, C4 = kA(k4, 0, L4, 0), A8 = h3 + (A8 >>> 0 > tA2 >>> 0 ? g6 + 1 | 0 : g6) | 0, vA2 = A8 = C4 >>> 0 > (ZA2 = C4 + tA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, BA2 = A8 = A8 - ((ZA2 >>> 0 < 4293918720) - 1 | 0) | 0, C4 = (2097151 & A8) << 11 | (bA2 = ZA2 - -1048576 | 0) >>> 21, A8 = (A8 >>> 21 | 0) + B4 | 0, KA2 = A8 = C4 >>> 0 > (qA2 = C4 + yA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, QA2 = A8 = A8 - ((qA2 >>> 0 < 4293918720) - 1 | 0) | 0, C4 = (2097151 & A8) << 11 | (pA2 = qA2 - -1048576 | 0) >>> 21, A8 = (A8 >>> 21 | 0) + sA2 | 0, JA2 = A8 = C4 >>> 0 > (PA2 = C4 + rA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, iA2 = A8 = A8 - ((PA2 >>> 0 < 4293918720) - 1 | 0) | 0, C4 = (2097151 & A8) << 11 | (HA2 = PA2 - -1048576 | 0) >>> 21, A8 = (A8 >> 21) + nA2 | 0, B4 = A8 = C4 >>> 0 > (rA2 = C4 + wA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, nA2 = A8 = A8 - ((rA2 >>> 0 < 4293918720) - 1 | 0) | 0, sA2 = (2097151 & A8) << 11 | (C4 = rA2 - -1048576 | 0) >>> 21, A8 = (A8 >> 21) + FA2 | 0, WA2 = A8 = (yA2 = sA2 + $A2 | 0) >>> 0 < sA2 >>> 0 ? A8 + 1 | 0 : A8, uA2 = yA2, A8 = kA(yA2, A8, -683901, -1), g6 = h3, yA2 = A8, A8 = kA(AA2, $2, 136657, 0), g6 = h3 + g6 | 0, A8 = (A8 >>> 0 > (yA2 = yA2 + A8 | 0) >>> 0 ? g6 + 1 | 0 : g6) + i4 | 0, BI2 = (i4 = eA2 + yA2 | 0) - (g6 = -2097152 & NA2) | 0, QI2 = (A8 = i4 >>> 0 < yA2 >>> 0 ? A8 + 1 | 0 : A8) - ((g6 >>> 0 > i4 >>> 0) + AI2 | 0) | 0, sA2 = DA2, yA2 = hA2, DA2 = kA(uA2, WA2, 136657, 0), i4 = h3, $A2 = A8 = rA2 - (g6 = -2097152 & C4) | 0, CA2 = B4 = B4 - ((g6 >>> 0 > rA2 >>> 0) + nA2 | 0) | 0, C4 = kA(AA2, $2, -997805, -1), g6 = h3 + i4 | 0, g6 = C4 >>> 0 > (DA2 = C4 + DA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, C4 = kA(A8, B4, -683901, -1), A8 = h3 + g6 | 0, AI2 = B4 = C4 + DA2 | 0, eA2 = C4 >>> 0 > B4 >>> 0 ? A8 + 1 | 0 : A8, A8 = kA(Z2, V2, 470296, 0), g6 = h3, B4 = (C4 = A8) + (A8 = kA(j3, T2, 666643, 0)) | 0, C4 = h3 + g6 | 0, g6 = VA2 + (A8 >>> 0 > B4 >>> 0 ? C4 + 1 | 0 : C4) | 0, FA2 = A8 = B4 + OA2 | 0, i4 = g6 = A8 >>> 0 < OA2 >>> 0 ? g6 + 1 | 0 : g6, g6 = kA(Z2, V2, 666643, 0), A8 = h3 + TA2 | 0, A8 = g6 >>> 0 > (C4 = g6 + xA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, wA2 = C4 - (g6 = -2097152 & XA2) | 0, GA2 = A8 - ((g6 >>> 0 > C4 >>> 0) + II2 | 0) | 0, g6 = kA(U4, 0, Y4, 0), A8 = h3, C4 = g6, g6 = kA(d4, 0, dA2, 0), A8 = h3 + A8 | 0, A8 = g6 >>> 0 > (C4 = C4 + g6 | 0) >>> 0 ? A8 + 1 | 0 : A8, B4 = (g6 = C4) + (C4 = kA(K4, 0, L4, 0)) | 0, g6 = h3 + A8 | 0, g6 = C4 >>> 0 > B4 >>> 0 ? g6 + 1 | 0 : g6, C4 = kA(b4, 0, m4, 0), A8 = h3 + g6 | 0, A8 = C4 >>> 0 > (B4 = C4 + B4 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = kA(P4, 0, v4, 0), C4 = h3 + A8 | 0, C4 = g6 >>> 0 > (B4 = g6 + B4 | 0) >>> 0 ? C4 + 1 | 0 : C4, A8 = kA(J4, 0, x4, 0), g6 = h3 + C4 | 0, rA2 = B4 = A8 + B4 | 0, B4 = A8 >>> 0 > B4 >>> 0 ? g6 + 1 | 0 : g6, g6 = (A8 = a3[f4 + 14 | 0]) >>> 24 | 0, DA2 = A8 << 8 | (nA2 = a3[f4 + 10 | 0] | a3[f4 + 11 | 0] << 8 | a3[f4 + 12 | 0] << 16 | a3[f4 + 13 | 0] << 24) >>> 24, g6 = 2097151 & ((1 & (g6 |= C4 = (A8 = a3[f4 + 15 | 0]) >>> 16 | 0)) << 31 | (A8 = DA2 | A8 << 16) >>> 1), A8 = B4, rA2 = C4 = g6 + rA2 | 0, B4 = g6 >>> 0 > C4 >>> 0 ? A8 + 1 | 0 : A8, DA2 = nA2 >>> 4 & 2097151, A8 = kA(Y4, 0, dA2, 0), g6 = h3, C4 = A8, A8 = kA(d4, 0, v4, 0), g6 = h3 + g6 | 0, g6 = A8 >>> 0 > (C4 = C4 + A8 | 0) >>> 0 ? g6 + 1 | 0 : g6, A8 = kA(K4, 0, m4, 0), g6 = h3 + g6 | 0, g6 = A8 >>> 0 > (C4 = A8 + C4 | 0) >>> 0 ? g6 + 1 | 0 : g6, nA2 = (A8 = C4) + (C4 = kA(b4, 0, x4, 0)) | 0, A8 = h3 + g6 | 0, A8 = C4 >>> 0 > nA2 >>> 0 ? A8 + 1 | 0 : A8, g6 = kA(P4, 0, L4, 0), C4 = h3 + A8 | 0, A8 = g6 >>> 0 > (nA2 = g6 + nA2 | 0) >>> 0 ? C4 + 1 | 0 : C4, hA2 = A8 = (XA2 = DA2 + nA2 | 0) >>> 0 < nA2 >>> 0 ? A8 + 1 | 0 : A8, EA2 = A8 = A8 - ((XA2 >>> 0 < 4293918720) - 1 | 0) | 0, g6 = (C4 = A8 >>> 21 | 0) + B4 | 0, _A2 = g6 = (A8 = (2097151 & A8) << 11 | (NA2 = XA2 - -1048576 | 0) >>> 21) >>> 0 > (VA2 = A8 + rA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, oA2 = A8 = g6 - ((VA2 >>> 0 < 4293918720) - 1 | 0) | 0, g6 = (2097151 & A8) << 11 | (tA2 = VA2 - -1048576 | 0) >>> 21, A8 = (A8 >>> 21 | 0) + GA2 | 0, nA2 = A8 = g6 >>> 0 > (wA2 = g6 + wA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, fA2 = A8 = A8 - ((wA2 >>> 0 < 4293918720) - 1 | 0) | 0, g6 = (C4 = A8 >> 21) + i4 | 0, II2 = g6 = (g6 = (A8 = (2097151 & A8) << 11 | (rA2 = wA2 - -1048576 | 0) >>> 21) >>> 0 > (B4 = A8 + FA2 | 0) >>> 0 ? g6 + 1 | 0 : g6) - (((C4 = -2097152 & lA2) >>> 0 > B4 >>> 0) + gI2 | 0) | 0, lA2 = A8 = B4 - C4 | 0, DA2 = A8 - -1048576 | 0, gI2 = A8 = g6 - ((A8 >>> 0 < 4293918720) - 1 | 0) | 0, C4 = (g6 = A8 >> 21) + eA2 | 0, g6 = ((A8 = (2097151 & A8) << 11 | DA2 >>> 21) >>> 0 > (B4 = A8 + AI2 | 0) >>> 0 ? C4 + 1 | 0 : C4) + yA2 | 0, xA2 = g6 = (g6 = (A8 = B4) >>> 0 > (B4 = B4 + sA2 | 0) >>> 0 ? g6 + 1 | 0 : g6) - (((C4 = -2097152 & zA2) >>> 0 > B4 >>> 0) + CI2 | 0) | 0, yA2 = A8 = B4 - C4 | 0, i4 = A8 - -1048576 | 0, TA2 = A8 = g6 - ((A8 >>> 0 < 4293918720) - 1 | 0) | 0, C4 = (g6 = A8 >> 21) + QI2 | 0, zA2 = A8 = (C4 = (A8 = (2097151 & A8) << 11 | i4 >>> 21) >>> 0 > (eA2 = A8 + BI2 | 0) >>> 0 ? C4 + 1 | 0 : C4) - ((eA2 >>> 0 < 4293918720) - 1 | 0) | 0, FA2 = RA2 - -1048576 | 0, GA2 = UA2 - ((RA2 >>> 0 < 4293918720) - 1 | 0) | 0, sA2 = (2097151 & A8) << 11 | (B4 = eA2 - -1048576 | 0) >>> 21, A8 = (A8 >> 21) + UA2 | 0, CI2 = (RA2 = sA2 + RA2 | 0) - (g6 = -2097152 & FA2) | 0, BI2 = (sA2 >>> 0 > RA2 >>> 0 ? A8 + 1 | 0 : A8) - ((g6 >>> 0 > RA2 >>> 0) + GA2 | 0) | 0, QI2 = eA2 - (A8 = -2097152 & B4) | 0, AI2 = C4 - ((A8 >>> 0 > eA2 >>> 0) + zA2 | 0) | 0, OA2 = yA2 - (A8 = -2097152 & i4) | 0, RA2 = xA2 - ((A8 >>> 0 > yA2 >>> 0) + TA2 | 0) | 0, A8 = kA(uA2, WA2, -997805, -1), g6 = h3, C4 = A8, A8 = kA(AA2, $2, 654183, 0), g6 = h3 + g6 | 0, g6 = A8 >>> 0 > (C4 = C4 + A8 | 0) >>> 0 ? g6 + 1 | 0 : g6, B4 = (A8 = C4) + (C4 = kA($A2, CA2, 136657, 0)) | 0, A8 = h3 + g6 | 0, g6 = II2 + (C4 >>> 0 > B4 >>> 0 ? A8 + 1 | 0 : A8) | 0, xA2 = (C4 = B4 + lA2 | 0) - (A8 = -2097152 & DA2) | 0, TA2 = (g6 = C4 >>> 0 < lA2 >>> 0 ? g6 + 1 | 0 : g6) - ((A8 >>> 0 > C4 >>> 0) + gI2 | 0) | 0, lA2 = PA2 - (A8 = -2097152 & HA2) | 0, UA2 = JA2 - ((A8 >>> 0 > PA2 >>> 0) + iA2 | 0) | 0, g6 = kA(gA2, IA2, -997805, -1), A8 = h3, C4 = g6, g6 = kA(l4, W2, 654183, 0), A8 = h3 + A8 | 0, A8 = g6 >>> 0 > (C4 = C4 + g6 | 0) >>> 0 ? A8 + 1 | 0 : A8, B4 = (g6 = C4) + (C4 = kA(O2, X3, 136657, 0)) | 0, g6 = h3 + A8 | 0, g6 = C4 >>> 0 > B4 >>> 0 ? g6 + 1 | 0 : g6, A8 = kA(q4, z4, -683901, -1), C4 = h3 + g6 | 0, g6 = KA2 + (A8 >>> 0 > (B4 = A8 + B4 | 0) >>> 0 ? C4 + 1 | 0 : C4) | 0, HA2 = (C4 = B4 + qA2 | 0) - (A8 = -2097152 & pA2) | 0, JA2 = (g6 = C4 >>> 0 < qA2 >>> 0 ? g6 + 1 | 0 : g6) - ((A8 >>> 0 > C4 >>> 0) + QA2 | 0) | 0, g6 = kA(gA2, IA2, 654183, 0), A8 = h3, C4 = g6, g6 = kA(l4, W2, 470296, 0), A8 = h3 + A8 | 0, A8 = g6 >>> 0 > (C4 = C4 + g6 | 0) >>> 0 ? A8 + 1 | 0 : A8, B4 = (g6 = kA(O2, X3, -997805, -1)) + C4 | 0, C4 = h3 + A8 | 0, g6 = vA2 + (g6 >>> 0 > B4 >>> 0 ? C4 + 1 | 0 : C4) | 0, g6 = (A8 = B4 + ZA2 | 0) >>> 0 < ZA2 >>> 0 ? g6 + 1 | 0 : g6, C4 = A8, A8 = kA(q4, z4, 136657, 0), g6 = h3 + g6 | 0, g6 = A8 >>> 0 > (C4 = C4 + A8 | 0) >>> 0 ? g6 + 1 | 0 : g6, B4 = (A8 = C4) + (C4 = kA(j3, T2, -683901, -1)) | 0, A8 = h3 + g6 | 0, DA2 = B4 - (g6 = -2097152 & bA2) | 0, i4 = (C4 >>> 0 > B4 >>> 0 ? A8 + 1 | 0 : A8) - ((g6 >>> 0 > B4 >>> 0) + BA2 | 0) | 0, B4 = (a3[f4 + 28 | 0] | a3[f4 + 29 | 0] << 8 | a3[f4 + 30 | 0] << 16 | a3[f4 + 31 | 0] << 24) >>> 7 | 0, A8 = kA(D4, 0, Y4, 0), g6 = h3, eA2 = (C4 = A8) + (A8 = kA(t4, 0, d4, 0)) | 0, C4 = h3 + g6 | 0, C4 = A8 >>> 0 > eA2 >>> 0 ? C4 + 1 | 0 : C4, A8 = kA(n4, 0, K4, 0), g6 = h3 + C4 | 0, g6 = A8 >>> 0 > (eA2 = A8 + eA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, C4 = kA(G4, _4, b4, 0), A8 = h3 + g6 | 0, A8 = C4 >>> 0 > (eA2 = C4 + eA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, C4 = kA(S4, 0, P4, 0), g6 = h3 + A8 | 0, g6 = C4 >>> 0 > (eA2 = C4 + eA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, C4 = kA(M4, 0, U4, 0), A8 = h3 + g6 | 0, A8 = C4 >>> 0 > (eA2 = C4 + eA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = kA(p4, 0, J4, 0), C4 = h3 + A8 | 0, C4 = g6 >>> 0 > (eA2 = g6 + eA2 | 0) >>> 0 ? C4 + 1 | 0 : C4, A8 = kA(H4, SA2, dA2, 0), g6 = h3 + C4 | 0, g6 = A8 >>> 0 > (eA2 = A8 + eA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, C4 = kA(y4, 0, L4, 0), A8 = h3 + g6 | 0, A8 = C4 >>> 0 > (eA2 = C4 + eA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, C4 = kA(r4, 0, v4, 0), g6 = h3 + A8 | 0, g6 = C4 >>> 0 > (eA2 = C4 + eA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, C4 = kA(s4, 0, x4, 0), A8 = h3 + g6 | 0, A8 = C4 >>> 0 > (eA2 = C4 + eA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = kA(k4, 0, m4, 0), C4 = h3 + A8 | 0, g6 = C4 = g6 >>> 0 > (eA2 = g6 + eA2 | 0) >>> 0 ? C4 + 1 | 0 : C4, KA2 = (C4 = (2097151 & mA2) << 11 | jA2 >>> 21) + (A8 = B4 + eA2 | 0) | 0, A8 = (mA2 >>> 21 | 0) + (g6 = A8 >>> 0 < eA2 >>> 0 ? g6 + 1 | 0 : g6) | 0, sA2 = A8 = C4 >>> 0 > KA2 >>> 0 ? A8 + 1 | 0 : A8, zA2 = g6 = A8 - ((KA2 >>> 0 < 4293918720) - 1 | 0) | 0, C4 = (A8 = g6 >>> 21 | 0) + i4 | 0, yA2 = C4 = (g6 = (2097151 & g6) << 11 | (SA2 = KA2 - -1048576 | 0) >>> 21) >>> 0 > (pA2 = g6 + DA2 | 0) >>> 0 ? C4 + 1 | 0 : C4, jA2 = g6 = C4 - ((pA2 >>> 0 < 4293918720) - 1 | 0) | 0, A8 = (A8 = g6 >> 21) + JA2 | 0, DA2 = A8 = (g6 = (2097151 & g6) << 11 | (eA2 = pA2 - -1048576 | 0) >>> 21) >>> 0 > (HA2 = g6 + HA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, bA2 = g6 = A8 - ((HA2 >>> 0 < 4293918720) - 1 | 0) | 0, C4 = (A8 = g6 >> 21) + UA2 | 0, mA2 = C4 = (g6 = (B4 = (2097151 & g6) << 11 | (i4 = HA2 - -1048576 | 0) >>> 21) + lA2 | 0) >>> 0 < B4 >>> 0 ? C4 + 1 | 0 : C4, UA2 = g6, A8 = kA(g6, C4, -683901, -1), g6 = h3 + TA2 | 0, JA2 = C4 = A8 + xA2 | 0, B4 = A8 >>> 0 > C4 >>> 0 ? g6 + 1 | 0 : g6, g6 = kA(AA2, $2, 470296, 0), A8 = h3 + nA2 | 0, A8 = g6 >>> 0 > (wA2 = g6 + wA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = kA(uA2, WA2, 654183, 0), A8 = h3 + (A8 - (((C4 = -2097152 & rA2) >>> 0 > wA2 >>> 0) + fA2 | 0) | 0) | 0, A8 = g6 >>> 0 > (rA2 = g6 + (wA2 - C4 | 0) | 0) >>> 0 ? A8 + 1 | 0 : A8, C4 = kA($A2, CA2, -997805, -1), g6 = h3 + A8 | 0, g6 = C4 >>> 0 > (rA2 = C4 + rA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, vA2 = C4 = HA2 - (A8 = -2097152 & i4) | 0, dA2 = DA2 = DA2 - ((A8 >>> 0 > HA2 >>> 0) + bA2 | 0) | 0, rA2 = (i4 = kA(UA2, mA2, 136657, 0)) + rA2 | 0, A8 = h3 + g6 | 0, C4 = kA(C4, DA2, -683901, -1), g6 = h3 + (i4 >>> 0 > rA2 >>> 0 ? A8 + 1 | 0 : A8) | 0, DA2 = g6 = C4 >>> 0 > (nA2 = C4 + rA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, bA2 = A8 = g6 - ((nA2 >>> 0 < 4293918720) - 1 | 0) | 0, g6 = (2097151 & A8) << 11 | (i4 = nA2 - -1048576 | 0) >>> 21, A8 = (A8 >> 21) + B4 | 0, HA2 = g6 = (A8 = g6 >>> 0 > (rA2 = g6 + JA2 | 0) >>> 0 ? A8 + 1 | 0 : A8) - ((rA2 >>> 0 < 4293918720) - 1 | 0) | 0, wA2 = (2097151 & g6) << 11 | (B4 = rA2 - -1048576 | 0) >>> 21, g6 = (g6 >> 21) + RA2 | 0, OA2 = JA2 = wA2 + OA2 | 0, JA2 = wA2 >>> 0 > JA2 >>> 0 ? g6 + 1 | 0 : g6, RA2 = rA2 - (g6 = -2097152 & B4) | 0, ZA2 = A8 - ((g6 >>> 0 > rA2 >>> 0) + HA2 | 0) | 0, xA2 = nA2 - (A8 = -2097152 & i4) | 0, TA2 = DA2 - ((A8 >>> 0 > nA2 >>> 0) + bA2 | 0) | 0, A8 = kA(AA2, $2, 666643, 0), C4 = _A2 + h3 | 0, C4 = (i4 = A8 + VA2 | 0) >>> 0 < VA2 >>> 0 ? C4 + 1 | 0 : C4, B4 = (A8 = kA(uA2, WA2, 470296, 0)) + (i4 - (g6 = -2097152 & tA2) | 0) | 0, g6 = h3 + (C4 - ((g6 >>> 0 > i4 >>> 0) + oA2 | 0) | 0) | 0, g6 = A8 >>> 0 > B4 >>> 0 ? g6 + 1 | 0 : g6, C4 = kA($A2, CA2, 654183, 0), A8 = h3 + g6 | 0, rA2 = B4 = C4 + B4 | 0, B4 = C4 >>> 0 > B4 >>> 0 ? A8 + 1 | 0 : A8, i4 = pA2 - (A8 = -2097152 & eA2) | 0, DA2 = yA2 - ((A8 >>> 0 > pA2 >>> 0) + jA2 | 0) | 0, A8 = kA(gA2, IA2, 470296, 0), g6 = h3, C4 = A8, A8 = kA(l4, W2, 666643, 0), g6 = h3 + g6 | 0, g6 = A8 >>> 0 > (C4 = C4 + A8 | 0) >>> 0 ? g6 + 1 | 0 : g6, A8 = kA(O2, X3, 654183, 0), g6 = h3 + g6 | 0, g6 = A8 >>> 0 > (C4 = A8 + C4 | 0) >>> 0 ? g6 + 1 | 0 : g6, eA2 = (A8 = C4) + (C4 = kA(q4, z4, -997805, -1)) | 0, A8 = h3 + g6 | 0, A8 = C4 >>> 0 > eA2 >>> 0 ? A8 + 1 | 0 : A8, g6 = kA(j3, T2, 136657, 0), A8 = h3 + A8 | 0, A8 = g6 >>> 0 > (C4 = g6 + eA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, eA2 = (g6 = kA(Z2, V2, -683901, -1)) + C4 | 0, C4 = h3 + A8 | 0, g6 = sA2 + (g6 >>> 0 > eA2 >>> 0 ? C4 + 1 | 0 : C4) | 0, pA2 = (C4 = (2097151 & LA2) << 11 | YA2 >>> 21) + ((eA2 = eA2 + KA2 | 0) - (A8 = -2097152 & SA2) | 0) | 0, A8 = ((g6 = eA2 >>> 0 < KA2 >>> 0 ? g6 + 1 | 0 : g6) - ((A8 >>> 0 > eA2 >>> 0) + zA2 | 0) | 0) + (LA2 >> 21) | 0, HA2 = A8 = C4 >>> 0 > pA2 >>> 0 ? A8 + 1 | 0 : A8, lA2 = A8 = A8 - ((pA2 >>> 0 < 4293918720) - 1 | 0) | 0, g6 = i4, i4 = (2097151 & A8) << 11 | (tA2 = pA2 - -1048576 | 0) >>> 21, A8 = (A8 >> 21) + DA2 | 0, bA2 = A8 = (C4 = g6 + i4 | 0) >>> 0 < i4 >>> 0 ? A8 + 1 | 0 : A8, KA2 = C4, A8 = kA(C4, A8, -683901, -1), g6 = h3 + B4 | 0, g6 = A8 >>> 0 > (C4 = A8 + rA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, B4 = (A8 = C4) + (C4 = kA(UA2, mA2, -997805, -1)) | 0, A8 = h3 + g6 | 0, A8 = C4 >>> 0 > B4 >>> 0 ? A8 + 1 | 0 : A8, g6 = kA(vA2, dA2, 136657, 0), C4 = h3 + A8 | 0, YA2 = B4 = g6 + B4 | 0, yA2 = g6 >>> 0 > B4 >>> 0 ? C4 + 1 | 0 : C4, rA2 = XA2 - (A8 = -2097152 & NA2) | 0, sA2 = hA2 - ((A8 >>> 0 > XA2 >>> 0) + EA2 | 0) | 0, g6 = kA(Y4, 0, v4, 0), A8 = h3, C4 = g6, g6 = kA(d4, 0, L4, 0), A8 = h3 + A8 | 0, A8 = g6 >>> 0 > (C4 = C4 + g6 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = kA(K4, 0, x4, 0), A8 = h3 + A8 | 0, A8 = g6 >>> 0 > (C4 = g6 + C4 | 0) >>> 0 ? A8 + 1 | 0 : A8, B4 = (g6 = kA(P4, 0, m4, 0)) + C4 | 0, C4 = h3 + A8 | 0, g6 = g6 >>> 0 > B4 >>> 0 ? C4 + 1 | 0 : C4, SA2 = C4 = (A8 = (a3[f4 + 7 | 0] | a3[f4 + 8 | 0] << 8 | a3[f4 + 9 | 0] << 16 | a3[f4 + 10 | 0] << 24) >>> 7 & 2097151) + B4 | 0, eA2 = A8 >>> 0 > C4 >>> 0 ? g6 + 1 | 0 : g6, A8 = kA(Y4, 0, L4, 0), g6 = h3, C4 = A8, A8 = kA(d4, 0, m4, 0), g6 = h3 + g6 | 0, g6 = A8 >>> 0 > (C4 = C4 + A8 | 0) >>> 0 ? g6 + 1 | 0 : g6, B4 = (A8 = C4) + (C4 = kA(P4, 0, x4, 0)) | 0, A8 = h3 + g6 | 0, DA2 = B4, B4 = C4 >>> 0 > B4 >>> 0 ? A8 + 1 | 0 : A8, A8 = (g6 = a3[f4 + 6 | 0]) >>> 24 | 0, i4 = g6 << 8 | (zA2 = a3[f4 + 2 | 0] | a3[f4 + 3 | 0] << 8 | a3[f4 + 4 | 0] << 16 | a3[f4 + 5 | 0] << 24) >>> 24, C4 = A8, g6 = (A8 = a3[f4 + 7 | 0]) >>> 16 | 0, g6 |= C4, C4 = B4, i4 = C4 = (A8 = 2097151 & ((3 & g6) << 30 | (A8 = A8 << 16 | i4) >>> 2)) >>> 0 > (DA2 = A8 + DA2 | 0) >>> 0 ? C4 + 1 | 0 : C4, qA2 = A8 = C4 - ((DA2 >>> 0 < 4293918720) - 1 | 0) | 0, C4 = (2097151 & A8) << 11 | (_A2 = DA2 - -1048576 | 0) >>> 21, A8 = (A8 >>> 21 | 0) + eA2 | 0, wA2 = A8 = C4 >>> 0 > (hA2 = C4 + SA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, jA2 = A8 = A8 - ((hA2 >>> 0 < 4293918720) - 1 | 0) | 0, C4 = (g6 = A8 >>> 21 | 0) + sA2 | 0, C4 = (A8 = (2097151 & A8) << 11 | (nA2 = hA2 - -1048576 | 0) >>> 21) >>> 0 > (B4 = A8 + rA2 | 0) >>> 0 ? C4 + 1 | 0 : C4, g6 = kA(uA2, WA2, 666643, 0), A8 = h3 + C4 | 0, A8 = g6 >>> 0 > (B4 = g6 + B4 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = kA($A2, CA2, 470296, 0), A8 = h3 + A8 | 0, A8 = g6 >>> 0 > (C4 = g6 + B4 | 0) >>> 0 ? A8 + 1 | 0 : A8, B4 = (g6 = C4) + (C4 = kA(KA2, bA2, 136657, 0)) | 0, g6 = h3 + A8 | 0, g6 = C4 >>> 0 > B4 >>> 0 ? g6 + 1 | 0 : g6, A8 = kA(UA2, mA2, 654183, 0), g6 = h3 + g6 | 0, g6 = A8 >>> 0 > (C4 = A8 + B4 | 0) >>> 0 ? g6 + 1 | 0 : g6, rA2 = (A8 = kA(vA2, dA2, -997805, -1)) + C4 | 0, C4 = h3 + g6 | 0, sA2 = C4 = A8 >>> 0 > rA2 >>> 0 ? C4 + 1 | 0 : C4, LA2 = A8 = C4 - ((rA2 >>> 0 < 4293918720) - 1 | 0) | 0, C4 = (2097151 & A8) << 11 | (SA2 = rA2 - -1048576 | 0) >>> 21, A8 = (A8 >> 21) + yA2 | 0, YA2 = C4 = (A8 = C4 >>> 0 > (B4 = C4 + YA2 | 0) >>> 0 ? A8 + 1 | 0 : A8) - ((B4 >>> 0 < 4293918720) - 1 | 0) | 0, eA2 = (2097151 & C4) << 11 | (yA2 = B4 - -1048576 | 0) >>> 21, C4 = (C4 >> 21) + TA2 | 0, PA2 = NA2 = eA2 + xA2 | 0, NA2 = eA2 >>> 0 > NA2 >>> 0 ? C4 + 1 | 0 : C4, eA2 = B4, g6 = A8, B4 = (pA2 - (A8 = -2097152 & tA2) | 0) + (tA2 = (2097151 & GA2) << 11 | FA2 >>> 21) | 0, A8 = (HA2 - ((A8 >>> 0 > pA2 >>> 0) + lA2 | 0) | 0) + (GA2 >> 21) | 0, FA2 = A8 = B4 >>> 0 < tA2 >>> 0 ? A8 + 1 | 0 : A8, xA2 = A8 = A8 - ((B4 >>> 0 < 4293918720) - 1 | 0) | 0, pA2 = C4 = A8 >> 21, A8 = kA(uA2 = (2097151 & A8) << 11 | (GA2 = B4 - -1048576 | 0) >>> 21, C4, -683901, -1), g6 = h3 + g6 | 0, g6 = A8 >>> 0 > (C4 = A8 + eA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, TA2 = C4 - (A8 = -2097152 & yA2) | 0, XA2 = g6 - ((A8 >>> 0 > C4 >>> 0) + YA2 | 0) | 0, g6 = kA(uA2, pA2, 136657, 0), A8 = h3 + sA2 | 0, A8 = g6 >>> 0 > (C4 = g6 + rA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, VA2 = C4 - (g6 = -2097152 & SA2) | 0, LA2 = A8 - ((g6 >>> 0 > C4 >>> 0) + LA2 | 0) | 0, g6 = kA($A2, CA2, 666643, 0), A8 = h3 + (wA2 - (((C4 = -2097152 & nA2) >>> 0 > hA2 >>> 0) + jA2 | 0) | 0) | 0, A8 = g6 >>> 0 > (eA2 = g6 + (hA2 - C4 | 0) | 0) >>> 0 ? A8 + 1 | 0 : A8, C4 = kA(KA2, bA2, -997805, -1), g6 = h3 + A8 | 0, g6 = C4 >>> 0 > (eA2 = C4 + eA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, A8 = kA(UA2, mA2, 470296, 0), C4 = h3 + g6 | 0, C4 = A8 >>> 0 > (eA2 = A8 + eA2 | 0) >>> 0 ? C4 + 1 | 0 : C4, g6 = kA(vA2, dA2, 654183, 0), A8 = h3 + C4 | 0, YA2 = eA2 = g6 + eA2 | 0, sA2 = g6 >>> 0 > eA2 >>> 0 ? A8 + 1 | 0 : A8, C4 = zA2 >>> 5 & 2097151, A8 = kA(Y4, 0, m4, 0), g6 = h3, yA2 = A8, A8 = kA(d4, 0, x4, 0), g6 = h3 + g6 | 0, A8 = A8 >>> 0 > (eA2 = yA2 + A8 | 0) >>> 0 ? g6 + 1 | 0 : g6, yA2 = g6 = C4 + eA2 | 0, C4 = A8 = g6 >>> 0 < eA2 >>> 0 ? A8 + 1 | 0 : A8, hA2 = (g6 = kA(Y4, 0, x4, 0)) + (A8 = (A8 = a3[f4 + 2 | 0]) << 16 & 2031616 | a3[0 | f4] | a3[f4 + 1 | 0] << 8) | 0, g6 = h3, tA2 = g6 = A8 >>> 0 > hA2 >>> 0 ? g6 + 1 | 0 : g6, lA2 = g6 = g6 - ((hA2 >>> 0 < 4293918720) - 1 | 0) | 0, A8 = (A8 = g6 >>> 21 | 0) + C4 | 0, nA2 = A8 = (g6 = (2097151 & g6) << 11 | (wA2 = hA2 - -1048576 | 0) >>> 21) >>> 0 > (HA2 = g6 + yA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, zA2 = g6 = A8 - ((HA2 >>> 0 < 4293918720) - 1 | 0) | 0, C4 = (2097151 & g6) << 11 | (rA2 = HA2 - -1048576 | 0) >>> 21, g6 = (g6 >>> 21 | 0) + i4 | 0, g6 = C4 >>> 0 > (eA2 = C4 + DA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, C4 = kA(KA2, bA2, 654183, 0), A8 = h3 + (g6 - (((i4 = -2097152 & _A2) >>> 0 > eA2 >>> 0) + qA2 | 0) | 0) | 0, A8 = C4 >>> 0 > (DA2 = C4 + (eA2 - i4 | 0) | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = kA(UA2, mA2, 666643, 0), A8 = h3 + A8 | 0, A8 = g6 >>> 0 > (C4 = g6 + DA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, SA2 = (g6 = C4) + (C4 = kA(vA2, dA2, 470296, 0)) | 0, g6 = h3 + A8 | 0, yA2 = g6 = C4 >>> 0 > SA2 >>> 0 ? g6 + 1 | 0 : g6, jA2 = g6 = g6 - ((SA2 >>> 0 < 4293918720) - 1 | 0) | 0, C4 = (A8 = g6 >> 21) + sA2 | 0, _A2 = g6 = (C4 = (g6 = (2097151 & g6) << 11 | (eA2 = SA2 - -1048576 | 0) >>> 21) >>> 0 > (DA2 = g6 + YA2 | 0) >>> 0 ? C4 + 1 | 0 : C4) - ((DA2 >>> 0 < 4293918720) - 1 | 0) | 0, sA2 = (2097151 & g6) << 11 | (i4 = DA2 - -1048576 | 0) >>> 21, g6 = (g6 >> 21) + LA2 | 0, mA2 = UA2 = sA2 + VA2 | 0, sA2 = sA2 >>> 0 > UA2 >>> 0 ? g6 + 1 | 0 : g6, A8 = kA(uA2, pA2, -997805, -1), g6 = h3 + C4 | 0, g6 = A8 >>> 0 > (DA2 = A8 + DA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, LA2 = DA2 - (A8 = -2097152 & i4) | 0, YA2 = g6 - ((A8 >>> 0 > DA2 >>> 0) + _A2 | 0) | 0, g6 = kA(uA2, pA2, 654183, 0), A8 = h3 + yA2 | 0, A8 = g6 >>> 0 > (C4 = g6 + SA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, UA2 = C4 - (g6 = -2097152 & eA2) | 0, _A2 = A8 - ((g6 >>> 0 > C4 >>> 0) + jA2 | 0) | 0, A8 = kA(KA2, bA2, 470296, 0), C4 = h3 + (nA2 - (((g6 = -2097152 & rA2) >>> 0 > HA2 >>> 0) + zA2 | 0) | 0) | 0, C4 = A8 >>> 0 > (i4 = A8 + (HA2 - g6 | 0) | 0) >>> 0 ? C4 + 1 | 0 : C4, g6 = kA(vA2, dA2, 666643, 0), A8 = h3 + C4 | 0, DA2 = i4 = g6 + i4 | 0, C4 = g6 >>> 0 > i4 >>> 0 ? A8 + 1 | 0 : A8, g6 = kA(KA2, bA2, 666643, 0), A8 = h3 + (tA2 - ((4095 & lA2) + ((i4 = -2097152 & wA2) >>> 0 > hA2 >>> 0) | 0) | 0) | 0, SA2 = A8 = g6 >>> 0 > (rA2 = g6 + (hA2 - i4 | 0) | 0) >>> 0 ? A8 + 1 | 0 : A8, tA2 = A8 = A8 - ((rA2 >>> 0 < 4293918720) - 1 | 0) | 0, i4 = (2097151 & A8) << 11 | (yA2 = rA2 - -1048576 | 0) >>> 21, A8 = (A8 >> 21) + C4 | 0, C4 = A8 = i4 >>> 0 > (eA2 = i4 + DA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, wA2 = A8 = A8 - ((eA2 >>> 0 < 4293918720) - 1 | 0) | 0, i4 = (2097151 & A8) << 11 | (DA2 = eA2 - -1048576 | 0) >>> 21, A8 = (A8 >> 21) + _A2 | 0, i4 = i4 >>> 0 > (nA2 = i4 + UA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, A8 = kA(uA2, pA2, 470296, 0), C4 = h3 + C4 | 0, C4 = A8 >>> 0 > (g6 = A8 + eA2 | 0) >>> 0 ? C4 + 1 | 0 : C4, eA2 = g6 - (A8 = -2097152 & DA2) | 0, DA2 = C4 - ((A8 >>> 0 > g6 >>> 0) + wA2 | 0) | 0, g6 = kA(uA2, pA2, 666643, 0), A8 = h3 + (SA2 - (((C4 = -2097152 & yA2) >>> 0 > rA2 >>> 0) + tA2 | 0) | 0) | 0, g6 = (C4 = (A8 = g6 >>> 0 > (HA2 = g6 + (rA2 - C4 | 0) | 0) >>> 0 ? A8 + 1 | 0 : A8) >> 21) + DA2 | 0, A8 = (A8 = (g6 = (A8 = (2097151 & A8) << 11 | HA2 >>> 21) >>> 0 > (_A2 = A8 + eA2 | 0) >>> 0 ? g6 + 1 | 0 : g6) >> 21) + i4 | 0, g6 = (g6 = (A8 = (g6 = (2097151 & g6) << 11 | _A2 >>> 21) >>> 0 > (tA2 = g6 + nA2 | 0) >>> 0 ? A8 + 1 | 0 : A8) >> 21) + YA2 | 0, C4 = (A8 = (g6 = (A8 = (2097151 & A8) << 11 | tA2 >>> 21) >>> 0 > (i4 = A8 + LA2 | 0) >>> 0 ? g6 + 1 | 0 : g6) >> 21) + sA2 | 0, A8 = (g6 = (C4 = (g6 = (2097151 & g6) << 11 | i4 >>> 21) >>> 0 > (wA2 = g6 + mA2 | 0) >>> 0 ? C4 + 1 | 0 : C4) >> 21) + XA2 | 0, g6 = (C4 = (A8 = (C4 = (2097151 & C4) << 11 | wA2 >>> 21) >>> 0 > (nA2 = C4 + TA2 | 0) >>> 0 ? A8 + 1 | 0 : A8) >> 21) + NA2 | 0, A8 = (A8 = (g6 = (A8 = (2097151 & A8) << 11 | nA2 >>> 21) >>> 0 > (rA2 = A8 + PA2 | 0) >>> 0 ? g6 + 1 | 0 : g6) >> 21) + ZA2 | 0, g6 = (g6 = (A8 = (g6 = (2097151 & g6) << 11 | rA2 >>> 21) >>> 0 > (sA2 = g6 + RA2 | 0) >>> 0 ? A8 + 1 | 0 : A8) >> 21) + JA2 | 0, C4 = (A8 = (g6 = (A8 = (2097151 & A8) << 11 | sA2 >>> 21) >>> 0 > (SA2 = A8 + OA2 | 0) >>> 0 ? g6 + 1 | 0 : g6) >> 21) + AI2 | 0, A8 = (g6 = (C4 = (g6 = (2097151 & g6) << 11 | SA2 >>> 21) >>> 0 > (yA2 = g6 + QI2 | 0) >>> 0 ? C4 + 1 | 0 : C4) >> 21) + BI2 | 0, DA2 = (GA2 = B4 - (g6 = -2097152 & GA2) | 0) + ((2097151 & (A8 = (C4 = (2097151 & C4) << 11 | yA2 >>> 21) >>> 0 > (eA2 = C4 + CI2 | 0) >>> 0 ? A8 + 1 | 0 : A8)) << 11 | eA2 >>> 21) | 0, A8 = (FA2 - ((g6 >>> 0 > B4 >>> 0) + xA2 | 0) | 0) + (A8 >> 21) | 0, GA2 = g6 = (A8 = DA2 >>> 0 < GA2 >>> 0 ? A8 + 1 | 0 : A8) >> 21, HA2 = (A8 = kA(NA2 = (2097151 & A8) << 11 | DA2 >>> 21, g6, 666643, 0)) + (g6 = 2097151 & HA2) | 0, A8 = h3, B4 = A8 = g6 >>> 0 > HA2 >>> 0 ? A8 + 1 | 0 : A8, E3[0 | Q4] = HA2, E3[Q4 + 1 | 0] = (255 & A8) << 24 | HA2 >>> 8, A8 = 2097151 & _A2, g6 = kA(NA2, GA2, 470296, 0) + A8 | 0, C4 = h3, A8 = (B4 >> 21) + (A8 >>> 0 > g6 >>> 0 ? C4 + 1 | 0 : C4) | 0, A8 = (FA2 = (2097151 & B4) << 11 | HA2 >>> 21) >>> 0 > (_A2 = FA2 + g6 | 0) >>> 0 ? A8 + 1 | 0 : A8, E3[Q4 + 4 | 0] = (2047 & A8) << 21 | _A2 >>> 11, g6 = A8, C4 = _A2, E3[Q4 + 3 | 0] = (7 & A8) << 29 | C4 >>> 3, E3[Q4 + 2 | 0] = 31 & ((65535 & B4) << 16 | HA2 >>> 16) | C4 << 5, B4 = 2097151 & tA2, tA2 = kA(NA2, GA2, 654183, 0) + B4 | 0, A8 = h3, _A2 = (2097151 & g6) << 11 | C4 >>> 21, g6 = (g6 >> 21) + (B4 = B4 >>> 0 > tA2 >>> 0 ? A8 + 1 | 0 : A8) | 0, A8 = g6 = (tA2 = _A2 + tA2 | 0) >>> 0 < _A2 >>> 0 ? g6 + 1 | 0 : g6, E3[Q4 + 6 | 0] = (63 & A8) << 26 | tA2 >>> 6, B4 = tA2, tA2 = 0, E3[Q4 + 5 | 0] = tA2 << 13 | (1572864 & C4) >>> 19 | B4 << 2, C4 = 2097151 & i4, i4 = kA(NA2, GA2, -997805, -1) + C4 | 0, g6 = h3, g6 = C4 >>> 0 > i4 >>> 0 ? g6 + 1 | 0 : g6, tA2 = (2097151 & (C4 = A8)) << 11 | B4 >>> 21, C4 = (A8 >>= 21) + g6 | 0, C4 = (i4 = tA2 + i4 | 0) >>> 0 < tA2 >>> 0 ? C4 + 1 | 0 : C4, E3[Q4 + 9 | 0] = (511 & C4) << 23 | i4 >>> 9, E3[Q4 + 8 | 0] = (1 & C4) << 31 | i4 >>> 1, g6 = 0, E3[Q4 + 7 | 0] = g6 << 18 | (2080768 & B4) >>> 14 | i4 << 7, g6 = 2097151 & wA2, B4 = kA(NA2, GA2, 136657, 0) + g6 | 0, A8 = h3, A8 = g6 >>> 0 > B4 >>> 0 ? A8 + 1 | 0 : A8, wA2 = (2097151 & (g6 = C4)) << 11 | i4 >>> 21, g6 = A8 + (C4 = g6 >> 21) | 0, g6 = (B4 = wA2 + B4 | 0) >>> 0 < wA2 >>> 0 ? g6 + 1 | 0 : g6, E3[Q4 + 12 | 0] = (4095 & g6) << 20 | B4 >>> 12, C4 = B4, E3[Q4 + 11 | 0] = (15 & g6) << 28 | C4 >>> 4, B4 = 0, E3[Q4 + 10 | 0] = B4 << 15 | (1966080 & i4) >>> 17 | C4 << 4, B4 = 2097151 & nA2, i4 = kA(NA2, GA2, -683901, -1) + B4 | 0, A8 = h3, A8 = B4 >>> 0 > i4 >>> 0 ? A8 + 1 | 0 : A8, B4 = g6, g6 = A8 + (g6 >>= 21) | 0, g6 = (B4 = (nA2 = i4) + (i4 = (2097151 & B4) << 11 | C4 >>> 21) | 0) >>> 0 < i4 >>> 0 ? g6 + 1 | 0 : g6, E3[Q4 + 14 | 0] = (127 & g6) << 25 | B4 >>> 7, i4 = 0, E3[Q4 + 13 | 0] = i4 << 12 | (1048576 & C4) >>> 20 | B4 << 1, A8 = g6 >> 21, C4 = (g6 = (2097151 & g6) << 11 | B4 >>> 21) >>> 0 > (i4 = g6 + (2097151 & rA2) | 0) >>> 0 ? A8 + 1 | 0 : A8, E3[Q4 + 17 | 0] = (1023 & C4) << 22 | i4 >>> 10, E3[Q4 + 16 | 0] = (3 & C4) << 30 | i4 >>> 2, g6 = 0, E3[Q4 + 15 | 0] = g6 << 17 | (2064384 & B4) >>> 15 | i4 << 6, A8 = C4 >> 21, A8 = (g6 = (2097151 & C4) << 11 | i4 >>> 21) >>> 0 > (C4 = g6 + (2097151 & sA2) | 0) >>> 0 ? A8 + 1 | 0 : A8, E3[Q4 + 20 | 0] = (8191 & A8) << 19 | C4 >>> 13, E3[Q4 + 19 | 0] = (31 & A8) << 27 | C4 >>> 5, B4 = (g6 = 2097151 & SA2) + (SA2 = (2097151 & A8) << 11 | C4 >>> 21) | 0, g6 = A8 >> 21, g6 = B4 >>> 0 < SA2 >>> 0 ? g6 + 1 | 0 : g6, SA2 = B4, E3[Q4 + 21 | 0] = B4, sA2 = 0, E3[Q4 + 18 | 0] = sA2 << 14 | (1835008 & i4) >>> 18 | C4 << 3, E3[Q4 + 22 | 0] = (255 & g6) << 24 | B4 >>> 8, C4 = g6 >> 21, C4 = (B4 = (i4 = (2097151 & g6) << 11 | B4 >>> 21) + (2097151 & yA2) | 0) >>> 0 < i4 >>> 0 ? C4 + 1 | 0 : C4, E3[Q4 + 25 | 0] = (2047 & C4) << 21 | B4 >>> 11, E3[Q4 + 24 | 0] = (7 & C4) << 29 | B4 >>> 3, E3[Q4 + 23 | 0] = 31 & ((65535 & g6) << 16 | SA2 >>> 16) | B4 << 5, A8 = C4 >> 21, A8 = (g6 = (2097151 & C4) << 11 | B4 >>> 21) >>> 0 > (C4 = g6 + (2097151 & eA2) | 0) >>> 0 ? A8 + 1 | 0 : A8, E3[Q4 + 27 | 0] = (63 & A8) << 26 | C4 >>> 6, i4 = 0, E3[Q4 + 26 | 0] = i4 << 13 | (1572864 & B4) >>> 19 | C4 << 2, g6 = A8 >> 21, g6 = (A8 = (B4 = (2097151 & A8) << 11 | C4 >>> 21) + (2097151 & DA2) | 0) >>> 0 < B4 >>> 0 ? g6 + 1 | 0 : g6, E3[Q4 + 31 | 0] = (131071 & g6) << 15 | A8 >>> 17, E3[Q4 + 30 | 0] = (511 & g6) << 23 | A8 >>> 9, E3[Q4 + 29 | 0] = (1 & g6) << 31 | A8 >>> 1, B4 = 0, E3[Q4 + 28 | 0] = B4 << 18 | (2080768 & C4) >>> 14 | A8 << 7, iI(c4, 64), iI(f4, 64), I7 && (o3[I7 >> 2] = 64, o3[I7 + 4 >> 2] = 0), w3 = e4 + 560 | 0, 0;
                    }
                    function k3(A8, I7, g6, C4) {
                      for (var B4 = 0, Q4 = 0, i4 = 0, E4 = 0, f4 = 0, c4 = 0, e4 = 0, r4 = 0, D4 = 0, t4 = 0, y4 = 0, w4 = 0, n4 = 0, s4 = 0, k4 = 0, F4 = 0, S4 = 0, H4 = 0, G4 = 0, _4 = 0, M4 = 0, p4 = 0, N4 = 0, J4 = 0, U4 = 0, Y4 = 0, d4 = 0, K4 = 0, b4 = 0, P4 = 0, v4 = 0, L4 = 0, R4 = 0, u4 = 0, x4 = 0, m4 = 0, l4 = 0; i4 = (B4 = f4 << 3) + g6 | 0, Q4 = a3[0 | (B4 = I7 + B4 | 0)] | a3[B4 + 1 | 0] << 8 | a3[B4 + 2 | 0] << 16 | a3[B4 + 3 | 0] << 24, M4 = a3[B4 + 4 | 0] | a3[B4 + 5 | 0] << 8 | a3[B4 + 6 | 0] << 16 | a3[B4 + 7 | 0] << 24, c4 = Q4 << 24 | (65280 & Q4) << 8, e4 = (E4 = 16711680 & Q4) << 24, E4 = E4 >>> 8 | 0, B4 = (D4 = -16777216 & Q4) >>> 24 | 0, o3[i4 >> 2] = e4 | D4 << 8 | -16777216 & ((255 & M4) << 24 | Q4 >>> 8) | 16711680 & ((16777215 & M4) << 8 | Q4 >>> 24) | M4 >>> 8 & 65280 | M4 >>> 24, Q4 = B4 | E4 | c4, B4 = 0, o3[i4 + 4 >> 2] = Q4 | B4 | B4, 16 != (0 | (f4 = f4 + 1 | 0)); )
                        ;
                      for (I7 = o3[A8 + 4 >> 2], o3[C4 >> 2] = o3[A8 >> 2], o3[C4 + 4 >> 2] = I7, I7 = o3[A8 + 60 >> 2], o3[C4 + 56 >> 2] = o3[A8 + 56 >> 2], o3[C4 + 60 >> 2] = I7, I7 = o3[A8 + 52 >> 2], o3[C4 + 48 >> 2] = o3[A8 + 48 >> 2], o3[C4 + 52 >> 2] = I7, I7 = o3[A8 + 44 >> 2], o3[C4 + 40 >> 2] = o3[A8 + 40 >> 2], o3[C4 + 44 >> 2] = I7, I7 = o3[A8 + 36 >> 2], o3[C4 + 32 >> 2] = o3[A8 + 32 >> 2], o3[C4 + 36 >> 2] = I7, I7 = o3[A8 + 28 >> 2], o3[C4 + 24 >> 2] = o3[A8 + 24 >> 2], o3[C4 + 28 >> 2] = I7, I7 = o3[A8 + 20 >> 2], o3[C4 + 16 >> 2] = o3[A8 + 16 >> 2], o3[C4 + 20 >> 2] = I7, I7 = o3[A8 + 12 >> 2], o3[C4 + 8 >> 2] = o3[A8 + 8 >> 2], o3[C4 + 12 >> 2] = I7; i4 = o3[C4 + 56 >> 2], E4 = o3[C4 + 60 >> 2], B4 = o3[(I7 = M4 = (p4 = l4 << 3) + g6 | 0) >> 2], I7 = o3[I7 + 4 >> 2], S4 = Q4 = o3[C4 + 36 >> 2], Q4 = DA(s4 = o3[C4 + 32 >> 2], Q4, 50), f4 = h3, Q4 = DA(s4, S4, 46) ^ Q4, f4 ^= h3, Q4 = DA(s4, S4, 23) ^ Q4, I7 = (h3 ^ f4) + I7 | 0, I7 = (B4 = Q4 + B4 | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, B4 = (f4 = o3[(Q4 = p4 + 34368 | 0) >> 2]) + B4 | 0, I7 = o3[Q4 + 4 >> 2] + I7 | 0, I7 = B4 >>> 0 < f4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = (f4 = ((e4 = o3[C4 + 48 >> 2]) ^ (t4 = o3[C4 + 40 >> 2])) & s4 ^ e4) + B4 | 0, B4 = (((k4 = o3[C4 + 52 >> 2]) ^ (H4 = o3[C4 + 44 >> 2])) & S4 ^ k4) + I7 | 0, I7 = (Q4 >>> 0 < f4 >>> 0 ? B4 + 1 | 0 : B4) + E4 | 0, I7 = (i4 = Q4 + i4 | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, f4 = (Q4 = o3[C4 + 24 >> 2]) + i4 | 0, B4 = o3[C4 + 28 >> 2] + I7 | 0, y4 = B4 = Q4 >>> 0 > f4 >>> 0 ? B4 + 1 | 0 : B4, o3[C4 + 24 >> 2] = f4, o3[C4 + 28 >> 2] = B4, F4 = B4 = o3[C4 + 4 >> 2], B4 = DA(Q4 = o3[C4 >> 2], B4, 36), E4 = h3, B4 = DA(Q4, F4, 30) ^ B4, E4 ^= h3, D4 = i4 + (DA(Q4, F4, 25) ^ B4) | 0, B4 = I7 + (h3 ^ E4) | 0, B4 = i4 >>> 0 > D4 >>> 0 ? B4 + 1 | 0 : B4, c4 = (I7 = D4) + (D4 = Q4 & ((E4 = o3[C4 + 16 >> 2]) | (i4 = o3[C4 + 8 >> 2])) | i4 & E4) | 0, I7 = (I7 = B4) + (F4 & ((B4 = o3[C4 + 20 >> 2]) | (w4 = o3[C4 + 12 >> 2])) | B4 & w4) | 0, D4 = I7 = c4 >>> 0 < D4 >>> 0 ? I7 + 1 | 0 : I7, o3[C4 + 56 >> 2] = c4, o3[C4 + 60 >> 2] = I7, r4 = E4, n4 = B4, _4 = o3[(I7 = v4 = (G4 = 8 | p4) + g6 | 0) >> 2], J4 = o3[I7 + 4 >> 2], B4 = ((S4 ^ H4) & y4 ^ H4) + k4 | 0, B4 = (I7 = (E4 = (t4 ^ s4) & f4 ^ t4) + e4 | 0) >>> 0 < E4 >>> 0 ? B4 + 1 | 0 : B4, E4 = DA(f4, y4, 50), e4 = h3, E4 = DA(f4, y4, 46) ^ E4, e4 ^= h3, E4 = (k4 = DA(f4, y4, 23) ^ E4) + I7 | 0, I7 = (h3 ^ e4) + B4 | 0, I7 = (E4 >>> 0 < k4 >>> 0 ? I7 + 1 | 0 : I7) + J4 | 0, I7 = (B4 = E4 + _4 | 0) >>> 0 < E4 >>> 0 ? I7 + 1 | 0 : I7, E4 = (E4 = B4) + (e4 = o3[(B4 = G4 + 34368 | 0) >> 2]) | 0, B4 = o3[B4 + 4 >> 2] + I7 | 0, B4 = (I7 = E4 >>> 0 < e4 >>> 0 ? B4 + 1 | 0 : B4) + n4 | 0, k4 = B4 = (e4 = E4 + r4 | 0) >>> 0 < E4 >>> 0 ? B4 + 1 | 0 : B4, o3[C4 + 16 >> 2] = e4, o3[C4 + 20 >> 2] = B4, I7 = I7 + ((w4 | F4) & D4 | w4 & F4) | 0, I7 = (B4 = E4 + ((Q4 | i4) & c4 | Q4 & i4) | 0) >>> 0 < E4 >>> 0 ? I7 + 1 | 0 : I7, E4 = DA(c4, D4, 36), r4 = h3, E4 = DA(c4, D4, 30) ^ E4, r4 ^= h3, n4 = B4, B4 = DA(c4, D4, 25) ^ E4, I7 = (h3 ^ r4) + I7 | 0, r4 = I7 = B4 >>> 0 > (E4 = n4 + B4 | 0) >>> 0 ? I7 + 1 | 0 : I7, o3[C4 + 48 >> 2] = E4, o3[C4 + 52 >> 2] = I7, n4 = i4, G4 = w4, I7 = (w4 = o3[(B4 = d4 = (i4 = 16 | p4) + g6 | 0) >> 2]) + t4 | 0, B4 = o3[B4 + 4 >> 2] + H4 | 0, B4 = I7 >>> 0 < w4 >>> 0 ? B4 + 1 | 0 : B4, i4 = (t4 = I7) + (w4 = o3[(I7 = i4 + 34368 | 0) >> 2]) | 0, I7 = o3[I7 + 4 >> 2] + B4 | 0, I7 = ((y4 ^ S4) & k4 ^ S4) + (I7 = i4 >>> 0 < w4 >>> 0 ? I7 + 1 | 0 : I7) | 0, I7 = (B4 = (B4 = i4) + (i4 = (f4 ^ s4) & e4 ^ s4) | 0) >>> 0 < i4 >>> 0 ? I7 + 1 | 0 : I7, i4 = DA(e4, k4, 50), w4 = h3, i4 = DA(e4, k4, 46) ^ i4, w4 ^= h3, i4 = (t4 = DA(e4, k4, 23) ^ i4) + B4 | 0, B4 = (h3 ^ w4) + I7 | 0, B4 = (t4 = i4 >>> 0 < t4 >>> 0 ? B4 + 1 | 0 : B4) + G4 | 0, G4 = B4 = (w4 = i4) >>> 0 > (i4 = i4 + n4 | 0) >>> 0 ? B4 + 1 | 0 : B4, o3[C4 + 8 >> 2] = i4, o3[C4 + 12 >> 2] = B4, I7 = DA(E4, r4, 36), B4 = h3, I7 = DA(E4, r4, 30) ^ I7, B4 ^= h3, H4 = DA(E4, r4, 25) ^ I7, I7 = ((D4 | F4) & r4 | D4 & F4) + (h3 ^ B4) | 0, B4 = t4 + ((n4 = H4 + ((Q4 | c4) & E4 | Q4 & c4) | 0) >>> 0 < H4 >>> 0 ? I7 + 1 | 0 : I7) | 0, w4 = B4 = (t4 = w4 + n4 | 0) >>> 0 < w4 >>> 0 ? B4 + 1 | 0 : B4, o3[C4 + 40 >> 2] = t4, o3[C4 + 44 >> 2] = B4, n4 = Q4, B4 = (B4 = s4) + (s4 = o3[(I7 = L4 = (Q4 = 24 | p4) + g6 | 0) >> 2]) | 0, I7 = o3[I7 + 4 >> 2] + S4 | 0, I7 = B4 >>> 0 < s4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = (H4 = B4) + (s4 = o3[(B4 = Q4 + 34368 | 0) >> 2]) | 0, B4 = o3[B4 + 4 >> 2] + I7 | 0, B4 = (y4 ^ (y4 ^ k4) & G4) + (B4 = Q4 >>> 0 < s4 >>> 0 ? B4 + 1 | 0 : B4) | 0, B4 = (I7 = (I7 = Q4) + (Q4 = f4 ^ (f4 ^ e4) & i4) | 0) >>> 0 < Q4 >>> 0 ? B4 + 1 | 0 : B4, Q4 = DA(i4, G4, 50), s4 = h3, Q4 = DA(i4, G4, 46) ^ Q4, s4 ^= h3, Q4 = (S4 = DA(i4, G4, 23) ^ Q4) + I7 | 0, I7 = (h3 ^ s4) + B4 | 0, B4 = (I7 = Q4 >>> 0 < S4 >>> 0 ? I7 + 1 | 0 : I7) + F4 | 0, S4 = B4 = (F4 = Q4 + n4 | 0) >>> 0 < Q4 >>> 0 ? B4 + 1 | 0 : B4, o3[C4 >> 2] = F4, o3[C4 + 4 >> 2] = B4, B4 = DA(t4, w4, 36), s4 = h3, B4 = DA(t4, w4, 30) ^ B4, n4 = h3 ^ s4, H4 = DA(t4, w4, 25) ^ B4, B4 = ((D4 | r4) & w4 | D4 & r4) + (h3 ^ n4) | 0, I7 = I7 + ((s4 = H4 + ((E4 | c4) & t4 | E4 & c4) | 0) >>> 0 < H4 >>> 0 ? B4 + 1 | 0 : B4) | 0, s4 = I7 = (n4 = Q4 + s4 | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, o3[C4 + 32 >> 2] = n4, o3[C4 + 36 >> 2] = I7, Q4 = o3[(B4 = P4 = (I7 = 32 | p4) + g6 | 0) >> 2], B4 = y4 + o3[B4 + 4 >> 2] | 0, B4 = (Q4 = Q4 + f4 | 0) >>> 0 < f4 >>> 0 ? B4 + 1 | 0 : B4, Q4 = (f4 = o3[(I7 = I7 + 34368 | 0) >> 2]) + Q4 | 0, I7 = o3[I7 + 4 >> 2] + B4 | 0, I7 = (k4 ^ (k4 ^ G4) & S4) + (I7 = Q4 >>> 0 < f4 >>> 0 ? I7 + 1 | 0 : I7) | 0, I7 = (B4 = (B4 = Q4) + (Q4 = e4 ^ (i4 ^ e4) & F4) | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = DA(F4, S4, 50), f4 = h3, Q4 = DA(F4, S4, 46) ^ Q4, f4 ^= h3, Q4 = (y4 = DA(F4, S4, 23) ^ Q4) + B4 | 0, B4 = (h3 ^ f4) + I7 | 0, H4 = B4 = Q4 >>> 0 < y4 >>> 0 ? B4 + 1 | 0 : B4, I7 = B4, B4 = DA(n4, s4, 36), f4 = h3, B4 = DA(n4, s4, 30) ^ B4, y4 = h3 ^ f4, _4 = DA(n4, s4, 25) ^ B4, B4 = ((r4 | w4) & s4 | r4 & w4) + (h3 ^ y4) | 0, I7 = ((f4 = _4 + ((E4 | t4) & n4 | E4 & t4) | 0) >>> 0 < _4 >>> 0 ? B4 + 1 | 0 : B4) + I7 | 0, f4 = I7 = (y4 = Q4 + f4 | 0) >>> 0 < f4 >>> 0 ? I7 + 1 | 0 : I7, o3[C4 + 24 >> 2] = y4, o3[C4 + 28 >> 2] = I7, B4 = D4 + H4 | 0, H4 = B4 = (D4 = Q4 + c4 | 0) >>> 0 < Q4 >>> 0 ? B4 + 1 | 0 : B4, o3[C4 + 56 >> 2] = D4, o3[C4 + 60 >> 2] = B4, Q4 = o3[(I7 = K4 = (B4 = 40 | p4) + g6 | 0) >> 2], I7 = k4 + o3[I7 + 4 >> 2] | 0, I7 = (Q4 = Q4 + e4 | 0) >>> 0 < e4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = (c4 = o3[(B4 = B4 + 34368 | 0) >> 2]) + Q4 | 0, B4 = o3[B4 + 4 >> 2] + I7 | 0, B4 = (G4 ^ (S4 ^ G4) & H4) + (B4 = Q4 >>> 0 < c4 >>> 0 ? B4 + 1 | 0 : B4) | 0, B4 = (I7 = (I7 = Q4) + (Q4 = i4 ^ (i4 ^ F4) & D4) | 0) >>> 0 < Q4 >>> 0 ? B4 + 1 | 0 : B4, Q4 = DA(D4, H4, 50), c4 = h3, Q4 = DA(D4, H4, 46) ^ Q4, c4 ^= h3, Q4 = (e4 = DA(D4, H4, 23) ^ Q4) + I7 | 0, I7 = (h3 ^ c4) + B4 | 0, I7 = Q4 >>> 0 < e4 >>> 0 ? I7 + 1 | 0 : I7, B4 = DA(y4, f4, 36), c4 = h3, B4 = DA(y4, f4, 30) ^ B4, e4 = h3 ^ c4, k4 = DA(y4, f4, 25) ^ B4, B4 = ((w4 | s4) & f4 | w4 & s4) + (h3 ^ e4) | 0, B4 = ((c4 = k4 + ((t4 | n4) & y4 | t4 & n4) | 0) >>> 0 < k4 >>> 0 ? B4 + 1 | 0 : B4) + I7 | 0, c4 = B4 = (e4 = Q4 + c4 | 0) >>> 0 < c4 >>> 0 ? B4 + 1 | 0 : B4, o3[C4 + 16 >> 2] = e4, o3[C4 + 20 >> 2] = B4, I7 = I7 + r4 | 0, _4 = I7 = (r4 = Q4 + E4 | 0) >>> 0 < E4 >>> 0 ? I7 + 1 | 0 : I7, o3[C4 + 48 >> 2] = r4, o3[C4 + 52 >> 2] = I7, Q4 = o3[(B4 = Y4 = (I7 = 48 | p4) + g6 | 0) >> 2], B4 = G4 + o3[B4 + 4 >> 2] | 0, B4 = (Q4 = Q4 + i4 | 0) >>> 0 < i4 >>> 0 ? B4 + 1 | 0 : B4, Q4 = (i4 = o3[(I7 = I7 + 34368 | 0) >> 2]) + Q4 | 0, I7 = o3[I7 + 4 >> 2] + B4 | 0, I7 = (S4 ^ (S4 ^ H4) & _4) + (I7 = Q4 >>> 0 < i4 >>> 0 ? I7 + 1 | 0 : I7) | 0, I7 = (B4 = (B4 = Q4) + (Q4 = F4 ^ (D4 ^ F4) & r4) | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = DA(r4, _4, 50), i4 = h3, Q4 = DA(r4, _4, 46) ^ Q4, i4 ^= h3, Q4 = (E4 = DA(r4, _4, 23) ^ Q4) + B4 | 0, B4 = (h3 ^ i4) + I7 | 0, E4 = B4 = Q4 >>> 0 < E4 >>> 0 ? B4 + 1 | 0 : B4, I7 = B4, B4 = DA(e4, c4, 36), i4 = h3, B4 = DA(e4, c4, 30) ^ B4, k4 = h3 ^ i4, G4 = DA(e4, c4, 25) ^ B4, B4 = ((f4 | s4) & c4 | f4 & s4) + (h3 ^ k4) | 0, I7 = ((i4 = G4 + ((y4 | n4) & e4 | y4 & n4) | 0) >>> 0 < G4 >>> 0 ? B4 + 1 | 0 : B4) + I7 | 0, k4 = I7 = (B4 = i4) >>> 0 > (i4 = Q4 + i4 | 0) >>> 0 ? I7 + 1 | 0 : I7, o3[C4 + 8 >> 2] = i4, o3[C4 + 12 >> 2] = I7, B4 = E4 + w4 | 0, G4 = B4 = (J4 = Q4 + t4 | 0) >>> 0 < Q4 >>> 0 ? B4 + 1 | 0 : B4, o3[C4 + 40 >> 2] = J4, o3[C4 + 44 >> 2] = B4, Q4 = o3[(I7 = b4 = (B4 = 56 | p4) + g6 | 0) >> 2], I7 = S4 + o3[I7 + 4 >> 2] | 0, I7 = (Q4 = Q4 + F4 | 0) >>> 0 < F4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = (E4 = o3[(B4 = B4 + 34368 | 0) >> 2]) + Q4 | 0, B4 = o3[B4 + 4 >> 2] + I7 | 0, B4 = (H4 ^ (H4 ^ _4) & G4) + (B4 = Q4 >>> 0 < E4 >>> 0 ? B4 + 1 | 0 : B4) | 0, B4 = (I7 = (I7 = Q4) + (Q4 = D4 ^ (D4 ^ r4) & J4) | 0) >>> 0 < Q4 >>> 0 ? B4 + 1 | 0 : B4, Q4 = DA(J4, G4, 50), E4 = h3, Q4 = DA(J4, G4, 46) ^ Q4, E4 ^= h3, Q4 = (w4 = DA(J4, G4, 23) ^ Q4) + I7 | 0, I7 = (h3 ^ E4) + B4 | 0, I7 = Q4 >>> 0 < w4 >>> 0 ? I7 + 1 | 0 : I7, B4 = DA(i4, k4, 36), E4 = h3, B4 = DA(i4, k4, 30) ^ B4, w4 = h3 ^ E4, t4 = DA(i4, k4, 25) ^ B4, B4 = ((f4 | c4) & k4 | f4 & c4) + (h3 ^ w4) | 0, B4 = ((E4 = t4 + ((e4 | y4) & i4 | e4 & y4) | 0) >>> 0 < t4 >>> 0 ? B4 + 1 | 0 : B4) + I7 | 0, w4 = B4 = (w4 = E4) >>> 0 > (E4 = Q4 + E4 | 0) >>> 0 ? B4 + 1 | 0 : B4, o3[C4 >> 2] = E4, o3[C4 + 4 >> 2] = B4, I7 = I7 + s4 | 0, S4 = I7 = (t4 = Q4 + n4 | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, o3[C4 + 32 >> 2] = t4, o3[C4 + 36 >> 2] = I7, Q4 = o3[(B4 = R4 = (I7 = 64 | p4) + g6 | 0) >> 2], B4 = H4 + o3[B4 + 4 >> 2] | 0, B4 = (Q4 = Q4 + D4 | 0) >>> 0 < D4 >>> 0 ? B4 + 1 | 0 : B4, Q4 = (D4 = o3[(I7 = I7 + 34368 | 0) >> 2]) + Q4 | 0, I7 = o3[I7 + 4 >> 2] + B4 | 0, I7 = (_4 ^ (G4 ^ _4) & S4) + (I7 = Q4 >>> 0 < D4 >>> 0 ? I7 + 1 | 0 : I7) | 0, I7 = (B4 = (B4 = Q4) + (Q4 = r4 ^ (r4 ^ J4) & t4) | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = DA(t4, S4, 50), D4 = h3, Q4 = DA(t4, S4, 46) ^ Q4, D4 ^= h3, Q4 = (F4 = DA(t4, S4, 23) ^ Q4) + B4 | 0, B4 = (h3 ^ D4) + I7 | 0, s4 = B4 = Q4 >>> 0 < F4 >>> 0 ? B4 + 1 | 0 : B4, I7 = B4, B4 = DA(E4, w4, 36), D4 = h3, B4 = DA(E4, w4, 30) ^ B4, F4 = h3 ^ D4, n4 = DA(E4, w4, 25) ^ B4, B4 = ((c4 | k4) & w4 | c4 & k4) + (h3 ^ F4) | 0, I7 = ((D4 = n4 + ((i4 | e4) & E4 | i4 & e4) | 0) >>> 0 < n4 >>> 0 ? B4 + 1 | 0 : B4) + I7 | 0, D4 = I7 = (F4 = Q4 + D4 | 0) >>> 0 < D4 >>> 0 ? I7 + 1 | 0 : I7, o3[C4 + 56 >> 2] = F4, o3[C4 + 60 >> 2] = I7, B4 = f4 + s4 | 0, H4 = B4 = (f4 = Q4 + y4 | 0) >>> 0 < Q4 >>> 0 ? B4 + 1 | 0 : B4, o3[C4 + 24 >> 2] = f4, o3[C4 + 28 >> 2] = B4, Q4 = o3[(I7 = U4 = (B4 = 72 | p4) + g6 | 0) >> 2], I7 = _4 + o3[I7 + 4 >> 2] | 0, I7 = (Q4 = Q4 + r4 | 0) >>> 0 < r4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = (r4 = o3[(B4 = B4 + 34368 | 0) >> 2]) + Q4 | 0, B4 = o3[B4 + 4 >> 2] + I7 | 0, B4 = (G4 ^ (S4 ^ G4) & H4) + (B4 = Q4 >>> 0 < r4 >>> 0 ? B4 + 1 | 0 : B4) | 0, B4 = (I7 = (I7 = Q4) + (Q4 = J4 ^ (t4 ^ J4) & f4) | 0) >>> 0 < Q4 >>> 0 ? B4 + 1 | 0 : B4, Q4 = DA(f4, H4, 50), r4 = h3, Q4 = DA(f4, H4, 46) ^ Q4, r4 ^= h3, Q4 = (s4 = DA(f4, H4, 23) ^ Q4) + I7 | 0, I7 = (h3 ^ r4) + B4 | 0, I7 = Q4 >>> 0 < s4 >>> 0 ? I7 + 1 | 0 : I7, B4 = DA(F4, D4, 36), r4 = h3, B4 = DA(F4, D4, 30) ^ B4, s4 = h3 ^ r4, n4 = DA(F4, D4, 25) ^ B4, B4 = ((w4 | k4) & D4 | w4 & k4) + (h3 ^ s4) | 0, B4 = ((r4 = n4 + ((i4 | E4) & F4 | i4 & E4) | 0) >>> 0 < n4 >>> 0 ? B4 + 1 | 0 : B4) + I7 | 0, r4 = B4 = (s4 = Q4 + r4 | 0) >>> 0 < r4 >>> 0 ? B4 + 1 | 0 : B4, o3[C4 + 48 >> 2] = s4, o3[C4 + 52 >> 2] = B4, I7 = I7 + c4 | 0, _4 = I7 = (c4 = Q4 + e4 | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, o3[C4 + 16 >> 2] = c4, o3[C4 + 20 >> 2] = I7, I7 = (I7 = J4) + (e4 = o3[(B4 = J4 = (Q4 = 80 | p4) + g6 | 0) >> 2]) | 0, B4 = o3[B4 + 4 >> 2] + G4 | 0, B4 = I7 >>> 0 < e4 >>> 0 ? B4 + 1 | 0 : B4, Q4 = (y4 = I7) + (e4 = o3[(I7 = Q4 + 34368 | 0) >> 2]) | 0, I7 = o3[I7 + 4 >> 2] + B4 | 0, I7 = (S4 ^ (S4 ^ H4) & _4) + (I7 = Q4 >>> 0 < e4 >>> 0 ? I7 + 1 | 0 : I7) | 0, I7 = (B4 = (B4 = Q4) + (Q4 = t4 ^ (f4 ^ t4) & c4) | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = DA(c4, _4, 50), e4 = h3, Q4 = DA(c4, _4, 46) ^ Q4, e4 ^= h3, Q4 = (n4 = DA(c4, _4, 23) ^ Q4) + B4 | 0, B4 = (h3 ^ e4) + I7 | 0, y4 = B4 = Q4 >>> 0 < n4 >>> 0 ? B4 + 1 | 0 : B4, I7 = B4, B4 = DA(s4, r4, 36), e4 = h3, B4 = DA(s4, r4, 30) ^ B4, n4 = h3 ^ e4, G4 = DA(s4, r4, 25) ^ B4, B4 = ((D4 | w4) & r4 | D4 & w4) + (h3 ^ n4) | 0, I7 = ((e4 = G4 + ((E4 | F4) & s4 | E4 & F4) | 0) >>> 0 < G4 >>> 0 ? B4 + 1 | 0 : B4) + I7 | 0, e4 = I7 = (n4 = Q4 + e4 | 0) >>> 0 < e4 >>> 0 ? I7 + 1 | 0 : I7, o3[C4 + 40 >> 2] = n4, o3[C4 + 44 >> 2] = I7, B4 = y4 + k4 | 0, k4 = B4 = (y4 = Q4 + i4 | 0) >>> 0 < i4 >>> 0 ? B4 + 1 | 0 : B4, o3[C4 + 8 >> 2] = y4, o3[C4 + 12 >> 2] = B4, B4 = 34368 + (I7 = 88 | p4) | 0, i4 = o3[(I7 = N4 = I7 + g6 | 0) >> 2], Q4 = o3[B4 >> 2] + i4 | 0, I7 = o3[B4 + 4 >> 2] + o3[I7 + 4 >> 2] | 0, B4 = S4 + (Q4 >>> 0 < i4 >>> 0 ? I7 + 1 | 0 : I7) | 0, B4 = (H4 ^ (H4 ^ _4) & k4) + (B4 = (I7 = Q4 + t4 | 0) >>> 0 < t4 >>> 0 ? B4 + 1 | 0 : B4) | 0, B4 = (I7 = (Q4 = f4 ^ (f4 ^ c4) & y4) + I7 | 0) >>> 0 < Q4 >>> 0 ? B4 + 1 | 0 : B4, Q4 = DA(y4, k4, 50), i4 = h3, Q4 = DA(y4, k4, 46) ^ Q4, i4 ^= h3, Q4 = (t4 = DA(y4, k4, 23) ^ Q4) + I7 | 0, I7 = (h3 ^ i4) + B4 | 0, I7 = Q4 >>> 0 < t4 >>> 0 ? I7 + 1 | 0 : I7, B4 = DA(n4, e4, 36), i4 = h3, B4 = DA(n4, e4, 30) ^ B4, t4 = h3 ^ i4, G4 = DA(n4, e4, 25) ^ B4, B4 = ((D4 | r4) & e4 | D4 & r4) + (h3 ^ t4) | 0, B4 = ((i4 = G4 + ((s4 | F4) & n4 | s4 & F4) | 0) >>> 0 < G4 >>> 0 ? B4 + 1 | 0 : B4) + I7 | 0, t4 = B4 = (t4 = i4) >>> 0 > (i4 = Q4 + i4 | 0) >>> 0 ? B4 + 1 | 0 : B4, o3[C4 + 32 >> 2] = i4, o3[C4 + 36 >> 2] = B4, I7 = I7 + w4 | 0, w4 = I7 = (B4 = E4) >>> 0 > (E4 = Q4 + E4 | 0) >>> 0 ? I7 + 1 | 0 : I7, o3[C4 >> 2] = E4, o3[C4 + 4 >> 2] = I7, B4 = 34368 + (I7 = 96 | p4) | 0, G4 = o3[(I7 = u4 = I7 + g6 | 0) >> 2], Q4 = o3[B4 >> 2] + G4 | 0, B4 = o3[B4 + 4 >> 2] + o3[I7 + 4 >> 2] | 0, I7 = H4 + (Q4 >>> 0 < G4 >>> 0 ? B4 + 1 | 0 : B4) | 0, I7 = (B4 = Q4 + f4 | 0) >>> 0 < f4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = (f4 = c4 ^ (c4 ^ y4) & E4) + B4 | 0, B4 = (_4 ^ (k4 ^ _4) & w4) + I7 | 0, B4 = Q4 >>> 0 < f4 >>> 0 ? B4 + 1 | 0 : B4, I7 = DA(E4, w4, 50), f4 = h3, I7 = DA(E4, w4, 46) ^ I7, f4 ^= h3, H4 = Q4, Q4 = DA(E4, w4, 23) ^ I7, B4 = (h3 ^ f4) + B4 | 0, S4 = B4 = (I7 = H4 + Q4 | 0) >>> 0 < Q4 >>> 0 ? B4 + 1 | 0 : B4, Q4 = I7, I7 = DA(i4, t4, 36), f4 = h3, I7 = DA(i4, t4, 30) ^ I7, G4 = h3 ^ f4, H4 = DA(i4, t4, 25) ^ I7, I7 = ((e4 | r4) & t4 | e4 & r4) + (h3 ^ G4) | 0, B4 = ((f4 = H4 + ((s4 | n4) & i4 | s4 & n4) | 0) >>> 0 < H4 >>> 0 ? I7 + 1 | 0 : I7) + B4 | 0, f4 = B4 = (G4 = Q4 + f4 | 0) >>> 0 < f4 >>> 0 ? B4 + 1 | 0 : B4, o3[C4 + 24 >> 2] = G4, o3[C4 + 28 >> 2] = B4, B4 = D4 + S4 | 0, D4 = B4 = (F4 = Q4 + F4 | 0) >>> 0 < Q4 >>> 0 ? B4 + 1 | 0 : B4, o3[C4 + 56 >> 2] = F4, o3[C4 + 60 >> 2] = B4, B4 = 34368 + (I7 = 104 | p4) | 0, S4 = o3[(I7 = m4 = I7 + g6 | 0) >> 2], Q4 = o3[B4 >> 2] + S4 | 0, I7 = o3[B4 + 4 >> 2] + o3[I7 + 4 >> 2] | 0, B4 = _4 + (Q4 >>> 0 < S4 >>> 0 ? I7 + 1 | 0 : I7) | 0, B4 = (I7 = Q4 + c4 | 0) >>> 0 < c4 >>> 0 ? B4 + 1 | 0 : B4, Q4 = (c4 = y4 ^ (E4 ^ y4) & F4) + I7 | 0, I7 = (k4 ^ (w4 ^ k4) & D4) + B4 | 0, I7 = Q4 >>> 0 < c4 >>> 0 ? I7 + 1 | 0 : I7, B4 = DA(F4, D4, 50), c4 = h3, B4 = DA(F4, D4, 46) ^ B4, c4 ^= h3, S4 = DA(F4, D4, 23) ^ B4, B4 = (h3 ^ c4) + I7 | 0, H4 = B4 = (Q4 = S4 + Q4 | 0) >>> 0 < S4 >>> 0 ? B4 + 1 | 0 : B4, I7 = B4, B4 = DA(G4, f4, 36), c4 = h3, B4 = DA(G4, f4, 30) ^ B4, S4 = h3 ^ c4, _4 = DA(G4, f4, 25) ^ B4, B4 = ((e4 | t4) & f4 | e4 & t4) + (h3 ^ S4) | 0, I7 = ((c4 = _4 + ((i4 | n4) & G4 | i4 & n4) | 0) >>> 0 < _4 >>> 0 ? B4 + 1 | 0 : B4) + I7 | 0, c4 = I7 = (S4 = Q4 + c4 | 0) >>> 0 < c4 >>> 0 ? I7 + 1 | 0 : I7, o3[C4 + 16 >> 2] = S4, o3[C4 + 20 >> 2] = I7, I7 = r4 + H4 | 0, r4 = I7 = (s4 = Q4 + s4 | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, o3[C4 + 48 >> 2] = s4, o3[C4 + 52 >> 2] = I7, B4 = 34368 + (I7 = 112 | p4) | 0, H4 = o3[(Q4 = _4 = I7 + g6 | 0) >> 2], I7 = o3[B4 >> 2] + H4 | 0, B4 = o3[B4 + 4 >> 2] + o3[Q4 + 4 >> 2] | 0, B4 = k4 + (I7 >>> 0 < H4 >>> 0 ? B4 + 1 | 0 : B4) | 0, B4 = (w4 ^ (D4 ^ w4) & r4) + (B4 = (I7 = I7 + y4 | 0) >>> 0 < y4 >>> 0 ? B4 + 1 | 0 : B4) | 0, B4 = (I7 = (Q4 = E4 ^ (E4 ^ F4) & s4) + I7 | 0) >>> 0 < Q4 >>> 0 ? B4 + 1 | 0 : B4, Q4 = DA(s4, r4, 50), y4 = h3, Q4 = DA(s4, r4, 46) ^ Q4, y4 ^= h3, Q4 = (k4 = DA(s4, r4, 23) ^ Q4) + I7 | 0, I7 = (h3 ^ y4) + B4 | 0, H4 = I7 = Q4 >>> 0 < k4 >>> 0 ? I7 + 1 | 0 : I7, B4 = I7, I7 = DA(S4, c4, 36), y4 = h3, I7 = DA(S4, c4, 30) ^ I7, k4 = h3 ^ y4, x4 = DA(S4, c4, 25) ^ I7, I7 = ((f4 | t4) & c4 | f4 & t4) + (h3 ^ k4) | 0, B4 = ((y4 = x4 + ((i4 | G4) & S4 | i4 & G4) | 0) >>> 0 < x4 >>> 0 ? I7 + 1 | 0 : I7) + B4 | 0, y4 = B4 = (k4 = Q4 + y4 | 0) >>> 0 < y4 >>> 0 ? B4 + 1 | 0 : B4, o3[C4 + 8 >> 2] = k4, o3[C4 + 12 >> 2] = B4, B4 = e4 + H4 | 0, Q4 = B4 = (e4 = Q4 + n4 | 0) >>> 0 < Q4 >>> 0 ? B4 + 1 | 0 : B4, o3[C4 + 40 >> 2] = e4, o3[C4 + 44 >> 2] = B4, B4 = 34368 + (I7 = 120 | p4) | 0, p4 = o3[(I7 = n4 = I7 + g6 | 0) >> 2], H4 = o3[B4 >> 2] + p4 | 0, B4 = o3[B4 + 4 >> 2] + o3[I7 + 4 >> 2] | 0, I7 = w4 + (H4 >>> 0 < p4 >>> 0 ? B4 + 1 | 0 : B4) | 0, I7 = (D4 ^ (D4 ^ r4) & Q4) + (I7 = (B4 = E4 + H4 | 0) >>> 0 < E4 >>> 0 ? I7 + 1 | 0 : I7) | 0, I7 = (B4 = (E4 = F4 ^ (s4 ^ F4) & e4) + B4 | 0) >>> 0 < E4 >>> 0 ? I7 + 1 | 0 : I7, E4 = DA(e4, Q4, 50), D4 = h3, E4 = DA(e4, Q4, 46) ^ E4, D4 ^= h3, Q4 = (E4 = DA(e4, Q4, 23) ^ E4) + B4 | 0, B4 = (h3 ^ D4) + I7 | 0, B4 = Q4 >>> 0 < E4 >>> 0 ? B4 + 1 | 0 : B4, E4 = Q4, D4 = B4, I7 = B4, B4 = DA(k4, y4, 36), e4 = h3, B4 = DA(k4, y4, 30) ^ B4, r4 = h3 ^ e4, w4 = DA(k4, y4, 25) ^ B4, B4 = ((f4 | c4) & y4 | f4 & c4) + (h3 ^ r4) | 0, I7 = ((e4 = w4 + ((S4 | G4) & k4 | S4 & G4) | 0) >>> 0 < w4 >>> 0 ? B4 + 1 | 0 : B4) + I7 | 0, I7 = (Q4 = Q4 + e4 | 0) >>> 0 < e4 >>> 0 ? I7 + 1 | 0 : I7, o3[C4 >> 2] = Q4, o3[C4 + 4 >> 2] = I7, B4 = D4 + t4 | 0, B4 = (r4 = i4) >>> 0 > (i4 = i4 + E4 | 0) >>> 0 ? B4 + 1 | 0 : B4, o3[C4 + 32 >> 2] = i4, o3[C4 + 36 >> 2] = B4, 64 != (0 | l4); )
                        c4 = ((l4 = l4 + 16 | 0) << 3) + g6 | 0, E4 = o3[M4 >> 2], f4 = o3[M4 + 4 >> 2], x4 = o3[U4 >> 2], D4 = I7 = o3[U4 + 4 >> 2], B4 = I7, Q4 = I7 = o3[_4 + 4 >> 2], I7 = DA(G4 = o3[_4 >> 2], I7, 45), i4 = h3, r4 = ((63 & Q4) << 26 | G4 >>> 6) ^ (I7 = DA(G4, Q4, 3) ^ I7), I7 = (Q4 >>> 6 ^ (e4 = h3 ^ i4)) + B4 | 0, B4 = ((i4 = r4 + x4 | 0) >>> 0 < r4 >>> 0 ? I7 + 1 | 0 : I7) + f4 | 0, B4 = (I7 = i4 + E4 | 0) >>> 0 < i4 >>> 0 ? B4 + 1 | 0 : B4, E4 = i4 = o3[v4 + 4 >> 2], i4 = DA(f4 = o3[v4 >> 2], i4, 63), e4 = h3, i4 = ((127 & E4) << 25 | f4 >>> 7) ^ DA(f4, E4, 56) ^ i4, B4 = (h3 ^ e4 ^ E4 >>> 7) + B4 | 0, i4 = B4 = i4 >>> 0 > (S4 = i4 + I7 | 0) >>> 0 ? B4 + 1 | 0 : B4, o3[c4 >> 2] = S4, o3[c4 + 4 >> 2] = B4, f4 = (_4 = o3[J4 >> 2]) + f4 | 0, I7 = (c4 = o3[J4 + 4 >> 2]) + E4 | 0, B4 = f4 >>> 0 < _4 >>> 0 ? I7 + 1 | 0 : I7, E4 = I7 = o3[n4 + 4 >> 2], I7 = DA(H4 = o3[n4 >> 2], I7, 45), e4 = h3, r4 = f4, f4 = ((63 & E4) << 26 | H4 >>> 6) ^ DA(H4, E4, 3) ^ I7, B4 = (h3 ^ e4 ^ E4 >>> 6) + B4 | 0, f4 = f4 >>> 0 > (r4 = r4 + f4 | 0) >>> 0 ? B4 + 1 | 0 : B4, B4 = DA(e4 = o3[d4 >> 2], I7 = o3[d4 + 4 >> 2], 63), w4 = h3, y4 = r4, r4 = ((127 & I7) << 25 | e4 >>> 7) ^ DA(e4, I7, 56) ^ B4, B4 = (h3 ^ w4 ^ I7 >>> 7) + f4 | 0, f4 = B4 = r4 >>> 0 > (k4 = y4 + r4 | 0) >>> 0 ? B4 + 1 | 0 : B4, o3[M4 + 136 >> 2] = k4, o3[M4 + 140 >> 2] = B4, B4 = (J4 = o3[N4 >> 2]) + e4 | 0, I7 = (e4 = o3[N4 + 4 >> 2]) + I7 | 0, r4 = DA(S4, i4, 45), w4 = h3, r4 = (t4 = ((63 & i4) << 26 | S4 >>> 6) ^ DA(S4, i4, 3) ^ r4) + B4 | 0, B4 = (h3 ^ w4 ^ i4 >>> 6) + (B4 >>> 0 < J4 >>> 0 ? I7 + 1 | 0 : I7) | 0, B4 = r4 >>> 0 < t4 >>> 0 ? B4 + 1 | 0 : B4, w4 = I7 = o3[L4 + 4 >> 2], I7 = DA(t4 = o3[L4 >> 2], I7, 63), F4 = h3, y4 = r4, r4 = ((127 & w4) << 25 | t4 >>> 7) ^ DA(t4, w4, 56) ^ I7, B4 = (h3 ^ F4 ^ w4 >>> 7) + B4 | 0, r4 = B4 = r4 >>> 0 > (p4 = y4 + r4 | 0) >>> 0 ? B4 + 1 | 0 : B4, o3[M4 + 144 >> 2] = p4, o3[M4 + 148 >> 2] = B4, t4 = (v4 = o3[u4 >> 2]) + t4 | 0, I7 = (I7 = w4) + (w4 = o3[u4 + 4 >> 2]) | 0, B4 = t4 >>> 0 < v4 >>> 0 ? I7 + 1 | 0 : I7, I7 = DA(k4, f4, 45), F4 = h3, s4 = ((63 & f4) << 26 | k4 >>> 6) ^ DA(k4, f4, 3) ^ I7, B4 = (h3 ^ F4 ^ f4 >>> 6) + B4 | 0, B4 = (t4 = s4 + t4 | 0) >>> 0 < s4 >>> 0 ? B4 + 1 | 0 : B4, F4 = I7 = o3[P4 + 4 >> 2], I7 = DA(s4 = o3[P4 >> 2], I7, 63), n4 = h3, y4 = t4, t4 = ((127 & F4) << 25 | s4 >>> 7) ^ DA(s4, F4, 56) ^ I7, B4 = (h3 ^ n4 ^ F4 >>> 7) + B4 | 0, t4 = B4 = t4 >>> 0 > (d4 = y4 + t4 | 0) >>> 0 ? B4 + 1 | 0 : B4, o3[M4 + 152 >> 2] = d4, o3[M4 + 156 >> 2] = B4, I7 = (L4 = o3[m4 >> 2]) + s4 | 0, B4 = (B4 = F4) + (F4 = o3[m4 + 4 >> 2]) | 0, s4 = DA(p4, r4, 45), n4 = h3, s4 = ((63 & r4) << 26 | p4 >>> 6) ^ DA(p4, r4, 3) ^ s4, B4 = (h3 ^ n4 ^ r4 >>> 6) + (I7 >>> 0 < L4 >>> 0 ? B4 + 1 | 0 : B4) | 0, s4 = (y4 = s4 + I7 | 0) >>> 0 < s4 >>> 0 ? B4 + 1 | 0 : B4, B4 = DA(n4 = o3[K4 >> 2], I7 = o3[K4 + 4 >> 2], 63), P4 = h3, N4 = y4, y4 = ((127 & I7) << 25 | n4 >>> 7) ^ (B4 = DA(n4, I7, 56) ^ B4), B4 = (I7 >>> 7 ^ (K4 = h3 ^ P4)) + s4 | 0, s4 = B4 = y4 >>> 0 > (P4 = N4 + y4 | 0) >>> 0 ? B4 + 1 | 0 : B4, o3[M4 + 160 >> 2] = P4, o3[M4 + 164 >> 2] = B4, I7 = I7 + Q4 | 0, I7 = (B4 = n4 + G4 | 0) >>> 0 < n4 >>> 0 ? I7 + 1 | 0 : I7, n4 = DA(d4, t4, 45), y4 = h3, n4 = (K4 = ((63 & t4) << 26 | d4 >>> 6) ^ DA(d4, t4, 3) ^ n4) + B4 | 0, B4 = (h3 ^ y4 ^ t4 >>> 6) + I7 | 0, B4 = n4 >>> 0 < K4 >>> 0 ? B4 + 1 | 0 : B4, y4 = o3[Y4 >> 2], Y4 = I7 = o3[Y4 + 4 >> 2], I7 = DA(y4, I7, 63), K4 = h3, I7 = DA(y4, Y4, 56) ^ I7, N4 = n4, B4 = (Y4 >>> 7 ^ (U4 = h3 ^ K4)) + B4 | 0, n4 = B4 = (n4 = ((127 & Y4) << 25 | y4 >>> 7) ^ I7) >>> 0 > (K4 = N4 + n4 | 0) >>> 0 ? B4 + 1 | 0 : B4, o3[M4 + 168 >> 2] = K4, o3[M4 + 172 >> 2] = B4, I7 = E4 + Y4 | 0, I7 = (B4 = y4 + H4 | 0) >>> 0 < y4 >>> 0 ? I7 + 1 | 0 : I7, N4 = y4 = o3[b4 + 4 >> 2], y4 = DA(U4 = o3[b4 >> 2], y4, 63), Y4 = h3, y4 = (b4 = ((127 & N4) << 25 | U4 >>> 7) ^ DA(U4, N4, 56) ^ y4) + B4 | 0, B4 = (h3 ^ Y4 ^ N4 >>> 7) + I7 | 0, I7 = y4 >>> 0 < b4 >>> 0 ? B4 + 1 | 0 : B4, B4 = DA(P4, s4, 45), Y4 = h3, B4 = DA(P4, s4, 3) ^ B4, b4 = h3 ^ Y4, Y4 = y4, I7 = (s4 >>> 6 ^ b4) + I7 | 0, y4 = I7 = (y4 = ((63 & s4) << 26 | P4 >>> 6) ^ B4) >>> 0 > (Y4 = Y4 + y4 | 0) >>> 0 ? I7 + 1 | 0 : I7, o3[M4 + 176 >> 2] = Y4, o3[M4 + 180 >> 2] = I7, u4 = o3[R4 >> 2], R4 = I7 = o3[R4 + 4 >> 2], b4 = I7, I7 = DA(x4, D4, 63), B4 = h3, m4 = ((127 & D4) << 25 | x4 >>> 7) ^ DA(x4, D4, 56) ^ I7, I7 = (h3 ^ B4 ^ D4 >>> 7) + f4 | 0, B4 = ((k4 = m4 + k4 | 0) >>> 0 < m4 >>> 0 ? I7 + 1 | 0 : I7) + b4 | 0, B4 = (I7 = k4 + u4 | 0) >>> 0 < k4 >>> 0 ? B4 + 1 | 0 : B4, f4 = DA(Y4, y4, 45), k4 = h3, b4 = (f4 = ((63 & y4) << 26 | Y4 >>> 6) ^ DA(Y4, y4, 3) ^ f4) + I7 | 0, I7 = (h3 ^ k4 ^ y4 >>> 6) + B4 | 0, f4 = I7 = f4 >>> 0 > b4 >>> 0 ? I7 + 1 | 0 : I7, o3[M4 + 192 >> 2] = b4, o3[M4 + 196 >> 2] = I7, B4 = i4 + N4 | 0, B4 = (I7 = S4 + U4 | 0) >>> 0 < U4 >>> 0 ? B4 + 1 | 0 : B4, k4 = DA(u4, R4, 63), U4 = h3, N4 = ((127 & R4) << 25 | u4 >>> 7) ^ DA(u4, R4, 56) ^ k4, B4 = (h3 ^ U4 ^ R4 >>> 7) + B4 | 0, I7 = (k4 = N4 + I7 | 0) >>> 0 < N4 >>> 0 ? B4 + 1 | 0 : B4, B4 = DA(K4, n4, 45), U4 = h3, B4 = DA(K4, n4, 3) ^ B4, R4 = k4, I7 = (n4 >>> 6 ^ (N4 = h3 ^ U4)) + I7 | 0, k4 = I7 = (k4 = ((63 & n4) << 26 | K4 >>> 6) ^ B4) >>> 0 > (U4 = R4 + k4 | 0) >>> 0 ? I7 + 1 | 0 : I7, o3[M4 + 184 >> 2] = U4, o3[M4 + 188 >> 2] = I7, I7 = DA(J4, e4, 63), B4 = h3, I7 = ((127 & e4) << 25 | J4 >>> 7) ^ DA(J4, e4, 56) ^ I7, B4 = (h3 ^ B4 ^ e4 >>> 7) + c4 | 0, I7 = t4 + (I7 >>> 0 > (N4 = I7 + _4 | 0) >>> 0 ? B4 + 1 | 0 : B4) | 0, I7 = (B4 = d4 + N4 | 0) >>> 0 < d4 >>> 0 ? I7 + 1 | 0 : I7, t4 = DA(b4, f4, 45), d4 = h3, t4 = DA(b4, f4, 3) ^ t4, N4 = h3 ^ d4, d4 = (t4 ^= (63 & f4) << 26 | b4 >>> 6) + B4 | 0, B4 = (f4 >>> 6 ^ N4) + I7 | 0, t4 = B4 = t4 >>> 0 > d4 >>> 0 ? B4 + 1 | 0 : B4, o3[M4 + 208 >> 2] = d4, o3[M4 + 212 >> 2] = B4, I7 = DA(_4, c4, 63), B4 = h3, N4 = DA(_4, c4, 56) ^ I7, B4 = ((I7 = c4 >>> 7 | 0) ^ h3 ^ B4) + D4 | 0, I7 = r4 + ((c4 = (_4 = N4 ^ ((127 & c4) << 25 | _4 >>> 7)) + x4 | 0) >>> 0 < _4 >>> 0 ? B4 + 1 | 0 : B4) | 0, I7 = (B4 = c4 + p4 | 0) >>> 0 < p4 >>> 0 ? I7 + 1 | 0 : I7, D4 = DA(U4, k4, 45), c4 = h3, r4 = (D4 = ((63 & k4) << 26 | U4 >>> 6) ^ DA(U4, k4, 3) ^ D4) + B4 | 0, B4 = (h3 ^ c4 ^ k4 >>> 6) + I7 | 0, D4 = B4 = D4 >>> 0 > r4 >>> 0 ? B4 + 1 | 0 : B4, o3[M4 + 200 >> 2] = r4, o3[M4 + 204 >> 2] = B4, I7 = DA(L4, F4, 63), B4 = h3, _4 = ((127 & F4) << 25 | L4 >>> 7) ^ DA(L4, F4, 56) ^ I7, I7 = (h3 ^ B4 ^ F4 >>> 7) + w4 | 0, B4 = n4 + ((c4 = _4 + v4 | 0) >>> 0 < _4 >>> 0 ? I7 + 1 | 0 : I7) | 0, B4 = (I7 = c4 + K4 | 0) >>> 0 < K4 >>> 0 ? B4 + 1 | 0 : B4, c4 = DA(d4, t4, 45), n4 = h3, _4 = I7, I7 = t4 >>> 6 | 0, c4 = ((63 & t4) << 26 | d4 >>> 6) ^ DA(d4, t4, 3) ^ c4, B4 = (I7 ^ h3 ^ n4) + B4 | 0, c4 = B4 = c4 >>> 0 > (t4 = _4 + c4 | 0) >>> 0 ? B4 + 1 | 0 : B4, o3[M4 + 224 >> 2] = t4, o3[M4 + 228 >> 2] = B4, I7 = DA(v4, w4, 63), B4 = h3, I7 = DA(v4, w4, 56) ^ I7, n4 = h3 ^ B4, _4 = ((127 & w4) << 25 | v4 >>> 7) ^ I7, I7 = ((B4 = w4 >>> 7 | 0) ^ n4) + e4 | 0, B4 = s4 + ((w4 = _4 + J4 | 0) >>> 0 < _4 >>> 0 ? I7 + 1 | 0 : I7) | 0, B4 = (I7 = w4 + P4 | 0) >>> 0 < P4 >>> 0 ? B4 + 1 | 0 : B4, e4 = DA(r4, D4, 45), w4 = h3, n4 = I7, I7 = D4 >>> 6 | 0, D4 = ((63 & D4) << 26 | r4 >>> 6) ^ DA(r4, D4, 3) ^ e4, I7 = (I7 ^ h3 ^ w4) + B4 | 0, D4 = I7 = (e4 = n4 + D4 | 0) >>> 0 < D4 >>> 0 ? I7 + 1 | 0 : I7, o3[M4 + 216 >> 2] = e4, o3[M4 + 220 >> 2] = I7, I7 = DA(H4, E4, 63), B4 = h3, w4 = ((127 & E4) << 25 | H4 >>> 7) ^ DA(H4, E4, 56) ^ I7, B4 = (h3 ^ B4 ^ E4 >>> 7) + Q4 | 0, B4 = k4 + ((I7 = w4 + G4 | 0) >>> 0 < w4 >>> 0 ? B4 + 1 | 0 : B4) | 0, I7 = (r4 = I7 + U4 | 0) >>> 0 < U4 >>> 0 ? B4 + 1 | 0 : B4, B4 = DA(t4, c4, 45), w4 = h3, n4 = r4, r4 = DA(t4, c4, 3) ^ B4, B4 = c4 >>> 6 | 0, c4 = n4 + (r4 ^= (63 & c4) << 26 | t4 >>> 6) | 0, I7 = (B4 ^ h3 ^ w4) + I7 | 0, o3[M4 + 240 >> 2] = c4, o3[M4 + 244 >> 2] = c4 >>> 0 < r4 >>> 0 ? I7 + 1 | 0 : I7, I7 = DA(G4, Q4, 63), B4 = h3, I7 = DA(G4, Q4, 56) ^ I7, c4 = h3 ^ B4, B4 = ((B4 = Q4 >>> 7 | 0) ^ c4) + F4 | 0, I7 = y4 + ((I7 ^= (127 & Q4) << 25 | G4 >>> 7) >>> 0 > (Q4 = I7 + L4 | 0) >>> 0 ? B4 + 1 | 0 : B4) | 0, I7 = (B4 = Q4 + Y4 | 0) >>> 0 < Y4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = DA(e4, D4, 45), c4 = h3, r4 = B4, B4 = D4 >>> 6 | 0, Q4 = ((63 & D4) << 26 | e4 >>> 6) ^ DA(e4, D4, 3) ^ Q4, B4 = (B4 ^ h3 ^ c4) + I7 | 0, Q4 = B4 = Q4 >>> 0 > (D4 = r4 + Q4 | 0) >>> 0 ? B4 + 1 | 0 : B4, o3[M4 + 232 >> 2] = D4, o3[M4 + 236 >> 2] = B4, I7 = DA(S4, i4, 63), B4 = h3, r4 = DA(S4, i4, 56) ^ I7, B4 = ((I7 = i4 >>> 7 | 0) ^ h3 ^ B4) + E4 | 0, I7 = f4 + ((i4 = (c4 = r4 ^ ((127 & i4) << 25 | S4 >>> 7)) + H4 | 0) >>> 0 < c4 >>> 0 ? B4 + 1 | 0 : B4) | 0, I7 = (B4 = i4 + b4 | 0) >>> 0 < b4 >>> 0 ? I7 + 1 | 0 : I7, i4 = DA(D4, Q4, 45), E4 = h3, r4 = B4, B4 = Q4 >>> 6 | 0, Q4 = r4 + (i4 = ((63 & Q4) << 26 | D4 >>> 6) ^ DA(D4, Q4, 3) ^ i4) | 0, B4 = (B4 ^ h3 ^ E4) + I7 | 0, o3[M4 + 248 >> 2] = Q4, o3[M4 + 252 >> 2] = Q4 >>> 0 < i4 >>> 0 ? B4 + 1 | 0 : B4;
                      I7 = I7 + o3[A8 + 4 >> 2] | 0, I7 = (g6 = Q4 + o3[A8 >> 2] | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, o3[A8 >> 2] = g6, o3[A8 + 4 >> 2] = I7, B4 = o3[A8 + 12 >> 2] + o3[C4 + 12 >> 2] | 0, I7 = (g6 = o3[C4 + 8 >> 2]) + o3[A8 + 8 >> 2] | 0, o3[A8 + 8 >> 2] = I7, o3[A8 + 12 >> 2] = I7 >>> 0 < g6 >>> 0 ? B4 + 1 | 0 : B4, B4 = o3[A8 + 20 >> 2] + o3[C4 + 20 >> 2] | 0, I7 = (g6 = o3[C4 + 16 >> 2]) + o3[A8 + 16 >> 2] | 0, o3[A8 + 16 >> 2] = I7, o3[A8 + 20 >> 2] = I7 >>> 0 < g6 >>> 0 ? B4 + 1 | 0 : B4, I7 = o3[A8 + 28 >> 2] + o3[C4 + 28 >> 2] | 0, g6 = (B4 = o3[C4 + 24 >> 2]) + o3[A8 + 24 >> 2] | 0, o3[A8 + 24 >> 2] = g6, o3[A8 + 28 >> 2] = g6 >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, B4 = o3[A8 + 36 >> 2] + o3[C4 + 36 >> 2] | 0, I7 = (g6 = o3[C4 + 32 >> 2]) + o3[A8 + 32 >> 2] | 0, o3[A8 + 32 >> 2] = I7, o3[A8 + 36 >> 2] = I7 >>> 0 < g6 >>> 0 ? B4 + 1 | 0 : B4, I7 = o3[A8 + 44 >> 2] + o3[C4 + 44 >> 2] | 0, g6 = (B4 = o3[C4 + 40 >> 2]) + o3[A8 + 40 >> 2] | 0, o3[A8 + 40 >> 2] = g6, o3[A8 + 44 >> 2] = g6 >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, B4 = o3[A8 + 52 >> 2] + o3[C4 + 52 >> 2] | 0, I7 = (g6 = o3[C4 + 48 >> 2]) + o3[A8 + 48 >> 2] | 0, o3[A8 + 48 >> 2] = I7, o3[A8 + 52 >> 2] = I7 >>> 0 < g6 >>> 0 ? B4 + 1 | 0 : B4, B4 = o3[A8 + 60 >> 2] + o3[C4 + 60 >> 2] | 0, I7 = (g6 = o3[C4 + 56 >> 2]) + o3[A8 + 56 >> 2] | 0, o3[A8 + 56 >> 2] = I7, o3[A8 + 60 >> 2] = I7 >>> 0 < g6 >>> 0 ? B4 + 1 | 0 : B4;
                    }
                    function F3(A8) {
                      var I7, g6, C4, B4, Q4, i4, o4, f4, c4, e4, r4 = 0, D4 = 0, t4 = 0, y4 = 0, w4 = 0, n4 = 0, s4 = 0, k4 = 0, F4 = 0, S4 = 0, H4 = 0, G4 = 0, _4 = 0, M4 = 0, p4 = 0, N4 = 0, J4 = 0, U4 = 0, Y4 = 0, d4 = 0, K4 = 0, b4 = 0, P4 = 0, v4 = 0, L4 = 0, R4 = 0, u4 = 0, x4 = 0, m4 = 0, l4 = 0, z4 = 0, q4 = 0, X3 = 0, j3 = 0, T2 = 0, O2 = 0, V2 = 0, Z2 = 0;
                      y4 = (G4 = a3[A8 + 44 | 0] | a3[A8 + 45 | 0] << 8 | a3[A8 + 46 | 0] << 16 | a3[A8 + 47 | 0] << 24) >>> 5 & 2097151, t4 = kA(b4 = (a3[A8 + 60 | 0] | a3[A8 + 61 | 0] << 8 | a3[A8 + 62 | 0] << 16 | a3[A8 + 63 | 0] << 24) >>> 3 | 0, 0, -683901, -1), D4 = (r4 = a3[A8 + 44 | 0]) << 16 & 2031616 | a3[A8 + 42 | 0] | a3[A8 + 43 | 0] << 8, r4 = h3, k4 = r4 = D4 >>> 0 > (F4 = t4 + D4 | 0) >>> 0 ? r4 + 1 | 0 : r4, N4 = r4 = r4 - ((F4 >>> 0 < 4293918720) - 1 | 0) | 0, t4 = r4 >> 21, r4 = (D4 = y4) + (y4 = (2097151 & r4) << 11 | (n4 = F4 - -1048576 | 0) >>> 21) | 0, D4 = t4, l4 = D4 = r4 >>> 0 < y4 >>> 0 ? D4 + 1 | 0 : D4, z4 = r4, Y4 = kA(r4, D4, -683901, -1), S4 = h3, s4 = kA(I7 = (a3[A8 + 49 | 0] | a3[A8 + 50 | 0] << 8 | a3[A8 + 51 | 0] << 16 | a3[A8 + 52 | 0] << 24) >>> 7 & 2097151, 0, -997805, -1), t4 = (r4 = a3[A8 + 27 | 0]) >>> 24 | 0, y4 = r4 << 8 | (_4 = a3[A8 + 23 | 0] | a3[A8 + 24 | 0] << 8 | a3[A8 + 25 | 0] << 16 | a3[A8 + 26 | 0] << 24) >>> 24, D4 = (r4 = a3[A8 + 28 | 0]) >>> 16 | 0, D4 = 2097151 & ((3 & (D4 |= t4)) << 30 | (r4 = y4 | r4 << 16) >>> 2), r4 = h3, r4 = D4 >>> 0 > (t4 = D4 + s4 | 0) >>> 0 ? r4 + 1 | 0 : r4, D4 = kA(u4 = (M4 = a3[A8 + 52 | 0] | a3[A8 + 53 | 0] << 8 | a3[A8 + 54 | 0] << 16 | a3[A8 + 55 | 0] << 24) >>> 4 & 2097151, 0, 654183, 0), r4 = h3 + r4 | 0, s4 = t4 = D4 + t4 | 0, t4 = D4 >>> 0 > t4 >>> 0 ? r4 + 1 | 0 : r4, w4 = (D4 = a3[A8 + 48 | 0]) << 8 | G4 >>> 24, D4 = r4 = D4 >>> 24 | 0, r4 = kA(g6 = 2097151 & ((3 & (G4 = (r4 = (y4 = a3[A8 + 49 | 0]) >>> 16 | 0) | D4)) << 30 | (D4 = (y4 <<= 16) | w4) >>> 2), 0, 136657, 0), t4 = h3 + t4 | 0, t4 = r4 >>> 0 > (D4 = r4 + s4 | 0) >>> 0 ? t4 + 1 | 0 : t4, y4 = (r4 = kA(C4 = (a3[A8 + 57 | 0] | a3[A8 + 58 | 0] << 8 | a3[A8 + 59 | 0] << 16 | a3[A8 + 60 | 0] << 24) >>> 6 & 2097151, 0, 666643, 0)) + D4 | 0, D4 = h3 + t4 | 0, s4 = y4, t4 = r4 >>> 0 > y4 >>> 0 ? D4 + 1 | 0 : D4, D4 = (r4 = a3[A8 + 56 | 0]) >>> 24 | 0, w4 = r4 << 8 | M4 >>> 24, D4 = kA(B4 = 2097151 & ((1 & (M4 = (r4 = (y4 = a3[A8 + 57 | 0]) >>> 16 | 0) | D4)) << 31 | (D4 = (y4 <<= 16) | w4) >>> 1), 0, 470296, 0), r4 = h3 + t4 | 0, D4 = (r4 = (t4 = y4 = D4 + s4 | 0) >>> 0 < D4 >>> 0 ? r4 + 1 | 0 : r4) + S4 | 0, D4 = t4 >>> 0 > (y4 = t4 + Y4 | 0) >>> 0 ? D4 + 1 | 0 : D4, J4 = t4 - -1048576 | 0, U4 = t4 = r4 - ((t4 >>> 0 < 4293918720) - 1 | 0) | 0, S4 = y4 - (r4 = -2097152 & J4) | 0, Y4 = D4 - ((r4 >>> 0 > y4 >>> 0) + t4 | 0) | 0, D4 = kA(I7, 0, 654183, 0), r4 = h3, r4 = D4 >>> 0 > (t4 = D4 + (_4 >>> 5 & 2097151) | 0) >>> 0 ? r4 + 1 | 0 : r4, y4 = (D4 = t4) + (t4 = kA(u4, 0, 470296, 0)) | 0, D4 = h3 + r4 | 0, D4 = t4 >>> 0 > y4 >>> 0 ? D4 + 1 | 0 : D4, r4 = kA(g6, X3, -997805, -1), D4 = h3 + D4 | 0, D4 = r4 >>> 0 > (t4 = r4 + y4 | 0) >>> 0 ? D4 + 1 | 0 : D4, y4 = (r4 = t4) + (t4 = kA(B4, j3, 666643, 0)) | 0, r4 = h3 + D4 | 0, w4 = y4, y4 = t4 >>> 0 > y4 >>> 0 ? r4 + 1 | 0 : r4, s4 = (t4 = kA(I7, 0, 470296, 0)) + (r4 = (r4 = a3[A8 + 23 | 0]) << 16 & 2031616 | a3[A8 + 21 | 0] | a3[A8 + 22 | 0] << 8) | 0, t4 = h3, t4 = r4 >>> 0 > s4 >>> 0 ? t4 + 1 | 0 : t4, s4 = (D4 = kA(u4, 0, 666643, 0)) + s4 | 0, r4 = h3 + t4 | 0, t4 = kA(g6, X3, 654183, 0), D4 = h3 + (D4 >>> 0 > s4 >>> 0 ? r4 + 1 | 0 : r4) | 0, M4 = D4 = t4 >>> 0 > (_4 = t4 + s4 | 0) >>> 0 ? D4 + 1 | 0 : D4, R4 = D4 = D4 - ((_4 >>> 0 < 4293918720) - 1 | 0) | 0, r4 = (r4 = D4 >>> 21 | 0) + y4 | 0, t4 = r4 = (D4 = (2097151 & D4) << 11 | (s4 = _4 - -1048576 | 0) >>> 21) >>> 0 > (w4 = D4 + w4 | 0) >>> 0 ? r4 + 1 | 0 : r4, H4 = D4 = r4 - ((w4 >>> 0 < 4293918720) - 1 | 0) | 0, r4 = S4, S4 = (2097151 & D4) << 11 | (y4 = w4 - -1048576 | 0) >>> 21, D4 = (D4 >> 21) + Y4 | 0, G4 = S4 = (D4 = S4 >>> 0 > (p4 = r4 + S4 | 0) >>> 0 ? D4 + 1 | 0 : D4) - ((p4 >>> 0 < 4293918720) - 1 | 0) | 0, x4 = p4 - (r4 = -2097152 & (Y4 = p4 - -1048576 | 0)) | 0, T2 = D4 - ((r4 >>> 0 > p4 >>> 0) + S4 | 0) | 0, r4 = kA(z4, l4, 136657, 0), t4 = h3 + t4 | 0, t4 = r4 >>> 0 > (D4 = r4 + w4 | 0) >>> 0 ? t4 + 1 | 0 : t4, K4 = D4 - (r4 = -2097152 & y4) | 0, m4 = t4 - ((r4 >>> 0 > D4 >>> 0) + H4 | 0) | 0, p4 = F4 - (r4 = -2097152 & n4) | 0, N4 = k4 - ((r4 >>> 0 > F4 >>> 0) + N4 | 0) | 0, k4 = kA(b4, 0, 136657, 0), D4 = (r4 = a3[A8 + 40 | 0]) >>> 24 | 0, y4 = r4 << 8 | (n4 = a3[A8 + 36 | 0] | a3[A8 + 37 | 0] << 8 | a3[A8 + 38 | 0] << 16 | a3[A8 + 39 | 0] << 24) >>> 24, t4 = (r4 = a3[A8 + 41 | 0]) >>> 16 | 0, D4 = (t4 |= D4) >>> 3 | 0, t4 = (7 & t4) << 29 | (r4 = y4 | r4 << 16) >>> 3, r4 = D4 + h3 | 0, r4 = t4 >>> 0 > (y4 = t4 + k4 | 0) >>> 0 ? r4 + 1 | 0 : r4, D4 = kA(C4, 0, -683901, -1), r4 = h3 + r4 | 0, r4 = D4 >>> 0 > (t4 = D4 + y4 | 0) >>> 0 ? r4 + 1 | 0 : r4, w4 = t4, D4 = kA(b4, 0, -997805, -1), t4 = h3, t4 = D4 >>> 0 > (y4 = D4 + (n4 >>> 6 & 2097151) | 0) >>> 0 ? t4 + 1 | 0 : t4, n4 = (D4 = y4) + (y4 = kA(C4, 0, 136657, 0)) | 0, D4 = h3 + t4 | 0, t4 = kA(B4, j3, -683901, -1), D4 = h3 + (y4 >>> 0 > n4 >>> 0 ? D4 + 1 | 0 : D4) | 0, S4 = D4 = t4 >>> 0 > (P4 = t4 + n4 | 0) >>> 0 ? D4 + 1 | 0 : D4, O2 = t4 = D4 - ((P4 >>> 0 < 4293918720) - 1 | 0) | 0, r4 = r4 + (D4 = t4 >> 21) | 0, n4 = r4 = (t4 = (2097151 & t4) << 11 | (F4 = P4 - -1048576 | 0) >>> 21) >>> 0 > (H4 = t4 + w4 | 0) >>> 0 ? r4 + 1 | 0 : r4, v4 = r4 = r4 - ((H4 >>> 0 < 4293918720) - 1 | 0) | 0, D4 = (D4 = r4 >> 21) + N4 | 0, q4 = D4 = (r4 = (t4 = (2097151 & r4) << 11 | (w4 = H4 - -1048576 | 0) >>> 21) + p4 | 0) >>> 0 < t4 >>> 0 ? D4 + 1 | 0 : D4, L4 = r4, D4 = kA(r4, D4, -683901, -1), r4 = h3 + m4 | 0, d4 = t4 = D4 + K4 | 0, y4 = D4 >>> 0 > t4 >>> 0 ? r4 + 1 | 0 : r4, m4 = _4 - (r4 = -2097152 & s4) | 0, N4 = M4 - ((4095 & R4) + (r4 >>> 0 > _4 >>> 0) | 0) | 0, _4 = kA(I7, 0, 666643, 0), r4 = (D4 = a3[A8 + 19 | 0]) >>> 24 | 0, s4 = D4 << 8 | (M4 = a3[A8 + 15 | 0] | a3[A8 + 16 | 0] << 8 | a3[A8 + 17 | 0] << 16 | a3[A8 + 18 | 0] << 24) >>> 24, t4 = r4, D4 = (7 & (t4 |= D4 = (r4 = a3[A8 + 20 | 0]) >>> 16 | 0)) << 29 | (D4 = (r4 <<= 16) | s4) >>> 3, t4 = h3 + (t4 >>> 3 | 0) | 0, t4 = D4 >>> 0 > (s4 = D4 + _4 | 0) >>> 0 ? t4 + 1 | 0 : t4, r4 = kA(g6, X3, 470296, 0), D4 = h3 + t4 | 0, r4 = r4 >>> 0 > (s4 = r4 + s4 | 0) >>> 0 ? D4 + 1 | 0 : D4, t4 = kA(g6, X3, 666643, 0), D4 = h3, _4 = D4 = t4 >>> 0 > (K4 = t4 + (M4 >>> 6 & 2097151) | 0) >>> 0 ? D4 + 1 | 0 : D4, V2 = t4 = D4 - ((K4 >>> 0 < 4293918720) - 1 | 0) | 0, r4 = r4 + (D4 = t4 >>> 21 | 0) | 0, M4 = r4 = (t4 = (2097151 & t4) << 11 | (k4 = K4 - -1048576 | 0) >>> 21) >>> 0 > (p4 = t4 + s4 | 0) >>> 0 ? r4 + 1 | 0 : r4, Z2 = r4 = r4 - ((p4 >>> 0 < 4293918720) - 1 | 0) | 0, D4 = (D4 = r4 >>> 21 | 0) + N4 | 0, D4 = (r4 = (2097151 & r4) << 11 | (s4 = p4 - -1048576 | 0) >>> 21) >>> 0 > (t4 = r4 + m4 | 0) >>> 0 ? D4 + 1 | 0 : D4, N4 = (r4 = t4) + (t4 = kA(z4, l4, -997805, -1)) | 0, r4 = h3 + D4 | 0, r4 = t4 >>> 0 > N4 >>> 0 ? r4 + 1 | 0 : r4, R4 = D4 = H4 - (t4 = -2097152 & w4) | 0, Q4 = w4 = n4 - ((t4 >>> 0 > H4 >>> 0) + v4 | 0) | 0, t4 = kA(L4, q4, 136657, 0), r4 = h3 + r4 | 0, r4 = t4 >>> 0 > (n4 = t4 + N4 | 0) >>> 0 ? r4 + 1 | 0 : r4, t4 = kA(D4, w4, -683901, -1), D4 = h3 + r4 | 0, n4 = D4 = t4 >>> 0 > (N4 = t4 + n4 | 0) >>> 0 ? D4 + 1 | 0 : D4, v4 = r4 = D4 - ((N4 >>> 0 < 4293918720) - 1 | 0) | 0, D4 = (2097151 & r4) << 11 | (w4 = N4 - -1048576 | 0) >>> 21, r4 = (r4 >> 21) + y4 | 0, d4 = D4 = (r4 = D4 >>> 0 > (H4 = D4 + d4 | 0) >>> 0 ? r4 + 1 | 0 : r4) - ((H4 >>> 0 < 4293918720) - 1 | 0) | 0, m4 = (2097151 & D4) << 11 | (y4 = H4 - -1048576 | 0) >>> 21, D4 = (D4 >> 21) + T2 | 0, o4 = x4 = m4 + x4 | 0, m4 = x4 >>> 0 < m4 >>> 0 ? D4 + 1 | 0 : D4, f4 = H4 - (D4 = -2097152 & y4) | 0, c4 = r4 - ((D4 >>> 0 > H4 >>> 0) + d4 | 0) | 0, x4 = N4 - (r4 = -2097152 & w4) | 0, T2 = n4 - ((r4 >>> 0 > N4 >>> 0) + v4 | 0) | 0, t4 = (r4 = kA(z4, l4, 654183, 0)) + (p4 - (D4 = -2097152 & s4) | 0) | 0, D4 = h3 + (M4 - ((2147483647 & Z2) + (D4 >>> 0 > p4 >>> 0) | 0) | 0) | 0, D4 = r4 >>> 0 > t4 >>> 0 ? D4 + 1 | 0 : D4, r4 = kA(L4, q4, -997805, -1), D4 = h3 + D4 | 0, D4 = r4 >>> 0 > (t4 = r4 + t4 | 0) >>> 0 ? D4 + 1 | 0 : D4, y4 = (r4 = t4) + (t4 = kA(R4, Q4, 136657, 0)) | 0, r4 = h3 + D4 | 0, d4 = y4, n4 = t4 >>> 0 > y4 >>> 0 ? r4 + 1 | 0 : r4, p4 = P4 - (r4 = -2097152 & F4) | 0, H4 = S4 - ((r4 >>> 0 > P4 >>> 0) + O2 | 0) | 0, M4 = kA(u4, 0, -683901, -1), r4 = (D4 = a3[A8 + 35 | 0]) >>> 24 | 0, y4 = D4 << 8 | (s4 = a3[A8 + 31 | 0] | a3[A8 + 32 | 0] << 8 | a3[A8 + 33 | 0] << 16 | a3[A8 + 34 | 0] << 24) >>> 24, t4 = r4, D4 = (r4 = a3[A8 + 36 | 0]) >>> 16 | 0, D4 |= t4, t4 = h3, t4 = (r4 = 2097151 & ((1 & D4) << 31 | (r4 = r4 << 16 | y4) >>> 1)) >>> 0 > (D4 = r4 + M4 | 0) >>> 0 ? t4 + 1 | 0 : t4, y4 = (r4 = kA(b4, 0, 654183, 0)) + D4 | 0, D4 = h3 + t4 | 0, D4 = r4 >>> 0 > y4 >>> 0 ? D4 + 1 | 0 : D4, t4 = kA(C4, 0, -997805, -1), r4 = h3 + D4 | 0, r4 = t4 >>> 0 > (y4 = t4 + y4 | 0) >>> 0 ? r4 + 1 | 0 : r4, D4 = kA(B4, j3, 136657, 0), r4 = h3 + r4 | 0, w4 = t4 = D4 + y4 | 0, y4 = D4 >>> 0 > t4 >>> 0 ? r4 + 1 | 0 : r4, r4 = kA(I7, 0, -683901, -1), D4 = h3, D4 = r4 >>> 0 > (t4 = r4 + (s4 >>> 4 & 2097151) | 0) >>> 0 ? D4 + 1 | 0 : D4, s4 = (r4 = kA(u4, 0, 136657, 0)) + t4 | 0, t4 = h3 + D4 | 0, t4 = r4 >>> 0 > s4 >>> 0 ? t4 + 1 | 0 : t4, r4 = kA(b4, 0, 470296, 0), D4 = h3 + t4 | 0, D4 = r4 >>> 0 > (s4 = r4 + s4 | 0) >>> 0 ? D4 + 1 | 0 : D4, s4 = (t4 = kA(C4, 0, 654183, 0)) + s4 | 0, r4 = h3 + D4 | 0, D4 = kA(B4, j3, -997805, -1), r4 = h3 + (t4 >>> 0 > s4 >>> 0 ? r4 + 1 | 0 : r4) | 0, M4 = r4 = D4 >>> 0 > (S4 = D4 + s4 | 0) >>> 0 ? r4 + 1 | 0 : r4, e4 = D4 = r4 - ((S4 >>> 0 < 4293918720) - 1 | 0) | 0, t4 = (r4 = D4 >> 21) + y4 | 0, N4 = D4 = (t4 = (D4 = (2097151 & D4) << 11 | (s4 = S4 - -1048576 | 0) >>> 21) >>> 0 > (F4 = D4 + w4 | 0) >>> 0 ? t4 + 1 | 0 : t4) - ((F4 >>> 0 < 4293918720) - 1 | 0) | 0, r4 = (r4 = D4 >> 21) + H4 | 0, v4 = r4 = (D4 = (y4 = (2097151 & D4) << 11 | (w4 = F4 - -1048576 | 0) >>> 21) + p4 | 0) >>> 0 < y4 >>> 0 ? r4 + 1 | 0 : r4, y4 = d4, d4 = D4, r4 = kA(D4, r4, -683901, -1), D4 = h3 + n4 | 0, H4 = y4 = y4 + r4 | 0, y4 = r4 >>> 0 > y4 >>> 0 ? D4 + 1 | 0 : D4, n4 = (r4 = kA(z4, l4, 470296, 0)) + (K4 - (D4 = -2097152 & k4) | 0) | 0, D4 = h3 + (_4 - ((2047 & V2) + (D4 >>> 0 > K4 >>> 0) | 0) | 0) | 0, D4 = r4 >>> 0 > n4 >>> 0 ? D4 + 1 | 0 : D4, k4 = (r4 = n4) + (n4 = kA(L4, q4, 654183, 0)) | 0, r4 = h3 + D4 | 0, r4 = n4 >>> 0 > k4 >>> 0 ? r4 + 1 | 0 : r4, n4 = kA(R4, Q4, -997805, -1), D4 = h3 + r4 | 0, D4 = n4 >>> 0 > (k4 = n4 + k4 | 0) >>> 0 ? D4 + 1 | 0 : D4, P4 = w4 = F4 - (r4 = -2097152 & w4) | 0, i4 = n4 = t4 - ((r4 >>> 0 > F4 >>> 0) + N4 | 0) | 0, t4 = kA(d4, v4, 136657, 0), r4 = h3 + D4 | 0, r4 = t4 >>> 0 > (k4 = t4 + k4 | 0) >>> 0 ? r4 + 1 | 0 : r4, t4 = kA(w4, n4, -683901, -1), D4 = h3 + r4 | 0, n4 = D4 = t4 >>> 0 > (_4 = t4 + k4 | 0) >>> 0 ? D4 + 1 | 0 : D4, N4 = r4 = D4 - ((_4 >>> 0 < 4293918720) - 1 | 0) | 0, D4 = (2097151 & r4) << 11 | (w4 = _4 - -1048576 | 0) >>> 21, r4 = (r4 >> 21) + y4 | 0, H4 = D4 = (r4 = D4 >>> 0 > (k4 = D4 + H4 | 0) >>> 0 ? r4 + 1 | 0 : r4) - ((k4 >>> 0 < 4293918720) - 1 | 0) | 0, F4 = (2097151 & D4) << 11 | (y4 = k4 - -1048576 | 0) >>> 21, D4 = (D4 >> 21) + T2 | 0, O2 = p4 = F4 + x4 | 0, p4 = F4 >>> 0 > p4 >>> 0 ? D4 + 1 | 0 : D4, V2 = k4 - (D4 = -2097152 & y4) | 0, Z2 = r4 - ((D4 >>> 0 > k4 >>> 0) + H4 | 0) | 0, x4 = _4 - (r4 = -2097152 & w4) | 0, T2 = n4 - ((r4 >>> 0 > _4 >>> 0) + N4 | 0) | 0, n4 = kA(z4, l4, 666643, 0), r4 = (D4 = a3[A8 + 14 | 0]) >>> 24 | 0, y4 = D4 << 8 | (N4 = a3[A8 + 10 | 0] | a3[A8 + 11 | 0] << 8 | a3[A8 + 12 | 0] << 16 | a3[A8 + 13 | 0] << 24) >>> 24, t4 = r4, D4 = (r4 = a3[A8 + 15 | 0]) >>> 16 | 0, D4 |= t4, t4 = h3, t4 = (r4 = 2097151 & ((1 & D4) << 31 | (r4 = r4 << 16 | y4) >>> 1)) >>> 0 > (D4 = r4 + n4 | 0) >>> 0 ? t4 + 1 | 0 : t4, y4 = (r4 = D4) + (D4 = kA(L4, q4, 470296, 0)) | 0, r4 = h3 + t4 | 0, r4 = D4 >>> 0 > y4 >>> 0 ? r4 + 1 | 0 : r4, D4 = kA(R4, Q4, 654183, 0), r4 = h3 + r4 | 0, r4 = D4 >>> 0 > (t4 = D4 + y4 | 0) >>> 0 ? r4 + 1 | 0 : r4, y4 = (D4 = t4) + (t4 = kA(d4, v4, -997805, -1)) | 0, D4 = h3 + r4 | 0, D4 = t4 >>> 0 > y4 >>> 0 ? D4 + 1 | 0 : D4, r4 = kA(P4, i4, 136657, 0), D4 = h3 + D4 | 0, _4 = t4 = r4 + y4 | 0, y4 = r4 >>> 0 > t4 >>> 0 ? D4 + 1 | 0 : D4, s4 = S4 - (r4 = -2097152 & s4) | 0, n4 = M4 - ((r4 >>> 0 > S4 >>> 0) + e4 | 0) | 0, t4 = kA(I7, 0, 136657, 0), r4 = h3, r4 = (D4 = (a3[A8 + 28 | 0] | a3[A8 + 29 | 0] << 8 | a3[A8 + 30 | 0] << 16 | a3[A8 + 31 | 0] << 24) >>> 7 & 2097151) >>> 0 > (t4 = D4 + t4 | 0) >>> 0 ? r4 + 1 | 0 : r4, w4 = (D4 = t4) + (t4 = kA(u4, 0, -997805, -1)) | 0, D4 = h3 + r4 | 0, D4 = t4 >>> 0 > w4 >>> 0 ? D4 + 1 | 0 : D4, r4 = kA(g6, X3, -683901, -1), D4 = h3 + D4 | 0, D4 = r4 >>> 0 > (t4 = r4 + w4 | 0) >>> 0 ? D4 + 1 | 0 : D4, w4 = (r4 = kA(b4, 0, 666643, 0)) + t4 | 0, t4 = h3 + D4 | 0, t4 = r4 >>> 0 > w4 >>> 0 ? t4 + 1 | 0 : t4, D4 = kA(C4, 0, 470296, 0), r4 = h3 + t4 | 0, r4 = D4 >>> 0 > (w4 = D4 + w4 | 0) >>> 0 ? r4 + 1 | 0 : r4, D4 = kA(B4, j3, 654183, 0), r4 = h3 + r4 | 0, D4 = (U4 >> 21) + (D4 >>> 0 > (t4 = D4 + w4 | 0) >>> 0 ? r4 + 1 | 0 : r4) | 0, F4 = D4 = (w4 = (2097151 & U4) << 11 | J4 >>> 21) >>> 0 > (J4 = w4 + t4 | 0) >>> 0 ? D4 + 1 | 0 : D4, H4 = r4 = D4 - ((J4 >>> 0 < 4293918720) - 1 | 0) | 0, w4 = (2097151 & r4) << 11 | (k4 = J4 - -1048576 | 0) >>> 21, r4 = (r4 >> 21) + n4 | 0, K4 = r4 = (D4 = w4 + s4 | 0) >>> 0 < w4 >>> 0 ? r4 + 1 | 0 : r4, U4 = D4, D4 = kA(D4, r4, -683901, -1), r4 = h3 + y4 | 0, w4 = t4 = D4 + _4 | 0, y4 = D4 >>> 0 > t4 >>> 0 ? r4 + 1 | 0 : r4, r4 = kA(L4, q4, 666643, 0), D4 = h3, D4 = r4 >>> 0 > (t4 = r4 + (N4 >>> 4 & 2097151) | 0) >>> 0 ? D4 + 1 | 0 : D4, r4 = kA(R4, Q4, 470296, 0), D4 = h3 + D4 | 0, D4 = r4 >>> 0 > (t4 = r4 + t4 | 0) >>> 0 ? D4 + 1 | 0 : D4, n4 = (r4 = kA(d4, v4, 654183, 0)) + t4 | 0, t4 = h3 + D4 | 0, t4 = r4 >>> 0 > n4 >>> 0 ? t4 + 1 | 0 : t4, D4 = kA(P4, i4, -997805, -1), r4 = h3 + t4 | 0, r4 = D4 >>> 0 > (n4 = D4 + n4 | 0) >>> 0 ? r4 + 1 | 0 : r4, D4 = kA(U4, K4, 136657, 0), r4 = h3 + r4 | 0, M4 = r4 = D4 >>> 0 > (S4 = D4 + n4 | 0) >>> 0 ? r4 + 1 | 0 : r4, l4 = D4 = r4 - ((S4 >>> 0 < 4293918720) - 1 | 0) | 0, r4 = w4, w4 = (2097151 & D4) << 11 | (s4 = S4 - -1048576 | 0) >>> 21, D4 = (D4 >> 21) + y4 | 0, L4 = y4 = (D4 = (t4 = r4 + w4 | 0) >>> 0 < w4 >>> 0 ? D4 + 1 | 0 : D4) - ((t4 >>> 0 < 4293918720) - 1 | 0) | 0, r4 = (r4 = y4 >> 21) + T2 | 0, z4 = w4 = (y4 = (2097151 & y4) << 11 | (n4 = t4 - -1048576 | 0) >>> 21) + x4 | 0, _4 = y4 >>> 0 > w4 >>> 0 ? r4 + 1 | 0 : r4, w4 = t4, t4 = D4, y4 = (J4 - (D4 = -2097152 & k4) | 0) + (k4 = (2097151 & G4) << 11 | Y4 >>> 21) | 0, D4 = (F4 - ((D4 >>> 0 > J4 >>> 0) + H4 | 0) | 0) + (G4 >> 21) | 0, N4 = D4 = y4 >>> 0 < k4 >>> 0 ? D4 + 1 | 0 : D4, u4 = D4 = D4 - ((y4 >>> 0 < 4293918720) - 1 | 0) | 0, Y4 = r4 = D4 >> 21, r4 = kA(b4 = (2097151 & D4) << 11 | (H4 = y4 - -1048576 | 0) >>> 21, r4, -683901, -1), t4 = h3 + t4 | 0, t4 = r4 >>> 0 > (D4 = r4 + w4 | 0) >>> 0 ? t4 + 1 | 0 : t4, X3 = D4 - (r4 = -2097152 & n4) | 0, j3 = t4 - ((r4 >>> 0 > D4 >>> 0) + L4 | 0) | 0, r4 = kA(b4, Y4, 136657, 0), D4 = M4 + h3 | 0, q4 = (t4 = r4 + S4 | 0) - (r4 = -2097152 & s4) | 0, L4 = (D4 = t4 >>> 0 < S4 >>> 0 ? D4 + 1 | 0 : D4) - ((r4 >>> 0 > t4 >>> 0) + l4 | 0) | 0, D4 = kA(R4, Q4, 666643, 0), t4 = h3, t4 = (r4 = (a3[A8 + 7 | 0] | a3[A8 + 8 | 0] << 8 | a3[A8 + 9 | 0] << 16 | a3[A8 + 10 | 0] << 24) >>> 7 & 2097151) >>> 0 > (D4 = r4 + D4 | 0) >>> 0 ? t4 + 1 | 0 : t4, w4 = (r4 = kA(d4, v4, 470296, 0)) + D4 | 0, D4 = h3 + t4 | 0, D4 = r4 >>> 0 > w4 >>> 0 ? D4 + 1 | 0 : D4, r4 = kA(P4, i4, 654183, 0), D4 = h3 + D4 | 0, D4 = r4 >>> 0 > (t4 = r4 + w4 | 0) >>> 0 ? D4 + 1 | 0 : D4, w4 = (r4 = t4) + (t4 = kA(U4, K4, -997805, -1)) | 0, r4 = h3 + D4 | 0, k4 = w4, w4 = t4 >>> 0 > w4 >>> 0 ? r4 + 1 | 0 : r4, M4 = kA(d4, v4, 666643, 0), r4 = (D4 = a3[A8 + 6 | 0]) >>> 24 | 0, n4 = D4 << 8 | (J4 = a3[A8 + 2 | 0] | a3[A8 + 3 | 0] << 8 | a3[A8 + 4 | 0] << 16 | a3[A8 + 5 | 0] << 24) >>> 24, t4 = r4, D4 = (r4 = a3[A8 + 7 | 0]) >>> 16 | 0, D4 = 2097151 & ((3 & (D4 |= t4)) << 30 | (r4 = r4 << 16 | n4) >>> 2), r4 = h3, r4 = D4 >>> 0 > (t4 = D4 + M4 | 0) >>> 0 ? r4 + 1 | 0 : r4, n4 = (D4 = kA(P4, i4, 470296, 0)) + t4 | 0, t4 = h3 + r4 | 0, t4 = D4 >>> 0 > n4 >>> 0 ? t4 + 1 | 0 : t4, D4 = kA(U4, K4, 654183, 0), r4 = h3 + t4 | 0, M4 = r4 = D4 >>> 0 > (F4 = D4 + n4 | 0) >>> 0 ? r4 + 1 | 0 : r4, G4 = r4 = r4 - ((F4 >>> 0 < 4293918720) - 1 | 0) | 0, D4 = (t4 = r4 >> 21) + w4 | 0, S4 = r4 = (D4 = (r4 = (2097151 & r4) << 11 | (s4 = F4 - -1048576 | 0) >>> 21) >>> 0 > (n4 = r4 + k4 | 0) >>> 0 ? D4 + 1 | 0 : D4) - ((n4 >>> 0 < 4293918720) - 1 | 0) | 0, k4 = (2097151 & r4) << 11 | (w4 = n4 - -1048576 | 0) >>> 21, r4 = (r4 >> 21) + L4 | 0, L4 = d4 = k4 + q4 | 0, k4 = k4 >>> 0 > d4 >>> 0 ? r4 + 1 | 0 : r4, r4 = kA(b4, Y4, -997805, -1), D4 = h3 + D4 | 0, D4 = r4 >>> 0 > (t4 = r4 + n4 | 0) >>> 0 ? D4 + 1 | 0 : D4, R4 = t4 - (r4 = -2097152 & w4) | 0, v4 = D4 - ((r4 >>> 0 > t4 >>> 0) + S4 | 0) | 0, D4 = kA(b4, Y4, 654183, 0), r4 = M4 + h3 | 0, d4 = (t4 = D4 + F4 | 0) - (D4 = -2097152 & s4) | 0, G4 = (r4 = t4 >>> 0 < F4 >>> 0 ? r4 + 1 | 0 : r4) - ((D4 >>> 0 > t4 >>> 0) + G4 | 0) | 0, r4 = kA(P4, i4, 666643, 0), D4 = h3, D4 = r4 >>> 0 > (t4 = r4 + (J4 >>> 5 & 2097151) | 0) >>> 0 ? D4 + 1 | 0 : D4, r4 = kA(U4, K4, 470296, 0), D4 = h3 + D4 | 0, n4 = t4 = r4 + t4 | 0, t4 = r4 >>> 0 > t4 >>> 0 ? D4 + 1 | 0 : D4, w4 = kA(U4, K4, 666643, 0), D4 = (r4 = a3[A8 + 2 | 0]) << 16 & 2031616 | a3[0 | A8] | a3[A8 + 1 | 0] << 8, r4 = h3, M4 = r4 = D4 >>> 0 > (S4 = w4 + D4 | 0) >>> 0 ? r4 + 1 | 0 : r4, K4 = r4 = r4 - ((S4 >>> 0 < 4293918720) - 1 | 0) | 0, w4 = (2097151 & r4) << 11 | (s4 = S4 - -1048576 | 0) >>> 21, r4 = (r4 >> 21) + t4 | 0, t4 = r4 = w4 >>> 0 > (F4 = w4 + n4 | 0) >>> 0 ? r4 + 1 | 0 : r4, J4 = r4 = r4 - ((F4 >>> 0 < 4293918720) - 1 | 0) | 0, w4 = (2097151 & r4) << 11 | (n4 = F4 - -1048576 | 0) >>> 21, r4 = (r4 >> 21) + G4 | 0, w4 = w4 >>> 0 > (G4 = U4 = w4 + d4 | 0) >>> 0 ? r4 + 1 | 0 : r4, r4 = kA(b4, Y4, 470296, 0), t4 = t4 + h3 | 0, t4 = (D4 = r4 + F4 | 0) >>> 0 < F4 >>> 0 ? t4 + 1 | 0 : t4, F4 = D4 - (r4 = -2097152 & n4) | 0, n4 = t4 - ((r4 >>> 0 > D4 >>> 0) + J4 | 0) | 0, D4 = kA(b4, Y4, 666643, 0), r4 = h3 + (M4 - (((t4 = -2097152 & s4) >>> 0 > S4 >>> 0) + K4 | 0) | 0) | 0, D4 = (t4 = (r4 = D4 >>> 0 > (U4 = D4 + (S4 - t4 | 0) | 0) >>> 0 ? r4 + 1 | 0 : r4) >> 21) + n4 | 0, r4 = (r4 = (D4 = (r4 = (2097151 & r4) << 11 | U4 >>> 21) >>> 0 > (J4 = r4 + F4 | 0) >>> 0 ? D4 + 1 | 0 : D4) >> 21) + w4 | 0, D4 = (D4 = (r4 = (D4 = (2097151 & D4) << 11 | J4 >>> 21) >>> 0 > (G4 = D4 + G4 | 0) >>> 0 ? r4 + 1 | 0 : r4) >> 21) + v4 | 0, t4 = (r4 = (D4 = (r4 = (2097151 & r4) << 11 | G4 >>> 21) >>> 0 > (w4 = r4 + R4 | 0) >>> 0 ? D4 + 1 | 0 : D4) >> 21) + k4 | 0, r4 = (D4 = (t4 = (D4 = (2097151 & D4) << 11 | w4 >>> 21) >>> 0 > (Y4 = D4 + L4 | 0) >>> 0 ? t4 + 1 | 0 : t4) >> 21) + j3 | 0, D4 = (t4 = (r4 = (t4 = (2097151 & t4) << 11 | Y4 >>> 21) >>> 0 > (S4 = t4 + X3 | 0) >>> 0 ? r4 + 1 | 0 : r4) >> 21) + _4 | 0, r4 = (r4 = (D4 = (r4 = (2097151 & r4) << 11 | S4 >>> 21) >>> 0 > (F4 = r4 + z4 | 0) >>> 0 ? D4 + 1 | 0 : D4) >> 21) + Z2 | 0, D4 = (D4 = (r4 = (D4 = (2097151 & D4) << 11 | F4 >>> 21) >>> 0 > (_4 = D4 + V2 | 0) >>> 0 ? r4 + 1 | 0 : r4) >> 21) + p4 | 0, t4 = (r4 = (D4 = (r4 = (2097151 & r4) << 11 | _4 >>> 21) >>> 0 > (k4 = r4 + O2 | 0) >>> 0 ? D4 + 1 | 0 : D4) >> 21) + c4 | 0, r4 = (D4 = (t4 = (D4 = (2097151 & D4) << 11 | k4 >>> 21) >>> 0 > (M4 = D4 + f4 | 0) >>> 0 ? t4 + 1 | 0 : t4) >> 21) + m4 | 0, n4 = (H4 = y4 - (D4 = -2097152 & H4) | 0) + ((2097151 & (r4 = (t4 = (2097151 & t4) << 11 | M4 >>> 21) >>> 0 > (s4 = t4 + o4 | 0) >>> 0 ? r4 + 1 | 0 : r4)) << 11 | s4 >>> 21) | 0, r4 = (N4 - ((D4 >>> 0 > y4 >>> 0) + u4 | 0) | 0) + (r4 >> 21) | 0, H4 = D4 = (r4 = n4 >>> 0 < H4 >>> 0 ? r4 + 1 | 0 : r4) >> 21, U4 = (r4 = kA(p4 = (2097151 & r4) << 11 | n4 >>> 21, D4, 666643, 0)) + (D4 = 2097151 & U4) | 0, r4 = h3, y4 = r4 = D4 >>> 0 > U4 >>> 0 ? r4 + 1 | 0 : r4, E3[0 | A8] = U4, E3[A8 + 1 | 0] = (255 & r4) << 24 | U4 >>> 8, r4 = 2097151 & J4, D4 = kA(p4, H4, 470296, 0) + r4 | 0, t4 = h3, r4 = (y4 >> 21) + (r4 >>> 0 > D4 >>> 0 ? t4 + 1 | 0 : t4) | 0, r4 = (N4 = (2097151 & y4) << 11 | U4 >>> 21) >>> 0 > (J4 = N4 + D4 | 0) >>> 0 ? r4 + 1 | 0 : r4, E3[A8 + 4 | 0] = (2047 & r4) << 21 | J4 >>> 11, D4 = r4, t4 = J4, E3[A8 + 3 | 0] = (7 & r4) << 29 | t4 >>> 3, E3[A8 + 2 | 0] = 31 & ((65535 & y4) << 16 | U4 >>> 16) | t4 << 5, y4 = 2097151 & G4, G4 = kA(p4, H4, 654183, 0) + y4 | 0, r4 = h3, J4 = (2097151 & D4) << 11 | t4 >>> 21, D4 = (D4 >> 21) + (y4 = y4 >>> 0 > G4 >>> 0 ? r4 + 1 | 0 : r4) | 0, r4 = D4 = (G4 = J4 + G4 | 0) >>> 0 < J4 >>> 0 ? D4 + 1 | 0 : D4, E3[A8 + 6 | 0] = (63 & r4) << 26 | G4 >>> 6, y4 = G4, G4 = 0, E3[A8 + 5 | 0] = G4 << 13 | (1572864 & t4) >>> 19 | y4 << 2, t4 = 2097151 & w4, w4 = kA(p4, H4, -997805, -1) + t4 | 0, D4 = h3, D4 = t4 >>> 0 > w4 >>> 0 ? D4 + 1 | 0 : D4, G4 = (2097151 & (t4 = r4)) << 11 | y4 >>> 21, t4 = (r4 >>= 21) + D4 | 0, t4 = (w4 = G4 + w4 | 0) >>> 0 < G4 >>> 0 ? t4 + 1 | 0 : t4, E3[A8 + 9 | 0] = (511 & t4) << 23 | w4 >>> 9, E3[A8 + 8 | 0] = (1 & t4) << 31 | w4 >>> 1, D4 = 0, E3[A8 + 7 | 0] = D4 << 18 | (2080768 & y4) >>> 14 | w4 << 7, D4 = 2097151 & Y4, y4 = kA(p4, H4, 136657, 0) + D4 | 0, r4 = h3, r4 = D4 >>> 0 > y4 >>> 0 ? r4 + 1 | 0 : r4, Y4 = (2097151 & (D4 = t4)) << 11 | w4 >>> 21, D4 = r4 + (t4 = D4 >> 21) | 0, D4 = (y4 = Y4 + y4 | 0) >>> 0 < Y4 >>> 0 ? D4 + 1 | 0 : D4, E3[A8 + 12 | 0] = (4095 & D4) << 20 | y4 >>> 12, t4 = y4, E3[A8 + 11 | 0] = (15 & D4) << 28 | t4 >>> 4, y4 = 0, E3[A8 + 10 | 0] = y4 << 15 | (1966080 & w4) >>> 17 | t4 << 4, y4 = 2097151 & S4, w4 = kA(p4, H4, -683901, -1) + y4 | 0, r4 = h3, r4 = y4 >>> 0 > w4 >>> 0 ? r4 + 1 | 0 : r4, y4 = D4, D4 = r4 + (D4 >>= 21) | 0, D4 = (y4 = (d4 = w4) + (w4 = (2097151 & y4) << 11 | t4 >>> 21) | 0) >>> 0 < w4 >>> 0 ? D4 + 1 | 0 : D4, E3[A8 + 14 | 0] = (127 & D4) << 25 | y4 >>> 7, w4 = 0, E3[A8 + 13 | 0] = w4 << 12 | (1048576 & t4) >>> 20 | y4 << 1, r4 = D4 >> 21, t4 = (D4 = (2097151 & D4) << 11 | y4 >>> 21) >>> 0 > (w4 = D4 + (2097151 & F4) | 0) >>> 0 ? r4 + 1 | 0 : r4, E3[A8 + 17 | 0] = (1023 & t4) << 22 | w4 >>> 10, E3[A8 + 16 | 0] = (3 & t4) << 30 | w4 >>> 2, D4 = 0, E3[A8 + 15 | 0] = D4 << 17 | (2064384 & y4) >>> 15 | w4 << 6, r4 = t4 >> 21, r4 = (D4 = (2097151 & t4) << 11 | w4 >>> 21) >>> 0 > (t4 = D4 + (2097151 & _4) | 0) >>> 0 ? r4 + 1 | 0 : r4, E3[A8 + 20 | 0] = (8191 & r4) << 19 | t4 >>> 13, E3[A8 + 19 | 0] = (31 & r4) << 27 | t4 >>> 5, y4 = (D4 = 2097151 & k4) + (k4 = (2097151 & r4) << 11 | t4 >>> 21) | 0, D4 = r4 >> 21, D4 = y4 >>> 0 < k4 >>> 0 ? D4 + 1 | 0 : D4, k4 = y4, E3[A8 + 21 | 0] = y4, _4 = 0, E3[A8 + 18 | 0] = _4 << 14 | (1835008 & w4) >>> 18 | t4 << 3, E3[A8 + 22 | 0] = (255 & D4) << 24 | y4 >>> 8, t4 = D4 >> 21, t4 = (y4 = (w4 = (2097151 & D4) << 11 | y4 >>> 21) + (2097151 & M4) | 0) >>> 0 < w4 >>> 0 ? t4 + 1 | 0 : t4, E3[A8 + 25 | 0] = (2047 & t4) << 21 | y4 >>> 11, E3[A8 + 24 | 0] = (7 & t4) << 29 | y4 >>> 3, E3[A8 + 23 | 0] = 31 & ((65535 & D4) << 16 | k4 >>> 16) | y4 << 5, r4 = t4 >> 21, r4 = (D4 = (2097151 & t4) << 11 | y4 >>> 21) >>> 0 > (t4 = D4 + (2097151 & s4) | 0) >>> 0 ? r4 + 1 | 0 : r4, E3[A8 + 27 | 0] = (63 & r4) << 26 | t4 >>> 6, w4 = 0, E3[A8 + 26 | 0] = w4 << 13 | (1572864 & y4) >>> 19 | t4 << 2, D4 = r4 >> 21, D4 = (r4 = (y4 = (2097151 & r4) << 11 | t4 >>> 21) + (2097151 & n4) | 0) >>> 0 < y4 >>> 0 ? D4 + 1 | 0 : D4, E3[A8 + 31 | 0] = (131071 & D4) << 15 | r4 >>> 17, E3[A8 + 30 | 0] = (511 & D4) << 23 | r4 >>> 9, E3[A8 + 29 | 0] = (1 & D4) << 31 | r4 >>> 1, y4 = 0, E3[A8 + 28 | 0] = y4 << 18 | (2080768 & t4) >>> 14 | r4 << 7;
                    }
                    function S3(A8, I7, g6, C4, B4, Q4) {
                      var i4, f4 = 0, e4 = 0, r4 = 0, D4 = 0, t4 = 0, y4 = 0, h4 = 0, n4 = 0, s4 = 0, k4 = 0, S4 = 0, _4 = 0, M4 = 0, p4 = 0, J4 = 0, Y4 = 0, d4 = 0, K4 = 0, L4 = 0, u4 = 0, x4 = 0, m4 = 0, l4 = 0, z4 = 0, q4 = 0, X3 = 0, j3 = 0, T2 = 0, O2 = 0, V2 = 0, Z2 = 0, $2 = 0, AA2 = 0, IA2 = 0, gA2 = 0, CA2 = 0, BA2 = 0, QA2 = 0;
                      for (w3 = i4 = w3 - 592 | 0, p4 = -1, S4 = A8 + 32 | 0, k4 = 32, _4 = 1; J4 = a3[2672 + (t4 = k4 - 1 | 0) | 0], r4 = (t4 = ((e4 = a3[t4 + S4 | 0]) ^ J4) - 1 >> 8 & _4) & (y4 = a3[S4 + (k4 = k4 - 2 | 0) | 0]) - (D4 = a3[k4 + 2672 | 0]) >> 8 | 255 & (e4 - J4 >>> 8 & _4 | r4), _4 = t4 & (D4 ^ y4) - 1 >> 8, k4; )
                        ;
                      if (255 & r4 && !(rA(A8) | !(((127 & (-1 ^ a3[B4 + 31 | 0]) | a3[B4 + 1 | 0] & a3[B4 + 2 | 0] & a3[B4 + 3 | 0] & a3[B4 + 4 | 0] & a3[B4 + 5 | 0] & a3[B4 + 6 | 0] & a3[B4 + 7 | 0] & a3[B4 + 8 | 0] & a3[B4 + 9 | 0] & a3[B4 + 10 | 0] & a3[B4 + 11 | 0] & a3[B4 + 12 | 0] & a3[B4 + 13 | 0] & a3[B4 + 14 | 0] & a3[B4 + 15 | 0] & a3[B4 + 16 | 0] & a3[B4 + 17 | 0] & a3[B4 + 18 | 0] & a3[B4 + 19 | 0] & a3[B4 + 20 | 0] & a3[B4 + 21 | 0] & a3[B4 + 22 | 0] & a3[B4 + 23 | 0] & a3[B4 + 24 | 0] & a3[B4 + 25 | 0] & a3[B4 + 26 | 0] & a3[B4 + 27 | 0] & a3[B4 + 28 | 0] & a3[B4 + 30 | 0] & a3[B4 + 29 | 0] ^ 255) - 1 & 236 - a3[0 | B4] ^ -1) >>> 8 & 1) || rA(B4) || U3(t4 = i4 + 128 | 0, B4))) {
                        for (cA(e4 = i4 + 384 | 0), Q4 && R3(e4, 35136, 34, 0), R3(e4, A8, 32, 0), R3(e4, B4, 32, 0), R3(e4, I7, g6, C4), N3(e4, g6 = i4 + 320 | 0), F3(g6), C4 = i4 + 8 | 0, B4 = 0, I7 = 0, w3 = f4 = w3 - 2272 | 0; e4 = g6 + (B4 >>> 3 | 0) | 0, E3[(Q4 = f4 + 2016 | 0) + B4 | 0] = a3[0 | e4] >>> (6 & B4) & 1, E3[(r4 = Q4) + (Q4 = 1 | B4) | 0] = a3[0 | e4] >>> (7 & Q4) & 1, 256 != (0 | (B4 = B4 + 2 | 0)); )
                          ;
                        for (; ; ) {
                          I7 = (g6 = I7) + 1 | 0;
                          A:
                            if (!(g6 >>> 0 > 254) && a3[0 | (r4 = (B4 = f4 + 2016 | 0) + g6 | 0)]) {
                              I:
                                if (B4 = E3[0 | (D4 = I7 + B4 | 0)])
                                  if ((0 | (B4 = (e4 = B4 << 1) + (Q4 = E3[0 | r4]) | 0)) <= 15)
                                    E3[0 | r4] = B4, E3[0 | D4] = 0;
                                  else {
                                    if ((0 | (B4 = Q4 - e4 | 0)) < -15)
                                      break A;
                                    for (E3[0 | r4] = B4, B4 = I7; ; ) {
                                      if (!a3[0 | (Q4 = (f4 + 2016 | 0) + B4 | 0)]) {
                                        E3[0 | Q4] = 1;
                                        break I;
                                      }
                                      if (E3[0 | Q4] = 0, Q4 = B4 >>> 0 < 255, B4 = B4 + 1 | 0, !Q4)
                                        break;
                                    }
                                  }
                              if (!(g6 >>> 0 > 253)) {
                                I:
                                  if (Q4 = E3[0 | (y4 = (B4 = g6 + 2 | 0) + (f4 + 2016 | 0) | 0)])
                                    if ((0 | (Q4 = (D4 = Q4 << 2) + (e4 = E3[0 | r4]) | 0)) >= 16) {
                                      if ((0 | (Q4 = e4 - D4 | 0)) < -15)
                                        break A;
                                      for (E3[0 | r4] = Q4; ; ) {
                                        if (a3[0 | (Q4 = (f4 + 2016 | 0) + B4 | 0)]) {
                                          if (E3[0 | Q4] = 0, Q4 = B4 >>> 0 < 255, B4 = B4 + 1 | 0, Q4)
                                            continue;
                                          break I;
                                        }
                                        break;
                                      }
                                      E3[0 | Q4] = 1;
                                    } else
                                      E3[0 | r4] = Q4, E3[0 | y4] = 0;
                                if (!(g6 >>> 0 > 252)) {
                                  I:
                                    if (Q4 = E3[0 | (y4 = (B4 = g6 + 3 | 0) + (f4 + 2016 | 0) | 0)])
                                      if ((0 | (Q4 = (D4 = Q4 << 3) + (e4 = E3[0 | r4]) | 0)) >= 16) {
                                        if ((0 | (Q4 = e4 - D4 | 0)) < -15)
                                          break A;
                                        for (E3[0 | r4] = Q4; ; ) {
                                          if (a3[0 | (Q4 = (f4 + 2016 | 0) + B4 | 0)]) {
                                            if (E3[0 | Q4] = 0, Q4 = B4 >>> 0 < 255, B4 = B4 + 1 | 0, Q4)
                                              continue;
                                            break I;
                                          }
                                          break;
                                        }
                                        E3[0 | Q4] = 1;
                                      } else
                                        E3[0 | r4] = Q4, E3[0 | y4] = 0;
                                  if (!(g6 >>> 0 > 251)) {
                                    I:
                                      if (Q4 = E3[0 | (y4 = (B4 = g6 + 4 | 0) + (f4 + 2016 | 0) | 0)])
                                        if ((0 | (Q4 = (D4 = Q4 << 4) + (e4 = E3[0 | r4]) | 0)) >= 16) {
                                          if ((0 | (Q4 = e4 - D4 | 0)) < -15)
                                            break A;
                                          for (E3[0 | r4] = Q4; ; ) {
                                            if (a3[0 | (Q4 = (f4 + 2016 | 0) + B4 | 0)]) {
                                              if (E3[0 | Q4] = 0, Q4 = B4 >>> 0 < 255, B4 = B4 + 1 | 0, Q4)
                                                continue;
                                              break I;
                                            }
                                            break;
                                          }
                                          E3[0 | Q4] = 1;
                                        } else
                                          E3[0 | r4] = Q4, E3[0 | y4] = 0;
                                    if (!(g6 >>> 0 > 250)) {
                                      I:
                                        if (Q4 = E3[0 | (y4 = (B4 = g6 + 5 | 0) + (f4 + 2016 | 0) | 0)])
                                          if ((0 | (Q4 = (D4 = Q4 << 5) + (e4 = E3[0 | r4]) | 0)) >= 16) {
                                            if ((0 | (Q4 = e4 - D4 | 0)) < -15)
                                              break A;
                                            for (E3[0 | r4] = Q4; ; ) {
                                              if (a3[0 | (Q4 = (f4 + 2016 | 0) + B4 | 0)]) {
                                                if (E3[0 | Q4] = 0, Q4 = B4 >>> 0 < 255, B4 = B4 + 1 | 0, Q4)
                                                  continue;
                                                break I;
                                              }
                                              break;
                                            }
                                            E3[0 | Q4] = 1;
                                          } else
                                            E3[0 | r4] = Q4, E3[0 | y4] = 0;
                                      if (!(g6 >>> 0 > 249) && (g6 = E3[0 | (D4 = (B4 = g6 + 6 | 0) + (f4 + 2016 | 0) | 0)]))
                                        if ((0 | (g6 = (e4 = g6 << 6) + (Q4 = E3[0 | r4]) | 0)) >= 16) {
                                          if ((0 | (g6 = Q4 - e4 | 0)) < -15)
                                            break A;
                                          for (E3[0 | r4] = g6; ; ) {
                                            if (a3[0 | (g6 = (f4 + 2016 | 0) + B4 | 0)]) {
                                              if (E3[0 | g6] = 0, g6 = B4 >>> 0 < 255, B4 = B4 + 1 | 0, g6)
                                                continue;
                                              break A;
                                            }
                                            break;
                                          }
                                          E3[0 | g6] = 1;
                                        } else
                                          E3[0 | r4] = g6, E3[0 | D4] = 0;
                                    }
                                  }
                                }
                              }
                            }
                          if (256 == (0 | I7))
                            break;
                        }
                        for (B4 = 0; g6 = S4 + (B4 >>> 3 | 0) | 0, E3[(I7 = f4 + 1760 | 0) + B4 | 0] = a3[0 | g6] >>> (6 & B4) & 1, E3[(Q4 = I7) + (I7 = 1 | B4) | 0] = a3[0 | g6] >>> (7 & I7) & 1, 256 != (0 | (B4 = B4 + 2 | 0)); )
                          ;
                        for (I7 = 0; ; ) {
                          I7 = (g6 = I7) + 1 | 0;
                          A:
                            if (!(g6 >>> 0 > 254) && a3[0 | (r4 = (B4 = f4 + 1760 | 0) + g6 | 0)]) {
                              I:
                                if (B4 = E3[0 | (D4 = I7 + B4 | 0)])
                                  if ((0 | (B4 = (e4 = B4 << 1) + (Q4 = E3[0 | r4]) | 0)) <= 15)
                                    E3[0 | r4] = B4, E3[0 | D4] = 0;
                                  else {
                                    if ((0 | (B4 = Q4 - e4 | 0)) < -15)
                                      break A;
                                    for (E3[0 | r4] = B4, B4 = I7; ; ) {
                                      if (!a3[0 | (Q4 = (f4 + 1760 | 0) + B4 | 0)]) {
                                        E3[0 | Q4] = 1;
                                        break I;
                                      }
                                      if (E3[0 | Q4] = 0, Q4 = B4 >>> 0 < 255, B4 = B4 + 1 | 0, !Q4)
                                        break;
                                    }
                                  }
                              if (!(g6 >>> 0 > 253)) {
                                I:
                                  if (Q4 = E3[0 | (y4 = (B4 = g6 + 2 | 0) + (f4 + 1760 | 0) | 0)])
                                    if ((0 | (Q4 = (D4 = Q4 << 2) + (e4 = E3[0 | r4]) | 0)) >= 16) {
                                      if ((0 | (Q4 = e4 - D4 | 0)) < -15)
                                        break A;
                                      for (E3[0 | r4] = Q4; ; ) {
                                        if (a3[0 | (Q4 = (f4 + 1760 | 0) + B4 | 0)]) {
                                          if (E3[0 | Q4] = 0, Q4 = B4 >>> 0 < 255, B4 = B4 + 1 | 0, Q4)
                                            continue;
                                          break I;
                                        }
                                        break;
                                      }
                                      E3[0 | Q4] = 1;
                                    } else
                                      E3[0 | r4] = Q4, E3[0 | y4] = 0;
                                if (!(g6 >>> 0 > 252)) {
                                  I:
                                    if (Q4 = E3[0 | (y4 = (B4 = g6 + 3 | 0) + (f4 + 1760 | 0) | 0)])
                                      if ((0 | (Q4 = (D4 = Q4 << 3) + (e4 = E3[0 | r4]) | 0)) >= 16) {
                                        if ((0 | (Q4 = e4 - D4 | 0)) < -15)
                                          break A;
                                        for (E3[0 | r4] = Q4; ; ) {
                                          if (a3[0 | (Q4 = (f4 + 1760 | 0) + B4 | 0)]) {
                                            if (E3[0 | Q4] = 0, Q4 = B4 >>> 0 < 255, B4 = B4 + 1 | 0, Q4)
                                              continue;
                                            break I;
                                          }
                                          break;
                                        }
                                        E3[0 | Q4] = 1;
                                      } else
                                        E3[0 | r4] = Q4, E3[0 | y4] = 0;
                                  if (!(g6 >>> 0 > 251)) {
                                    I:
                                      if (Q4 = E3[0 | (y4 = (B4 = g6 + 4 | 0) + (f4 + 1760 | 0) | 0)])
                                        if ((0 | (Q4 = (D4 = Q4 << 4) + (e4 = E3[0 | r4]) | 0)) >= 16) {
                                          if ((0 | (Q4 = e4 - D4 | 0)) < -15)
                                            break A;
                                          for (E3[0 | r4] = Q4; ; ) {
                                            if (a3[0 | (Q4 = (f4 + 1760 | 0) + B4 | 0)]) {
                                              if (E3[0 | Q4] = 0, Q4 = B4 >>> 0 < 255, B4 = B4 + 1 | 0, Q4)
                                                continue;
                                              break I;
                                            }
                                            break;
                                          }
                                          E3[0 | Q4] = 1;
                                        } else
                                          E3[0 | r4] = Q4, E3[0 | y4] = 0;
                                    if (!(g6 >>> 0 > 250)) {
                                      I:
                                        if (Q4 = E3[0 | (y4 = (B4 = g6 + 5 | 0) + (f4 + 1760 | 0) | 0)])
                                          if ((0 | (Q4 = (D4 = Q4 << 5) + (e4 = E3[0 | r4]) | 0)) >= 16) {
                                            if ((0 | (Q4 = e4 - D4 | 0)) < -15)
                                              break A;
                                            for (E3[0 | r4] = Q4; ; ) {
                                              if (a3[0 | (Q4 = (f4 + 1760 | 0) + B4 | 0)]) {
                                                if (E3[0 | Q4] = 0, Q4 = B4 >>> 0 < 255, B4 = B4 + 1 | 0, Q4)
                                                  continue;
                                                break I;
                                              }
                                              break;
                                            }
                                            E3[0 | Q4] = 1;
                                          } else
                                            E3[0 | r4] = Q4, E3[0 | y4] = 0;
                                      if (!(g6 >>> 0 > 249) && (g6 = E3[0 | (D4 = (B4 = g6 + 6 | 0) + (f4 + 1760 | 0) | 0)]))
                                        if ((0 | (g6 = (e4 = g6 << 6) + (Q4 = E3[0 | r4]) | 0)) >= 16) {
                                          if ((0 | (g6 = Q4 - e4 | 0)) < -15)
                                            break A;
                                          for (E3[0 | r4] = g6; ; ) {
                                            if (a3[0 | (g6 = (f4 + 1760 | 0) + B4 | 0)]) {
                                              if (E3[0 | g6] = 0, g6 = B4 >>> 0 < 255, B4 = B4 + 1 | 0, g6)
                                                continue;
                                              break A;
                                            }
                                            break;
                                          }
                                          E3[0 | g6] = 1;
                                        } else
                                          E3[0 | r4] = g6, E3[0 | D4] = 0;
                                    }
                                  }
                                }
                              }
                            }
                          if (256 == (0 | I7))
                            break;
                        }
                        for (W(B4 = f4 + 480 | 0, t4), I7 = o3[t4 + 36 >> 2], o3[f4 + 192 >> 2] = o3[t4 + 32 >> 2], o3[f4 + 196 >> 2] = I7, I7 = o3[t4 + 28 >> 2], o3[f4 + 184 >> 2] = o3[t4 + 24 >> 2], o3[f4 + 188 >> 2] = I7, I7 = o3[t4 + 20 >> 2], o3[f4 + 176 >> 2] = o3[t4 + 16 >> 2], o3[f4 + 180 >> 2] = I7, I7 = o3[t4 + 12 >> 2], o3[f4 + 168 >> 2] = o3[t4 + 8 >> 2], o3[f4 + 172 >> 2] = I7, I7 = o3[t4 + 4 >> 2], o3[f4 + 160 >> 2] = o3[t4 >> 2], o3[f4 + 164 >> 2] = I7, I7 = o3[t4 + 52 >> 2], o3[f4 + 208 >> 2] = o3[t4 + 48 >> 2], o3[f4 + 212 >> 2] = I7, I7 = o3[t4 + 60 >> 2], o3[f4 + 216 >> 2] = o3[t4 + 56 >> 2], o3[f4 + 220 >> 2] = I7, I7 = o3[4 + (g6 = t4 - -64 | 0) >> 2], o3[f4 + 224 >> 2] = o3[g6 >> 2], o3[f4 + 228 >> 2] = I7, I7 = o3[t4 + 76 >> 2], o3[f4 + 232 >> 2] = o3[t4 + 72 >> 2], o3[f4 + 236 >> 2] = I7, I7 = o3[t4 + 44 >> 2], o3[f4 + 200 >> 2] = o3[t4 + 40 >> 2], o3[f4 + 204 >> 2] = I7, I7 = o3[t4 + 92 >> 2], o3[f4 + 248 >> 2] = o3[t4 + 88 >> 2], o3[f4 + 252 >> 2] = I7, I7 = o3[t4 + 100 >> 2], o3[f4 + 256 >> 2] = o3[t4 + 96 >> 2], o3[f4 + 260 >> 2] = I7, I7 = o3[t4 + 108 >> 2], o3[f4 + 264 >> 2] = o3[t4 + 104 >> 2], o3[f4 + 268 >> 2] = I7, I7 = o3[t4 + 116 >> 2], o3[f4 + 272 >> 2] = o3[t4 + 112 >> 2], o3[f4 + 276 >> 2] = I7, I7 = o3[t4 + 84 >> 2], o3[f4 + 240 >> 2] = o3[t4 + 80 >> 2], o3[f4 + 244 >> 2] = I7, G3(Q4 = f4 + 320 | 0, g6 = f4 + 160 | 0), H3(f4, Q4, h4 = f4 + 440 | 0), H3(f4 + 40 | 0, n4 = f4 + 360 | 0, s4 = f4 + 400 | 0), H3(f4 + 80 | 0, s4, h4), H3(f4 + 120 | 0, Q4, n4), b3(Q4, f4, B4), H3(g6, Q4, h4), H3(Y4 = f4 + 200 | 0, n4, s4), H3(d4 = f4 + 240 | 0, s4, h4), H3(M4 = f4 + 280 | 0, Q4, n4), W(I7 = f4 + 640 | 0, g6), b3(Q4, f4, I7), H3(g6, Q4, h4), H3(Y4, n4, s4), H3(d4, s4, h4), H3(M4, Q4, n4), W(I7 = f4 + 800 | 0, g6), b3(Q4, f4, I7), H3(g6, Q4, h4), H3(Y4, n4, s4), H3(d4, s4, h4), H3(M4, Q4, n4), W(I7 = f4 + 960 | 0, g6), b3(Q4, f4, I7), H3(g6, Q4, h4), H3(Y4, n4, s4), H3(d4, s4, h4), H3(M4, Q4, n4), W(I7 = f4 + 1120 | 0, g6), b3(Q4, f4, I7), H3(g6, Q4, h4), H3(Y4, n4, s4), H3(d4, s4, h4), H3(M4, Q4, n4), W(I7 = f4 + 1280 | 0, g6), b3(Q4, f4, I7), H3(g6, Q4, h4), H3(Y4, n4, s4), H3(d4, s4, h4), H3(M4, Q4, n4), W(I7 = f4 + 1440 | 0, g6), b3(Q4, f4, I7), H3(g6, Q4, h4), H3(Y4, n4, s4), H3(d4, s4, h4), H3(M4, Q4, n4), W(f4 + 1600 | 0, g6), o3[C4 + 32 >> 2] = 0, o3[C4 + 36 >> 2] = 0, o3[C4 + 24 >> 2] = 0, o3[C4 + 28 >> 2] = 0, o3[C4 + 16 >> 2] = 0, o3[C4 + 20 >> 2] = 0, o3[C4 + 8 >> 2] = 0, o3[C4 + 12 >> 2] = 0, o3[C4 >> 2] = 0, o3[C4 + 4 >> 2] = 0, o3[C4 + 44 >> 2] = 0, o3[C4 + 48 >> 2] = 0, o3[(j3 = C4 + 40 | 0) >> 2] = 1, o3[C4 + 52 >> 2] = 0, o3[C4 + 56 >> 2] = 0, o3[C4 + 60 >> 2] = 0, o3[C4 + 64 >> 2] = 0, o3[C4 + 68 >> 2] = 0, o3[C4 + 72 >> 2] = 0, o3[C4 + 84 >> 2] = 0, o3[C4 + 88 >> 2] = 0, o3[C4 + 76 >> 2] = 0, o3[C4 + 80 >> 2] = 1, o3[C4 + 92 >> 2] = 0, o3[C4 + 96 >> 2] = 0, o3[C4 + 100 >> 2] = 0, o3[C4 + 104 >> 2] = 0, o3[C4 + 108 >> 2] = 0, o3[C4 + 112 >> 2] = 0, o3[C4 + 116 >> 2] = 0, IA2 = C4 + 80 | 0, I7 = 255; ; ) {
                          A: {
                            I: {
                              if (!a3[(g6 = f4 + 2016 | 0) + I7 | 0] && !a3[(B4 = f4 + 1760 | 0) + I7 | 0]) {
                                if (!(a3[(Q4 = g6) + (g6 = I7 - 1 | 0) | 0] | a3[g6 + B4 | 0]))
                                  break I;
                                I7 = g6;
                              }
                              if ((0 | I7) < 0)
                                break A;
                              for (; G3(B4 = f4 + 320 | 0, C4), (0 | (Q4 = E3[(g6 = I7) + (f4 + 2016 | 0) | 0])) > 0 ? (H3(I7 = f4 + 160 | 0, B4, h4), H3(Y4, n4, s4), H3(d4, s4, h4), H3(M4, B4, n4), b3(B4, I7, (f4 + 480 | 0) + c3((254 & Q4) >>> 1 | 0, 160) | 0)) : (0 | Q4) >= 0 || (H3(I7 = f4 + 160 | 0, B4 = f4 + 320 | 0, h4), H3(Y4, n4, s4), H3(d4, s4, h4), H3(M4, B4, n4), P3(B4, I7, (f4 + 480 | 0) + c3((0 - Q4 & 254) >>> 1 | 0, 160) | 0)), (0 | (q4 = E3[g6 + (f4 + 1760 | 0) | 0])) > 0 ? (H3(I7 = f4 + 160 | 0, B4 = f4 + 320 | 0, h4), H3(Y4, n4, s4), H3(d4, s4, h4), H3(M4, B4, n4), v3(B4, I7, c3((254 & q4) >>> 1 | 0, 120) + 1488 | 0)) : (0 | q4) >= 0 || (H3(f4 + 160 | 0, X3 = f4 + 320 | 0, h4), H3(Y4, n4, s4), H3(d4, s4, h4), H3(M4, X3, n4), K4 = o3[f4 + 160 >> 2], L4 = o3[f4 + 200 >> 2], u4 = o3[f4 + 164 >> 2], x4 = o3[f4 + 204 >> 2], m4 = o3[f4 + 168 >> 2], l4 = o3[f4 + 208 >> 2], z4 = o3[f4 + 172 >> 2], k4 = o3[f4 + 212 >> 2], S4 = o3[f4 + 176 >> 2], _4 = o3[f4 + 216 >> 2], p4 = o3[f4 + 180 >> 2], J4 = o3[f4 + 220 >> 2], r4 = o3[f4 + 184 >> 2], y4 = o3[f4 + 224 >> 2], D4 = o3[f4 + 188 >> 2], e4 = o3[f4 + 228 >> 2], t4 = o3[f4 + 192 >> 2], Q4 = o3[f4 + 232 >> 2], B4 = o3[f4 + 236 >> 2], I7 = o3[f4 + 196 >> 2], o3[f4 + 396 >> 2] = B4 - I7, o3[f4 + 392 >> 2] = Q4 - t4, o3[f4 + 388 >> 2] = e4 - D4, o3[f4 + 384 >> 2] = y4 - r4, o3[f4 + 380 >> 2] = J4 - p4, o3[f4 + 376 >> 2] = _4 - S4, o3[f4 + 372 >> 2] = k4 - z4, o3[f4 + 368 >> 2] = l4 - m4, o3[f4 + 364 >> 2] = x4 - u4, o3[f4 + 360 >> 2] = L4 - K4, o3[f4 + 356 >> 2] = I7 + B4, o3[f4 + 352 >> 2] = Q4 + t4, o3[f4 + 348 >> 2] = e4 + D4, o3[f4 + 344 >> 2] = r4 + y4, o3[f4 + 340 >> 2] = p4 + J4, o3[f4 + 336 >> 2] = S4 + _4, o3[f4 + 332 >> 2] = k4 + z4, o3[f4 + 328 >> 2] = m4 + l4, o3[f4 + 324 >> 2] = u4 + x4, o3[f4 + 320 >> 2] = K4 + L4, H3(s4, X3, 40 + (I7 = c3((0 - q4 & 254) >>> 1 | 0, 120) + 1488 | 0) | 0), H3(n4, n4, I7), H3(h4, I7 + 80 | 0, M4), gA2 = o3[f4 + 276 >> 2], CA2 = o3[f4 + 272 >> 2], q4 = o3[f4 + 268 >> 2], X3 = o3[f4 + 264 >> 2], r4 = o3[f4 + 260 >> 2], y4 = o3[f4 + 256 >> 2], D4 = o3[f4 + 252 >> 2], e4 = o3[f4 + 248 >> 2], t4 = o3[f4 + 244 >> 2], Q4 = o3[f4 + 240 >> 2], T2 = o3[f4 + 360 >> 2], O2 = o3[f4 + 400 >> 2], V2 = o3[f4 + 364 >> 2], Z2 = o3[f4 + 404 >> 2], $2 = o3[f4 + 368 >> 2], AA2 = o3[f4 + 408 >> 2], K4 = o3[f4 + 372 >> 2], L4 = o3[f4 + 412 >> 2], u4 = o3[f4 + 376 >> 2], x4 = o3[f4 + 416 >> 2], m4 = o3[f4 + 380 >> 2], l4 = o3[f4 + 420 >> 2], z4 = o3[f4 + 384 >> 2], k4 = o3[f4 + 424 >> 2], S4 = o3[f4 + 388 >> 2], _4 = o3[f4 + 428 >> 2], p4 = o3[f4 + 392 >> 2], J4 = o3[f4 + 432 >> 2], B4 = o3[f4 + 396 >> 2], I7 = o3[f4 + 436 >> 2], o3[f4 + 396 >> 2] = B4 + I7, o3[f4 + 392 >> 2] = p4 + J4, o3[f4 + 388 >> 2] = S4 + _4, o3[f4 + 384 >> 2] = k4 + z4, o3[f4 + 380 >> 2] = m4 + l4, o3[f4 + 376 >> 2] = u4 + x4, o3[f4 + 372 >> 2] = K4 + L4, o3[f4 + 368 >> 2] = $2 + AA2, o3[f4 + 364 >> 2] = V2 + Z2, o3[f4 + 360 >> 2] = T2 + O2, o3[f4 + 356 >> 2] = I7 - B4, o3[f4 + 352 >> 2] = J4 - p4, o3[f4 + 348 >> 2] = _4 - S4, o3[f4 + 344 >> 2] = k4 - z4, o3[f4 + 340 >> 2] = l4 - m4, o3[f4 + 336 >> 2] = x4 - u4, o3[f4 + 332 >> 2] = L4 - K4, o3[f4 + 328 >> 2] = AA2 - $2, o3[f4 + 324 >> 2] = Z2 - V2, o3[f4 + 320 >> 2] = O2 - T2, K4 = Q4 << 1, L4 = o3[f4 + 440 >> 2], o3[f4 + 400 >> 2] = K4 - L4, u4 = t4 << 1, x4 = o3[f4 + 444 >> 2], o3[f4 + 404 >> 2] = u4 - x4, m4 = e4 << 1, l4 = o3[f4 + 448 >> 2], o3[f4 + 408 >> 2] = m4 - l4, z4 = D4 << 1, k4 = o3[f4 + 452 >> 2], o3[f4 + 412 >> 2] = z4 - k4, S4 = y4 << 1, _4 = o3[f4 + 456 >> 2], o3[f4 + 416 >> 2] = S4 - _4, p4 = r4 << 1, J4 = o3[f4 + 460 >> 2], o3[f4 + 420 >> 2] = p4 - J4, r4 = X3 << 1, y4 = o3[f4 + 464 >> 2], o3[f4 + 424 >> 2] = r4 - y4, D4 = q4 << 1, e4 = o3[f4 + 468 >> 2], o3[f4 + 428 >> 2] = D4 - e4, t4 = CA2 << 1, Q4 = o3[f4 + 472 >> 2], o3[f4 + 432 >> 2] = t4 - Q4, B4 = gA2 << 1, I7 = o3[f4 + 476 >> 2], o3[f4 + 436 >> 2] = B4 - I7, o3[f4 + 440 >> 2] = K4 + L4, o3[f4 + 444 >> 2] = u4 + x4, o3[f4 + 448 >> 2] = m4 + l4, o3[f4 + 452 >> 2] = k4 + z4, o3[f4 + 456 >> 2] = S4 + _4, o3[f4 + 460 >> 2] = p4 + J4, o3[f4 + 464 >> 2] = r4 + y4, o3[f4 + 468 >> 2] = e4 + D4, o3[f4 + 472 >> 2] = Q4 + t4, o3[f4 + 476 >> 2] = I7 + B4), H3(C4, f4 + 320 | 0, h4), H3(j3, n4, s4), H3(IA2, s4, h4), I7 = g6 - 1 | 0, (0 | g6) > 0; )
                                ;
                              break A;
                            }
                            if (I7 = I7 - 2 | 0, g6)
                              continue;
                          }
                          break;
                        }
                        w3 = f4 + 2272 | 0, MA(I7 = i4 + 288 | 0, C4), BA2 = -1, QA2 = nA(I7, A8), p4 = ((0 | A8) == (0 | I7) ? BA2 : QA2) | eA(A8, I7, 32);
                      }
                      return w3 = i4 + 592 | 0, p4;
                    }
                    function H3(A8, I7, g6) {
                      var C4, B4, Q4, i4, E4, a4, f4, e4, r4, D4, t4, y4, w4, n4, s4, k4, F4, S4, H4, G4, _4, M4, p4, N4, J4, U4, Y4, d4, K4, b4, P4, v4, L4, R4, u4, x4, m4, l4, z4, q4, X3, j3, T2, O2, V2, Z2, W2, $2, AA2, IA2, gA2, CA2, BA2, QA2 = 0, iA2 = 0, EA2 = 0, oA2 = 0, aA2 = 0, fA2 = 0, cA2 = 0, eA2 = 0, rA2 = 0, DA2 = 0, tA2 = 0, yA2 = 0, wA2 = 0, hA2 = 0, nA2 = 0, sA2 = 0, FA2 = 0, SA2 = 0, HA2 = 0, GA2 = 0, _A2 = 0, MA2 = 0, pA2 = 0, NA2 = 0, JA2 = 0;
                      QA2 = kA(C4 = o3[g6 + 4 >> 2], D4 = C4 >> 31, FA2 = (k4 = o3[I7 + 20 >> 2]) << 1, P4 = FA2 >> 31), EA2 = h3, iA2 = (wA2 = kA(nA2 = o3[g6 >> 2], Q4 = nA2 >> 31, B4 = o3[I7 + 24 >> 2], i4 = B4 >> 31)) + QA2 | 0, QA2 = h3 + EA2 | 0, QA2 = iA2 >>> 0 < wA2 >>> 0 ? QA2 + 1 | 0 : QA2, rA2 = kA(E4 = o3[g6 + 8 >> 2], w4 = E4 >> 31, wA2 = o3[I7 + 16 >> 2], a4 = wA2 >> 31), EA2 = h3 + QA2 | 0, EA2 = (iA2 = rA2 + iA2 | 0) >>> 0 < rA2 >>> 0 ? EA2 + 1 | 0 : EA2, QA2 = (rA2 = kA(t4 = o3[g6 + 12 >> 2], F4 = t4 >> 31, N4 = (S4 = o3[I7 + 12 >> 2]) << 1, v4 = N4 >> 31)) + iA2 | 0, iA2 = h3 + EA2 | 0, iA2 = QA2 >>> 0 < rA2 >>> 0 ? iA2 + 1 | 0 : iA2, EA2 = (hA2 = kA(n4 = o3[g6 + 16 >> 2], J4 = n4 >> 31, rA2 = o3[I7 + 8 >> 2], f4 = rA2 >> 31)) + QA2 | 0, QA2 = h3 + iA2 | 0, QA2 = EA2 >>> 0 < hA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = EA2, EA2 = kA(H4 = o3[g6 + 20 >> 2], L4 = H4 >> 31, U4 = (G4 = o3[I7 + 4 >> 2]) << 1, R4 = U4 >> 31), QA2 = h3 + QA2 | 0, QA2 = (iA2 = iA2 + EA2 | 0) >>> 0 < EA2 >>> 0 ? QA2 + 1 | 0 : QA2, Z2 = cA2 = o3[g6 + 24 >> 2], EA2 = (DA2 = kA(cA2, O2 = cA2 >> 31, hA2 = o3[I7 >> 2], e4 = hA2 >> 31)) + iA2 | 0, iA2 = h3 + QA2 | 0, iA2 = EA2 >>> 0 < DA2 >>> 0 ? iA2 + 1 | 0 : iA2, u4 = o3[g6 + 28 >> 2], QA2 = (DA2 = kA(yA2 = c3(u4, 19), _4 = yA2 >> 31, Y4 = (M4 = o3[I7 + 36 >> 2]) << 1, x4 = Y4 >> 31)) + EA2 | 0, EA2 = h3 + iA2 | 0, EA2 = QA2 >>> 0 < DA2 >>> 0 ? EA2 + 1 | 0 : EA2, _A2 = o3[g6 + 32 >> 2], iA2 = (eA2 = kA(oA2 = c3(_A2, 19), s4 = oA2 >> 31, DA2 = o3[I7 + 32 >> 2], r4 = DA2 >> 31)) + QA2 | 0, QA2 = h3 + EA2 | 0, QA2 = iA2 >>> 0 < eA2 >>> 0 ? QA2 + 1 | 0 : QA2, W2 = o3[g6 + 36 >> 2], g6 = kA(eA2 = c3(W2, 19), y4 = eA2 >> 31, d4 = (p4 = o3[I7 + 28 >> 2]) << 1, m4 = d4 >> 31), QA2 = h3 + QA2 | 0, aA2 = I7 = g6 + iA2 | 0, g6 = I7 >>> 0 < g6 >>> 0 ? QA2 + 1 | 0 : QA2, I7 = kA(wA2, a4, C4, D4), QA2 = h3, iA2 = kA(nA2, Q4, k4, l4 = k4 >> 31), EA2 = h3 + QA2 | 0, EA2 = (I7 = iA2 + I7 | 0) >>> 0 < iA2 >>> 0 ? EA2 + 1 | 0 : EA2, QA2 = kA(E4, w4, S4, z4 = S4 >> 31), iA2 = h3 + EA2 | 0, iA2 = (I7 = QA2 + I7 | 0) >>> 0 < QA2 >>> 0 ? iA2 + 1 | 0 : iA2, EA2 = kA(rA2, f4, t4, F4), QA2 = h3 + iA2 | 0, QA2 = (I7 = EA2 + I7 | 0) >>> 0 < EA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = kA(n4, J4, G4, q4 = G4 >> 31), QA2 = h3 + QA2 | 0, QA2 = (I7 = iA2 + I7 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = kA(hA2, e4, H4, L4), QA2 = h3 + QA2 | 0, QA2 = (I7 = iA2 + I7 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = kA(cA2 = c3(cA2, 19), K4 = cA2 >> 31, M4, X3 = M4 >> 31), EA2 = h3 + QA2 | 0, EA2 = (I7 = iA2 + I7 | 0) >>> 0 < iA2 >>> 0 ? EA2 + 1 | 0 : EA2, QA2 = kA(DA2, r4, yA2, _4), iA2 = h3 + EA2 | 0, iA2 = (I7 = QA2 + I7 | 0) >>> 0 < QA2 >>> 0 ? iA2 + 1 | 0 : iA2, EA2 = kA(oA2, s4, p4, j3 = p4 >> 31), QA2 = h3 + iA2 | 0, QA2 = (I7 = EA2 + I7 | 0) >>> 0 < EA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = kA(eA2, y4, B4, i4), QA2 = h3 + QA2 | 0, pA2 = I7 = iA2 + I7 | 0, SA2 = I7 >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, I7 = kA(C4, D4, N4, v4), QA2 = h3, iA2 = kA(nA2, Q4, wA2, a4), QA2 = h3 + QA2 | 0, QA2 = (I7 = iA2 + I7 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = kA(rA2, f4, E4, w4), EA2 = h3 + QA2 | 0, EA2 = (I7 = iA2 + I7 | 0) >>> 0 < iA2 >>> 0 ? EA2 + 1 | 0 : EA2, QA2 = kA(t4, F4, U4, R4), iA2 = h3 + EA2 | 0, iA2 = (I7 = QA2 + I7 | 0) >>> 0 < QA2 >>> 0 ? iA2 + 1 | 0 : iA2, EA2 = kA(hA2, e4, n4, J4), QA2 = h3 + iA2 | 0, QA2 = (I7 = EA2 + I7 | 0) >>> 0 < EA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = kA(b4 = c3(H4, 19), T2 = b4 >> 31, Y4, x4), QA2 = h3 + QA2 | 0, QA2 = (I7 = iA2 + I7 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = kA(DA2, r4, cA2, K4), QA2 = h3 + QA2 | 0, QA2 = (I7 = iA2 + I7 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = kA(yA2, _4, d4, m4), EA2 = h3 + QA2 | 0, EA2 = (I7 = iA2 + I7 | 0) >>> 0 < iA2 >>> 0 ? EA2 + 1 | 0 : EA2, QA2 = kA(oA2, s4, B4, i4), iA2 = h3 + EA2 | 0, iA2 = (I7 = QA2 + I7 | 0) >>> 0 < QA2 >>> 0 ? iA2 + 1 | 0 : iA2, EA2 = kA(eA2, y4, FA2, P4), QA2 = h3 + iA2 | 0, $2 = I7 = EA2 + I7 | 0, AA2 = QA2 = I7 >>> 0 < EA2 >>> 0 ? QA2 + 1 | 0 : QA2, IA2 = I7 = I7 + 33554432 | 0, gA2 = QA2 = I7 >>> 0 < 33554432 ? QA2 + 1 | 0 : QA2, EA2 = (67108863 & QA2) << 6 | I7 >>> 26, QA2 = (QA2 >> 26) + SA2 | 0, pA2 = I7 = EA2 + pA2 | 0, QA2 = I7 >>> 0 < EA2 >>> 0 ? QA2 + 1 | 0 : QA2, CA2 = I7 = I7 + 16777216 | 0, QA2 = g6 + (iA2 = (EA2 = I7 >>> 0 < 16777216 ? QA2 + 1 | 0 : QA2) >> 25) | 0, QA2 = (I7 = (EA2 = (33554431 & EA2) << 7 | I7 >>> 25) + aA2 | 0) >>> 0 < EA2 >>> 0 ? QA2 + 1 | 0 : QA2, HA2 = g6 = (iA2 = I7) + 33554432 | 0, I7 = QA2 = g6 >>> 0 < 33554432 ? QA2 + 1 | 0 : QA2, o3[A8 + 24 >> 2] = iA2 - (-67108864 & g6), g6 = kA(C4, D4, U4, R4), QA2 = h3, iA2 = kA(nA2, Q4, rA2, f4), EA2 = h3 + QA2 | 0, EA2 = (g6 = iA2 + g6 | 0) >>> 0 < iA2 >>> 0 ? EA2 + 1 | 0 : EA2, iA2 = (QA2 = g6) + (g6 = kA(hA2, e4, E4, w4)) | 0, QA2 = h3 + EA2 | 0, QA2 = g6 >>> 0 > iA2 >>> 0 ? QA2 + 1 | 0 : QA2, EA2 = kA(g6 = c3(t4, 19), GA2 = g6 >> 31, Y4, x4), QA2 = h3 + QA2 | 0, QA2 = (iA2 = EA2 + iA2 | 0) >>> 0 < EA2 >>> 0 ? QA2 + 1 | 0 : QA2, EA2 = (aA2 = kA(DA2, r4, SA2 = c3(n4, 19), V2 = SA2 >> 31)) + iA2 | 0, iA2 = h3 + QA2 | 0, iA2 = EA2 >>> 0 < aA2 >>> 0 ? iA2 + 1 | 0 : iA2, aA2 = kA(d4, m4, b4, T2), QA2 = h3 + iA2 | 0, QA2 = (EA2 = aA2 + EA2 | 0) >>> 0 < aA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = (aA2 = kA(B4, i4, cA2, K4)) + EA2 | 0, EA2 = h3 + QA2 | 0, EA2 = iA2 >>> 0 < aA2 >>> 0 ? EA2 + 1 | 0 : EA2, aA2 = kA(yA2, _4, FA2, P4), QA2 = h3 + EA2 | 0, QA2 = (iA2 = aA2 + iA2 | 0) >>> 0 < aA2 >>> 0 ? QA2 + 1 | 0 : QA2, EA2 = kA(oA2, s4, wA2, a4), QA2 = h3 + QA2 | 0, QA2 = (iA2 = EA2 + iA2 | 0) >>> 0 < EA2 >>> 0 ? QA2 + 1 | 0 : QA2, EA2 = (aA2 = kA(eA2, y4, N4, v4)) + iA2 | 0, iA2 = h3 + QA2 | 0, tA2 = EA2, NA2 = EA2 >>> 0 < aA2 >>> 0 ? iA2 + 1 | 0 : iA2, QA2 = kA(hA2, e4, C4, D4), iA2 = h3, EA2 = (aA2 = kA(nA2, Q4, G4, q4)) + QA2 | 0, QA2 = h3 + iA2 | 0, QA2 = EA2 >>> 0 < aA2 >>> 0 ? QA2 + 1 | 0 : QA2, aA2 = iA2 = c3(E4, 19), iA2 = (fA2 = kA(iA2, MA2 = iA2 >> 31, M4, X3)) + EA2 | 0, EA2 = h3 + QA2 | 0, EA2 = iA2 >>> 0 < fA2 >>> 0 ? EA2 + 1 | 0 : EA2, fA2 = kA(DA2, r4, g6, GA2), QA2 = h3 + EA2 | 0, QA2 = (iA2 = fA2 + iA2 | 0) >>> 0 < fA2 >>> 0 ? QA2 + 1 | 0 : QA2, EA2 = kA(SA2, V2, p4, j3), QA2 = h3 + QA2 | 0, QA2 = (iA2 = EA2 + iA2 | 0) >>> 0 < EA2 >>> 0 ? QA2 + 1 | 0 : QA2, EA2 = (fA2 = kA(B4, i4, b4, T2)) + iA2 | 0, iA2 = h3 + QA2 | 0, iA2 = EA2 >>> 0 < fA2 >>> 0 ? iA2 + 1 | 0 : iA2, fA2 = kA(cA2, K4, k4, l4), QA2 = h3 + iA2 | 0, QA2 = (EA2 = fA2 + EA2 | 0) >>> 0 < fA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = (fA2 = kA(wA2, a4, yA2, _4)) + EA2 | 0, EA2 = h3 + QA2 | 0, EA2 = iA2 >>> 0 < fA2 >>> 0 ? EA2 + 1 | 0 : EA2, fA2 = kA(oA2, s4, S4, z4), QA2 = h3 + EA2 | 0, QA2 = (iA2 = fA2 + iA2 | 0) >>> 0 < fA2 >>> 0 ? QA2 + 1 | 0 : QA2, EA2 = kA(eA2, y4, rA2, f4), QA2 = h3 + QA2 | 0, JA2 = iA2 = EA2 + iA2 | 0, fA2 = iA2 >>> 0 < EA2 >>> 0 ? QA2 + 1 | 0 : QA2, QA2 = kA(QA2 = c3(C4, 19), QA2 >> 31, Y4, x4), iA2 = h3, EA2 = kA(nA2, Q4, hA2, e4), iA2 = h3 + iA2 | 0, iA2 = (QA2 = EA2 + QA2 | 0) >>> 0 < EA2 >>> 0 ? iA2 + 1 | 0 : iA2, EA2 = (aA2 = kA(DA2, r4, aA2, MA2)) + QA2 | 0, QA2 = h3 + iA2 | 0, g6 = (iA2 = kA(g6, GA2, d4, m4)) + EA2 | 0, EA2 = h3 + (EA2 >>> 0 < aA2 >>> 0 ? QA2 + 1 | 0 : QA2) | 0, EA2 = g6 >>> 0 < iA2 >>> 0 ? EA2 + 1 | 0 : EA2, iA2 = kA(B4, i4, SA2, V2), QA2 = h3 + EA2 | 0, QA2 = (g6 = iA2 + g6 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = kA(FA2, P4, b4, T2), QA2 = h3 + QA2 | 0, QA2 = (g6 = iA2 + g6 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, EA2 = kA(wA2, a4, cA2, K4), iA2 = h3 + QA2 | 0, iA2 = (g6 = EA2 + g6 | 0) >>> 0 < EA2 >>> 0 ? iA2 + 1 | 0 : iA2, EA2 = kA(yA2, _4, N4, v4), QA2 = h3 + iA2 | 0, QA2 = (g6 = EA2 + g6 | 0) >>> 0 < EA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = kA(oA2, s4, rA2, f4), EA2 = h3 + QA2 | 0, EA2 = (g6 = iA2 + g6 | 0) >>> 0 < iA2 >>> 0 ? EA2 + 1 | 0 : EA2, iA2 = kA(eA2, y4, U4, R4), QA2 = h3 + EA2 | 0, aA2 = g6 = iA2 + g6 | 0, GA2 = QA2 = g6 >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, MA2 = g6 = g6 + 33554432 | 0, BA2 = QA2 = g6 >>> 0 < 33554432 ? QA2 + 1 | 0 : QA2, iA2 = (EA2 = QA2 >> 26) + fA2 | 0, fA2 = g6 = (QA2 = (67108863 & QA2) << 6 | g6 >>> 26) + JA2 | 0, QA2 = g6 >>> 0 < QA2 >>> 0 ? iA2 + 1 | 0 : iA2, JA2 = g6 = g6 + 16777216 | 0, iA2 = (33554431 & (QA2 = g6 >>> 0 < 16777216 ? QA2 + 1 | 0 : QA2)) << 7 | g6 >>> 25, QA2 = (QA2 >> 25) + NA2 | 0, QA2 = (g6 = iA2 + tA2 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, NA2 = iA2 = (EA2 = g6) + 33554432 | 0, g6 = QA2 = iA2 >>> 0 < 33554432 ? QA2 + 1 | 0 : QA2, o3[A8 + 8 >> 2] = EA2 - (-67108864 & iA2), QA2 = kA(B4, i4, C4, D4), EA2 = h3, iA2 = (tA2 = kA(nA2, Q4, p4, j3)) + QA2 | 0, QA2 = h3 + EA2 | 0, QA2 = iA2 >>> 0 < tA2 >>> 0 ? QA2 + 1 | 0 : QA2, EA2 = kA(E4, w4, k4, l4), QA2 = h3 + QA2 | 0, QA2 = (iA2 = EA2 + iA2 | 0) >>> 0 < EA2 >>> 0 ? QA2 + 1 | 0 : QA2, EA2 = kA(wA2, a4, t4, F4), QA2 = h3 + QA2 | 0, QA2 = (iA2 = EA2 + iA2 | 0) >>> 0 < EA2 >>> 0 ? QA2 + 1 | 0 : QA2, tA2 = kA(n4, J4, S4, z4), EA2 = h3 + QA2 | 0, EA2 = (iA2 = tA2 + iA2 | 0) >>> 0 < tA2 >>> 0 ? EA2 + 1 | 0 : EA2, QA2 = (tA2 = kA(rA2, f4, H4, L4)) + iA2 | 0, iA2 = h3 + EA2 | 0, iA2 = QA2 >>> 0 < tA2 >>> 0 ? iA2 + 1 | 0 : iA2, EA2 = (tA2 = kA(G4, q4, Z2, O2)) + QA2 | 0, QA2 = h3 + iA2 | 0, QA2 = EA2 >>> 0 < tA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = EA2, EA2 = kA(hA2, e4, u4, tA2 = u4 >> 31), QA2 = h3 + QA2 | 0, QA2 = (iA2 = iA2 + EA2 | 0) >>> 0 < EA2 >>> 0 ? QA2 + 1 | 0 : QA2, EA2 = kA(oA2, s4, M4, X3), QA2 = h3 + QA2 | 0, QA2 = (iA2 = EA2 + iA2 | 0) >>> 0 < EA2 >>> 0 ? QA2 + 1 | 0 : QA2, sA2 = kA(eA2, y4, DA2, r4), EA2 = h3 + QA2 | 0, QA2 = I7 >> 26, I7 = (HA2 = (67108863 & I7) << 6 | HA2 >>> 26) + (iA2 = sA2 + iA2 | 0) | 0, iA2 = QA2 + (iA2 >>> 0 < sA2 >>> 0 ? EA2 + 1 | 0 : EA2) | 0, QA2 = (EA2 = I7) >>> 0 < HA2 >>> 0 ? iA2 + 1 | 0 : iA2, HA2 = iA2 = EA2 + 16777216 | 0, I7 = QA2 = iA2 >>> 0 < 16777216 ? QA2 + 1 | 0 : QA2, o3[A8 + 28 >> 2] = EA2 - (-33554432 & iA2), QA2 = kA(rA2, f4, C4, D4), iA2 = h3, sA2 = kA(nA2, Q4, S4, z4), EA2 = h3 + iA2 | 0, EA2 = (QA2 = sA2 + QA2 | 0) >>> 0 < sA2 >>> 0 ? EA2 + 1 | 0 : EA2, sA2 = kA(E4, w4, G4, q4), iA2 = h3 + EA2 | 0, iA2 = (QA2 = sA2 + QA2 | 0) >>> 0 < sA2 >>> 0 ? iA2 + 1 | 0 : iA2, EA2 = (sA2 = kA(hA2, e4, t4, F4)) + QA2 | 0, QA2 = h3 + iA2 | 0, QA2 = EA2 >>> 0 < sA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = EA2, EA2 = kA(SA2, V2, M4, X3), QA2 = h3 + QA2 | 0, QA2 = (iA2 = iA2 + EA2 | 0) >>> 0 < EA2 >>> 0 ? QA2 + 1 | 0 : QA2, EA2 = kA(DA2, r4, b4, T2), QA2 = h3 + QA2 | 0, QA2 = (iA2 = EA2 + iA2 | 0) >>> 0 < EA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = (cA2 = kA(cA2, K4, p4, j3)) + iA2 | 0, EA2 = h3 + QA2 | 0, QA2 = (yA2 = kA(B4, i4, yA2, _4)) + iA2 | 0, iA2 = h3 + (iA2 >>> 0 < cA2 >>> 0 ? EA2 + 1 | 0 : EA2) | 0, EA2 = (oA2 = kA(oA2, s4, k4, l4)) + QA2 | 0, QA2 = h3 + (QA2 >>> 0 < yA2 >>> 0 ? iA2 + 1 | 0 : iA2) | 0, QA2 = EA2 >>> 0 < oA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = EA2, EA2 = kA(eA2, y4, wA2, a4), QA2 = h3 + QA2 | 0, oA2 = iA2 = iA2 + EA2 | 0, QA2 = (QA2 = iA2 >>> 0 < EA2 >>> 0 ? QA2 + 1 | 0 : QA2) + (iA2 = g6 >> 26) | 0, oA2 = g6 = oA2 + (EA2 = (67108863 & g6) << 6 | NA2 >>> 26) | 0, QA2 = g6 >>> 0 < EA2 >>> 0 ? QA2 + 1 | 0 : QA2, yA2 = iA2 = g6 + 16777216 | 0, g6 = EA2 = iA2 >>> 0 < 16777216 ? QA2 + 1 | 0 : QA2, o3[A8 + 12 >> 2] = oA2 - (-33554432 & iA2), QA2 = kA(C4, D4, d4, m4), EA2 = h3, iA2 = (oA2 = kA(nA2, Q4, DA2, r4)) + QA2 | 0, QA2 = h3 + EA2 | 0, QA2 = iA2 >>> 0 < oA2 >>> 0 ? QA2 + 1 | 0 : QA2, EA2 = kA(B4, i4, E4, w4), QA2 = h3 + QA2 | 0, QA2 = (iA2 = EA2 + iA2 | 0) >>> 0 < EA2 >>> 0 ? QA2 + 1 | 0 : QA2, oA2 = kA(t4, F4, FA2, P4), EA2 = h3 + QA2 | 0, EA2 = (iA2 = oA2 + iA2 | 0) >>> 0 < oA2 >>> 0 ? EA2 + 1 | 0 : EA2, QA2 = (oA2 = kA(wA2, a4, n4, J4)) + iA2 | 0, iA2 = h3 + EA2 | 0, iA2 = QA2 >>> 0 < oA2 >>> 0 ? iA2 + 1 | 0 : iA2, EA2 = (oA2 = kA(N4, v4, H4, L4)) + QA2 | 0, QA2 = h3 + iA2 | 0, QA2 = EA2 >>> 0 < oA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = EA2, EA2 = kA(rA2, f4, Z2, O2), QA2 = h3 + QA2 | 0, QA2 = (iA2 = iA2 + EA2 | 0) >>> 0 < EA2 >>> 0 ? QA2 + 1 | 0 : QA2, EA2 = kA(u4, tA2, U4, R4), QA2 = h3 + QA2 | 0, QA2 = (iA2 = EA2 + iA2 | 0) >>> 0 < EA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = (FA2 = kA(hA2, e4, oA2 = _A2, cA2 = oA2 >> 31)) + iA2 | 0, EA2 = h3 + QA2 | 0, QA2 = (eA2 = kA(eA2, y4, Y4, x4)) + iA2 | 0, iA2 = h3 + (iA2 >>> 0 < FA2 >>> 0 ? EA2 + 1 | 0 : EA2) | 0, iA2 = QA2 >>> 0 < eA2 >>> 0 ? iA2 + 1 | 0 : iA2, _A2 = QA2, QA2 = (QA2 = I7 >> 25) + iA2 | 0, QA2 = (I7 = _A2 + (EA2 = (33554431 & I7) << 7 | HA2 >>> 25) | 0) >>> 0 < EA2 >>> 0 ? QA2 + 1 | 0 : QA2, eA2 = iA2 = (EA2 = I7) + 33554432 | 0, I7 = QA2 = iA2 >>> 0 < 33554432 ? QA2 + 1 | 0 : QA2, o3[A8 + 32 >> 2] = EA2 - (-67108864 & iA2), iA2 = g6 >> 25, g6 = (yA2 = (33554431 & g6) << 7 | yA2 >>> 25) + ($2 - (QA2 = -67108864 & IA2) | 0) | 0, QA2 = iA2 + (AA2 - ((QA2 >>> 0 > $2 >>> 0) + gA2 | 0) | 0) | 0, QA2 = g6 >>> 0 < yA2 >>> 0 ? QA2 + 1 | 0 : QA2, QA2 = ((67108863 & (QA2 = (g6 = (iA2 = g6) + 33554432 | 0) >>> 0 < 33554432 ? QA2 + 1 | 0 : QA2)) << 6 | g6 >>> 26) + (EA2 = pA2 - (-33554432 & CA2) | 0) | 0, o3[A8 + 20 >> 2] = QA2, o3[A8 + 16 >> 2] = iA2 - (-67108864 & g6), g6 = kA(DA2, r4, C4, D4), QA2 = h3, iA2 = kA(nA2, Q4, M4, X3), QA2 = h3 + QA2 | 0, QA2 = (g6 = iA2 + g6 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, EA2 = kA(E4, w4, p4, j3), iA2 = h3 + QA2 | 0, iA2 = (g6 = EA2 + g6 | 0) >>> 0 < EA2 >>> 0 ? iA2 + 1 | 0 : iA2, QA2 = kA(B4, i4, t4, F4), EA2 = h3 + iA2 | 0, EA2 = (g6 = QA2 + g6 | 0) >>> 0 < QA2 >>> 0 ? EA2 + 1 | 0 : EA2, iA2 = kA(n4, J4, k4, l4), QA2 = h3 + EA2 | 0, QA2 = (g6 = iA2 + g6 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = kA(wA2, a4, H4, L4), QA2 = h3 + QA2 | 0, QA2 = (g6 = iA2 + g6 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = kA(S4, z4, Z2, O2), QA2 = h3 + QA2 | 0, QA2 = (g6 = iA2 + g6 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, EA2 = kA(rA2, f4, u4, tA2), iA2 = h3 + QA2 | 0, iA2 = (g6 = EA2 + g6 | 0) >>> 0 < EA2 >>> 0 ? iA2 + 1 | 0 : iA2, QA2 = kA(oA2, cA2, G4, q4), EA2 = h3 + iA2 | 0, EA2 = (g6 = QA2 + g6 | 0) >>> 0 < QA2 >>> 0 ? EA2 + 1 | 0 : EA2, iA2 = kA(hA2, e4, W2, W2 >> 31), QA2 = h3 + EA2 | 0, QA2 = (QA2 = (g6 = iA2 + g6 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2) + (iA2 = I7 >> 26) | 0, QA2 = (I7 = (EA2 = g6) + (g6 = (67108863 & I7) << 6 | eA2 >>> 26) | 0) >>> 0 < g6 >>> 0 ? QA2 + 1 | 0 : QA2, QA2 = (I7 = (g6 = I7) + 16777216 | 0) >>> 0 < 16777216 ? QA2 + 1 | 0 : QA2, o3[A8 + 36 >> 2] = g6 - (-33554432 & I7), EA2 = fA2 - (-33554432 & JA2) | 0, iA2 = aA2 - (g6 = -67108864 & MA2) | 0, nA2 = GA2 - ((g6 >>> 0 > aA2 >>> 0) + BA2 | 0) | 0, I7 = (g6 = kA((33554431 & (g6 = QA2)) << 7 | I7 >>> 25, QA2 >>= 25, 19, 0)) + iA2 | 0, iA2 = h3 + nA2 | 0, QA2 = I7 >>> 0 < g6 >>> 0 ? iA2 + 1 | 0 : iA2, QA2 = ((67108863 & (QA2 = (I7 = (g6 = I7) + 33554432 | 0) >>> 0 < 33554432 ? QA2 + 1 | 0 : QA2)) << 6 | I7 >>> 26) + EA2 | 0, o3[A8 + 4 >> 2] = QA2, o3[A8 >> 2] = g6 - (-67108864 & I7);
                    }
                    function G3(A8, I7) {
                      var g6, C4, B4, Q4, i4, E4, a4, f4, e4, r4, D4, t4, y4, n4, s4, k4, F4, S4, H4, G4, _4, p4, N4, J4 = 0, U4 = 0, Y4 = 0, d4 = 0, K4 = 0, b4 = 0, P4 = 0, v4 = 0, L4 = 0, R4 = 0, u4 = 0, x4 = 0, m4 = 0, l4 = 0, z4 = 0, q4 = 0, X3 = 0, j3 = 0, T2 = 0, O2 = 0, V2 = 0, Z2 = 0, W2 = 0, $2 = 0, AA2 = 0, IA2 = 0, gA2 = 0, CA2 = 0, BA2 = 0, QA2 = 0, iA2 = 0, EA2 = 0, oA2 = 0, aA2 = 0, fA2 = 0, cA2 = 0;
                      w3 = g6 = w3 - 48 | 0, M3(A8, I7), M3(A8 + 80 | 0, I7 + 40 | 0), J4 = kA(l4 = (W2 = o3[I7 + 92 >> 2]) << 1, i4 = l4 >> 31, v4 = (d4 = o3[I7 + 84 >> 2]) << 1, C4 = v4 >> 31), Y4 = h3, CA2 = X3 = o3[I7 + 88 >> 2], U4 = (u4 = kA(X3, T2 = X3 >> 31, X3, T2)) + J4 | 0, J4 = h3 + Y4 | 0, J4 = U4 >>> 0 < u4 >>> 0 ? J4 + 1 | 0 : J4, Y4 = kA(K4 = o3[I7 + 96 >> 2], E4 = K4 >> 31, u4 = (L4 = o3[I7 + 80 >> 2]) << 1, B4 = u4 >> 31), J4 = h3 + J4 | 0, J4 = (U4 = Y4 + U4 | 0) >>> 0 < Y4 >>> 0 ? J4 + 1 | 0 : J4, gA2 = o3[I7 + 108 >> 2], Y4 = kA(x4 = c3(gA2, 38), D4 = x4 >> 31, gA2, n4 = gA2 >> 31), J4 = h3 + J4 | 0, J4 = (U4 = Y4 + U4 | 0) >>> 0 < Y4 >>> 0 ? J4 + 1 | 0 : J4, Y4 = U4, $2 = o3[I7 + 112 >> 2], R4 = kA(b4 = c3($2, 19), a4 = b4 >> 31, U4 = (O2 = o3[I7 + 104 >> 2]) << 1, U4 >> 31), U4 = h3 + J4 | 0, U4 = (Y4 = Y4 + R4 | 0) >>> 0 < R4 >>> 0 ? U4 + 1 | 0 : U4, iA2 = o3[I7 + 116 >> 2], J4 = kA(R4 = c3(iA2, 38), Q4 = R4 >> 31, j3 = (V2 = o3[I7 + 100 >> 2]) << 1, e4 = j3 >> 31), U4 = h3 + U4 | 0, EA2 = J4 = (J4 >>> 0 > (Y4 = J4 + Y4 | 0) >>> 0 ? U4 + 1 | 0 : U4) << 1 | Y4 >>> 31, oA2 = Y4 = 33554432 + (s4 = Y4 << 1) | 0, aA2 = J4 = Y4 >>> 0 < 33554432 ? J4 + 1 | 0 : J4, P4 = (67108863 & J4) << 6 | Y4 >>> 26, Z2 = J4 >> 26, J4 = kA(v4, C4, K4, E4), Y4 = h3, U4 = (AA2 = kA(X3 <<= 1, r4 = X3 >> 31, W2, k4 = W2 >> 31)) + J4 | 0, J4 = h3 + Y4 | 0, J4 = U4 >>> 0 < AA2 >>> 0 ? J4 + 1 | 0 : J4, Y4 = (AA2 = kA(V2, t4 = V2 >> 31, u4, B4)) + U4 | 0, U4 = h3 + J4 | 0, U4 = Y4 >>> 0 < AA2 >>> 0 ? U4 + 1 | 0 : U4, BA2 = kA(b4, a4, AA2 = gA2 << 1, F4 = AA2 >> 31), J4 = h3 + U4 | 0, J4 = (Y4 = BA2 + Y4 | 0) >>> 0 < BA2 >>> 0 ? J4 + 1 | 0 : J4, U4 = kA(R4, Q4, O2, f4 = O2 >> 31), J4 = h3 + J4 | 0, U4 = (U4 = (U4 >>> 0 > (Y4 = U4 + Y4 | 0) >>> 0 ? J4 + 1 | 0 : J4) << 1 | Y4 >>> 31) + Z2 | 0, BA2 = Y4 = (J4 = Y4 << 1) + P4 | 0, J4 = U4 = J4 >>> 0 > Y4 >>> 0 ? U4 + 1 | 0 : U4, fA2 = Y4 = Y4 + 16777216 | 0, P4 = (33554431 & (J4 = Y4 >>> 0 < 16777216 ? J4 + 1 | 0 : J4)) << 7 | Y4 >>> 25, Z2 = J4 >> 25, J4 = kA(l4, i4, W2, k4), Y4 = h3, U4 = (m4 = kA(K4, E4, X3, r4)) + J4 | 0, J4 = h3 + Y4 | 0, J4 = U4 >>> 0 < m4 >>> 0 ? J4 + 1 | 0 : J4, Y4 = kA(v4, C4, j3, e4), J4 = h3 + J4 | 0, J4 = (U4 = Y4 + U4 | 0) >>> 0 < Y4 >>> 0 ? J4 + 1 | 0 : J4, Y4 = (m4 = kA(u4, B4, O2, f4)) + U4 | 0, U4 = h3 + J4 | 0, U4 = Y4 >>> 0 < m4 >>> 0 ? U4 + 1 | 0 : U4, m4 = kA(b4, a4, $2, y4 = $2 >> 31), J4 = h3 + U4 | 0, J4 = (Y4 = m4 + Y4 | 0) >>> 0 < m4 >>> 0 ? J4 + 1 | 0 : J4, m4 = kA(R4, Q4, AA2, F4), U4 = h3 + J4 | 0, U4 = ((Y4 = m4 + Y4 | 0) >>> 0 < m4 >>> 0 ? U4 + 1 | 0 : U4) << 1 | Y4 >>> 31, Y4 = (J4 = P4) + (P4 = Y4 << 1) | 0, J4 = U4 + Z2 | 0, J4 = Y4 >>> 0 < P4 >>> 0 ? J4 + 1 | 0 : J4, Z2 = Y4, m4 = U4 = Y4 + 33554432 | 0, Y4 = J4 = U4 >>> 0 < 33554432 ? J4 + 1 | 0 : J4, o3[A8 + 144 >> 2] = Z2 - (-67108864 & U4), Z2 = kA(J4 = c3(V2, 38), J4 >> 31, V2, t4), P4 = h3, L4 = kA(J4 = L4, U4 = J4 >> 31, J4, U4), U4 = h3 + P4 | 0, U4 = (J4 = L4 + Z2 | 0) >>> 0 < L4 >>> 0 ? U4 + 1 | 0 : U4, P4 = (IA2 = kA(L4 = c3(O2, 19), S4 = L4 >> 31, Z2 = K4 << 1, H4 = Z2 >> 31)) + J4 | 0, J4 = h3 + U4 | 0, J4 = P4 >>> 0 < IA2 >>> 0 ? J4 + 1 | 0 : J4, U4 = P4, P4 = kA(l4, i4, x4, D4), J4 = h3 + J4 | 0, J4 = (U4 = U4 + P4 | 0) >>> 0 < P4 >>> 0 ? J4 + 1 | 0 : J4, P4 = (IA2 = kA(b4, a4, X3, r4)) + U4 | 0, U4 = h3 + J4 | 0, U4 = P4 >>> 0 < IA2 >>> 0 ? U4 + 1 | 0 : U4, IA2 = kA(v4, C4, R4, Q4), J4 = h3 + U4 | 0, IA2 = J4 = ((P4 = IA2 + P4 | 0) >>> 0 < IA2 >>> 0 ? J4 + 1 | 0 : J4) << 1 | P4 >>> 31, p4 = U4 = (P4 = 33554432 + (G4 = P4 << 1) | 0) >>> 0 < 33554432 ? J4 + 1 | 0 : J4, QA2 = (67108863 & U4) << 6 | P4 >>> 26, cA2 = U4 >> 26, J4 = kA(L4, S4, j3, e4), z4 = h3, q4 = d4, U4 = (d4 = kA(u4, B4, d4, _4 = d4 >> 31)) + J4 | 0, J4 = h3 + z4 | 0, J4 = U4 >>> 0 < d4 >>> 0 ? J4 + 1 | 0 : J4, d4 = (z4 = kA(K4, E4, x4, D4)) + U4 | 0, U4 = h3 + J4 | 0, U4 = d4 >>> 0 < z4 >>> 0 ? U4 + 1 | 0 : U4, z4 = kA(b4, a4, l4, i4), J4 = h3 + U4 | 0, J4 = (d4 = z4 + d4 | 0) >>> 0 < z4 >>> 0 ? J4 + 1 | 0 : J4, z4 = kA(R4, Q4, CA2, T2), U4 = h3 + J4 | 0, U4 = ((d4 = z4 + d4 | 0) >>> 0 < z4 >>> 0 ? U4 + 1 | 0 : U4) << 1 | d4 >>> 31, d4 = (J4 = QA2) + (QA2 = d4 << 1) | 0, J4 = U4 + cA2 | 0, J4 = d4 >>> 0 < QA2 >>> 0 ? J4 + 1 | 0 : J4, cA2 = d4, QA2 = d4 = d4 + 16777216 | 0, N4 = (33554431 & (J4 = d4 >>> 0 < 16777216 ? J4 + 1 | 0 : J4)) << 7 | d4 >>> 25, z4 = J4 >> 25, J4 = kA(u4, B4, CA2, T2), d4 = h3, U4 = (q4 = kA(v4, C4, q4, _4)) + J4 | 0, J4 = h3 + d4 | 0, d4 = (L4 = kA(L4, S4, O2, f4)) + U4 | 0, U4 = h3 + (U4 >>> 0 < q4 >>> 0 ? J4 + 1 | 0 : J4) | 0, U4 = d4 >>> 0 < L4 >>> 0 ? U4 + 1 | 0 : U4, L4 = kA(j3, e4, x4, D4), J4 = h3 + U4 | 0, J4 = (d4 = L4 + d4 | 0) >>> 0 < L4 >>> 0 ? J4 + 1 | 0 : J4, U4 = d4, d4 = kA(b4, a4, Z2, H4), J4 = h3 + J4 | 0, J4 = (U4 = U4 + d4 | 0) >>> 0 < d4 >>> 0 ? J4 + 1 | 0 : J4, d4 = (L4 = kA(R4, Q4, l4, i4)) + U4 | 0, U4 = h3 + J4 | 0, J4 = (J4 = (d4 >>> 0 < L4 >>> 0 ? U4 + 1 | 0 : U4) << 1 | d4 >>> 31) + z4 | 0, q4 = d4 = (U4 = d4 << 1) + N4 | 0, J4 = U4 >>> 0 > d4 >>> 0 ? J4 + 1 | 0 : J4, d4 = (L4 = d4 + 33554432 | 0) >>> 0 < 33554432 ? J4 + 1 | 0 : J4, o3[A8 + 128 >> 2] = q4 - (-67108864 & L4), J4 = kA(X3, r4, V2, t4), U4 = h3, q4 = kA(K4, E4, l4, i4), U4 = h3 + U4 | 0, U4 = (J4 = q4 + J4 | 0) >>> 0 < q4 >>> 0 ? U4 + 1 | 0 : U4, q4 = (z4 = kA(v4, C4, O2, f4)) + J4 | 0, J4 = h3 + U4 | 0, J4 = q4 >>> 0 < z4 >>> 0 ? J4 + 1 | 0 : J4, z4 = kA(u4, B4, gA2, n4), U4 = h3 + J4 | 0, U4 = (q4 = z4 + q4 | 0) >>> 0 < z4 >>> 0 ? U4 + 1 | 0 : U4, z4 = kA(R4, Q4, $2, y4), J4 = h3 + U4 | 0, J4 = (U4 = Y4 >> 26) + (((q4 = z4 + q4 | 0) >>> 0 < z4 >>> 0 ? J4 + 1 | 0 : J4) << 1 | q4 >>> 31) | 0, J4 = (Y4 = (m4 = (67108863 & Y4) << 6 | m4 >>> 26) + (q4 << 1) | 0) >>> 0 < m4 >>> 0 ? J4 + 1 | 0 : J4, m4 = Y4, U4 = J4, q4 = J4 = Y4 + 16777216 | 0, Y4 = U4 = J4 >>> 0 < 16777216 ? U4 + 1 | 0 : U4, o3[A8 + 148 >> 2] = m4 - (-33554432 & J4), J4 = kA(u4, B4, W2, k4), W2 = h3, U4 = (T2 = kA(v4, C4, CA2, T2)) + J4 | 0, J4 = h3 + W2 | 0, J4 = U4 >>> 0 < T2 >>> 0 ? J4 + 1 | 0 : J4, x4 = kA(O2, f4, x4, D4), J4 = h3 + J4 | 0, J4 = (U4 = x4 + U4 | 0) >>> 0 < x4 >>> 0 ? J4 + 1 | 0 : J4, b4 = (x4 = kA(b4, a4, j3, e4)) + U4 | 0, U4 = h3 + J4 | 0, U4 = b4 >>> 0 < x4 >>> 0 ? U4 + 1 | 0 : U4, J4 = b4, b4 = kA(R4, Q4, K4, E4), U4 = h3 + U4 | 0, U4 = ((J4 = J4 + b4 | 0) >>> 0 < b4 >>> 0 ? U4 + 1 | 0 : U4) << 1, b4 = J4, J4 = (J4 = U4 | J4 >>> 31) + (U4 = d4 >> 26) | 0, J4 = (d4 = (m4 = b4 << 1) + (b4 = (67108863 & d4) << 6 | L4 >>> 26) | 0) >>> 0 < b4 >>> 0 ? J4 + 1 | 0 : J4, b4 = d4, x4 = U4 = d4 + 16777216 | 0, d4 = J4 = U4 >>> 0 < 16777216 ? J4 + 1 | 0 : J4, o3[A8 + 132 >> 2] = b4 - (-33554432 & U4), J4 = kA(O2, f4, X3, r4), b4 = h3, U4 = (K4 = kA(K4, E4, K4, E4)) + J4 | 0, J4 = h3 + b4 | 0, J4 = U4 >>> 0 < K4 >>> 0 ? J4 + 1 | 0 : J4, K4 = kA(l4, i4, j3, e4), J4 = h3 + J4 | 0, J4 = (U4 = K4 + U4 | 0) >>> 0 < K4 >>> 0 ? J4 + 1 | 0 : J4, K4 = kA(v4, C4, AA2, F4), J4 = h3 + J4 | 0, J4 = (U4 = K4 + U4 | 0) >>> 0 < K4 >>> 0 ? J4 + 1 | 0 : J4, K4 = (b4 = kA(u4, B4, $2, y4)) + U4 | 0, U4 = h3 + J4 | 0, U4 = K4 >>> 0 < b4 >>> 0 ? U4 + 1 | 0 : U4, J4 = K4, K4 = kA(K4 = R4, Q4, R4 = iA2, j3 = R4 >> 31), U4 = h3 + U4 | 0, U4 = ((J4 = J4 + K4 | 0) >>> 0 < K4 >>> 0 ? U4 + 1 | 0 : U4) << 1, K4 = J4, J4 = (J4 = U4 | J4 >>> 31) + (U4 = Y4 >> 25) | 0, J4 = (Y4 = (b4 = K4 << 1) + (K4 = (33554431 & Y4) << 7 | q4 >>> 25) | 0) >>> 0 < K4 >>> 0 ? J4 + 1 | 0 : J4, K4 = Y4, b4 = U4 = Y4 + 33554432 | 0, Y4 = J4 = U4 >>> 0 < 33554432 ? J4 + 1 | 0 : J4, o3[A8 + 152 >> 2] = K4 - (-67108864 & U4), U4 = s4 - (J4 = -67108864 & oA2) | 0, K4 = EA2 - ((J4 >>> 0 > s4 >>> 0) + aA2 | 0) | 0, J4 = d4 >> 25, d4 = (x4 = (33554431 & d4) << 7 | x4 >>> 25) + U4 | 0, U4 = J4 + K4 | 0, K4 = d4, J4 = U4 = d4 >>> 0 < x4 >>> 0 ? U4 + 1 | 0 : U4, J4 = ((67108863 & (J4 = (d4 = d4 + 33554432 | 0) >>> 0 < 33554432 ? J4 + 1 | 0 : J4)) << 6 | d4 >>> 26) + (T2 = BA2 - (-33554432 & fA2) | 0) | 0, o3[A8 + 140 >> 2] = J4, o3[A8 + 136 >> 2] = K4 - (-67108864 & d4), J4 = kA(l4, i4, O2, f4), U4 = h3, d4 = kA(V2, t4, Z2, H4), U4 = h3 + U4 | 0, U4 = (J4 = d4 + J4 | 0) >>> 0 < d4 >>> 0 ? U4 + 1 | 0 : U4, d4 = (l4 = kA(X3, r4, gA2, n4)) + J4 | 0, J4 = h3 + U4 | 0, J4 = d4 >>> 0 < l4 >>> 0 ? J4 + 1 | 0 : J4, v4 = kA(v4, C4, $2, y4), U4 = h3 + J4 | 0, U4 = (d4 = v4 + d4 | 0) >>> 0 < v4 >>> 0 ? U4 + 1 | 0 : U4, v4 = kA(u4, B4, R4, j3), J4 = h3 + U4 | 0, J4 = (J4 = ((d4 = v4 + d4 | 0) >>> 0 < v4 >>> 0 ? J4 + 1 | 0 : J4) << 1 | d4 >>> 31) + (U4 = Y4 >> 26) | 0, U4 = (Y4 = (K4 = d4 << 1) + (d4 = (67108863 & Y4) << 6 | b4 >>> 26) | 0) >>> 0 < d4 >>> 0 ? J4 + 1 | 0 : J4, U4 = (J4 = Y4 + 16777216 | 0) >>> 0 < 16777216 ? U4 + 1 | 0 : U4, o3[A8 + 156 >> 2] = Y4 - (-33554432 & J4), d4 = cA2 - (-33554432 & QA2) | 0, v4 = G4 - (Y4 = -67108864 & P4) | 0, u4 = IA2 - ((Y4 >>> 0 > G4 >>> 0) + p4 | 0) | 0, Y4 = kA((33554431 & U4) << 7 | J4 >>> 25, U4 >> 25, 19, 0), U4 = h3 + u4 | 0, U4 = (J4 = Y4 + v4 | 0) >>> 0 < Y4 >>> 0 ? U4 + 1 | 0 : U4, Y4 = J4, U4 = ((67108863 & (U4 = (J4 = J4 + 33554432 | 0) >>> 0 < 33554432 ? U4 + 1 | 0 : U4)) << 6 | J4 >>> 26) + d4 | 0, o3[A8 + 124 >> 2] = U4, o3[A8 + 120 >> 2] = Y4 - (-67108864 & J4), J4 = o3[I7 + 40 >> 2], U4 = o3[I7 + 44 >> 2], Y4 = o3[I7 + 4 >> 2], d4 = o3[I7 + 48 >> 2], v4 = o3[I7 + 8 >> 2], u4 = o3[I7 + 52 >> 2], R4 = o3[I7 + 12 >> 2], l4 = o3[I7 + 56 >> 2], K4 = o3[I7 + 16 >> 2], b4 = o3[I7 + 60 >> 2], O2 = o3[I7 + 20 >> 2], j3 = o3[I7 - -64 >> 2], X3 = o3[I7 + 24 >> 2], x4 = o3[I7 + 68 >> 2], T2 = o3[I7 + 28 >> 2], V2 = o3[I7 + 72 >> 2], $2 = o3[I7 + 32 >> 2], CA2 = o3[I7 >> 2], o3[A8 + 76 >> 2] = o3[I7 + 76 >> 2] + o3[I7 + 36 >> 2], o3[A8 + 72 >> 2] = V2 + $2, o3[A8 + 68 >> 2] = x4 + T2, o3[(gA2 = A8 - -64 | 0) >> 2] = X3 + j3, o3[A8 + 60 >> 2] = b4 + O2, o3[A8 + 56 >> 2] = K4 + l4, o3[A8 + 52 >> 2] = R4 + u4, o3[A8 + 48 >> 2] = d4 + v4, o3[A8 + 44 >> 2] = U4 + Y4, o3[(I7 = A8 + 40 | 0) >> 2] = J4 + CA2, M3(g6, I7), J4 = o3[A8 + 80 >> 2], U4 = o3[A8 + 4 >> 2], Y4 = o3[A8 + 84 >> 2], d4 = o3[A8 + 8 >> 2], v4 = o3[A8 + 88 >> 2], u4 = o3[A8 + 12 >> 2], R4 = o3[A8 + 92 >> 2], l4 = o3[A8 + 16 >> 2], K4 = o3[A8 + 96 >> 2], b4 = o3[A8 + 20 >> 2], O2 = o3[A8 + 100 >> 2], j3 = o3[A8 + 24 >> 2], X3 = o3[A8 + 104 >> 2], x4 = o3[A8 + 28 >> 2], T2 = o3[A8 + 108 >> 2], V2 = o3[A8 + 32 >> 2], $2 = o3[A8 + 112 >> 2], CA2 = o3[A8 >> 2], L4 = (W2 = o3[A8 + 116 >> 2]) - (AA2 = o3[A8 + 36 >> 2]) | 0, o3[A8 + 116 >> 2] = L4, Z2 = $2 - V2 | 0, o3[A8 + 112 >> 2] = Z2, P4 = T2 - x4 | 0, o3[A8 + 108 >> 2] = P4, iA2 = X3 - j3 | 0, o3[A8 + 104 >> 2] = iA2, EA2 = O2 - b4 | 0, o3[A8 + 100 >> 2] = EA2, oA2 = K4 - l4 | 0, o3[A8 + 96 >> 2] = oA2, aA2 = R4 - u4 | 0, o3[A8 + 92 >> 2] = aA2, BA2 = v4 - d4 | 0, o3[A8 + 88 >> 2] = BA2, fA2 = Y4 - U4 | 0, o3[A8 + 84 >> 2] = fA2, m4 = J4 - CA2 | 0, o3[A8 + 80 >> 2] = m4, W2 = W2 + AA2 | 0, o3[A8 + 76 >> 2] = W2, V2 = V2 + $2 | 0, o3[A8 + 72 >> 2] = V2, x4 = x4 + T2 | 0, o3[A8 + 68 >> 2] = x4, j3 = X3 + j3 | 0, o3[gA2 >> 2] = j3, b4 = b4 + O2 | 0, o3[A8 + 60 >> 2] = b4, l4 = K4 + l4 | 0, o3[A8 + 56 >> 2] = l4, u4 = R4 + u4 | 0, o3[A8 + 52 >> 2] = u4, d4 = d4 + v4 | 0, o3[A8 + 48 >> 2] = d4, U4 = U4 + Y4 | 0, o3[A8 + 44 >> 2] = U4, Y4 = I7, I7 = J4 + CA2 | 0, o3[Y4 >> 2] = I7, J4 = o3[g6 >> 2], Y4 = o3[g6 + 4 >> 2], v4 = o3[g6 + 8 >> 2], R4 = o3[g6 + 12 >> 2], K4 = o3[g6 + 16 >> 2], O2 = o3[g6 + 20 >> 2], X3 = o3[g6 + 24 >> 2], T2 = o3[g6 + 28 >> 2], $2 = o3[g6 + 32 >> 2], o3[A8 + 36 >> 2] = o3[g6 + 36 >> 2] - W2, o3[A8 + 32 >> 2] = $2 - V2, o3[A8 + 28 >> 2] = T2 - x4, o3[A8 + 24 >> 2] = X3 - j3, o3[A8 + 20 >> 2] = O2 - b4, o3[A8 + 16 >> 2] = K4 - l4, o3[A8 + 12 >> 2] = R4 - u4, o3[A8 + 8 >> 2] = v4 - d4, o3[A8 + 4 >> 2] = Y4 - U4, o3[A8 >> 2] = J4 - I7, I7 = o3[A8 + 120 >> 2], J4 = o3[A8 + 124 >> 2], U4 = o3[A8 + 128 >> 2], Y4 = o3[A8 + 132 >> 2], d4 = o3[A8 + 136 >> 2], v4 = o3[A8 + 140 >> 2], u4 = o3[A8 + 144 >> 2], R4 = o3[A8 + 148 >> 2], l4 = o3[A8 + 152 >> 2], o3[A8 + 156 >> 2] = o3[A8 + 156 >> 2] - L4, o3[A8 + 152 >> 2] = l4 - Z2, o3[A8 + 148 >> 2] = R4 - P4, o3[A8 + 144 >> 2] = u4 - iA2, o3[A8 + 140 >> 2] = v4 - EA2, o3[A8 + 136 >> 2] = d4 - oA2, o3[A8 + 132 >> 2] = Y4 - aA2, o3[A8 + 128 >> 2] = U4 - BA2, o3[A8 + 124 >> 2] = J4 - fA2, o3[A8 + 120 >> 2] = I7 - m4, w3 = g6 + 48 | 0;
                    }
                    function _3(A8, I7, g6, C4) {
                      var B4 = 0, Q4 = 0, i4 = 0, E4 = 0, f4 = 0, c4 = 0, e4 = 0, r4 = 0, D4 = 0, t4 = 0, y4 = 0, w4 = 0, h4 = 0, n4 = 0, s4 = 0, k4 = 0, F4 = 0, S4 = 0, H4 = 0, G4 = 0, _4 = 0, M4 = 0, p4 = 0, N4 = 0, J4 = 0, U4 = 0, Y4 = 0;
                      for (B4 = a3[0 | I7] | a3[I7 + 1 | 0] << 8 | a3[I7 + 2 | 0] << 16 | a3[I7 + 3 | 0] << 24, o3[g6 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, B4 = a3[I7 + 4 | 0] | a3[I7 + 5 | 0] << 8 | a3[I7 + 6 | 0] << 16 | a3[I7 + 7 | 0] << 24, o3[g6 + 4 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, B4 = a3[I7 + 8 | 0] | a3[I7 + 9 | 0] << 8 | a3[I7 + 10 | 0] << 16 | a3[I7 + 11 | 0] << 24, o3[g6 + 8 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, B4 = a3[I7 + 12 | 0] | a3[I7 + 13 | 0] << 8 | a3[I7 + 14 | 0] << 16 | a3[I7 + 15 | 0] << 24, o3[g6 + 12 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, B4 = a3[I7 + 16 | 0] | a3[I7 + 17 | 0] << 8 | a3[I7 + 18 | 0] << 16 | a3[I7 + 19 | 0] << 24, o3[g6 + 16 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, B4 = a3[I7 + 20 | 0] | a3[I7 + 21 | 0] << 8 | a3[I7 + 22 | 0] << 16 | a3[I7 + 23 | 0] << 24, o3[g6 + 20 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, B4 = a3[I7 + 24 | 0] | a3[I7 + 25 | 0] << 8 | a3[I7 + 26 | 0] << 16 | a3[I7 + 27 | 0] << 24, o3[g6 + 24 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, B4 = a3[I7 + 28 | 0] | a3[I7 + 29 | 0] << 8 | a3[I7 + 30 | 0] << 16 | a3[I7 + 31 | 0] << 24, o3[g6 + 28 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, B4 = a3[I7 + 32 | 0] | a3[I7 + 33 | 0] << 8 | a3[I7 + 34 | 0] << 16 | a3[I7 + 35 | 0] << 24, o3[g6 + 32 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, B4 = a3[I7 + 36 | 0] | a3[I7 + 37 | 0] << 8 | a3[I7 + 38 | 0] << 16 | a3[I7 + 39 | 0] << 24, o3[g6 + 36 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, B4 = a3[I7 + 40 | 0] | a3[I7 + 41 | 0] << 8 | a3[I7 + 42 | 0] << 16 | a3[I7 + 43 | 0] << 24, o3[g6 + 40 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, B4 = a3[I7 + 44 | 0] | a3[I7 + 45 | 0] << 8 | a3[I7 + 46 | 0] << 16 | a3[I7 + 47 | 0] << 24, o3[g6 + 44 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, B4 = a3[I7 + 48 | 0] | a3[I7 + 49 | 0] << 8 | a3[I7 + 50 | 0] << 16 | a3[I7 + 51 | 0] << 24, o3[g6 + 48 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, B4 = a3[I7 + 52 | 0] | a3[I7 + 53 | 0] << 8 | a3[I7 + 54 | 0] << 16 | a3[I7 + 55 | 0] << 24, o3[g6 + 52 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, B4 = a3[I7 + 56 | 0] | a3[I7 + 57 | 0] << 8 | a3[I7 + 58 | 0] << 16 | a3[I7 + 59 | 0] << 24, o3[g6 + 56 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, I7 = a3[I7 + 60 | 0] | a3[I7 + 61 | 0] << 8 | a3[I7 + 62 | 0] << 16 | a3[I7 + 63 | 0] << 24, o3[g6 + 60 >> 2] = I7 << 24 | (65280 & I7) << 8 | I7 >>> 8 & 65280 | I7 >>> 24, I7 = o3[A8 + 28 >> 2], o3[C4 + 24 >> 2] = o3[A8 + 24 >> 2], o3[C4 + 28 >> 2] = I7, I7 = o3[A8 + 20 >> 2], o3[C4 + 16 >> 2] = o3[A8 + 16 >> 2], o3[C4 + 20 >> 2] = I7, I7 = o3[A8 + 12 >> 2], o3[C4 + 8 >> 2] = o3[A8 + 8 >> 2], o3[C4 + 12 >> 2] = I7, I7 = o3[A8 + 4 >> 2], o3[C4 >> 2] = o3[A8 >> 2], o3[C4 + 4 >> 2] = I7; f4 = o3[C4 + 28 >> 2], B4 = (I7 = F4 << 2) + g6 | 0, i4 = o3[C4 + 16 >> 2], c4 = o3[B4 >> 2] + (RA(i4, 26) ^ RA(i4, 21) ^ RA(i4, 7)) | 0, r4 = (f4 = ((Q4 = o3[I7 + 33968 >> 2] + c4 | 0) + (i4 & ((c4 = o3[C4 + 24 >> 2]) ^ (D4 = o3[C4 + 20 >> 2])) ^ c4) | 0) + f4 | 0) + o3[C4 + 12 >> 2] | 0, o3[C4 + 12 >> 2] = r4, f4 = (y4 = f4 + (RA(e4 = o3[C4 >> 2], 30) ^ RA(e4, 19) ^ RA(e4, 10)) | 0) + (e4 & ((Q4 = o3[C4 + 8 >> 2]) | (E4 = o3[C4 + 4 >> 2])) | Q4 & E4) | 0, o3[C4 + 28 >> 2] = f4, Q4 = (y4 = Q4) + (c4 = (o3[(h4 = (Q4 = 4 | I7) + g6 | 0) >> 2] + ((c4 + (D4 ^ r4 & (i4 ^ D4)) | 0) + (RA(r4, 26) ^ RA(r4, 21) ^ RA(r4, 7)) | 0) | 0) + o3[Q4 + 33968 >> 2] | 0) | 0, o3[C4 + 8 >> 2] = Q4, c4 = (c4 + (f4 & (E4 | e4) | E4 & e4) | 0) + (RA(f4, 30) ^ RA(f4, 19) ^ RA(f4, 10)) | 0, o3[C4 + 24 >> 2] = c4, D4 = (y4 = E4) + (E4 = (((D4 + o3[(k4 = (E4 = 8 | I7) + g6 | 0) >> 2] | 0) + o3[E4 + 33968 >> 2] | 0) + (i4 ^ Q4 & (i4 ^ r4)) | 0) + (RA(Q4, 26) ^ RA(Q4, 21) ^ RA(Q4, 7)) | 0) | 0, o3[C4 + 4 >> 2] = D4, E4 = E4 + ((c4 & (f4 | e4) | f4 & e4) + (RA(c4, 30) ^ RA(c4, 19) ^ RA(c4, 10)) | 0) | 0, o3[C4 + 20 >> 2] = E4, i4 = (y4 = e4) + (e4 = (((i4 + o3[(S4 = (e4 = 12 | I7) + g6 | 0) >> 2] | 0) + o3[e4 + 33968 >> 2] | 0) + (r4 ^ D4 & (Q4 ^ r4)) | 0) + (RA(D4, 26) ^ RA(D4, 21) ^ RA(D4, 7)) | 0) | 0, o3[C4 >> 2] = i4, e4 = e4 + ((E4 & (f4 | c4) | f4 & c4) + (RA(E4, 30) ^ RA(E4, 19) ^ RA(E4, 10)) | 0) | 0, o3[C4 + 16 >> 2] = e4, r4 = (t4 = ((((y4 = r4) + o3[(H4 = (r4 = 16 | I7) + g6 | 0) >> 2] | 0) + o3[r4 + 33968 >> 2] | 0) + (Q4 ^ i4 & (Q4 ^ D4)) | 0) + (RA(i4, 26) ^ RA(i4, 21) ^ RA(i4, 7)) | 0) + ((e4 & (E4 | c4) | E4 & c4) + (RA(e4, 30) ^ RA(e4, 19) ^ RA(e4, 10)) | 0) | 0, o3[C4 + 12 >> 2] = r4, t4 = f4 + t4 | 0, o3[C4 + 28 >> 2] = t4, f4 = (Q4 = (((Q4 + o3[(G4 = (f4 = 20 | I7) + g6 | 0) >> 2] | 0) + o3[f4 + 33968 >> 2] | 0) + (D4 ^ t4 & (i4 ^ D4)) | 0) + (RA(t4, 26) ^ RA(t4, 21) ^ RA(t4, 7)) | 0) + ((r4 & (E4 | e4) | E4 & e4) + (RA(r4, 30) ^ RA(r4, 19) ^ RA(r4, 10)) | 0) | 0, o3[C4 + 8 >> 2] = f4, Q4 = Q4 + c4 | 0, o3[C4 + 24 >> 2] = Q4, c4 = (D4 = (((D4 + o3[(_4 = (c4 = 24 | I7) + g6 | 0) >> 2] | 0) + o3[c4 + 33968 >> 2] | 0) + (i4 ^ Q4 & (i4 ^ t4)) | 0) + (RA(Q4, 26) ^ RA(Q4, 21) ^ RA(Q4, 7)) | 0) + ((f4 & (e4 | r4) | e4 & r4) + (RA(f4, 30) ^ RA(f4, 19) ^ RA(f4, 10)) | 0) | 0, o3[C4 + 4 >> 2] = c4, D4 = E4 + D4 | 0, o3[C4 + 20 >> 2] = D4, E4 = (i4 = (((i4 + o3[(M4 = (E4 = 28 | I7) + g6 | 0) >> 2] | 0) + o3[E4 + 33968 >> 2] | 0) + (t4 ^ D4 & (Q4 ^ t4)) | 0) + (RA(D4, 26) ^ RA(D4, 21) ^ RA(D4, 7)) | 0) + ((c4 & (f4 | r4) | f4 & r4) + (RA(c4, 30) ^ RA(c4, 19) ^ RA(c4, 10)) | 0) | 0, o3[C4 >> 2] = E4, i4 = i4 + e4 | 0, o3[C4 + 16 >> 2] = i4, e4 = (t4 = (((t4 + o3[(p4 = (e4 = 32 | I7) + g6 | 0) >> 2] | 0) + o3[e4 + 33968 >> 2] | 0) + (Q4 ^ i4 & (Q4 ^ D4)) | 0) + (RA(i4, 26) ^ RA(i4, 21) ^ RA(i4, 7)) | 0) + ((E4 & (f4 | c4) | f4 & c4) + (RA(E4, 30) ^ RA(E4, 19) ^ RA(E4, 10)) | 0) | 0, o3[C4 + 28 >> 2] = e4, t4 = r4 + t4 | 0, o3[C4 + 12 >> 2] = t4, r4 = (Q4 = (((Q4 + o3[(N4 = (r4 = 36 | I7) + g6 | 0) >> 2] | 0) + o3[r4 + 33968 >> 2] | 0) + (D4 ^ t4 & (i4 ^ D4)) | 0) + (RA(t4, 26) ^ RA(t4, 21) ^ RA(t4, 7)) | 0) + ((e4 & (E4 | c4) | E4 & c4) + (RA(e4, 30) ^ RA(e4, 19) ^ RA(e4, 10)) | 0) | 0, o3[C4 + 24 >> 2] = r4, Q4 = Q4 + f4 | 0, o3[C4 + 8 >> 2] = Q4, f4 = (D4 = (((D4 + o3[(J4 = (f4 = 40 | I7) + g6 | 0) >> 2] | 0) + o3[f4 + 33968 >> 2] | 0) + (i4 ^ Q4 & (i4 ^ t4)) | 0) + (RA(Q4, 26) ^ RA(Q4, 21) ^ RA(Q4, 7)) | 0) + ((r4 & (E4 | e4) | E4 & e4) + (RA(r4, 30) ^ RA(r4, 19) ^ RA(r4, 10)) | 0) | 0, o3[C4 + 20 >> 2] = f4, D4 = c4 + D4 | 0, o3[C4 + 4 >> 2] = D4, y4 = (c4 = 44 | I7) + g6 | 0, c4 = (i4 = ((i4 + (o3[c4 + 33968 >> 2] + o3[y4 >> 2] | 0) | 0) + (t4 ^ D4 & (Q4 ^ t4)) | 0) + (RA(D4, 26) ^ RA(D4, 21) ^ RA(D4, 7)) | 0) + ((f4 & (e4 | r4) | e4 & r4) + (RA(f4, 30) ^ RA(f4, 19) ^ RA(f4, 10)) | 0) | 0, o3[C4 + 16 >> 2] = c4, E4 = E4 + i4 | 0, o3[C4 >> 2] = E4, s4 = (i4 = 48 | I7) + g6 | 0, i4 = (t4 = ((t4 + (o3[i4 + 33968 >> 2] + o3[s4 >> 2] | 0) | 0) + (Q4 ^ E4 & (Q4 ^ D4)) | 0) + (RA(E4, 26) ^ RA(E4, 21) ^ RA(E4, 7)) | 0) + ((c4 & (f4 | r4) | f4 & r4) + (RA(c4, 30) ^ RA(c4, 19) ^ RA(c4, 10)) | 0) | 0, o3[C4 + 12 >> 2] = i4, e4 = e4 + t4 | 0, o3[C4 + 28 >> 2] = e4, n4 = (t4 = 52 | I7) + g6 | 0, Q4 = (t4 = (((o3[t4 + 33968 >> 2] + o3[n4 >> 2] | 0) + Q4 | 0) + (D4 ^ e4 & (E4 ^ D4)) | 0) + (RA(e4, 26) ^ RA(e4, 21) ^ RA(e4, 7)) | 0) + ((i4 & (f4 | c4) | f4 & c4) + (RA(i4, 30) ^ RA(i4, 19) ^ RA(i4, 10)) | 0) | 0, o3[C4 + 8 >> 2] = Q4, r4 = r4 + t4 | 0, o3[C4 + 24 >> 2] = r4, t4 = (w4 = 56 | I7) + g6 | 0, D4 = (w4 = (((o3[w4 + 33968 >> 2] + o3[t4 >> 2] | 0) + D4 | 0) + (E4 ^ r4 & (E4 ^ e4)) | 0) + (RA(r4, 26) ^ RA(r4, 21) ^ RA(r4, 7)) | 0) + ((Q4 & (c4 | i4) | c4 & i4) + (RA(Q4, 30) ^ RA(Q4, 19) ^ RA(Q4, 10)) | 0) | 0, o3[C4 + 4 >> 2] = D4, f4 = f4 + w4 | 0, o3[C4 + 20 >> 2] = f4, w4 = (I7 |= 60) + g6 | 0, f4 = (I7 = ((E4 + (o3[I7 + 33968 >> 2] + o3[w4 >> 2] | 0) | 0) + (e4 ^ f4 & (e4 ^ r4)) | 0) + (RA(f4, 26) ^ RA(f4, 21) ^ RA(f4, 7)) | 0) + ((D4 & (Q4 | i4) | Q4 & i4) + (RA(D4, 30) ^ RA(D4, 19) ^ RA(D4, 10)) | 0) | 0, o3[C4 >> 2] = f4, o3[C4 + 16 >> 2] = I7 + c4, 48 != (0 | F4); )
                        E4 = o3[N4 >> 2], F4 = F4 + 16 | 0, I7 = o3[t4 >> 2], f4 = (Q4 = o3[B4 >> 2] + (E4 + (RA(I7, 15) ^ RA(I7, 13) ^ I7 >>> 10) | 0) | 0) + (RA(c4 = o3[h4 >> 2], 25) ^ RA(c4, 14) ^ c4 >>> 3) | 0, o3[(F4 << 2) + g6 >> 2] = f4, r4 = (i4 = (Q4 = (e4 = o3[J4 >> 2]) + c4 | 0) + (RA(c4 = o3[w4 >> 2], 15) ^ RA(c4, 13) ^ c4 >>> 10) | 0) + (RA(Q4 = o3[k4 >> 2], 25) ^ RA(Q4, 14) ^ Q4 >>> 3) | 0, o3[B4 + 68 >> 2] = r4, D4 = (y4 = ((i4 = Q4) + (Q4 = o3[y4 >> 2]) | 0) + (RA(f4, 15) ^ RA(f4, 13) ^ f4 >>> 10) | 0) + (RA(i4 = o3[S4 >> 2], 25) ^ RA(i4, 14) ^ i4 >>> 3) | 0, o3[B4 + 72 >> 2] = D4, t4 = (w4 = ((y4 = i4) + (i4 = o3[s4 >> 2]) | 0) + (RA(r4, 15) ^ RA(r4, 13) ^ r4 >>> 10) | 0) + (RA(y4 = o3[H4 >> 2], 25) ^ RA(y4, 14) ^ y4 >>> 3) | 0, o3[B4 + 76 >> 2] = t4, s4 = (w4 = ((w4 = y4) + (y4 = o3[n4 >> 2]) | 0) + (RA(D4, 15) ^ RA(D4, 13) ^ D4 >>> 10) | 0) + (RA(n4 = o3[G4 >> 2], 25) ^ RA(n4, 14) ^ n4 >>> 3) | 0, o3[B4 + 80 >> 2] = s4, n4 = (h4 = (I7 + n4 | 0) + (RA(t4, 15) ^ RA(t4, 13) ^ t4 >>> 10) | 0) + (RA(w4 = o3[_4 >> 2], 25) ^ RA(w4, 14) ^ w4 >>> 3) | 0, o3[B4 + 84 >> 2] = n4, w4 = ((c4 + w4 | 0) + (RA(k4 = o3[M4 >> 2], 25) ^ RA(k4, 14) ^ k4 >>> 3) | 0) + (RA(s4, 15) ^ RA(s4, 13) ^ s4 >>> 10) | 0, o3[B4 + 88 >> 2] = w4, r4 = ((h4 = o3[p4 >> 2]) + (r4 + (RA(E4, 25) ^ RA(E4, 14) ^ E4 >>> 3) | 0) | 0) + (RA(w4, 15) ^ RA(w4, 13) ^ w4 >>> 10) | 0, o3[B4 + 96 >> 2] = r4, h4 = ((f4 + k4 | 0) + (RA(h4, 25) ^ RA(h4, 14) ^ h4 >>> 3) | 0) + (RA(n4, 15) ^ RA(n4, 13) ^ n4 >>> 10) | 0, o3[B4 + 92 >> 2] = h4, t4 = (t4 + (e4 + (RA(Q4, 25) ^ RA(Q4, 14) ^ Q4 >>> 3) | 0) | 0) + (RA(r4, 15) ^ RA(r4, 13) ^ r4 >>> 10) | 0, o3[B4 + 104 >> 2] = t4, E4 = (D4 + (E4 + (RA(e4, 25) ^ RA(e4, 14) ^ e4 >>> 3) | 0) | 0) + (RA(h4, 15) ^ RA(h4, 13) ^ h4 >>> 10) | 0, o3[B4 + 100 >> 2] = E4, e4 = (n4 + (i4 + (RA(y4, 25) ^ RA(y4, 14) ^ y4 >>> 3) | 0) | 0) + (RA(t4, 15) ^ RA(t4, 13) ^ t4 >>> 10) | 0, o3[B4 + 112 >> 2] = e4, E4 = (s4 + (Q4 + (RA(i4, 25) ^ RA(i4, 14) ^ i4 >>> 3) | 0) | 0) + (RA(E4, 15) ^ RA(E4, 13) ^ E4 >>> 10) | 0, o3[B4 + 108 >> 2] = E4, U4 = B4, Y4 = (h4 + (I7 + (RA(c4, 25) ^ RA(c4, 14) ^ c4 >>> 3) | 0) | 0) + (RA(e4, 15) ^ RA(e4, 13) ^ e4 >>> 10) | 0, o3[U4 + 120 >> 2] = Y4, I7 = (w4 + (y4 + (RA(I7, 25) ^ RA(I7, 14) ^ I7 >>> 3) | 0) | 0) + (RA(E4, 15) ^ RA(E4, 13) ^ E4 >>> 10) | 0, o3[B4 + 116 >> 2] = I7, U4 = B4, Y4 = (r4 + (c4 + (RA(f4, 25) ^ RA(f4, 14) ^ f4 >>> 3) | 0) | 0) + (RA(I7, 15) ^ RA(I7, 13) ^ I7 >>> 10) | 0, o3[U4 + 124 >> 2] = Y4;
                      o3[A8 >> 2] = f4 + o3[A8 >> 2], o3[A8 + 4 >> 2] = o3[A8 + 4 >> 2] + o3[C4 + 4 >> 2], o3[A8 + 8 >> 2] = o3[A8 + 8 >> 2] + o3[C4 + 8 >> 2], o3[A8 + 12 >> 2] = o3[A8 + 12 >> 2] + o3[C4 + 12 >> 2], o3[A8 + 16 >> 2] = o3[A8 + 16 >> 2] + o3[C4 + 16 >> 2], o3[A8 + 20 >> 2] = o3[A8 + 20 >> 2] + o3[C4 + 20 >> 2], o3[A8 + 24 >> 2] = o3[A8 + 24 >> 2] + o3[C4 + 24 >> 2], o3[A8 + 28 >> 2] = o3[A8 + 28 >> 2] + o3[C4 + 28 >> 2];
                    }
                    function M3(A8, I7) {
                      var g6, C4, B4, Q4, i4, E4, a4, f4, e4, r4, D4, t4, y4, w4, n4, s4, k4, F4, S4, H4, G4, _4, M4, p4, N4, J4, U4, Y4, d4, K4, b4, P4, v4 = 0, L4 = 0, R4 = 0, u4 = 0, x4 = 0, m4 = 0, l4 = 0, z4 = 0, q4 = 0, X3 = 0, j3 = 0, T2 = 0, O2 = 0, V2 = 0, Z2 = 0, W2 = 0, $2 = 0, AA2 = 0, IA2 = 0, gA2 = 0, CA2 = 0, BA2 = 0;
                      v4 = kA(C4 = (s4 = o3[I7 + 12 >> 2]) << 1, E4 = C4 >> 31, s4, G4 = s4 >> 31), R4 = h3, L4 = (q4 = kA(x4 = o3[I7 + 16 >> 2], a4 = x4 >> 31, f4 = (u4 = o3[I7 + 8 >> 2]) << 1, t4 = f4 >> 31)) + v4 | 0, v4 = h3 + R4 | 0, v4 = L4 >>> 0 < q4 >>> 0 ? v4 + 1 | 0 : v4, R4 = (X3 = kA(O2 = (e4 = o3[I7 + 20 >> 2]) << 1, y4 = O2 >> 31, q4 = (m4 = o3[I7 + 4 >> 2]) << 1, B4 = q4 >> 31)) + L4 | 0, L4 = h3 + v4 | 0, L4 = R4 >>> 0 < X3 >>> 0 ? L4 + 1 | 0 : L4, l4 = kA(g6 = o3[I7 + 24 >> 2], r4 = g6 >> 31, X3 = (W2 = o3[I7 >> 2]) << 1, Q4 = X3 >> 31), v4 = h3 + L4 | 0, v4 = (R4 = l4 + R4 | 0) >>> 0 < l4 >>> 0 ? v4 + 1 | 0 : v4, L4 = R4, w4 = o3[I7 + 32 >> 2], R4 = kA(j3 = c3(w4, 19), D4 = j3 >> 31, w4, F4 = w4 >> 31), v4 = h3 + v4 | 0, v4 = (L4 = L4 + R4 | 0) >>> 0 < R4 >>> 0 ? v4 + 1 | 0 : v4, J4 = o3[I7 + 36 >> 2], R4 = kA(l4 = c3(J4, 38), i4 = l4 >> 31, S4 = (n4 = o3[I7 + 28 >> 2]) << 1, _4 = S4 >> 31), I7 = h3 + v4 | 0, Z2 = L4 = R4 + L4 | 0, R4 = L4 >>> 0 < R4 >>> 0 ? I7 + 1 | 0 : I7, I7 = kA(q4, B4, x4, a4), v4 = h3, L4 = kA(f4, t4, s4, G4), v4 = h3 + v4 | 0, v4 = (I7 = L4 + I7 | 0) >>> 0 < L4 >>> 0 ? v4 + 1 | 0 : v4, z4 = kA(e4, H4 = e4 >> 31, X3, Q4), L4 = h3 + v4 | 0, L4 = (I7 = z4 + I7 | 0) >>> 0 < z4 >>> 0 ? L4 + 1 | 0 : L4, z4 = kA(j3, D4, S4, _4), v4 = h3 + L4 | 0, v4 = (I7 = z4 + I7 | 0) >>> 0 < z4 >>> 0 ? v4 + 1 | 0 : v4, L4 = kA(l4, i4, g6, r4), v4 = h3 + v4 | 0, CA2 = I7 = L4 + I7 | 0, T2 = I7 >>> 0 < L4 >>> 0 ? v4 + 1 | 0 : v4, v4 = kA(q4, B4, C4, E4), L4 = h3, M4 = I7 = u4, u4 = kA(I7, V2 = I7 >> 31, I7, V2), I7 = h3 + L4 | 0, I7 = (v4 = u4 + v4 | 0) >>> 0 < u4 >>> 0 ? I7 + 1 | 0 : I7, L4 = (u4 = kA(X3, Q4, x4, a4)) + v4 | 0, v4 = h3 + I7 | 0, v4 = L4 >>> 0 < u4 >>> 0 ? v4 + 1 | 0 : v4, I7 = (u4 = kA(z4 = c3(n4, 38), k4 = z4 >> 31, n4, p4 = n4 >> 31)) + L4 | 0, L4 = h3 + v4 | 0, L4 = I7 >>> 0 < u4 >>> 0 ? L4 + 1 | 0 : L4, I7 = (v4 = I7) + (u4 = kA(j3, D4, I7 = g6 << 1, I7 >> 31)) | 0, v4 = h3 + L4 | 0, v4 = I7 >>> 0 < u4 >>> 0 ? v4 + 1 | 0 : v4, L4 = I7, I7 = kA(l4, i4, O2, y4), v4 = h3 + v4 | 0, U4 = L4 = L4 + I7 | 0, Y4 = v4 = I7 >>> 0 > L4 >>> 0 ? v4 + 1 | 0 : v4, I7 = v4, d4 = L4 = L4 + 33554432 | 0, K4 = I7 = L4 >>> 0 < 33554432 ? I7 + 1 | 0 : I7, v4 = (v4 = I7 >> 26) + T2 | 0, CA2 = I7 = (L4 = (67108863 & I7) << 6 | L4 >>> 26) + CA2 | 0, v4 = I7 >>> 0 < L4 >>> 0 ? v4 + 1 | 0 : v4, b4 = I7 = I7 + 16777216 | 0, v4 = (v4 = (L4 = I7 >>> 0 < 16777216 ? v4 + 1 | 0 : v4) >> 25) + R4 | 0, I7 = (I7 = (33554431 & L4) << 7 | I7 >>> 25) >>> 0 > (L4 = I7 + Z2 | 0) >>> 0 ? v4 + 1 | 0 : v4, Z2 = v4 = L4 + 33554432 | 0, u4 = I7 = v4 >>> 0 < 33554432 ? I7 + 1 | 0 : I7, o3[A8 + 24 >> 2] = L4 - (-67108864 & v4), I7 = kA(X3, Q4, M4, V2), v4 = h3, R4 = kA(q4, B4, m4, $2 = m4 >> 31), L4 = h3 + v4 | 0, L4 = (I7 = R4 + I7 | 0) >>> 0 < R4 >>> 0 ? L4 + 1 | 0 : L4, T2 = kA(R4 = c3(g6, 19), gA2 = R4 >> 31, g6, r4), v4 = h3 + L4 | 0, v4 = (I7 = T2 + I7 | 0) >>> 0 < T2 >>> 0 ? v4 + 1 | 0 : v4, L4 = (T2 = kA(O2, y4, z4, k4)) + I7 | 0, I7 = h3 + v4 | 0, I7 = L4 >>> 0 < T2 >>> 0 ? I7 + 1 | 0 : I7, AA2 = kA(j3, D4, T2 = x4 << 1, N4 = T2 >> 31), v4 = h3 + I7 | 0, v4 = (L4 = AA2 + L4 | 0) >>> 0 < AA2 >>> 0 ? v4 + 1 | 0 : v4, I7 = L4, L4 = kA(l4, i4, C4, E4), v4 = h3 + v4 | 0, IA2 = I7 = I7 + L4 | 0, AA2 = I7 >>> 0 < L4 >>> 0 ? v4 + 1 | 0 : v4, I7 = kA(O2, y4, R4, gA2), v4 = h3, m4 = kA(X3, Q4, m4, $2), L4 = h3 + v4 | 0, L4 = (I7 = m4 + I7 | 0) >>> 0 < m4 >>> 0 ? L4 + 1 | 0 : L4, m4 = kA(x4, a4, z4, k4), v4 = h3 + L4 | 0, v4 = (I7 = m4 + I7 | 0) >>> 0 < m4 >>> 0 ? v4 + 1 | 0 : v4, L4 = (m4 = kA(j3, D4, C4, E4)) + I7 | 0, I7 = h3 + v4 | 0, I7 = L4 >>> 0 < m4 >>> 0 ? I7 + 1 | 0 : I7, m4 = kA(l4, i4, M4, V2), v4 = h3 + I7 | 0, BA2 = L4 = m4 + L4 | 0, $2 = L4 >>> 0 < m4 >>> 0 ? v4 + 1 | 0 : v4, L4 = kA(I7 = c3(e4, 38), I7 >> 31, e4, H4), m4 = h3, I7 = W2, W2 = L4, L4 = kA(I7, v4 = I7 >> 31, I7, v4), v4 = h3 + m4 | 0, v4 = (I7 = W2 + L4 | 0) >>> 0 < L4 >>> 0 ? v4 + 1 | 0 : v4, R4 = kA(R4, gA2, T2, N4), L4 = h3 + v4 | 0, L4 = (I7 = R4 + I7 | 0) >>> 0 < R4 >>> 0 ? L4 + 1 | 0 : L4, R4 = kA(C4, E4, z4, k4), v4 = h3 + L4 | 0, v4 = (I7 = R4 + I7 | 0) >>> 0 < R4 >>> 0 ? v4 + 1 | 0 : v4, L4 = (R4 = kA(j3, D4, f4, t4)) + I7 | 0, I7 = h3 + v4 | 0, I7 = L4 >>> 0 < R4 >>> 0 ? I7 + 1 | 0 : I7, R4 = kA(q4, B4, l4, i4), v4 = h3 + I7 | 0, m4 = L4 = R4 + L4 | 0, W2 = v4 = L4 >>> 0 < R4 >>> 0 ? v4 + 1 | 0 : v4, gA2 = L4 = L4 + 33554432 | 0, P4 = v4 = L4 >>> 0 < 33554432 ? v4 + 1 | 0 : v4, I7 = v4 >> 26, v4 = (67108863 & v4) << 6 | L4 >>> 26, L4 = I7 + $2 | 0, $2 = R4 = v4 + BA2 | 0, v4 = v4 >>> 0 > R4 >>> 0 ? L4 + 1 | 0 : L4, BA2 = L4 = R4 + 16777216 | 0, R4 = (33554431 & (v4 = L4 >>> 0 < 16777216 ? v4 + 1 | 0 : v4)) << 7 | L4 >>> 25, v4 = (v4 >> 25) + AA2 | 0, v4 = (L4 = R4 + IA2 | 0) >>> 0 < R4 >>> 0 ? v4 + 1 | 0 : v4, AA2 = I7 = L4 + 33554432 | 0, R4 = v4 = I7 >>> 0 < 33554432 ? v4 + 1 | 0 : v4, o3[A8 + 8 >> 2] = L4 - (-67108864 & I7), I7 = kA(f4, t4, e4, H4), v4 = h3, L4 = kA(x4, a4, C4, E4), v4 = h3 + v4 | 0, v4 = (I7 = L4 + I7 | 0) >>> 0 < L4 >>> 0 ? v4 + 1 | 0 : v4, L4 = kA(q4, B4, g6, r4), v4 = h3 + v4 | 0, v4 = (I7 = L4 + I7 | 0) >>> 0 < L4 >>> 0 ? v4 + 1 | 0 : v4, L4 = kA(X3, Q4, n4, p4), v4 = h3 + v4 | 0, v4 = (I7 = L4 + I7 | 0) >>> 0 < L4 >>> 0 ? v4 + 1 | 0 : v4, IA2 = (L4 = kA(l4, i4, w4, F4)) + I7 | 0, I7 = h3 + v4 | 0, L4 = (v4 = u4 >> 26) + (L4 = L4 >>> 0 > IA2 >>> 0 ? I7 + 1 | 0 : I7) | 0, Z2 = I7 = (u4 = (67108863 & u4) << 6 | Z2 >>> 26) + IA2 | 0, v4 = I7 >>> 0 < u4 >>> 0 ? L4 + 1 | 0 : L4, IA2 = I7 = I7 + 16777216 | 0, u4 = v4 = I7 >>> 0 < 16777216 ? v4 + 1 | 0 : v4, o3[A8 + 28 >> 2] = Z2 - (-33554432 & I7), I7 = kA(X3, Q4, s4, G4), L4 = h3, v4 = (V2 = kA(q4, B4, M4, V2)) + I7 | 0, I7 = h3 + L4 | 0, I7 = v4 >>> 0 < V2 >>> 0 ? I7 + 1 | 0 : I7, v4 = (z4 = kA(g6, r4, z4, k4)) + v4 | 0, L4 = h3 + I7 | 0, I7 = (j3 = kA(j3, D4, O2, y4)) + v4 | 0, v4 = h3 + (v4 >>> 0 < z4 >>> 0 ? L4 + 1 | 0 : L4) | 0, v4 = I7 >>> 0 < j3 >>> 0 ? v4 + 1 | 0 : v4, L4 = kA(l4, i4, x4, a4), v4 = h3 + v4 | 0, v4 = (v4 = (I7 = L4 + I7 | 0) >>> 0 < L4 >>> 0 ? v4 + 1 | 0 : v4) + (L4 = R4 >> 26) | 0, I7 = (L4 = R4 = (Z2 = I7) + (I7 = (67108863 & R4) << 6 | AA2 >>> 26) | 0) >>> 0 < I7 >>> 0 ? v4 + 1 | 0 : v4, j3 = v4 = L4 + 16777216 | 0, R4 = I7 = v4 >>> 0 < 16777216 ? I7 + 1 | 0 : I7, o3[A8 + 12 >> 2] = L4 - (-33554432 & v4), I7 = kA(g6, r4, f4, t4), v4 = h3, L4 = kA(x4, a4, x4, a4), v4 = h3 + v4 | 0, v4 = (I7 = L4 + I7 | 0) >>> 0 < L4 >>> 0 ? v4 + 1 | 0 : v4, L4 = kA(C4, E4, O2, y4), v4 = h3 + v4 | 0, v4 = (I7 = L4 + I7 | 0) >>> 0 < L4 >>> 0 ? v4 + 1 | 0 : v4, L4 = (x4 = kA(q4, B4, S4, _4)) + I7 | 0, I7 = h3 + v4 | 0, I7 = L4 >>> 0 < x4 >>> 0 ? I7 + 1 | 0 : I7, v4 = (x4 = kA(X3, Q4, w4, F4)) + L4 | 0, L4 = h3 + I7 | 0, L4 = v4 >>> 0 < x4 >>> 0 ? L4 + 1 | 0 : L4, I7 = (x4 = kA(I7 = l4, i4, l4 = J4, O2 = l4 >> 31)) + v4 | 0, v4 = h3 + L4 | 0, v4 = I7 >>> 0 < x4 >>> 0 ? v4 + 1 | 0 : v4, L4 = I7, v4 = (I7 = u4 >> 25) + v4 | 0, v4 = (L4 = L4 + (u4 = (33554431 & u4) << 7 | IA2 >>> 25) | 0) >>> 0 < u4 >>> 0 ? v4 + 1 | 0 : v4, x4 = I7 = L4 + 33554432 | 0, u4 = v4 = I7 >>> 0 < 33554432 ? v4 + 1 | 0 : v4, o3[A8 + 32 >> 2] = L4 - (-67108864 & I7), v4 = R4 >> 25, L4 = (R4 = (33554431 & R4) << 7 | j3 >>> 25) + (U4 - (I7 = -67108864 & d4) | 0) | 0, I7 = v4 + (Y4 - ((I7 >>> 0 > U4 >>> 0) + K4 | 0) | 0) | 0, I7 = L4 >>> 0 < R4 >>> 0 ? I7 + 1 | 0 : I7, R4 = L4, I7 = ((67108863 & (v4 = (L4 = L4 + 33554432 | 0) >>> 0 < 33554432 ? I7 + 1 | 0 : I7)) << 6 | L4 >>> 26) + (z4 = CA2 - (-33554432 & b4) | 0) | 0, o3[A8 + 20 >> 2] = I7, o3[A8 + 16 >> 2] = R4 - (-67108864 & L4), I7 = kA(C4, E4, g6, r4), L4 = h3, v4 = (R4 = kA(e4, H4, T2, N4)) + I7 | 0, I7 = h3 + L4 | 0, I7 = v4 >>> 0 < R4 >>> 0 ? I7 + 1 | 0 : I7, L4 = (R4 = kA(f4, t4, n4, p4)) + v4 | 0, v4 = h3 + I7 | 0, v4 = L4 >>> 0 < R4 >>> 0 ? v4 + 1 | 0 : v4, I7 = (R4 = kA(q4, B4, w4, F4)) + L4 | 0, L4 = h3 + v4 | 0, L4 = I7 >>> 0 < R4 >>> 0 ? L4 + 1 | 0 : L4, R4 = (v4 = I7) + (I7 = kA(X3, Q4, l4, O2)) | 0, v4 = h3 + L4 | 0, v4 = (I7 = I7 >>> 0 > R4 >>> 0 ? v4 + 1 | 0 : v4) + (v4 = u4 >> 26) | 0, I7 = (L4 = (u4 = (67108863 & u4) << 6 | x4 >>> 26) + R4 | 0) >>> 0 < u4 >>> 0 ? v4 + 1 | 0 : v4, I7 = (v4 = L4 + 16777216 | 0) >>> 0 < 16777216 ? I7 + 1 | 0 : I7, o3[A8 + 36 >> 2] = L4 - (-33554432 & v4), u4 = $2 - (-33554432 & BA2) | 0, R4 = m4 - (L4 = -67108864 & gA2) | 0, q4 = W2 - ((L4 >>> 0 > m4 >>> 0) + P4 | 0) | 0, I7 = kA((33554431 & I7) << 7 | v4 >>> 25, I7 >> 25, 19, 0), v4 = h3 + q4 | 0, I7 = I7 >>> 0 > (L4 = I7 + R4 | 0) >>> 0 ? v4 + 1 | 0 : v4, I7 = ((67108863 & (I7 = (v4 = L4 + 33554432 | 0) >>> 0 < 33554432 ? I7 + 1 | 0 : I7)) << 6 | v4 >>> 26) + u4 | 0, o3[A8 + 4 >> 2] = I7, o3[A8 >> 2] = L4 - (-67108864 & v4);
                    }
                    function p3(A8, I7, g6, C4, B4) {
                      var Q4, i4, f4, c4, e4, r4, D4, t4, y4, h4, n4, s4, k4, F4, S4, H4 = 0, G4 = 0, _4 = 0, M4 = 0, p4 = 0, N4 = 0, J4 = 0, U4 = 0, Y4 = 0, d4 = 0, K4 = 0, b4 = 0, P4 = 0, v4 = 0, L4 = 0, R4 = 0, u4 = 0, x4 = 0, m4 = 0, l4 = 0, z4 = 0, q4 = 0, X3 = 0, j3 = 0, T2 = 0, O2 = 0, V2 = 0, Z2 = 0, W2 = 0, $2 = 0, AA2 = 0, IA2 = 0, gA2 = 0, CA2 = 0;
                      for (Q4 = w3 + -64 | 0, i4 = o3[A8 + 60 >> 2], f4 = o3[A8 + 56 >> 2], l4 = o3[A8 + 52 >> 2], m4 = o3[A8 + 48 >> 2], c4 = o3[A8 + 44 >> 2], e4 = o3[A8 + 40 >> 2], r4 = o3[A8 + 36 >> 2], D4 = o3[A8 + 32 >> 2], t4 = o3[A8 + 28 >> 2], y4 = o3[A8 + 24 >> 2], h4 = o3[A8 + 20 >> 2], n4 = o3[A8 + 16 >> 2], s4 = o3[A8 + 12 >> 2], k4 = o3[A8 + 8 >> 2], F4 = o3[A8 + 4 >> 2], S4 = o3[A8 >> 2]; ; ) {
                        if (!B4 & C4 >>> 0 > 63 | B4)
                          H4 = g6;
                        else {
                          if (o3[Q4 + 56 >> 2] = 0, o3[Q4 + 60 >> 2] = 0, o3[Q4 + 48 >> 2] = 0, o3[Q4 + 52 >> 2] = 0, o3[Q4 + 40 >> 2] = 0, o3[Q4 + 44 >> 2] = 0, o3[Q4 + 32 >> 2] = 0, o3[Q4 + 36 >> 2] = 0, o3[Q4 + 24 >> 2] = 0, o3[Q4 + 28 >> 2] = 0, o3[Q4 + 16 >> 2] = 0, o3[Q4 + 20 >> 2] = 0, o3[Q4 + 8 >> 2] = 0, o3[Q4 + 12 >> 2] = 0, o3[Q4 >> 2] = 0, o3[Q4 + 4 >> 2] = 0, _4 = 0, C4 | B4)
                            for (; E3[_4 + Q4 | 0] = a3[I7 + _4 | 0], !B4 & (_4 = _4 + 1 | 0) >>> 0 < C4 >>> 0 | B4; )
                              ;
                          I7 = H4 = Q4, T2 = g6;
                        }
                        for (z4 = 20, G4 = S4, d4 = F4, K4 = k4, v4 = s4, _4 = n4, g6 = h4, p4 = y4, N4 = t4, J4 = D4, R4 = r4, b4 = e4, M4 = i4, u4 = f4, L4 = l4, P4 = m4, U4 = c4; Y4 = _4, G4 = RA((_4 = G4 + _4 | 0) ^ P4, 16), Y4 = P4 = RA(Y4 ^ (J4 = G4 + J4 | 0), 12), P4 = RA((x4 = _4 + P4 | 0) ^ G4, 8), _4 = RA(Y4 ^ (J4 = P4 + J4 | 0), 7), M4 = RA((G4 = N4 + v4 | 0) ^ M4, 16), N4 = RA((U4 = M4 + U4 | 0) ^ N4, 12), v4 = RA((K4 = p4 + K4 | 0) ^ u4, 16), p4 = RA((b4 = v4 + b4 | 0) ^ p4, 12), u4 = (q4 = G4 + N4 | 0) + _4 | 0, X3 = RA((K4 = p4 + K4 | 0) ^ v4, 8), G4 = RA(u4 ^ X3, 16), v4 = RA((d4 = g6 + d4 | 0) ^ L4, 16), g6 = RA((R4 = v4 + R4 | 0) ^ g6, 12), Y4 = _4, L4 = RA((d4 = g6 + d4 | 0) ^ v4, 8), Y4 = RA(Y4 ^ (_4 = (j3 = L4 + R4 | 0) + G4 | 0), 12), u4 = RA(G4 ^ (v4 = Y4 + u4 | 0), 8), _4 = RA((R4 = u4 + _4 | 0) ^ Y4, 7), Y4 = J4, J4 = K4, G4 = RA(M4 ^ q4, 8), K4 = RA((M4 = G4 + U4 | 0) ^ N4, 7), L4 = RA((J4 = J4 + K4 | 0) ^ L4, 16), U4 = RA((N4 = Y4 + L4 | 0) ^ K4, 12), L4 = RA(L4 ^ (K4 = U4 + J4 | 0), 8), N4 = RA((J4 = N4 + L4 | 0) ^ U4, 7), U4 = M4, M4 = d4, d4 = RA((b4 = b4 + X3 | 0) ^ p4, 7), p4 = U4 + (P4 = RA((M4 = M4 + d4 | 0) ^ P4, 16)) | 0, U4 = M4, M4 = RA(p4 ^ d4, 12), P4 = RA(P4 ^ (d4 = U4 + M4 | 0), 8), p4 = RA((U4 = p4 + P4 | 0) ^ M4, 7), Y4 = b4, M4 = G4, G4 = RA(g6 ^ j3, 7), M4 = RA(M4 ^ (b4 = G4 + x4 | 0), 16), x4 = RA((g6 = Y4 + M4 | 0) ^ G4, 12), M4 = RA(M4 ^ (G4 = x4 + b4 | 0), 8), g6 = RA((b4 = g6 + M4 | 0) ^ x4, 7), z4 = z4 - 2 | 0; )
                          ;
                        if (z4 = a3[I7 + 4 | 0] | a3[I7 + 5 | 0] << 8 | a3[I7 + 6 | 0] << 16 | a3[I7 + 7 | 0] << 24, x4 = a3[I7 + 8 | 0] | a3[I7 + 9 | 0] << 8 | a3[I7 + 10 | 0] << 16 | a3[I7 + 11 | 0] << 24, q4 = a3[I7 + 12 | 0] | a3[I7 + 13 | 0] << 8 | a3[I7 + 14 | 0] << 16 | a3[I7 + 15 | 0] << 24, X3 = a3[I7 + 16 | 0] | a3[I7 + 17 | 0] << 8 | a3[I7 + 18 | 0] << 16 | a3[I7 + 19 | 0] << 24, j3 = a3[I7 + 20 | 0] | a3[I7 + 21 | 0] << 8 | a3[I7 + 22 | 0] << 16 | a3[I7 + 23 | 0] << 24, Y4 = a3[I7 + 24 | 0] | a3[I7 + 25 | 0] << 8 | a3[I7 + 26 | 0] << 16 | a3[I7 + 27 | 0] << 24, O2 = a3[I7 + 28 | 0] | a3[I7 + 29 | 0] << 8 | a3[I7 + 30 | 0] << 16 | a3[I7 + 31 | 0] << 24, V2 = a3[I7 + 32 | 0] | a3[I7 + 33 | 0] << 8 | a3[I7 + 34 | 0] << 16 | a3[I7 + 35 | 0] << 24, Z2 = a3[I7 + 36 | 0] | a3[I7 + 37 | 0] << 8 | a3[I7 + 38 | 0] << 16 | a3[I7 + 39 | 0] << 24, W2 = a3[I7 + 40 | 0] | a3[I7 + 41 | 0] << 8 | a3[I7 + 42 | 0] << 16 | a3[I7 + 43 | 0] << 24, $2 = a3[I7 + 44 | 0] | a3[I7 + 45 | 0] << 8 | a3[I7 + 46 | 0] << 16 | a3[I7 + 47 | 0] << 24, AA2 = a3[I7 + 48 | 0] | a3[I7 + 49 | 0] << 8 | a3[I7 + 50 | 0] << 16 | a3[I7 + 51 | 0] << 24, IA2 = a3[I7 + 52 | 0] | a3[I7 + 53 | 0] << 8 | a3[I7 + 54 | 0] << 16 | a3[I7 + 55 | 0] << 24, gA2 = a3[I7 + 56 | 0] | a3[I7 + 57 | 0] << 8 | a3[I7 + 58 | 0] << 16 | a3[I7 + 59 | 0] << 24, CA2 = a3[I7 + 60 | 0] | a3[I7 + 61 | 0] << 8 | a3[I7 + 62 | 0] << 16 | a3[I7 + 63 | 0] << 24, G4 = G4 + S4 ^ (a3[0 | I7] | a3[I7 + 1 | 0] << 8 | a3[I7 + 2 | 0] << 16 | a3[I7 + 3 | 0] << 24), E3[0 | H4] = G4, E3[H4 + 1 | 0] = G4 >>> 8, E3[H4 + 2 | 0] = G4 >>> 16, E3[H4 + 3 | 0] = G4 >>> 24, G4 = M4 + i4 ^ CA2, E3[H4 + 60 | 0] = G4, E3[H4 + 61 | 0] = G4 >>> 8, E3[H4 + 62 | 0] = G4 >>> 16, E3[H4 + 63 | 0] = G4 >>> 24, G4 = u4 + f4 ^ gA2, E3[H4 + 56 | 0] = G4, E3[H4 + 57 | 0] = G4 >>> 8, E3[H4 + 58 | 0] = G4 >>> 16, E3[H4 + 59 | 0] = G4 >>> 24, G4 = L4 + l4 ^ IA2, E3[H4 + 52 | 0] = G4, E3[H4 + 53 | 0] = G4 >>> 8, E3[H4 + 54 | 0] = G4 >>> 16, E3[H4 + 55 | 0] = G4 >>> 24, G4 = P4 + m4 ^ AA2, E3[H4 + 48 | 0] = G4, E3[H4 + 49 | 0] = G4 >>> 8, E3[H4 + 50 | 0] = G4 >>> 16, E3[H4 + 51 | 0] = G4 >>> 24, G4 = U4 + c4 ^ $2, E3[H4 + 44 | 0] = G4, E3[H4 + 45 | 0] = G4 >>> 8, E3[H4 + 46 | 0] = G4 >>> 16, E3[H4 + 47 | 0] = G4 >>> 24, G4 = b4 + e4 ^ W2, E3[H4 + 40 | 0] = G4, E3[H4 + 41 | 0] = G4 >>> 8, E3[H4 + 42 | 0] = G4 >>> 16, E3[H4 + 43 | 0] = G4 >>> 24, G4 = R4 + r4 ^ Z2, E3[H4 + 36 | 0] = G4, E3[H4 + 37 | 0] = G4 >>> 8, E3[H4 + 38 | 0] = G4 >>> 16, E3[H4 + 39 | 0] = G4 >>> 24, G4 = J4 + D4 ^ V2, E3[H4 + 32 | 0] = G4, E3[H4 + 33 | 0] = G4 >>> 8, E3[H4 + 34 | 0] = G4 >>> 16, E3[H4 + 35 | 0] = G4 >>> 24, N4 = N4 + t4 ^ O2, E3[H4 + 28 | 0] = N4, E3[H4 + 29 | 0] = N4 >>> 8, E3[H4 + 30 | 0] = N4 >>> 16, E3[H4 + 31 | 0] = N4 >>> 24, p4 = Y4 ^ p4 + y4, E3[H4 + 24 | 0] = p4, E3[H4 + 25 | 0] = p4 >>> 8, E3[H4 + 26 | 0] = p4 >>> 16, E3[H4 + 27 | 0] = p4 >>> 24, g6 = j3 ^ g6 + h4, E3[H4 + 20 | 0] = g6, E3[H4 + 21 | 0] = g6 >>> 8, E3[H4 + 22 | 0] = g6 >>> 16, E3[H4 + 23 | 0] = g6 >>> 24, g6 = X3 ^ _4 + n4, E3[H4 + 16 | 0] = g6, E3[H4 + 17 | 0] = g6 >>> 8, E3[H4 + 18 | 0] = g6 >>> 16, E3[H4 + 19 | 0] = g6 >>> 24, g6 = q4 ^ v4 + s4, E3[H4 + 12 | 0] = g6, E3[H4 + 13 | 0] = g6 >>> 8, E3[H4 + 14 | 0] = g6 >>> 16, E3[H4 + 15 | 0] = g6 >>> 24, g6 = x4 ^ K4 + k4, E3[H4 + 8 | 0] = g6, E3[H4 + 9 | 0] = g6 >>> 8, E3[H4 + 10 | 0] = g6 >>> 16, E3[H4 + 11 | 0] = g6 >>> 24, g6 = z4 ^ d4 + F4, E3[H4 + 4 | 0] = g6, E3[H4 + 5 | 0] = g6 >>> 8, E3[H4 + 6 | 0] = g6 >>> 16, E3[H4 + 7 | 0] = g6 >>> 24, l4 = !(m4 = m4 + 1 | 0) + l4 | 0, !B4 & C4 >>> 0 <= 64) {
                          if (!(!C4 | !B4 & C4 >>> 0 > 63 | 0 != (0 | B4)))
                            for (_4 = 0; E3[_4 + T2 | 0] = a3[H4 + _4 | 0], C4 >>> 0 > (_4 = _4 + 1 | 0) >>> 0; )
                              ;
                          o3[A8 + 52 >> 2] = l4, o3[A8 + 48 >> 2] = m4;
                          break;
                        }
                        I7 = I7 - -64 | 0, g6 = H4 - -64 | 0, B4 = B4 - 1 | 0, B4 = (C4 = C4 + -64 | 0) >>> 0 < 4294967232 ? B4 + 1 | 0 : B4;
                      }
                    }
                    function N3(A8, I7) {
                      var g6, C4 = 0, B4 = 0, Q4 = 0, i4 = 0, a4 = 0, f4 = 0, c4 = 0;
                      w3 = g6 = w3 - 704 | 0, C4 = 80 + ((B4 = o3[A8 + 72 >> 2] >>> 3 & 127) + A8 | 0) | 0, B4 >>> 0 >= 112 ? (YA(C4, 35008, 128 - B4 | 0), k3(A8, B4 = A8 + 80 | 0, g6, g6 + 640 | 0), dA(B4, 0, 112)) : YA(C4, 35008, 112 - B4 | 0), f4 = (Q4 = o3[A8 + 64 >> 2]) << 24 | (65280 & Q4) << 8, B4 = (i4 = 16711680 & Q4) >>> 8 | 0, c4 = i4 << 24, i4 = (a4 = -16777216 & Q4) >>> 24 | 0, C4 = c4 | a4 << 8 | -16777216 & ((255 & (C4 = o3[A8 + 68 >> 2])) << 24 | Q4 >>> 8) | 16711680 & ((16777215 & C4) << 8 | Q4 >>> 24) | C4 >>> 8 & 65280 | C4 >>> 24, E3[A8 + 192 | 0] = C4, E3[A8 + 193 | 0] = C4 >>> 8, E3[A8 + 194 | 0] = C4 >>> 16, E3[A8 + 195 | 0] = C4 >>> 24, B4 = (C4 = B4 | i4 | f4) | (B4 = 0) | B4 | 0, E3[A8 + 196 | 0] = B4, E3[A8 + 197 | 0] = B4 >>> 8, E3[A8 + 198 | 0] = B4 >>> 16, E3[A8 + 199 | 0] = B4 >>> 24, f4 = (Q4 = o3[A8 + 72 >> 2]) << 24 | (65280 & Q4) << 8, B4 = (i4 = 16711680 & Q4) >>> 8 | 0, c4 = i4 << 24, i4 = (a4 = -16777216 & Q4) >>> 24 | 0, C4 = c4 | a4 << 8 | -16777216 & ((255 & (C4 = o3[A8 + 76 >> 2])) << 24 | Q4 >>> 8) | 16711680 & ((16777215 & C4) << 8 | Q4 >>> 24) | C4 >>> 8 & 65280 | C4 >>> 24, E3[A8 + 200 | 0] = C4, E3[A8 + 201 | 0] = C4 >>> 8, E3[A8 + 202 | 0] = C4 >>> 16, E3[A8 + 203 | 0] = C4 >>> 24, B4 = (C4 = B4 | i4 | f4) | (B4 = 0) | B4 | 0, E3[A8 + 204 | 0] = B4, E3[A8 + 205 | 0] = B4 >>> 8, E3[A8 + 206 | 0] = B4 >>> 16, E3[A8 + 207 | 0] = B4 >>> 24, k3(A8, A8 + 80 | 0, g6, g6 + 640 | 0), f4 = (Q4 = o3[A8 >> 2]) << 24 | (65280 & Q4) << 8, B4 = (i4 = 16711680 & Q4) >>> 8 | 0, c4 = i4 << 24, i4 = (a4 = -16777216 & Q4) >>> 24 | 0, C4 = c4 | a4 << 8 | -16777216 & ((255 & (C4 = o3[A8 + 4 >> 2])) << 24 | Q4 >>> 8) | 16711680 & ((16777215 & C4) << 8 | Q4 >>> 24) | C4 >>> 8 & 65280 | C4 >>> 24, E3[0 | I7] = C4, E3[I7 + 1 | 0] = C4 >>> 8, E3[I7 + 2 | 0] = C4 >>> 16, E3[I7 + 3 | 0] = C4 >>> 24, B4 = (C4 = B4 | i4 | f4) | (B4 = 0) | B4 | 0, E3[I7 + 4 | 0] = B4, E3[I7 + 5 | 0] = B4 >>> 8, E3[I7 + 6 | 0] = B4 >>> 16, E3[I7 + 7 | 0] = B4 >>> 24, f4 = (Q4 = o3[A8 + 8 >> 2]) << 24 | (65280 & Q4) << 8, B4 = (i4 = 16711680 & Q4) >>> 8 | 0, c4 = i4 << 24, i4 = (a4 = -16777216 & Q4) >>> 24 | 0, C4 = c4 | a4 << 8 | -16777216 & ((255 & (C4 = o3[A8 + 12 >> 2])) << 24 | Q4 >>> 8) | 16711680 & ((16777215 & C4) << 8 | Q4 >>> 24) | C4 >>> 8 & 65280 | C4 >>> 24, E3[I7 + 8 | 0] = C4, E3[I7 + 9 | 0] = C4 >>> 8, E3[I7 + 10 | 0] = C4 >>> 16, E3[I7 + 11 | 0] = C4 >>> 24, B4 = (C4 = B4 | i4 | f4) | (B4 = 0) | B4 | 0, E3[I7 + 12 | 0] = B4, E3[I7 + 13 | 0] = B4 >>> 8, E3[I7 + 14 | 0] = B4 >>> 16, E3[I7 + 15 | 0] = B4 >>> 24, f4 = (Q4 = o3[A8 + 16 >> 2]) << 24 | (65280 & Q4) << 8, B4 = (i4 = 16711680 & Q4) >>> 8 | 0, c4 = i4 << 24, i4 = (a4 = -16777216 & Q4) >>> 24 | 0, C4 = c4 | a4 << 8 | -16777216 & ((255 & (C4 = o3[A8 + 20 >> 2])) << 24 | Q4 >>> 8) | 16711680 & ((16777215 & C4) << 8 | Q4 >>> 24) | C4 >>> 8 & 65280 | C4 >>> 24, E3[I7 + 16 | 0] = C4, E3[I7 + 17 | 0] = C4 >>> 8, E3[I7 + 18 | 0] = C4 >>> 16, E3[I7 + 19 | 0] = C4 >>> 24, B4 = (C4 = B4 | i4 | f4) | (B4 = 0) | B4 | 0, E3[I7 + 20 | 0] = B4, E3[I7 + 21 | 0] = B4 >>> 8, E3[I7 + 22 | 0] = B4 >>> 16, E3[I7 + 23 | 0] = B4 >>> 24, f4 = (Q4 = o3[A8 + 24 >> 2]) << 24 | (65280 & Q4) << 8, B4 = (i4 = 16711680 & Q4) >>> 8 | 0, c4 = i4 << 24, i4 = (a4 = -16777216 & Q4) >>> 24 | 0, C4 = c4 | a4 << 8 | -16777216 & ((255 & (C4 = o3[A8 + 28 >> 2])) << 24 | Q4 >>> 8) | 16711680 & ((16777215 & C4) << 8 | Q4 >>> 24) | C4 >>> 8 & 65280 | C4 >>> 24, E3[I7 + 24 | 0] = C4, E3[I7 + 25 | 0] = C4 >>> 8, E3[I7 + 26 | 0] = C4 >>> 16, E3[I7 + 27 | 0] = C4 >>> 24, B4 = (C4 = B4 | i4 | f4) | (B4 = 0) | B4 | 0, E3[I7 + 28 | 0] = B4, E3[I7 + 29 | 0] = B4 >>> 8, E3[I7 + 30 | 0] = B4 >>> 16, E3[I7 + 31 | 0] = B4 >>> 24, f4 = (Q4 = o3[A8 + 32 >> 2]) << 24 | (65280 & Q4) << 8, B4 = (i4 = 16711680 & Q4) >>> 8 | 0, c4 = i4 << 24, i4 = (a4 = -16777216 & Q4) >>> 24 | 0, C4 = c4 | a4 << 8 | -16777216 & ((255 & (C4 = o3[A8 + 36 >> 2])) << 24 | Q4 >>> 8) | 16711680 & ((16777215 & C4) << 8 | Q4 >>> 24) | C4 >>> 8 & 65280 | C4 >>> 24, E3[I7 + 32 | 0] = C4, E3[I7 + 33 | 0] = C4 >>> 8, E3[I7 + 34 | 0] = C4 >>> 16, E3[I7 + 35 | 0] = C4 >>> 24, B4 = (C4 = B4 | i4 | f4) | (B4 = 0) | B4 | 0, E3[I7 + 36 | 0] = B4, E3[I7 + 37 | 0] = B4 >>> 8, E3[I7 + 38 | 0] = B4 >>> 16, E3[I7 + 39 | 0] = B4 >>> 24, f4 = (Q4 = o3[A8 + 40 >> 2]) << 24 | (65280 & Q4) << 8, B4 = (i4 = 16711680 & Q4) >>> 8 | 0, c4 = i4 << 24, i4 = (a4 = -16777216 & Q4) >>> 24 | 0, C4 = c4 | a4 << 8 | -16777216 & ((255 & (C4 = o3[A8 + 44 >> 2])) << 24 | Q4 >>> 8) | 16711680 & ((16777215 & C4) << 8 | Q4 >>> 24) | C4 >>> 8 & 65280 | C4 >>> 24, E3[I7 + 40 | 0] = C4, E3[I7 + 41 | 0] = C4 >>> 8, E3[I7 + 42 | 0] = C4 >>> 16, E3[I7 + 43 | 0] = C4 >>> 24, B4 = (C4 = B4 | i4 | f4) | (B4 = 0) | B4 | 0, E3[I7 + 44 | 0] = B4, E3[I7 + 45 | 0] = B4 >>> 8, E3[I7 + 46 | 0] = B4 >>> 16, E3[I7 + 47 | 0] = B4 >>> 24, f4 = (Q4 = o3[A8 + 48 >> 2]) << 24 | (65280 & Q4) << 8, B4 = (i4 = 16711680 & Q4) >>> 8 | 0, c4 = i4 << 24, i4 = (a4 = -16777216 & Q4) >>> 24 | 0, C4 = c4 | a4 << 8 | -16777216 & ((255 & (C4 = o3[A8 + 52 >> 2])) << 24 | Q4 >>> 8) | 16711680 & ((16777215 & C4) << 8 | Q4 >>> 24) | C4 >>> 8 & 65280 | C4 >>> 24, E3[I7 + 48 | 0] = C4, E3[I7 + 49 | 0] = C4 >>> 8, E3[I7 + 50 | 0] = C4 >>> 16, E3[I7 + 51 | 0] = C4 >>> 24, B4 = (C4 = B4 | i4 | f4) | (B4 = 0) | B4 | 0, E3[I7 + 52 | 0] = B4, E3[I7 + 53 | 0] = B4 >>> 8, E3[I7 + 54 | 0] = B4 >>> 16, E3[I7 + 55 | 0] = B4 >>> 24, f4 = (Q4 = o3[A8 + 56 >> 2]) << 24 | (65280 & Q4) << 8, B4 = (i4 = 16711680 & Q4) >>> 8 | 0, C4 = I7, c4 = i4 << 24, i4 = (a4 = -16777216 & Q4) >>> 24 | 0, I7 = c4 | a4 << 8 | -16777216 & ((255 & (I7 = o3[A8 + 60 >> 2])) << 24 | Q4 >>> 8) | 16711680 & ((16777215 & I7) << 8 | Q4 >>> 24) | I7 >>> 8 & 65280 | I7 >>> 24, E3[C4 + 56 | 0] = I7, E3[C4 + 57 | 0] = I7 >>> 8, E3[C4 + 58 | 0] = I7 >>> 16, E3[C4 + 59 | 0] = I7 >>> 24, I7 = (I7 = B4 | i4 | f4) | (B4 = 0) | B4 | 0, E3[C4 + 60 | 0] = I7, E3[C4 + 61 | 0] = I7 >>> 8, E3[C4 + 62 | 0] = I7 >>> 16, E3[C4 + 63 | 0] = I7 >>> 24, iI(g6, 704), iI(A8, 208), w3 = g6 + 704 | 0;
                    }
                    function J3(A8, I7, g6) {
                      var C4, B4 = 0, i4 = 0, f4 = 0, c4 = 0, e4 = 0, r4 = 0;
                      w3 = C4 = w3 + -64 | 0;
                      A: {
                        if ((g6 - 65 & 255) >>> 0 > 191) {
                          if (B4 = -1, !(a3[A8 + 80 | 0] | a3[A8 + 81 | 0] << 8 | a3[A8 + 82 | 0] << 16 | a3[A8 + 83 | 0] << 24 | a3[A8 + 84 | 0] | a3[A8 + 85 | 0] << 8 | a3[A8 + 86 | 0] << 16 | a3[A8 + 87 | 0] << 24)) {
                            if ((c4 = a3[A8 + 352 | 0] | a3[A8 + 353 | 0] << 8 | a3[A8 + 354 | 0] << 16 | a3[A8 + 355 | 0] << 24) >>> 0 >= 129) {
                              if (f4 = a3[0 | (B4 = A8 - -64 | 0)] | a3[B4 + 1 | 0] << 8 | a3[B4 + 2 | 0] << 16 | a3[B4 + 3 | 0] << 24, e4 = i4 = a3[B4 + 4 | 0] | a3[B4 + 5 | 0] << 8 | a3[B4 + 6 | 0] << 16 | a3[B4 + 7 | 0] << 24, i4 = (c4 = f4 + 128 | 0) >>> 0 < 128 ? i4 + 1 | 0 : i4, E3[0 | B4] = c4, E3[B4 + 1 | 0] = c4 >>> 8, E3[B4 + 2 | 0] = c4 >>> 16, E3[B4 + 3 | 0] = c4 >>> 24, E3[B4 + 4 | 0] = i4, E3[B4 + 5 | 0] = i4 >>> 8, E3[B4 + 6 | 0] = i4 >>> 16, E3[B4 + 7 | 0] = i4 >>> 24, i4 = a3[A8 + 76 | 0] | a3[A8 + 77 | 0] << 8 | a3[A8 + 78 | 0] << 16 | a3[A8 + 79 | 0] << 24, i4 = (B4 = -1 == (0 | e4) & f4 >>> 0 > 4294967167) >>> 0 > (f4 = B4 + (a3[A8 + 72 | 0] | a3[A8 + 73 | 0] << 8 | a3[A8 + 74 | 0] << 16 | a3[A8 + 75 | 0] << 24) | 0) >>> 0 ? i4 + 1 | 0 : i4, E3[A8 + 72 | 0] = f4, E3[A8 + 73 | 0] = f4 >>> 8, E3[A8 + 74 | 0] = f4 >>> 16, E3[A8 + 75 | 0] = f4 >>> 24, E3[A8 + 76 | 0] = i4, E3[A8 + 77 | 0] = i4 >>> 8, E3[A8 + 78 | 0] = i4 >>> 16, E3[A8 + 79 | 0] = i4 >>> 24, n3(A8, i4 = A8 + 96 | 0), B4 = (a3[A8 + 352 | 0] | a3[A8 + 353 | 0] << 8 | a3[A8 + 354 | 0] << 16 | a3[A8 + 355 | 0] << 24) - 128 | 0, E3[A8 + 352 | 0] = B4, E3[A8 + 353 | 0] = B4 >>> 8, E3[A8 + 354 | 0] = B4 >>> 16, E3[A8 + 355 | 0] = B4 >>> 24, B4 >>> 0 >= 129)
                                break A;
                              YA(i4, A8 + 224 | 0, B4), c4 = a3[A8 + 352 | 0] | a3[A8 + 353 | 0] << 8 | a3[A8 + 354 | 0] << 16 | a3[A8 + 355 | 0] << 24;
                            }
                            i4 = a3[0 | (B4 = A8 - -64 | 0)] | a3[B4 + 1 | 0] << 8 | a3[B4 + 2 | 0] << 16 | a3[B4 + 3 | 0] << 24, f4 = r4 = a3[B4 + 4 | 0] | a3[B4 + 5 | 0] << 8 | a3[B4 + 6 | 0] << 16 | a3[B4 + 7 | 0] << 24, f4 = (e4 = i4 + c4 | 0) >>> 0 < c4 >>> 0 ? f4 + 1 | 0 : f4, E3[0 | B4] = e4, E3[B4 + 1 | 0] = e4 >>> 8, E3[B4 + 2 | 0] = e4 >>> 16, E3[B4 + 3 | 0] = e4 >>> 24, E3[B4 + 4 | 0] = f4, E3[B4 + 5 | 0] = f4 >>> 8, E3[B4 + 6 | 0] = f4 >>> 16, E3[B4 + 7 | 0] = f4 >>> 24, B4 = (0 | f4) == (0 | r4) & i4 >>> 0 > e4 >>> 0 | f4 >>> 0 < r4 >>> 0, i4 = a3[A8 + 76 | 0] | a3[A8 + 77 | 0] << 8 | a3[A8 + 78 | 0] << 16 | a3[A8 + 79 | 0] << 24, i4 = (f4 = B4 + (a3[A8 + 72 | 0] | a3[A8 + 73 | 0] << 8 | a3[A8 + 74 | 0] << 16 | a3[A8 + 75 | 0] << 24) | 0) >>> 0 < B4 >>> 0 ? i4 + 1 | 0 : i4, E3[A8 + 72 | 0] = f4, E3[A8 + 73 | 0] = f4 >>> 8, E3[A8 + 74 | 0] = f4 >>> 16, E3[A8 + 75 | 0] = f4 >>> 24, E3[A8 + 76 | 0] = i4, E3[A8 + 77 | 0] = i4 >>> 8, E3[A8 + 78 | 0] = i4 >>> 16, E3[A8 + 79 | 0] = i4 >>> 24, a3[A8 + 356 | 0] && (E3[A8 + 88 | 0] = 255, E3[A8 + 89 | 0] = 255, E3[A8 + 90 | 0] = 255, E3[A8 + 91 | 0] = 255, E3[A8 + 92 | 0] = 255, E3[A8 + 93 | 0] = 255, E3[A8 + 94 | 0] = 255, E3[A8 + 95 | 0] = 255), E3[A8 + 80 | 0] = 255, E3[A8 + 81 | 0] = 255, E3[A8 + 82 | 0] = 255, E3[A8 + 83 | 0] = 255, E3[A8 + 84 | 0] = 255, E3[A8 + 85 | 0] = 255, E3[A8 + 86 | 0] = 255, E3[A8 + 87 | 0] = 255, dA((B4 = A8 + 96 | 0) + c4 | 0, 0, 256 - c4 | 0), n3(A8, B4), i4 = a3[A8 + 4 | 0] | a3[A8 + 5 | 0] << 8 | a3[A8 + 6 | 0] << 16 | a3[A8 + 7 | 0] << 24, o3[C4 >> 2] = a3[0 | A8] | a3[A8 + 1 | 0] << 8 | a3[A8 + 2 | 0] << 16 | a3[A8 + 3 | 0] << 24, o3[C4 + 4 >> 2] = i4, i4 = a3[A8 + 12 | 0] | a3[A8 + 13 | 0] << 8 | a3[A8 + 14 | 0] << 16 | a3[A8 + 15 | 0] << 24, o3[C4 + 8 >> 2] = a3[A8 + 8 | 0] | a3[A8 + 9 | 0] << 8 | a3[A8 + 10 | 0] << 16 | a3[A8 + 11 | 0] << 24, o3[C4 + 12 >> 2] = i4, i4 = a3[A8 + 20 | 0] | a3[A8 + 21 | 0] << 8 | a3[A8 + 22 | 0] << 16 | a3[A8 + 23 | 0] << 24, o3[C4 + 16 >> 2] = a3[A8 + 16 | 0] | a3[A8 + 17 | 0] << 8 | a3[A8 + 18 | 0] << 16 | a3[A8 + 19 | 0] << 24, o3[C4 + 20 >> 2] = i4, i4 = a3[A8 + 28 | 0] | a3[A8 + 29 | 0] << 8 | a3[A8 + 30 | 0] << 16 | a3[A8 + 31 | 0] << 24, o3[C4 + 24 >> 2] = a3[A8 + 24 | 0] | a3[A8 + 25 | 0] << 8 | a3[A8 + 26 | 0] << 16 | a3[A8 + 27 | 0] << 24, o3[C4 + 28 >> 2] = i4, i4 = a3[A8 + 36 | 0] | a3[A8 + 37 | 0] << 8 | a3[A8 + 38 | 0] << 16 | a3[A8 + 39 | 0] << 24, o3[C4 + 32 >> 2] = a3[A8 + 32 | 0] | a3[A8 + 33 | 0] << 8 | a3[A8 + 34 | 0] << 16 | a3[A8 + 35 | 0] << 24, o3[C4 + 36 >> 2] = i4, i4 = a3[A8 + 44 | 0] | a3[A8 + 45 | 0] << 8 | a3[A8 + 46 | 0] << 16 | a3[A8 + 47 | 0] << 24, o3[C4 + 40 >> 2] = a3[A8 + 40 | 0] | a3[A8 + 41 | 0] << 8 | a3[A8 + 42 | 0] << 16 | a3[A8 + 43 | 0] << 24, o3[C4 + 44 >> 2] = i4, i4 = a3[A8 + 52 | 0] | a3[A8 + 53 | 0] << 8 | a3[A8 + 54 | 0] << 16 | a3[A8 + 55 | 0] << 24, o3[C4 + 48 >> 2] = a3[A8 + 48 | 0] | a3[A8 + 49 | 0] << 8 | a3[A8 + 50 | 0] << 16 | a3[A8 + 51 | 0] << 24, o3[C4 + 52 >> 2] = i4, i4 = a3[A8 + 60 | 0] | a3[A8 + 61 | 0] << 8 | a3[A8 + 62 | 0] << 16 | a3[A8 + 63 | 0] << 24, o3[C4 + 56 >> 2] = a3[A8 + 56 | 0] | a3[A8 + 57 | 0] << 8 | a3[A8 + 58 | 0] << 16 | a3[A8 + 59 | 0] << 24, o3[C4 + 60 >> 2] = i4, YA(I7, C4, g6), iI(A8, 64), iI(B4, 256), B4 = 0;
                          }
                          return w3 = C4 - -64 | 0, B4;
                        }
                        zA(), Q3();
                      }
                      D3(1280, 1142, 306, 1086), Q3();
                    }
                    function U3(A8, I7) {
                      var g6, C4, B4, Q4, i4, f4, c4, e4, r4, D4, t4, y4, h4, n4, s4, k4, F4 = 0, S4 = 0, G4 = 0, _4 = 0, p4 = 0, N4 = 0, J4 = 0;
                      for (w3 = g6 = w3 - 320 | 0, L3(C4 = A8 + 40 | 0, I7), o3[A8 + 84 >> 2] = 0, o3[A8 + 88 >> 2] = 0, o3[A8 + 80 >> 2] = 1, o3[A8 + 92 >> 2] = 0, o3[A8 + 96 >> 2] = 0, o3[A8 + 100 >> 2] = 0, o3[A8 + 104 >> 2] = 0, o3[A8 + 108 >> 2] = 0, o3[A8 + 112 >> 2] = 0, o3[A8 + 116 >> 2] = 0, M3(N4 = g6 + 240 | 0, C4), H3(_4 = g6 + 192 | 0, N4, 1344), J4 = -1, B4 = o3[g6 + 240 >> 2] - 1 | 0, o3[g6 + 240 >> 2] = B4, o3[g6 + 192 >> 2] = o3[g6 + 192 >> 2] + 1, Q4 = o3[g6 + 244 >> 2], i4 = o3[g6 + 248 >> 2], f4 = o3[g6 + 252 >> 2], c4 = o3[g6 + 256 >> 2], e4 = o3[g6 + 260 >> 2], r4 = o3[g6 + 264 >> 2], D4 = o3[g6 + 268 >> 2], t4 = o3[g6 + 272 >> 2], y4 = o3[g6 + 276 >> 2], M3(p4 = g6 + 144 | 0, _4), H3(p4, p4, _4), M3(A8, p4), H3(A8, A8, _4), H3(A8, A8, N4), w3 = S4 = w3 - 144 | 0, M3(G4 = S4 + 96 | 0, A8), M3(F4 = S4 + 48 | 0, G4), M3(F4, F4), H3(F4, A8, F4), H3(G4, G4, F4), M3(G4, G4), H3(G4, F4, G4), M3(F4, G4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), H3(G4, F4, G4), M3(F4, G4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), H3(F4, F4, G4), M3(S4, F4), M3(S4, S4), M3(S4, S4), M3(S4, S4), M3(S4, S4), M3(S4, S4), M3(S4, S4), M3(S4, S4), M3(S4, S4), M3(S4, S4), M3(S4, S4), M3(S4, S4), M3(S4, S4), M3(S4, S4), M3(S4, S4), M3(S4, S4), M3(S4, S4), M3(S4, S4), M3(S4, S4), M3(S4, S4), H3(F4, S4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), H3(G4, F4, G4), M3(F4, G4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), M3(F4, F4), H3(F4, F4, G4), M3(S4, F4), F4 = 1; M3(S4, S4), 100 != (0 | (F4 = F4 + 1 | 0)); )
                        ;
                      H3(F4 = S4 + 48 || 0, F4, G4), M3(G4, G4), M3(G4, G4), H3(A8, G4, A8), w3 = S4 + 144 | 0, H3(A8, A8, p4), H3(A8, A8, N4), M3(F4 = g6 + 96 | 0, A8), H3(F4, F4, _4), F4 = o3[g6 + 132 >> 2], o3[g6 + 84 >> 2] = F4 - y4, S4 = o3[g6 + 128 >> 2], o3[g6 + 80 >> 2] = S4 - t4, G4 = o3[g6 + 124 >> 2], o3[g6 + 76 >> 2] = G4 - D4, _4 = o3[g6 + 120 >> 2], o3[g6 + 72 >> 2] = _4 - r4, p4 = o3[g6 + 116 >> 2], o3[g6 + 68 >> 2] = p4 - e4, N4 = o3[g6 + 112 >> 2], o3[g6 + 64 >> 2] = N4 - c4, h4 = o3[g6 + 108 >> 2], o3[g6 + 60 >> 2] = h4 - f4, n4 = o3[g6 + 104 >> 2], o3[g6 + 56 >> 2] = n4 - i4, s4 = o3[g6 + 100 >> 2], o3[g6 + 52 >> 2] = s4 - Q4, k4 = o3[g6 + 96 >> 2], o3[g6 + 48 >> 2] = k4 - B4, IA(g6, g6 + 48 | 0);
                      A: {
                        if (!fA(g6, 32)) {
                          if (o3[g6 + 36 >> 2] = F4 + y4, o3[g6 + 32 >> 2] = S4 + t4, o3[g6 + 28 >> 2] = G4 + D4, o3[g6 + 24 >> 2] = _4 + r4, o3[g6 + 20 >> 2] = p4 + e4, o3[g6 + 16 >> 2] = N4 + c4, o3[g6 + 12 >> 2] = f4 + h4, o3[g6 + 8 >> 2] = i4 + n4, o3[g6 + 4 >> 2] = Q4 + s4, o3[g6 >> 2] = B4 + k4, IA(F4 = g6 + 288 | 0, g6), !fA(F4, 32))
                            break A;
                          H3(A8, A8, 1392);
                        }
                        IA(g6 + 288 | 0, A8), (1 & E3[g6 + 288 | 0]) == (a3[I7 + 31 | 0] >>> 7 | 0) && (o3[A8 >> 2] = 0 - o3[A8 >> 2], o3[A8 + 36 >> 2] = 0 - o3[A8 + 36 >> 2], o3[A8 + 32 >> 2] = 0 - o3[A8 + 32 >> 2], o3[A8 + 28 >> 2] = 0 - o3[A8 + 28 >> 2], o3[A8 + 24 >> 2] = 0 - o3[A8 + 24 >> 2], o3[A8 + 20 >> 2] = 0 - o3[A8 + 20 >> 2], o3[A8 + 16 >> 2] = 0 - o3[A8 + 16 >> 2], o3[A8 + 12 >> 2] = 0 - o3[A8 + 12 >> 2], o3[A8 + 8 >> 2] = 0 - o3[A8 + 8 >> 2], o3[A8 + 4 >> 2] = 0 - o3[A8 + 4 >> 2]), H3(A8 + 120 | 0, A8, C4), J4 = 0;
                      }
                      return w3 = g6 + 320 | 0, J4;
                    }
                    function Y3(A8, I7, g6) {
                      var C4, B4, Q4, i4, o4, f4, c4, e4, r4, D4, t4, y4, w4 = 0, h4 = 0, n4 = 0, s4 = 0, k4 = 0, F4 = 0, S4 = 0, H4 = 0, G4 = 0, _4 = 0, M4 = 0, p4 = 0, N4 = 0, J4 = 0, U4 = 0, Y4 = 0, d4 = 0, K4 = 0, b4 = 0, P4 = 0;
                      for (k4 = 1634760805, h4 = C4 = a3[0 | g6] | a3[g6 + 1 | 0] << 8 | a3[g6 + 2 | 0] << 16 | a3[g6 + 3 | 0] << 24, F4 = B4 = a3[g6 + 4 | 0] | a3[g6 + 5 | 0] << 8 | a3[g6 + 6 | 0] << 16 | a3[g6 + 7 | 0] << 24, S4 = Q4 = a3[g6 + 8 | 0] | a3[g6 + 9 | 0] << 8 | a3[g6 + 10 | 0] << 16 | a3[g6 + 11 | 0] << 24, H4 = i4 = a3[g6 + 12 | 0] | a3[g6 + 13 | 0] << 8 | a3[g6 + 14 | 0] << 16 | a3[g6 + 15 | 0] << 24, p4 = 857760878, G4 = o4 = a3[0 | I7] | a3[I7 + 1 | 0] << 8 | a3[I7 + 2 | 0] << 16 | a3[I7 + 3 | 0] << 24, n4 = f4 = a3[I7 + 4 | 0] | a3[I7 + 5 | 0] << 8 | a3[I7 + 6 | 0] << 16 | a3[I7 + 7 | 0] << 24, M4 = c4 = a3[I7 + 8 | 0] | a3[I7 + 9 | 0] << 8 | a3[I7 + 10 | 0] << 16 | a3[I7 + 11 | 0] << 24, J4 = e4 = a3[I7 + 12 | 0] | a3[I7 + 13 | 0] << 8 | a3[I7 + 14 | 0] << 16 | a3[I7 + 15 | 0] << 24, I7 = 2036477234, s4 = r4 = a3[g6 + 16 | 0] | a3[g6 + 17 | 0] << 8 | a3[g6 + 18 | 0] << 16 | a3[g6 + 19 | 0] << 24, w4 = 1797285236, U4 = D4 = a3[g6 + 28 | 0] | a3[g6 + 29 | 0] << 8 | a3[g6 + 30 | 0] << 16 | a3[g6 + 31 | 0] << 24, N4 = t4 = a3[g6 + 24 | 0] | a3[g6 + 25 | 0] << 8 | a3[g6 + 26 | 0] << 16 | a3[g6 + 27 | 0] << 24, g6 = y4 = a3[g6 + 20 | 0] | a3[g6 + 21 | 0] << 8 | a3[g6 + 22 | 0] << 16 | a3[g6 + 23 | 0] << 24; _4 = RA(h4 + p4 | 0, 7) ^ J4, Y4 = RA(_4 + p4 | 0, 9) ^ N4, H4 = RA(g6 + k4 | 0, 7) ^ H4, d4 = RA(H4 + k4 | 0, 9) ^ M4, b4 = RA(d4 + H4 | 0, 13) ^ g6, S4 = RA(w4 + s4 | 0, 7) ^ S4, K4 = RA(S4 + w4 | 0, 9) ^ n4, M4 = RA(S4 + K4 | 0, 13) ^ s4, s4 = RA(K4 + M4 | 0, 18) ^ w4, n4 = RA(I7 + G4 | 0, 7) ^ U4, g6 = b4 ^ RA(s4 + n4 | 0, 7), N4 = Y4 ^ RA(g6 + s4 | 0, 9), U4 = RA(g6 + N4 | 0, 13) ^ n4, w4 = RA(N4 + U4 | 0, 18) ^ s4, F4 = RA(I7 + n4 | 0, 9) ^ F4, G4 = RA(F4 + n4 | 0, 13) ^ G4, I7 = RA(G4 + F4 | 0, 18) ^ I7, s4 = RA(I7 + _4 | 0, 7) ^ M4, M4 = RA(s4 + I7 | 0, 9) ^ d4, J4 = RA(s4 + M4 | 0, 13) ^ _4, I7 = RA(M4 + J4 | 0, 18) ^ I7, _4 = RA(_4 + Y4 | 0, 13) ^ h4, h4 = RA(_4 + Y4 | 0, 18) ^ p4, G4 = RA(h4 + H4 | 0, 7) ^ G4, n4 = RA(G4 + h4 | 0, 9) ^ K4, H4 = RA(n4 + G4 | 0, 13) ^ H4, p4 = RA(n4 + H4 | 0, 18) ^ h4, k4 = RA(d4 + b4 | 0, 18) ^ k4, h4 = RA(k4 + S4 | 0, 7) ^ _4, F4 = RA(h4 + k4 | 0, 9) ^ F4, S4 = RA(h4 + F4 | 0, 13) ^ S4, k4 = RA(F4 + S4 | 0, 18) ^ k4, _4 = P4 >>> 0 < 18, P4 = P4 + 2 | 0, _4; )
                        ;
                      w4 = w4 + 1797285236 | 0, E3[A8 + 60 | 0] = w4, E3[A8 + 61 | 0] = w4 >>> 8, E3[A8 + 62 | 0] = w4 >>> 16, E3[A8 + 63 | 0] = w4 >>> 24, w4 = U4 + D4 | 0, E3[A8 + 56 | 0] = w4, E3[A8 + 57 | 0] = w4 >>> 8, E3[A8 + 58 | 0] = w4 >>> 16, E3[A8 + 59 | 0] = w4 >>> 24, w4 = N4 + t4 | 0, E3[A8 + 52 | 0] = w4, E3[A8 + 53 | 0] = w4 >>> 8, E3[A8 + 54 | 0] = w4 >>> 16, E3[A8 + 55 | 0] = w4 >>> 24, g6 = g6 + y4 | 0, E3[A8 + 48 | 0] = g6, E3[A8 + 49 | 0] = g6 >>> 8, E3[A8 + 50 | 0] = g6 >>> 16, E3[A8 + 51 | 0] = g6 >>> 24, g6 = s4 + r4 | 0, E3[A8 + 44 | 0] = g6, E3[A8 + 45 | 0] = g6 >>> 8, E3[A8 + 46 | 0] = g6 >>> 16, E3[A8 + 47 | 0] = g6 >>> 24, I7 = I7 + 2036477234 | 0, E3[A8 + 40 | 0] = I7, E3[A8 + 41 | 0] = I7 >>> 8, E3[A8 + 42 | 0] = I7 >>> 16, E3[A8 + 43 | 0] = I7 >>> 24, I7 = J4 + e4 | 0, E3[A8 + 36 | 0] = I7, E3[A8 + 37 | 0] = I7 >>> 8, E3[A8 + 38 | 0] = I7 >>> 16, E3[A8 + 39 | 0] = I7 >>> 24, I7 = M4 + c4 | 0, E3[A8 + 32 | 0] = I7, E3[A8 + 33 | 0] = I7 >>> 8, E3[A8 + 34 | 0] = I7 >>> 16, E3[A8 + 35 | 0] = I7 >>> 24, I7 = n4 + f4 | 0, E3[A8 + 28 | 0] = I7, E3[A8 + 29 | 0] = I7 >>> 8, E3[A8 + 30 | 0] = I7 >>> 16, E3[A8 + 31 | 0] = I7 >>> 24, I7 = G4 + o4 | 0, E3[A8 + 24 | 0] = I7, E3[A8 + 25 | 0] = I7 >>> 8, E3[A8 + 26 | 0] = I7 >>> 16, E3[A8 + 27 | 0] = I7 >>> 24, I7 = p4 + 857760878 | 0, E3[A8 + 20 | 0] = I7, E3[A8 + 21 | 0] = I7 >>> 8, E3[A8 + 22 | 0] = I7 >>> 16, E3[A8 + 23 | 0] = I7 >>> 24, I7 = H4 + i4 | 0, E3[A8 + 16 | 0] = I7, E3[A8 + 17 | 0] = I7 >>> 8, E3[A8 + 18 | 0] = I7 >>> 16, E3[A8 + 19 | 0] = I7 >>> 24, I7 = S4 + Q4 | 0, E3[A8 + 12 | 0] = I7, E3[A8 + 13 | 0] = I7 >>> 8, E3[A8 + 14 | 0] = I7 >>> 16, E3[A8 + 15 | 0] = I7 >>> 24, I7 = F4 + B4 | 0, E3[A8 + 8 | 0] = I7, E3[A8 + 9 | 0] = I7 >>> 8, E3[A8 + 10 | 0] = I7 >>> 16, E3[A8 + 11 | 0] = I7 >>> 24, I7 = h4 + C4 | 0, E3[A8 + 4 | 0] = I7, E3[A8 + 5 | 0] = I7 >>> 8, E3[A8 + 6 | 0] = I7 >>> 16, E3[A8 + 7 | 0] = I7 >>> 24, I7 = k4 + 1634760805 | 0, E3[0 | A8] = I7, E3[A8 + 1 | 0] = I7 >>> 8, E3[A8 + 2 | 0] = I7 >>> 16, E3[A8 + 3 | 0] = I7 >>> 24;
                    }
                    function d3(A8, I7, g6, C4) {
                      var B4 = 0, Q4 = 0, i4 = 0, E4 = 0, f4 = 0, e4 = 0, r4 = 0, D4 = 0, t4 = 0, y4 = 0, w4 = 0, n4 = 0, s4 = 0, k4 = 0, F4 = 0, S4 = 0, H4 = 0, G4 = 0, _4 = 0, M4 = 0, p4 = 0, N4 = 0, J4 = 0, U4 = 0, Y4 = 0;
                      if (w4 = o3[A8 + 36 >> 2], t4 = o3[A8 + 32 >> 2], y4 = o3[A8 + 28 >> 2], r4 = o3[A8 + 24 >> 2], D4 = o3[A8 + 20 >> 2], !C4 & g6 >>> 0 >= 16 | C4)
                        for (p4 = !a3[A8 + 80 | 0] << 24, s4 = o3[A8 + 4 >> 2], N4 = c3(s4, 5), F4 = o3[A8 + 8 >> 2], _4 = c3(F4, 5), H4 = o3[A8 + 12 >> 2], G4 = c3(H4, 5), M4 = o3[A8 + 16 >> 2], S4 = c3(M4, 5), k4 = o3[A8 >> 2]; B4 = kA(i4 = ((a3[I7 + 3 | 0] | a3[I7 + 4 | 0] << 8 | a3[I7 + 5 | 0] << 16 | a3[I7 + 6 | 0] << 24) >>> 2 & 67108863) + r4 | 0, 0, H4, 0), f4 = h3, D4 = (E4 = kA(r4 = (67108863 & (a3[0 | I7] | a3[I7 + 1 | 0] << 8 | a3[I7 + 2 | 0] << 16 | a3[I7 + 3 | 0] << 24)) + D4 | 0, 0, M4, 0)) + B4 | 0, B4 = h3 + f4 | 0, B4 = E4 >>> 0 > D4 >>> 0 ? B4 + 1 | 0 : B4, f4 = kA(y4 = ((a3[I7 + 6 | 0] | a3[I7 + 7 | 0] << 8 | a3[I7 + 8 | 0] << 16 | a3[I7 + 9 | 0] << 24) >>> 4 & 67108863) + y4 | 0, 0, F4, 0), B4 = h3 + B4 | 0, B4 = f4 >>> 0 > (D4 = f4 + D4 | 0) >>> 0 ? B4 + 1 | 0 : B4, f4 = kA(t4 = ((a3[I7 + 9 | 0] | a3[I7 + 10 | 0] << 8 | a3[I7 + 11 | 0] << 16 | a3[I7 + 12 | 0] << 24) >>> 6 | 0) + t4 | 0, 0, s4, 0), B4 = h3 + B4 | 0, B4 = f4 >>> 0 > (D4 = f4 + D4 | 0) >>> 0 ? B4 + 1 | 0 : B4, f4 = kA(w4 = w4 + p4 + ((a3[I7 + 12 | 0] | a3[I7 + 13 | 0] << 8 | a3[I7 + 14 | 0] << 16 | a3[I7 + 15 | 0] << 24) >>> 8) | 0, 0, k4, 0), B4 = h3 + B4 | 0, J4 = D4 = f4 + D4 | 0, D4 = f4 >>> 0 > D4 >>> 0 ? B4 + 1 | 0 : B4, B4 = kA(i4, 0, F4, 0), f4 = h3, E4 = kA(r4, 0, H4, 0), Q4 = h3 + f4 | 0, Q4 = (B4 = E4 + B4 | 0) >>> 0 < E4 >>> 0 ? Q4 + 1 | 0 : Q4, f4 = (E4 = kA(y4, 0, s4, 0)) + B4 | 0, B4 = h3 + Q4 | 0, B4 = E4 >>> 0 > f4 >>> 0 ? B4 + 1 | 0 : B4, E4 = kA(t4, 0, k4, 0), B4 = h3 + B4 | 0, B4 = E4 >>> 0 > (f4 = E4 + f4 | 0) >>> 0 ? B4 + 1 | 0 : B4, E4 = kA(w4, 0, S4, 0), B4 = h3 + B4 | 0, U4 = f4 = E4 + f4 | 0, f4 = E4 >>> 0 > f4 >>> 0 ? B4 + 1 | 0 : B4, B4 = kA(i4, 0, s4, 0), e4 = h3, E4 = (Q4 = kA(r4, 0, F4, 0)) + B4 | 0, B4 = h3 + e4 | 0, B4 = Q4 >>> 0 > E4 >>> 0 ? B4 + 1 | 0 : B4, e4 = kA(y4, 0, k4, 0), Q4 = h3 + B4 | 0, Q4 = (E4 = e4 + E4 | 0) >>> 0 < e4 >>> 0 ? Q4 + 1 | 0 : Q4, e4 = kA(t4, 0, S4, 0), B4 = h3 + Q4 | 0, B4 = (E4 = e4 + E4 | 0) >>> 0 < e4 >>> 0 ? B4 + 1 | 0 : B4, e4 = kA(w4, 0, G4, 0), B4 = h3 + B4 | 0, Y4 = E4 = e4 + E4 | 0, E4 = E4 >>> 0 < e4 >>> 0 ? B4 + 1 | 0 : B4, B4 = kA(i4, 0, k4, 0), Q4 = h3, e4 = (n4 = kA(r4, 0, s4, 0)) + B4 | 0, B4 = h3 + Q4 | 0, B4 = e4 >>> 0 < n4 >>> 0 ? B4 + 1 | 0 : B4, Q4 = kA(y4, 0, S4, 0), B4 = h3 + B4 | 0, B4 = Q4 >>> 0 > (e4 = Q4 + e4 | 0) >>> 0 ? B4 + 1 | 0 : B4, n4 = kA(t4, 0, G4, 0), Q4 = h3 + B4 | 0, Q4 = (e4 = n4 + e4 | 0) >>> 0 < n4 >>> 0 ? Q4 + 1 | 0 : Q4, n4 = kA(w4, 0, _4, 0), B4 = h3 + Q4 | 0, B4 = (e4 = n4 + e4 | 0) >>> 0 < n4 >>> 0 ? B4 + 1 | 0 : B4, n4 = e4, e4 = B4, B4 = kA(i4, 0, S4, 0), Q4 = h3, i4 = (r4 = kA(r4, 0, k4, 0)) + B4 | 0, B4 = h3 + Q4 | 0, B4 = i4 >>> 0 < r4 >>> 0 ? B4 + 1 | 0 : B4, r4 = kA(y4, 0, G4, 0), B4 = h3 + B4 | 0, B4 = (i4 = r4 + i4 | 0) >>> 0 < r4 >>> 0 ? B4 + 1 | 0 : B4, r4 = kA(t4, 0, _4, 0), B4 = h3 + B4 | 0, B4 = (i4 = r4 + i4 | 0) >>> 0 < r4 >>> 0 ? B4 + 1 | 0 : B4, r4 = kA(w4, 0, N4, 0), Q4 = h3 + B4 | 0, Q4 = (i4 = r4 + i4 | 0) >>> 0 < r4 >>> 0 ? Q4 + 1 | 0 : Q4, r4 = i4, B4 = e4, B4 = (i4 = (y4 = (67108863 & Q4) << 6 | i4 >>> 26) + n4 | 0) >>> 0 < y4 >>> 0 ? B4 + 1 | 0 : B4, y4 = i4, t4 = (67108863 & B4) << 6 | i4 >>> 26, B4 = E4, B4 = (i4 = t4 + Y4 | 0) >>> 0 < t4 >>> 0 ? B4 + 1 | 0 : B4, t4 = i4, Q4 = f4, w4 = B4 = (i4 = (67108863 & B4) << 6 | i4 >>> 26) + U4 | 0, f4 = (67108863 & (Q4 = B4 >>> 0 < i4 >>> 0 ? Q4 + 1 | 0 : Q4)) << 6 | B4 >>> 26, B4 = D4, r4 = (67108863 & y4) + ((B4 = c3((67108863 & ((i4 = f4 + J4 | 0) >>> 0 < f4 >>> 0 ? B4 + 1 | 0 : B4)) << 6 | i4 >>> 26, 5) + (67108863 & r4) | 0) >>> 26 | 0) | 0, y4 = 67108863 & t4, t4 = 67108863 & w4, w4 = 67108863 & i4, D4 = 67108863 & B4, I7 = I7 + 16 | 0, !(C4 = C4 - (g6 >>> 0 < 16) | 0) & (g6 = g6 - 16 | 0) >>> 0 > 15 | C4; )
                          ;
                      o3[A8 + 20 >> 2] = D4, o3[A8 + 36 >> 2] = w4, o3[A8 + 32 >> 2] = t4, o3[A8 + 28 >> 2] = y4, o3[A8 + 24 >> 2] = r4;
                    }
                    function K3(A8, I7, g6, C4) {
                      A8 |= 0, I7 |= 0;
                      var B4 = 0;
                      return B4 = -1, (C4 |= 0) - 65 >>> 0 < 4294967232 | (g6 |= 0) >>> 0 > 64 || (g6 && I7 ? (w3 = B4 = w3 - 128 | 0, !I7 | ((C4 &= 255) - 65 & 255) >>> 0 <= 191 | ((g6 &= 255) - 65 & 255) >>> 0 <= 191 ? (zA(), Q3()) : (dA(A8 - -64 | 0, 0, 293), E3[A8 + 56 | 0] = 121, E3[A8 + 57 | 0] = 33, E3[A8 + 58 | 0] = 126, E3[A8 + 59 | 0] = 19, E3[A8 + 60 | 0] = 25, E3[A8 + 61 | 0] = 205, E3[A8 + 62 | 0] = 224, E3[A8 + 63 | 0] = 91, E3[A8 + 48 | 0] = 107, E3[A8 + 49 | 0] = 189, E3[A8 + 50 | 0] = 65, E3[A8 + 51 | 0] = 251, E3[A8 + 52 | 0] = 171, E3[A8 + 53 | 0] = 217, E3[A8 + 54 | 0] = 131, E3[A8 + 55 | 0] = 31, E3[A8 + 40 | 0] = 31, E3[A8 + 41 | 0] = 108, E3[A8 + 42 | 0] = 62, E3[A8 + 43 | 0] = 43, E3[A8 + 44 | 0] = 140, E3[A8 + 45 | 0] = 104, E3[A8 + 46 | 0] = 5, E3[A8 + 47 | 0] = 155, E3[A8 + 32 | 0] = 209, E3[A8 + 33 | 0] = 130, E3[A8 + 34 | 0] = 230, E3[A8 + 35 | 0] = 173, E3[A8 + 36 | 0] = 127, E3[A8 + 37 | 0] = 82, E3[A8 + 38 | 0] = 14, E3[A8 + 39 | 0] = 81, E3[A8 + 24 | 0] = 241, E3[A8 + 25 | 0] = 54, E3[A8 + 26 | 0] = 29, E3[A8 + 27 | 0] = 95, E3[A8 + 28 | 0] = 58, E3[A8 + 29 | 0] = 245, E3[A8 + 30 | 0] = 79, E3[A8 + 31 | 0] = 165, E3[A8 + 16 | 0] = 43, E3[A8 + 17 | 0] = 248, E3[A8 + 18 | 0] = 148, E3[A8 + 19 | 0] = 254, E3[A8 + 20 | 0] = 114, E3[A8 + 21 | 0] = 243, E3[A8 + 22 | 0] = 110, E3[A8 + 23 | 0] = 60, E3[A8 + 8 | 0] = 59, E3[A8 + 9 | 0] = 167, E3[A8 + 10 | 0] = 202, E3[A8 + 11 | 0] = 132, E3[A8 + 12 | 0] = 133, E3[A8 + 13 | 0] = 174, E3[A8 + 14 | 0] = 103, E3[A8 + 15 | 0] = 187, C4 = -222443256 ^ (g6 << 8 | C4), E3[0 | A8] = C4, E3[A8 + 1 | 0] = C4 >>> 8, E3[A8 + 2 | 0] = C4 >>> 16, E3[A8 + 3 | 0] = C4 >>> 24, C4 = g6 >>> 24 ^ 1779033703, E3[A8 + 4 | 0] = C4, E3[A8 + 5 | 0] = C4 >>> 8, E3[A8 + 6 | 0] = C4 >>> 16, E3[A8 + 7 | 0] = C4 >>> 24, dA(g6 + B4 | 0, 0, g6 << 24 >> 24 >= 0 ? 128 - g6 | 0 : 0), g6 = YA(B4, I7, g6), YA(A8 + 96 | 0, g6, 128), I7 = 128 + (a3[A8 + 352 | 0] | a3[A8 + 353 | 0] << 8 | a3[A8 + 354 | 0] << 16 | a3[A8 + 355 | 0] << 24) | 0, E3[A8 + 352 | 0] = I7, E3[A8 + 353 | 0] = I7 >>> 8, E3[A8 + 354 | 0] = I7 >>> 16, E3[A8 + 355 | 0] = I7 >>> 24, iI(g6, 128), w3 = g6 + 128 | 0)) : (((I7 = 255 & C4) - 65 & 255) >>> 0 <= 191 && (zA(), Q3()), dA(A8 - -64 | 0, 0, 293), E3[A8 + 56 | 0] = 121, E3[A8 + 57 | 0] = 33, E3[A8 + 58 | 0] = 126, E3[A8 + 59 | 0] = 19, E3[A8 + 60 | 0] = 25, E3[A8 + 61 | 0] = 205, E3[A8 + 62 | 0] = 224, E3[A8 + 63 | 0] = 91, E3[A8 + 48 | 0] = 107, E3[A8 + 49 | 0] = 189, E3[A8 + 50 | 0] = 65, E3[A8 + 51 | 0] = 251, E3[A8 + 52 | 0] = 171, E3[A8 + 53 | 0] = 217, E3[A8 + 54 | 0] = 131, E3[A8 + 55 | 0] = 31, E3[A8 + 40 | 0] = 31, E3[A8 + 41 | 0] = 108, E3[A8 + 42 | 0] = 62, E3[A8 + 43 | 0] = 43, E3[A8 + 44 | 0] = 140, E3[A8 + 45 | 0] = 104, E3[A8 + 46 | 0] = 5, E3[A8 + 47 | 0] = 155, E3[A8 + 32 | 0] = 209, E3[A8 + 33 | 0] = 130, E3[A8 + 34 | 0] = 230, E3[A8 + 35 | 0] = 173, E3[A8 + 36 | 0] = 127, E3[A8 + 37 | 0] = 82, E3[A8 + 38 | 0] = 14, E3[A8 + 39 | 0] = 81, E3[A8 + 24 | 0] = 241, E3[A8 + 25 | 0] = 54, E3[A8 + 26 | 0] = 29, E3[A8 + 27 | 0] = 95, E3[A8 + 28 | 0] = 58, E3[A8 + 29 | 0] = 245, E3[A8 + 30 | 0] = 79, E3[A8 + 31 | 0] = 165, E3[A8 + 16 | 0] = 43, E3[A8 + 17 | 0] = 248, E3[A8 + 18 | 0] = 148, E3[A8 + 19 | 0] = 254, E3[A8 + 20 | 0] = 114, E3[A8 + 21 | 0] = 243, E3[A8 + 22 | 0] = 110, E3[A8 + 23 | 0] = 60, E3[A8 + 8 | 0] = 59, E3[A8 + 9 | 0] = 167, E3[A8 + 10 | 0] = 202, E3[A8 + 11 | 0] = 132, E3[A8 + 12 | 0] = 133, E3[A8 + 13 | 0] = 174, E3[A8 + 14 | 0] = 103, E3[A8 + 15 | 0] = 187, I7 ^= -222443256, E3[0 | A8] = I7, E3[A8 + 1 | 0] = I7 >>> 8, E3[A8 + 2 | 0] = I7 >>> 16, E3[A8 + 3 | 0] = I7 >>> 24, E3[A8 + 4 | 0] = 103, E3[A8 + 5 | 0] = 230, E3[A8 + 6 | 0] = 9, E3[A8 + 7 | 0] = 106), B4 = 0), 0 | B4;
                    }
                    function b3(A8, I7, g6) {
                      var C4, B4, Q4, i4, E4, a4, f4, c4, e4, r4, D4, t4 = 0, y4 = 0, w4 = 0, h4 = 0, n4 = 0, s4 = 0, k4 = 0, F4 = 0, S4 = 0, G4 = 0, _4 = 0, M4 = 0, p4 = 0, N4 = 0, J4 = 0, U4 = 0, Y4 = 0, d4 = 0, K4 = 0;
                      t4 = o3[I7 + 40 >> 2], y4 = o3[I7 + 4 >> 2], h4 = o3[I7 + 44 >> 2], n4 = o3[I7 + 8 >> 2], s4 = o3[I7 + 48 >> 2], k4 = o3[I7 + 12 >> 2], F4 = o3[I7 + 52 >> 2], S4 = o3[I7 + 16 >> 2], G4 = o3[I7 + 56 >> 2], _4 = o3[I7 + 20 >> 2], M4 = o3[I7 + 60 >> 2], p4 = o3[I7 + 24 >> 2], N4 = o3[(w4 = I7 - -64 | 0) >> 2], J4 = o3[I7 + 28 >> 2], U4 = o3[I7 + 68 >> 2], Y4 = o3[I7 + 32 >> 2], d4 = o3[I7 + 72 >> 2], K4 = o3[I7 >> 2], o3[A8 + 36 >> 2] = o3[I7 + 36 >> 2] + o3[I7 + 76 >> 2], o3[A8 + 32 >> 2] = Y4 + d4, o3[A8 + 28 >> 2] = J4 + U4, o3[A8 + 24 >> 2] = p4 + N4, o3[A8 + 20 >> 2] = _4 + M4, o3[A8 + 16 >> 2] = S4 + G4, o3[A8 + 12 >> 2] = k4 + F4, o3[A8 + 8 >> 2] = n4 + s4, o3[A8 + 4 >> 2] = y4 + h4, o3[A8 >> 2] = t4 + K4, h4 = o3[I7 + 40 >> 2], t4 = o3[I7 + 4 >> 2], n4 = o3[I7 + 44 >> 2], s4 = o3[I7 + 8 >> 2], k4 = o3[I7 + 48 >> 2], F4 = o3[I7 + 12 >> 2], S4 = o3[I7 + 52 >> 2], G4 = o3[I7 + 16 >> 2], _4 = o3[I7 + 56 >> 2], M4 = o3[I7 + 20 >> 2], p4 = o3[I7 + 60 >> 2], N4 = o3[I7 + 24 >> 2], w4 = o3[w4 >> 2], y4 = o3[I7 + 28 >> 2], J4 = o3[I7 + 68 >> 2], U4 = o3[I7 + 32 >> 2], Y4 = o3[I7 + 72 >> 2], d4 = o3[I7 >> 2], o3[A8 + 76 >> 2] = o3[I7 + 76 >> 2] - o3[I7 + 36 >> 2], o3[A8 + 72 >> 2] = Y4 - U4, o3[A8 + 68 >> 2] = J4 - y4, o3[(y4 = A8 - -64 | 0) >> 2] = w4 - N4, o3[A8 + 60 >> 2] = p4 - M4, o3[A8 + 56 >> 2] = _4 - G4, o3[A8 + 52 >> 2] = S4 - F4, o3[A8 + 48 >> 2] = k4 - s4, o3[A8 + 44 >> 2] = n4 - t4, o3[(t4 = A8 + 40 | 0) >> 2] = h4 - d4, H3(A8 + 80 | 0, A8, g6), H3(t4, t4, g6 + 40 | 0), H3(A8 + 120 | 0, g6 + 120 | 0, I7 + 120 | 0), H3(A8, I7 + 80 | 0, g6 + 80 | 0), K4 = o3[A8 + 4 >> 2], Q4 = o3[A8 + 8 >> 2], i4 = o3[A8 + 12 >> 2], E4 = o3[A8 + 16 >> 2], a4 = o3[A8 + 20 >> 2], f4 = o3[A8 + 24 >> 2], c4 = o3[A8 + 28 >> 2], e4 = o3[A8 + 32 >> 2], r4 = o3[A8 + 36 >> 2], I7 = o3[t4 >> 2], g6 = o3[A8 + 80 >> 2], h4 = o3[A8 + 44 >> 2], n4 = o3[A8 + 84 >> 2], s4 = o3[A8 + 48 >> 2], k4 = o3[A8 + 88 >> 2], F4 = o3[A8 + 52 >> 2], S4 = o3[A8 + 92 >> 2], G4 = o3[A8 + 56 >> 2], _4 = o3[A8 + 96 >> 2], M4 = o3[A8 + 60 >> 2], p4 = o3[A8 + 100 >> 2], w4 = o3[y4 >> 2], N4 = o3[A8 + 104 >> 2], J4 = o3[A8 + 68 >> 2], U4 = o3[A8 + 108 >> 2], Y4 = o3[A8 + 72 >> 2], d4 = o3[A8 + 112 >> 2], D4 = o3[A8 >> 2], C4 = o3[A8 + 76 >> 2], B4 = o3[A8 + 116 >> 2], o3[A8 + 76 >> 2] = C4 + B4, o3[A8 + 72 >> 2] = Y4 + d4, o3[A8 + 68 >> 2] = J4 + U4, o3[y4 >> 2] = w4 + N4, o3[A8 + 60 >> 2] = M4 + p4, o3[A8 + 56 >> 2] = G4 + _4, o3[A8 + 52 >> 2] = F4 + S4, o3[A8 + 48 >> 2] = s4 + k4, o3[A8 + 44 >> 2] = h4 + n4, o3[t4 >> 2] = I7 + g6, o3[A8 + 36 >> 2] = B4 - C4, o3[A8 + 32 >> 2] = d4 - Y4, o3[A8 + 28 >> 2] = U4 - J4, o3[A8 + 24 >> 2] = N4 - w4, o3[A8 + 20 >> 2] = p4 - M4, o3[A8 + 16 >> 2] = _4 - G4, o3[A8 + 12 >> 2] = S4 - F4, o3[A8 + 8 >> 2] = k4 - s4, o3[A8 + 4 >> 2] = n4 - h4, o3[A8 >> 2] = g6 - I7, I7 = r4 << 1, g6 = o3[A8 + 156 >> 2], o3[A8 + 156 >> 2] = I7 - g6, t4 = e4 << 1, y4 = o3[A8 + 152 >> 2], o3[A8 + 152 >> 2] = t4 - y4, h4 = c4 << 1, n4 = o3[A8 + 148 >> 2], o3[A8 + 148 >> 2] = h4 - n4, s4 = f4 << 1, k4 = o3[A8 + 144 >> 2], o3[A8 + 144 >> 2] = s4 - k4, F4 = a4 << 1, S4 = o3[A8 + 140 >> 2], o3[A8 + 140 >> 2] = F4 - S4, G4 = E4 << 1, _4 = o3[A8 + 136 >> 2], o3[A8 + 136 >> 2] = G4 - _4, M4 = i4 << 1, p4 = o3[A8 + 132 >> 2], o3[A8 + 132 >> 2] = M4 - p4, w4 = Q4 << 1, N4 = o3[A8 + 128 >> 2], o3[A8 + 128 >> 2] = w4 - N4, J4 = K4 << 1, U4 = o3[A8 + 124 >> 2], o3[A8 + 124 >> 2] = J4 - U4, Y4 = D4 << 1, d4 = o3[A8 + 120 >> 2], o3[A8 + 120 >> 2] = Y4 - d4, o3[A8 + 112 >> 2] = t4 + y4, o3[A8 + 108 >> 2] = h4 + n4, o3[A8 + 104 >> 2] = s4 + k4, o3[A8 + 100 >> 2] = F4 + S4, o3[A8 + 96 >> 2] = G4 + _4, o3[A8 + 92 >> 2] = M4 + p4, o3[A8 + 88 >> 2] = w4 + N4, o3[A8 + 84 >> 2] = J4 + U4, o3[A8 + 80 >> 2] = Y4 + d4, o3[A8 + 116 >> 2] = I7 + g6;
                    }
                    function P3(A8, I7, g6) {
                      var C4, B4, Q4, i4, E4, a4, f4, c4, e4, r4, D4, t4 = 0, y4 = 0, w4 = 0, h4 = 0, n4 = 0, s4 = 0, k4 = 0, F4 = 0, S4 = 0, G4 = 0, _4 = 0, M4 = 0, p4 = 0, N4 = 0, J4 = 0, U4 = 0, Y4 = 0, d4 = 0, K4 = 0;
                      t4 = o3[I7 + 40 >> 2], y4 = o3[I7 + 4 >> 2], h4 = o3[I7 + 44 >> 2], n4 = o3[I7 + 8 >> 2], s4 = o3[I7 + 48 >> 2], k4 = o3[I7 + 12 >> 2], F4 = o3[I7 + 52 >> 2], S4 = o3[I7 + 16 >> 2], G4 = o3[I7 + 56 >> 2], _4 = o3[I7 + 20 >> 2], M4 = o3[I7 + 60 >> 2], p4 = o3[I7 + 24 >> 2], N4 = o3[(w4 = I7 - -64 | 0) >> 2], J4 = o3[I7 + 28 >> 2], U4 = o3[I7 + 68 >> 2], Y4 = o3[I7 + 32 >> 2], d4 = o3[I7 + 72 >> 2], K4 = o3[I7 >> 2], o3[A8 + 36 >> 2] = o3[I7 + 36 >> 2] + o3[I7 + 76 >> 2], o3[A8 + 32 >> 2] = Y4 + d4, o3[A8 + 28 >> 2] = J4 + U4, o3[A8 + 24 >> 2] = p4 + N4, o3[A8 + 20 >> 2] = _4 + M4, o3[A8 + 16 >> 2] = S4 + G4, o3[A8 + 12 >> 2] = k4 + F4, o3[A8 + 8 >> 2] = n4 + s4, o3[A8 + 4 >> 2] = y4 + h4, o3[A8 >> 2] = t4 + K4, h4 = o3[I7 + 40 >> 2], t4 = o3[I7 + 4 >> 2], n4 = o3[I7 + 44 >> 2], s4 = o3[I7 + 8 >> 2], k4 = o3[I7 + 48 >> 2], F4 = o3[I7 + 12 >> 2], S4 = o3[I7 + 52 >> 2], G4 = o3[I7 + 16 >> 2], _4 = o3[I7 + 56 >> 2], M4 = o3[I7 + 20 >> 2], p4 = o3[I7 + 60 >> 2], N4 = o3[I7 + 24 >> 2], w4 = o3[w4 >> 2], y4 = o3[I7 + 28 >> 2], J4 = o3[I7 + 68 >> 2], U4 = o3[I7 + 32 >> 2], Y4 = o3[I7 + 72 >> 2], d4 = o3[I7 >> 2], o3[A8 + 76 >> 2] = o3[I7 + 76 >> 2] - o3[I7 + 36 >> 2], o3[A8 + 72 >> 2] = Y4 - U4, o3[A8 + 68 >> 2] = J4 - y4, o3[(y4 = A8 - -64 | 0) >> 2] = w4 - N4, o3[A8 + 60 >> 2] = p4 - M4, o3[A8 + 56 >> 2] = _4 - G4, o3[A8 + 52 >> 2] = S4 - F4, o3[A8 + 48 >> 2] = k4 - s4, o3[A8 + 44 >> 2] = n4 - t4, o3[(t4 = A8 + 40 | 0) >> 2] = h4 - d4, H3(A8 + 80 | 0, A8, g6 + 40 | 0), H3(t4, t4, g6), H3(A8 + 120 | 0, g6 + 120 | 0, I7 + 120 | 0), H3(A8, I7 + 80 | 0, g6 + 80 | 0), K4 = o3[A8 + 4 >> 2], Q4 = o3[A8 + 8 >> 2], i4 = o3[A8 + 12 >> 2], E4 = o3[A8 + 16 >> 2], a4 = o3[A8 + 20 >> 2], f4 = o3[A8 + 24 >> 2], c4 = o3[A8 + 28 >> 2], e4 = o3[A8 + 32 >> 2], r4 = o3[A8 + 36 >> 2], I7 = o3[t4 >> 2], g6 = o3[A8 + 80 >> 2], h4 = o3[A8 + 44 >> 2], n4 = o3[A8 + 84 >> 2], s4 = o3[A8 + 48 >> 2], k4 = o3[A8 + 88 >> 2], F4 = o3[A8 + 52 >> 2], S4 = o3[A8 + 92 >> 2], G4 = o3[A8 + 56 >> 2], _4 = o3[A8 + 96 >> 2], M4 = o3[A8 + 60 >> 2], p4 = o3[A8 + 100 >> 2], w4 = o3[y4 >> 2], N4 = o3[A8 + 104 >> 2], J4 = o3[A8 + 68 >> 2], U4 = o3[A8 + 108 >> 2], Y4 = o3[A8 + 72 >> 2], d4 = o3[A8 + 112 >> 2], D4 = o3[A8 >> 2], C4 = o3[A8 + 76 >> 2], B4 = o3[A8 + 116 >> 2], o3[A8 + 76 >> 2] = C4 + B4, o3[A8 + 72 >> 2] = Y4 + d4, o3[A8 + 68 >> 2] = J4 + U4, o3[y4 >> 2] = w4 + N4, o3[A8 + 60 >> 2] = M4 + p4, o3[A8 + 56 >> 2] = G4 + _4, o3[A8 + 52 >> 2] = F4 + S4, o3[A8 + 48 >> 2] = s4 + k4, o3[A8 + 44 >> 2] = h4 + n4, o3[t4 >> 2] = I7 + g6, o3[A8 + 36 >> 2] = B4 - C4, o3[A8 + 32 >> 2] = d4 - Y4, o3[A8 + 28 >> 2] = U4 - J4, o3[A8 + 24 >> 2] = N4 - w4, o3[A8 + 20 >> 2] = p4 - M4, o3[A8 + 16 >> 2] = _4 - G4, o3[A8 + 12 >> 2] = S4 - F4, o3[A8 + 8 >> 2] = k4 - s4, o3[A8 + 4 >> 2] = n4 - h4, o3[A8 >> 2] = g6 - I7, I7 = o3[A8 + 156 >> 2], g6 = r4 << 1, o3[A8 + 156 >> 2] = I7 + g6, t4 = o3[A8 + 152 >> 2], y4 = e4 << 1, o3[A8 + 152 >> 2] = t4 + y4, h4 = o3[A8 + 148 >> 2], n4 = c4 << 1, o3[A8 + 148 >> 2] = h4 + n4, s4 = o3[A8 + 144 >> 2], k4 = f4 << 1, o3[A8 + 144 >> 2] = s4 + k4, F4 = o3[A8 + 140 >> 2], S4 = a4 << 1, o3[A8 + 140 >> 2] = F4 + S4, G4 = o3[A8 + 136 >> 2], _4 = E4 << 1, o3[A8 + 136 >> 2] = G4 + _4, M4 = o3[A8 + 132 >> 2], p4 = i4 << 1, o3[A8 + 132 >> 2] = M4 + p4, w4 = o3[A8 + 128 >> 2], N4 = Q4 << 1, o3[A8 + 128 >> 2] = w4 + N4, J4 = o3[A8 + 124 >> 2], U4 = K4 << 1, o3[A8 + 124 >> 2] = J4 + U4, Y4 = o3[A8 + 120 >> 2], d4 = D4 << 1, o3[A8 + 120 >> 2] = Y4 + d4, o3[A8 + 112 >> 2] = y4 - t4, o3[A8 + 108 >> 2] = n4 - h4, o3[A8 + 104 >> 2] = k4 - s4, o3[A8 + 100 >> 2] = S4 - F4, o3[A8 + 96 >> 2] = _4 - G4, o3[A8 + 92 >> 2] = p4 - M4, o3[A8 + 88 >> 2] = N4 - w4, o3[A8 + 84 >> 2] = U4 - J4, o3[A8 + 80 >> 2] = d4 - Y4, o3[A8 + 116 >> 2] = g6 - I7;
                    }
                    function v3(A8, I7, g6) {
                      var C4, B4, Q4, i4, E4, a4, f4, c4, e4, r4, D4, t4 = 0, y4 = 0, w4 = 0, h4 = 0, n4 = 0, s4 = 0, k4 = 0, F4 = 0, S4 = 0, G4 = 0, _4 = 0, M4 = 0, p4 = 0, N4 = 0, J4 = 0, U4 = 0, Y4 = 0, d4 = 0, K4 = 0;
                      t4 = o3[I7 + 40 >> 2], y4 = o3[I7 + 4 >> 2], h4 = o3[I7 + 44 >> 2], n4 = o3[I7 + 8 >> 2], s4 = o3[I7 + 48 >> 2], k4 = o3[I7 + 12 >> 2], F4 = o3[I7 + 52 >> 2], S4 = o3[I7 + 16 >> 2], G4 = o3[I7 + 56 >> 2], _4 = o3[I7 + 20 >> 2], M4 = o3[I7 + 60 >> 2], p4 = o3[I7 + 24 >> 2], N4 = o3[(w4 = I7 - -64 | 0) >> 2], J4 = o3[I7 + 28 >> 2], U4 = o3[I7 + 68 >> 2], Y4 = o3[I7 + 32 >> 2], d4 = o3[I7 + 72 >> 2], K4 = o3[I7 >> 2], o3[A8 + 36 >> 2] = o3[I7 + 36 >> 2] + o3[I7 + 76 >> 2], o3[A8 + 32 >> 2] = Y4 + d4, o3[A8 + 28 >> 2] = J4 + U4, o3[A8 + 24 >> 2] = p4 + N4, o3[A8 + 20 >> 2] = _4 + M4, o3[A8 + 16 >> 2] = S4 + G4, o3[A8 + 12 >> 2] = k4 + F4, o3[A8 + 8 >> 2] = n4 + s4, o3[A8 + 4 >> 2] = y4 + h4, o3[A8 >> 2] = t4 + K4, h4 = o3[I7 + 40 >> 2], t4 = o3[I7 + 4 >> 2], n4 = o3[I7 + 44 >> 2], s4 = o3[I7 + 8 >> 2], k4 = o3[I7 + 48 >> 2], F4 = o3[I7 + 12 >> 2], S4 = o3[I7 + 52 >> 2], G4 = o3[I7 + 16 >> 2], _4 = o3[I7 + 56 >> 2], M4 = o3[I7 + 20 >> 2], p4 = o3[I7 + 60 >> 2], N4 = o3[I7 + 24 >> 2], w4 = o3[w4 >> 2], y4 = o3[I7 + 28 >> 2], J4 = o3[I7 + 68 >> 2], U4 = o3[I7 + 32 >> 2], Y4 = o3[I7 + 72 >> 2], d4 = o3[I7 >> 2], o3[A8 + 76 >> 2] = o3[I7 + 76 >> 2] - o3[I7 + 36 >> 2], o3[A8 + 72 >> 2] = Y4 - U4, o3[A8 + 68 >> 2] = J4 - y4, o3[(y4 = A8 - -64 | 0) >> 2] = w4 - N4, o3[A8 + 60 >> 2] = p4 - M4, o3[A8 + 56 >> 2] = _4 - G4, o3[A8 + 52 >> 2] = S4 - F4, o3[A8 + 48 >> 2] = k4 - s4, o3[A8 + 44 >> 2] = n4 - t4, o3[(t4 = A8 + 40 | 0) >> 2] = h4 - d4, H3(A8 + 80 | 0, A8, g6), H3(t4, t4, g6 + 40 | 0), H3(A8 + 120 | 0, g6 + 80 | 0, I7 + 120 | 0), K4 = o3[I7 + 80 >> 2], Q4 = o3[I7 + 84 >> 2], i4 = o3[I7 + 88 >> 2], E4 = o3[I7 + 92 >> 2], a4 = o3[I7 + 96 >> 2], f4 = o3[I7 + 100 >> 2], c4 = o3[I7 + 104 >> 2], e4 = o3[I7 + 108 >> 2], r4 = o3[I7 + 112 >> 2], D4 = o3[I7 + 116 >> 2], I7 = o3[t4 >> 2], g6 = o3[A8 + 80 >> 2], h4 = o3[A8 + 44 >> 2], n4 = o3[A8 + 84 >> 2], s4 = o3[A8 + 48 >> 2], k4 = o3[A8 + 88 >> 2], F4 = o3[A8 + 52 >> 2], S4 = o3[A8 + 92 >> 2], G4 = o3[A8 + 56 >> 2], _4 = o3[A8 + 96 >> 2], M4 = o3[A8 + 60 >> 2], p4 = o3[A8 + 100 >> 2], w4 = o3[y4 >> 2], N4 = o3[A8 + 104 >> 2], J4 = o3[A8 + 68 >> 2], U4 = o3[A8 + 108 >> 2], Y4 = o3[A8 + 72 >> 2], d4 = o3[A8 + 112 >> 2], C4 = o3[A8 + 76 >> 2], B4 = o3[A8 + 116 >> 2], o3[A8 + 76 >> 2] = C4 + B4, o3[A8 + 72 >> 2] = Y4 + d4, o3[A8 + 68 >> 2] = J4 + U4, o3[y4 >> 2] = w4 + N4, o3[A8 + 60 >> 2] = M4 + p4, o3[A8 + 56 >> 2] = G4 + _4, o3[A8 + 52 >> 2] = F4 + S4, o3[A8 + 48 >> 2] = s4 + k4, o3[A8 + 44 >> 2] = h4 + n4, o3[t4 >> 2] = I7 + g6, o3[A8 + 36 >> 2] = B4 - C4, o3[A8 + 32 >> 2] = d4 - Y4, o3[A8 + 28 >> 2] = U4 - J4, o3[A8 + 24 >> 2] = N4 - w4, o3[A8 + 20 >> 2] = p4 - M4, o3[A8 + 16 >> 2] = _4 - G4, o3[A8 + 12 >> 2] = S4 - F4, o3[A8 + 8 >> 2] = k4 - s4, o3[A8 + 4 >> 2] = n4 - h4, o3[A8 >> 2] = g6 - I7, I7 = D4 << 1, g6 = o3[A8 + 156 >> 2], o3[A8 + 156 >> 2] = I7 - g6, t4 = r4 << 1, y4 = o3[A8 + 152 >> 2], o3[A8 + 152 >> 2] = t4 - y4, h4 = e4 << 1, n4 = o3[A8 + 148 >> 2], o3[A8 + 148 >> 2] = h4 - n4, s4 = c4 << 1, k4 = o3[A8 + 144 >> 2], o3[A8 + 144 >> 2] = s4 - k4, F4 = f4 << 1, S4 = o3[A8 + 140 >> 2], o3[A8 + 140 >> 2] = F4 - S4, G4 = a4 << 1, _4 = o3[A8 + 136 >> 2], o3[A8 + 136 >> 2] = G4 - _4, M4 = E4 << 1, p4 = o3[A8 + 132 >> 2], o3[A8 + 132 >> 2] = M4 - p4, w4 = i4 << 1, N4 = o3[A8 + 128 >> 2], o3[A8 + 128 >> 2] = w4 - N4, J4 = Q4 << 1, U4 = o3[A8 + 124 >> 2], o3[A8 + 124 >> 2] = J4 - U4, Y4 = K4 << 1, d4 = o3[A8 + 120 >> 2], o3[A8 + 120 >> 2] = Y4 - d4, o3[A8 + 112 >> 2] = t4 + y4, o3[A8 + 108 >> 2] = h4 + n4, o3[A8 + 104 >> 2] = s4 + k4, o3[A8 + 100 >> 2] = F4 + S4, o3[A8 + 96 >> 2] = G4 + _4, o3[A8 + 92 >> 2] = M4 + p4, o3[A8 + 88 >> 2] = w4 + N4, o3[A8 + 84 >> 2] = J4 + U4, o3[A8 + 80 >> 2] = Y4 + d4, o3[A8 + 116 >> 2] = I7 + g6;
                    }
                    function L3(A8, I7) {
                      var g6, C4, B4, Q4, i4, E4, f4, c4, e4, r4, D4, t4, y4, w4, n4 = 0, s4 = 0, k4 = 0, F4 = 0, S4 = 0, H4 = 0, G4 = 0, _4 = 0, M4 = 0, p4 = 0, N4 = 0, J4 = 0, U4 = 0;
                      y4 = a3[I7 + 31 | 0], g6 = a3[I7 + 30 | 0], C4 = a3[I7 + 29 | 0], B4 = a3[I7 + 6 | 0], Q4 = a3[I7 + 5 | 0], i4 = a3[I7 + 4 | 0], E4 = a3[I7 + 9 | 0], f4 = a3[I7 + 8 | 0], c4 = a3[I7 + 7 | 0], e4 = a3[I7 + 12 | 0], N4 = a3[I7 + 11 | 0], J4 = a3[I7 + 10 | 0], r4 = a3[I7 + 15 | 0], U4 = a3[I7 + 14 | 0], D4 = a3[I7 + 13 | 0], G4 = a3[I7 + 28 | 0], p4 = a3[I7 + 27 | 0], _4 = a3[I7 + 26 | 0], H4 = a3[I7 + 25 | 0], F4 = a3[I7 + 24 | 0], k4 = a3[I7 + 23 | 0], w4 = a3[0 | I7] | a3[I7 + 1 | 0] << 8 | a3[I7 + 2 | 0] << 16 | a3[I7 + 3 | 0] << 24, S4 = (s4 = a3[I7 + 21 | 0]) << 15, s4 = n4 = s4 >>> 17 | 0, M4 = S4, M4 |= (S4 = a3[I7 + 20 | 0]) << 7, S4 = (n4 = S4 >>> 25 | 0) | s4, s4 = (n4 = a3[I7 + 22 | 0]) >>> 9 | 0, n4 = n4 << 23 | M4, s4 |= S4, t4 = a3[I7 + 16 | 0] | a3[I7 + 17 | 0] << 8 | a3[I7 + 18 | 0] << 16 | a3[I7 + 19 | 0] << 24, I7 = 0, S4 = n4, n4 = (33554431 & (I7 = (M4 = t4 + 16777216 | 0) >>> 0 < 16777216 ? 1 : I7)) << 7 | M4 >>> 25, I7 = (I7 >>> 25 | 0) + s4 | 0, n4 = (s4 = S4 = S4 + n4 | 0) >>> 0 < n4 >>> 0 ? I7 + 1 | 0 : I7, I7 = (S4 = s4 + 33554432 | 0) >>> 0 < 33554432 ? n4 + 1 | 0 : n4, o3[A8 + 24 >> 2] = s4 - (-67108864 & S4), n4 = (s4 = k4 >>> 27 | 0) | F4 >>> 19 | H4 >>> 11, s4 = k4 = (F4 = H4 << 21 | (k4 = F4 << 13 | k4 << 5)) + (s4 = (67108863 & (s4 = I7)) << 6 | S4 >>> 26) | 0, I7 = n4, n4 = (k4 = F4 + 16777216 | 0) >>> 0 < 16777216 ? I7 + 1 | 0 : I7, o3[A8 + 28 >> 2] = s4 - (1040187392 & k4), s4 = (n4 = (I7 = n4) >>> 25 | 0) + (s4 = p4 >>> 20 | _4 >>> 28 | G4 >>> 12) | 0, I7 = s4 = (n4 = k4 = (I7 = (33554431 & I7) << 7 | k4 >>> 25) + (p4 << 12 | _4 << 4 | G4 << 20) | 0) >>> 0 < I7 >>> 0 ? s4 + 1 | 0 : s4, k4 = (G4 = n4 + 33554432 | 0) >>> 0 < 33554432 ? I7 + 1 | 0 : I7, o3[A8 + 32 >> 2] = n4 - (-67108864 & G4), s4 = e4 >>> 13 | (n4 = N4 >>> 21 | J4 >>> 29), I7 = (s4 = (p4 = 16777216 + (N4 = N4 << 11 | J4 << 3 | e4 << 19) | 0) >>> 0 < 16777216 ? s4 + 1 | 0 : s4) >>> 25 | 0, s4 = (n4 = F4 = U4 << 10 | D4 << 2 | r4 << 18) + (F4 = (33554431 & s4) << 7 | p4 >>> 25) | 0, n4 = I7 + (H4 = U4 >>> 22 | D4 >>> 30 | r4 >>> 14) | 0, I7 = n4 = s4 >>> 0 < F4 >>> 0 ? n4 + 1 | 0 : n4, F4 = ((67108863 & (I7 = (F4 = s4 + 33554432 | 0) >>> 0 < 33554432 ? I7 + 1 | 0 : I7)) << 6 | (n4 = F4) >>> 26) + (_4 = t4 - (-33554432 & M4) | 0) | 0, o3[A8 + 20 >> 2] = F4, o3[A8 + 16 >> 2] = s4 - (-67108864 & n4), n4 = Q4 >>> 18 | i4 >>> 26 | B4 >>> 10, s4 = (n4 = (_4 = 16777216 + (J4 = Q4 << 14 | i4 << 6 | B4 << 22) | 0) >>> 0 < 16777216 ? n4 + 1 | 0 : n4) >>> 25 | 0, n4 = (I7 = F4 = f4 << 13 | c4 << 5 | E4 << 21) + (F4 = (33554431 & n4) << 7 | _4 >>> 25) | 0, I7 = s4 + (H4 = f4 >>> 19 | c4 >>> 27 | E4 >>> 11) | 0, I7 = n4 >>> 0 < F4 >>> 0 ? I7 + 1 | 0 : I7, s4 = (H4 = n4 + 33554432 | 0) >>> 0 < 33554432 ? I7 + 1 | 0 : I7, o3[A8 + 8 >> 2] = n4 - (-67108864 & H4), G4 = (k4 = (67108863 & k4) << 6 | G4 >>> 26) + (U4 = y4 << 18 & 33292288 | g6 << 10 | C4 << 2) | 0, I7 = n4 = g6 >>> 22 | C4 >>> 30, n4 = (k4 = U4 + 16777216 | 0) >>> 0 < 16777216 ? I7 + 1 | 0 : I7, o3[A8 + 36 >> 2] = G4 - (33554432 & k4), s4 = N4 + ((67108863 & s4) << 6 | H4 >>> 26) | 0, o3[A8 + 12 >> 2] = s4 - (234881024 & p4), F4 = J4 - (2113929216 & _4) | 0, s4 = kA((33554431 & (I7 = n4)) << 7 | k4 >>> 25, n4 = I7 >>> 25 | 0, 19, 0), I7 = h3, s4 = (n4 = s4 + w4 | 0) >>> 0 < s4 >>> 0 ? I7 + 1 | 0 : I7, k4 = ((67108863 & (s4 = (I7 = n4 + 33554432 | 0) >>> 0 < 33554432 ? s4 + 1 | 0 : s4)) << 6 | I7 >>> 26) + F4 | 0, o3[A8 + 4 >> 2] = k4, o3[A8 >> 2] = n4 - (-67108864 & I7);
                    }
                    function R3(A8, I7, g6, C4) {
                      var B4, Q4 = 0, i4 = 0, f4 = 0, c4 = 0, e4 = 0, r4 = 0, D4 = 0, t4 = 0, y4 = 0, h4 = 0, n4 = 0, s4 = 0;
                      if (w3 = B4 = w3 - 704 | 0, g6 | C4)
                        if (Q4 = (C4 << 3 | g6 >>> 29) + (i4 = f4 = o3[A8 + 76 >> 2]) | 0, e4 = (r4 = o3[A8 + 72 >> 2]) + (c4 = g6 << 3) | 0, o3[A8 + 72 >> 2] = e4, Q4 = c4 >>> 0 > e4 >>> 0 ? Q4 + 1 | 0 : Q4, o3[A8 + 76 >> 2] = Q4, f4 = o3[4 + (c4 = A8 - -64 | 0) >> 2], f4 = (D4 = Q4 = (0 | Q4) == (0 | i4) & e4 >>> 0 < r4 >>> 0 | Q4 >>> 0 < i4 >>> 0) >>> 0 > (Q4 = Q4 + o3[c4 >> 2] | 0) >>> 0 ? f4 + 1 | 0 : f4, e4 = (D4 = C4 >>> 29 | 0) + Q4 | 0, Q4 = f4, o3[c4 >> 2] = e4, o3[c4 + 4 >> 2] = e4 >>> 0 < D4 >>> 0 ? Q4 + 1 | 0 : Q4, (0 | C4) == (0 | (f4 = D4 = 0 - ((Q4 = 0) + ((c4 = 127 & ((7 & i4) << 29 | r4 >>> 3)) >>> 0 > 128) | 0) | 0)) & g6 >>> 0 >= (e4 = 128 - c4 | 0) >>> 0 | C4 >>> 0 > f4 >>> 0) {
                          if (i4 = 0, f4 = 0, !Q4 & (127 ^ c4) >>> 0 >= 3 | Q4)
                            for (s4 = 252 & e4, r4 = A8 + 80 | 0; E3[(Q4 = i4 + c4 | 0) + r4 | 0] = a3[I7 + i4 | 0], E3[r4 + (c4 + (Q4 = 1 | i4) | 0) | 0] = a3[I7 + Q4 | 0], E3[r4 + (c4 + (Q4 = 2 | i4) | 0) | 0] = a3[I7 + Q4 | 0], E3[r4 + (c4 + (Q4 = 3 | i4) | 0) | 0] = a3[I7 + Q4 | 0], Q4 = f4, f4 = (i4 = i4 + 4 | 0) >>> 0 < 4 ? Q4 + 1 | 0 : Q4, Q4 = y4, y4 = Q4 = (h4 = h4 + 4 | 0) >>> 0 < 4 ? Q4 + 1 | 0 : Q4, (0 | h4) != (0 | s4) | (0 | n4) != (0 | Q4); )
                              ;
                          if (r4 = Q4 = 0, Q4 | (y4 = 3 & e4))
                            for (; E3[80 + (A8 + (Q4 = i4 + c4 | 0) | 0) | 0] = a3[I7 + i4 | 0], Q4 = f4, f4 = (i4 = i4 + 1 | 0) ? Q4 : Q4 + 1 | 0, Q4 = n4, n4 = Q4 = (t4 = t4 + 1 | 0) ? Q4 : Q4 + 1 | 0, (0 | y4) != (0 | t4) | (0 | r4) != (0 | Q4); )
                              ;
                          if (k3(A8, A8 + 80 | 0, B4, i4 = B4 + 640 | 0), I7 = I7 + e4 | 0, !(C4 = C4 - ((g6 >>> 0 < e4 >>> 0) + D4 | 0) | 0) & (g6 = g6 - e4 | 0) >>> 0 > 127 | C4)
                            for (; k3(A8, I7, B4, i4), I7 = I7 + 128 | 0, !(C4 = C4 - (g6 >>> 0 < 128) | 0) & (g6 = g6 - 128 | 0) >>> 0 > 127 | C4; )
                              ;
                          if (g6 | C4) {
                            if (h4 = 3 & g6, e4 = 0, t4 = 0, n4 = 0, i4 = 0, f4 = 0, !C4 & g6 >>> 0 >= 4 | C4)
                              for (c4 = -4 & g6, r4 = C4, y4 = A8 + 80 | 0, g6 = 0, C4 = 0; E3[i4 + y4 | 0] = a3[I7 + i4 | 0], E3[(Q4 = 1 | i4) + y4 | 0] = a3[I7 + Q4 | 0], E3[(Q4 = 2 | i4) + y4 | 0] = a3[I7 + Q4 | 0], E3[(Q4 = 3 | i4) + y4 | 0] = a3[I7 + Q4 | 0], Q4 = f4, f4 = (i4 = i4 + 4 | 0) >>> 0 < 4 ? Q4 + 1 | 0 : Q4, Q4 = C4, C4 = Q4 = (g6 = g6 + 4 | 0) >>> 0 < 4 ? Q4 + 1 | 0 : Q4, (0 | g6) != (0 | c4) | (0 | r4) != (0 | Q4); )
                                ;
                            if (e4 | h4)
                              for (; E3[80 + (A8 + i4 | 0) | 0] = a3[I7 + i4 | 0], f4 = (i4 = i4 + 1 | 0) ? f4 : f4 + 1 | 0, Q4 = n4, n4 = Q4 = (t4 = t4 + 1 | 0) ? Q4 : Q4 + 1 | 0, (0 | t4) != (0 | h4) | (0 | e4) != (0 | Q4); )
                                ;
                          }
                          iI(B4, 704);
                        } else {
                          if (i4 = 0, f4 = 0, !C4 & g6 >>> 0 >= 4 | C4)
                            for (e4 = -4 & g6, r4 = C4, C4 = A8 + 80 | 0; E3[C4 + (Q4 = i4 + c4 | 0) | 0] = a3[I7 + i4 | 0], E3[C4 + (D4 = c4 + (Q4 = 1 | i4) | 0) | 0] = a3[I7 + Q4 | 0], E3[C4 + (D4 = c4 + (Q4 = 2 | i4) | 0) | 0] = a3[I7 + Q4 | 0], E3[C4 + (D4 = c4 + (Q4 = 3 | i4) | 0) | 0] = a3[I7 + Q4 | 0], Q4 = f4, f4 = (i4 = i4 + 4 | 0) >>> 0 < 4 ? Q4 + 1 | 0 : Q4, Q4 = y4, y4 = Q4 = (h4 = h4 + 4 | 0) >>> 0 < 4 ? Q4 + 1 | 0 : Q4, (0 | e4) != (0 | h4) | (0 | r4) != (0 | Q4); )
                              ;
                          if ((g6 &= 3) | (C4 = 0))
                            for (; E3[80 + (A8 + (Q4 = i4 + c4 | 0) | 0) | 0] = a3[I7 + i4 | 0], f4 = (i4 = i4 + 1 | 0) ? f4 : f4 + 1 | 0, Q4 = n4, n4 = Q4 = (t4 = t4 + 1 | 0) ? Q4 : Q4 + 1 | 0, (0 | g6) != (0 | t4) | (0 | C4) != (0 | Q4); )
                              ;
                        }
                      return w3 = B4 + 704 | 0, 0;
                    }
                    function u3(A8, I7) {
                      var g6, C4, B4, Q4, i4 = 0, f4 = 0, c4 = 0, e4 = 0, r4 = 0, D4 = 0;
                      for (w3 = g6 = w3 - 480 | 0; c4 = (f4 = g6 + 288 | 0) + (i4 << 1) | 0, e4 = a3[I7 + i4 | 0], E3[c4 + 1 | 0] = e4 >>> 4, E3[0 | c4] = 15 & e4, f4 = f4 + ((c4 = 1 | i4) << 1) | 0, c4 = a3[I7 + c4 | 0], E3[f4 + 1 | 0] = c4 >>> 4, E3[0 | f4] = 15 & c4, 32 != (0 | (i4 = i4 + 2 | 0)); )
                        ;
                      for (I7 = 0; i4 = 8 + (f4 = (i4 = I7) + a3[0 | (I7 = (g6 + 288 | 0) + r4 | 0)] | 0) | 0, E3[0 | I7] = f4 - (240 & i4), i4 = 8 + (f4 = a3[I7 + 1 | 0] + (i4 << 24 >> 24 >> 4) | 0) | 0, E3[I7 + 1 | 0] = f4 - (240 & i4), i4 = 8 + (f4 = a3[I7 + 2 | 0] + (i4 << 24 >> 24 >> 4) | 0) | 0, E3[I7 + 2 | 0] = f4 - (240 & i4), I7 = i4 << 24 >> 24 >> 4, 63 != (0 | (r4 = r4 + 3 | 0)); )
                        ;
                      for (E3[g6 + 351 | 0] = a3[g6 + 351 | 0] + I7, o3[A8 + 32 >> 2] = 0, o3[A8 + 36 >> 2] = 0, o3[A8 + 24 >> 2] = 0, o3[A8 + 28 >> 2] = 0, o3[A8 + 16 >> 2] = 0, o3[A8 + 20 >> 2] = 0, o3[A8 + 8 >> 2] = 0, o3[A8 + 12 >> 2] = 0, o3[A8 >> 2] = 0, o3[A8 + 4 >> 2] = 0, o3[A8 + 44 >> 2] = 0, o3[A8 + 48 >> 2] = 0, o3[(I7 = A8 + 40 | 0) >> 2] = 1, o3[A8 + 52 >> 2] = 0, o3[A8 + 56 >> 2] = 0, o3[A8 + 60 >> 2] = 0, o3[A8 + 64 >> 2] = 0, o3[A8 + 68 >> 2] = 0, o3[A8 + 72 >> 2] = 0, o3[A8 + 76 >> 2] = 0, o3[A8 + 80 >> 2] = 1, dA(A8 + 84 | 0, 0, 76), B4 = A8 + 120 | 0, r4 = A8 + 80 | 0, f4 = g6 + 208 | 0, C4 = g6 + 168 | 0, c4 = g6 + 248 | 0, i4 = 1; V(D4 = g6 + 8 | 0, i4 >>> 1 | 0, E3[(g6 + 288 | 0) + i4 | 0]), v3(e4 = g6 + 128 | 0, A8, D4), H3(A8, e4, c4), H3(I7, C4, f4), H3(r4, f4, c4), H3(B4, e4, C4), D4 = i4 >>> 0 < 62, i4 = i4 + 2 | 0, D4; )
                        ;
                      for (i4 = o3[A8 + 36 >> 2], o3[g6 + 392 >> 2] = o3[A8 + 32 >> 2], o3[g6 + 396 >> 2] = i4, i4 = o3[A8 + 28 >> 2], o3[g6 + 384 >> 2] = o3[A8 + 24 >> 2], o3[g6 + 388 >> 2] = i4, i4 = o3[A8 + 20 >> 2], o3[g6 + 376 >> 2] = o3[A8 + 16 >> 2], o3[g6 + 380 >> 2] = i4, i4 = o3[A8 + 12 >> 2], o3[g6 + 368 >> 2] = o3[A8 + 8 >> 2], o3[g6 + 372 >> 2] = i4, i4 = o3[A8 + 4 >> 2], o3[g6 + 360 >> 2] = o3[A8 >> 2], o3[g6 + 364 >> 2] = i4, i4 = o3[I7 + 12 >> 2], o3[g6 + 408 >> 2] = o3[I7 + 8 >> 2], o3[g6 + 412 >> 2] = i4, i4 = o3[I7 + 20 >> 2], o3[g6 + 416 >> 2] = o3[I7 + 16 >> 2], o3[g6 + 420 >> 2] = i4, i4 = o3[I7 + 28 >> 2], o3[g6 + 424 >> 2] = o3[I7 + 24 >> 2], o3[g6 + 428 >> 2] = i4, i4 = o3[I7 + 36 >> 2], o3[g6 + 432 >> 2] = o3[I7 + 32 >> 2], o3[g6 + 436 >> 2] = i4, i4 = o3[I7 + 4 >> 2], o3[g6 + 400 >> 2] = o3[I7 >> 2], o3[g6 + 404 >> 2] = i4, i4 = o3[r4 + 12 >> 2], o3[g6 + 448 >> 2] = o3[r4 + 8 >> 2], o3[g6 + 452 >> 2] = i4, i4 = o3[r4 + 20 >> 2], o3[g6 + 456 >> 2] = o3[r4 + 16 >> 2], o3[g6 + 460 >> 2] = i4, i4 = o3[r4 + 28 >> 2], o3[g6 + 464 >> 2] = o3[r4 + 24 >> 2], o3[g6 + 468 >> 2] = i4, i4 = o3[r4 + 36 >> 2], o3[g6 + 472 >> 2] = o3[r4 + 32 >> 2], o3[g6 + 476 >> 2] = i4, i4 = o3[r4 + 4 >> 2], o3[g6 + 440 >> 2] = o3[r4 >> 2], o3[g6 + 444 >> 2] = i4, G3(e4, i4 = g6 + 360 | 0), H3(i4, e4, c4), H3(D4 = g6 + 400 | 0, C4, f4), H3(Q4 = g6 + 440 | 0, f4, c4), G3(e4, i4), H3(i4, e4, c4), H3(D4, C4, f4), H3(Q4, f4, c4), G3(e4, i4), H3(i4, e4, c4), H3(D4, C4, f4), H3(Q4, f4, c4), G3(e4, i4), H3(A8, e4, c4), H3(I7, C4, f4), H3(r4, f4, c4), H3(B4, e4, C4), i4 = 0; V(D4 = g6 + 8 | 0, i4 >>> 1 | 0, E3[(g6 + 288 | 0) + i4 | 0]), v3(e4 = g6 + 128 | 0, A8, D4), H3(A8, e4, c4), H3(I7, C4, f4), H3(r4, f4, c4), H3(B4, e4, C4), e4 = i4 >>> 0 < 62, i4 = i4 + 2 | 0, e4; )
                        ;
                      w3 = g6 + 480 | 0;
                    }
                    function x3(A8, I7, g6) {
                      var C4 = 0, B4 = 0, Q4 = 0, i4 = 0, o4 = 0, f4 = 0, c4 = 0, e4 = 0, r4 = 0, D4 = 0, t4 = 0, y4 = 0, w4 = 0, h4 = 0, n4 = 0, s4 = 0, k4 = 0, F4 = 0, S4 = 0, H4 = 0;
                      for (B4 = 2036477234, i4 = 857760878, C4 = 1634760805, f4 = 1797285236, Q4 = a3[I7 + 12 | 0] | a3[I7 + 13 | 0] << 8 | a3[I7 + 14 | 0] << 16 | a3[I7 + 15 | 0] << 24, r4 = a3[I7 + 8 | 0] | a3[I7 + 9 | 0] << 8 | a3[I7 + 10 | 0] << 16 | a3[I7 + 11 | 0] << 24, o4 = a3[I7 + 4 | 0] | a3[I7 + 5 | 0] << 8 | a3[I7 + 6 | 0] << 16 | a3[I7 + 7 | 0] << 24, D4 = a3[g6 + 28 | 0] | a3[g6 + 29 | 0] << 8 | a3[g6 + 30 | 0] << 16 | a3[g6 + 31 | 0] << 24, c4 = a3[g6 + 24 | 0] | a3[g6 + 25 | 0] << 8 | a3[g6 + 26 | 0] << 16 | a3[g6 + 27 | 0] << 24, k4 = a3[g6 + 20 | 0] | a3[g6 + 21 | 0] << 8 | a3[g6 + 22 | 0] << 16 | a3[g6 + 23 | 0] << 24, t4 = a3[g6 + 16 | 0] | a3[g6 + 17 | 0] << 8 | a3[g6 + 18 | 0] << 16 | a3[g6 + 19 | 0] << 24, y4 = a3[g6 + 12 | 0] | a3[g6 + 13 | 0] << 8 | a3[g6 + 14 | 0] << 16 | a3[g6 + 15 | 0] << 24, w4 = a3[g6 + 8 | 0] | a3[g6 + 9 | 0] << 8 | a3[g6 + 10 | 0] << 16 | a3[g6 + 11 | 0] << 24, h4 = a3[g6 + 4 | 0] | a3[g6 + 5 | 0] << 8 | a3[g6 + 6 | 0] << 16 | a3[g6 + 7 | 0] << 24, I7 = a3[0 | I7] | a3[I7 + 1 | 0] << 8 | a3[I7 + 2 | 0] << 16 | a3[I7 + 3 | 0] << 24, g6 = a3[0 | g6] | a3[g6 + 1 | 0] << 8 | a3[g6 + 2 | 0] << 16 | a3[g6 + 3 | 0] << 24; e4 = g6, g6 = RA((n4 = I7) ^ (I7 = g6 + C4 | 0), 16), e4 = t4 = RA(e4 ^ (C4 = g6 + t4 | 0), 12), F4 = RA((n4 = I7 + t4 | 0) ^ g6, 8), I7 = RA(e4 ^ (t4 = F4 + C4 | 0), 7), C4 = y4, y4 = RA((g6 = f4 + y4 | 0) ^ Q4, 16), C4 = RA(C4 ^ (D4 = y4 + D4 | 0), 12), Q4 = w4, f4 = RA((B4 = B4 + w4 | 0) ^ r4, 16), Q4 = RA(Q4 ^ (w4 = f4 + c4 | 0), 12), c4 = RA((B4 = Q4 + B4 | 0) ^ f4, 8), g6 = RA(c4 ^ (f4 = I7 + (s4 = g6 + C4 | 0) | 0), 16), r4 = RA((i4 = i4 + h4 | 0) ^ o4, 16), h4 = RA((o4 = r4 + k4 | 0) ^ h4, 12), e4 = I7, I7 = RA((i4 = i4 + h4 | 0) ^ r4, 8), e4 = RA(e4 ^ (o4 = g6 + (S4 = I7 + o4 | 0) | 0), 12), r4 = RA(g6 ^ (f4 = e4 + f4 | 0), 8), g6 = RA((k4 = r4 + o4 | 0) ^ e4, 7), e4 = B4, B4 = C4, s4 = RA(y4 ^ s4, 8), B4 = RA(B4 ^ (C4 = s4 + D4 | 0), 7), y4 = RA((o4 = e4 + B4 | 0) ^ I7, 16), D4 = RA((I7 = y4 + t4 | 0) ^ B4, 12), o4 = RA(y4 ^ (B4 = D4 + o4 | 0), 8), y4 = RA((t4 = I7 + o4 | 0) ^ D4, 7), I7 = RA((I7 = Q4) ^ (Q4 = c4 + w4 | 0), 7), w4 = RA((i4 = I7 + i4 | 0) ^ F4, 16), c4 = RA(I7 ^ (C4 = w4 + C4 | 0), 12), I7 = RA(w4 ^ (i4 = c4 + i4 | 0), 8), w4 = RA((D4 = C4 + I7 | 0) ^ c4, 7), e4 = Q4, C4 = RA(h4 ^ S4, 7), c4 = RA((Q4 = C4 + n4 | 0) ^ s4, 16), n4 = RA(C4 ^ (h4 = e4 + c4 | 0), 12), Q4 = RA(c4 ^ (C4 = n4 + Q4 | 0), 8), h4 = RA((c4 = h4 + Q4 | 0) ^ n4, 7), 10 != (0 | (H4 = H4 + 1 | 0)); )
                        ;
                      E3[0 | A8] = C4, E3[A8 + 1 | 0] = C4 >>> 8, E3[A8 + 2 | 0] = C4 >>> 16, E3[A8 + 3 | 0] = C4 >>> 24, E3[A8 + 28 | 0] = Q4, E3[A8 + 29 | 0] = Q4 >>> 8, E3[A8 + 30 | 0] = Q4 >>> 16, E3[A8 + 31 | 0] = Q4 >>> 24, E3[A8 + 24 | 0] = r4, E3[A8 + 25 | 0] = r4 >>> 8, E3[A8 + 26 | 0] = r4 >>> 16, E3[A8 + 27 | 0] = r4 >>> 24, E3[A8 + 20 | 0] = o4, E3[A8 + 21 | 0] = o4 >>> 8, E3[A8 + 22 | 0] = o4 >>> 16, E3[A8 + 23 | 0] = o4 >>> 24, E3[A8 + 16 | 0] = I7, E3[A8 + 17 | 0] = I7 >>> 8, E3[A8 + 18 | 0] = I7 >>> 16, E3[A8 + 19 | 0] = I7 >>> 24, E3[A8 + 12 | 0] = f4, E3[A8 + 13 | 0] = f4 >>> 8, E3[A8 + 14 | 0] = f4 >>> 16, E3[A8 + 15 | 0] = f4 >>> 24, E3[A8 + 8 | 0] = B4, E3[A8 + 9 | 0] = B4 >>> 8, E3[A8 + 10 | 0] = B4 >>> 16, E3[A8 + 11 | 0] = B4 >>> 24, E3[A8 + 4 | 0] = i4, E3[A8 + 5 | 0] = i4 >>> 8, E3[A8 + 6 | 0] = i4 >>> 16, E3[A8 + 7 | 0] = i4 >>> 24;
                    }
                    function m3(A8, I7, g6) {
                      var C4 = 0, B4 = 0, Q4 = 0, i4 = 0, o4 = 0, f4 = 0, c4 = 0, e4 = 0, r4 = 0, D4 = 0, t4 = 0, y4 = 0, w4 = 0, h4 = 0, n4 = 0, s4 = 0, k4 = 0, F4 = 0, S4 = 0, H4 = 0;
                      for (C4 = 1797285236, c4 = 2036477234, e4 = 857760878, B4 = 1634760805, Q4 = a3[I7 + 12 | 0] | a3[I7 + 13 | 0] << 8 | a3[I7 + 14 | 0] << 16 | a3[I7 + 15 | 0] << 24, o4 = a3[I7 + 8 | 0] | a3[I7 + 9 | 0] << 8 | a3[I7 + 10 | 0] << 16 | a3[I7 + 11 | 0] << 24, i4 = a3[I7 + 4 | 0] | a3[I7 + 5 | 0] << 8 | a3[I7 + 6 | 0] << 16 | a3[I7 + 7 | 0] << 24, n4 = a3[g6 + 28 | 0] | a3[g6 + 29 | 0] << 8 | a3[g6 + 30 | 0] << 16 | a3[g6 + 31 | 0] << 24, h4 = a3[g6 + 24 | 0] | a3[g6 + 25 | 0] << 8 | a3[g6 + 26 | 0] << 16 | a3[g6 + 27 | 0] << 24, s4 = 20, y4 = a3[g6 + 20 | 0] | a3[g6 + 21 | 0] << 8 | a3[g6 + 22 | 0] << 16 | a3[g6 + 23 | 0] << 24, w4 = a3[g6 + 16 | 0] | a3[g6 + 17 | 0] << 8 | a3[g6 + 18 | 0] << 16 | a3[g6 + 19 | 0] << 24, r4 = a3[g6 + 12 | 0] | a3[g6 + 13 | 0] << 8 | a3[g6 + 14 | 0] << 16 | a3[g6 + 15 | 0] << 24, D4 = a3[g6 + 8 | 0] | a3[g6 + 9 | 0] << 8 | a3[g6 + 10 | 0] << 16 | a3[g6 + 11 | 0] << 24, t4 = a3[g6 + 4 | 0] | a3[g6 + 5 | 0] << 8 | a3[g6 + 6 | 0] << 16 | a3[g6 + 7 | 0] << 24, I7 = a3[0 | I7] | a3[I7 + 1 | 0] << 8 | a3[I7 + 2 | 0] << 16 | a3[I7 + 3 | 0] << 24, g6 = a3[0 | g6] | a3[g6 + 1 | 0] << 8 | a3[g6 + 2 | 0] << 16 | a3[g6 + 3 | 0] << 24; f4 = RA(g6 + e4 | 0, 7) ^ Q4, k4 = RA(f4 + e4 | 0, 9) ^ h4, r4 = RA(B4 + y4 | 0, 7) ^ r4, F4 = RA(r4 + B4 | 0, 9) ^ o4, S4 = RA(F4 + r4 | 0, 13) ^ y4, D4 = RA(C4 + w4 | 0, 7) ^ D4, i4 = RA(D4 + C4 | 0, 9) ^ i4, o4 = RA(i4 + D4 | 0, 13) ^ w4, C4 = RA(i4 + o4 | 0, 18) ^ C4, Q4 = RA(I7 + c4 | 0, 7) ^ n4, y4 = S4 ^ RA(C4 + Q4 | 0, 7), h4 = k4 ^ RA(y4 + C4 | 0, 9), n4 = RA(y4 + h4 | 0, 13) ^ Q4, C4 = RA(h4 + n4 | 0, 18) ^ C4, t4 = RA(Q4 + c4 | 0, 9) ^ t4, H4 = RA(t4 + Q4 | 0, 13) ^ I7, I7 = RA(H4 + t4 | 0, 18) ^ c4, w4 = RA(I7 + f4 | 0, 7) ^ o4, o4 = RA(w4 + I7 | 0, 9) ^ F4, Q4 = RA(o4 + w4 | 0, 13) ^ f4, c4 = RA(Q4 + o4 | 0, 18) ^ I7, f4 = RA(f4 + k4 | 0, 13) ^ g6, g6 = RA(f4 + k4 | 0, 18) ^ e4, I7 = RA(g6 + r4 | 0, 7) ^ H4, i4 = RA(I7 + g6 | 0, 9) ^ i4, r4 = RA(I7 + i4 | 0, 13) ^ r4, e4 = RA(i4 + r4 | 0, 18) ^ g6, B4 = RA(F4 + S4 | 0, 18) ^ B4, g6 = RA(B4 + D4 | 0, 7) ^ f4, t4 = RA(g6 + B4 | 0, 9) ^ t4, D4 = RA(g6 + t4 | 0, 13) ^ D4, B4 = RA(t4 + D4 | 0, 18) ^ B4, f4 = s4 >>> 0 > 2, s4 = s4 - 2 | 0, f4; )
                        ;
                      return E3[0 | A8] = B4, E3[A8 + 1 | 0] = B4 >>> 8, E3[A8 + 2 | 0] = B4 >>> 16, E3[A8 + 3 | 0] = B4 >>> 24, E3[A8 + 28 | 0] = Q4, E3[A8 + 29 | 0] = Q4 >>> 8, E3[A8 + 30 | 0] = Q4 >>> 16, E3[A8 + 31 | 0] = Q4 >>> 24, E3[A8 + 24 | 0] = o4, E3[A8 + 25 | 0] = o4 >>> 8, E3[A8 + 26 | 0] = o4 >>> 16, E3[A8 + 27 | 0] = o4 >>> 24, E3[A8 + 20 | 0] = i4, E3[A8 + 21 | 0] = i4 >>> 8, E3[A8 + 22 | 0] = i4 >>> 16, E3[A8 + 23 | 0] = i4 >>> 24, E3[A8 + 16 | 0] = I7, E3[A8 + 17 | 0] = I7 >>> 8, E3[A8 + 18 | 0] = I7 >>> 16, E3[A8 + 19 | 0] = I7 >>> 24, E3[A8 + 12 | 0] = C4, E3[A8 + 13 | 0] = C4 >>> 8, E3[A8 + 14 | 0] = C4 >>> 16, E3[A8 + 15 | 0] = C4 >>> 24, E3[A8 + 8 | 0] = c4, E3[A8 + 9 | 0] = c4 >>> 8, E3[A8 + 10 | 0] = c4 >>> 16, E3[A8 + 11 | 0] = c4 >>> 24, E3[A8 + 4 | 0] = e4, E3[A8 + 5 | 0] = e4 >>> 8, E3[A8 + 6 | 0] = e4 >>> 16, E3[A8 + 7 | 0] = e4 >>> 24, 0;
                    }
                    function l3(A8, I7) {
                      var g6, C4, B4 = 0, Q4 = 0, i4 = 0, a4 = 0;
                      w3 = g6 = w3 - 288 | 0, Q4 = 40 + ((B4 = o3[A8 + 32 >> 2] >>> 3 & 63) + A8 | 0) | 0, B4 >>> 0 >= 56 ? (YA(Q4, 34224, 64 - B4 | 0), _3(A8, A8 + 40 | 0, g6, g6 + 256 | 0), o3[A8 + 88 >> 2] = 0, o3[A8 + 92 >> 2] = 0, o3[A8 + 80 >> 2] = 0, o3[A8 + 84 >> 2] = 0, o3[A8 + 72 >> 2] = 0, o3[A8 + 76 >> 2] = 0, o3[(B4 = A8 - -64 | 0) >> 2] = 0, o3[B4 + 4 >> 2] = 0, o3[A8 + 56 >> 2] = 0, o3[A8 + 60 >> 2] = 0, o3[A8 + 48 >> 2] = 0, o3[A8 + 52 >> 2] = 0, o3[A8 + 40 >> 2] = 0, o3[A8 + 44 >> 2] = 0) : YA(Q4, 34224, 56 - B4 | 0), i4 = (B4 = 16711680 & (Q4 = o3[A8 + 32 >> 2])) >>> 8 | 0, a4 = B4 << 24, C4 = (B4 = -16777216 & Q4) >>> 24 | 0, B4 = (a4 |= B4 << 8) | -16777216 & ((255 & (B4 = o3[A8 + 36 >> 2])) << 24 | Q4 >>> 8) | 16711680 & ((16777215 & B4) << 8 | Q4 >>> 24) | B4 >>> 8 & 65280 | B4 >>> 24, E3[A8 + 96 | 0] = B4, E3[A8 + 97 | 0] = B4 >>> 8, E3[A8 + 98 | 0] = B4 >>> 16, E3[A8 + 99 | 0] = B4 >>> 24, B4 = (B4 = i4 | C4 | Q4 << 24 | (65280 & Q4) << 8) | (i4 = 0) | i4, E3[A8 + 100 | 0] = B4, E3[A8 + 101 | 0] = B4 >>> 8, E3[A8 + 102 | 0] = B4 >>> 16, E3[A8 + 103 | 0] = B4 >>> 24, _3(A8, A8 + 40 | 0, g6, g6 + 256 | 0), B4 = (B4 = o3[A8 >> 2]) << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, E3[0 | I7] = B4, E3[I7 + 1 | 0] = B4 >>> 8, E3[I7 + 2 | 0] = B4 >>> 16, E3[I7 + 3 | 0] = B4 >>> 24, B4 = (B4 = o3[A8 + 4 >> 2]) << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, E3[I7 + 4 | 0] = B4, E3[I7 + 5 | 0] = B4 >>> 8, E3[I7 + 6 | 0] = B4 >>> 16, E3[I7 + 7 | 0] = B4 >>> 24, B4 = (B4 = o3[A8 + 8 >> 2]) << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, E3[I7 + 8 | 0] = B4, E3[I7 + 9 | 0] = B4 >>> 8, E3[I7 + 10 | 0] = B4 >>> 16, E3[I7 + 11 | 0] = B4 >>> 24, B4 = (B4 = o3[A8 + 12 >> 2]) << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, E3[I7 + 12 | 0] = B4, E3[I7 + 13 | 0] = B4 >>> 8, E3[I7 + 14 | 0] = B4 >>> 16, E3[I7 + 15 | 0] = B4 >>> 24, B4 = (B4 = o3[A8 + 16 >> 2]) << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, E3[I7 + 16 | 0] = B4, E3[I7 + 17 | 0] = B4 >>> 8, E3[I7 + 18 | 0] = B4 >>> 16, E3[I7 + 19 | 0] = B4 >>> 24, B4 = (B4 = o3[A8 + 20 >> 2]) << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, E3[I7 + 20 | 0] = B4, E3[I7 + 21 | 0] = B4 >>> 8, E3[I7 + 22 | 0] = B4 >>> 16, E3[I7 + 23 | 0] = B4 >>> 24, B4 = (B4 = o3[A8 + 24 >> 2]) << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, E3[I7 + 24 | 0] = B4, E3[I7 + 25 | 0] = B4 >>> 8, E3[I7 + 26 | 0] = B4 >>> 16, E3[I7 + 27 | 0] = B4 >>> 24, B4 = (B4 = o3[A8 + 28 >> 2]) << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, E3[I7 + 28 | 0] = B4, E3[I7 + 29 | 0] = B4 >>> 8, E3[I7 + 30 | 0] = B4 >>> 16, E3[I7 + 31 | 0] = B4 >>> 24, iI(g6, 288), iI(A8, 104), w3 = g6 + 288 | 0;
                    }
                    function z3(A8, I7, g6) {
                      var C4, B4 = 0, Q4 = 0, i4 = 0, f4 = 0, c4 = 0, e4 = 0, r4 = 0, D4 = 0, t4 = 0, y4 = 0, h4 = 0, n4 = 0;
                      if (w3 = C4 = w3 - 288 | 0, g6)
                        if (e4 = (B4 = o3[A8 + 36 >> 2]) + (g6 >>> 29 | 0) | 0, t4 = (i4 = o3[A8 + 32 >> 2]) + (f4 = g6 << 3) | 0, o3[A8 + 32 >> 2] = t4, o3[A8 + 36 >> 2] = f4 >>> 0 > t4 >>> 0 ? e4 + 1 | 0 : e4, true & (f4 = 64 - (e4 = 63 & ((7 & B4) << 29 | i4 >>> 3)) | 0) >>> 0 <= g6 >>> 0) {
                          if (B4 = 0, i4 = 0, (63 ^ e4) >>> 0 >= 3)
                            for (n4 = 124 & f4, t4 = A8 + 40 | 0; E3[(B4 + e4 | 0) + t4 | 0] = a3[I7 + B4 | 0], E3[(e4 + (h4 = 1 | B4) | 0) + t4 | 0] = a3[I7 + h4 | 0], E3[(e4 + (h4 = 2 | B4) | 0) + t4 | 0] = a3[I7 + h4 | 0], E3[(e4 + (h4 = 3 | B4) | 0) + t4 | 0] = a3[I7 + h4 | 0], i4 = (B4 = B4 + 4 | 0) >>> 0 < 4 ? i4 + 1 | 0 : i4, (Q4 = (y4 = y4 + 4 | 0) >>> 0 < 4 ? Q4 + 1 | 0 : Q4) | (0 | y4) != (0 | n4); )
                              ;
                          if (Q4 = 3 & f4)
                            for (; E3[40 + ((B4 + e4 | 0) + A8 | 0) | 0] = a3[I7 + B4 | 0], i4 = (B4 = B4 + 1 | 0) ? i4 : i4 + 1 | 0, (r4 = (D4 = D4 + 1 | 0) ? r4 : r4 + 1 | 0) | (0 | Q4) != (0 | D4); )
                              ;
                          if (_3(A8, A8 + 40 | 0, C4, r4 = C4 + 256 | 0), I7 = I7 + f4 | 0, !(Q4 = 0 - ((g6 >>> 0 < f4 >>> 0) + c4 | 0) | 0) & (g6 = g6 - f4 | 0) >>> 0 > 63 | Q4)
                            for (; _3(A8, I7, C4, r4), I7 = I7 - -64 | 0, Q4 = Q4 - 1 | 0, !(Q4 = (g6 = g6 + -64 | 0) >>> 0 < 4294967232 ? Q4 + 1 | 0 : Q4) & g6 >>> 0 > 63 | Q4; )
                              ;
                          if (g6 | Q4) {
                            if (y4 = 3 & g6, D4 = 0, r4 = 0, B4 = 0, i4 = 0, !Q4 & g6 >>> 0 >= 4 | Q4)
                              for (t4 = -4 & g6, e4 = Q4, f4 = A8 + 40 | 0, g6 = 0, Q4 = 0; E3[B4 + f4 | 0] = a3[I7 + B4 | 0], E3[(c4 = 1 | B4) + f4 | 0] = a3[I7 + c4 | 0], E3[(c4 = 2 | B4) + f4 | 0] = a3[I7 + c4 | 0], E3[(c4 = 3 | B4) + f4 | 0] = a3[I7 + c4 | 0], i4 = (B4 = B4 + 4 | 0) >>> 0 < 4 ? i4 + 1 | 0 : i4, (0 | (g6 = g6 + 4 | 0)) != (0 | t4) | (0 | (Q4 = g6 >>> 0 < 4 ? Q4 + 1 | 0 : Q4)) != (0 | e4); )
                                ;
                            if (y4)
                              for (; E3[40 + (A8 + B4 | 0) | 0] = a3[I7 + B4 | 0], i4 = (B4 = B4 + 1 | 0) ? i4 : i4 + 1 | 0, (r4 = (D4 = D4 + 1 | 0) ? r4 : r4 + 1 | 0) | (0 | D4) != (0 | y4); )
                                ;
                          }
                          iI(C4, 288);
                        } else {
                          if (B4 = 0, i4 = 0, g6 >>> 0 >= 4)
                            for (t4 = -4 & g6, f4 = A8 + 40 | 0; E3[(B4 + e4 | 0) + f4 | 0] = a3[I7 + B4 | 0], E3[(e4 + (c4 = 1 | B4) | 0) + f4 | 0] = a3[I7 + c4 | 0], E3[(e4 + (c4 = 2 | B4) | 0) + f4 | 0] = a3[I7 + c4 | 0], E3[(e4 + (c4 = 3 | B4) | 0) + f4 | 0] = a3[I7 + c4 | 0], i4 = (B4 = B4 + 4 | 0) >>> 0 < 4 ? i4 + 1 | 0 : i4, (Q4 = (y4 = y4 + 4 | 0) >>> 0 < 4 ? Q4 + 1 | 0 : Q4) | (0 | t4) != (0 | y4); )
                              ;
                          if (g6 &= 3)
                            for (; E3[40 + ((B4 + e4 | 0) + A8 | 0) | 0] = a3[I7 + B4 | 0], i4 = (B4 = B4 + 1 | 0) ? i4 : i4 + 1 | 0, (r4 = (D4 = D4 + 1 | 0) ? r4 : r4 + 1 | 0) | (0 | g6) != (0 | D4); )
                              ;
                        }
                      w3 = C4 + 288 | 0;
                    }
                    function q3(A8, I7, g6) {
                      var C4, B4 = 0, Q4 = 0, i4 = 0, f4 = 0, c4 = 0, e4 = 0, r4 = 0, D4 = 0;
                      if (w3 = C4 = w3 - 96 | 0, g6 >>> 0 >= 65 && (SA(A8), z3(A8, I7, g6), l3(A8, C4), g6 = 32, I7 = C4), SA(A8), o3[C4 + 88 >> 2] = 909522486, o3[C4 + 92 >> 2] = 909522486, o3[C4 + 80 >> 2] = 909522486, o3[C4 + 84 >> 2] = 909522486, o3[C4 + 72 >> 2] = 909522486, o3[C4 + 76 >> 2] = 909522486, o3[(i4 = r4 = C4 - -64 | 0) >> 2] = 909522486, o3[i4 + 4 >> 2] = 909522486, o3[C4 + 56 >> 2] = 909522486, o3[C4 + 60 >> 2] = 909522486, o3[C4 + 48 >> 2] = 909522486, o3[C4 + 52 >> 2] = 909522486, o3[C4 + 40 >> 2] = 909522486, o3[C4 + 44 >> 2] = 909522486, o3[C4 + 32 >> 2] = 909522486, o3[C4 + 36 >> 2] = 909522486, g6) {
                        if (g6 >>> 0 >= 4)
                          for (f4 = 124 & g6; E3[0 | (Q4 = (i4 = C4 + 32 | 0) + B4 | 0)] = a3[0 | Q4] ^ a3[I7 + B4 | 0], E3[0 | (D4 = (Q4 = 1 | B4) + i4 | 0)] = a3[0 | D4] ^ a3[I7 + Q4 | 0], E3[0 | (D4 = (Q4 = 2 | B4) + i4 | 0)] = a3[0 | D4] ^ a3[I7 + Q4 | 0], E3[0 | (Q4 = (Q4 = i4) + (i4 = 3 | B4) | 0)] = a3[0 | Q4] ^ a3[I7 + i4 | 0], B4 = B4 + 4 | 0, (0 | f4) != (0 | (c4 = c4 + 4 | 0)); )
                            ;
                        if (c4 = 3 & g6)
                          for (; E3[0 | (i4 = (C4 + 32 | 0) + B4 | 0)] = a3[0 | i4] ^ a3[I7 + B4 | 0], B4 = B4 + 1 | 0, (0 | c4) != (0 | (e4 = e4 + 1 | 0)); )
                            ;
                      }
                      if (z3(A8, C4 + 32 | 0, 64), SA(i4 = A8 + 104 | 0), o3[C4 + 88 >> 2] = 1549556828, o3[C4 + 92 >> 2] = 1549556828, o3[C4 + 80 >> 2] = 1549556828, o3[C4 + 84 >> 2] = 1549556828, o3[C4 + 72 >> 2] = 1549556828, o3[C4 + 76 >> 2] = 1549556828, o3[r4 >> 2] = 1549556828, o3[r4 + 4 >> 2] = 1549556828, o3[C4 + 56 >> 2] = 1549556828, o3[C4 + 60 >> 2] = 1549556828, o3[C4 + 48 >> 2] = 1549556828, o3[C4 + 52 >> 2] = 1549556828, o3[C4 + 40 >> 2] = 1549556828, o3[C4 + 44 >> 2] = 1549556828, o3[C4 + 32 >> 2] = 1549556828, o3[C4 + 36 >> 2] = 1549556828, g6) {
                        if (e4 = 0, B4 = 0, g6 >>> 0 >= 4)
                          for (r4 = 124 & g6, c4 = 0; E3[0 | (f4 = (A8 = C4 + 32 | 0) + B4 | 0)] = a3[0 | f4] ^ a3[I7 + B4 | 0], E3[0 | (Q4 = (f4 = 1 | B4) + A8 | 0)] = a3[0 | Q4] ^ a3[I7 + f4 | 0], E3[0 | (Q4 = (f4 = 2 | B4) + A8 | 0)] = a3[0 | Q4] ^ a3[I7 + f4 | 0], E3[0 | (f4 = (Q4 = A8) + (A8 = 3 | B4) | 0)] = a3[0 | f4] ^ a3[A8 + I7 | 0], B4 = B4 + 4 | 0, (0 | r4) != (0 | (c4 = c4 + 4 | 0)); )
                            ;
                        if (A8 = 3 & g6)
                          for (; E3[0 | (g6 = (C4 + 32 | 0) + B4 | 0)] = a3[0 | g6] ^ a3[I7 + B4 | 0], B4 = B4 + 1 | 0, (0 | A8) != (0 | (e4 = e4 + 1 | 0)); )
                            ;
                      }
                      return z3(i4, A8 = C4 + 32 | 0, 64), iI(A8, 64), iI(C4, 32), w3 = C4 + 96 | 0, 0;
                    }
                    function X2(A8, I7, g6, C4, B4, i4, E4) {
                      var a4 = 0, f4 = 0, c4 = 0, e4 = 0, r4 = 0, D4 = 0, t4 = 0;
                      if (I7 - 65 >>> 0 < 4294967232 | E4 >>> 0 > 64)
                        A8 = -1;
                      else {
                        D4 = a4 = w3, w3 = a4 = a4 - 512 & -64;
                        A: {
                          I:
                            if (!(!(!(C4 | B4) | g6) | !A8 | ((f4 = 255 & I7) - 65 & 255) >>> 0 <= 191 | !(!(I7 = 255 & E4) || i4) | I7 >>> 0 >= 65)) {
                              if (I7) {
                                if (!i4)
                                  break I;
                                dA(a4 - -64 | 0, 0, 293), o3[a4 + 56 >> 2] = 327033209, o3[a4 + 60 >> 2] = 1541459225, o3[a4 + 48 >> 2] = -79577749, o3[a4 + 52 >> 2] = 528734635, o3[a4 + 40 >> 2] = 725511199, o3[a4 + 44 >> 2] = -1694144372, o3[a4 + 32 >> 2] = -1377402159, o3[a4 + 36 >> 2] = 1359893119, o3[a4 + 24 >> 2] = 1595750129, o3[a4 + 28 >> 2] = -1521486534, o3[a4 + 16 >> 2] = -23791573, o3[a4 + 20 >> 2] = 1013904242, o3[a4 + 8 >> 2] = -2067093701, o3[a4 + 12 >> 2] = -1150833019, o3[a4 >> 2] = -222443256 ^ (I7 << 8 | f4), o3[a4 + 4 >> 2] = I7 >>> 24 ^ 1779033703, dA((E4 = a4 + 384 | 0) + I7 | 0, 0, 128 - I7 | 0), YA(E4, i4, I7), YA(a4 + 96 | 0, E4, 128), o3[a4 + 352 >> 2] = 128, iI(E4, 128), I7 = 128;
                              } else
                                dA(a4 - -64 | 0, 0, 293), o3[a4 + 56 >> 2] = 327033209, o3[a4 + 60 >> 2] = 1541459225, o3[a4 + 48 >> 2] = -79577749, o3[a4 + 52 >> 2] = 528734635, o3[a4 + 40 >> 2] = 725511199, o3[a4 + 44 >> 2] = -1694144372, o3[a4 + 32 >> 2] = -1377402159, o3[a4 + 36 >> 2] = 1359893119, o3[a4 + 24 >> 2] = 1595750129, o3[a4 + 28 >> 2] = -1521486534, o3[a4 + 16 >> 2] = -23791573, o3[a4 + 20 >> 2] = 1013904242, o3[a4 + 8 >> 2] = -2067093701, o3[a4 + 12 >> 2] = -1150833019, o3[a4 >> 2] = -222443256 ^ f4, o3[a4 + 4 >> 2] = 1779033703, I7 = 0;
                              g:
                                if (C4 | B4)
                                  for (t4 = a4 + 224 | 0, c4 = a4 + 96 | 0; ; ) {
                                    if (E4 = I7 + c4 | 0, !B4 & C4 >>> 0 <= (i4 = 256 - I7 | 0) >>> 0) {
                                      YA(E4, g6, C4), o3[a4 + 352 >> 2] = C4 + o3[a4 + 352 >> 2];
                                      break g;
                                    }
                                    if (YA(E4, g6, i4), o3[a4 + 352 >> 2] = i4 + o3[a4 + 352 >> 2], e4 = I7 = o3[a4 + 68 >> 2], I7 = (r4 = (E4 = o3[a4 + 64 >> 2]) + 128 | 0) >>> 0 < 128 ? I7 + 1 | 0 : I7, o3[a4 + 64 >> 2] = r4, o3[a4 + 68 >> 2] = I7, I7 = o3[a4 + 76 >> 2], I7 = (e4 = E4 = -1 == (0 | e4) & E4 >>> 0 > 4294967167) >>> 0 > (E4 = E4 + o3[a4 + 72 >> 2] | 0) >>> 0 ? I7 + 1 | 0 : I7, o3[a4 + 72 >> 2] = E4, o3[a4 + 76 >> 2] = I7, n3(a4, c4), YA(c4, t4, 128), I7 = o3[a4 + 352 >> 2] - 128 | 0, o3[a4 + 352 >> 2] = I7, g6 = g6 + i4 | 0, !((B4 = B4 - (C4 >>> 0 < i4 >>> 0) | 0) | (C4 = C4 - i4 | 0)))
                                      break;
                                  }
                              J3(a4, A8, f4), w3 = D4;
                              break A;
                            }
                          zA(), Q3();
                        }
                        A8 = 0;
                      }
                      return A8;
                    }
                    function j2(A8, I7, g6, C4) {
                      var B4 = 0, Q4 = 0, i4 = 0, f4 = 0, c4 = 0, e4 = 0, r4 = 0, D4 = 0, t4 = 0, y4 = 0, w4 = 0, h4 = 0;
                      A: {
                        if ((i4 = o3[A8 + 56 >> 2]) | (B4 = o3[A8 + 60 >> 2])) {
                          if (t4 = Q4 = 16 - i4 | 0, c4 = (Q4 = (0 | (f4 = 0 - ((i4 >>> 0 > 16) + B4 | 0) | 0)) == (0 | C4) & g6 >>> 0 > Q4 >>> 0 | C4 >>> 0 > f4 >>> 0) ? t4 : g6, t4 = Q4 = Q4 ? f4 : C4, Q4 | c4) {
                            if (Q4 = 0, i4 = 0, !t4 & c4 >>> 0 >= 4 | t4)
                              for (e4 = -4 & c4, f4 = A8 - -64 | 0; B4 = Q4 + o3[A8 + 56 >> 2] | 0, E3[B4 + f4 | 0] = a3[I7 + Q4 | 0], B4 = (y4 = 1 | Q4) + o3[A8 + 56 >> 2] | 0, E3[B4 + f4 | 0] = a3[I7 + y4 | 0], B4 = (y4 = 2 | Q4) + o3[A8 + 56 >> 2] | 0, E3[B4 + f4 | 0] = a3[I7 + y4 | 0], B4 = (y4 = 3 | Q4) + o3[A8 + 56 >> 2] | 0, E3[B4 + f4 | 0] = a3[I7 + y4 | 0], B4 = i4, i4 = (Q4 = Q4 + 4 | 0) >>> 0 < 4 ? B4 + 1 | 0 : B4, B4 = r4, r4 = B4 = (D4 = D4 + 4 | 0) >>> 0 < 4 ? B4 + 1 | 0 : B4, (0 | D4) != (0 | e4) | (0 | t4) != (0 | B4); )
                                ;
                            if (f4 = B4 = 0, B4 | (r4 = 3 & c4))
                              for (; D4 = Q4 + o3[A8 + 56 >> 2] | 0, E3[(A8 + D4 | 0) - -64 | 0] = a3[I7 + Q4 | 0], i4 = (Q4 = Q4 + 1 | 0) ? i4 : i4 + 1 | 0, B4 = h4, h4 = B4 = (w4 = w4 + 1 | 0) ? B4 : B4 + 1 | 0, (0 | r4) != (0 | w4) | (0 | f4) != (0 | B4); )
                                ;
                            i4 = o3[A8 + 56 >> 2], B4 = o3[A8 + 60 >> 2];
                          }
                          if (B4 = B4 + t4 | 0, B4 = (i4 = i4 + c4 | 0) >>> 0 < c4 >>> 0 ? B4 + 1 | 0 : B4, o3[A8 + 56 >> 2] = i4, o3[A8 + 60 >> 2] = B4, !B4 & i4 >>> 0 < 16)
                            break A;
                          d3(A8, A8 - -64 | 0, 16, 0), o3[A8 + 56 >> 2] = 0, o3[A8 + 60 >> 2] = 0, g6 = (i4 = g6) - c4 | 0, C4 = C4 - ((i4 >>> 0 < c4 >>> 0) + t4 | 0) | 0, I7 = I7 + c4 | 0;
                        }
                        if (!C4 & g6 >>> 0 >= 16 | C4 && (d3(A8, I7, i4 = -16 & g6, C4), g6 &= 15, C4 = 0, I7 = I7 + i4 | 0), g6 | C4) {
                          if (w4 = 0, h4 = 0, Q4 = 0, i4 = 0, !C4 & g6 >>> 0 >= 4 | C4)
                            for (c4 = 12 & g6, t4 = 0, f4 = A8 - -64 | 0, D4 = 0, r4 = 0; B4 = Q4 + o3[A8 + 56 >> 2] | 0, E3[B4 + f4 | 0] = a3[I7 + Q4 | 0], B4 = (e4 = 1 | Q4) + o3[A8 + 56 >> 2] | 0, E3[B4 + f4 | 0] = a3[I7 + e4 | 0], B4 = (e4 = 2 | Q4) + o3[A8 + 56 >> 2] | 0, E3[B4 + f4 | 0] = a3[I7 + e4 | 0], B4 = (e4 = 3 | Q4) + o3[A8 + 56 >> 2] | 0, E3[B4 + f4 | 0] = a3[I7 + e4 | 0], i4 = (Q4 = Q4 + 4 | 0) >>> 0 < 4 ? i4 + 1 | 0 : i4, B4 = r4, r4 = B4 = (D4 = D4 + 4 | 0) >>> 0 < 4 ? B4 + 1 | 0 : B4, (0 | c4) != (0 | D4) | (0 | t4) != (0 | B4); )
                              ;
                          if (f4 = B4 = 0, B4 | (r4 = 3 & g6))
                            for (; B4 = Q4 + o3[A8 + 56 >> 2] | 0, E3[(A8 + B4 | 0) - -64 | 0] = a3[I7 + Q4 | 0], i4 = (Q4 = Q4 + 1 | 0) ? i4 : i4 + 1 | 0, B4 = h4, h4 = B4 = (w4 = w4 + 1 | 0) ? B4 : B4 + 1 | 0, (0 | r4) != (0 | w4) | (0 | f4) != (0 | B4); )
                              ;
                          i4 = C4 + o3[A8 + 60 >> 2] | 0, i4 = (I7 = g6 + o3[A8 + 56 >> 2] | 0) >>> 0 < g6 >>> 0 ? i4 + 1 | 0 : i4, o3[A8 + 56 >> 2] = I7, o3[A8 + 60 >> 2] = i4;
                        }
                      }
                    }
                    function T(A8, I7, g6) {
                      var C4, B4 = 0, Q4 = 0, i4 = 0, E4 = 0, a4 = 0, f4 = 0, c4 = 0, e4 = 0, r4 = 0, D4 = 0, t4 = 0, y4 = 0, w4 = 0, h4 = 0, n4 = 0, s4 = 0, k4 = 0, F4 = 0, S4 = 0;
                      y4 = o3[I7 + 4 >> 2], B4 = o3[A8 + 4 >> 2], w4 = o3[I7 + 8 >> 2], Q4 = o3[A8 + 8 >> 2], h4 = o3[I7 + 12 >> 2], i4 = o3[A8 + 12 >> 2], n4 = o3[I7 + 16 >> 2], E4 = o3[A8 + 16 >> 2], s4 = o3[I7 + 20 >> 2], a4 = o3[A8 + 20 >> 2], k4 = o3[I7 + 24 >> 2], f4 = o3[A8 + 24 >> 2], D4 = o3[I7 + 28 >> 2], c4 = o3[A8 + 28 >> 2], F4 = o3[I7 + 32 >> 2], e4 = o3[A8 + 32 >> 2], S4 = o3[I7 + 36 >> 2], r4 = o3[A8 + 36 >> 2], g6 = 0 - g6 | 0, t4 = o3[A8 >> 2], o3[A8 >> 2] = g6 & (t4 ^ o3[I7 >> 2]) ^ t4, o3[A8 + 36 >> 2] = r4 ^ g6 & (r4 ^ S4), o3[A8 + 32 >> 2] = e4 ^ g6 & (e4 ^ F4), o3[A8 + 28 >> 2] = c4 ^ g6 & (c4 ^ D4), o3[A8 + 24 >> 2] = f4 ^ g6 & (f4 ^ k4), o3[A8 + 20 >> 2] = a4 ^ g6 & (a4 ^ s4), o3[A8 + 16 >> 2] = E4 ^ g6 & (E4 ^ n4), o3[A8 + 12 >> 2] = i4 ^ g6 & (i4 ^ h4), o3[A8 + 8 >> 2] = Q4 ^ g6 & (Q4 ^ w4), o3[A8 + 4 >> 2] = B4 ^ g6 & (B4 ^ y4), B4 = o3[A8 + 40 >> 2], y4 = o3[I7 + 40 >> 2], Q4 = o3[A8 + 44 >> 2], w4 = o3[I7 + 44 >> 2], i4 = o3[A8 + 48 >> 2], h4 = o3[I7 + 48 >> 2], E4 = o3[A8 + 52 >> 2], n4 = o3[I7 + 52 >> 2], a4 = o3[A8 + 56 >> 2], s4 = o3[I7 + 56 >> 2], f4 = o3[A8 + 60 >> 2], k4 = o3[I7 + 60 >> 2], c4 = o3[(D4 = A8 - -64 | 0) >> 2], F4 = o3[I7 - -64 >> 2], e4 = o3[A8 + 68 >> 2], S4 = o3[I7 + 68 >> 2], r4 = o3[A8 + 72 >> 2], t4 = o3[I7 + 72 >> 2], C4 = o3[A8 + 76 >> 2], o3[A8 + 76 >> 2] = C4 ^ g6 & (o3[I7 + 76 >> 2] ^ C4), o3[A8 + 72 >> 2] = r4 ^ g6 & (r4 ^ t4), o3[A8 + 68 >> 2] = e4 ^ g6 & (e4 ^ S4), o3[D4 >> 2] = c4 ^ g6 & (c4 ^ F4), o3[A8 + 60 >> 2] = f4 ^ g6 & (f4 ^ k4), o3[A8 + 56 >> 2] = a4 ^ g6 & (a4 ^ s4), o3[A8 + 52 >> 2] = E4 ^ g6 & (E4 ^ n4), o3[A8 + 48 >> 2] = i4 ^ g6 & (i4 ^ h4), o3[A8 + 44 >> 2] = Q4 ^ g6 & (Q4 ^ w4), o3[A8 + 40 >> 2] = B4 ^ g6 & (B4 ^ y4), B4 = o3[A8 + 80 >> 2], y4 = o3[I7 + 80 >> 2], Q4 = o3[A8 + 84 >> 2], w4 = o3[I7 + 84 >> 2], i4 = o3[A8 + 88 >> 2], h4 = o3[I7 + 88 >> 2], E4 = o3[A8 + 92 >> 2], n4 = o3[I7 + 92 >> 2], a4 = o3[A8 + 96 >> 2], s4 = o3[I7 + 96 >> 2], f4 = o3[A8 + 100 >> 2], k4 = o3[I7 + 100 >> 2], c4 = o3[A8 + 104 >> 2], D4 = o3[I7 + 104 >> 2], e4 = o3[A8 + 108 >> 2], F4 = o3[I7 + 108 >> 2], r4 = o3[A8 + 112 >> 2], S4 = o3[I7 + 112 >> 2], t4 = o3[I7 + 116 >> 2], I7 = o3[A8 + 116 >> 2], o3[A8 + 116 >> 2] = g6 & (t4 ^ I7) ^ I7, o3[A8 + 112 >> 2] = r4 ^ g6 & (r4 ^ S4), o3[A8 + 108 >> 2] = e4 ^ g6 & (e4 ^ F4), o3[A8 + 104 >> 2] = c4 ^ g6 & (c4 ^ D4), o3[A8 + 100 >> 2] = f4 ^ g6 & (f4 ^ k4), o3[A8 + 96 >> 2] = a4 ^ g6 & (a4 ^ s4), o3[A8 + 92 >> 2] = E4 ^ g6 & (E4 ^ n4), o3[A8 + 88 >> 2] = i4 ^ g6 & (i4 ^ h4), o3[A8 + 84 >> 2] = Q4 ^ g6 & (Q4 ^ w4), o3[A8 + 80 >> 2] = B4 ^ g6 & (B4 ^ y4);
                    }
                    function O(A8, I7) {
                      var g6, C4, B4 = 0;
                      for (w3 = g6 = w3 - 192 | 0, M3(C4 = g6 + 144 | 0, I7), M3(B4 = g6 + 96 | 0, C4), M3(B4, B4), H3(B4, I7, B4), H3(C4, C4, B4), M3(I7 = g6 + 48 | 0, C4), H3(B4, B4, I7), M3(I7, B4), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), H3(B4, I7, B4), M3(I7, B4), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), H3(I7, I7, B4), M3(g6, I7), M3(g6, g6), M3(g6, g6), M3(g6, g6), M3(g6, g6), M3(g6, g6), M3(g6, g6), M3(g6, g6), M3(g6, g6), M3(g6, g6), M3(g6, g6), M3(g6, g6), M3(g6, g6), M3(g6, g6), M3(g6, g6), M3(g6, g6), M3(g6, g6), M3(g6, g6), M3(g6, g6), M3(g6, g6), H3(I7, g6, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), H3(B4, I7, B4), M3(I7, B4), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), H3(I7, I7, B4), M3(g6, I7), I7 = 1; M3(g6, g6), 100 != (0 | (I7 = I7 + 1 | 0)); )
                        ;
                      H3(I7 = g6 + 48 | 0, g6, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), M3(I7, I7), H3(B4 = g6 + 96 | 0, I7, B4), M3(B4, B4), M3(B4, B4), M3(B4, B4), M3(B4, B4), M3(B4, B4), H3(A8, B4, g6 + 144 | 0), w3 = g6 + 192 | 0;
                    }
                    function V(A8, I7, g6) {
                      var C4, B4, Q4, i4, E4, a4, f4, e4, r4 = 0;
                      w3 = C4 = w3 - 128 | 0, o3[A8 >> 2] = 1, o3[A8 + 4 >> 2] = 0, o3[A8 + 8 >> 2] = 0, o3[A8 + 12 >> 2] = 0, o3[A8 + 16 >> 2] = 0, o3[A8 + 20 >> 2] = 0, o3[A8 + 24 >> 2] = 0, o3[A8 + 28 >> 2] = 0, o3[A8 + 32 >> 2] = 0, o3[A8 + 36 >> 2] = 0, o3[A8 + 40 >> 2] = 1, dA(A8 + 44 | 0, 0, 76), T(A8, I7 = c3(I7, 960) + 2704 | 0, (255 & (1 ^ (r4 = g6 - ((g6 >> 31 & g6) << 1) | 0))) - 1 >>> 31 | 0), T(A8, I7 + 120 | 0, (255 & (2 ^ r4)) - 1 >>> 31 | 0), T(A8, I7 + 240 | 0, (255 & (3 ^ r4)) - 1 >>> 31 | 0), T(A8, I7 + 360 | 0, (255 & (4 ^ r4)) - 1 >>> 31 | 0), T(A8, I7 + 480 | 0, (255 & (5 ^ r4)) - 1 >>> 31 | 0), T(A8, I7 + 600 | 0, (255 & (6 ^ r4)) - 1 >>> 31 | 0), T(A8, I7 + 720 | 0, (255 & (7 ^ r4)) - 1 >>> 31 | 0), T(A8, I7 + 840 | 0, (255 & (8 ^ r4)) - 1 >>> 31 | 0), I7 = o3[A8 + 76 >> 2], o3[C4 + 40 >> 2] = o3[A8 + 72 >> 2], o3[C4 + 44 >> 2] = I7, r4 = o3[4 + (I7 = A8 - -64 | 0) >> 2], o3[C4 + 32 >> 2] = o3[I7 >> 2], o3[C4 + 36 >> 2] = r4, I7 = o3[A8 + 60 >> 2], o3[C4 + 24 >> 2] = o3[A8 + 56 >> 2], o3[C4 + 28 >> 2] = I7, I7 = o3[A8 + 52 >> 2], o3[C4 + 16 >> 2] = o3[A8 + 48 >> 2], o3[C4 + 20 >> 2] = I7, I7 = o3[A8 + 44 >> 2], o3[C4 + 8 >> 2] = o3[A8 + 40 >> 2], o3[C4 + 12 >> 2] = I7, I7 = o3[A8 + 12 >> 2], o3[C4 + 56 >> 2] = o3[A8 + 8 >> 2], o3[C4 + 60 >> 2] = I7, r4 = o3[A8 + 20 >> 2], o3[(I7 = C4 - -64 | 0) >> 2] = o3[A8 + 16 >> 2], o3[I7 + 4 >> 2] = r4, I7 = o3[A8 + 28 >> 2], o3[C4 + 72 >> 2] = o3[A8 + 24 >> 2], o3[C4 + 76 >> 2] = I7, I7 = o3[A8 + 36 >> 2], o3[C4 + 80 >> 2] = o3[A8 + 32 >> 2], o3[C4 + 84 >> 2] = I7, I7 = o3[A8 + 4 >> 2], o3[C4 + 48 >> 2] = o3[A8 >> 2], o3[C4 + 52 >> 2] = I7, I7 = o3[A8 + 80 >> 2], r4 = o3[A8 + 84 >> 2], B4 = o3[A8 + 88 >> 2], Q4 = o3[A8 + 92 >> 2], i4 = o3[A8 + 96 >> 2], E4 = o3[A8 + 100 >> 2], a4 = o3[A8 + 104 >> 2], f4 = o3[A8 + 108 >> 2], e4 = o3[A8 + 112 >> 2], o3[C4 + 124 >> 2] = 0 - o3[A8 + 116 >> 2], o3[C4 + 120 >> 2] = 0 - e4, o3[C4 + 116 >> 2] = 0 - f4, o3[C4 + 112 >> 2] = 0 - a4, o3[C4 + 108 >> 2] = 0 - E4, o3[C4 + 104 >> 2] = 0 - i4, o3[C4 + 100 >> 2] = 0 - Q4, o3[C4 + 96 >> 2] = 0 - B4, o3[C4 + 92 >> 2] = 0 - r4, o3[C4 + 88 >> 2] = 0 - I7, T(A8, C4 + 8 | 0, (128 & g6) >>> 7 | 0), w3 = C4 + 128 | 0;
                    }
                    function Z(A8, I7, g6, C4) {
                      var B4 = 0, Q4 = 0, i4 = 0, o4 = 0, f4 = 0, c4 = 0, e4 = 0;
                      if (g6 | C4)
                        A:
                          for (e4 = A8 + 224 | 0, f4 = A8 + 96 | 0, Q4 = a3[A8 + 352 | 0] | a3[A8 + 353 | 0] << 8 | a3[A8 + 354 | 0] << 16 | a3[A8 + 355 | 0] << 24; ; ) {
                            if (B4 = Q4 + f4 | 0, !C4 & g6 >>> 0 <= (i4 = 256 - Q4 | 0) >>> 0) {
                              YA(B4, I7, g6), I7 = g6 + (a3[A8 + 352 | 0] | a3[A8 + 353 | 0] << 8 | a3[A8 + 354 | 0] << 16 | a3[A8 + 355 | 0] << 24) | 0, E3[A8 + 352 | 0] = I7, E3[A8 + 353 | 0] = I7 >>> 8, E3[A8 + 354 | 0] = I7 >>> 16, E3[A8 + 355 | 0] = I7 >>> 24;
                              break A;
                            }
                            if (YA(B4, I7, i4), B4 = (a3[A8 + 352 | 0] | a3[A8 + 353 | 0] << 8 | a3[A8 + 354 | 0] << 16 | a3[A8 + 355 | 0] << 24) + i4 | 0, E3[A8 + 352 | 0] = B4, E3[A8 + 353 | 0] = B4 >>> 8, E3[A8 + 354 | 0] = B4 >>> 16, E3[A8 + 355 | 0] = B4 >>> 24, c4 = Q4 = a3[A8 + 68 | 0] | a3[A8 + 69 | 0] << 8 | a3[A8 + 70 | 0] << 16 | a3[A8 + 71 | 0] << 24, Q4 = (o4 = 128 + (B4 = a3[A8 + 64 | 0] | a3[A8 + 65 | 0] << 8 | a3[A8 + 66 | 0] << 16 | a3[A8 + 67 | 0] << 24) | 0) >>> 0 < 128 ? Q4 + 1 | 0 : Q4, E3[A8 + 64 | 0] = o4, E3[A8 + 65 | 0] = o4 >>> 8, E3[A8 + 66 | 0] = o4 >>> 16, E3[A8 + 67 | 0] = o4 >>> 24, E3[A8 + 68 | 0] = Q4, E3[A8 + 69 | 0] = Q4 >>> 8, E3[A8 + 70 | 0] = Q4 >>> 16, E3[A8 + 71 | 0] = Q4 >>> 24, Q4 = a3[A8 + 76 | 0] | a3[A8 + 77 | 0] << 8 | a3[A8 + 78 | 0] << 16 | a3[A8 + 79 | 0] << 24, Q4 = (c4 = B4 = -1 == (0 | c4) & B4 >>> 0 > 4294967167) >>> 0 > (B4 = B4 + (a3[A8 + 72 | 0] | a3[A8 + 73 | 0] << 8 | a3[A8 + 74 | 0] << 16 | a3[A8 + 75 | 0] << 24) | 0) >>> 0 ? Q4 + 1 | 0 : Q4, E3[A8 + 72 | 0] = B4, E3[A8 + 73 | 0] = B4 >>> 8, E3[A8 + 74 | 0] = B4 >>> 16, E3[A8 + 75 | 0] = B4 >>> 24, E3[A8 + 76 | 0] = Q4, E3[A8 + 77 | 0] = Q4 >>> 8, E3[A8 + 78 | 0] = Q4 >>> 16, E3[A8 + 79 | 0] = Q4 >>> 24, n3(A8, f4), YA(f4, e4, 128), B4 = Q4 = (a3[A8 + 352 | 0] | a3[A8 + 353 | 0] << 8 | a3[A8 + 354 | 0] << 16 | a3[A8 + 355 | 0] << 24) - 128 | 0, E3[A8 + 352 | 0] = B4, E3[A8 + 353 | 0] = B4 >>> 8, E3[A8 + 354 | 0] = B4 >>> 16, E3[A8 + 355 | 0] = B4 >>> 24, I7 = I7 + i4 | 0, !((C4 = C4 - (g6 >>> 0 < i4 >>> 0) | 0) | (g6 = g6 - i4 | 0)))
                              break;
                          }
                      return 0;
                    }
                    function W(A8, I7) {
                      var g6, C4 = 0, B4 = 0, Q4 = 0, i4 = 0, E4 = 0, a4 = 0, f4 = 0, c4 = 0, e4 = 0, r4 = 0, D4 = 0, t4 = 0, y4 = 0, w4 = 0, h4 = 0, n4 = 0, s4 = 0, k4 = 0;
                      C4 = o3[I7 + 40 >> 2], Q4 = o3[I7 + 4 >> 2], i4 = o3[I7 + 44 >> 2], E4 = o3[I7 + 8 >> 2], a4 = o3[I7 + 48 >> 2], f4 = o3[I7 + 12 >> 2], c4 = o3[I7 + 52 >> 2], e4 = o3[I7 + 16 >> 2], r4 = o3[I7 + 56 >> 2], D4 = o3[I7 + 20 >> 2], t4 = o3[I7 + 60 >> 2], y4 = o3[I7 + 24 >> 2], w4 = o3[(B4 = I7 - -64 | 0) >> 2], h4 = o3[I7 + 28 >> 2], n4 = o3[I7 + 68 >> 2], s4 = o3[I7 + 32 >> 2], k4 = o3[I7 + 72 >> 2], g6 = o3[I7 >> 2], o3[A8 + 36 >> 2] = o3[I7 + 36 >> 2] + o3[I7 + 76 >> 2], o3[A8 + 32 >> 2] = s4 + k4, o3[A8 + 28 >> 2] = h4 + n4, o3[A8 + 24 >> 2] = y4 + w4, o3[A8 + 20 >> 2] = D4 + t4, o3[A8 + 16 >> 2] = e4 + r4, o3[A8 + 12 >> 2] = f4 + c4, o3[A8 + 8 >> 2] = E4 + a4, o3[A8 + 4 >> 2] = Q4 + i4, o3[A8 >> 2] = C4 + g6, C4 = o3[I7 + 40 >> 2], Q4 = o3[I7 + 4 >> 2], i4 = o3[I7 + 44 >> 2], E4 = o3[I7 + 8 >> 2], a4 = o3[I7 + 48 >> 2], f4 = o3[I7 + 12 >> 2], c4 = o3[I7 + 52 >> 2], e4 = o3[I7 + 16 >> 2], r4 = o3[I7 + 56 >> 2], D4 = o3[I7 + 20 >> 2], t4 = o3[I7 + 60 >> 2], y4 = o3[I7 + 24 >> 2], B4 = o3[B4 >> 2], w4 = o3[I7 + 28 >> 2], h4 = o3[I7 + 68 >> 2], n4 = o3[I7 + 32 >> 2], s4 = o3[I7 + 72 >> 2], k4 = o3[I7 >> 2], o3[A8 + 76 >> 2] = o3[I7 + 76 >> 2] - o3[I7 + 36 >> 2], o3[A8 + 72 >> 2] = s4 - n4, o3[A8 + 68 >> 2] = h4 - w4, o3[A8 - -64 >> 2] = B4 - y4, o3[A8 + 60 >> 2] = t4 - D4, o3[A8 + 56 >> 2] = r4 - e4, o3[A8 + 52 >> 2] = c4 - f4, o3[A8 + 48 >> 2] = a4 - E4, o3[A8 + 44 >> 2] = i4 - Q4, o3[A8 + 40 >> 2] = C4 - k4, C4 = o3[I7 + 84 >> 2], o3[A8 + 80 >> 2] = o3[I7 + 80 >> 2], o3[A8 + 84 >> 2] = C4, C4 = o3[I7 + 92 >> 2], o3[A8 + 88 >> 2] = o3[I7 + 88 >> 2], o3[A8 + 92 >> 2] = C4, C4 = o3[I7 + 100 >> 2], o3[A8 + 96 >> 2] = o3[I7 + 96 >> 2], o3[A8 + 100 >> 2] = C4, C4 = o3[I7 + 108 >> 2], o3[A8 + 104 >> 2] = o3[I7 + 104 >> 2], o3[A8 + 108 >> 2] = C4, C4 = o3[I7 + 116 >> 2], o3[A8 + 112 >> 2] = o3[I7 + 112 >> 2], o3[A8 + 116 >> 2] = C4, H3(A8 + 120 | 0, I7 + 120 | 0, 1440);
                    }
                    function $(A8, I7) {
                      var g6, C4, B4, Q4, i4, a4 = 0, f4 = 0, e4 = 0, r4 = 0, D4 = 0, t4 = 0, y4 = 0, w4 = 0, h4 = 0, n4 = 0;
                      (a4 = o3[A8 + 56 >> 2]) | (f4 = o3[A8 + 60 >> 2]) && (E3[(r4 = A8 - -64 | 0) + a4 | 0] = 1, !((n4 = a4 + 1 | 0) ? f4 : f4 + 1 | 0) & n4 >>> 0 <= 15 && dA(65 + (A8 + a4 | 0) | 0, 0, 15 - a4 | 0), E3[A8 + 80 | 0] = 1, d3(A8, r4, 16, 0)), n4 = o3[A8 + 52 >> 2], w4 = o3[A8 + 48 >> 2], r4 = o3[A8 + 44 >> 2], a4 = o3[A8 + 24 >> 2], D4 = o3[A8 + 28 >> 2] + (a4 >>> 26 | 0) | 0, e4 = o3[A8 + 32 >> 2] + (D4 >>> 26 | 0) | 0, g6 = o3[A8 + 36 >> 2] + (e4 >>> 26 | 0) | 0, f4 = (y4 = (a4 = (a4 = (67108863 & a4) + ((t4 = o3[A8 + 20 >> 2] + c3(g6 >>> 26 | 0, 5) | 0) >>> 26 | 0) | 0) & (D4 = (e4 = (i4 = (67108863 & g6) + ((Q4 = (C4 = 67108863 & e4) + ((B4 = (h4 = 67108863 & D4) + ((t4 = a4 + ((f4 = 5 + (y4 = 67108863 & t4) | 0) >>> 26 | 0) | 0) >>> 26 | 0) | 0) >>> 26 | 0) | 0) >>> 26 | 0) | 0) - 67108864 | 0) >> 31) | t4 & (e4 = 67108863 & (t4 = (e4 >>> 31 | 0) - 1 | 0))) << 26 | f4 & e4 | D4 & y4) + o3[A8 + 40 >> 2] | 0, E3[0 | I7] = f4, E3[I7 + 1 | 0] = f4 >>> 8, E3[I7 + 2 | 0] = f4 >>> 16, E3[I7 + 3 | 0] = f4 >>> 24, y4 = f4 >>> 0 < y4 >>> 0, f4 = 0, f4 = (a4 = (h4 = D4 & h4 | e4 & B4) << 20 | a4 >>> 6) >>> 0 > (a4 = a4 + r4 | 0) >>> 0 ? 1 : f4, f4 = (r4 = a4) >>> 0 > (a4 = a4 + y4 | 0) >>> 0 ? f4 + 1 | 0 : f4, E3[I7 + 4 | 0] = a4, E3[I7 + 5 | 0] = a4 >>> 8, E3[I7 + 6 | 0] = a4 >>> 16, E3[I7 + 7 | 0] = a4 >>> 24, a4 = 0, r4 = (r4 = (e4 = D4 & C4 | e4 & Q4) << 14 | h4 >>> 12) >>> 0 > (w4 = r4 + w4 | 0) >>> 0 ? 1 : a4, a4 = w4, w4 = f4, a4 = a4 + f4 | 0, f4 = r4, f4 = a4 >>> 0 < w4 >>> 0 ? f4 + 1 | 0 : f4, E3[I7 + 8 | 0] = a4, E3[I7 + 9 | 0] = a4 >>> 8, E3[I7 + 10 | 0] = a4 >>> 16, E3[I7 + 11 | 0] = a4 >>> 24, f4 = (a4 = (a4 = (t4 & i4 | D4 & g6) << 8 | e4 >>> 18) + n4 | 0) + f4 | 0, E3[I7 + 12 | 0] = f4, E3[I7 + 13 | 0] = f4 >>> 8, E3[I7 + 14 | 0] = f4 >>> 16, E3[I7 + 15 | 0] = f4 >>> 24, iI(A8, 88);
                    }
                    function AA(A8, I7, g6) {
                      var C4, B4 = 0;
                      return w3 = C4 = w3 - 16 | 0, E3[C4 + 15 | 0] = 0, B4 = -1, 0 | wI[o3[8806]](A8, I7, g6) || (E3[C4 + 15 | 0] = a3[0 | A8] | a3[C4 + 15 | 0], E3[C4 + 15 | 0] = a3[A8 + 1 | 0] | a3[C4 + 15 | 0], E3[C4 + 15 | 0] = a3[A8 + 2 | 0] | a3[C4 + 15 | 0], E3[C4 + 15 | 0] = a3[A8 + 3 | 0] | a3[C4 + 15 | 0], E3[C4 + 15 | 0] = a3[A8 + 4 | 0] | a3[C4 + 15 | 0], E3[C4 + 15 | 0] = a3[A8 + 5 | 0] | a3[C4 + 15 | 0], E3[C4 + 15 | 0] = a3[A8 + 6 | 0] | a3[C4 + 15 | 0], E3[C4 + 15 | 0] = a3[A8 + 7 | 0] | a3[C4 + 15 | 0], E3[C4 + 15 | 0] = a3[A8 + 8 | 0] | a3[C4 + 15 | 0], E3[C4 + 15 | 0] = a3[A8 + 9 | 0] | a3[C4 + 15 | 0], E3[C4 + 15 | 0] = a3[A8 + 10 | 0] | a3[C4 + 15 | 0], E3[C4 + 15 | 0] = a3[A8 + 11 | 0] | a3[C4 + 15 | 0], E3[C4 + 15 | 0] = a3[A8 + 12 | 0] | a3[C4 + 15 | 0], E3[C4 + 15 | 0] = a3[A8 + 13 | 0] | a3[C4 + 15 | 0], E3[C4 + 15 | 0] = a3[A8 + 14 | 0] | a3[C4 + 15 | 0], E3[C4 + 15 | 0] = a3[A8 + 15 | 0] | a3[C4 + 15 | 0], E3[C4 + 15 | 0] = a3[A8 + 16 | 0] | a3[C4 + 15 | 0], E3[C4 + 15 | 0] = a3[A8 + 17 | 0] | a3[C4 + 15 | 0], E3[C4 + 15 | 0] = a3[A8 + 18 | 0] | a3[C4 + 15 | 0], E3[C4 + 15 | 0] = a3[A8 + 19 | 0] | a3[C4 + 15 | 0], E3[C4 + 15 | 0] = a3[A8 + 20 | 0] | a3[C4 + 15 | 0], E3[C4 + 15 | 0] = a3[A8 + 21 | 0] | a3[C4 + 15 | 0], E3[C4 + 15 | 0] = a3[A8 + 22 | 0] | a3[C4 + 15 | 0], E3[C4 + 15 | 0] = a3[A8 + 23 | 0] | a3[C4 + 15 | 0], E3[C4 + 15 | 0] = a3[A8 + 24 | 0] | a3[C4 + 15 | 0], E3[C4 + 15 | 0] = a3[A8 + 25 | 0] | a3[C4 + 15 | 0], E3[C4 + 15 | 0] = a3[A8 + 26 | 0] | a3[C4 + 15 | 0], E3[C4 + 15 | 0] = a3[A8 + 27 | 0] | a3[C4 + 15 | 0], E3[C4 + 15 | 0] = a3[A8 + 28 | 0] | a3[C4 + 15 | 0], E3[C4 + 15 | 0] = a3[A8 + 29 | 0] | a3[C4 + 15 | 0], E3[C4 + 15 | 0] = a3[A8 + 30 | 0] | a3[C4 + 15 | 0], E3[C4 + 15 | 0] = a3[A8 + 31 | 0] | a3[C4 + 15 | 0], B4 = (a3[C4 + 15 | 0] << 23) - 8388608 >> 31), w3 = C4 + 16 | 0, B4;
                    }
                    function IA(A8, I7) {
                      var g6, C4, B4, Q4, i4, a4, f4, e4 = 0, r4 = 0;
                      C4 = o3[I7 + 32 >> 2], B4 = o3[I7 + 28 >> 2], Q4 = o3[I7 + 24 >> 2], i4 = o3[I7 + 20 >> 2], a4 = o3[I7 + 16 >> 2], f4 = o3[I7 + 12 >> 2], e4 = o3[I7 + 4 >> 2], r4 = o3[I7 >> 2], g6 = o3[I7 + 36 >> 2], I7 = o3[I7 + 8 >> 2], r4 = c3((C4 + (B4 + (Q4 + (i4 + (a4 + (f4 + ((e4 + (r4 + (c3(g6, 19) + 16777216 >>> 25 | 0) >> 26) >> 25) + I7 >> 26) >> 25) >> 26) >> 25) >> 26) >> 25) >> 26) + g6 >> 25, 19) + r4 | 0, E3[0 | A8] = r4, E3[A8 + 2 | 0] = r4 >>> 16, E3[A8 + 1 | 0] = r4 >>> 8, e4 = e4 + (r4 >> 26) | 0, E3[A8 + 5 | 0] = e4 >>> 14, E3[A8 + 4 | 0] = e4 >>> 6, E3[A8 + 3 | 0] = r4 >>> 24 & 3 | e4 << 2, I7 = I7 + (e4 >> 25) | 0, E3[A8 + 8 | 0] = I7 >>> 13, E3[A8 + 7 | 0] = I7 >>> 5, E3[A8 + 6 | 0] = I7 << 3 | (29360128 & e4) >>> 22, r4 = (I7 >> 26) + f4 | 0, E3[A8 + 11 | 0] = r4 >>> 11, E3[A8 + 10 | 0] = r4 >>> 3, E3[A8 + 9 | 0] = r4 << 5 | (65011712 & I7) >>> 21, e4 = (r4 >> 25) + a4 | 0, E3[A8 + 15 | 0] = e4 >>> 18, E3[A8 + 14 | 0] = e4 >>> 10, E3[A8 + 13 | 0] = e4 >>> 2, I7 = (e4 >> 26) + i4 | 0, E3[A8 + 16 | 0] = I7, E3[A8 + 12 | 0] = e4 << 6 | (33030144 & r4) >>> 19, E3[A8 + 18 | 0] = I7 >>> 16, E3[A8 + 17 | 0] = I7 >>> 8, e4 = (I7 >> 25) + Q4 | 0, E3[A8 + 21 | 0] = e4 >>> 15, E3[A8 + 20 | 0] = e4 >>> 7, E3[A8 + 19 | 0] = I7 >>> 24 & 1 | e4 << 1, I7 = (e4 >> 26) + B4 | 0, E3[A8 + 24 | 0] = I7 >>> 13, E3[A8 + 23 | 0] = I7 >>> 5, E3[A8 + 22 | 0] = I7 << 3 | (58720256 & e4) >>> 23, e4 = (I7 >> 25) + C4 | 0, E3[A8 + 27 | 0] = e4 >>> 12, E3[A8 + 26 | 0] = e4 >>> 4, E3[A8 + 25 | 0] = e4 << 4 | (31457280 & I7) >>> 21, I7 = g6 + (e4 >> 26) | 0, E3[A8 + 30 | 0] = I7 >>> 10, E3[A8 + 29 | 0] = I7 >>> 2, E3[A8 + 31 | 0] = (33292288 & I7) >>> 18, E3[A8 + 28 | 0] = I7 << 6 | (66060288 & e4) >>> 20;
                    }
                    function gA(A8, I7, g6) {
                      var C4, B4 = 0, Q4 = 0, i4 = 0, o4 = 0, f4 = 0, c4 = 0, e4 = 0;
                      if (w3 = C4 = w3 - 192 | 0, g6 >>> 0 >= 129 && (cA(A8), R3(A8, I7, g6, 0), N3(A8, C4), g6 = 64, I7 = C4), cA(A8), dA(C4 - -64 | 0, 54, 128), g6) {
                        if (g6 >>> 0 >= 4)
                          for (e4 = 252 & g6; E3[0 | (B4 = (i4 = C4 - -64 | 0) + Q4 | 0)] = a3[0 | B4] ^ a3[I7 + Q4 | 0], E3[0 | (o4 = (B4 = 1 | Q4) + i4 | 0)] = a3[0 | o4] ^ a3[I7 + B4 | 0], E3[0 | (o4 = (B4 = 2 | Q4) + i4 | 0)] = a3[0 | o4] ^ a3[I7 + B4 | 0], E3[0 | (B4 = (B4 = i4) + (i4 = 3 | Q4) | 0)] = a3[0 | B4] ^ a3[I7 + i4 | 0], Q4 = Q4 + 4 | 0, (0 | e4) != (0 | (f4 = f4 + 4 | 0)); )
                            ;
                        if (f4 = 3 & g6)
                          for (; E3[0 | (i4 = (C4 - -64 | 0) + Q4 | 0)] = a3[0 | i4] ^ a3[I7 + Q4 | 0], Q4 = Q4 + 1 | 0, (0 | f4) != (0 | (c4 = c4 + 1 | 0)); )
                            ;
                      }
                      if (R3(A8, Q4 = C4 - -64 | 0, 128, 0), cA(i4 = A8 + 208 | 0), dA(Q4, 92, 128), g6) {
                        if (c4 = 0, Q4 = 0, g6 >>> 0 >= 4)
                          for (e4 = 252 & g6, f4 = 0; E3[0 | (B4 = (A8 = C4 - -64 | 0) + Q4 | 0)] = a3[0 | B4] ^ a3[I7 + Q4 | 0], E3[0 | (o4 = (B4 = 1 | Q4) + A8 | 0)] = a3[0 | o4] ^ a3[I7 + B4 | 0], E3[0 | (o4 = (B4 = 2 | Q4) + A8 | 0)] = a3[0 | o4] ^ a3[I7 + B4 | 0], E3[0 | (B4 = (B4 = A8) + (A8 = 3 | Q4) | 0)] = a3[0 | B4] ^ a3[A8 + I7 | 0], Q4 = Q4 + 4 | 0, (0 | e4) != (0 | (f4 = f4 + 4 | 0)); )
                            ;
                        if (A8 = 3 & g6)
                          for (; E3[0 | (g6 = (C4 - -64 | 0) + Q4 | 0)] = a3[0 | g6] ^ a3[I7 + Q4 | 0], Q4 = Q4 + 1 | 0, (0 | A8) != (0 | (c4 = c4 + 1 | 0)); )
                            ;
                      }
                      return R3(i4, A8 = C4 - -64 | 0, 128, 0), iI(A8, 128), iI(C4, 64), w3 = C4 + 192 | 0, 0;
                    }
                    function CA(A8, I7) {
                      var g6;
                      return o3[12 + (g6 = w3 - 16 | 0) >> 2] = A8, o3[g6 + 8 >> 2] = I7, o3[g6 + 4 >> 2] = 0, o3[g6 + 4 >> 2] = o3[g6 + 4 >> 2] | a3[o3[g6 + 12 >> 2]] ^ a3[o3[g6 + 8 >> 2]], o3[g6 + 4 >> 2] = o3[g6 + 4 >> 2] | a3[o3[g6 + 12 >> 2] + 1 | 0] ^ a3[o3[g6 + 8 >> 2] + 1 | 0], o3[g6 + 4 >> 2] = o3[g6 + 4 >> 2] | a3[o3[g6 + 12 >> 2] + 2 | 0] ^ a3[o3[g6 + 8 >> 2] + 2 | 0], o3[g6 + 4 >> 2] = o3[g6 + 4 >> 2] | a3[o3[g6 + 12 >> 2] + 3 | 0] ^ a3[o3[g6 + 8 >> 2] + 3 | 0], o3[g6 + 4 >> 2] = o3[g6 + 4 >> 2] | a3[o3[g6 + 12 >> 2] + 4 | 0] ^ a3[o3[g6 + 8 >> 2] + 4 | 0], o3[g6 + 4 >> 2] = o3[g6 + 4 >> 2] | a3[o3[g6 + 12 >> 2] + 5 | 0] ^ a3[o3[g6 + 8 >> 2] + 5 | 0], o3[g6 + 4 >> 2] = o3[g6 + 4 >> 2] | a3[o3[g6 + 12 >> 2] + 6 | 0] ^ a3[o3[g6 + 8 >> 2] + 6 | 0], o3[g6 + 4 >> 2] = o3[g6 + 4 >> 2] | a3[o3[g6 + 12 >> 2] + 7 | 0] ^ a3[o3[g6 + 8 >> 2] + 7 | 0], o3[g6 + 4 >> 2] = o3[g6 + 4 >> 2] | a3[o3[g6 + 12 >> 2] + 8 | 0] ^ a3[o3[g6 + 8 >> 2] + 8 | 0], o3[g6 + 4 >> 2] = o3[g6 + 4 >> 2] | a3[o3[g6 + 12 >> 2] + 9 | 0] ^ a3[o3[g6 + 8 >> 2] + 9 | 0], o3[g6 + 4 >> 2] = o3[g6 + 4 >> 2] | a3[o3[g6 + 12 >> 2] + 10 | 0] ^ a3[o3[g6 + 8 >> 2] + 10 | 0], o3[g6 + 4 >> 2] = o3[g6 + 4 >> 2] | a3[o3[g6 + 12 >> 2] + 11 | 0] ^ a3[o3[g6 + 8 >> 2] + 11 | 0], o3[g6 + 4 >> 2] = o3[g6 + 4 >> 2] | a3[o3[g6 + 12 >> 2] + 12 | 0] ^ a3[o3[g6 + 8 >> 2] + 12 | 0], o3[g6 + 4 >> 2] = o3[g6 + 4 >> 2] | a3[o3[g6 + 12 >> 2] + 13 | 0] ^ a3[o3[g6 + 8 >> 2] + 13 | 0], o3[g6 + 4 >> 2] = o3[g6 + 4 >> 2] | a3[o3[g6 + 12 >> 2] + 14 | 0] ^ a3[o3[g6 + 8 >> 2] + 14 | 0], o3[g6 + 4 >> 2] = o3[g6 + 4 >> 2] | a3[o3[g6 + 12 >> 2] + 15 | 0] ^ a3[o3[g6 + 8 >> 2] + 15 | 0], (o3[g6 + 4 >> 2] - 1 >>> 8 & 1) - 1 | 0;
                    }
                    function BA(A8, I7) {
                      var g6, C4 = 0, B4 = 0;
                      g6 = I7;
                      A:
                        if (C4 = 255 & I7) {
                          if (3 & A8)
                            for (; ; ) {
                              if (!(I7 = a3[0 | A8]) | (0 | I7) == (255 & g6))
                                break A;
                              if (!(3 & (A8 = A8 + 1 | 0)))
                                break;
                            }
                          I:
                            if (!((-1 ^ (I7 = o3[A8 >> 2])) & I7 - 16843009 & -2139062144))
                              for (C4 = c3(C4, 16843009); ; ) {
                                if ((-1 ^ (I7 ^= C4)) & I7 - 16843009 & -2139062144)
                                  break I;
                                if (I7 = o3[A8 + 4 >> 2], A8 = A8 + 4 | 0, I7 - 16843009 & (-1 ^ I7) & -2139062144)
                                  break;
                              }
                          for (; I7 = A8, (C4 = a3[0 | A8]) && (A8 = A8 + 1 | 0, (0 | C4) != (255 & g6)); )
                            ;
                          A8 = I7;
                        } else {
                          C4 = A8;
                          I: {
                            g: {
                              C:
                                if (3 & A8) {
                                  if (I7 = 0, !a3[0 | A8])
                                    break I;
                                  for (; ; ) {
                                    if (!(3 & (A8 = A8 + 1 | 0)))
                                      break C;
                                    if (!a3[0 | A8])
                                      break;
                                  }
                                  break g;
                                }
                              for (; I7 = A8, A8 = A8 + 4 | 0, !((-1 ^ (B4 = o3[I7 >> 2])) & B4 - 16843009 & -2139062144); )
                                ;
                              for (; I7 = (A8 = I7) + 1 | 0, a3[0 | A8]; )
                                ;
                            }
                            I7 = A8 - C4 | 0;
                          }
                          A8 = I7 + C4 | 0;
                        }
                      return a3[0 | A8] == (255 & g6) ? A8 : 0;
                    }
                    function QA(A8, I7, g6, C4, B4, Q4, i4) {
                      var E4, a4, f4 = 0, c4 = 0, e4 = 0;
                      w3 = E4 = w3 - 96 | 0, m3(E4, Q4, i4), i4 = E4 + 32 | 0, a4 = Q4 + 16 | 0, wI[o3[8808]](i4, 32, 0, a4, E4), Q4 = -1;
                      A: {
                        if (!(0 | wI[o3[8802]](g6, I7, C4, B4, i4))) {
                          if (Q4 = 0, !A8)
                            break A;
                          !((!B4 & C4 >>> 0 > I7 - A8 >>> 0 | 0 != (0 | B4)) & A8 >>> 0 < I7 >>> 0) & (!B4 & C4 >>> 0 <= A8 - I7 >>> 0 | A8 >>> 0 <= I7 >>> 0) || (I7 = pA(A8, I7, C4)), c4 = i4 = (Q4 = !B4 & C4 >>> 0 >= 32 | 0 != (0 | B4)) ? 0 : B4, (g6 = Q4 ? 32 : C4) | i4 ? (e4 = YA(E4 - -64 | 0, I7, g6), qA(Q4 = E4 + 32 | 0, Q4, f4 = g6 + 32 | 0, i4 = f4 >>> 0 < 32 ? i4 + 1 | 0 : i4, a4, E4), YA(A8, e4, g6)) : qA(Q4 = E4 + 32 | 0, Q4, f4 = g6 + 32 | 0, i4 = f4 >>> 0 < 32 ? i4 + 1 | 0 : i4, a4, E4), iI(E4 + 32 | 0, 64), Q4 = 0, !B4 & C4 >>> 0 < 33 || jA(A8 + g6 | 0, I7 + g6 | 0, C4 - g6 | 0, B4 - (c4 + (g6 >>> 0 > C4 >>> 0) | 0) | 0, a4, E4);
                        }
                        iI(E4, 32);
                      }
                      return w3 = E4 + 96 | 0, Q4;
                    }
                    function iA(A8, I7, g6, C4, B4, Q4, i4) {
                      var E4, a4, f4, c4, e4 = 0;
                      return w3 = E4 = w3 - 352 | 0, m3(E4, Q4, i4), !((!B4 & C4 >>> 0 > A8 - g6 >>> 0 | 0 != (0 | B4)) & A8 >>> 0 > g6 >>> 0) & (!B4 & C4 >>> 0 <= g6 - A8 >>> 0 | A8 >>> 0 >= g6 >>> 0) || (g6 = pA(A8, g6, C4)), o3[E4 + 56 >> 2] = 0, o3[E4 + 60 >> 2] = 0, o3[E4 + 48 >> 2] = 0, o3[E4 + 52 >> 2] = 0, o3[E4 + 40 >> 2] = 0, o3[E4 + 44 >> 2] = 0, o3[E4 + 32 >> 2] = 0, o3[E4 + 36 >> 2] = 0, (f4 = !((i4 = (e4 = !B4 & C4 >>> 0 >= 32 | 0 != (0 | B4)) ? 32 : C4) | (e4 = e4 ? 0 : B4))) || YA(E4 - -64 | 0, g6, i4), qA(a4 = E4 + 32 | 0, a4, c4 = i4 + 32 | 0, c4 >>> 0 < 32 ? e4 + 1 | 0 : e4, Q4 = Q4 + 16 | 0, E4), CI(E4 + 96 | 0, a4), f4 || YA(A8, E4 - -64 | 0, i4), iI(E4 + 32 | 0, 64), !B4 & C4 >>> 0 >= 33 | B4 && jA(A8 + i4 | 0, g6 + i4 | 0, C4 - i4 | 0, B4 - (e4 + (C4 >>> 0 < i4 >>> 0) | 0) | 0, Q4, E4), iI(E4, 32), $A(g6 = E4 + 96 | 0, A8, C4, B4), BI(g6, I7), iI(g6, 256), w3 = E4 + 352 | 0, 0;
                    }
                    function EA(A8, I7, g6, C4, B4, Q4, i4, E4, f4, c4) {
                      var e4, r4;
                      return w3 = e4 = w3 - 400 | 0, o3[e4 + 4 >> 2] = 0, x3(r4 = e4 + 16 | 0, f4, c4), c4 = a3[f4 + 20 | 0] | a3[f4 + 21 | 0] << 8 | a3[f4 + 22 | 0] << 16 | a3[f4 + 23 | 0] << 24, o3[e4 + 8 >> 2] = a3[f4 + 16 | 0] | a3[f4 + 17 | 0] << 8 | a3[f4 + 18 | 0] << 16 | a3[f4 + 19 | 0] << 24, o3[e4 + 12 >> 2] = c4, ZA(c4 = e4 + 80 | 0, 64, e4 + 4 | 0, r4), CI(f4 = e4 + 144 | 0, c4), iI(c4, 64), $A(f4, Q4, i4, E4), $A(f4, 33904, 0 - i4 & 15, 0), $A(f4, I7, g6, C4), $A(f4, 33904, 0 - g6 & 15, 0), o3[e4 + 72 >> 2] = i4, o3[e4 + 76 >> 2] = E4, $A(f4, Q4 = e4 + 72 | 0, 8, 0), o3[e4 + 72 >> 2] = g6, o3[e4 + 76 >> 2] = C4, $A(f4, Q4, 8, 0), BI(f4, Q4 = e4 + 48 | 0), iI(f4, 256), f4 = CA(Q4, B4), iI(Q4, 16), A8 && (f4 ? (dA(A8, 0, g6), f4 = -1) : (xA(A8, I7, g6, C4, e4 + 4 | 0, e4 + 16 | 0), f4 = 0)), iI(e4 + 16 | 0, 32), w3 = e4 + 400 | 0, f4;
                    }
                    function oA(A8, I7, g6, C4, B4, Q4, i4, E4, f4, c4, e4) {
                      var r4, D4, t4;
                      return w3 = r4 = w3 - 384 | 0, o3[r4 + 4 >> 2] = 0, x3(D4 = r4 + 16 | 0, c4, e4), e4 = a3[c4 + 20 | 0] | a3[c4 + 21 | 0] << 8 | a3[c4 + 22 | 0] << 16 | a3[c4 + 23 | 0] << 24, o3[r4 + 8 >> 2] = a3[c4 + 16 | 0] | a3[c4 + 17 | 0] << 8 | a3[c4 + 18 | 0] << 16 | a3[c4 + 19 | 0] << 24, o3[r4 + 12 >> 2] = e4, ZA(e4 = r4 - -64 | 0, 64, t4 = r4 + 4 | 0, D4), CI(c4 = r4 + 128 | 0, e4), iI(e4, 64), $A(c4, i4, E4, f4), $A(c4, 33904, 0 - E4 & 15, 0), xA(A8, C4, B4, Q4, t4, D4), $A(c4, A8, B4, Q4), $A(c4, 33904, 0 - B4 & 15, 0), o3[r4 + 56 >> 2] = E4, o3[r4 + 60 >> 2] = f4, $A(c4, A8 = r4 + 56 | 0, 8, 0), o3[r4 + 56 >> 2] = B4, o3[r4 + 60 >> 2] = Q4, $A(c4, A8, 8, 0), BI(c4, I7), iI(c4, 256), g6 && (o3[g6 >> 2] = 16, o3[g6 + 4 >> 2] = 0), iI(r4 + 16 | 0, 32), w3 = r4 + 384 | 0, 0;
                    }
                    function aA(A8, I7, g6, C4) {
                      var B4, Q4 = 0;
                      return w3 = B4 = w3 - 208 | 0, o3[B4 + 72 >> 2] = 0, o3[B4 + 76 >> 2] = 0, Q4 = o3[8579], o3[B4 + 8 >> 2] = o3[8578], o3[B4 + 12 >> 2] = Q4, Q4 = o3[8581], o3[B4 + 16 >> 2] = o3[8580], o3[B4 + 20 >> 2] = Q4, Q4 = o3[8583], o3[B4 + 24 >> 2] = o3[8582], o3[B4 + 28 >> 2] = Q4, Q4 = o3[8585], o3[B4 + 32 >> 2] = o3[8584], o3[B4 + 36 >> 2] = Q4, Q4 = o3[8587], o3[B4 + 40 >> 2] = o3[8586], o3[B4 + 44 >> 2] = Q4, Q4 = o3[8589], o3[B4 + 48 >> 2] = o3[8588], o3[B4 + 52 >> 2] = Q4, Q4 = o3[8591], o3[B4 + 56 >> 2] = o3[8590], o3[B4 + 60 >> 2] = Q4, o3[B4 + 64 >> 2] = 0, o3[B4 + 68 >> 2] = 0, Q4 = o3[8577], o3[B4 >> 2] = o3[8576], o3[B4 + 4 >> 2] = Q4, R3(B4, I7, g6, C4), N3(B4, A8), w3 = B4 + 208 | 0, 0;
                    }
                    function fA(A8, I7) {
                      var g6, C4 = 0, B4 = 0, Q4 = 0;
                      if (E3[15 + (g6 = w3 - 16 | 0) | 0] = 0, I7) {
                        if (B4 = 3 & I7, I7 >>> 0 >= 4)
                          for (Q4 = -4 & I7, I7 = 0; E3[g6 + 15 | 0] = a3[A8 + C4 | 0] | a3[g6 + 15 | 0], E3[g6 + 15 | 0] = a3[(1 | C4) + A8 | 0] | a3[g6 + 15 | 0], E3[g6 + 15 | 0] = a3[(2 | C4) + A8 | 0] | a3[g6 + 15 | 0], E3[g6 + 15 | 0] = a3[(3 | C4) + A8 | 0] | a3[g6 + 15 | 0], C4 = C4 + 4 | 0, (0 | Q4) != (0 | (I7 = I7 + 4 | 0)); )
                            ;
                        if (B4)
                          for (I7 = 0; E3[g6 + 15 | 0] = a3[A8 + C4 | 0] | a3[g6 + 15 | 0], C4 = C4 + 1 | 0, (0 | B4) != (0 | (I7 = I7 + 1 | 0)); )
                            ;
                      }
                      return a3[g6 + 15 | 0] - 1 >>> 8 & 1;
                    }
                    function cA(A8) {
                      var I7 = 0;
                      o3[A8 + 64 >> 2] = 0, o3[A8 + 68 >> 2] = 0, o3[A8 + 72 >> 2] = 0, o3[A8 + 76 >> 2] = 0, I7 = o3[8577], o3[A8 >> 2] = o3[8576], o3[A8 + 4 >> 2] = I7, I7 = o3[8579], o3[A8 + 8 >> 2] = o3[8578], o3[A8 + 12 >> 2] = I7, I7 = o3[8581], o3[A8 + 16 >> 2] = o3[8580], o3[A8 + 20 >> 2] = I7, I7 = o3[8583], o3[A8 + 24 >> 2] = o3[8582], o3[A8 + 28 >> 2] = I7, I7 = o3[8585], o3[A8 + 32 >> 2] = o3[8584], o3[A8 + 36 >> 2] = I7, I7 = o3[8587], o3[A8 + 40 >> 2] = o3[8586], o3[A8 + 44 >> 2] = I7, I7 = o3[8589], o3[A8 + 48 >> 2] = o3[8588], o3[A8 + 52 >> 2] = I7, I7 = o3[8591], o3[A8 + 56 >> 2] = o3[8590], o3[A8 + 60 >> 2] = I7;
                    }
                    function eA(A8, I7, g6) {
                      var C4, B4 = 0, Q4 = 0;
                      if (o3[12 + (C4 = w3 - 16 | 0) >> 2] = A8, o3[C4 + 8 >> 2] = I7, A8 = 0, E3[C4 + 7 | 0] = 0, g6) {
                        if (I7 = 1 & g6, 1 != (0 | g6))
                          for (Q4 = -2 & g6, g6 = 0; E3[C4 + 7 | 0] = a3[C4 + 7 | 0] | a3[o3[C4 + 12 >> 2] + A8 | 0] ^ a3[o3[C4 + 8 >> 2] + A8 | 0], B4 = 1 | A8, E3[C4 + 7 | 0] = a3[C4 + 7 | 0] | a3[B4 + o3[C4 + 12 >> 2] | 0] ^ a3[o3[C4 + 8 >> 2] + B4 | 0], A8 = A8 + 2 | 0, (0 | Q4) != (0 | (g6 = g6 + 2 | 0)); )
                            ;
                        I7 && (E3[C4 + 7 | 0] = a3[C4 + 7 | 0] | a3[o3[C4 + 12 >> 2] + A8 | 0] ^ a3[o3[C4 + 8 >> 2] + A8 | 0]);
                      }
                      return (a3[C4 + 7 | 0] - 1 >>> 8 & 1) - 1 | 0;
                    }
                    function rA(A8) {
                      for (var I7 = 0, g6 = 0, C4 = 0, B4 = 0, Q4 = 0, i4 = 0, E4 = 0, o4 = 0, f4 = 0, c4 = 0; B4 = (g6 = a3[A8 + C4 | 0]) ^ a3[0 | (I7 = C4 + 2448 | 0)] | B4, Q4 = g6 ^ a3[I7 + 192 | 0] | Q4, i4 = g6 ^ a3[I7 + 160 | 0] | i4, E4 = g6 ^ a3[I7 + 128 | 0] | E4, o4 = g6 ^ a3[I7 + 96 | 0] | o4, f4 = g6 ^ a3[I7 - -64 | 0] | f4, c4 = g6 ^ a3[I7 + 32 | 0] | c4, 31 != (0 | (C4 = C4 + 1 | 0)); )
                        ;
                      return ((255 & ((I7 = 127 ^ (A8 = 127 & a3[A8 + 31 | 0])) | Q4)) - 1 | (255 & (I7 | i4)) - 1 | (255 & (I7 | E4)) - 1 | (255 & (122 ^ A8 | o4)) - 1 | (255 & (5 ^ A8 | f4)) - 1 | (255 & (A8 | c4)) - 1 | (255 & (A8 | B4)) - 1) >>> 8 & 1;
                    }
                    function DA(A8, I7, g6) {
                      var C4 = 0, B4 = 0, Q4 = 0, i4 = 0;
                      return B4 = 31 & (Q4 = i4 = 63 & g6), Q4 = Q4 >>> 0 >= 32 ? -1 >>> B4 | 0 : (C4 = -1 >>> B4 | 0) | (1 << B4) - 1 << 32 - B4, Q4 &= A8, C4 &= I7, B4 = 31 & i4, i4 >>> 0 >= 32 ? (C4 = Q4 << B4, i4 = 0) : (C4 = (1 << B4) - 1 & Q4 >>> 32 - B4 | C4 << B4, i4 = Q4 << B4), Q4 = C4, C4 = 31 & (B4 = 0 - g6 & 63), B4 >>> 0 >= 32 ? (C4 = -1 << C4, g6 = 0) : C4 = (g6 = -1 << C4) | (1 << C4) - 1 & -1 >>> 32 - C4, A8 &= g6, I7 &= C4, C4 = 31 & B4, B4 >>> 0 >= 32 ? (g6 = 0, A8 = I7 >>> C4 | 0) : (g6 = I7 >>> C4 | 0, A8 = ((1 << C4) - 1 & I7) << 32 - C4 | A8 >>> C4), h3 = g6 | Q4, A8 | i4;
                    }
                    function tA(A8, I7, g6, C4, B4, Q4, i4, E4, a4, f4) {
                      var c4, e4, r4;
                      return w3 = c4 = w3 - 352 | 0, ZA(r4 = c4 + 32 | 0, 64, a4, f4), CI(e4 = c4 + 96 | 0, r4), iI(r4, 64), $A(e4, Q4, i4, E4), $A(e4, 33920, 0 - i4 & 15, 0), $A(e4, I7, g6, C4), $A(e4, 33920, 0 - g6 & 15, 0), o3[c4 + 24 >> 2] = i4, o3[c4 + 28 >> 2] = E4, $A(e4, Q4 = c4 + 24 | 0, 8, 0), o3[c4 + 24 >> 2] = g6, o3[c4 + 28 >> 2] = C4, $A(e4, Q4, 8, 0), BI(e4, c4), iI(e4, 256), Q4 = CA(c4, B4), iI(c4, 16), A8 && (Q4 ? (dA(A8, 0, g6), Q4 = -1) : (FA(A8, I7, g6, C4, a4, 1, f4), Q4 = 0)), w3 = c4 + 352 | 0, Q4;
                    }
                    function yA(A8, I7, g6, C4, B4, Q4, i4, E4, a4, f4, c4) {
                      var e4, r4, D4;
                      return w3 = e4 = w3 - 336 | 0, ZA(D4 = e4 + 16 | 0, 64, f4, c4), CI(r4 = e4 + 80 | 0, D4), iI(D4, 64), $A(r4, i4, E4, a4), $A(r4, 33920, 0 - E4 & 15, 0), FA(A8, C4, B4, Q4, f4, 1, c4), $A(r4, A8, B4, Q4), $A(r4, 33920, 0 - B4 & 15, 0), o3[e4 + 8 >> 2] = E4, o3[e4 + 12 >> 2] = a4, $A(r4, A8 = e4 + 8 | 0, 8, 0), o3[e4 + 8 >> 2] = B4, o3[e4 + 12 >> 2] = Q4, $A(r4, A8, 8, 0), BI(r4, I7), iI(r4, 256), g6 && (o3[g6 >> 2] = 16, o3[g6 + 4 >> 2] = 0), w3 = e4 + 336 | 0, 0;
                    }
                    function wA(A8, I7, g6, C4, B4, Q4, i4, E4, a4, f4) {
                      var c4, e4, r4;
                      return w3 = c4 = w3 - 352 | 0, WA(r4 = c4 + 32 | 0, a4, f4), CI(e4 = c4 + 96 | 0, r4), iI(r4, 64), $A(e4, Q4, i4, E4), o3[c4 + 24 >> 2] = i4, o3[c4 + 28 >> 2] = E4, $A(e4, Q4 = c4 + 24 | 0, 8, 0), $A(e4, I7, g6, C4), o3[c4 + 24 >> 2] = g6, o3[c4 + 28 >> 2] = C4, $A(e4, Q4, 8, 0), BI(e4, c4), iI(e4, 256), Q4 = CA(c4, B4), iI(c4, 16), A8 && (Q4 ? (dA(A8, 0, g6), Q4 = -1) : (uA(A8, I7, g6, C4, a4, f4), Q4 = 0)), w3 = c4 + 352 | 0, Q4;
                    }
                    function hA(A8, I7, g6, C4, B4, Q4, i4, E4, a4, f4, c4) {
                      var e4, r4, D4;
                      return w3 = e4 = w3 - 336 | 0, WA(D4 = e4 + 16 | 0, f4, c4), CI(r4 = e4 + 80 | 0, D4), iI(D4, 64), $A(r4, i4, E4, a4), o3[e4 + 8 >> 2] = E4, o3[e4 + 12 >> 2] = a4, $A(r4, i4 = e4 + 8 | 0, 8, 0), uA(A8, C4, B4, Q4, f4, c4), $A(r4, A8, B4, Q4), o3[e4 + 8 >> 2] = B4, o3[e4 + 12 >> 2] = Q4, $A(r4, i4, 8, 0), BI(r4, I7), iI(r4, 256), g6 && (o3[g6 >> 2] = 16, o3[g6 + 4 >> 2] = 0), w3 = e4 + 336 | 0, 0;
                    }
                    function nA(A8, I7) {
                      var g6;
                      for (o3[12 + (g6 = w3 - 16 | 0) >> 2] = A8, o3[g6 + 8 >> 2] = I7, A8 = 0, o3[g6 + 4 >> 2] = 0; o3[g6 + 4 >> 2] = o3[g6 + 4 >> 2] | a3[o3[g6 + 12 >> 2] + A8 | 0] ^ a3[o3[g6 + 8 >> 2] + A8 | 0], I7 = 1 | A8, o3[g6 + 4 >> 2] = o3[g6 + 4 >> 2] | a3[I7 + o3[g6 + 12 >> 2] | 0] ^ a3[I7 + o3[g6 + 8 >> 2] | 0], 32 != (0 | (A8 = A8 + 2 | 0)); )
                        ;
                      return (o3[g6 + 4 >> 2] - 1 >>> 8 & 1) - 1 | 0;
                    }
                    function sA(A8) {
                      var I7 = 0, g6 = 0, C4 = 0, B4 = 0;
                      for (I7 = 1; I7 = a3[0 | (g6 = A8 + C4 | 0)] + I7 | 0, E3[0 | g6] = I7, I7 = a3[0 | (g6 = (1 | C4) + A8 | 0)] + (I7 >>> 8 | 0) | 0, E3[0 | g6] = I7, I7 = a3[0 | (g6 = (2 | C4) + A8 | 0)] + (I7 >>> 8 | 0) | 0, E3[0 | g6] = I7, I7 = a3[0 | (g6 = (3 | C4) + A8 | 0)] + (I7 >>> 8 | 0) | 0, E3[0 | g6] = I7, I7 = I7 >>> 8 | 0, C4 = C4 + 4 | 0, 4 != (0 | (B4 = B4 + 4 | 0)); )
                        ;
                    }
                    function kA(A8, I7, g6, C4) {
                      var B4, Q4, i4, E4, o4 = 0, a4 = 0;
                      return E4 = c3(o4 = g6 >>> 16 | 0, a4 = A8 >>> 16 | 0), o4 = (65535 & (a4 = ((i4 = c3(B4 = 65535 & g6, Q4 = 65535 & A8)) >>> 16 | 0) + c3(a4, B4) | 0)) + c3(o4, Q4) | 0, h3 = (c3(I7, g6) + E4 | 0) + c3(A8, C4) + (a4 >>> 16) + (o4 >>> 16) | 0, 65535 & i4 | o4 << 16;
                    }
                    function FA(A8, I7, g6, C4, B4, i4, E4) {
                      var a4 = 0, f4 = 0;
                      a4 = C4, 1 == (((a4 = (f4 = g6 + 63 | 0) >>> 0 < 63 ? a4 + 1 | 0 : a4) >>> 6 | 0) + (0 != (0 | (a4 = (63 & a4) << 26 | f4 >>> 6))) | 0) & i4 >>> 0 > (f4 = 0 - a4 | 0) >>> 0 | 1 == (0 | C4) | C4 >>> 0 > 1 ? (zA(), Q3()) : wI[o3[8813]](A8, I7, g6, C4, B4, i4, E4);
                    }
                    function SA(A8) {
                      var I7 = 0;
                      o3[A8 + 32 >> 2] = 0, o3[A8 + 36 >> 2] = 0, I7 = o3[8485], o3[A8 >> 2] = o3[8484], o3[A8 + 4 >> 2] = I7, I7 = o3[8487], o3[A8 + 8 >> 2] = o3[8486], o3[A8 + 12 >> 2] = I7, I7 = o3[8489], o3[A8 + 16 >> 2] = o3[8488], o3[A8 + 20 >> 2] = I7, I7 = o3[8491], o3[A8 + 24 >> 2] = o3[8490], o3[A8 + 28 >> 2] = I7;
                    }
                    function HA(A8, I7) {
                      A8 |= 0;
                      var g6, C4 = 0, B4 = 0, Q4 = 0;
                      if (w3 = g6 = w3 - 16 | 0, I7 |= 0)
                        for (; E3[g6 + 15 | 0] = 0, B4 = A8 + C4 | 0, Q4 = 0 | r3(35256, g6 + 15 | 0, 0), E3[0 | B4] = Q4, (0 | (C4 = C4 + 1 | 0)) != (0 | I7); )
                          ;
                      w3 = g6 + 16 | 0;
                    }
                    function GA(A8, I7, g6, C4, B4, Q4, i4) {
                      var E4, o4, a4 = 0;
                      return w3 = E4 = w3 - 32 | 0, a4 = -1, (o4 = g6 >>> 0 < 16) & !C4 || UA(E4, Q4, i4) || (a4 = QA(A8, I7 + 16 | 0, I7, g6 - 16 | 0, C4 - o4 | 0, B4, E4), iI(E4, 32)), w3 = E4 + 32 | 0, a4;
                    }
                    function _A(A8) {
                      var I7, g6;
                      return (A8 = (I7 = o3[8800]) + (g6 = A8 + 7 & -8) | 0) >>> 0 <= I7 >>> 0 && g6 || A8 >>> 0 > hI() << 16 >>> 0 && !(0 | y3(0 | A8)) ? (o3[9005] = 48, -1) : (o3[8800] = A8, I7);
                    }
                    function MA(A8, I7) {
                      var g6, C4, B4;
                      w3 = g6 = w3 - 176 | 0, O(C4 = g6 + 96 | 0, I7 + 80 | 0), H3(B4 = g6 + 48 | 0, I7, C4), H3(g6, I7 + 40 | 0, C4), IA(A8, g6), IA(g6 + 144 | 0, B4), E3[A8 + 31 | 0] = a3[A8 + 31 | 0] ^ a3[g6 + 144 | 0] << 7, w3 = g6 + 176 | 0;
                    }
                    function pA(A8, I7, g6) {
                      var C4 = 0;
                      if (A8 >>> 0 < I7 >>> 0)
                        return YA(A8, I7, g6);
                      if (g6)
                        for (C4 = A8 + g6 | 0, I7 = I7 + g6 | 0; I7 = I7 - 1 | 0, E3[0 | (C4 = C4 - 1 | 0)] = a3[0 | I7], g6 = g6 - 1 | 0; )
                          ;
                      return A8;
                    }
                    function NA(A8, I7, g6, C4, B4, i4, E4) {
                      var o4, a4 = 0;
                      if (w3 = o4 = w3 - 32 | 0, !C4 & g6 >>> 0 < 4294967280)
                        return a4 = -1, UA(o4, i4, E4) || (a4 = iA(A8 + 16 | 0, A8, I7, g6, C4, B4, o4), iI(o4, 32)), w3 = o4 + 32 | 0, a4;
                      zA(), Q3();
                    }
                    function JA(A8, I7, g6, C4, B4, Q4) {
                      return I7 |= 0, 0 | (!(C4 |= 0) & (g6 |= 0) >>> 0 >= 16 | C4 ? QA(A8 |= 0, I7 + 16 | 0, I7, g6 - 16 | 0, C4 - (g6 >>> 0 < 16) | 0, B4 |= 0, Q4 |= 0) : -1);
                    }
                    function UA(A8, I7, g6) {
                      A8 |= 0;
                      var C4, B4 = 0;
                      return w3 = C4 = w3 - 32 | 0, B4 = -1, AA(C4, g6 |= 0, I7 |= 0) || (B4 = m3(A8, 35184, C4)), w3 = C4 + 32 | 0, 0 | B4;
                    }
                    function YA(A8, I7, g6) {
                      var C4 = 0;
                      if (g6)
                        for (C4 = A8; E3[0 | C4] = a3[0 | I7], C4 = C4 + 1 | 0, I7 = I7 + 1 | 0, g6 = g6 - 1 | 0; )
                          ;
                      return A8;
                    }
                    function dA(A8, I7, g6) {
                      var C4 = 0;
                      if (g6)
                        for (C4 = A8; E3[0 | C4] = I7, C4 = C4 + 1 | 0, g6 = g6 - 1 | 0; )
                          ;
                      return A8;
                    }
                    function KA(A8, I7, g6) {
                      return A8 |= 0, I7 |= 0, (g6 |= 0) >>> 0 >= 256 && (D3(1260, 1187, 107, 1067), Q3()), 0 | J3(A8, I7, 255 & g6);
                    }
                    function bA(A8, I7) {
                      var g6;
                      w3 = g6 = w3 + -64 | 0, N3(A8, g6), R3(A8 = A8 + 208 | 0, g6, 64, 0), N3(A8, I7), iI(g6, 64), w3 = g6 - -64 | 0;
                    }
                    function PA(A8, I7, g6, C4, B4, Q4, i4) {
                      return 0 | iA(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q4 |= 0, i4 |= 0);
                    }
                    function vA(A8, I7, g6, C4, B4, Q4, i4) {
                      return 0 | QA(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q4 |= 0, i4 |= 0);
                    }
                    function LA(A8, I7) {
                      var g6;
                      w3 = g6 = w3 - 32 | 0, l3(A8, g6), z3(A8 = A8 + 104 | 0, g6, 32), l3(A8, I7), iI(g6, 32), w3 = g6 + 32 | 0;
                    }
                    function RA(A8, I7) {
                      var g6 = 0;
                      return (-1 >>> (g6 = 31 & I7) & A8) << g6 | ((g6 = A8) & -1 << (A8 = 0 - I7 & 31)) >>> A8;
                    }
                    function uA(A8, I7, g6, C4, B4, i4) {
                      1 == (0 | C4) | C4 >>> 0 > 1 && (zA(), Q3()), wI[o3[8812]](A8, I7, g6, C4, B4, 1, 0, i4);
                    }
                    function xA(A8, I7, g6, C4, B4, i4) {
                      1 == (0 | C4) | C4 >>> 0 > 1 && (zA(), Q3()), wI[o3[8813]](A8, I7, g6, C4, B4, 1, i4);
                    }
                    function mA() {
                      var A8;
                      w3 = A8 = w3 - 16 | 0, E3[A8 + 15 | 0] = 0, r3(35292, A8 + 15 | 0, 0), w3 = A8 + 16 | 0;
                    }
                    function lA(A8, I7, g6) {
                      return 0 | AA(A8 |= 0, I7 |= 0, g6 |= 0);
                    }
                    function zA() {
                      var A8;
                      (A8 = o3[9137]) && wI[0 | A8](), t3(), Q3();
                    }
                    function qA(A8, I7, g6, C4, B4, Q4) {
                      wI[o3[8809]](A8, I7, g6, C4, B4, 0, 0, Q4);
                    }
                    function XA(A8, I7) {
                      return A8 |= 0, HA(I7 |= 0, 32), 0 | II(A8, I7);
                    }
                    function jA(A8, I7, g6, C4, B4, Q4) {
                      wI[o3[8809]](A8, I7, g6, C4, B4, 1, 0, Q4);
                    }
                    function TA(A8) {
                      return A8 ? 31 - e3(A8 - 1 ^ A8) | 0 : 32;
                    }
                    function OA(A8, I7, g6, C4) {
                      wI[o3[8813]](A8, I7, 40, 0, g6, 0, C4);
                    }
                    function VA(A8, I7) {
                      return 0 | II(A8 |= 0, I7 |= 0);
                    }
                    function ZA(A8, I7, g6, C4) {
                      wI[o3[8811]](A8, I7, 0, g6, C4);
                    }
                    function WA(A8, I7, g6) {
                      wI[o3[8810]](A8, 64, 0, I7, g6);
                    }
                    function $A(A8, I7, g6, C4) {
                      wI[o3[8804]](A8, I7, g6, C4);
                    }
                    function AI(A8, I7, g6, C4) {
                      return R3(A8, I7, g6, C4), 0;
                    }
                    function II(A8, I7) {
                      return 0 | wI[o3[8807]](A8, I7);
                    }
                    function gI(A8, I7, g6) {
                      return z3(A8, I7, g6), 0;
                    }
                    function CI(A8, I7) {
                      wI[o3[8803]](A8, I7);
                    }
                    function BI(A8, I7) {
                      wI[o3[8805]](A8, I7);
                    }
                    function QI(A8) {
                      HA(A8 |= 0, 32);
                    }
                    function iI(A8, I7) {
                      dA(A8, 0, I7);
                    }
                    function EI() {
                      return 208;
                    }
                    function oI() {
                      return 16;
                    }
                    function aI() {
                      return 32;
                    }
                    function fI() {
                      return 24;
                    }
                    function cI() {
                      return -17;
                    }
                    function eI() {
                      return 64;
                    }
                    function rI() {
                      return 1;
                    }
                    function DI() {
                      return 8;
                    }
                    function tI() {
                      return 0;
                    }
                    B3(I6 = a3, 1024, "TGlic29kaXVtRFJHcmFuZG9tYnl0ZXMAYjY0X3BvcyA8PSBiNjRfbGVuAGNyeXB0b19nZW5lcmljaGFzaF9ibGFrZTJiX2ZpbmFsAHJhbmRvbWJ5dGVzL3JhbmRvbWJ5dGVzLmMAc29kaXVtL2NvZGVjcy5jAGNyeXB0b19nZW5lcmljaGFzaC9ibGFrZTJiL3JlZi9ibGFrZTJiLXJlZi5jAGNyeXB0b19nZW5lcmljaGFzaC9ibGFrZTJiL3JlZi9nZW5lcmljaGFzaF9ibGFrZTJiLmMAYnVmX2xlbiA8PSBTSVpFX01BWABvdXRsZW4gPD0gVUlOVDhfTUFYAFMtPmJ1ZmxlbiA8PSBCTEFLRTJCX0JMT0NLQllURVMAMS4wLjE5AHNvZGl1bV9iaW4yYmFzZTY0AAAAAAAAAAC2eFn/hXLTAL1uFf8PCmoAKcABAJjoef+8PKD/mXHO/wC34v60DUj/AAAAAAAAAACwoA7+08mG/54YjwB/aTUAYAy9AKfX+/+fTID+amXh/x78BACSDK4="), B3(I6, 1440, "WfGy/grlpv973Sr+HhTUAFKAAwAw0fMAd3lA/zLjnP8AbsUBZxuQ"), B3(I6, 1488, "hTuMAb3xJP/4JcMBYNw3ALdMPv/DQj0AMkykAeGkTP9MPaP/dT4fAFGRQP92QQ4AonPW/waKLgB85vT/CoqPADQawgC49EwAgY8pAb70E/97qnr/YoFEAHnVkwBWZR7/oWebAIxZQ//v5b4BQwu1AMbwif7uRbz/Q5fuABMqbP/lVXEBMkSH/xFqCQAyZwH/UAGoASOYHv8QqLkBOFno/2XS/AAp+kcAzKpP/w4u7/9QTe8AvdZL/xGN+QAmUEz/vlV1AFbkqgCc2NABw8+k/5ZCTP+v4RD/jVBiAUzb8gDGonIALtqYAJsr8f6boGj/M7ulAAIRrwBCVKAB9zoeACNBNf5F7L8ALYb1AaN73QAgbhT/NBelALrWRwDpsGAA8u82ATlZigBTAFT/iKBkAFyOeP5ofL4AtbE+//opVQCYgioBYPz2AJeXP/7vhT4AIDicAC2nvf+OhbMBg1bTALuzlv76qg7/0qNOACU0lwBjTRoA7pzV/9XA0QFJLlQAFEEpATbOTwDJg5L+qm8Y/7EhMv6rJsv/Tvd0ANHdmQCFgLIBOiwZAMknOwG9E/wAMeXSAXW7dQC1s7gBAHLbADBekwD1KTgAfQ3M/vStdwAs3SD+VOoUAPmgxgHsfur/L2Oo/qrimf9ms9gA4o16/3pCmf629YYA4+QZAdY56//YrTj/tefSAHeAnf+BX4j/bn4zAAKpt/8HgmL+RbBe/3QE4wHZ8pH/yq0fAWkBJ/8ur0UA5C86/9fgRf7POEX/EP6L/xfP1P/KFH7/X9Vg/wmwIQDIBc//8SqA/iMhwP/45cQBgRF4APtnl/8HNHD/jDhC/yji9f/ZRiX+rNYJ/0hDhgGSwNb/LCZwAES4S//OWvsAleuNALWqOgB09O8AXJ0CAGatYgDpiWABfzHLAAWblAAXlAn/03oMACKGGv/bzIgAhggp/+BTK/5VGfcAbX8A/qmIMADud9v/563VAM4S/v4Iugf/fgkHAW8qSABvNOz+YD+NAJO/f/7NTsD/DmrtAbvbTACv87v+aVmtAFUZWQGi85QAAnbR/iGeCQCLoy7/XUYoAGwqjv5v/I7/m9+QADPlp/9J/Jv/XnQM/5ig2v+c7iX/s+rP/8UAs/+apI0A4cRoAAojGf7R1PL/Yf3e/rhl5QDeEn8BpIiH/x7PjP6SYfMAgcAa/slUIf9vCk7/k1Gy/wQEGACh7tf/Bo0hADXXDv8ptdD/54udALPL3f//uXEAveKs/3FC1v/KPi3/ZkAI/06uEP6FdUT/"), B3(I6, 2480, "AQ=="), B3(I6, 2512, "JuiVj8KyJ7BFw/SJ8u+Y8NXfrAXTxjM5sTgCiG1T/AXHF2pwPU3YT7o8C3YNEGcPKiBT+iw5zMZOx/13kqwDeuz///////////////////////////////////////9/7f///////////////////////////////////////3/u////////////////////////////////////////f+3T9VwaYxJY1pz3ot753hQ="), B3(I6, 2703, ""), B3(I6, 33676, "AQ=="), B3(I6, 33712, "AQ=="), B3(I6, 33744, "4Ot6fDtBuK4WVuP68Z/EatoJjeucMrH9hmIFFl9JuABfnJW8o1CMJLHQsVWcg+9bBERcxFgcjobYIk7d0J8RV+z///////////////////////////////////////9/7f///////////////////////////////////////3/u////////////////////////////////////////fw=="), B3(I6, 33936, "Z+YJaoWuZ7ty8248OvVPpX9SDlGMaAWbq9mDHxnN4FuYL4pCkUQ3cc/7wLWl27XpW8JWOfER8Vmkgj+S1V4cq5iqB9gBW4MSvoUxJMN9DFV0Xb5y/rHegKcG3Jt08ZvBwWmb5IZHvu/GncEPzKEMJG8s6S2qhHRK3KmwXNqI+XZSUT6YbcYxqMgnA7DHf1m/8wvgxkeRp9VRY8oGZykpFIUKtyc4IRsu/G0sTRMNOFNUcwpluwpqdi7JwoGFLHKSoei/oktmGqhwi0vCo1FsxxnoktEkBpnWhTUO9HCgahAWwaQZCGw3Hkx3SCe1vLA0swwcOUqq2E5Pypxb828uaO6Cj3RvY6V4FHjIhAgCx4z6/76Q62xQpPej+b7yeHHGgA=="), B3(I6, 34304, "CMm882fmCWo7p8qEha5nuyv4lP5y82488TYdXzr1T6XRguatf1IOUR9sPiuMaAWba71B+6vZgx95IX4TGc3gWyKuKNeYL4pCzWXvI5FEN3EvO03sz/vAtbzbiYGl27XpOLVI81vCVjkZ0AW28RHxWZtPGa+kgj+SGIFt2tVeHKtCAgOjmKoH2L5vcEUBW4MSjLLkTr6FMSTitP/Vw30MVW+Je/J0Xb5ysZYWO/6x3oA1Esclpwbcm5Qmac908ZvB0krxnsFpm+TjJU84hke+77XVjIvGncEPZZysd8yhDCR1AitZbyzpLYPkpm6qhHRK1PtBvdypsFy1UxGD2oj5dqvfZu5SUT6YEDK0LW3GMag/IfuYyCcDsOQO777Hf1m/wo+oPfML4MYlpwqTR5Gn1W+CA+BRY8oGcG4OCmcpKRT8L9JGhQq3JybJJlw4IRsu7SrEWvxtLE3fs5WdEw04U95jr4tUcwplqLJ3PLsKanbmru1HLsnCgTs1ghSFLHKSZAPxTKHov6IBMEK8S2YaqJGX+NBwi0vCML5UBqNRbMcYUu/WGeiS0RCpZVUkBpnWKiBxV4U1DvS40bsycKBqEMjQ0rgWwaQZU6tBUQhsNx6Z647fTHdIJ6hIm+G1vLA0Y1rJxbMMHDnLikHjSqrYTnPjY3dPypxbo7iy1vNvLmj8su9d7oKPdGAvF0NvY6V4cqvwoRR4yITsOWQaCALHjCgeYyP6/76Q6b2C3utsUKQVecay96P5vitTcuPyeHHGnGEm6s4+J8oHwsAhx7iG0R7r4M3WfdrqeNFu7n9PffW6bxdyqmfwBqaYyKLFfWMKrg35vgSYPxEbRxwTNQtxG4R9BCP1d9sokyTHQHuryjK8vskVCr6ePEwNEJzEZx1DtkI+y77UxUwqfmX8nCl/Wez61jqrb8tfF1hHSowZRGyA"), B3(I6, 35136, "U2lnRWQyNTUxOSBubyBFZDI1NTE5IGNvbGxpc2lvbnMB"), B3(I6, 35200, "0I4BAAEAAAACAAAAAwAAAAQAAAAFAAAABgAAAAcAAAAIAAAACQAAAAoAAAALAAAADAAAAA0=");
                    var yI, wI = (yI = [null, function(A8, I7, g6, C4, B4) {
                      var Q4, i4, f4;
                      return A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, w3 = Q4 = (i4 = w3) - 128 & -64, o3[Q4 >> 2] = 67108863 & (a3[0 | B4] | a3[B4 + 1 | 0] << 8 | a3[B4 + 2 | 0] << 16 | a3[B4 + 3 | 0] << 24), o3[Q4 + 4 >> 2] = (a3[B4 + 3 | 0] | a3[B4 + 4 | 0] << 8 | a3[B4 + 5 | 0] << 16 | a3[B4 + 6 | 0] << 24) >>> 2 & 67108611, o3[Q4 + 8 >> 2] = (a3[B4 + 6 | 0] | a3[B4 + 7 | 0] << 8 | a3[B4 + 8 | 0] << 16 | a3[B4 + 9 | 0] << 24) >>> 4 & 67092735, o3[Q4 + 12 >> 2] = (a3[B4 + 9 | 0] | a3[B4 + 10 | 0] << 8 | a3[B4 + 11 | 0] << 16 | a3[B4 + 12 | 0] << 24) >>> 6 & 66076671, f4 = a3[B4 + 12 | 0] | a3[B4 + 13 | 0] << 8 | a3[B4 + 14 | 0] << 16 | a3[B4 + 15 | 0] << 24, o3[Q4 + 20 >> 2] = 0, o3[Q4 + 24 >> 2] = 0, o3[Q4 + 28 >> 2] = 0, o3[Q4 + 32 >> 2] = 0, o3[Q4 + 36 >> 2] = 0, o3[Q4 + 16 >> 2] = f4 >>> 8 & 1048575, o3[Q4 + 40 >> 2] = a3[B4 + 16 | 0] | a3[B4 + 17 | 0] << 8 | a3[B4 + 18 | 0] << 16 | a3[B4 + 19 | 0] << 24, o3[Q4 + 44 >> 2] = a3[B4 + 20 | 0] | a3[B4 + 21 | 0] << 8 | a3[B4 + 22 | 0] << 16 | a3[B4 + 23 | 0] << 24, o3[Q4 + 48 >> 2] = a3[B4 + 24 | 0] | a3[B4 + 25 | 0] << 8 | a3[B4 + 26 | 0] << 16 | a3[B4 + 27 | 0] << 24, B4 = a3[B4 + 28 | 0] | a3[B4 + 29 | 0] << 8 | a3[B4 + 30 | 0] << 16 | a3[B4 + 31 | 0] << 24, E3[Q4 + 80 | 0] = 0, o3[Q4 + 56 >> 2] = 0, o3[Q4 + 60 >> 2] = 0, o3[Q4 + 52 >> 2] = B4, j2(Q4, I7, g6, C4), $(Q4, A8), w3 = i4, 0;
                    }, function(A8, I7, g6, C4, B4) {
                      var Q4, i4, f4;
                      return A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, w3 = Q4 = (i4 = w3) - 192 & -64, o3[Q4 + 64 >> 2] = 67108863 & (a3[0 | B4] | a3[B4 + 1 | 0] << 8 | a3[B4 + 2 | 0] << 16 | a3[B4 + 3 | 0] << 24), o3[Q4 + 68 >> 2] = (a3[B4 + 3 | 0] | a3[B4 + 4 | 0] << 8 | a3[B4 + 5 | 0] << 16 | a3[B4 + 6 | 0] << 24) >>> 2 & 67108611, o3[Q4 + 72 >> 2] = (a3[B4 + 6 | 0] | a3[B4 + 7 | 0] << 8 | a3[B4 + 8 | 0] << 16 | a3[B4 + 9 | 0] << 24) >>> 4 & 67092735, o3[Q4 + 76 >> 2] = (a3[B4 + 9 | 0] | a3[B4 + 10 | 0] << 8 | a3[B4 + 11 | 0] << 16 | a3[B4 + 12 | 0] << 24) >>> 6 & 66076671, f4 = a3[B4 + 12 | 0] | a3[B4 + 13 | 0] << 8 | a3[B4 + 14 | 0] << 16 | a3[B4 + 15 | 0] << 24, o3[Q4 + 84 >> 2] = 0, o3[Q4 + 88 >> 2] = 0, o3[Q4 + 92 >> 2] = 0, o3[Q4 + 96 >> 2] = 0, o3[Q4 + 100 >> 2] = 0, o3[Q4 + 80 >> 2] = f4 >>> 8 & 1048575, o3[Q4 + 104 >> 2] = a3[B4 + 16 | 0] | a3[B4 + 17 | 0] << 8 | a3[B4 + 18 | 0] << 16 | a3[B4 + 19 | 0] << 24, o3[Q4 + 108 >> 2] = a3[B4 + 20 | 0] | a3[B4 + 21 | 0] << 8 | a3[B4 + 22 | 0] << 16 | a3[B4 + 23 | 0] << 24, o3[Q4 + 112 >> 2] = a3[B4 + 24 | 0] | a3[B4 + 25 | 0] << 8 | a3[B4 + 26 | 0] << 16 | a3[B4 + 27 | 0] << 24, B4 = a3[B4 + 28 | 0] | a3[B4 + 29 | 0] << 8 | a3[B4 + 30 | 0] << 16 | a3[B4 + 31 | 0] << 24, E3[Q4 + 144 | 0] = 0, o3[Q4 + 120 >> 2] = 0, o3[Q4 + 124 >> 2] = 0, o3[Q4 + 116 >> 2] = B4, j2(B4 = Q4 - -64 | 0, I7, g6, C4), $(B4, I7 = Q4 + 48 | 0), A8 = CA(A8, I7), w3 = i4, 0 | A8;
                    }, function(A8, I7) {
                      var g6;
                      return I7 |= 0, o3[(A8 |= 0) >> 2] = 67108863 & (a3[0 | I7] | a3[I7 + 1 | 0] << 8 | a3[I7 + 2 | 0] << 16 | a3[I7 + 3 | 0] << 24), o3[A8 + 4 >> 2] = (a3[I7 + 3 | 0] | a3[I7 + 4 | 0] << 8 | a3[I7 + 5 | 0] << 16 | a3[I7 + 6 | 0] << 24) >>> 2 & 67108611, o3[A8 + 8 >> 2] = (a3[I7 + 6 | 0] | a3[I7 + 7 | 0] << 8 | a3[I7 + 8 | 0] << 16 | a3[I7 + 9 | 0] << 24) >>> 4 & 67092735, o3[A8 + 12 >> 2] = (a3[I7 + 9 | 0] | a3[I7 + 10 | 0] << 8 | a3[I7 + 11 | 0] << 16 | a3[I7 + 12 | 0] << 24) >>> 6 & 66076671, g6 = a3[I7 + 12 | 0] | a3[I7 + 13 | 0] << 8 | a3[I7 + 14 | 0] << 16 | a3[I7 + 15 | 0] << 24, o3[A8 + 20 >> 2] = 0, o3[A8 + 24 >> 2] = 0, o3[A8 + 28 >> 2] = 0, o3[A8 + 32 >> 2] = 0, o3[A8 + 36 >> 2] = 0, o3[A8 + 16 >> 2] = g6 >>> 8 & 1048575, o3[A8 + 40 >> 2] = a3[I7 + 16 | 0] | a3[I7 + 17 | 0] << 8 | a3[I7 + 18 | 0] << 16 | a3[I7 + 19 | 0] << 24, o3[A8 + 44 >> 2] = a3[I7 + 20 | 0] | a3[I7 + 21 | 0] << 8 | a3[I7 + 22 | 0] << 16 | a3[I7 + 23 | 0] << 24, o3[A8 + 48 >> 2] = a3[I7 + 24 | 0] | a3[I7 + 25 | 0] << 8 | a3[I7 + 26 | 0] << 16 | a3[I7 + 27 | 0] << 24, I7 = a3[I7 + 28 | 0] | a3[I7 + 29 | 0] << 8 | a3[I7 + 30 | 0] << 16 | a3[I7 + 31 | 0] << 24, E3[A8 + 80 | 0] = 0, o3[A8 + 56 >> 2] = 0, o3[A8 + 60 >> 2] = 0, o3[A8 + 52 >> 2] = I7, 0;
                    }, function(A8, I7, g6, C4) {
                      return j2(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0), 0;
                    }, function(A8, I7) {
                      return $(A8 |= 0, I7 |= 0), 0;
                    }, function(A8, I7, g6) {
                      A8 |= 0, I7 |= 0, g6 |= 0;
                      var C4, B4 = 0, Q4 = 0, i4 = 0, f4 = 0, c4 = 0, e4 = 0, r4 = 0, D4 = 0, t4 = 0, y4 = 0, n4 = 0, s4 = 0, k4 = 0, F4 = 0, S4 = 0, G4 = 0, _4 = 0, p4 = 0, N4 = 0, J4 = 0, U4 = 0, Y4 = 0, d4 = 0, K4 = 0, b4 = 0, P4 = 0, v4 = 0, R4 = 0, u4 = 0, x4 = 0, m4 = 0, l4 = 0, z4 = 0, q4 = 0, X3 = 0, j3 = 0, T2 = 0, V2 = 0, Z2 = 0, W2 = 0, $2 = 0, AA2 = 0, gA2 = 0, CA2 = 0, BA2 = 0, QA2 = 0, iA2 = 0, EA2 = 0, oA2 = 0, aA2 = 0, fA2 = 0, cA2 = 0, eA2 = 0, rA2 = 0, DA2 = 0, tA2 = 0, yA2 = 0, wA2 = 0, hA2 = 0, nA2 = 0, sA2 = 0, FA2 = 0, SA2 = 0, HA2 = 0, GA2 = 0, _A2 = 0;
                      for (w3 = C4 = w3 - 368 | 0; n4 = (i4 = a3[g6 + B4 | 0]) ^ a3[0 | (c4 = B4 + 33680 | 0)] | n4, y4 = i4 ^ a3[c4 + 192 | 0] | y4, t4 = i4 ^ a3[c4 + 160 | 0] | t4, D4 = i4 ^ a3[c4 + 128 | 0] | D4, f4 = i4 ^ a3[c4 + 96 | 0] | f4, e4 = i4 ^ a3[c4 - -64 | 0] | e4, Q4 = i4 ^ a3[c4 + 32 | 0] | Q4, 31 != (0 | (B4 = B4 + 1 | 0)); )
                        ;
                      if (B4 = -1, !(256 & ((255 & ((i4 = 127 ^ (c4 = 127 & a3[g6 + 31 | 0])) | y4)) - 1 | (255 & (i4 | t4)) - 1 | (255 & (i4 | D4)) - 1 | (255 & (87 ^ c4 | f4)) - 1 | (255 & (e4 | c4)) - 1 | (255 & (Q4 | c4)) - 1 | (255 & (c4 | n4)) - 1))) {
                        for (B4 = I7, I7 = a3[I7 + 28 | 0] | a3[I7 + 29 | 0] << 8 | a3[I7 + 30 | 0] << 16 | a3[I7 + 31 | 0] << 24, o3[C4 + 360 >> 2] = a3[B4 + 24 | 0] | a3[B4 + 25 | 0] << 8 | a3[B4 + 26 | 0] << 16 | a3[B4 + 27 | 0] << 24, o3[C4 + 364 >> 2] = I7, I7 = a3[B4 + 20 | 0] | a3[B4 + 21 | 0] << 8 | a3[B4 + 22 | 0] << 16 | a3[B4 + 23 | 0] << 24, o3[C4 + 352 >> 2] = a3[B4 + 16 | 0] | a3[B4 + 17 | 0] << 8 | a3[B4 + 18 | 0] << 16 | a3[B4 + 19 | 0] << 24, o3[C4 + 356 >> 2] = I7, Q4 = a3[B4 + 4 | 0] | a3[B4 + 5 | 0] << 8 | a3[B4 + 6 | 0] << 16 | a3[B4 + 7 | 0] << 24, I7 = a3[0 | B4] | a3[B4 + 1 | 0] << 8 | a3[B4 + 2 | 0] << 16 | a3[B4 + 3 | 0] << 24, o3[C4 + 336 >> 2] = I7, o3[C4 + 340 >> 2] = Q4, Q4 = a3[B4 + 12 | 0] | a3[B4 + 13 | 0] << 8 | a3[B4 + 14 | 0] << 16 | a3[B4 + 15 | 0] << 24, o3[C4 + 344 >> 2] = a3[B4 + 8 | 0] | a3[B4 + 9 | 0] << 8 | a3[B4 + 10 | 0] << 16 | a3[B4 + 11 | 0] << 24, o3[C4 + 348 >> 2] = Q4, E3[C4 + 336 | 0] = 248 & I7, E3[C4 + 367 | 0] = 63 & a3[C4 + 367 | 0] | 64, L3(C4 + 288 | 0, g6), o3[C4 + 260 >> 2] = 0, o3[C4 + 264 >> 2] = 0, o3[C4 + 268 >> 2] = 0, o3[C4 + 272 >> 2] = 0, o3[C4 + 276 >> 2] = 0, o3[C4 + 208 >> 2] = 0, o3[C4 + 212 >> 2] = 0, o3[C4 + 216 >> 2] = 0, o3[C4 + 220 >> 2] = 0, o3[C4 + 224 >> 2] = 0, o3[C4 + 228 >> 2] = 0, I7 = o3[C4 + 308 >> 2], o3[C4 + 160 >> 2] = o3[C4 + 304 >> 2], o3[C4 + 164 >> 2] = I7, I7 = o3[C4 + 316 >> 2], o3[C4 + 168 >> 2] = o3[C4 + 312 >> 2], o3[C4 + 172 >> 2] = I7, I7 = o3[C4 + 324 >> 2], o3[C4 + 176 >> 2] = o3[C4 + 320 >> 2], o3[C4 + 180 >> 2] = I7, o3[C4 + 244 >> 2] = 0, o3[C4 + 248 >> 2] = 0, o3[C4 + 240 >> 2] = 1, o3[C4 + 252 >> 2] = 0, o3[C4 + 256 >> 2] = 0, o3[C4 + 192 >> 2] = 0, o3[C4 + 196 >> 2] = 0, o3[C4 + 200 >> 2] = 0, o3[C4 + 204 >> 2] = 0, I7 = o3[C4 + 292 >> 2], o3[C4 + 144 >> 2] = o3[C4 + 288 >> 2], o3[C4 + 148 >> 2] = I7, I7 = o3[C4 + 300 >> 2], o3[C4 + 152 >> 2] = o3[C4 + 296 >> 2], o3[C4 + 156 >> 2] = I7, o3[C4 + 116 >> 2] = 0, o3[C4 + 120 >> 2] = 0, o3[C4 + 124 >> 2] = 0, o3[C4 + 128 >> 2] = 0, o3[C4 + 132 >> 2] = 0, o3[C4 + 100 >> 2] = 0, o3[C4 + 104 >> 2] = 0, o3[C4 + 96 >> 2] = 1, o3[C4 + 108 >> 2] = 0, o3[C4 + 112 >> 2] = 0, g6 = 254; $2 = o3[C4 + 276 >> 2], i4 = o3[C4 + 180 >> 2], AA2 = o3[C4 + 96 >> 2], gA2 = o3[C4 + 192 >> 2], CA2 = o3[C4 + 144 >> 2], BA2 = o3[C4 + 240 >> 2], QA2 = o3[C4 + 100 >> 2], iA2 = o3[C4 + 196 >> 2], EA2 = o3[C4 + 148 >> 2], oA2 = o3[C4 + 244 >> 2], Y4 = o3[C4 + 104 >> 2], aA2 = o3[C4 + 200 >> 2], d4 = o3[C4 + 152 >> 2], fA2 = o3[C4 + 248 >> 2], P4 = o3[C4 + 108 >> 2], cA2 = o3[C4 + 204 >> 2], v4 = o3[C4 + 156 >> 2], eA2 = o3[C4 + 252 >> 2], K4 = o3[C4 + 112 >> 2], rA2 = o3[C4 + 208 >> 2], J4 = o3[C4 + 160 >> 2], DA2 = o3[C4 + 256 >> 2], n4 = o3[C4 + 116 >> 2], tA2 = o3[C4 + 212 >> 2], r4 = o3[C4 + 164 >> 2], yA2 = o3[C4 + 260 >> 2], y4 = o3[C4 + 120 >> 2], wA2 = o3[C4 + 216 >> 2], t4 = o3[C4 + 168 >> 2], hA2 = o3[C4 + 264 >> 2], D4 = o3[C4 + 124 >> 2], nA2 = o3[C4 + 220 >> 2], f4 = o3[C4 + 172 >> 2], sA2 = o3[C4 + 268 >> 2], e4 = o3[C4 + 128 >> 2], FA2 = o3[C4 + 224 >> 2], Q4 = o3[C4 + 176 >> 2], N4 = o3[C4 + 272 >> 2], SA2 = g6, U4 = (G4 = (I7 = 0 - ((I7 = W2) ^ (W2 = a3[(HA2 = C4 + 336 | 0) + (g6 >>> 3 | 0) | 0] >>> (7 & g6) & 1)) | 0) & ((B4 = o3[C4 + 132 >> 2]) ^ (j3 = o3[C4 + 228 >> 2]))) ^ B4, o3[C4 + 132 >> 2] = U4, T2 = i4 ^ (_4 = I7 & (i4 ^ $2)), o3[C4 + 84 >> 2] = T2 - U4, b4 = e4 ^ (k4 = I7 & (e4 ^ FA2)), o3[C4 + 128 >> 2] = b4, V2 = (p4 = I7 & (Q4 ^ N4)) ^ Q4, o3[C4 + 80 >> 2] = V2 - b4, u4 = D4 ^ (F4 = I7 & (D4 ^ nA2)), o3[C4 + 124 >> 2] = u4, GA2 = f4 ^ (S4 = I7 & (f4 ^ sA2)), o3[C4 + 76 >> 2] = GA2 - u4, x4 = y4 ^ (s4 = I7 & (y4 ^ wA2)), o3[C4 + 120 >> 2] = x4, _A2 = t4 ^ (c4 = I7 & (t4 ^ hA2)), o3[C4 + 72 >> 2] = _A2 - x4, m4 = n4 ^ (i4 = I7 & (n4 ^ tA2)), o3[C4 + 116 >> 2] = m4, l4 = r4 ^ (n4 = I7 & (r4 ^ yA2)), o3[C4 + 68 >> 2] = l4 - m4, z4 = K4 ^ (y4 = I7 & (K4 ^ rA2)), o3[C4 + 112 >> 2] = z4, R4 = J4 ^ (t4 = I7 & (J4 ^ DA2)), o3[C4 + 64 >> 2] = R4 - z4, q4 = P4 ^ (D4 = I7 & (P4 ^ cA2)), o3[C4 + 108 >> 2] = q4, Z2 = v4 ^ (f4 = I7 & (v4 ^ eA2)), o3[C4 + 60 >> 2] = Z2 - q4, X3 = Y4 ^ (e4 = I7 & (Y4 ^ aA2)), o3[C4 + 104 >> 2] = X3, P4 = d4 ^ (Q4 = I7 & (d4 ^ fA2)), o3[C4 + 56 >> 2] = P4 - X3, Y4 = QA2 ^ (B4 = I7 & (QA2 ^ iA2)), o3[C4 + 100 >> 2] = Y4, v4 = EA2 ^ (g6 = I7 & (EA2 ^ oA2)), o3[C4 + 52 >> 2] = v4 - Y4, d4 = AA2 ^ (K4 = I7 & (AA2 ^ gA2)), o3[C4 + 96 >> 2] = d4, J4 = (I7 &= CA2 ^ BA2) ^ CA2, o3[C4 + 48 >> 2] = J4 - d4, r4 = _4 ^ $2, G4 ^= j3, o3[C4 + 36 >> 2] = r4 - G4, _4 = p4 ^ N4, k4 ^= FA2, o3[C4 + 32 >> 2] = _4 - k4, p4 = S4 ^ sA2, F4 ^= nA2, o3[C4 + 28 >> 2] = p4 - F4, S4 = c4 ^ hA2, s4 ^= wA2, o3[C4 + 24 >> 2] = S4 - s4, c4 = n4 ^ yA2, i4 ^= tA2, o3[C4 + 20 >> 2] = c4 - i4, n4 = t4 ^ DA2, y4 ^= rA2, o3[C4 + 16 >> 2] = n4 - y4, t4 = f4 ^ eA2, D4 ^= cA2, o3[C4 + 12 >> 2] = t4 - D4, f4 = Q4 ^ fA2, e4 ^= aA2, o3[C4 + 8 >> 2] = f4 - e4, Q4 = g6 ^ oA2, B4 ^= iA2, o3[C4 + 4 >> 2] = Q4 - B4, g6 = I7 ^ BA2, I7 = K4 ^ gA2, o3[C4 >> 2] = g6 - I7, o3[C4 + 276 >> 2] = r4 + G4, o3[C4 + 272 >> 2] = _4 + k4, o3[C4 + 268 >> 2] = F4 + p4, o3[C4 + 264 >> 2] = s4 + S4, o3[C4 + 260 >> 2] = i4 + c4, o3[C4 + 256 >> 2] = y4 + n4, o3[C4 + 248 >> 2] = f4 + e4, o3[C4 + 244 >> 2] = B4 + Q4, o3[C4 + 240 >> 2] = I7 + g6, o3[C4 + 252 >> 2] = D4 + t4, o3[C4 + 228 >> 2] = U4 + T2, o3[C4 + 224 >> 2] = b4 + V2, o3[C4 + 220 >> 2] = u4 + GA2, o3[C4 + 216 >> 2] = x4 + _A2, o3[C4 + 212 >> 2] = m4 + l4, o3[C4 + 208 >> 2] = R4 + z4, o3[C4 + 204 >> 2] = q4 + Z2, o3[C4 + 200 >> 2] = P4 + X3, o3[C4 + 196 >> 2] = Y4 + v4, o3[C4 + 192 >> 2] = J4 + d4, H3(T2 = C4 + 96 | 0, b4 = C4 + 48 | 0, U4 = C4 + 240 | 0), H3(N4 = C4 + 192 | 0, N4, C4), M3(b4, C4), M3(C4, U4), r4 = o3[C4 + 192 >> 2], G4 = o3[C4 + 96 >> 2], _4 = o3[C4 + 196 >> 2], k4 = o3[C4 + 100 >> 2], p4 = o3[C4 + 200 >> 2], F4 = o3[C4 + 104 >> 2], S4 = o3[C4 + 204 >> 2], s4 = o3[C4 + 108 >> 2], c4 = o3[C4 + 208 >> 2], i4 = o3[C4 + 112 >> 2], n4 = o3[C4 + 212 >> 2], y4 = o3[C4 + 116 >> 2], t4 = o3[C4 + 216 >> 2], D4 = o3[C4 + 120 >> 2], f4 = o3[C4 + 220 >> 2], e4 = o3[C4 + 124 >> 2], Q4 = o3[C4 + 224 >> 2], B4 = o3[C4 + 128 >> 2], g6 = o3[C4 + 228 >> 2], I7 = o3[C4 + 132 >> 2], o3[C4 + 180 >> 2] = g6 + I7, o3[C4 + 176 >> 2] = B4 + Q4, o3[C4 + 172 >> 2] = f4 + e4, o3[C4 + 168 >> 2] = D4 + t4, o3[C4 + 164 >> 2] = y4 + n4, o3[C4 + 160 >> 2] = i4 + c4, o3[C4 + 156 >> 2] = s4 + S4, o3[C4 + 152 >> 2] = F4 + p4, o3[C4 + 148 >> 2] = _4 + k4, o3[C4 + 144 >> 2] = r4 + G4, o3[C4 + 228 >> 2] = I7 - g6, o3[C4 + 224 >> 2] = B4 - Q4, o3[C4 + 220 >> 2] = e4 - f4, o3[C4 + 216 >> 2] = D4 - t4, o3[C4 + 212 >> 2] = y4 - n4, o3[C4 + 208 >> 2] = i4 - c4, o3[C4 + 204 >> 2] = s4 - S4, o3[C4 + 200 >> 2] = F4 - p4, o3[C4 + 196 >> 2] = k4 - _4, o3[C4 + 192 >> 2] = G4 - r4, H3(U4, C4, b4), u4 = o3[C4 + 52 >> 2], s4 = o3[C4 + 4 >> 2], x4 = o3[C4 + 56 >> 2], c4 = o3[C4 + 8 >> 2], m4 = o3[C4 + 64 >> 2], t4 = o3[C4 + 16 >> 2], z4 = o3[C4 + 60 >> 2], D4 = o3[C4 + 12 >> 2], q4 = o3[C4 + 72 >> 2], f4 = o3[C4 + 24 >> 2], X3 = o3[C4 + 68 >> 2], e4 = o3[C4 + 20 >> 2], Y4 = o3[C4 + 80 >> 2], Q4 = o3[C4 + 32 >> 2], d4 = o3[C4 + 76 >> 2], B4 = o3[C4 + 28 >> 2], j3 = o3[C4 + 84 >> 2], I7 = o3[C4 + 36 >> 2], V2 = o3[C4 + 48 >> 2], g6 = o3[C4 >> 2] - V2 | 0, o3[C4 >> 2] = g6, I7 = I7 - j3 | 0, o3[C4 + 36 >> 2] = I7, K4 = B4 - d4 | 0, o3[C4 + 28 >> 2] = K4, J4 = Q4 - Y4 | 0, o3[C4 + 32 >> 2] = J4, i4 = e4 - X3 | 0, o3[C4 + 20 >> 2] = i4, n4 = f4 - q4 | 0, o3[C4 + 24 >> 2] = n4, y4 = D4 - z4 | 0, o3[C4 + 12 >> 2] = y4, t4 = t4 - m4 | 0, o3[C4 + 16 >> 2] = t4, D4 = c4 - x4 | 0, o3[C4 + 8 >> 2] = D4, Q4 = s4 - u4 | 0, o3[C4 + 4 >> 2] = Q4, M3(N4, N4), I7 = kA(I7, I7 >> 31, 121666, 0), B4 = h3, Z2 = I7, I7 = kA((33554431 & (B4 = (r4 = I7 + 16777216 | 0) >>> 0 < 16777216 ? B4 + 1 | 0 : B4)) << 7 | r4 >>> 25, B4 >> 25, 19, 0), e4 = h3, B4 = I7, I7 = kA(g6, g6 >> 31, 121666, 0), R4 = h3 + e4 | 0, I7 = I7 >>> 0 > (B4 = B4 + I7 | 0) >>> 0 ? R4 + 1 | 0 : R4, g6 = (f4 = B4 + 33554432 | 0) >>> 0 < 33554432 ? I7 + 1 | 0 : I7, G4 = B4 - (-67108864 & f4) | 0, o3[C4 + 96 >> 2] = G4, e4 = kA(Q4, Q4 >> 31, 121666, 0), B4 = h3, B4 = (Q4 = e4 + 16777216 | 0) >>> 0 < 16777216 ? B4 + 1 | 0 : B4, _4 = (e4 - (-33554432 & Q4) | 0) + ((67108863 & g6) << 6 | f4 >>> 26) | 0, o3[C4 + 100 >> 2] = _4, R4 = (I7 = B4) >> 25, B4 = (33554431 & I7) << 7 | Q4 >>> 25, g6 = kA(D4, D4 >> 31, 121666, 0) + B4 | 0, I7 = R4 + h3 | 0, I7 = g6 >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, e4 = (k4 = g6 + 33554432 | 0) >>> 0 < 33554432 ? I7 + 1 | 0 : I7, p4 = g6 - (-67108864 & k4) | 0, o3[C4 + 104 >> 2] = p4, B4 = kA(t4, t4 >> 31, 121666, 0), Q4 = h3, g6 = kA(y4, y4 >> 31, 121666, 0), I7 = h3, l4 = B4, P4 = g6, B4 = (33554431 & (I7 = (F4 = g6 + 16777216 | 0) >>> 0 < 16777216 ? I7 + 1 | 0 : I7)) << 7 | F4 >>> 25, I7 = (I7 >> 25) + Q4 | 0, I7 = (g6 = l4 + B4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = (S4 = g6 + 33554432 | 0) >>> 0 < 33554432 ? I7 + 1 | 0 : I7, s4 = g6 - (-67108864 & S4) | 0, o3[C4 + 112 >> 2] = s4, B4 = kA(n4, n4 >> 31, 121666, 0), f4 = h3, g6 = kA(i4, i4 >> 31, 121666, 0), I7 = h3, l4 = B4, v4 = g6, B4 = (33554431 & (I7 = (c4 = g6 + 16777216 | 0) >>> 0 < 16777216 ? I7 + 1 | 0 : I7)) << 7 | c4 >>> 25, I7 = (I7 >> 25) + f4 | 0, I7 = (g6 = l4 + B4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, B4 = (i4 = g6 + 33554432 | 0) >>> 0 < 33554432 ? I7 + 1 | 0 : I7, n4 = g6 - (-67108864 & i4) | 0, o3[C4 + 120 >> 2] = n4, f4 = kA(J4, J4 >> 31, 121666, 0), D4 = h3, g6 = kA(K4, K4 >> 31, 121666, 0), I7 = h3, J4 = g6, g6 = (33554431 & (I7 = (y4 = g6 + 16777216 | 0) >>> 0 < 16777216 ? I7 + 1 | 0 : I7)) << 7 | y4 >>> 25, I7 = (I7 >> 25) + D4 | 0, I7 = g6 >>> 0 > (f4 = g6 + f4 | 0) >>> 0 ? I7 + 1 | 0 : I7, g6 = (t4 = f4 + 33554432 | 0) >>> 0 < 33554432 ? I7 + 1 | 0 : I7, D4 = f4 - (-67108864 & t4) | 0, o3[C4 + 128 >> 2] = D4, f4 = (e4 = P4 + ((67108863 & e4) << 6 | k4 >>> 26) | 0) - (-33554432 & F4) | 0, o3[C4 + 108 >> 2] = f4, e4 = (Q4 = v4 + ((67108863 & Q4) << 6 | S4 >>> 26) | 0) - (-33554432 & c4) | 0, o3[C4 + 116 >> 2] = e4, Q4 = (I7 = J4 + ((67108863 & B4) << 6 | i4 >>> 26) | 0) - (-33554432 & y4) | 0, o3[C4 + 124 >> 2] = Q4, g6 = (g6 = Z2 + ((67108863 & g6) << 6 | t4 >>> 26) | 0) - (-33554432 & r4) | 0, o3[C4 + 132 >> 2] = g6, M3(I7 = C4 + 144 | 0, I7), o3[C4 + 84 >> 2] = g6 + j3, o3[C4 + 80 >> 2] = D4 + Y4, o3[C4 + 76 >> 2] = Q4 + d4, o3[C4 + 72 >> 2] = n4 + q4, o3[C4 + 68 >> 2] = e4 + X3, o3[C4 + 64 >> 2] = s4 + m4, o3[C4 + 60 >> 2] = f4 + z4, o3[C4 + 56 >> 2] = p4 + x4, o3[C4 + 52 >> 2] = _4 + u4, o3[C4 + 48 >> 2] = G4 + V2, g6 = SA2 - 1 | 0, H3(T2, C4 + 288 | 0, N4), H3(N4, C4, b4), SA2; )
                          ;
                        n4 = o3[C4 + 144 >> 2], G4 = o3[C4 + 240 >> 2], y4 = o3[C4 + 148 >> 2], _4 = o3[C4 + 244 >> 2], t4 = o3[C4 + 152 >> 2], k4 = o3[C4 + 248 >> 2], D4 = o3[C4 + 156 >> 2], p4 = o3[C4 + 252 >> 2], f4 = o3[C4 + 160 >> 2], F4 = o3[C4 + 256 >> 2], e4 = o3[C4 + 164 >> 2], S4 = o3[C4 + 260 >> 2], Q4 = o3[C4 + 168 >> 2], s4 = o3[C4 + 264 >> 2], B4 = o3[C4 + 172 >> 2], c4 = o3[C4 + 268 >> 2], g6 = o3[C4 + 176 >> 2], i4 = o3[C4 + 272 >> 2], r4 = 0 - W2 | 0, I7 = o3[C4 + 276 >> 2], o3[C4 + 276 >> 2] = r4 & (I7 ^ o3[C4 + 180 >> 2]) ^ I7, o3[C4 + 272 >> 2] = i4 ^ r4 & (g6 ^ i4), o3[C4 + 268 >> 2] = c4 ^ r4 & (B4 ^ c4), o3[C4 + 264 >> 2] = s4 ^ r4 & (Q4 ^ s4), o3[C4 + 260 >> 2] = S4 ^ r4 & (e4 ^ S4), o3[C4 + 256 >> 2] = F4 ^ r4 & (f4 ^ F4), o3[C4 + 252 >> 2] = p4 ^ r4 & (D4 ^ p4), o3[C4 + 248 >> 2] = k4 ^ r4 & (t4 ^ k4), o3[C4 + 244 >> 2] = _4 ^ r4 & (y4 ^ _4), o3[C4 + 240 >> 2] = G4 ^ r4 & (n4 ^ G4), G4 = o3[C4 + 192 >> 2], n4 = o3[C4 + 96 >> 2], _4 = o3[C4 + 196 >> 2], y4 = o3[C4 + 100 >> 2], k4 = o3[C4 + 200 >> 2], t4 = o3[C4 + 104 >> 2], p4 = o3[C4 + 204 >> 2], D4 = o3[C4 + 108 >> 2], F4 = o3[C4 + 208 >> 2], f4 = o3[C4 + 112 >> 2], S4 = o3[C4 + 212 >> 2], e4 = o3[C4 + 116 >> 2], s4 = o3[C4 + 216 >> 2], Q4 = o3[C4 + 120 >> 2], c4 = o3[C4 + 220 >> 2], B4 = o3[C4 + 124 >> 2], i4 = o3[C4 + 224 >> 2], g6 = o3[C4 + 128 >> 2], I7 = o3[C4 + 228 >> 2], o3[C4 + 228 >> 2] = r4 & (I7 ^ o3[C4 + 132 >> 2]) ^ I7, o3[C4 + 224 >> 2] = i4 ^ r4 & (g6 ^ i4), o3[C4 + 220 >> 2] = c4 ^ r4 & (B4 ^ c4), o3[C4 + 216 >> 2] = s4 ^ r4 & (Q4 ^ s4), o3[C4 + 212 >> 2] = S4 ^ r4 & (e4 ^ S4), o3[C4 + 208 >> 2] = F4 ^ r4 & (f4 ^ F4), o3[C4 + 204 >> 2] = p4 ^ r4 & (D4 ^ p4), o3[C4 + 200 >> 2] = k4 ^ r4 & (t4 ^ k4), o3[C4 + 196 >> 2] = _4 ^ r4 & (y4 ^ _4), o3[C4 + 192 >> 2] = G4 ^ r4 & (n4 ^ G4), O(N4, N4), H3(U4, U4, N4), IA(A8, U4), iI(HA2, 32), B4 = 0;
                      }
                      return w3 = C4 + 368 | 0, 0 | B4;
                    }, function(A8, I7) {
                      var g6, C4, B4, Q4, i4, f4, c4, e4, r4, D4, t4, y4, h4, n4, s4, k4, F4, S4, G4, _4;
                      return I7 |= 0, w3 = g6 = w3 - 304 | 0, E3[0 | (A8 |= 0)] = a3[0 | I7], E3[A8 + 1 | 0] = a3[I7 + 1 | 0], E3[A8 + 2 | 0] = a3[I7 + 2 | 0], E3[A8 + 3 | 0] = a3[I7 + 3 | 0], E3[A8 + 4 | 0] = a3[I7 + 4 | 0], E3[A8 + 5 | 0] = a3[I7 + 5 | 0], E3[A8 + 6 | 0] = a3[I7 + 6 | 0], E3[A8 + 7 | 0] = a3[I7 + 7 | 0], E3[A8 + 8 | 0] = a3[I7 + 8 | 0], E3[A8 + 9 | 0] = a3[I7 + 9 | 0], E3[A8 + 10 | 0] = a3[I7 + 10 | 0], E3[A8 + 11 | 0] = a3[I7 + 11 | 0], E3[A8 + 12 | 0] = a3[I7 + 12 | 0], E3[A8 + 13 | 0] = a3[I7 + 13 | 0], E3[A8 + 14 | 0] = a3[I7 + 14 | 0], E3[A8 + 15 | 0] = a3[I7 + 15 | 0], E3[A8 + 16 | 0] = a3[I7 + 16 | 0], E3[A8 + 17 | 0] = a3[I7 + 17 | 0], E3[A8 + 18 | 0] = a3[I7 + 18 | 0], E3[A8 + 19 | 0] = a3[I7 + 19 | 0], E3[A8 + 20 | 0] = a3[I7 + 20 | 0], E3[A8 + 21 | 0] = a3[I7 + 21 | 0], E3[A8 + 22 | 0] = a3[I7 + 22 | 0], E3[A8 + 23 | 0] = a3[I7 + 23 | 0], E3[A8 + 24 | 0] = a3[I7 + 24 | 0], E3[A8 + 25 | 0] = a3[I7 + 25 | 0], E3[A8 + 26 | 0] = a3[I7 + 26 | 0], E3[A8 + 27 | 0] = a3[I7 + 27 | 0], E3[A8 + 28 | 0] = a3[I7 + 28 | 0], E3[A8 + 29 | 0] = a3[I7 + 29 | 0], E3[A8 + 30 | 0] = a3[I7 + 30 | 0], I7 = a3[I7 + 31 | 0], E3[0 | A8] = 248 & a3[0 | A8], E3[A8 + 31 | 0] = 63 & I7 | 64, u3(g6 + 48 | 0, A8), I7 = o3[g6 + 132 >> 2], C4 = o3[g6 + 92 >> 2], B4 = o3[g6 + 136 >> 2], Q4 = o3[g6 + 96 >> 2], i4 = o3[g6 + 140 >> 2], f4 = o3[g6 + 100 >> 2], c4 = o3[g6 + 144 >> 2], e4 = o3[g6 + 104 >> 2], r4 = o3[g6 + 148 >> 2], D4 = o3[g6 + 108 >> 2], t4 = o3[g6 + 152 >> 2], y4 = o3[g6 + 112 >> 2], h4 = o3[g6 + 156 >> 2], n4 = o3[g6 + 116 >> 2], s4 = o3[g6 + 160 >> 2], k4 = o3[g6 + 120 >> 2], F4 = o3[g6 + 128 >> 2], S4 = o3[g6 + 88 >> 2], G4 = o3[g6 + 124 >> 2], _4 = o3[g6 + 164 >> 2], o3[g6 + 292 >> 2] = G4 + _4, o3[g6 + 288 >> 2] = s4 + k4, o3[g6 + 284 >> 2] = h4 + n4, o3[g6 + 280 >> 2] = t4 + y4, o3[g6 + 276 >> 2] = r4 + D4, o3[g6 + 272 >> 2] = c4 + e4, o3[g6 + 268 >> 2] = i4 + f4, o3[g6 + 264 >> 2] = B4 + Q4, o3[g6 + 260 >> 2] = I7 + C4, o3[g6 + 256 >> 2] = F4 + S4, o3[g6 + 244 >> 2] = _4 - G4, o3[g6 + 240 >> 2] = s4 - k4, o3[g6 + 236 >> 2] = h4 - n4, o3[g6 + 232 >> 2] = t4 - y4, o3[g6 + 228 >> 2] = r4 - D4, o3[g6 + 224 >> 2] = c4 - e4, o3[g6 + 220 >> 2] = i4 - f4, o3[g6 + 216 >> 2] = B4 - Q4, o3[g6 + 212 >> 2] = I7 - C4, o3[g6 + 208 >> 2] = F4 - S4, O(I7 = g6 + 208 | 0, I7), H3(g6, g6 + 256 | 0, I7), IA(A8, g6), w3 = g6 + 304 | 0, 0;
                    }, function(A8, I7, g6, C4, B4) {
                      A8 |= 0, C4 |= 0, B4 |= 0;
                      var Q4, i4 = 0, f4 = 0, c4 = 0, e4 = 0;
                      if (w3 = Q4 = w3 - 112 | 0, (I7 |= 0) | (g6 |= 0)) {
                        i4 = a3[B4 + 28 | 0] | a3[B4 + 29 | 0] << 8 | a3[B4 + 30 | 0] << 16 | a3[B4 + 31 | 0] << 24, o3[Q4 + 24 >> 2] = a3[B4 + 24 | 0] | a3[B4 + 25 | 0] << 8 | a3[B4 + 26 | 0] << 16 | a3[B4 + 27 | 0] << 24, o3[Q4 + 28 >> 2] = i4, i4 = a3[B4 + 20 | 0] | a3[B4 + 21 | 0] << 8 | a3[B4 + 22 | 0] << 16 | a3[B4 + 23 | 0] << 24, o3[Q4 + 16 >> 2] = a3[B4 + 16 | 0] | a3[B4 + 17 | 0] << 8 | a3[B4 + 18 | 0] << 16 | a3[B4 + 19 | 0] << 24, o3[Q4 + 20 >> 2] = i4, i4 = a3[B4 + 4 | 0] | a3[B4 + 5 | 0] << 8 | a3[B4 + 6 | 0] << 16 | a3[B4 + 7 | 0] << 24, o3[Q4 >> 2] = a3[0 | B4] | a3[B4 + 1 | 0] << 8 | a3[B4 + 2 | 0] << 16 | a3[B4 + 3 | 0] << 24, o3[Q4 + 4 >> 2] = i4, i4 = a3[B4 + 12 | 0] | a3[B4 + 13 | 0] << 8 | a3[B4 + 14 | 0] << 16 | a3[B4 + 15 | 0] << 24, o3[Q4 + 8 >> 2] = a3[B4 + 8 | 0] | a3[B4 + 9 | 0] << 8 | a3[B4 + 10 | 0] << 16 | a3[B4 + 11 | 0] << 24, o3[Q4 + 12 >> 2] = i4, B4 = a3[0 | C4] | a3[C4 + 1 | 0] << 8 | a3[C4 + 2 | 0] << 16 | a3[C4 + 3 | 0] << 24, C4 = a3[C4 + 4 | 0] | a3[C4 + 5 | 0] << 8 | a3[C4 + 6 | 0] << 16 | a3[C4 + 7 | 0] << 24, o3[Q4 + 104 >> 2] = 0, o3[Q4 + 108 >> 2] = 0, o3[Q4 + 96 >> 2] = B4, o3[Q4 + 100 >> 2] = C4;
                        A: {
                          if (!g6 & I7 >>> 0 >= 64 | g6) {
                            for (; Y3(A8, Q4 + 96 | 0, Q4), C4 = a3[Q4 + 104 | 0] + 1 | 0, E3[Q4 + 104 | 0] = C4, C4 = a3[Q4 + 105 | 0] + (C4 >>> 8 | 0) | 0, E3[Q4 + 105 | 0] = C4, C4 = a3[Q4 + 106 | 0] + (C4 >>> 8 | 0) | 0, E3[Q4 + 106 | 0] = C4, C4 = a3[Q4 + 107 | 0] + (C4 >>> 8 | 0) | 0, E3[Q4 + 107 | 0] = C4, C4 = a3[Q4 + 108 | 0] + (C4 >>> 8 | 0) | 0, E3[Q4 + 108 | 0] = C4, C4 = a3[Q4 + 109 | 0] + (C4 >>> 8 | 0) | 0, E3[Q4 + 109 | 0] = C4, C4 = a3[Q4 + 110 | 0] + (C4 >>> 8 | 0) | 0, E3[Q4 + 110 | 0] = C4, E3[Q4 + 111 | 0] = a3[Q4 + 111 | 0] + (C4 >>> 8 | 0), A8 = A8 - -64 | 0, g6 = g6 - 1 | 0, !(g6 = (I7 = I7 + -64 | 0) >>> 0 < 4294967232 ? g6 + 1 | 0 : g6) & I7 >>> 0 > 63 | g6; )
                              ;
                            if (!(I7 | g6))
                              break A;
                          }
                          if (C4 = 0, Y3(Q4 + 32 | 0, Q4 + 96 | 0, Q4), g6 = 3 & I7, B4 = 0, I7 - 1 >>> 0 >= 3)
                            for (i4 = -4 & I7, I7 = 0; f4 = c4 = Q4 + 32 | 0, E3[A8 + B4 | 0] = a3[f4 + B4 | 0], E3[(e4 = 1 | B4) + A8 | 0] = a3[f4 + e4 | 0], E3[(f4 = 2 | B4) + A8 | 0] = a3[f4 + c4 | 0], E3[(f4 = 3 | B4) + A8 | 0] = a3[f4 + (Q4 + 32 | 0) | 0], B4 = B4 + 4 | 0, (0 | i4) != (0 | (I7 = I7 + 4 | 0)); )
                              ;
                          if (g6)
                            for (; E3[A8 + B4 | 0] = a3[(Q4 + 32 | 0) + B4 | 0], B4 = B4 + 1 | 0, (0 | g6) != (0 | (C4 = C4 + 1 | 0)); )
                              ;
                        }
                        iI(Q4 + 32 | 0, 64), iI(Q4, 32);
                      }
                      return w3 = Q4 + 112 | 0, 0;
                    }, function(A8, I7, g6, C4, B4, Q4, i4, f4) {
                      A8 |= 0, I7 |= 0, B4 |= 0, Q4 |= 0, i4 |= 0, f4 |= 0;
                      var c4, e4 = 0;
                      if (w3 = c4 = w3 - 112 | 0, (g6 |= 0) | (C4 |= 0)) {
                        e4 = a3[f4 + 28 | 0] | a3[f4 + 29 | 0] << 8 | a3[f4 + 30 | 0] << 16 | a3[f4 + 31 | 0] << 24, o3[c4 + 24 >> 2] = a3[f4 + 24 | 0] | a3[f4 + 25 | 0] << 8 | a3[f4 + 26 | 0] << 16 | a3[f4 + 27 | 0] << 24, o3[c4 + 28 >> 2] = e4, e4 = a3[f4 + 20 | 0] | a3[f4 + 21 | 0] << 8 | a3[f4 + 22 | 0] << 16 | a3[f4 + 23 | 0] << 24, o3[c4 + 16 >> 2] = a3[f4 + 16 | 0] | a3[f4 + 17 | 0] << 8 | a3[f4 + 18 | 0] << 16 | a3[f4 + 19 | 0] << 24, o3[c4 + 20 >> 2] = e4, e4 = a3[f4 + 4 | 0] | a3[f4 + 5 | 0] << 8 | a3[f4 + 6 | 0] << 16 | a3[f4 + 7 | 0] << 24, o3[c4 >> 2] = a3[0 | f4] | a3[f4 + 1 | 0] << 8 | a3[f4 + 2 | 0] << 16 | a3[f4 + 3 | 0] << 24, o3[c4 + 4 >> 2] = e4, e4 = a3[f4 + 12 | 0] | a3[f4 + 13 | 0] << 8 | a3[f4 + 14 | 0] << 16 | a3[f4 + 15 | 0] << 24, o3[c4 + 8 >> 2] = a3[f4 + 8 | 0] | a3[f4 + 9 | 0] << 8 | a3[f4 + 10 | 0] << 16 | a3[f4 + 11 | 0] << 24, o3[c4 + 12 >> 2] = e4, f4 = a3[B4 + 4 | 0] | a3[B4 + 5 | 0] << 8 | a3[B4 + 6 | 0] << 16 | a3[B4 + 7 | 0] << 24, o3[c4 + 96 >> 2] = a3[0 | B4] | a3[B4 + 1 | 0] << 8 | a3[B4 + 2 | 0] << 16 | a3[B4 + 3 | 0] << 24, o3[c4 + 100 >> 2] = f4, E3[c4 + 104 | 0] = Q4, E3[c4 + 111 | 0] = i4 >>> 24, E3[c4 + 110 | 0] = i4 >>> 16, E3[c4 + 109 | 0] = i4 >>> 8, E3[c4 + 108 | 0] = i4, E3[c4 + 107 | 0] = (16777215 & i4) << 8 | Q4 >>> 24, E3[c4 + 106 | 0] = (65535 & i4) << 16 | Q4 >>> 16, E3[c4 + 105 | 0] = (255 & i4) << 24 | Q4 >>> 8;
                        A: {
                          if (!C4 & g6 >>> 0 >= 64 | C4) {
                            for (; ; ) {
                              for (f4 = 0, Y3(c4 + 32 | 0, c4 + 96 | 0, c4); Q4 = c4 + 32 | 0, E3[A8 + f4 | 0] = a3[Q4 + f4 | 0] ^ a3[I7 + f4 | 0], E3[(B4 = 1 | f4) + A8 | 0] = a3[B4 + Q4 | 0] ^ a3[I7 + B4 | 0], 64 != (0 | (f4 = f4 + 2 | 0)); )
                                ;
                              if (B4 = a3[c4 + 104 | 0] + 1 | 0, E3[c4 + 104 | 0] = B4, B4 = a3[c4 + 105 | 0] + (B4 >>> 8 | 0) | 0, E3[c4 + 105 | 0] = B4, B4 = a3[c4 + 106 | 0] + (B4 >>> 8 | 0) | 0, E3[c4 + 106 | 0] = B4, B4 = a3[c4 + 107 | 0] + (B4 >>> 8 | 0) | 0, E3[c4 + 107 | 0] = B4, B4 = a3[c4 + 108 | 0] + (B4 >>> 8 | 0) | 0, E3[c4 + 108 | 0] = B4, B4 = a3[c4 + 109 | 0] + (B4 >>> 8 | 0) | 0, E3[c4 + 109 | 0] = B4, B4 = a3[c4 + 110 | 0] + (B4 >>> 8 | 0) | 0, E3[c4 + 110 | 0] = B4, E3[c4 + 111 | 0] = a3[c4 + 111 | 0] + (B4 >>> 8 | 0), I7 = I7 - -64 | 0, A8 = A8 - -64 | 0, C4 = C4 - 1 | 0, !(!(C4 = (g6 = g6 + -64 | 0) >>> 0 < 4294967232 ? C4 + 1 | 0 : C4) & g6 >>> 0 > 63 | C4))
                                break;
                            }
                            if (!(g6 | C4))
                              break A;
                          }
                          if (f4 = 0, Y3(c4 + 32 | 0, c4 + 96 | 0, c4), C4 = 1 & g6, 1 != (0 | g6))
                            for (Q4 = -2 & g6, B4 = 0; i4 = c4 + 32 | 0, E3[A8 + f4 | 0] = a3[i4 + f4 | 0] ^ a3[I7 + f4 | 0], E3[(g6 = 1 | f4) + A8 | 0] = a3[g6 + i4 | 0] ^ a3[I7 + g6 | 0], f4 = f4 + 2 | 0, (0 | Q4) != (0 | (B4 = B4 + 2 | 0)); )
                              ;
                          C4 && (E3[A8 + f4 | 0] = a3[(c4 + 32 | 0) + f4 | 0] ^ a3[I7 + f4 | 0]);
                        }
                        iI(c4 + 32 | 0, 64), iI(c4, 32);
                      }
                      return w3 = c4 + 112 | 0, 0;
                    }, function(A8, I7, g6, C4, B4) {
                      var Q4;
                      return A8 |= 0, C4 |= 0, B4 |= 0, w3 = Q4 = w3 + -64 | 0, (I7 |= 0) | (g6 |= 0) && (o3[Q4 + 8 >> 2] = 2036477234, o3[Q4 + 12 >> 2] = 1797285236, o3[Q4 >> 2] = 1634760805, o3[Q4 + 4 >> 2] = 857760878, o3[Q4 + 16 >> 2] = a3[0 | B4] | a3[B4 + 1 | 0] << 8 | a3[B4 + 2 | 0] << 16 | a3[B4 + 3 | 0] << 24, o3[Q4 + 20 >> 2] = a3[B4 + 4 | 0] | a3[B4 + 5 | 0] << 8 | a3[B4 + 6 | 0] << 16 | a3[B4 + 7 | 0] << 24, o3[Q4 + 24 >> 2] = a3[B4 + 8 | 0] | a3[B4 + 9 | 0] << 8 | a3[B4 + 10 | 0] << 16 | a3[B4 + 11 | 0] << 24, o3[Q4 + 28 >> 2] = a3[B4 + 12 | 0] | a3[B4 + 13 | 0] << 8 | a3[B4 + 14 | 0] << 16 | a3[B4 + 15 | 0] << 24, o3[Q4 + 32 >> 2] = a3[B4 + 16 | 0] | a3[B4 + 17 | 0] << 8 | a3[B4 + 18 | 0] << 16 | a3[B4 + 19 | 0] << 24, o3[Q4 + 36 >> 2] = a3[B4 + 20 | 0] | a3[B4 + 21 | 0] << 8 | a3[B4 + 22 | 0] << 16 | a3[B4 + 23 | 0] << 24, o3[Q4 + 40 >> 2] = a3[B4 + 24 | 0] | a3[B4 + 25 | 0] << 8 | a3[B4 + 26 | 0] << 16 | a3[B4 + 27 | 0] << 24, B4 = a3[B4 + 28 | 0] | a3[B4 + 29 | 0] << 8 | a3[B4 + 30 | 0] << 16 | a3[B4 + 31 | 0] << 24, o3[Q4 + 48 >> 2] = 0, o3[Q4 + 52 >> 2] = 0, o3[Q4 + 44 >> 2] = B4, o3[Q4 + 56 >> 2] = a3[0 | C4] | a3[C4 + 1 | 0] << 8 | a3[C4 + 2 | 0] << 16 | a3[C4 + 3 | 0] << 24, o3[Q4 + 60 >> 2] = a3[C4 + 4 | 0] | a3[C4 + 5 | 0] << 8 | a3[C4 + 6 | 0] << 16 | a3[C4 + 7 | 0] << 24, p3(Q4, A8 = dA(A8, 0, I7), A8, I7, g6), iI(Q4, 64)), w3 = Q4 - -64 | 0, 0;
                    }, function(A8, I7, g6, C4, B4) {
                      var Q4;
                      return A8 |= 0, C4 |= 0, B4 |= 0, w3 = Q4 = w3 + -64 | 0, (I7 |= 0) | (g6 |= 0) && (o3[Q4 + 8 >> 2] = 2036477234, o3[Q4 + 12 >> 2] = 1797285236, o3[Q4 >> 2] = 1634760805, o3[Q4 + 4 >> 2] = 857760878, o3[Q4 + 16 >> 2] = a3[0 | B4] | a3[B4 + 1 | 0] << 8 | a3[B4 + 2 | 0] << 16 | a3[B4 + 3 | 0] << 24, o3[Q4 + 20 >> 2] = a3[B4 + 4 | 0] | a3[B4 + 5 | 0] << 8 | a3[B4 + 6 | 0] << 16 | a3[B4 + 7 | 0] << 24, o3[Q4 + 24 >> 2] = a3[B4 + 8 | 0] | a3[B4 + 9 | 0] << 8 | a3[B4 + 10 | 0] << 16 | a3[B4 + 11 | 0] << 24, o3[Q4 + 28 >> 2] = a3[B4 + 12 | 0] | a3[B4 + 13 | 0] << 8 | a3[B4 + 14 | 0] << 16 | a3[B4 + 15 | 0] << 24, o3[Q4 + 32 >> 2] = a3[B4 + 16 | 0] | a3[B4 + 17 | 0] << 8 | a3[B4 + 18 | 0] << 16 | a3[B4 + 19 | 0] << 24, o3[Q4 + 36 >> 2] = a3[B4 + 20 | 0] | a3[B4 + 21 | 0] << 8 | a3[B4 + 22 | 0] << 16 | a3[B4 + 23 | 0] << 24, o3[Q4 + 40 >> 2] = a3[B4 + 24 | 0] | a3[B4 + 25 | 0] << 8 | a3[B4 + 26 | 0] << 16 | a3[B4 + 27 | 0] << 24, B4 = a3[B4 + 28 | 0] | a3[B4 + 29 | 0] << 8 | a3[B4 + 30 | 0] << 16 | a3[B4 + 31 | 0] << 24, o3[Q4 + 48 >> 2] = 0, o3[Q4 + 44 >> 2] = B4, o3[Q4 + 52 >> 2] = a3[0 | C4] | a3[C4 + 1 | 0] << 8 | a3[C4 + 2 | 0] << 16 | a3[C4 + 3 | 0] << 24, o3[Q4 + 56 >> 2] = a3[C4 + 4 | 0] | a3[C4 + 5 | 0] << 8 | a3[C4 + 6 | 0] << 16 | a3[C4 + 7 | 0] << 24, o3[Q4 + 60 >> 2] = a3[C4 + 8 | 0] | a3[C4 + 9 | 0] << 8 | a3[C4 + 10 | 0] << 16 | a3[C4 + 11 | 0] << 24, p3(Q4, A8 = dA(A8, 0, I7), A8, I7, g6), iI(Q4, 64)), w3 = Q4 - -64 | 0, 0;
                    }, function(A8, I7, g6, C4, B4, Q4, i4, E4) {
                      var f4;
                      return A8 |= 0, I7 |= 0, B4 |= 0, Q4 |= 0, i4 |= 0, E4 |= 0, w3 = f4 = w3 + -64 | 0, (g6 |= 0) | (C4 |= 0) && (o3[f4 + 8 >> 2] = 2036477234, o3[f4 + 12 >> 2] = 1797285236, o3[f4 >> 2] = 1634760805, o3[f4 + 4 >> 2] = 857760878, o3[f4 + 16 >> 2] = a3[0 | E4] | a3[E4 + 1 | 0] << 8 | a3[E4 + 2 | 0] << 16 | a3[E4 + 3 | 0] << 24, o3[f4 + 20 >> 2] = a3[E4 + 4 | 0] | a3[E4 + 5 | 0] << 8 | a3[E4 + 6 | 0] << 16 | a3[E4 + 7 | 0] << 24, o3[f4 + 24 >> 2] = a3[E4 + 8 | 0] | a3[E4 + 9 | 0] << 8 | a3[E4 + 10 | 0] << 16 | a3[E4 + 11 | 0] << 24, o3[f4 + 28 >> 2] = a3[E4 + 12 | 0] | a3[E4 + 13 | 0] << 8 | a3[E4 + 14 | 0] << 16 | a3[E4 + 15 | 0] << 24, o3[f4 + 32 >> 2] = a3[E4 + 16 | 0] | a3[E4 + 17 | 0] << 8 | a3[E4 + 18 | 0] << 16 | a3[E4 + 19 | 0] << 24, o3[f4 + 36 >> 2] = a3[E4 + 20 | 0] | a3[E4 + 21 | 0] << 8 | a3[E4 + 22 | 0] << 16 | a3[E4 + 23 | 0] << 24, o3[f4 + 40 >> 2] = a3[E4 + 24 | 0] | a3[E4 + 25 | 0] << 8 | a3[E4 + 26 | 0] << 16 | a3[E4 + 27 | 0] << 24, o3[f4 + 44 >> 2] = a3[E4 + 28 | 0] | a3[E4 + 29 | 0] << 8 | a3[E4 + 30 | 0] << 16 | a3[E4 + 31 | 0] << 24, o3[f4 + 48 >> 2] = Q4, o3[f4 + 52 >> 2] = i4, o3[f4 + 56 >> 2] = a3[0 | B4] | a3[B4 + 1 | 0] << 8 | a3[B4 + 2 | 0] << 16 | a3[B4 + 3 | 0] << 24, o3[f4 + 60 >> 2] = a3[B4 + 4 | 0] | a3[B4 + 5 | 0] << 8 | a3[B4 + 6 | 0] << 16 | a3[B4 + 7 | 0] << 24, p3(f4, I7, A8, g6, C4), iI(f4, 64)), w3 = f4 - -64 | 0, 0;
                    }, function(A8, I7, g6, C4, B4, Q4, i4) {
                      var E4;
                      return A8 |= 0, I7 |= 0, B4 |= 0, Q4 |= 0, i4 |= 0, w3 = E4 = w3 + -64 | 0, (g6 |= 0) | (C4 |= 0) && (o3[E4 + 8 >> 2] = 2036477234, o3[E4 + 12 >> 2] = 1797285236, o3[E4 >> 2] = 1634760805, o3[E4 + 4 >> 2] = 857760878, o3[E4 + 16 >> 2] = a3[0 | i4] | a3[i4 + 1 | 0] << 8 | a3[i4 + 2 | 0] << 16 | a3[i4 + 3 | 0] << 24, o3[E4 + 20 >> 2] = a3[i4 + 4 | 0] | a3[i4 + 5 | 0] << 8 | a3[i4 + 6 | 0] << 16 | a3[i4 + 7 | 0] << 24, o3[E4 + 24 >> 2] = a3[i4 + 8 | 0] | a3[i4 + 9 | 0] << 8 | a3[i4 + 10 | 0] << 16 | a3[i4 + 11 | 0] << 24, o3[E4 + 28 >> 2] = a3[i4 + 12 | 0] | a3[i4 + 13 | 0] << 8 | a3[i4 + 14 | 0] << 16 | a3[i4 + 15 | 0] << 24, o3[E4 + 32 >> 2] = a3[i4 + 16 | 0] | a3[i4 + 17 | 0] << 8 | a3[i4 + 18 | 0] << 16 | a3[i4 + 19 | 0] << 24, o3[E4 + 36 >> 2] = a3[i4 + 20 | 0] | a3[i4 + 21 | 0] << 8 | a3[i4 + 22 | 0] << 16 | a3[i4 + 23 | 0] << 24, o3[E4 + 40 >> 2] = a3[i4 + 24 | 0] | a3[i4 + 25 | 0] << 8 | a3[i4 + 26 | 0] << 16 | a3[i4 + 27 | 0] << 24, i4 = a3[i4 + 28 | 0] | a3[i4 + 29 | 0] << 8 | a3[i4 + 30 | 0] << 16 | a3[i4 + 31 | 0] << 24, o3[E4 + 48 >> 2] = Q4, o3[E4 + 44 >> 2] = i4, o3[E4 + 52 >> 2] = a3[0 | B4] | a3[B4 + 1 | 0] << 8 | a3[B4 + 2 | 0] << 16 | a3[B4 + 3 | 0] << 24, o3[E4 + 56 >> 2] = a3[B4 + 4 | 0] | a3[B4 + 5 | 0] << 8 | a3[B4 + 6 | 0] << 16 | a3[B4 + 7 | 0] << 24, o3[E4 + 60 >> 2] = a3[B4 + 8 | 0] | a3[B4 + 9 | 0] << 8 | a3[B4 + 10 | 0] << 16 | a3[B4 + 11 | 0] << 24, p3(E4, I7, A8, g6, C4), iI(E4, 64)), w3 = E4 - -64 | 0, 0;
                    }], yI.grow = function(A8) {
                      var I7 = this.length;
                      return this.length = this.length + A8, I7;
                    }, yI.set = function(A8, I7) {
                      this[A8] = I7;
                    }, yI.get = function(A8) {
                      return this[A8];
                    }, yI);
                    function hI() {
                      return i3.byteLength / 65536 | 0;
                    }
                    return { f: function() {
                    }, g: function(A8, I7, g6, C4, B4, Q4, i4, E4, o4, a4, f4, c4) {
                      return 0 | hA(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, (A8 = 0) | (B4 |= 0), Q4 |= 0, i4 |= 0, A8 | (E4 |= 0), o4 |= 0, f4 |= 0, c4 |= 0);
                    }, h: function(A8, I7, g6, C4, B4, i4, E4, a4, f4, c4, e4) {
                      return A8 |= 0, I7 |= 0, C4 |= 0, E4 |= 0, f4 |= 0, E4 |= f4 = 0, !(B4 |= 0) & (C4 |= f4) >>> 0 < 4294967280 ? (hA(A8, A8 + C4 | 0, 0, g6 |= 0, C4, B4, i4 |= 0, E4, a4 |= 0, c4 |= 0, e4 |= 0), I7 && (B4 = (A8 = C4 + 16 | 0) >>> 0 < 16 ? B4 + 1 | 0 : B4, o3[I7 >> 2] = A8, o3[I7 + 4 >> 2] = B4)) : (zA(), Q3()), 0;
                    }, i: function(A8, I7, g6, C4, B4, Q4, i4, E4, o4, a4, f4, c4) {
                      return 0 | yA(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, (A8 = 0) | (B4 |= 0), Q4 |= 0, i4 |= 0, A8 | (E4 |= 0), o4 |= 0, f4 |= 0, c4 |= 0);
                    }, j: function(A8, I7, g6, C4, B4, i4, E4, a4, f4, c4, e4) {
                      return A8 |= 0, I7 |= 0, C4 |= 0, E4 |= 0, f4 |= 0, E4 |= f4 = 0, !(B4 |= 0) & (C4 |= f4) >>> 0 < 4294967280 ? (yA(A8, A8 + C4 | 0, 0, g6 |= 0, C4, B4, i4 |= 0, E4, a4 |= 0, c4 |= 0, e4 |= 0), I7 && (B4 = (A8 = C4 + 16 | 0) >>> 0 < 16 ? B4 + 1 | 0 : B4, o3[I7 >> 2] = A8, o3[I7 + 4 >> 2] = B4)) : (zA(), Q3()), 0;
                    }, k: function(A8, I7, g6, C4, B4, Q4, i4, E4, o4, a4, f4) {
                      return 0 | wA(A8 |= 0, g6 |= 0, (A8 = 0) | (C4 |= 0), B4 |= 0, Q4 |= 0, i4 |= 0, A8 | (E4 |= 0), o4 |= 0, a4 |= 0, f4 |= 0);
                    }, l: function(A8, I7, g6, C4, B4, Q4, i4, E4, a4, f4, c4) {
                      return I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, E4 |= 0, E4 |= 0, g6 = -1, !(Q4 |= 0) & (B4 |= 0) >>> 0 >= 16 | Q4 && (g6 = wA(A8 |= 0, C4, B4 - 16 | 0, Q4 - (B4 >>> 0 < 16) | 0, (C4 + B4 | 0) - 16 | 0, i4 |= 0, E4, a4 |= 0, f4 |= 0, c4 |= 0)), I7 && (o3[I7 >> 2] = g6 ? 0 : B4 - 16 | 0, o3[I7 + 4 >> 2] = g6 ? 0 : Q4 - (B4 >>> 0 < 16) | 0), 0 | g6;
                    }, m: function(A8, I7, g6, C4, B4, Q4, i4, E4, o4, a4, f4) {
                      return 0 | tA(A8 |= 0, g6 |= 0, (A8 = 0) | (C4 |= 0), B4 |= 0, Q4 |= 0, i4 |= 0, A8 | (E4 |= 0), o4 |= 0, a4 |= 0, f4 |= 0);
                    }, n: function(A8, I7, g6, C4, B4, Q4, i4, E4, a4, f4, c4) {
                      return I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, E4 |= 0, E4 |= 0, g6 = -1, !(Q4 |= 0) & (B4 |= 0) >>> 0 >= 16 | Q4 && (g6 = tA(A8 |= 0, C4, B4 - 16 | 0, Q4 - (B4 >>> 0 < 16) | 0, (C4 + B4 | 0) - 16 | 0, i4 |= 0, E4, a4 |= 0, f4 |= 0, c4 |= 0)), I7 && (o3[I7 >> 2] = g6 ? 0 : B4 - 16 | 0, o3[I7 + 4 >> 2] = g6 ? 0 : Q4 - (B4 >>> 0 < 16) | 0), 0 | g6;
                    }, o: aI, p: function() {
                      return 12;
                    }, q: tI, r: oI, s: cI, t: QI, u: aI, v: DI, w: tI, x: oI, y: cI, z: QI, A: function(A8, I7, g6, C4, B4, Q4, i4, E4, o4, a4, f4, c4) {
                      return 0 | oA(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, (A8 = 0) | (B4 |= 0), Q4 |= 0, i4 |= 0, A8 | (E4 |= 0), o4 |= 0, f4 |= 0, c4 |= 0);
                    }, B: function(A8, I7, g6, C4, B4, i4, E4, a4, f4, c4, e4) {
                      return A8 |= 0, I7 |= 0, C4 |= 0, E4 |= 0, f4 |= 0, E4 |= f4 = 0, !(B4 |= 0) & (C4 |= f4) >>> 0 < 4294967280 ? (oA(A8, A8 + C4 | 0, 0, g6 |= 0, C4, B4, i4 |= 0, E4, a4 |= 0, c4 |= 0, e4 |= 0), I7 && (B4 = (A8 = C4 + 16 | 0) >>> 0 < 16 ? B4 + 1 | 0 : B4, o3[I7 >> 2] = A8, o3[I7 + 4 >> 2] = B4)) : (zA(), Q3()), 0;
                    }, C: function(A8, I7, g6, C4, B4, Q4, i4, E4, o4, a4, f4) {
                      return 0 | EA(A8 |= 0, g6 |= 0, (A8 = 0) | (C4 |= 0), B4 |= 0, Q4 |= 0, i4 |= 0, A8 | (E4 |= 0), o4 |= 0, a4 |= 0, f4 |= 0);
                    }, D: function(A8, I7, g6, C4, B4, Q4, i4, E4, a4, f4, c4) {
                      return I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, E4 |= 0, E4 |= 0, g6 = -1, !(Q4 |= 0) & (B4 |= 0) >>> 0 >= 16 | Q4 && (g6 = EA(A8 |= 0, C4, B4 - 16 | 0, Q4 - (B4 >>> 0 < 16) | 0, (C4 + B4 | 0) - 16 | 0, i4 |= 0, E4, a4 |= 0, f4 |= 0, c4 |= 0)), I7 && (o3[I7 >> 2] = g6 ? 0 : B4 - 16 | 0, o3[I7 + 4 >> 2] = g6 ? 0 : Q4 - (B4 >>> 0 < 16) | 0), 0 | g6;
                    }, E: aI, F: fI, G: tI, H: oI, I: cI, J: QI, K: aI, L: aI, M: function(A8, I7, g6, C4, B4) {
                      var Q4;
                      return A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, w3 = Q4 = w3 - 480 | 0, gA(Q4, B4 |= 0, 32), AI(Q4, I7, g6, C4), bA(Q4, Q4 + 416 | 0), I7 = o3[Q4 + 444 >> 2], g6 = o3[Q4 + 440 >> 2], E3[A8 + 24 | 0] = g6, E3[A8 + 25 | 0] = g6 >>> 8, E3[A8 + 26 | 0] = g6 >>> 16, E3[A8 + 27 | 0] = g6 >>> 24, E3[A8 + 28 | 0] = I7, E3[A8 + 29 | 0] = I7 >>> 8, E3[A8 + 30 | 0] = I7 >>> 16, E3[A8 + 31 | 0] = I7 >>> 24, I7 = o3[Q4 + 436 >> 2], g6 = o3[Q4 + 432 >> 2], E3[A8 + 16 | 0] = g6, E3[A8 + 17 | 0] = g6 >>> 8, E3[A8 + 18 | 0] = g6 >>> 16, E3[A8 + 19 | 0] = g6 >>> 24, E3[A8 + 20 | 0] = I7, E3[A8 + 21 | 0] = I7 >>> 8, E3[A8 + 22 | 0] = I7 >>> 16, E3[A8 + 23 | 0] = I7 >>> 24, I7 = o3[Q4 + 428 >> 2], g6 = o3[Q4 + 424 >> 2], E3[A8 + 8 | 0] = g6, E3[A8 + 9 | 0] = g6 >>> 8, E3[A8 + 10 | 0] = g6 >>> 16, E3[A8 + 11 | 0] = g6 >>> 24, E3[A8 + 12 | 0] = I7, E3[A8 + 13 | 0] = I7 >>> 8, E3[A8 + 14 | 0] = I7 >>> 16, E3[A8 + 15 | 0] = I7 >>> 24, I7 = o3[Q4 + 420 >> 2], g6 = o3[Q4 + 416 >> 2], E3[0 | A8] = g6, E3[A8 + 1 | 0] = g6 >>> 8, E3[A8 + 2 | 0] = g6 >>> 16, E3[A8 + 3 | 0] = g6 >>> 24, E3[A8 + 4 | 0] = I7, E3[A8 + 5 | 0] = I7 >>> 8, E3[A8 + 6 | 0] = I7 >>> 16, E3[A8 + 7 | 0] = I7 >>> 24, w3 = Q4 + 480 | 0, 0;
                    }, N: function(A8, I7, g6, C4, B4) {
                      var Q4, i4;
                      return A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, w3 = Q4 = w3 - 512 | 0, gA(i4 = Q4 + 32 | 0, B4 |= 0, 32), AI(i4, I7, g6, C4), bA(i4, Q4 + 448 | 0), I7 = o3[Q4 + 476 >> 2], o3[Q4 + 24 >> 2] = o3[Q4 + 472 >> 2], o3[Q4 + 28 >> 2] = I7, I7 = o3[Q4 + 468 >> 2], o3[Q4 + 16 >> 2] = o3[Q4 + 464 >> 2], o3[Q4 + 20 >> 2] = I7, I7 = o3[Q4 + 460 >> 2], o3[Q4 + 8 >> 2] = o3[Q4 + 456 >> 2], o3[Q4 + 12 >> 2] = I7, I7 = o3[Q4 + 452 >> 2], o3[Q4 >> 2] = o3[Q4 + 448 >> 2], o3[Q4 + 4 >> 2] = I7, I7 = nA(A8, Q4), g6 = eA(Q4, A8, 32), w3 = Q4 + 512 | 0, ((0 | A8) == (0 | Q4) ? -1 : I7) | g6;
                    }, O: QI, P: aI, Q: aI, R: aI, S: aI, T: fI, U: oI, V: cI, W: function(A8, I7, g6) {
                      A8 |= 0, I7 |= 0;
                      var C4, B4 = 0;
                      return w3 = C4 = w3 + -64 | 0, aA(C4, g6 |= 0, 32, 0), g6 = o3[C4 + 28 >> 2], B4 = o3[C4 + 24 >> 2], E3[I7 + 24 | 0] = B4, E3[I7 + 25 | 0] = B4 >>> 8, E3[I7 + 26 | 0] = B4 >>> 16, E3[I7 + 27 | 0] = B4 >>> 24, E3[I7 + 28 | 0] = g6, E3[I7 + 29 | 0] = g6 >>> 8, E3[I7 + 30 | 0] = g6 >>> 16, E3[I7 + 31 | 0] = g6 >>> 24, g6 = o3[C4 + 20 >> 2], B4 = o3[C4 + 16 >> 2], E3[I7 + 16 | 0] = B4, E3[I7 + 17 | 0] = B4 >>> 8, E3[I7 + 18 | 0] = B4 >>> 16, E3[I7 + 19 | 0] = B4 >>> 24, E3[I7 + 20 | 0] = g6, E3[I7 + 21 | 0] = g6 >>> 8, E3[I7 + 22 | 0] = g6 >>> 16, E3[I7 + 23 | 0] = g6 >>> 24, g6 = o3[C4 + 12 >> 2], B4 = o3[C4 + 8 >> 2], E3[I7 + 8 | 0] = B4, E3[I7 + 9 | 0] = B4 >>> 8, E3[I7 + 10 | 0] = B4 >>> 16, E3[I7 + 11 | 0] = B4 >>> 24, E3[I7 + 12 | 0] = g6, E3[I7 + 13 | 0] = g6 >>> 8, E3[I7 + 14 | 0] = g6 >>> 16, E3[I7 + 15 | 0] = g6 >>> 24, g6 = o3[C4 + 4 >> 2], B4 = o3[C4 >> 2], E3[0 | I7] = B4, E3[I7 + 1 | 0] = B4 >>> 8, E3[I7 + 2 | 0] = B4 >>> 16, E3[I7 + 3 | 0] = B4 >>> 24, E3[I7 + 4 | 0] = g6, E3[I7 + 5 | 0] = g6 >>> 8, E3[I7 + 6 | 0] = g6 >>> 16, E3[I7 + 7 | 0] = g6 >>> 24, iI(C4, 64), A8 = II(A8, I7), w3 = C4 - -64 | 0, 0 | A8;
                    }, X: XA, Y: UA, Z: PA, _: function(A8, I7, g6, C4, B4, Q4, i4, E4) {
                      A8 |= 0, I7 |= 0, g6 |= 0, Q4 |= 0;
                      var o4, a4 = 0;
                      return a4 = C4 |= 0, C4 = B4 |= 0, o4 = 0 | a4, w3 = a4 = w3 - 32 | 0, B4 = -1, UA(a4, i4 |= 0, E4 |= 0) || (B4 = iA(A8, I7, g6, o4, C4, Q4, a4), iI(a4, 32)), w3 = a4 + 32 | 0, 0 | B4;
                    }, $: function(A8, I7, g6, C4, B4, i4) {
                      return A8 |= 0, I7 |= 0, B4 |= 0, i4 |= 0, !(C4 |= 0) & (g6 |= 0) >>> 0 >= 4294967280 | C4 && (zA(), Q3()), 0 | iA(A8 + 16 | 0, A8, I7, g6, C4, B4, i4);
                    }, aa: function(A8, I7, g6, C4, B4, Q4, i4) {
                      return 0 | NA(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q4 |= 0, i4 |= 0);
                    }, ba: vA, ca: function(A8, I7, g6, C4, B4, Q4, i4, E4) {
                      A8 |= 0, I7 |= 0, g6 |= 0, Q4 |= 0;
                      var o4, a4 = 0;
                      return a4 = C4 |= 0, C4 = B4 |= 0, o4 = 0 | a4, w3 = a4 = w3 - 32 | 0, B4 = -1, UA(a4, i4 |= 0, E4 |= 0) || (B4 = QA(A8, I7, g6, o4, C4, Q4, a4), iI(a4, 32)), w3 = a4 + 32 | 0, 0 | B4;
                    }, da: JA, ea: function(A8, I7, g6, C4, B4, Q4, i4) {
                      return 0 | GA(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q4 |= 0, i4 |= 0);
                    }, fa: function(A8, I7, g6, C4, B4) {
                      A8 |= 0, I7 |= 0, B4 |= 0;
                      var Q4, i4, a4, f4, c4 = 0, e4 = 0;
                      return c4 = g6 |= 0, g6 = C4 |= 0, f4 = 0 | c4, c4 = C4 = w3, w3 = Q4 = C4 - 512 & -64, C4 = -1, XA(i4 = Q4 - -64 | 0, a4 = Q4 + 32 | 0) || (K3(C4 = Q4 + 128 | 0, 0, 0, 24), Z(C4, i4, 32, 0), Z(C4, B4, 32, 0), KA(C4, e4 = Q4 + 96 | 0, 24), C4 = NA(A8 + 32 | 0, I7, f4, g6, e4, B4, a4), I7 = o3[Q4 + 92 >> 2], g6 = o3[Q4 + 88 >> 2], E3[A8 + 24 | 0] = g6, E3[A8 + 25 | 0] = g6 >>> 8, E3[A8 + 26 | 0] = g6 >>> 16, E3[A8 + 27 | 0] = g6 >>> 24, E3[A8 + 28 | 0] = I7, E3[A8 + 29 | 0] = I7 >>> 8, E3[A8 + 30 | 0] = I7 >>> 16, E3[A8 + 31 | 0] = I7 >>> 24, I7 = o3[Q4 + 84 >> 2], g6 = o3[Q4 + 80 >> 2], E3[A8 + 16 | 0] = g6, E3[A8 + 17 | 0] = g6 >>> 8, E3[A8 + 18 | 0] = g6 >>> 16, E3[A8 + 19 | 0] = g6 >>> 24, E3[A8 + 20 | 0] = I7, E3[A8 + 21 | 0] = I7 >>> 8, E3[A8 + 22 | 0] = I7 >>> 16, E3[A8 + 23 | 0] = I7 >>> 24, I7 = o3[Q4 + 76 >> 2], g6 = o3[Q4 + 72 >> 2], E3[A8 + 8 | 0] = g6, E3[A8 + 9 | 0] = g6 >>> 8, E3[A8 + 10 | 0] = g6 >>> 16, E3[A8 + 11 | 0] = g6 >>> 24, E3[A8 + 12 | 0] = I7, E3[A8 + 13 | 0] = I7 >>> 8, E3[A8 + 14 | 0] = I7 >>> 16, E3[A8 + 15 | 0] = I7 >>> 24, I7 = o3[Q4 + 68 >> 2], g6 = o3[Q4 + 64 >> 2], E3[0 | A8] = g6, E3[A8 + 1 | 0] = g6 >>> 8, E3[A8 + 2 | 0] = g6 >>> 16, E3[A8 + 3 | 0] = g6 >>> 24, E3[A8 + 4 | 0] = I7, E3[A8 + 5 | 0] = I7 >>> 8, E3[A8 + 6 | 0] = I7 >>> 16, E3[A8 + 7 | 0] = I7 >>> 24, iI(a4, 32), iI(i4, 32), iI(e4, 24)), w3 = c4, 0 | C4;
                    }, ga: function(A8, I7, g6, C4, B4, Q4) {
                      A8 |= 0, I7 |= 0, B4 |= 0, Q4 |= 0;
                      var i4, E4, o4 = 0;
                      return E4 = o4 = w3, w3 = i4 = o4 - 448 & -64, o4 = -1, !(C4 |= 0) & (g6 |= 0) >>> 0 >= 48 | C4 && (K3(o4 = i4 - -64 | 0, 0, 0, 24), Z(o4, I7, 32, 0), Z(o4, B4, 32, 0), KA(o4, B4 = i4 + 32 | 0, 24), o4 = GA(A8, I7 + 32 | 0, g6 - 32 | 0, C4 - (g6 >>> 0 < 32) | 0, B4, I7, Q4)), w3 = E4, 0 | o4;
                    }, ha: function() {
                      return 48;
                    }, ia: oI, ja: eI, ka: aI, la: oI, ma: eI, na: aI, oa: function() {
                      return 384;
                    }, pa: function(A8, I7, g6, C4, B4, Q4, i4) {
                      return 0 | X2(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q4 |= 0, i4 |= 0);
                    }, qa: K3, ra: function(A8, I7, g6, C4) {
                      return 0 | Z(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0);
                    }, sa: KA, ta: QI, ua: eI, va: function(A8, I7, g6, C4) {
                      return 0 | aA(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0);
                    }, wa: oI, xa: eI, ya: DI, za: aI, Aa: function(A8, I7, g6, C4, B4, i4) {
                      A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, i4 |= 0;
                      var E4, f4 = 0, c4 = 0, e4 = 0, r4 = 0, D4 = 0, t4 = 0, y4 = 0;
                      return w3 = E4 = w3 - 32 | 0, f4 = a3[0 | (B4 |= 0)] | a3[B4 + 1 | 0] << 8 | a3[B4 + 2 | 0] << 16 | a3[B4 + 3 | 0] << 24, B4 = a3[B4 + 4 | 0] | a3[B4 + 5 | 0] << 8 | a3[B4 + 6 | 0] << 16 | a3[B4 + 7 | 0] << 24, o3[E4 + 24 >> 2] = 0, o3[E4 + 28 >> 2] = 0, o3[E4 + 16 >> 2] = f4, o3[E4 + 20 >> 2] = B4, o3[E4 + 8 >> 2] = 0, o3[E4 + 12 >> 2] = 0, o3[(B4 = E4) >> 2] = g6, o3[B4 + 4 >> 2] = C4, I7 - 65 >>> 0 <= 4294967246 ? (o3[9005] = 28, A8 = -1) : I7 - 65 >>> 0 < 4294967232 ? A8 = -1 : (w3 = B4 = (e4 = w3) - 512 & -64, !i4 | !A8 | ((c4 = 255 & I7) - 65 & 255) >>> 0 <= 191 ? (zA(), Q3()) : (C4 = E4 + 16 | 0, E4 ? (r4 = 725511199 ^ (a3[E4 + 8 | 0] | a3[E4 + 9 | 0] << 8 | a3[E4 + 10 | 0] << 16 | a3[E4 + 11 | 0] << 24), D4 = -1694144372 ^ (a3[E4 + 12 | 0] | a3[E4 + 13 | 0] << 8 | a3[E4 + 14 | 0] << 16 | a3[E4 + 15 | 0] << 24), g6 = -1377402159 ^ (a3[0 | E4] | a3[E4 + 1 | 0] << 8 | a3[E4 + 2 | 0] << 16 | a3[E4 + 3 | 0] << 24), I7 = 1359893119 ^ (a3[E4 + 4 | 0] | a3[E4 + 5 | 0] << 8 | a3[E4 + 6 | 0] << 16 | a3[E4 + 7 | 0] << 24)) : (r4 = 725511199, D4 = -1694144372, g6 = -1377402159, I7 = 1359893119), C4 ? (t4 = 327033209 ^ (a3[C4 + 8 | 0] | a3[C4 + 9 | 0] << 8 | a3[C4 + 10 | 0] << 16 | a3[C4 + 11 | 0] << 24), y4 = 1541459225 ^ (a3[C4 + 12 | 0] | a3[C4 + 13 | 0] << 8 | a3[C4 + 14 | 0] << 16 | a3[C4 + 15 | 0] << 24), f4 = -79577749 ^ (a3[0 | C4] | a3[C4 + 1 | 0] << 8 | a3[C4 + 2 | 0] << 16 | a3[C4 + 3 | 0] << 24), C4 = 528734635 ^ (a3[C4 + 4 | 0] | a3[C4 + 5 | 0] << 8 | a3[C4 + 6 | 0] << 16 | a3[C4 + 7 | 0] << 24)) : (t4 = 327033209, y4 = 1541459225, f4 = -79577749, C4 = 528734635), dA(B4 - -64 | 0, 0, 293), o3[B4 + 56 >> 2] = t4, o3[B4 + 60 >> 2] = y4, o3[B4 + 48 >> 2] = f4, o3[B4 + 52 >> 2] = C4, o3[B4 + 40 >> 2] = r4, o3[B4 + 44 >> 2] = D4, o3[B4 + 32 >> 2] = g6, o3[B4 + 36 >> 2] = I7, o3[B4 + 24 >> 2] = 1595750129, o3[B4 + 28 >> 2] = -1521486534, o3[B4 + 16 >> 2] = -23791573, o3[B4 + 20 >> 2] = 1013904242, o3[B4 + 8 >> 2] = -2067093701, o3[B4 + 12 >> 2] = -1150833019, o3[B4 >> 2] = -222443256 ^ (8192 | c4), o3[B4 + 4 >> 2] = 1779033703, dA(32 + (I7 = B4 + 384 | 0) | 0, 0, 96), YA(I7, i4, 32), YA(B4 + 96 | 0, I7, 128), o3[B4 + 352 >> 2] = 128, iI(I7, 128), J3(B4, A8, c4), w3 = e4), A8 = 0), w3 = E4 + 32 | 0, 0 | A8;
                    }, Ba: QI, Ca: function(A8, I7, g6) {
                      return 0 | q3(A8 |= 0, I7 |= 0, g6 |= 0);
                    }, Da: function(A8, I7, g6) {
                      return 0 | gI(A8 |= 0, I7 |= 0, g6 |= 0);
                    }, Ea: function(A8, I7) {
                      return LA(A8 |= 0, I7 |= 0), iI(A8, 4), 0;
                    }, Fa: function(A8, I7, g6, C4, B4) {
                      var Q4;
                      return A8 |= 0, C4 |= 0, B4 |= 0, w3 = Q4 = w3 - 208 | 0, q3(Q4, I7 |= 0, g6 |= 0), gI(Q4, C4, B4), LA(Q4, A8), iI(Q4, 4), w3 = Q4 + 208 | 0, 0;
                    }, Ga: QI, Ha: function(A8, I7, g6, C4, B4) {
                      A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0;
                      var Q4, i4 = 0, f4 = 0, c4 = 0;
                      if (w3 = Q4 = w3 - 256 | 0, E3[Q4 + 15 | 0] = 1, I7 >>> 0 <= 8160) {
                        if (I7 >>> 0 >= 32)
                          for (i4 = 32; c4 = i4, q3(i4 = Q4 + 48 | 0, B4, 32), f4 && gI(i4, (A8 + f4 | 0) - 32 | 0, 32), gI(i4 = Q4 + 48 | 0, g6, C4), gI(i4, Q4 + 15 | 0, 1), LA(i4, A8 + f4 | 0), E3[Q4 + 15 | 0] = a3[Q4 + 15 | 0] + 1, (i4 = (f4 = c4) + 32 | 0) >>> 0 <= I7 >>> 0; )
                            ;
                        (f4 = 31 & I7) && (q3(I7 = Q4 + 48 | 0, B4, 32), c4 && gI(I7, (A8 + c4 | 0) - 32 | 0, 32), gI(I7 = Q4 + 48 | 0, g6, C4), gI(I7, Q4 + 15 | 0, 1), LA(g6 = I7, I7 = Q4 + 16 | 0), YA(A8 + c4 | 0, I7, f4), iI(I7, 32)), iI(Q4 + 48 | 0, 208), A8 = 0;
                      } else
                        o3[9005] = 28, A8 = -1;
                      return w3 = Q4 + 256 | 0, 0 | A8;
                    }, Ia: aI, Ja: tI, Ka: function() {
                      return 8160;
                    }, La: EI, Ma: function(A8, I7, g6) {
                      return 0 | gA(A8 |= 0, I7 |= 0, g6 |= 0);
                    }, Na: function(A8, I7, g6) {
                      return 0 | AI(A8 |= 0, I7 |= 0, g6 |= 0, 0);
                    }, Oa: function(A8, I7) {
                      return bA(A8 |= 0, I7 |= 0), iI(A8, 4), 0;
                    }, Pa: function(A8, I7, g6, C4, B4) {
                      var Q4;
                      return A8 |= 0, C4 |= 0, B4 |= 0, w3 = Q4 = w3 - 416 | 0, gA(Q4, I7 |= 0, g6 |= 0), AI(Q4, C4, B4, 0), bA(Q4, A8), iI(Q4, 4), w3 = Q4 + 416 | 0, 0;
                    }, Qa: function(A8) {
                      HA(A8 |= 0, 64);
                    }, Ra: function(A8, I7, g6, C4, B4) {
                      A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0;
                      var Q4, i4 = 0, f4 = 0, c4 = 0;
                      if (w3 = Q4 = w3 - 496 | 0, E3[Q4 + 15 | 0] = 1, I7 >>> 0 <= 16320) {
                        if (I7 >>> 0 >= 64)
                          for (i4 = 64; c4 = i4, gA(i4 = Q4 + 80 | 0, B4, 64), f4 && AI(i4, (A8 + f4 | 0) - 64 | 0, 64, 0), AI(i4 = Q4 + 80 | 0, g6, C4, 0), AI(i4, Q4 + 15 | 0, 1, 0), bA(i4, A8 + f4 | 0), E3[Q4 + 15 | 0] = a3[Q4 + 15 | 0] + 1, (i4 = (f4 = c4) - -64 | 0) >>> 0 <= I7 >>> 0; )
                            ;
                        (f4 = 63 & I7) && (gA(I7 = Q4 + 80 | 0, B4, 64), c4 && AI(I7, (A8 + c4 | 0) - 64 | 0, 64, 0), AI(I7 = Q4 + 80 | 0, g6, C4, 0), AI(I7, Q4 + 15 | 0, 1, 0), bA(g6 = I7, I7 = Q4 + 16 | 0), YA(A8 + c4 | 0, I7, f4), iI(I7, 64)), iI(Q4 + 80 | 0, 416), A8 = 0;
                      } else
                        o3[9005] = 28, A8 = -1;
                      return w3 = Q4 + 496 | 0, 0 | A8;
                    }, Sa: eI, Ta: tI, Ua: function() {
                      return 16320;
                    }, Va: function(A8, I7, g6) {
                      return A8 |= 0, X2(I7 |= 0, 32, g6 |= 0, 32, 0, 0, 0), 0 | VA(A8, I7);
                    }, Wa: function(A8, I7) {
                      return A8 |= 0, HA(I7 |= 0, 32), 0 | VA(A8, I7);
                    }, Xa: function(A8, I7, g6, C4, B4) {
                      I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0;
                      var i4, o4, f4 = 0, c4 = 0, e4 = 0;
                      if (o4 = f4 = w3, w3 = f4 = f4 - 512 & -64, i4 = (A8 |= 0) || I7) {
                        if (e4 = -1, !lA(c4 = f4 + 96 | 0, C4, B4)) {
                          for (C4 = I7 || A8, A8 = 0, K3(I7 = f4 + 128 | 0, 0, 0, 64), Z(I7, c4, 32, 0), iI(c4, 32), Z(I7, g6, 32, 0), Z(I7, B4, 32, 0), KA(I7, f4 + 32 | 0, 64), iI(I7, 384); g6 = (I7 = f4 + 32 | 0) + A8 | 0, E3[A8 + i4 | 0] = a3[0 | g6], E3[A8 + C4 | 0] = a3[g6 + 32 | 0], E3[(B4 = 1 | A8) + i4 | 0] = a3[I7 + B4 | 0], E3[C4 + B4 | 0] = a3[g6 + 33 | 0], 32 != (0 | (A8 = A8 + 2 | 0)); )
                            ;
                          iI(I7, 64), e4 = 0;
                        }
                        return w3 = o4, 0 | e4;
                      }
                      zA(), Q3();
                    }, Ya: function(A8, I7, g6, C4, B4) {
                      I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0;
                      var i4, o4, f4 = 0, c4 = 0, e4 = 0;
                      if (o4 = f4 = w3, w3 = f4 = f4 - 512 & -64, i4 = (A8 |= 0) || I7) {
                        if (e4 = -1, !lA(c4 = f4 + 96 | 0, C4, B4)) {
                          for (C4 = I7 || A8, A8 = 0, K3(I7 = f4 + 128 | 0, 0, 0, 64), Z(I7, c4, 32, 0), iI(c4, 32), Z(I7, B4, 32, 0), Z(I7, g6, 32, 0), KA(I7, f4 + 32 | 0, 64), iI(I7, 384); g6 = (I7 = f4 + 32 | 0) + A8 | 0, E3[A8 + C4 | 0] = a3[0 | g6], E3[A8 + i4 | 0] = a3[g6 + 32 | 0], E3[(B4 = 1 | A8) + C4 | 0] = a3[I7 + B4 | 0], E3[B4 + i4 | 0] = a3[g6 + 33 | 0], 32 != (0 | (A8 = A8 + 2 | 0)); )
                            ;
                          iI(I7, 64), e4 = 0;
                        }
                        return w3 = o4, 0 | e4;
                      }
                      zA(), Q3();
                    }, Za: aI, _a: aI, $a: aI, ab: aI, bb: VA, cb: lA, db: aI, eb: aI, fb: aI, gb: fI, hb: oI, ib: cI, jb: QI, kb: PA, lb: function(A8, I7, g6, C4, B4, i4) {
                      return A8 |= 0, I7 |= 0, B4 |= 0, i4 |= 0, !(C4 |= 0) & (g6 |= 0) >>> 0 >= 4294967280 | C4 && (zA(), Q3()), iA(A8 + 16 | 0, A8, I7, g6, C4, B4, i4), 0;
                    }, mb: vA, nb: JA, ob: QI, pb: function(A8, I7, g6) {
                      return A8 |= 0, g6 |= 0, HA(I7 |= 0, 24), x3(A8, I7, g6), E3[A8 + 32 | 0] = 1, E3[A8 + 33 | 0] = 0, E3[A8 + 34 | 0] = 0, E3[A8 + 35 | 0] = 0, g6 = a3[I7 + 16 | 0] | a3[I7 + 17 | 0] << 8 | a3[I7 + 18 | 0] << 16 | a3[I7 + 19 | 0] << 24, I7 = a3[I7 + 20 | 0] | a3[I7 + 21 | 0] << 8 | a3[I7 + 22 | 0] << 16 | a3[I7 + 23 | 0] << 24, E3[A8 + 44 | 0] = 0, E3[A8 + 45 | 0] = 0, E3[A8 + 46 | 0] = 0, E3[A8 + 47 | 0] = 0, E3[A8 + 48 | 0] = 0, E3[A8 + 49 | 0] = 0, E3[A8 + 50 | 0] = 0, E3[A8 + 51 | 0] = 0, E3[A8 + 36 | 0] = g6, E3[A8 + 37 | 0] = g6 >>> 8, E3[A8 + 38 | 0] = g6 >>> 16, E3[A8 + 39 | 0] = g6 >>> 24, E3[A8 + 40 | 0] = I7, E3[A8 + 41 | 0] = I7 >>> 8, E3[A8 + 42 | 0] = I7 >>> 16, E3[A8 + 43 | 0] = I7 >>> 24, 0;
                    }, qb: function(A8, I7, g6) {
                      return x3(A8 |= 0, I7 |= 0, g6 |= 0), E3[A8 + 32 | 0] = 1, E3[A8 + 33 | 0] = 0, E3[A8 + 34 | 0] = 0, E3[A8 + 35 | 0] = 0, g6 = a3[I7 + 16 | 0] | a3[I7 + 17 | 0] << 8 | a3[I7 + 18 | 0] << 16 | a3[I7 + 19 | 0] << 24, I7 = a3[I7 + 20 | 0] | a3[I7 + 21 | 0] << 8 | a3[I7 + 22 | 0] << 16 | a3[I7 + 23 | 0] << 24, E3[A8 + 44 | 0] = 0, E3[A8 + 45 | 0] = 0, E3[A8 + 46 | 0] = 0, E3[A8 + 47 | 0] = 0, E3[A8 + 48 | 0] = 0, E3[A8 + 49 | 0] = 0, E3[A8 + 50 | 0] = 0, E3[A8 + 51 | 0] = 0, E3[A8 + 36 | 0] = g6, E3[A8 + 37 | 0] = g6 >>> 8, E3[A8 + 38 | 0] = g6 >>> 16, E3[A8 + 39 | 0] = g6 >>> 24, E3[A8 + 40 | 0] = I7, E3[A8 + 41 | 0] = I7 >>> 8, E3[A8 + 42 | 0] = I7 >>> 16, E3[A8 + 43 | 0] = I7 >>> 24, 0;
                    }, rb: function(A8) {
                      var I7, g6 = 0, C4 = 0;
                      w3 = I7 = w3 - 48 | 0, g6 = a3[28 + (A8 |= 0) | 0] | a3[A8 + 29 | 0] << 8 | a3[A8 + 30 | 0] << 16 | a3[A8 + 31 | 0] << 24, o3[I7 + 24 >> 2] = a3[A8 + 24 | 0] | a3[A8 + 25 | 0] << 8 | a3[A8 + 26 | 0] << 16 | a3[A8 + 27 | 0] << 24, o3[I7 + 28 >> 2] = g6, g6 = a3[A8 + 20 | 0] | a3[A8 + 21 | 0] << 8 | a3[A8 + 22 | 0] << 16 | a3[A8 + 23 | 0] << 24, o3[I7 + 16 >> 2] = a3[A8 + 16 | 0] | a3[A8 + 17 | 0] << 8 | a3[A8 + 18 | 0] << 16 | a3[A8 + 19 | 0] << 24, o3[I7 + 20 >> 2] = g6, g6 = a3[A8 + 4 | 0] | a3[A8 + 5 | 0] << 8 | a3[A8 + 6 | 0] << 16 | a3[A8 + 7 | 0] << 24, o3[I7 >> 2] = a3[0 | A8] | a3[A8 + 1 | 0] << 8 | a3[A8 + 2 | 0] << 16 | a3[A8 + 3 | 0] << 24, o3[I7 + 4 >> 2] = g6, g6 = a3[A8 + 12 | 0] | a3[A8 + 13 | 0] << 8 | a3[A8 + 14 | 0] << 16 | a3[A8 + 15 | 0] << 24, o3[I7 + 8 >> 2] = a3[A8 + 8 | 0] | a3[A8 + 9 | 0] << 8 | a3[A8 + 10 | 0] << 16 | a3[A8 + 11 | 0] << 24, o3[I7 + 12 >> 2] = g6, g6 = a3[A8 + 40 | 0] | a3[A8 + 41 | 0] << 8 | a3[A8 + 42 | 0] << 16 | a3[A8 + 43 | 0] << 24, o3[I7 + 32 >> 2] = a3[A8 + 36 | 0] | a3[A8 + 37 | 0] << 8 | a3[A8 + 38 | 0] << 16 | a3[A8 + 39 | 0] << 24, o3[I7 + 36 >> 2] = g6, OA(I7, I7, A8 + 32 | 0, A8), g6 = o3[I7 + 28 >> 2], C4 = o3[I7 + 24 >> 2], E3[A8 + 24 | 0] = C4, E3[A8 + 25 | 0] = C4 >>> 8, E3[A8 + 26 | 0] = C4 >>> 16, E3[A8 + 27 | 0] = C4 >>> 24, E3[A8 + 28 | 0] = g6, E3[A8 + 29 | 0] = g6 >>> 8, E3[A8 + 30 | 0] = g6 >>> 16, E3[A8 + 31 | 0] = g6 >>> 24, g6 = o3[I7 + 20 >> 2], C4 = o3[I7 + 16 >> 2], E3[A8 + 16 | 0] = C4, E3[A8 + 17 | 0] = C4 >>> 8, E3[A8 + 18 | 0] = C4 >>> 16, E3[A8 + 19 | 0] = C4 >>> 24, E3[A8 + 20 | 0] = g6, E3[A8 + 21 | 0] = g6 >>> 8, E3[A8 + 22 | 0] = g6 >>> 16, E3[A8 + 23 | 0] = g6 >>> 24, g6 = o3[I7 + 12 >> 2], C4 = o3[I7 + 8 >> 2], E3[A8 + 8 | 0] = C4, E3[A8 + 9 | 0] = C4 >>> 8, E3[A8 + 10 | 0] = C4 >>> 16, E3[A8 + 11 | 0] = C4 >>> 24, E3[A8 + 12 | 0] = g6, E3[A8 + 13 | 0] = g6 >>> 8, E3[A8 + 14 | 0] = g6 >>> 16, E3[A8 + 15 | 0] = g6 >>> 24, g6 = o3[I7 + 4 >> 2], C4 = o3[I7 >> 2], E3[0 | A8] = C4, E3[A8 + 1 | 0] = C4 >>> 8, E3[A8 + 2 | 0] = C4 >>> 16, E3[A8 + 3 | 0] = C4 >>> 24, E3[A8 + 4 | 0] = g6, E3[A8 + 5 | 0] = g6 >>> 8, E3[A8 + 6 | 0] = g6 >>> 16, E3[A8 + 7 | 0] = g6 >>> 24, C4 = o3[I7 + 36 >> 2], g6 = o3[I7 + 32 >> 2], E3[A8 + 32 | 0] = 1, E3[A8 + 33 | 0] = 0, E3[A8 + 34 | 0] = 0, E3[A8 + 35 | 0] = 0, E3[A8 + 36 | 0] = g6, E3[A8 + 37 | 0] = g6 >>> 8, E3[A8 + 38 | 0] = g6 >>> 16, E3[A8 + 39 | 0] = g6 >>> 24, E3[A8 + 40 | 0] = C4, E3[A8 + 41 | 0] = C4 >>> 8, E3[A8 + 42 | 0] = C4 >>> 16, E3[A8 + 43 | 0] = C4 >>> 24, w3 = I7 + 48 | 0;
                    }, sb: function(A8, I7, g6, C4, B4, i4, f4, c4, e4, r4) {
                      A8 |= 0, I7 |= 0, C4 |= 0, i4 |= 0, f4 |= 0, e4 |= 0, r4 |= 0;
                      var D4, t4 = 0, y4 = 0, h4 = 0;
                      return t4 = B4 |= 0, t4 |= B4 = 0, D4 = B4 | (c4 |= 0), w3 = B4 = w3 - 384 | 0, (g6 |= 0) && (o3[g6 >> 2] = 0, o3[g6 + 4 >> 2] = 0), !i4 & t4 >>> 0 < 4294967279 ? (ZA(y4 = B4 + 16 | 0, 64, h4 = A8 + 32 | 0, A8), CI(c4 = B4 + 80 | 0, y4), iI(y4, 64), $A(c4, f4, D4, e4), $A(c4, 34288, 0 - D4 & 15, 0), o3[B4 + 72 >> 2] = 0, o3[B4 + 76 >> 2] = 0, o3[(f4 = B4 - -64 | 0) >> 2] = 0, o3[f4 + 4 >> 2] = 0, o3[B4 + 56 >> 2] = 0, o3[B4 + 60 >> 2] = 0, o3[B4 + 48 >> 2] = 0, o3[B4 + 52 >> 2] = 0, o3[B4 + 40 >> 2] = 0, o3[B4 + 44 >> 2] = 0, o3[B4 + 32 >> 2] = 0, o3[B4 + 36 >> 2] = 0, o3[B4 + 16 >> 2] = 0, o3[B4 + 20 >> 2] = 0, o3[B4 + 24 >> 2] = 0, o3[B4 + 28 >> 2] = 0, E3[B4 + 16 | 0] = r4, FA(y4, y4, 64, 0, h4, 1, A8), $A(c4, y4, 64, 0), E3[0 | I7] = a3[B4 + 16 | 0], FA(I7 = I7 + 1 | 0, C4, t4, i4, h4, 2, A8), $A(c4, I7, t4, i4), $A(c4, 34288, 15 & t4, 0), o3[B4 + 8 >> 2] = D4, o3[B4 + 12 >> 2] = e4, $A(c4, C4 = B4 + 8 | 0, 8, 0), o3[B4 + 8 >> 2] = t4 - -64, o3[B4 + 12 >> 2] = i4 - ((t4 >>> 0 < 4294967232) - 1 | 0), $A(c4, C4, 8, 0), BI(c4, I7 = I7 + t4 | 0), iI(c4, 256), E3[A8 + 36 | 0] = a3[A8 + 36 | 0] ^ a3[0 | I7], E3[A8 + 37 | 0] = a3[A8 + 37 | 0] ^ a3[I7 + 1 | 0], E3[A8 + 38 | 0] = a3[A8 + 38 | 0] ^ a3[I7 + 2 | 0], E3[A8 + 39 | 0] = a3[A8 + 39 | 0] ^ a3[I7 + 3 | 0], E3[A8 + 40 | 0] = a3[A8 + 40 | 0] ^ a3[I7 + 4 | 0], E3[A8 + 41 | 0] = a3[A8 + 41 | 0] ^ a3[I7 + 5 | 0], E3[A8 + 42 | 0] = a3[A8 + 42 | 0] ^ a3[I7 + 6 | 0], E3[A8 + 43 | 0] = a3[A8 + 43 | 0] ^ a3[I7 + 7 | 0], sA(h4), (2 & r4 || fA(h4, 4)) && (I7 = a3[A8 + 28 | 0] | a3[A8 + 29 | 0] << 8 | a3[A8 + 30 | 0] << 16 | a3[A8 + 31 | 0] << 24, o3[B4 + 360 >> 2] = a3[A8 + 24 | 0] | a3[A8 + 25 | 0] << 8 | a3[A8 + 26 | 0] << 16 | a3[A8 + 27 | 0] << 24, o3[B4 + 364 >> 2] = I7, I7 = a3[A8 + 20 | 0] | a3[A8 + 21 | 0] << 8 | a3[A8 + 22 | 0] << 16 | a3[A8 + 23 | 0] << 24, o3[B4 + 352 >> 2] = a3[A8 + 16 | 0] | a3[A8 + 17 | 0] << 8 | a3[A8 + 18 | 0] << 16 | a3[A8 + 19 | 0] << 24, o3[B4 + 356 >> 2] = I7, I7 = a3[A8 + 4 | 0] | a3[A8 + 5 | 0] << 8 | a3[A8 + 6 | 0] << 16 | a3[A8 + 7 | 0] << 24, o3[B4 + 336 >> 2] = a3[0 | A8] | a3[A8 + 1 | 0] << 8 | a3[A8 + 2 | 0] << 16 | a3[A8 + 3 | 0] << 24, o3[B4 + 340 >> 2] = I7, I7 = a3[A8 + 12 | 0] | a3[A8 + 13 | 0] << 8 | a3[A8 + 14 | 0] << 16 | a3[A8 + 15 | 0] << 24, o3[B4 + 344 >> 2] = a3[A8 + 8 | 0] | a3[A8 + 9 | 0] << 8 | a3[A8 + 10 | 0] << 16 | a3[A8 + 11 | 0] << 24, o3[B4 + 348 >> 2] = I7, I7 = a3[A8 + 40 | 0] | a3[A8 + 41 | 0] << 8 | a3[A8 + 42 | 0] << 16 | a3[A8 + 43 | 0] << 24, o3[B4 + 368 >> 2] = a3[A8 + 36 | 0] | a3[A8 + 37 | 0] << 8 | a3[A8 + 38 | 0] << 16 | a3[A8 + 39 | 0] << 24, o3[B4 + 372 >> 2] = I7, OA(I7 = B4 + 336 | 0, I7, h4, A8), I7 = o3[B4 + 364 >> 2], C4 = o3[B4 + 360 >> 2], E3[A8 + 24 | 0] = C4, E3[A8 + 25 | 0] = C4 >>> 8, E3[A8 + 26 | 0] = C4 >>> 16, E3[A8 + 27 | 0] = C4 >>> 24, E3[A8 + 28 | 0] = I7, E3[A8 + 29 | 0] = I7 >>> 8, E3[A8 + 30 | 0] = I7 >>> 16, E3[A8 + 31 | 0] = I7 >>> 24, I7 = o3[B4 + 356 >> 2], C4 = o3[B4 + 352 >> 2], E3[A8 + 16 | 0] = C4, E3[A8 + 17 | 0] = C4 >>> 8, E3[A8 + 18 | 0] = C4 >>> 16, E3[A8 + 19 | 0] = C4 >>> 24, E3[A8 + 20 | 0] = I7, E3[A8 + 21 | 0] = I7 >>> 8, E3[A8 + 22 | 0] = I7 >>> 16, E3[A8 + 23 | 0] = I7 >>> 24, I7 = o3[B4 + 348 >> 2], C4 = o3[B4 + 344 >> 2], E3[A8 + 8 | 0] = C4, E3[A8 + 9 | 0] = C4 >>> 8, E3[A8 + 10 | 0] = C4 >>> 16, E3[A8 + 11 | 0] = C4 >>> 24, E3[A8 + 12 | 0] = I7, E3[A8 + 13 | 0] = I7 >>> 8, E3[A8 + 14 | 0] = I7 >>> 16, E3[A8 + 15 | 0] = I7 >>> 24, I7 = o3[B4 + 340 >> 2], C4 = o3[B4 + 336 >> 2], E3[0 | A8] = C4, E3[A8 + 1 | 0] = C4 >>> 8, E3[A8 + 2 | 0] = C4 >>> 16, E3[A8 + 3 | 0] = C4 >>> 24, E3[A8 + 4 | 0] = I7, E3[A8 + 5 | 0] = I7 >>> 8, E3[A8 + 6 | 0] = I7 >>> 16, E3[A8 + 7 | 0] = I7 >>> 24, I7 = o3[B4 + 368 >> 2], C4 = o3[B4 + 372 >> 2], E3[A8 + 32 | 0] = 1, E3[A8 + 33 | 0] = 0, E3[A8 + 34 | 0] = 0, E3[A8 + 35 | 0] = 0, E3[A8 + 36 | 0] = I7, E3[A8 + 37 | 0] = I7 >>> 8, E3[A8 + 38 | 0] = I7 >>> 16, E3[A8 + 39 | 0] = I7 >>> 24, E3[A8 + 40 | 0] = C4, E3[A8 + 41 | 0] = C4 >>> 8, E3[A8 + 42 | 0] = C4 >>> 16, E3[A8 + 43 | 0] = C4 >>> 24), g6 && (i4 = (A8 = t4 + 17 | 0) >>> 0 < 17 ? i4 + 1 | 0 : i4, o3[g6 >> 2] = A8, o3[g6 + 4 >> 2] = i4), w3 = B4 + 384 | 0) : (zA(), Q3()), 0;
                    }, tb: function(A8, I7, g6, C4, B4, i4, f4, c4, e4, r4) {
                      A8 |= 0, I7 |= 0, C4 |= 0, B4 |= 0, c4 |= 0, r4 |= 0;
                      var D4, t4 = 0, y4 = 0, h4 = 0, n4 = 0, s4 = 0, k4 = 0;
                      t4 = i4 |= 0, i4 = f4 |= 0, y4 = 0 | t4, D4 = e4 |= 0, w3 = f4 = w3 - 400 | 0, (g6 |= 0) && (o3[g6 >> 2] = 0, o3[g6 + 4 >> 2] = 0), C4 && (E3[0 | C4] = 255), k4 = -1;
                      A: {
                        I: {
                          if (!((e4 = y4 >>> 0 < 17) & !i4)) {
                            if (s4 = t4 = i4 - e4 | 0, !t4 & (e4 = y4 - 17 | 0) >>> 0 >= 4294967279 | t4)
                              break I;
                            ZA(h4 = f4 + 32 | 0, 64, n4 = A8 + 32 | 0, A8), CI(t4 = f4 + 96 | 0, h4), iI(h4, 64), $A(t4, c4, D4, r4), $A(t4, 34288, 0 - D4 & 15, 0), o3[f4 + 88 >> 2] = 0, o3[f4 + 92 >> 2] = 0, o3[f4 + 80 >> 2] = 0, o3[f4 + 84 >> 2] = 0, o3[f4 + 72 >> 2] = 0, o3[f4 + 76 >> 2] = 0, o3[(c4 = f4 - -64 | 0) >> 2] = 0, o3[c4 + 4 >> 2] = 0, o3[f4 + 56 >> 2] = 0, o3[f4 + 60 >> 2] = 0, o3[f4 + 48 >> 2] = 0, o3[f4 + 52 >> 2] = 0, o3[f4 + 40 >> 2] = 0, o3[f4 + 44 >> 2] = 0, o3[f4 + 32 >> 2] = 0, o3[f4 + 36 >> 2] = 0, E3[f4 + 32 | 0] = a3[0 | B4], FA(h4, h4, 64, 0, n4, 1, A8), c4 = a3[f4 + 32 | 0], E3[f4 + 32 | 0] = a3[0 | B4], $A(t4, h4, 64, 0), $A(t4, B4 = B4 + 1 | 0, e4, s4), $A(t4, 34288, y4 - 1 & 15, 0), o3[f4 + 24 >> 2] = D4, o3[f4 + 28 >> 2] = r4, $A(t4, r4 = f4 + 24 | 0, 8, 0), i4 = (y4 = y4 + 47 | 0) >>> 0 < 47 ? i4 + 1 | 0 : i4, o3[f4 + 24 >> 2] = y4, o3[f4 + 28 >> 2] = i4, $A(t4, r4, 8, 0), BI(t4, f4), iI(t4, 256), eA(f4, B4 + e4 | 0, 16) ? iI(f4, 16) : (FA(I7, B4, e4, s4, n4, 2, A8), E3[A8 + 36 | 0] = a3[A8 + 36 | 0] ^ a3[0 | f4], E3[A8 + 37 | 0] = a3[A8 + 37 | 0] ^ a3[f4 + 1 | 0], E3[A8 + 38 | 0] = a3[A8 + 38 | 0] ^ a3[f4 + 2 | 0], E3[A8 + 39 | 0] = a3[A8 + 39 | 0] ^ a3[f4 + 3 | 0], E3[A8 + 40 | 0] = a3[A8 + 40 | 0] ^ a3[f4 + 4 | 0], E3[A8 + 41 | 0] = a3[A8 + 41 | 0] ^ a3[f4 + 5 | 0], E3[A8 + 42 | 0] = a3[A8 + 42 | 0] ^ a3[f4 + 6 | 0], E3[A8 + 43 | 0] = a3[A8 + 43 | 0] ^ a3[f4 + 7 | 0], sA(n4), (2 & c4 || fA(n4, 4)) && (I7 = a3[A8 + 28 | 0] | a3[A8 + 29 | 0] << 8 | a3[A8 + 30 | 0] << 16 | a3[A8 + 31 | 0] << 24, o3[f4 + 376 >> 2] = a3[A8 + 24 | 0] | a3[A8 + 25 | 0] << 8 | a3[A8 + 26 | 0] << 16 | a3[A8 + 27 | 0] << 24, o3[f4 + 380 >> 2] = I7, I7 = a3[A8 + 20 | 0] | a3[A8 + 21 | 0] << 8 | a3[A8 + 22 | 0] << 16 | a3[A8 + 23 | 0] << 24, o3[f4 + 368 >> 2] = a3[A8 + 16 | 0] | a3[A8 + 17 | 0] << 8 | a3[A8 + 18 | 0] << 16 | a3[A8 + 19 | 0] << 24, o3[f4 + 372 >> 2] = I7, I7 = a3[A8 + 4 | 0] | a3[A8 + 5 | 0] << 8 | a3[A8 + 6 | 0] << 16 | a3[A8 + 7 | 0] << 24, o3[f4 + 352 >> 2] = a3[0 | A8] | a3[A8 + 1 | 0] << 8 | a3[A8 + 2 | 0] << 16 | a3[A8 + 3 | 0] << 24, o3[f4 + 356 >> 2] = I7, I7 = a3[A8 + 12 | 0] | a3[A8 + 13 | 0] << 8 | a3[A8 + 14 | 0] << 16 | a3[A8 + 15 | 0] << 24, o3[f4 + 360 >> 2] = a3[A8 + 8 | 0] | a3[A8 + 9 | 0] << 8 | a3[A8 + 10 | 0] << 16 | a3[A8 + 11 | 0] << 24, o3[f4 + 364 >> 2] = I7, I7 = a3[A8 + 40 | 0] | a3[A8 + 41 | 0] << 8 | a3[A8 + 42 | 0] << 16 | a3[A8 + 43 | 0] << 24, o3[f4 + 384 >> 2] = a3[A8 + 36 | 0] | a3[A8 + 37 | 0] << 8 | a3[A8 + 38 | 0] << 16 | a3[A8 + 39 | 0] << 24, o3[f4 + 388 >> 2] = I7, OA(I7 = f4 + 352 | 0, I7, n4, A8), I7 = o3[f4 + 380 >> 2], B4 = o3[f4 + 376 >> 2], E3[A8 + 24 | 0] = B4, E3[A8 + 25 | 0] = B4 >>> 8, E3[A8 + 26 | 0] = B4 >>> 16, E3[A8 + 27 | 0] = B4 >>> 24, E3[A8 + 28 | 0] = I7, E3[A8 + 29 | 0] = I7 >>> 8, E3[A8 + 30 | 0] = I7 >>> 16, E3[A8 + 31 | 0] = I7 >>> 24, I7 = o3[f4 + 372 >> 2], B4 = o3[f4 + 368 >> 2], E3[A8 + 16 | 0] = B4, E3[A8 + 17 | 0] = B4 >>> 8, E3[A8 + 18 | 0] = B4 >>> 16, E3[A8 + 19 | 0] = B4 >>> 24, E3[A8 + 20 | 0] = I7, E3[A8 + 21 | 0] = I7 >>> 8, E3[A8 + 22 | 0] = I7 >>> 16, E3[A8 + 23 | 0] = I7 >>> 24, I7 = o3[f4 + 364 >> 2], B4 = o3[f4 + 360 >> 2], E3[A8 + 8 | 0] = B4, E3[A8 + 9 | 0] = B4 >>> 8, E3[A8 + 10 | 0] = B4 >>> 16, E3[A8 + 11 | 0] = B4 >>> 24, E3[A8 + 12 | 0] = I7, E3[A8 + 13 | 0] = I7 >>> 8, E3[A8 + 14 | 0] = I7 >>> 16, E3[A8 + 15 | 0] = I7 >>> 24, I7 = o3[f4 + 356 >> 2], B4 = o3[f4 + 352 >> 2], E3[0 | A8] = B4, E3[A8 + 1 | 0] = B4 >>> 8, E3[A8 + 2 | 0] = B4 >>> 16, E3[A8 + 3 | 0] = B4 >>> 24, E3[A8 + 4 | 0] = I7, E3[A8 + 5 | 0] = I7 >>> 8, E3[A8 + 6 | 0] = I7 >>> 16, E3[A8 + 7 | 0] = I7 >>> 24, I7 = o3[f4 + 384 >> 2], B4 = o3[f4 + 388 >> 2], E3[A8 + 32 | 0] = 1, E3[A8 + 33 | 0] = 0, E3[A8 + 34 | 0] = 0, E3[A8 + 35 | 0] = 0, E3[A8 + 36 | 0] = I7, E3[A8 + 37 | 0] = I7 >>> 8, E3[A8 + 38 | 0] = I7 >>> 16, E3[A8 + 39 | 0] = I7 >>> 24, E3[A8 + 40 | 0] = B4, E3[A8 + 41 | 0] = B4 >>> 8, E3[A8 + 42 | 0] = B4 >>> 16, E3[A8 + 43 | 0] = B4 >>> 24), g6 && (o3[g6 >> 2] = e4, o3[g6 + 4 >> 2] = s4), k4 = 0, C4 && (E3[0 | C4] = c4));
                          }
                          w3 = f4 + 400 | 0;
                          break A;
                        }
                        zA(), Q3();
                      }
                      return 0 | k4;
                    }, ub: function() {
                      return 52;
                    }, vb: function() {
                      return 17;
                    }, wb: fI, xb: aI, yb: function() {
                      return -18;
                    }, zb: tI, Ab: rI, Bb: function() {
                      return 2;
                    }, Cb: function() {
                      return 3;
                    }, Db: DI, Eb: oI, Fb: function(A8, I7, g6, C4, B4) {
                      A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0;
                      var Q4, i4 = 0, o4 = 0, f4 = 0, c4 = 0, e4 = 0, r4 = 0, D4 = 0, t4 = 0, y4 = 0, w4 = 0, n4 = 0, s4 = 0, k4 = 0, F4 = 0, S4 = 0;
                      if (k4 = 1886610805 ^ (i4 = a3[0 | (B4 |= 0)] | a3[B4 + 1 | 0] << 8 | a3[B4 + 2 | 0] << 16 | a3[B4 + 3 | 0] << 24), t4 = 1936682341 ^ (o4 = a3[B4 + 4 | 0] | a3[B4 + 5 | 0] << 8 | a3[B4 + 6 | 0] << 16 | a3[B4 + 7 | 0] << 24), i4 ^= 1852142177, f4 = 1819895653 ^ o4, F4 = 1852075885 ^ (o4 = a3[B4 + 8 | 0] | a3[B4 + 9 | 0] << 8 | a3[B4 + 10 | 0] << 16 | a3[B4 + 11 | 0] << 24), S4 = 1685025377 ^ (B4 = a3[B4 + 12 | 0] | a3[B4 + 13 | 0] << 8 | a3[B4 + 14 | 0] << 16 | a3[B4 + 15 | 0] << 24), D4 = 2037671283 ^ o4, o4 = 1952801890 ^ B4, n4 = g6, (0 | (w4 = (g6 + I7 | 0) - (Q4 = 7 & g6) | 0)) != (0 | I7)) {
                        for (; g6 = (e4 = o4 ^ (s4 = a3[I7 + 4 | 0] | a3[I7 + 5 | 0] << 8 | a3[I7 + 6 | 0] << 16 | a3[I7 + 7 | 0] << 24)) + f4 | 0, D4 = C4 = i4 + (B4 = D4 ^ (y4 = a3[0 | I7] | a3[I7 + 1 | 0] << 8 | a3[I7 + 2 | 0] << 16 | a3[I7 + 3 | 0] << 24)) | 0, r4 = g6 = C4 >>> 0 < B4 >>> 0 ? g6 + 1 | 0 : g6, i4 = C4, C4 = g6, g6 = t4 + S4 | 0, g6 = (o4 = k4 + F4 | 0) >>> 0 < F4 >>> 0 ? g6 + 1 | 0 : g6, c4 = (f4 = DA(F4, S4, 13) ^ o4) + i4 | 0, C4 = (i4 = h3 ^ g6) + C4 | 0, i4 = DA(f4, i4, 17) ^ c4, k4 = DA(i4, C4 = (f4 = f4 >>> 0 > c4 >>> 0 ? C4 + 1 | 0 : C4) ^ h3, 13), t4 = h3, e4 = DA(B4, e4, 16), B4 = r4 ^ h3, e4 ^= D4, r4 = DA(o4, g6, 32), g6 = h3 + B4 | 0, g6 = (D4 = C4) + (C4 = (o4 = e4 + r4 | 0) >>> 0 < r4 >>> 0 ? g6 + 1 | 0 : g6) | 0, r4 = g6 = (D4 = i4 + o4 | 0) >>> 0 < o4 >>> 0 ? g6 + 1 | 0 : g6, k4 = DA(i4 = D4 ^ k4, g6 ^= t4, 17), t4 = h3, e4 = DA(e4, B4, 21), B4 = C4 ^ h3, e4 ^= o4, o4 = DA(c4, f4, 32), C4 = h3 + B4 | 0, g6 = (o4 = o4 >>> 0 > (f4 = e4 + o4 | 0) >>> 0 ? C4 + 1 | 0 : C4) + g6 | 0, F4 = (i4 = i4 + f4 | 0) ^ k4, C4 = g6 = i4 >>> 0 < f4 >>> 0 ? g6 + 1 | 0 : g6, S4 = g6 ^ t4, g6 = DA(e4, B4, 16), e4 = o4 ^= h3, c4 = DA(g6 ^= f4, o4, 21), f4 = h3, r4 = (o4 = DA(D4, r4, 32)) + g6 | 0, g6 = h3 + e4 | 0, D4 = c4 ^ r4, o4 = (g6 = o4 >>> 0 > r4 >>> 0 ? g6 + 1 | 0 : g6) ^ f4, i4 = DA(i4, C4, 32), f4 = h3, k4 = r4 ^ y4, t4 = g6 ^ s4, (0 | w4) != (0 | (I7 = I7 + 8 | 0)); )
                          ;
                        I7 = w4;
                      }
                      switch (s4 = 0, c4 = n4 << 24, Q4 - 1 | 0) {
                        case 6:
                          c4 |= a3[I7 + 6 | 0] << 16;
                        case 5:
                          c4 |= a3[I7 + 5 | 0] << 8;
                        case 4:
                          c4 |= a3[I7 + 4 | 0];
                        case 3:
                          s4 |= (g6 = a3[I7 + 3 | 0]) << 24, c4 |= C4 = g6 >>> 8 | 0;
                        case 2:
                          s4 |= (C4 = a3[I7 + 2 | 0]) << 16, c4 |= g6 = C4 >>> 16 | 0;
                        case 1:
                          s4 |= (g6 = a3[I7 + 1 | 0]) << 8, c4 |= C4 = g6 >>> 24 | 0;
                        case 0:
                          s4 = a3[0 | I7] | s4;
                      }
                      return I7 = A8, C4 = DA(B4 = D4 ^ s4, A8 = o4 ^ c4, 16), A8 = A8 + f4 | 0, r4 = A8 = (D4 = B4 + i4 | 0) >>> 0 < i4 >>> 0 ? A8 + 1 | 0 : A8, y4 = DA(B4 = C4 ^ D4, A8 ^= g6 = h3, 21), o4 = h3, g6 = t4 + S4 | 0, C4 = g6 = (i4 = k4 + F4 | 0) >>> 0 < F4 >>> 0 ? g6 + 1 | 0 : g6, w4 = B4, B4 = DA(i4, g6, 32), g6 = h3 + A8 | 0, A8 = o4, o4 = g6 = B4 >>> 0 > (f4 = w4 + B4 | 0) >>> 0 ? g6 + 1 | 0 : g6, e4 = DA(B4 = f4 ^ y4, A8 ^= g6, 16), y4 = h3, n4 = DA(F4, S4, 13) ^ i4, C4 = (w4 = h3 ^ C4) + r4 | 0, r4 = B4, B4 = DA(g6 = (i4 = n4) + D4 | 0, C4 = g6 >>> 0 < i4 >>> 0 ? C4 + 1 | 0 : C4, 32), A8 = h3 + A8 | 0, t4 = DA(i4 = e4 ^ (D4 = r4 + B4 | 0), B4 = (r4 = B4 >>> 0 > D4 >>> 0 ? A8 + 1 | 0 : A8) ^ y4, 21), y4 = h3, e4 = DA(n4, w4, 17) ^ g6, g6 = (n4 = h3 ^ C4) + o4 | 0, A8 = g6 = (C4 = f4 = (A8 = e4) + f4 | 0) >>> 0 < A8 >>> 0 ? g6 + 1 | 0 : g6, o4 = i4, i4 = DA(C4, g6, 32), g6 = h3 + B4 | 0, w4 = g6 = (o4 = i4 >>> 0 > (f4 = o4 + i4 | 0) >>> 0 ? g6 + 1 | 0 : g6) ^ y4, y4 = DA(t4 ^= f4, g6, 16), i4 = h3, e4 = DA(e4, n4, 13) ^ C4, A8 = (n4 = A8 ^ h3) + r4 | 0, C4 = A8 = (g6 = e4) >>> 0 > (B4 = g6 + D4 | 0) >>> 0 ? A8 + 1 | 0 : A8, A8 = DA(B4, A8, 32), g6 = w4 + h3 | 0, w4 = g6 = (r4 = i4) ^ (i4 = (A8 = t4 + (255 ^ A8) | 0) >>> 0 < t4 >>> 0 ? g6 + 1 | 0 : g6), D4 = A8, y4 = DA(t4 = y4 ^ A8, g6, 21), r4 = h3, e4 = DA(e4, n4, 17) ^ B4, g6 = (n4 = C4 ^ h3) + (o4 ^ c4) | 0, C4 = g6 = (A8 = f4 ^ s4) >>> 0 > (B4 = e4 + A8 | 0) >>> 0 ? g6 + 1 | 0 : g6, A8 = DA(B4, g6, 32), g6 = w4 + h3 | 0, w4 = g6 = (o4 = (A8 = A8 + t4 | 0) >>> 0 < t4 >>> 0 ? g6 + 1 | 0 : g6) ^ r4, r4 = A8, y4 = DA(t4 = y4 ^ A8, g6, 16), f4 = h3, e4 = DA(e4, n4, 13) ^ B4, A8 = i4 + (c4 = h3 ^ C4) | 0, A8 = DA(B4 = D4 + e4 | 0, g6 = A8 = B4 >>> 0 < D4 >>> 0 ? A8 + 1 | 0 : A8, 32), C4 = w4 + h3 | 0, n4 = C4 = (i4 = (A8 = A8 + t4 | 0) >>> 0 < t4 >>> 0 ? C4 + 1 | 0 : C4) ^ f4, f4 = A8, w4 = DA(t4 = y4 ^ A8, C4, 21), y4 = h3, A8 = DA(e4, c4, 17), g6 = o4 + (c4 = g6 ^ h3) | 0, C4 = g6 = (B4 = r4 + (D4 = A8 ^ B4) | 0) >>> 0 < r4 >>> 0 ? g6 + 1 | 0 : g6, A8 = DA(B4, g6, 32), g6 = n4 + h3 | 0, r4 = A8 = A8 + t4 | 0, o4 = g6 = A8 >>> 0 < t4 >>> 0 ? g6 + 1 | 0 : g6, n4 = DA(e4 = w4 ^ A8, g6 ^= y4, 16), w4 = h3, A8 = DA(D4, c4, 13), C4 = i4 + (y4 = C4 ^ h3) | 0, A8 = DA(i4 = f4 + (c4 = A8 ^ B4) | 0, C4 = i4 >>> 0 < f4 >>> 0 ? C4 + 1 | 0 : C4, 32), g6 = g6 + h3 | 0, D4 = A8 = A8 + e4 | 0, f4 = g6 = A8 >>> 0 < e4 >>> 0 ? g6 + 1 | 0 : g6, e4 = DA(B4 = n4 ^ A8, A8 = g6 ^ w4, 21), n4 = h3, c4 = DA(c4, y4, 17), g6 = o4 + (w4 = C4 ^ h3) | 0, y4 = i4 ^ c4, i4 = B4, B4 = DA(C4 = r4 + y4 | 0, g6 = C4 >>> 0 < r4 >>> 0 ? g6 + 1 | 0 : g6, 32), A8 = h3 + A8 | 0, n4 = DA(i4 = e4 ^ (r4 = i4 + B4 | 0), B4 = (o4 = B4 >>> 0 > r4 >>> 0 ? A8 + 1 | 0 : A8) ^ n4, 16), c4 = h3, A8 = DA(y4, w4, 13), g6 = f4 + (w4 = g6 ^ h3) | 0, A8 = g6 = (C4 = D4 + (y4 = A8 ^ C4) | 0) >>> 0 < D4 >>> 0 ? g6 + 1 | 0 : g6, f4 = DA(C4, g6, 32), g6 = h3 + B4 | 0, c4 = DA(n4 ^ (B4 = i4 = f4 + i4 | 0), (g6 = B4 >>> 0 < f4 >>> 0 ? g6 + 1 | 0 : g6) ^ c4, 21), D4 = h3, i4 = DA(y4, w4, 17) ^ C4, f4 = DA(i4, A8 ^= h3, 13), A8 = A8 + o4 | 0, C4 = A8 = h3 ^ ((i4 = i4 + r4 | 0) >>> 0 < r4 >>> 0 ? A8 + 1 | 0 : A8), i4 = DA(o4 = i4 ^ f4, A8, 17) ^ c4, A8 = h3 ^ D4, C4 = g6 + C4 | 0, g6 = DA(g6 = B4 + o4 | 0, C4 = g6 >>> 0 < B4 >>> 0 ? C4 + 1 | 0 : C4, 32) ^ i4 ^ g6, E3[0 | I7] = g6, E3[I7 + 1 | 0] = g6 >>> 8, E3[I7 + 2 | 0] = g6 >>> 16, E3[I7 + 3 | 0] = g6 >>> 24, A8 ^= C4 ^ h3, E3[I7 + 4 | 0] = A8, E3[I7 + 5 | 0] = A8 >>> 8, E3[I7 + 6 | 0] = A8 >>> 16, E3[I7 + 7 | 0] = A8 >>> 24, 0;
                    }, Gb: function(A8) {
                      HA(A8 |= 0, 16);
                    }, Hb: EI, Ib: eI, Jb: aI, Kb: aI, Lb: eI, Mb: function() {
                      return -65;
                    }, Nb: function(A8, I7, g6) {
                      A8 |= 0;
                      var C4, B4, Q4, i4, o4 = 0, f4 = 0, c4 = 0, e4 = 0, r4 = 0;
                      return w3 = Q4 = w3 - 160 | 0, aA(I7 |= 0, g6 |= 0, 32, 0), E3[0 | I7] = 248 & a3[0 | I7], E3[I7 + 31 | 0] = 63 & a3[I7 + 31 | 0] | 64, u3(Q4, I7), MA(A8, Q4), f4 = a3[(B4 = g6) + 8 | 0] | a3[B4 + 9 | 0] << 8 | a3[B4 + 10 | 0] << 16 | a3[B4 + 11 | 0] << 24, o4 = a3[B4 + 12 | 0] | a3[B4 + 13 | 0] << 8 | a3[B4 + 14 | 0] << 16 | a3[B4 + 15 | 0] << 24, c4 = a3[B4 + 16 | 0] | a3[B4 + 17 | 0] << 8 | a3[B4 + 18 | 0] << 16 | a3[B4 + 19 | 0] << 24, e4 = a3[B4 + 20 | 0] | a3[B4 + 21 | 0] << 8 | a3[B4 + 22 | 0] << 16 | a3[B4 + 23 | 0] << 24, r4 = a3[0 | B4] | a3[B4 + 1 | 0] << 8 | a3[B4 + 2 | 0] << 16 | a3[B4 + 3 | 0] << 24, g6 = a3[B4 + 4 | 0] | a3[B4 + 5 | 0] << 8 | a3[B4 + 6 | 0] << 16 | a3[B4 + 7 | 0] << 24, i4 = a3[B4 + 28 | 0] | a3[B4 + 29 | 0] << 8 | a3[B4 + 30 | 0] << 16 | a3[B4 + 31 | 0] << 24, C4 = I7, I7 = a3[B4 + 24 | 0] | a3[B4 + 25 | 0] << 8 | a3[B4 + 26 | 0] << 16 | a3[B4 + 27 | 0] << 24, E3[C4 + 24 | 0] = I7, E3[C4 + 25 | 0] = I7 >>> 8, E3[C4 + 26 | 0] = I7 >>> 16, E3[C4 + 27 | 0] = I7 >>> 24, E3[C4 + 28 | 0] = i4, E3[C4 + 29 | 0] = i4 >>> 8, E3[C4 + 30 | 0] = i4 >>> 16, E3[C4 + 31 | 0] = i4 >>> 24, E3[C4 + 16 | 0] = c4, E3[C4 + 17 | 0] = c4 >>> 8, E3[C4 + 18 | 0] = c4 >>> 16, E3[C4 + 19 | 0] = c4 >>> 24, E3[C4 + 20 | 0] = e4, E3[C4 + 21 | 0] = e4 >>> 8, E3[C4 + 22 | 0] = e4 >>> 16, E3[C4 + 23 | 0] = e4 >>> 24, E3[C4 + 8 | 0] = f4, E3[C4 + 9 | 0] = f4 >>> 8, E3[C4 + 10 | 0] = f4 >>> 16, E3[C4 + 11 | 0] = f4 >>> 24, E3[C4 + 12 | 0] = o4, E3[C4 + 13 | 0] = o4 >>> 8, E3[C4 + 14 | 0] = o4 >>> 16, E3[C4 + 15 | 0] = o4 >>> 24, E3[0 | C4] = r4, E3[C4 + 1 | 0] = r4 >>> 8, E3[C4 + 2 | 0] = r4 >>> 16, E3[C4 + 3 | 0] = r4 >>> 24, E3[C4 + 4 | 0] = g6, E3[C4 + 5 | 0] = g6 >>> 8, E3[C4 + 6 | 0] = g6 >>> 16, E3[C4 + 7 | 0] = g6 >>> 24, c4 = a3[(o4 = A8) + 8 | 0] | a3[o4 + 9 | 0] << 8 | a3[o4 + 10 | 0] << 16 | a3[o4 + 11 | 0] << 24, e4 = a3[o4 + 12 | 0] | a3[o4 + 13 | 0] << 8 | a3[o4 + 14 | 0] << 16 | a3[o4 + 15 | 0] << 24, r4 = a3[o4 + 16 | 0] | a3[o4 + 17 | 0] << 8 | a3[o4 + 18 | 0] << 16 | a3[o4 + 19 | 0] << 24, g6 = a3[o4 + 20 | 0] | a3[o4 + 21 | 0] << 8 | a3[o4 + 22 | 0] << 16 | a3[o4 + 23 | 0] << 24, I7 = a3[0 | o4] | a3[o4 + 1 | 0] << 8 | a3[o4 + 2 | 0] << 16 | a3[o4 + 3 | 0] << 24, A8 = a3[o4 + 4 | 0] | a3[o4 + 5 | 0] << 8 | a3[o4 + 6 | 0] << 16 | a3[o4 + 7 | 0] << 24, f4 = a3[o4 + 28 | 0] | a3[o4 + 29 | 0] << 8 | a3[o4 + 30 | 0] << 16 | a3[o4 + 31 | 0] << 24, o4 = a3[o4 + 24 | 0] | a3[o4 + 25 | 0] << 8 | a3[o4 + 26 | 0] << 16 | a3[o4 + 27 | 0] << 24, E3[C4 + 56 | 0] = o4, E3[C4 + 57 | 0] = o4 >>> 8, E3[C4 + 58 | 0] = o4 >>> 16, E3[C4 + 59 | 0] = o4 >>> 24, E3[C4 + 60 | 0] = f4, E3[C4 + 61 | 0] = f4 >>> 8, E3[C4 + 62 | 0] = f4 >>> 16, E3[C4 + 63 | 0] = f4 >>> 24, E3[C4 + 48 | 0] = r4, E3[C4 + 49 | 0] = r4 >>> 8, E3[C4 + 50 | 0] = r4 >>> 16, E3[C4 + 51 | 0] = r4 >>> 24, E3[C4 + 52 | 0] = g6, E3[C4 + 53 | 0] = g6 >>> 8, E3[C4 + 54 | 0] = g6 >>> 16, E3[C4 + 55 | 0] = g6 >>> 24, E3[C4 + 40 | 0] = c4, E3[C4 + 41 | 0] = c4 >>> 8, E3[C4 + 42 | 0] = c4 >>> 16, E3[C4 + 43 | 0] = c4 >>> 24, E3[C4 + 44 | 0] = e4, E3[C4 + 45 | 0] = e4 >>> 8, E3[C4 + 46 | 0] = e4 >>> 16, E3[C4 + 47 | 0] = e4 >>> 24, E3[C4 + 32 | 0] = I7, E3[C4 + 33 | 0] = I7 >>> 8, E3[C4 + 34 | 0] = I7 >>> 16, E3[C4 + 35 | 0] = I7 >>> 24, E3[C4 + 36 | 0] = A8, E3[C4 + 37 | 0] = A8 >>> 8, E3[C4 + 38 | 0] = A8 >>> 16, E3[C4 + 39 | 0] = A8 >>> 24, w3 = Q4 + 160 | 0, 0;
                    }, Ob: function(A8, I7) {
                      A8 |= 0, I7 |= 0;
                      var g6, C4, B4, Q4, i4, f4 = 0, c4 = 0, e4 = 0;
                      return w3 = c4 = w3 - 192 | 0, HA(c4, 32), aA(I7, c4, 32, 0), E3[0 | I7] = 248 & a3[0 | I7], E3[I7 + 31 | 0] = 63 & a3[I7 + 31 | 0] | 64, u3(e4 = c4 + 32 | 0, I7), MA(A8, e4), g6 = c4, e4 = o3[c4 + 28 >> 2], c4 = o3[c4 + 24 >> 2], E3[I7 + 24 | 0] = c4, E3[I7 + 25 | 0] = c4 >>> 8, E3[I7 + 26 | 0] = c4 >>> 16, E3[I7 + 27 | 0] = c4 >>> 24, E3[I7 + 28 | 0] = e4, E3[I7 + 29 | 0] = e4 >>> 8, E3[I7 + 30 | 0] = e4 >>> 16, E3[I7 + 31 | 0] = e4 >>> 24, e4 = o3[g6 + 20 >> 2], c4 = o3[g6 + 16 >> 2], E3[I7 + 16 | 0] = c4, E3[I7 + 17 | 0] = c4 >>> 8, E3[I7 + 18 | 0] = c4 >>> 16, E3[I7 + 19 | 0] = c4 >>> 24, E3[I7 + 20 | 0] = e4, E3[I7 + 21 | 0] = e4 >>> 8, E3[I7 + 22 | 0] = e4 >>> 16, E3[I7 + 23 | 0] = e4 >>> 24, e4 = o3[g6 + 12 >> 2], c4 = o3[g6 + 8 >> 2], E3[I7 + 8 | 0] = c4, E3[I7 + 9 | 0] = c4 >>> 8, E3[I7 + 10 | 0] = c4 >>> 16, E3[I7 + 11 | 0] = c4 >>> 24, E3[I7 + 12 | 0] = e4, E3[I7 + 13 | 0] = e4 >>> 8, E3[I7 + 14 | 0] = e4 >>> 16, E3[I7 + 15 | 0] = e4 >>> 24, e4 = o3[g6 + 4 >> 2], c4 = o3[g6 >> 2], E3[0 | I7] = c4, E3[I7 + 1 | 0] = c4 >>> 8, E3[I7 + 2 | 0] = c4 >>> 16, E3[I7 + 3 | 0] = c4 >>> 24, E3[I7 + 4 | 0] = e4, E3[I7 + 5 | 0] = e4 >>> 8, E3[I7 + 6 | 0] = e4 >>> 16, E3[I7 + 7 | 0] = e4 >>> 24, C4 = a3[(f4 = A8) + 8 | 0] | a3[f4 + 9 | 0] << 8 | a3[f4 + 10 | 0] << 16 | a3[f4 + 11 | 0] << 24, B4 = a3[f4 + 12 | 0] | a3[f4 + 13 | 0] << 8 | a3[f4 + 14 | 0] << 16 | a3[f4 + 15 | 0] << 24, Q4 = a3[f4 + 16 | 0] | a3[f4 + 17 | 0] << 8 | a3[f4 + 18 | 0] << 16 | a3[f4 + 19 | 0] << 24, e4 = a3[f4 + 20 | 0] | a3[f4 + 21 | 0] << 8 | a3[f4 + 22 | 0] << 16 | a3[f4 + 23 | 0] << 24, c4 = a3[0 | f4] | a3[f4 + 1 | 0] << 8 | a3[f4 + 2 | 0] << 16 | a3[f4 + 3 | 0] << 24, A8 = a3[f4 + 4 | 0] | a3[f4 + 5 | 0] << 8 | a3[f4 + 6 | 0] << 16 | a3[f4 + 7 | 0] << 24, i4 = a3[f4 + 28 | 0] | a3[f4 + 29 | 0] << 8 | a3[f4 + 30 | 0] << 16 | a3[f4 + 31 | 0] << 24, f4 = a3[f4 + 24 | 0] | a3[f4 + 25 | 0] << 8 | a3[f4 + 26 | 0] << 16 | a3[f4 + 27 | 0] << 24, E3[I7 + 56 | 0] = f4, E3[I7 + 57 | 0] = f4 >>> 8, E3[I7 + 58 | 0] = f4 >>> 16, E3[I7 + 59 | 0] = f4 >>> 24, E3[I7 + 60 | 0] = i4, E3[I7 + 61 | 0] = i4 >>> 8, E3[I7 + 62 | 0] = i4 >>> 16, E3[I7 + 63 | 0] = i4 >>> 24, E3[I7 + 48 | 0] = Q4, E3[I7 + 49 | 0] = Q4 >>> 8, E3[I7 + 50 | 0] = Q4 >>> 16, E3[I7 + 51 | 0] = Q4 >>> 24, E3[I7 + 52 | 0] = e4, E3[I7 + 53 | 0] = e4 >>> 8, E3[I7 + 54 | 0] = e4 >>> 16, E3[I7 + 55 | 0] = e4 >>> 24, E3[I7 + 40 | 0] = C4, E3[I7 + 41 | 0] = C4 >>> 8, E3[I7 + 42 | 0] = C4 >>> 16, E3[I7 + 43 | 0] = C4 >>> 24, E3[I7 + 44 | 0] = B4, E3[I7 + 45 | 0] = B4 >>> 8, E3[I7 + 46 | 0] = B4 >>> 16, E3[I7 + 47 | 0] = B4 >>> 24, E3[I7 + 32 | 0] = c4, E3[I7 + 33 | 0] = c4 >>> 8, E3[I7 + 34 | 0] = c4 >>> 16, E3[I7 + 35 | 0] = c4 >>> 24, E3[I7 + 36 | 0] = A8, E3[I7 + 37 | 0] = A8 >>> 8, E3[I7 + 38 | 0] = A8 >>> 16, E3[I7 + 39 | 0] = A8 >>> 24, iI(g6, 32), w3 = g6 + 192 | 0, 0;
                    }, Pb: function(A8, I7, g6, C4, B4, Q4) {
                      I7 |= 0, B4 |= 0, Q4 |= 0;
                      var i4, E4 = 0;
                      return w3 = i4 = w3 - 16 | 0, s3(A8 |= 0, i4 + 8 | 0, pA(A8 - -64 | 0, g6 |= 0, C4 |= 0), C4, B4, Q4, 0), 64 != o3[i4 + 8 >> 2] | o3[i4 + 12 >> 2] ? (I7 && (o3[I7 >> 2] = 0, o3[I7 + 4 >> 2] = 0), dA(A8, 0, C4 - -64 | 0), E4 = -1) : I7 && (o3[I7 >> 2] = C4 - -64, o3[I7 + 4 >> 2] = B4 - ((C4 >>> 0 < 4294967232) - 1 | 0)), w3 = i4 + 16 | 0, 0 | E4;
                    }, Qb: function(A8, I7, g6, C4, B4, Q4) {
                      A8 |= 0, I7 |= 0, g6 |= 0;
                      var i4 = 0;
                      A: {
                        I: {
                          if (i4 = C4 |= 0, !(!(B4 |= 0) & C4 >>> 0 < 64 || (C4 = B4 - 1 | 0, !(C4 = (B4 = i4 + -64 | 0) >>> 0 < 4294967232 ? C4 + 1 | 0 : C4) & B4 >>> 0 > 4294967231 | C4))) {
                            if (!S3(g6, i4 = g6 - -64 | 0, B4, C4, Q4 |= 0, 0))
                              break I;
                            A8 && dA(A8, 0, B4);
                          }
                          if (g6 = -1, !I7)
                            break A;
                          o3[I7 >> 2] = 0, o3[I7 + 4 >> 2] = 0;
                          break A;
                        }
                        I7 && (o3[I7 >> 2] = B4, o3[I7 + 4 >> 2] = C4), g6 = 0, A8 && pA(A8, i4, B4);
                      }
                      return 0 | g6;
                    }, Rb: function(A8, I7, g6, C4, B4, Q4) {
                      return s3(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q4 |= 0, 0), 0;
                    }, Sb: function(A8, I7, g6, C4, B4) {
                      return 0 | S3(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, 0);
                    }, Tb: function(A8) {
                      return cA(A8 |= 0), 0;
                    }, Ub: function(A8, I7, g6, C4) {
                      return 0 | R3(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0);
                    }, Vb: function(A8, I7, g6, C4) {
                      var B4;
                      return I7 |= 0, g6 |= 0, C4 |= 0, w3 = B4 = w3 + -64 | 0, N3(A8 |= 0, B4), A8 = s3(I7, g6, B4, 64, 0, C4, 1), w3 = B4 - -64 | 0, 0 | A8;
                    }, Wb: function(A8, I7, g6) {
                      var C4;
                      return I7 |= 0, g6 |= 0, w3 = C4 = w3 + -64 | 0, N3(A8 |= 0, C4), A8 = S3(I7, C4, 64, 0, g6, 1), w3 = C4 - -64 | 0, 0 | A8;
                    }, Xb: function(A8, I7) {
                      A8 |= 0;
                      var g6, C4 = 0, B4 = 0, Q4 = 0, i4 = 0, a4 = 0, f4 = 0, e4 = 0, r4 = 0, D4 = 0, t4 = 0, y4 = 0, n4 = 0, s4 = 0, k4 = 0, F4 = 0, S4 = 0, _4 = 0, M4 = 0, p4 = 0, N4 = 0, J4 = 0, Y4 = 0, d4 = 0, K4 = 0, v4 = 0, L4 = 0, R4 = 0, u4 = 0, x4 = 0, m4 = 0, l4 = 0, z4 = 0, q4 = 0, X3 = 0, j3 = 0, T2 = 0, V2 = 0, Z2 = 0, $2 = 0, AA2 = 0, gA2 = 0, CA2 = 0, BA2 = 0, QA2 = 0, iA2 = 0, EA2 = 0, oA2 = 0, aA2 = 0, cA2 = 0, eA2 = 0, DA2 = 0, tA2 = 0, yA2 = 0, wA2 = 0, hA2 = 0, nA2 = 0, sA2 = 0, FA2 = 0, SA2 = 0, HA2 = 0, GA2 = 0, _A2 = 0, MA2 = 0, pA2 = 0, NA2 = 0, JA2 = 0, UA2 = 0, YA2 = 0, KA2 = 0, bA2 = 0, PA2 = 0, vA2 = 0, LA2 = 0, RA2 = 0, uA2 = 0, xA2 = 0, mA2 = 0, lA2 = 0, zA2 = 0, qA2 = 0;
                      if (w3 = g6 = w3 - 256 | 0, vA2 = -1, !rA(I7 |= 0) && !U3(C4 = g6 + 96 | 0, I7)) {
                        for (w3 = Q4 = w3 - 2048 | 0, W(i4 = Q4 + 640 | 0, C4), C4 = o3[(I7 = C4) + 36 >> 2], o3[Q4 + 352 >> 2] = o3[I7 + 32 >> 2], o3[Q4 + 356 >> 2] = C4, C4 = o3[I7 + 28 >> 2], o3[Q4 + 344 >> 2] = o3[I7 + 24 >> 2], o3[Q4 + 348 >> 2] = C4, C4 = o3[I7 + 20 >> 2], o3[Q4 + 336 >> 2] = o3[I7 + 16 >> 2], o3[Q4 + 340 >> 2] = C4, C4 = o3[I7 + 12 >> 2], o3[Q4 + 328 >> 2] = o3[I7 + 8 >> 2], o3[Q4 + 332 >> 2] = C4, C4 = o3[I7 + 4 >> 2], o3[Q4 + 320 >> 2] = o3[I7 >> 2], o3[Q4 + 324 >> 2] = C4, C4 = o3[I7 + 52 >> 2], o3[Q4 + 368 >> 2] = o3[I7 + 48 >> 2], o3[Q4 + 372 >> 2] = C4, C4 = o3[I7 + 60 >> 2], o3[Q4 + 376 >> 2] = o3[I7 + 56 >> 2], o3[Q4 + 380 >> 2] = C4, B4 = o3[4 + (C4 = I7 - -64 | 0) >> 2], o3[Q4 + 384 >> 2] = o3[C4 >> 2], o3[Q4 + 388 >> 2] = B4, C4 = o3[I7 + 76 >> 2], o3[Q4 + 392 >> 2] = o3[I7 + 72 >> 2], o3[Q4 + 396 >> 2] = C4, C4 = o3[I7 + 44 >> 2], o3[Q4 + 360 >> 2] = o3[I7 + 40 >> 2], o3[Q4 + 364 >> 2] = C4, C4 = o3[I7 + 92 >> 2], o3[Q4 + 408 >> 2] = o3[I7 + 88 >> 2], o3[Q4 + 412 >> 2] = C4, C4 = o3[I7 + 100 >> 2], o3[Q4 + 416 >> 2] = o3[I7 + 96 >> 2], o3[Q4 + 420 >> 2] = C4, C4 = o3[I7 + 108 >> 2], o3[Q4 + 424 >> 2] = o3[I7 + 104 >> 2], o3[Q4 + 428 >> 2] = C4, C4 = o3[I7 + 116 >> 2], o3[Q4 + 432 >> 2] = o3[I7 + 112 >> 2], o3[Q4 + 436 >> 2] = C4, C4 = o3[I7 + 84 >> 2], o3[Q4 + 400 >> 2] = o3[I7 + 80 >> 2], o3[Q4 + 404 >> 2] = C4, G3(I7 = Q4 + 480 | 0, C4 = Q4 + 320 | 0), H3(B4 = Q4 + 160 | 0, I7, f4 = Q4 + 600 | 0), H3(Q4 + 200 | 0, r4 = Q4 + 520 | 0, D4 = Q4 + 560 | 0), H3(Q4 + 240 | 0, D4, f4), H3(Q4 + 280 | 0, I7, r4), b3(I7, B4, i4), H3(C4, I7, f4), H3(F4 = Q4 + 360 | 0, r4, D4), H3(S4 = Q4 + 400 | 0, D4, f4), H3(n4 = Q4 + 440 | 0, I7, r4), W(i4 = Q4 + 800 | 0, C4), b3(I7, B4, i4), H3(C4, I7, f4), H3(F4, r4, D4), H3(S4, D4, f4), H3(n4, I7, r4), W(i4 = Q4 + 960 | 0, C4), b3(I7, B4, i4), H3(C4, I7, f4), H3(F4, r4, D4), H3(S4, D4, f4), H3(n4, I7, r4), W(i4 = Q4 + 1120 | 0, C4), b3(I7, B4, i4), H3(C4, I7, f4), H3(F4, r4, D4), H3(S4, D4, f4), H3(n4, I7, r4), W(i4 = Q4 + 1280 | 0, C4), b3(I7, B4, i4), H3(C4, I7, f4), H3(F4, r4, D4), H3(S4, D4, f4), H3(n4, I7, r4), W(i4 = Q4 + 1440 | 0, C4), b3(I7, B4, i4), H3(C4, I7, f4), H3(F4, r4, D4), H3(S4, D4, f4), H3(n4, I7, r4), W(i4 = Q4 + 1600 | 0, C4), b3(I7, B4, i4), H3(C4, I7, f4), H3(F4, r4, D4), H3(S4, D4, f4), H3(n4, I7, r4), W(Q4 + 1760 | 0, C4), o3[Q4 + 32 >> 2] = 0, o3[Q4 + 36 >> 2] = 0, o3[Q4 + 24 >> 2] = 0, o3[Q4 + 28 >> 2] = 0, o3[Q4 + 16 >> 2] = 0, o3[Q4 + 20 >> 2] = 0, o3[Q4 + 8 >> 2] = 0, o3[Q4 + 12 >> 2] = 0, o3[Q4 + 44 >> 2] = 0, o3[Q4 + 48 >> 2] = 0, o3[Q4 + 52 >> 2] = 0, o3[Q4 + 56 >> 2] = 0, o3[Q4 + 60 >> 2] = 0, o3[Q4 + 64 >> 2] = 0, o3[Q4 + 68 >> 2] = 0, o3[Q4 + 72 >> 2] = 0, o3[Q4 + 76 >> 2] = 0, o3[Q4 + 80 >> 2] = 1, o3[Q4 >> 2] = 0, o3[Q4 + 4 >> 2] = 0, o3[Q4 + 40 >> 2] = 1, dA(Q4 + 84 | 0, 0, 76), t4 = Q4 + 120 | 0, k4 = Q4 + 2008 | 0, s4 = Q4 + 1968 | 0, C4 = Q4 + 80 | 0, B4 = Q4 + 40 | 0, i4 = 252; a4 = o3[Q4 + 36 >> 2], o3[(I7 = Q4 + 1960 | 0) >> 2] = o3[Q4 + 32 >> 2], o3[I7 + 4 >> 2] = a4, a4 = o3[Q4 + 28 >> 2], o3[(I7 = Q4 + 1952 | 0) >> 2] = o3[Q4 + 24 >> 2], o3[I7 + 4 >> 2] = a4, a4 = o3[Q4 + 20 >> 2], o3[(I7 = Q4 + 1944 | 0) >> 2] = o3[Q4 + 16 >> 2], o3[I7 + 4 >> 2] = a4, a4 = o3[Q4 + 12 >> 2], o3[(I7 = Q4 + 1936 | 0) >> 2] = o3[Q4 + 8 >> 2], o3[I7 + 4 >> 2] = a4, I7 = o3[Q4 + 4 >> 2], o3[Q4 + 1928 >> 2] = o3[Q4 >> 2], o3[Q4 + 1932 >> 2] = I7, a4 = o3[(I7 = B4) + 36 >> 2], o3[s4 + 32 >> 2] = o3[I7 + 32 >> 2], o3[s4 + 36 >> 2] = a4, a4 = o3[I7 + 28 >> 2], o3[s4 + 24 >> 2] = o3[I7 + 24 >> 2], o3[s4 + 28 >> 2] = a4, a4 = o3[I7 + 20 >> 2], o3[s4 + 16 >> 2] = o3[I7 + 16 >> 2], o3[s4 + 20 >> 2] = a4, a4 = o3[I7 + 12 >> 2], o3[s4 + 8 >> 2] = o3[I7 + 8 >> 2], o3[s4 + 12 >> 2] = a4, a4 = o3[I7 + 4 >> 2], o3[s4 >> 2] = o3[I7 >> 2], o3[s4 + 4 >> 2] = a4, a4 = o3[(I7 = C4) + 36 >> 2], o3[k4 + 32 >> 2] = o3[I7 + 32 >> 2], o3[k4 + 36 >> 2] = a4, a4 = o3[I7 + 28 >> 2], o3[k4 + 24 >> 2] = o3[I7 + 24 >> 2], o3[k4 + 28 >> 2] = a4, a4 = o3[I7 + 20 >> 2], o3[k4 + 16 >> 2] = o3[I7 + 16 >> 2], o3[k4 + 20 >> 2] = a4, a4 = o3[I7 + 12 >> 2], o3[k4 + 8 >> 2] = o3[I7 + 8 >> 2], o3[k4 + 12 >> 2] = a4, a4 = o3[I7 + 4 >> 2], o3[k4 >> 2] = o3[I7 >> 2], o3[k4 + 4 >> 2] = a4, i4 = E3[(I7 = i4) + 33424 | 0], G3(a4 = Q4 + 480 | 0, Q4 + 1928 | 0), (0 | i4) > 0 ? (H3(M4 = Q4 + 320 | 0, a4, f4), H3(F4, r4, D4), H3(S4, D4, f4), H3(n4, a4, r4), b3(a4, M4, (Q4 + 640 | 0) + c3((254 & i4) >>> 1 | 0, 160) | 0)) : (0 | i4) >= 0 || (H3(M4 = Q4 + 320 | 0, a4 = Q4 + 480 | 0, f4), H3(F4, r4, D4), H3(S4, D4, f4), H3(n4, a4, r4), P3(a4, M4, (Q4 + 640 | 0) + c3((0 - i4 & 254) >>> 1 | 0, 160) | 0)), H3(Q4, i4 = Q4 + 480 | 0, f4), H3(B4, r4, D4), H3(C4, D4, f4), H3(t4, i4, r4), i4 = I7 - 1 | 0, I7; )
                          ;
                        IA(I7 = Q4 + 640 | 0, Q4), I7 = fA(I7, 32), w3 = Q4 + 2048 | 0, I7 && (Q4 = o3[g6 + 136 >> 2], o3[g6 >> 2] = 1 - Q4, vA2 = 0, z4 = o3[g6 + 172 >> 2], o3[g6 + 36 >> 2] = 0 - z4, F4 = o3[g6 + 168 >> 2], o3[g6 + 32 >> 2] = 0 - F4, q4 = o3[g6 + 164 >> 2], o3[g6 + 28 >> 2] = 0 - q4, r4 = o3[g6 + 160 >> 2], o3[g6 + 24 >> 2] = 0 - r4, X3 = o3[g6 + 156 >> 2], o3[g6 + 20 >> 2] = 0 - X3, D4 = o3[g6 + 152 >> 2], o3[g6 + 16 >> 2] = 0 - D4, j3 = o3[g6 + 148 >> 2], o3[g6 + 12 >> 2] = 0 - j3, k4 = o3[g6 + 144 >> 2], o3[g6 + 8 >> 2] = 0 - k4, T2 = o3[g6 + 140 >> 2], o3[g6 + 4 >> 2] = 0 - T2, O(g6, g6), I7 = kA(S4 = o3[g6 + 4 >> 2], x4 = S4 >> 31, Y4 = X3 << 1, cA2 = Y4 >> 31), C4 = h3, B4 = kA(f4 = o3[g6 >> 2], d4 = f4 >> 31, r4, K4 = r4 >> 31), C4 = h3 + C4 | 0, C4 = (I7 = B4 + I7 | 0) >>> 0 < B4 >>> 0 ? C4 + 1 | 0 : C4, B4 = (i4 = kA(a4 = o3[g6 + 8 >> 2], V2 = a4 >> 31, D4, v4 = D4 >> 31)) + I7 | 0, I7 = h3 + C4 | 0, I7 = B4 >>> 0 < i4 >>> 0 ? I7 + 1 | 0 : I7, C4 = B4, B4 = kA(m4 = o3[g6 + 12 >> 2], AA2 = m4 >> 31, BA2 = j3 << 1, eA2 = BA2 >> 31), I7 = h3 + I7 | 0, I7 = (C4 = C4 + B4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, B4 = kA(Z2 = o3[g6 + 16 >> 2], QA2 = Z2 >> 31, k4, L4 = k4 >> 31), I7 = h3 + I7 | 0, I7 = (C4 = B4 + C4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, JA2 = i4 = o3[g6 + 20 >> 2], s4 = kA(i4, DA2 = i4 >> 31, iA2 = T2 << 1, tA2 = iA2 >> 31), B4 = h3 + I7 | 0, B4 = (C4 = s4 + C4 | 0) >>> 0 < s4 >>> 0 ? B4 + 1 | 0 : B4, UA2 = p4 = o3[g6 + 24 >> 2], I7 = (Q4 = kA(p4, MA2 = p4 >> 31, s4 = Q4 + 1 | 0, R4 = s4 >> 31)) + C4 | 0, C4 = h3 + B4 | 0, C4 = I7 >>> 0 < Q4 >>> 0 ? C4 + 1 | 0 : C4, yA2 = o3[g6 + 28 >> 2], B4 = (Q4 = kA(M4 = c3(yA2, 19), gA2 = M4 >> 31, EA2 = z4 << 1, wA2 = EA2 >> 31)) + I7 | 0, I7 = h3 + C4 | 0, I7 = B4 >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, C4 = B4, LA2 = o3[g6 + 32 >> 2], B4 = kA(t4 = c3(LA2, 19), $2 = t4 >> 31, F4, u4 = F4 >> 31), I7 = h3 + I7 | 0, I7 = (C4 = C4 + B4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, RA2 = o3[g6 + 36 >> 2], B4 = kA(n4 = c3(RA2, 19), l4 = n4 >> 31, oA2 = q4 << 1, hA2 = oA2 >> 31), I7 = h3 + I7 | 0, y4 = C4 = B4 + C4 | 0, Q4 = C4 >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, I7 = kA(D4, v4, S4, x4), C4 = h3, e4 = kA(f4, d4, X3, nA2 = X3 >> 31), B4 = h3 + C4 | 0, B4 = (I7 = e4 + I7 | 0) >>> 0 < e4 >>> 0 ? B4 + 1 | 0 : B4, e4 = kA(a4, V2, j3, sA2 = j3 >> 31), C4 = h3 + B4 | 0, C4 = (I7 = e4 + I7 | 0) >>> 0 < e4 >>> 0 ? C4 + 1 | 0 : C4, B4 = (e4 = kA(k4, L4, m4, AA2)) + I7 | 0, I7 = h3 + C4 | 0, I7 = B4 >>> 0 < e4 >>> 0 ? I7 + 1 | 0 : I7, C4 = B4, B4 = kA(Z2, QA2, T2, FA2 = T2 >> 31), I7 = h3 + I7 | 0, I7 = (C4 = C4 + B4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, B4 = kA(s4, R4, i4, DA2), I7 = h3 + I7 | 0, I7 = (C4 = B4 + C4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, e4 = kA(p4 = c3(p4, 19), aA2 = p4 >> 31, z4, SA2 = z4 >> 31), B4 = h3 + I7 | 0, B4 = (C4 = e4 + C4 | 0) >>> 0 < e4 >>> 0 ? B4 + 1 | 0 : B4, I7 = (e4 = kA(F4, u4, M4, gA2)) + C4 | 0, C4 = h3 + B4 | 0, C4 = I7 >>> 0 < e4 >>> 0 ? C4 + 1 | 0 : C4, B4 = (e4 = kA(t4, $2, q4, HA2 = q4 >> 31)) + I7 | 0, I7 = h3 + C4 | 0, I7 = B4 >>> 0 < e4 >>> 0 ? I7 + 1 | 0 : I7, C4 = B4, B4 = kA(r4, K4, n4, l4), I7 = h3 + I7 | 0, YA2 = C4 = C4 + B4 | 0, CA2 = C4 >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, I7 = kA(S4, x4, BA2, eA2), B4 = h3, C4 = (e4 = kA(f4, d4, D4, v4)) + I7 | 0, I7 = h3 + B4 | 0, I7 = C4 >>> 0 < e4 >>> 0 ? I7 + 1 | 0 : I7, e4 = kA(k4, L4, a4, V2), B4 = h3 + I7 | 0, B4 = (C4 = e4 + C4 | 0) >>> 0 < e4 >>> 0 ? B4 + 1 | 0 : B4, I7 = (e4 = kA(m4, AA2, iA2, tA2)) + C4 | 0, C4 = h3 + B4 | 0, C4 = I7 >>> 0 < e4 >>> 0 ? C4 + 1 | 0 : C4, B4 = (e4 = kA(s4, R4, Z2, QA2)) + I7 | 0, I7 = h3 + C4 | 0, I7 = B4 >>> 0 < e4 >>> 0 ? I7 + 1 | 0 : I7, C4 = B4, B4 = kA(e4 = c3(i4, 19), GA2 = e4 >> 31, EA2, wA2), I7 = h3 + I7 | 0, I7 = (C4 = C4 + B4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, B4 = kA(F4, u4, p4, aA2), I7 = h3 + I7 | 0, I7 = (C4 = B4 + C4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, i4 = kA(M4, gA2, oA2, hA2), B4 = h3 + I7 | 0, B4 = (C4 = i4 + C4 | 0) >>> 0 < i4 >>> 0 ? B4 + 1 | 0 : B4, I7 = (i4 = kA(r4, K4, t4, $2)) + C4 | 0, C4 = h3 + B4 | 0, C4 = I7 >>> 0 < i4 >>> 0 ? C4 + 1 | 0 : C4, B4 = (i4 = kA(n4, l4, Y4, cA2)) + I7 | 0, I7 = h3 + C4 | 0, uA2 = B4, xA2 = I7 = B4 >>> 0 < i4 >>> 0 ? I7 + 1 | 0 : I7, mA2 = B4 = B4 + 33554432 | 0, lA2 = I7 = B4 >>> 0 < 33554432 ? I7 + 1 | 0 : I7, B4 = (67108863 & I7) << 6 | B4 >>> 26, I7 = (I7 >> 26) + CA2 | 0, YA2 = i4 = B4 + YA2 | 0, I7 = B4 >>> 0 > i4 >>> 0 ? I7 + 1 | 0 : I7, zA2 = i4 = i4 + 16777216 | 0, I7 = (C4 = (B4 = i4 >>> 0 < 16777216 ? I7 + 1 | 0 : I7) >> 25) + Q4 | 0, I7 = (B4 = (i4 = (33554431 & B4) << 7 | i4 >>> 25) + y4 | 0) >>> 0 < i4 >>> 0 ? I7 + 1 | 0 : I7, J4 = C4 = B4 + 33554432 | 0, i4 = I7 = C4 >>> 0 < 33554432 ? I7 + 1 | 0 : I7, o3[g6 + 72 >> 2] = B4 - (-67108864 & C4), I7 = kA(S4, x4, iA2, tA2), C4 = h3, Q4 = kA(f4, d4, k4, L4), B4 = h3 + C4 | 0, B4 = (I7 = Q4 + I7 | 0) >>> 0 < Q4 >>> 0 ? B4 + 1 | 0 : B4, C4 = (Q4 = kA(s4, R4, a4, V2)) + I7 | 0, I7 = h3 + B4 | 0, I7 = C4 >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, B4 = kA(Q4 = c3(m4, 19), _A2 = Q4 >> 31, EA2, wA2), I7 = h3 + I7 | 0, I7 = (C4 = B4 + C4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, B4 = (y4 = kA(CA2 = c3(Z2, 19), pA2 = CA2 >> 31, F4, u4)) + C4 | 0, C4 = h3 + I7 | 0, C4 = B4 >>> 0 < y4 >>> 0 ? C4 + 1 | 0 : C4, y4 = kA(oA2, hA2, e4, GA2), I7 = h3 + C4 | 0, I7 = (B4 = y4 + B4 | 0) >>> 0 < y4 >>> 0 ? I7 + 1 | 0 : I7, C4 = (y4 = kA(r4, K4, p4, aA2)) + B4 | 0, B4 = h3 + I7 | 0, B4 = C4 >>> 0 < y4 >>> 0 ? B4 + 1 | 0 : B4, y4 = kA(M4, gA2, Y4, cA2), I7 = h3 + B4 | 0, I7 = (C4 = y4 + C4 | 0) >>> 0 < y4 >>> 0 ? I7 + 1 | 0 : I7, B4 = kA(D4, v4, t4, $2), I7 = h3 + I7 | 0, I7 = (C4 = B4 + C4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, B4 = (y4 = kA(n4, l4, BA2, eA2)) + C4 | 0, C4 = h3 + I7 | 0, N4 = B4, KA2 = B4 >>> 0 < y4 >>> 0 ? C4 + 1 | 0 : C4, I7 = kA(s4, R4, S4, x4), C4 = h3, B4 = (y4 = kA(f4, d4, T2, FA2)) + I7 | 0, I7 = h3 + C4 | 0, I7 = B4 >>> 0 < y4 >>> 0 ? I7 + 1 | 0 : I7, y4 = C4 = c3(a4, 19), C4 = (_4 = kA(C4, NA2 = C4 >> 31, z4, SA2)) + B4 | 0, B4 = h3 + I7 | 0, B4 = C4 >>> 0 < _4 >>> 0 ? B4 + 1 | 0 : B4, _4 = kA(Q4, _A2, F4, u4), I7 = h3 + B4 | 0, I7 = (C4 = _4 + C4 | 0) >>> 0 < _4 >>> 0 ? I7 + 1 | 0 : I7, B4 = kA(CA2, pA2, q4, HA2), I7 = h3 + I7 | 0, I7 = (C4 = B4 + C4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, B4 = (_4 = kA(r4, K4, e4, GA2)) + C4 | 0, C4 = h3 + I7 | 0, C4 = B4 >>> 0 < _4 >>> 0 ? C4 + 1 | 0 : C4, _4 = kA(p4, aA2, X3, nA2), I7 = h3 + C4 | 0, I7 = (B4 = _4 + B4 | 0) >>> 0 < _4 >>> 0 ? I7 + 1 | 0 : I7, C4 = (_4 = kA(D4, v4, M4, gA2)) + B4 | 0, B4 = h3 + I7 | 0, B4 = C4 >>> 0 < _4 >>> 0 ? B4 + 1 | 0 : B4, _4 = kA(t4, $2, j3, sA2), I7 = h3 + B4 | 0, I7 = (C4 = _4 + C4 | 0) >>> 0 < _4 >>> 0 ? I7 + 1 | 0 : I7, B4 = kA(k4, L4, n4, l4), I7 = h3 + I7 | 0, bA2 = C4 = B4 + C4 | 0, _4 = C4 >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, I7 = kA(I7 = c3(S4, 19), I7 >> 31, EA2, wA2), C4 = h3, B4 = kA(f4, d4, s4, R4), C4 = h3 + C4 | 0, C4 = (I7 = B4 + I7 | 0) >>> 0 < B4 >>> 0 ? C4 + 1 | 0 : C4, B4 = (y4 = kA(y4, NA2, F4, u4)) + I7 | 0, I7 = h3 + C4 | 0, C4 = (Q4 = kA(Q4, _A2, oA2, hA2)) + B4 | 0, B4 = h3 + (B4 >>> 0 < y4 >>> 0 ? I7 + 1 | 0 : I7) | 0, B4 = C4 >>> 0 < Q4 >>> 0 ? B4 + 1 | 0 : B4, Q4 = kA(r4, K4, CA2, pA2), I7 = h3 + B4 | 0, I7 = (C4 = Q4 + C4 | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, B4 = kA(Y4, cA2, e4, GA2), I7 = h3 + I7 | 0, I7 = (C4 = B4 + C4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, B4 = (Q4 = kA(D4, v4, p4, aA2)) + C4 | 0, C4 = h3 + I7 | 0, C4 = B4 >>> 0 < Q4 >>> 0 ? C4 + 1 | 0 : C4, Q4 = kA(M4, gA2, BA2, eA2), I7 = h3 + C4 | 0, I7 = (B4 = Q4 + B4 | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, C4 = (Q4 = kA(k4, L4, t4, $2)) + B4 | 0, B4 = h3 + I7 | 0, B4 = C4 >>> 0 < Q4 >>> 0 ? B4 + 1 | 0 : B4, Q4 = kA(n4, l4, iA2, tA2), I7 = h3 + B4 | 0, y4 = C4 = Q4 + C4 | 0, _A2 = I7 = C4 >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, NA2 = C4 = C4 + 33554432 | 0, qA2 = I7 = C4 >>> 0 < 33554432 ? I7 + 1 | 0 : I7, B4 = I7 >> 26, I7 = (67108863 & I7) << 6 | C4 >>> 26, C4 = B4 + _4 | 0, _4 = Q4 = I7 + bA2 | 0, I7 = C4 = I7 >>> 0 > Q4 >>> 0 ? C4 + 1 | 0 : C4, bA2 = Q4 = Q4 + 16777216 | 0, Q4 = (33554431 & (I7 = Q4 >>> 0 < 16777216 ? I7 + 1 | 0 : I7)) << 7 | Q4 >>> 25, I7 = (I7 >> 25) + KA2 | 0, I7 = (C4 = Q4 + N4 | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, B4 = C4, KA2 = C4 = C4 + 33554432 | 0, Q4 = I7 = C4 >>> 0 < 33554432 ? I7 + 1 | 0 : I7, o3[g6 + 56 >> 2] = B4 - (-67108864 & C4), I7 = kA(r4, K4, S4, x4), B4 = h3, C4 = (N4 = kA(f4, d4, q4, HA2)) + I7 | 0, I7 = h3 + B4 | 0, I7 = C4 >>> 0 < N4 >>> 0 ? I7 + 1 | 0 : I7, B4 = kA(a4, V2, X3, nA2), I7 = h3 + I7 | 0, I7 = (C4 = B4 + C4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, B4 = kA(D4, v4, m4, AA2), I7 = h3 + I7 | 0, I7 = (C4 = B4 + C4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, N4 = kA(Z2, QA2, j3, sA2), B4 = h3 + I7 | 0, B4 = (C4 = N4 + C4 | 0) >>> 0 < N4 >>> 0 ? B4 + 1 | 0 : B4, I7 = (N4 = kA(k4, L4, JA2, DA2)) + C4 | 0, C4 = h3 + B4 | 0, C4 = I7 >>> 0 < N4 >>> 0 ? C4 + 1 | 0 : C4, B4 = (N4 = kA(T2, FA2, UA2, MA2)) + I7 | 0, I7 = h3 + C4 | 0, I7 = B4 >>> 0 < N4 >>> 0 ? I7 + 1 | 0 : I7, C4 = B4, B4 = kA(yA2, PA2 = yA2 >> 31, s4, R4), I7 = h3 + I7 | 0, I7 = (C4 = C4 + B4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, B4 = kA(t4, $2, z4, SA2), I7 = h3 + I7 | 0, I7 = (C4 = B4 + C4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, N4 = (B4 = C4) + (C4 = kA(F4, u4, n4, l4)) | 0, B4 = h3 + I7 | 0, C4 = (I7 = i4 >> 26) + (C4 = C4 >>> 0 > N4 >>> 0 ? B4 + 1 | 0 : B4) | 0, J4 = B4 = (i4 = (67108863 & i4) << 6 | J4 >>> 26) + N4 | 0, I7 = C4 = B4 >>> 0 < i4 >>> 0 ? C4 + 1 | 0 : C4, N4 = B4 = B4 + 16777216 | 0, i4 = I7 = B4 >>> 0 < 16777216 ? I7 + 1 | 0 : I7, o3[g6 + 76 >> 2] = J4 - (-33554432 & B4), I7 = kA(k4, L4, S4, x4), C4 = h3, J4 = kA(f4, d4, j3, sA2), B4 = h3 + C4 | 0, B4 = (I7 = J4 + I7 | 0) >>> 0 < J4 >>> 0 ? B4 + 1 | 0 : B4, J4 = kA(a4, V2, T2, FA2), C4 = h3 + B4 | 0, C4 = (I7 = J4 + I7 | 0) >>> 0 < J4 >>> 0 ? C4 + 1 | 0 : C4, B4 = (J4 = kA(s4, R4, m4, AA2)) + I7 | 0, I7 = h3 + C4 | 0, I7 = B4 >>> 0 < J4 >>> 0 ? I7 + 1 | 0 : I7, C4 = B4, B4 = kA(CA2, pA2, z4, SA2), I7 = h3 + I7 | 0, I7 = (C4 = C4 + B4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, B4 = kA(F4, u4, e4, GA2), I7 = h3 + I7 | 0, I7 = (C4 = B4 + C4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, C4 = (p4 = kA(p4, aA2, q4, HA2)) + C4 | 0, B4 = h3 + I7 | 0, I7 = (M4 = kA(r4, K4, M4, gA2)) + C4 | 0, C4 = h3 + (C4 >>> 0 < p4 >>> 0 ? B4 + 1 | 0 : B4) | 0, B4 = (t4 = kA(t4, $2, X3, nA2)) + I7 | 0, I7 = h3 + (I7 >>> 0 < M4 >>> 0 ? C4 + 1 | 0 : C4) | 0, I7 = B4 >>> 0 < t4 >>> 0 ? I7 + 1 | 0 : I7, C4 = B4, B4 = kA(D4, v4, n4, l4), I7 = h3 + I7 | 0, J4 = C4 = C4 + B4 | 0, I7 = (I7 = C4 >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7) + (C4 = Q4 >> 26) | 0, t4 = Q4 = J4 + (B4 = (67108863 & Q4) << 6 | KA2 >>> 26) | 0, I7 = B4 >>> 0 > Q4 >>> 0 ? I7 + 1 | 0 : I7, M4 = C4 = Q4 + 16777216 | 0, Q4 = B4 = C4 >>> 0 < 16777216 ? I7 + 1 | 0 : I7, o3[g6 + 60 >> 2] = t4 - (-33554432 & C4), I7 = kA(S4, x4, oA2, hA2), B4 = h3, C4 = (t4 = kA(f4, d4, F4, u4)) + I7 | 0, I7 = h3 + B4 | 0, I7 = C4 >>> 0 < t4 >>> 0 ? I7 + 1 | 0 : I7, B4 = kA(r4, K4, a4, V2), I7 = h3 + I7 | 0, I7 = (C4 = B4 + C4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, t4 = kA(m4, AA2, Y4, cA2), B4 = h3 + I7 | 0, B4 = (C4 = t4 + C4 | 0) >>> 0 < t4 >>> 0 ? B4 + 1 | 0 : B4, I7 = (t4 = kA(D4, v4, Z2, QA2)) + C4 | 0, C4 = h3 + B4 | 0, C4 = I7 >>> 0 < t4 >>> 0 ? C4 + 1 | 0 : C4, B4 = (t4 = kA(BA2, eA2, JA2, DA2)) + I7 | 0, I7 = h3 + C4 | 0, I7 = B4 >>> 0 < t4 >>> 0 ? I7 + 1 | 0 : I7, C4 = B4, B4 = kA(k4, L4, UA2, MA2), I7 = h3 + I7 | 0, I7 = (C4 = C4 + B4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, B4 = C4, C4 = kA(iA2, tA2, yA2, PA2), I7 = h3 + I7 | 0, I7 = C4 >>> 0 > (B4 = B4 + C4 | 0) >>> 0 ? I7 + 1 | 0 : I7, t4 = C4 = LA2, C4 = (Y4 = kA(C4, p4 = C4 >> 31, s4, R4)) + B4 | 0, B4 = h3 + I7 | 0, I7 = (n4 = kA(n4, l4, EA2, wA2)) + C4 | 0, C4 = h3 + (C4 >>> 0 < Y4 >>> 0 ? B4 + 1 | 0 : B4) | 0, B4 = I7 >>> 0 < n4 >>> 0 ? C4 + 1 | 0 : C4, C4 = I7, I7 = (I7 = i4 >> 25) + B4 | 0, I7 = (C4 = C4 + (i4 = (33554431 & i4) << 7 | N4 >>> 25) | 0) >>> 0 < i4 >>> 0 ? I7 + 1 | 0 : I7, B4 = C4, n4 = C4 = C4 + 33554432 | 0, i4 = I7 = C4 >>> 0 < 33554432 ? I7 + 1 | 0 : I7, o3[g6 + 80 >> 2] = B4 - (-67108864 & C4), C4 = Q4 >> 25, B4 = (Q4 = (33554431 & Q4) << 7 | M4 >>> 25) + (uA2 - (I7 = -67108864 & mA2) | 0) | 0, I7 = C4 + (xA2 - ((I7 >>> 0 > uA2 >>> 0) + lA2 | 0) | 0) | 0, I7 = B4 >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, I7 = ((67108863 & (I7 = (C4 = B4 + 33554432 | 0) >>> 0 < 33554432 ? I7 + 1 | 0 : I7)) << 6 | C4 >>> 26) + (Y4 = YA2 - (-33554432 & zA2) | 0) | 0, o3[g6 + 68 >> 2] = I7, o3[g6 + 64 >> 2] = B4 - (-67108864 & C4), I7 = kA(F4, u4, S4, x4), B4 = h3, C4 = (Q4 = kA(f4, d4, z4, SA2)) + I7 | 0, I7 = h3 + B4 | 0, I7 = C4 >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, B4 = (Q4 = kA(a4, V2, q4, HA2)) + C4 | 0, C4 = h3 + I7 | 0, C4 = B4 >>> 0 < Q4 >>> 0 ? C4 + 1 | 0 : C4, I7 = (Q4 = kA(r4, K4, m4, AA2)) + B4 | 0, B4 = h3 + C4 | 0, B4 = I7 >>> 0 < Q4 >>> 0 ? B4 + 1 | 0 : B4, C4 = (Q4 = kA(Z2, QA2, X3, nA2)) + I7 | 0, I7 = h3 + B4 | 0, I7 = C4 >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, B4 = kA(D4, v4, JA2, DA2), I7 = h3 + I7 | 0, I7 = (C4 = B4 + C4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, B4 = kA(j3, sA2, UA2, MA2), I7 = h3 + I7 | 0, I7 = (C4 = B4 + C4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, B4 = (Q4 = kA(k4, L4, yA2, PA2)) + C4 | 0, C4 = h3 + I7 | 0, C4 = B4 >>> 0 < Q4 >>> 0 ? C4 + 1 | 0 : C4, Q4 = (I7 = kA(t4, p4, T2, FA2)) + B4 | 0, B4 = h3 + C4 | 0, B4 = I7 >>> 0 > Q4 >>> 0 ? B4 + 1 | 0 : B4, C4 = Q4, Q4 = kA(I7 = RA2, I7 >> 31, s4, R4), I7 = h3 + B4 | 0, B4 = C4 = C4 + Q4 | 0, I7 = (I7 = C4 >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7) + (C4 = i4 >> 26) | 0, I7 = (B4 = B4 + (i4 = (67108863 & i4) << 6 | n4 >>> 26) | 0) >>> 0 < i4 >>> 0 ? I7 + 1 | 0 : I7, I7 = (C4 = B4 + 16777216 | 0) >>> 0 < 16777216 ? I7 + 1 | 0 : I7, o3[g6 + 84 >> 2] = B4 - (-33554432 & C4), i4 = _4 - (-33554432 & bA2) | 0, Q4 = y4 - (B4 = -67108864 & NA2) | 0, f4 = _A2 - ((B4 >>> 0 > y4 >>> 0) + qA2 | 0) | 0, I7 = kA((33554431 & (B4 = I7)) << 7 | C4 >>> 25, I7 >>= 25, 19, 0), C4 = h3 + f4 | 0, I7 = I7 >>> 0 > (B4 = I7 + Q4 | 0) >>> 0 ? C4 + 1 | 0 : C4, I7 = ((67108863 & (I7 = (C4 = B4 + 33554432 | 0) >>> 0 < 33554432 ? I7 + 1 | 0 : I7)) << 6 | C4 >>> 26) + i4 | 0, o3[g6 + 52 >> 2] = I7, o3[g6 + 48 >> 2] = B4 - (-67108864 & C4), IA(A8, g6 + 48 | 0));
                      }
                      return w3 = g6 + 256 | 0, 0 | vA2;
                    }, Yb: function(A8, I7) {
                      A8 |= 0;
                      var g6, C4 = 0;
                      return w3 = g6 = w3 + -64 | 0, aA(g6, I7 |= 0, 32, 0), E3[0 | g6] = 248 & a3[0 | g6], E3[g6 + 31 | 0] = 63 & a3[g6 + 31 | 0] | 64, I7 = o3[g6 + 20 >> 2], C4 = o3[g6 + 16 >> 2], E3[A8 + 16 | 0] = C4, E3[A8 + 17 | 0] = C4 >>> 8, E3[A8 + 18 | 0] = C4 >>> 16, E3[A8 + 19 | 0] = C4 >>> 24, E3[A8 + 20 | 0] = I7, E3[A8 + 21 | 0] = I7 >>> 8, E3[A8 + 22 | 0] = I7 >>> 16, E3[A8 + 23 | 0] = I7 >>> 24, I7 = o3[g6 + 12 >> 2], C4 = o3[g6 + 8 >> 2], E3[A8 + 8 | 0] = C4, E3[A8 + 9 | 0] = C4 >>> 8, E3[A8 + 10 | 0] = C4 >>> 16, E3[A8 + 11 | 0] = C4 >>> 24, E3[A8 + 12 | 0] = I7, E3[A8 + 13 | 0] = I7 >>> 8, E3[A8 + 14 | 0] = I7 >>> 16, E3[A8 + 15 | 0] = I7 >>> 24, I7 = o3[g6 + 4 >> 2], C4 = o3[g6 >> 2], E3[0 | A8] = C4, E3[A8 + 1 | 0] = C4 >>> 8, E3[A8 + 2 | 0] = C4 >>> 16, E3[A8 + 3 | 0] = C4 >>> 24, E3[A8 + 4 | 0] = I7, E3[A8 + 5 | 0] = I7 >>> 8, E3[A8 + 6 | 0] = I7 >>> 16, E3[A8 + 7 | 0] = I7 >>> 24, I7 = o3[g6 + 28 >> 2], C4 = o3[g6 + 24 >> 2], E3[A8 + 24 | 0] = C4, E3[A8 + 25 | 0] = C4 >>> 8, E3[A8 + 26 | 0] = C4 >>> 16, E3[A8 + 27 | 0] = C4 >>> 24, E3[A8 + 28 | 0] = I7, E3[A8 + 29 | 0] = I7 >>> 8, E3[A8 + 30 | 0] = I7 >>> 16, E3[A8 + 31 | 0] = I7 >>> 24, iI(g6, 64), w3 = g6 - -64 | 0, 0;
                    }, Zb: function() {
                      var A8, I7;
                      return w3 = A8 = w3 - 16 | 0, E3[A8 + 15 | 0] = 0, I7 = 0 | r3(35256, A8 + 15 | 0, 0), w3 = A8 + 16 | 0, 0 | I7;
                    }, _b: mA, $b: function(A8) {
                      var I7, g6 = 0, C4 = 0;
                      if (w3 = I7 = w3 - 16 | 0, (A8 |= 0) >>> 0 >= 2) {
                        for (g6 = (0 - A8 >>> 0) % (A8 >>> 0) | 0; E3[I7 + 15 | 0] = 0, g6 >>> 0 > (C4 = 0 | r3(35256, I7 + 15 | 0, 0)) >>> 0; )
                          ;
                        g6 = (C4 >>> 0) % (A8 >>> 0) | 0;
                      }
                      return w3 = I7 + 16 | 0, 0 | g6;
                    }, ac: HA, bc: function(A8, I7, g6) {
                      ZA(A8 |= 0, I7 |= 0, 1024, g6 |= 0);
                    }, cc: aI, dc: function() {
                      var A8 = 0, I7 = 0;
                      return (A8 = o3[9004]) && (A8 = o3[A8 + 20 >> 2]) && (I7 = 0 | wI[0 | A8]()), 0 | I7;
                    }, ec: function(A8, I7, g6) {
                      A8 |= 0, I7 |= 0;
                      var C4, B4 = 0, i4 = 0, o4 = 0;
                      if (w3 = C4 = w3 - 16 | 0, g6 |= 0)
                        D3(1240, 1100, 197, 1036), Q3();
                      else {
                        if (I7)
                          for (; E3[C4 + 15 | 0] = 0, i4 = A8 + B4 | 0, o4 = 0 | r3(35256, C4 + 15 | 0, 0), E3[0 | i4] = o4, (0 | I7) != (0 | (B4 = B4 + 1 | 0)); )
                            ;
                        w3 = C4 + 16 | 0;
                      }
                    }, fc: function(A8, I7, g6, C4) {
                      A8 |= 0, g6 |= 0;
                      var B4 = 0, i4 = 0, o4 = 0;
                      if (!((C4 |= 0) >>> 0 > 2147483646 | C4 << 1 >>> 0 >= (I7 |= 0) >>> 0)) {
                        if (I7 = 0, C4) {
                          for (; B4 = (I7 << 1) + A8 | 0, i4 = 15 & (o4 = a3[I7 + g6 | 0]), E3[B4 + 1 | 0] = 22272 + ((i4 << 8) + (i4 + 65526 & 55552) | 0) >>> 8, i4 = B4, B4 = o4 >>> 4 | 0, E3[0 | i4] = 87 + ((B4 + 65526 >>> 8 & 217) + B4 | 0), (0 | C4) != (0 | (I7 = I7 + 1 | 0)); )
                            ;
                          I7 = C4 << 1;
                        } else
                          I7 = 0;
                        return E3[I7 + A8 | 0] = 0, 0 | A8;
                      }
                      zA(), Q3();
                    }, gc: function(A8, I7, g6, C4, B4, Q4, i4) {
                      A8 |= 0, I7 |= 0, g6 |= 0, B4 |= 0, Q4 |= 0, i4 |= 0;
                      var f4 = 0, c4 = 0, e4 = 0, r4 = 0, D4 = 0, t4 = 0, y4 = 0, w4 = 0, h4 = 0, n4 = 0;
                      A:
                        if (C4 |= 0) {
                          I: {
                            g: {
                              C: {
                                B: {
                                  if (!B4) {
                                    for (c4 = 1, B4 = 0; ; ) {
                                      if (!(255 & ((y4 = (65526 + (e4 = (223 & (D4 = a3[g6 + f4 | 0])) - 55 & 255) ^ e4 + 65520) >>> 8 | 0) | (w4 = 65526 + (D4 ^= 48) >>> 8 | 0))))
                                        break C;
                                      if (I7 >>> 0 <= t4 >>> 0)
                                        break B;
                                      if (e4 = e4 & y4 | D4 & w4, 255 & r4 ? (E3[A8 + t4 | 0] = B4 | e4, t4 = t4 + 1 | 0) : B4 = e4 << 4, r4 ^= -1, (0 | (f4 = f4 + 1 | 0)) == (0 | C4))
                                        break;
                                    }
                                    f4 = C4;
                                    break C;
                                  }
                                  for (; ; ) {
                                    Q: {
                                      i: {
                                        E: {
                                          o: {
                                            a: {
                                              if (!(255 & ((D4 = (65526 + (e4 = (223 & (c4 = a3[g6 + f4 | 0])) - 55 & 255) ^ e4 + 65520) >>> 8 | 0) | (w4 = 65526 + (y4 = 48 ^ c4) >>> 8 | 0)))) {
                                                if (255 & r4)
                                                  break g;
                                                if (!BA(B4, c4))
                                                  break A;
                                                if ((f4 = r4 = f4 + 1 | 0) >>> 0 < C4 >>> 0)
                                                  break a;
                                                break A;
                                              }
                                              if (I7 >>> 0 <= t4 >>> 0)
                                                break B;
                                              if (c4 = e4 & D4 | y4 & w4, !(255 & r4))
                                                break o;
                                              E3[A8 + t4 | 0] = c4 | n4, t4 = t4 + 1 | 0;
                                              break Q;
                                            }
                                            for (; ; ) {
                                              if (!(255 & ((D4 = (65526 + (e4 = (223 & (c4 = a3[g6 + f4 | 0])) - 55 & 255) ^ e4 + 65520) >>> 8 | 0) | (w4 = 65526 + (y4 = 48 ^ c4) >>> 8 | 0)))) {
                                                if (!BA(B4, c4))
                                                  break A;
                                                if ((f4 = f4 + 1 | 0) >>> 0 < C4 >>> 0)
                                                  continue;
                                                break E;
                                              }
                                              break;
                                            }
                                            if (I7 >>> 0 <= t4 >>> 0)
                                              break i;
                                            c4 = e4 & D4 | y4 & w4;
                                          }
                                          n4 = c4 << 4, r4 = 0;
                                          break Q;
                                        }
                                        f4 = C4 >>> 0 > r4 >>> 0 ? C4 : r4;
                                        break A;
                                      }
                                      r4 = 0;
                                      break B;
                                    }
                                    if (r4 ^= -1, c4 = 1, !((f4 = f4 + 1 | 0) >>> 0 < C4 >>> 0))
                                      break;
                                  }
                                  break C;
                                }
                                o3[9005] = 68, c4 = 0;
                              }
                              if (!(255 & r4))
                                break I;
                            }
                            o3[9005] = 28, h4 = -1, f4 = f4 - 1 | 0, t4 = 0;
                            break A;
                          }
                          c4 || (t4 = 0, h4 = -1);
                        }
                      return i4 ? o3[i4 >> 2] = g6 + f4 : (0 | C4) != (0 | f4) && (o3[9005] = 28, h4 = -1), Q4 && (o3[Q4 >> 2] = t4), 0 | h4;
                    }, hc: function(A8, I7) {
                      A8 |= 0;
                      var g6 = 0;
                      return 1 != (-7 & (I7 |= 0)) && (zA(), Q3()), 1 + ((3 & (g6 = (g6 = A8) + c3(A8 = (A8 >>> 0) / 3 | 0, -3) | 0) ? 2 & I7 ? g6 + 1 | 0 : 4 : 0) + (A8 << 2) | 0) | 0;
                    }, ic: function(A8, I7, g6, C4, B4) {
                      A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0;
                      var i4 = 0, o4 = 0, f4 = 0, e4 = 0, r4 = 0, t4 = 0, y4 = 0, w4 = 0, h4 = 0, n4 = 0;
                      A: {
                        I: {
                          g: {
                            C: {
                              B: {
                                Q: {
                                  i: {
                                    if (1 == (-7 & (B4 |= 0)) && (r4 = (o4 = (C4 >>> 0) / 3 | 0) << 2, (o4 = c3(o4, -3) + C4 | 0) && (r4 = 2 & B4 ? (2 | r4) + (o4 >>> 1 | 0) | 0 : r4 + 4 | 0), !(I7 >>> 0 <= r4 >>> 0))) {
                                      if (!(4 & B4)) {
                                        if (!C4) {
                                          B4 = 0;
                                          break C;
                                        }
                                        B4 = 0;
                                        break i;
                                      }
                                      if (!C4) {
                                        B4 = 0;
                                        break C;
                                      }
                                      for (B4 = 0; ; ) {
                                        for (y4 = (w4 = a3[g6 + t4 | 0]) | y4 << 8, o4 = B4, B4 = 1 + ((((e4 |= 8) - 6 >>> 0) / 6 | 0) + B4 | 0) | 0; h4 = 65510 + (f4 = y4 >>> (e4 = (i4 = e4) - 6 | 0) & 63) >>> 8 | 0, n4 = f4 + 65484 >>> 8 | 0, E3[A8 + o4 | 0] = (1 + (16321 ^ f4) ^ -1) >>> 8 & 45 | f4 + 252 & f4 + 65474 >>> 8 & (-1 ^ n4) | (f4 + 32705 ^ -1) >>> 8 & 95 | h4 & f4 + 65 | n4 & f4 + 71 & (-1 ^ h4), (0 | (o4 = o4 + 1 | 0)) != (0 | B4); )
                                          ;
                                        if ((0 | (t4 = t4 + 1 | 0)) == (0 | C4))
                                          break;
                                      }
                                      if (!e4)
                                        break B;
                                      o4 = (C4 = 65510 + (i4 = w4 << 12 - i4 & 63) >>> 8 | 0) & i4 + 65, e4 = i4 + 252 & i4 + 65474 >>> 8 & (-1 ^ (g6 = i4 + 65484 >>> 8 | 0)), C4 = g6 & i4 + 71 & (-1 ^ C4), t4 = i4 + 32705 | 0, y4 = 95, g6 = (1 + (16321 ^ i4) ^ -1) >>> 8 & 45;
                                      break Q;
                                    }
                                    zA(), Q3();
                                  }
                                  for (; ; ) {
                                    for (y4 = (w4 = a3[g6 + t4 | 0]) | y4 << 8, o4 = B4, B4 = 1 + ((((e4 |= 8) - 6 >>> 0) / 6 | 0) + B4 | 0) | 0; h4 = 65510 + (f4 = y4 >>> (e4 = (i4 = e4) - 6 | 0) & 63) >>> 8 | 0, n4 = f4 + 65484 >>> 8 | 0, E3[A8 + o4 | 0] = (1 + (16321 ^ f4) ^ -1) >>> 8 & 43 | f4 + 252 & f4 + 65474 >>> 8 & (-1 ^ n4) | (f4 + 16321 ^ -1) >>> 8 & 47 | h4 & f4 + 65 | n4 & f4 + 71 & (-1 ^ h4), (0 | (o4 = o4 + 1 | 0)) != (0 | B4); )
                                      ;
                                    if ((0 | (t4 = t4 + 1 | 0)) == (0 | C4))
                                      break;
                                  }
                                  if (!e4)
                                    break B;
                                  o4 = (C4 = 65510 + (i4 = w4 << 12 - i4 & 63) >>> 8 | 0) & i4 + 65, e4 = i4 + 252 & i4 + 65474 >>> 8 & (-1 ^ (g6 = i4 + 65484 >>> 8 | 0)), C4 = g6 & i4 + 71 & (-1 ^ C4), t4 = i4 + 16321 | 0, y4 = 47, g6 = (1 + (16321 ^ i4) ^ -1) >>> 8 & 43;
                                }
                                E3[A8 + B4 | 0] = g6 | (-1 ^ t4) >>> 8 & y4 | o4 | e4 | C4, B4 = B4 + 1 | 0;
                              }
                              if (B4 >>> 0 > r4 >>> 0)
                                break g;
                            }
                            if (B4 >>> 0 < r4 >>> 0)
                              break I;
                            r4 = B4;
                            break A;
                          }
                          D3(1048, 1126, 231, 1319), Q3();
                        }
                        dA(A8 + B4 | 0, 61, r4 - B4 | 0);
                      }
                      return dA(A8 + r4 | 0, 0, (I7 >>> 0 > (g6 = r4 + 1 | 0) >>> 0 ? I7 : g6) - r4 | 0), 0 | A8;
                    }, jc: function(A8, I7, g6, C4, B4, i4, f4, c4) {
                      A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, i4 |= 0, f4 |= 0;
                      var e4 = 0, r4 = 0, D4 = 0, t4 = 0, y4 = 0, w4 = 0, h4 = 0, n4 = 0;
                      A: {
                        I: {
                          g: {
                            C: {
                              B: {
                                Q: {
                                  i: {
                                    E: {
                                      o: {
                                        a: {
                                          f: {
                                            if (1 == (-7 & (c4 |= 0))) {
                                              if (D4 = 0, !C4)
                                                break E;
                                              if (4 & c4)
                                                break f;
                                              for (; ; ) {
                                                D4 = r4;
                                                c: {
                                                  e: {
                                                    r: {
                                                      D: {
                                                        for (; ; ) {
                                                          if (e4 = (e4 = (t4 = E3[g6 + D4 | 0]) - 65 | 0) & ((90 - t4 ^ -1) & (-1 ^ e4)) >>> 8 & 255 | t4 + 4 & ((t4 + 65488 ^ -1) & (57 - t4 ^ -1)) >>> 8 & 255 | t4 + 185 & ((t4 + 65439 ^ -1) & (122 - t4 ^ -1)) >>> 8 & 255 | (1 + (16336 ^ t4) ^ -1) >>> 8 & 63 | (1 + (16340 ^ t4) ^ -1) >>> 8 & 62, 255 != (0 | (e4 |= (e4 - 1 & 1 + (65470 ^ t4)) >>> 8 & 255)))
                                                            break D;
                                                          if (e4 = 0, !B4)
                                                            break o;
                                                          if (!BA(B4, t4))
                                                            break;
                                                          if ((D4 = D4 + 1 | 0) >>> 0 >= C4 >>> 0)
                                                            break r;
                                                        }
                                                        r4 = D4;
                                                        break o;
                                                      }
                                                      if (h4 = e4 + (h4 << 6) | 0, y4 >>> 0 > 1)
                                                        break e;
                                                      y4 = y4 + 6 | 0;
                                                      break c;
                                                    }
                                                    r4 = (A8 = r4 + 1 | 0) >>> 0 < C4 >>> 0 ? C4 : A8;
                                                    break o;
                                                  }
                                                  if (y4 = y4 - 2 | 0, I7 >>> 0 <= w4 >>> 0)
                                                    break a;
                                                  E3[A8 + w4 | 0] = h4 >>> y4, w4 = w4 + 1 | 0;
                                                }
                                                if (e4 = 0, !((r4 = D4 + 1 | 0) >>> 0 < C4 >>> 0))
                                                  break;
                                              }
                                              break o;
                                            }
                                            zA(), Q3();
                                          }
                                          f:
                                            for (; ; ) {
                                              for (D4 = r4; ; ) {
                                                c: {
                                                  if (e4 = (e4 = (t4 = E3[g6 + D4 | 0]) - 65 | 0) & ((90 - t4 ^ -1) & (-1 ^ e4)) >>> 8 & 255 | t4 + 4 & ((t4 + 65488 ^ -1) & (57 - t4 ^ -1)) >>> 8 & 255 | t4 + 185 & ((t4 + 65439 ^ -1) & (122 - t4 ^ -1)) >>> 8 & 255 | (1 + (16288 ^ t4) ^ -1) >>> 8 & 63 | (1 + (16338 ^ t4) ^ -1) >>> 8 & 62, 255 == (0 | (e4 |= (e4 - 1 & 1 + (65470 ^ t4)) >>> 8 & 255))) {
                                                    if (e4 = 0, !B4)
                                                      break o;
                                                    if (BA(B4, t4))
                                                      break c;
                                                    r4 = D4;
                                                    break o;
                                                  }
                                                  if (h4 = e4 + (h4 << 6) | 0, y4 >>> 0 < 2)
                                                    y4 = y4 + 6 | 0;
                                                  else {
                                                    if (y4 = y4 - 2 | 0, I7 >>> 0 <= w4 >>> 0)
                                                      break a;
                                                    E3[A8 + w4 | 0] = h4 >>> y4, w4 = w4 + 1 | 0;
                                                  }
                                                  if (e4 = 0, (r4 = D4 + 1 | 0) >>> 0 < C4 >>> 0)
                                                    continue f;
                                                  break o;
                                                }
                                                if (!((D4 = D4 + 1 | 0) >>> 0 < C4 >>> 0))
                                                  break;
                                              }
                                              break;
                                            }
                                          r4 = (A8 = r4 + 1 | 0) >>> 0 < C4 >>> 0 ? C4 : A8;
                                          break o;
                                        }
                                        r4 = D4, o3[9005] = 68, e4 = 1;
                                      }
                                      if (y4 >>> 0 > 4)
                                        break i;
                                      D4 = r4;
                                    }
                                    if (A8 = D4, I7 = -1, e4) {
                                      r4 = A8;
                                      break A;
                                    }
                                    if ((-1 << y4 ^ -1) & h4) {
                                      r4 = A8;
                                      break A;
                                    }
                                    if (2 & c4) {
                                      c4 = A8;
                                      break B;
                                    }
                                    if (y4 >>> 0 < 2) {
                                      c4 = A8;
                                      break B;
                                    }
                                    if (r4 = A8 >>> 0 > C4 >>> 0 ? A8 : C4, D4 = y4 >>> 1 | 0, !B4)
                                      break Q;
                                    for (c4 = A8; ; ) {
                                      if ((0 | c4) == (0 | r4)) {
                                        e4 = 68;
                                        break C;
                                      }
                                      if (61 != (0 | (A8 = E3[g6 + c4 | 0]))) {
                                        if (!BA(B4, A8)) {
                                          e4 = 28, r4 = c4;
                                          break C;
                                        }
                                      } else
                                        D4 = D4 - 1 | 0;
                                      if (c4 = c4 + 1 | 0, !D4)
                                        break;
                                    }
                                    break B;
                                  }
                                  I7 = -1;
                                  break A;
                                }
                                if (e4 = 68, A8 >>> 0 >= C4 >>> 0)
                                  break C;
                                if (61 != a3[A8 + g6 | 0]) {
                                  r4 = A8, e4 = 28;
                                  break C;
                                }
                                if (c4 = A8 + D4 | 0, 1 != (0 | D4)) {
                                  if ((0 | (y4 = A8 + 1 | 0)) == (0 | r4))
                                    break C;
                                  if (61 != a3[g6 + y4 | 0]) {
                                    r4 = y4, e4 = 28;
                                    break C;
                                  }
                                  if (2 != (0 | D4)) {
                                    if ((0 | (A8 = A8 + 2 | 0)) == (0 | r4))
                                      break C;
                                    if (e4 = 28, r4 = A8, 61 != a3[A8 + g6 | 0])
                                      break C;
                                  }
                                }
                              }
                              if (I7 = 0, B4)
                                break g;
                              break I;
                            }
                            o3[9005] = e4;
                            break A;
                          }
                          if (!(C4 >>> 0 <= c4 >>> 0)) {
                            for (; ; ) {
                              if (!BA(B4, E3[g6 + c4 | 0]))
                                break I;
                              if ((0 | (c4 = c4 + 1 | 0)) == (0 | C4))
                                break;
                            }
                            c4 = C4;
                          }
                        }
                        r4 = c4, n4 = w4;
                      }
                      return f4 ? o3[f4 >> 2] = g6 + r4 : (0 | C4) != (0 | r4) && (o3[9005] = 28, I7 = -1), i4 && (o3[i4 >> 2] = n4), 0 | I7;
                    }, kc: function() {
                      var A8 = 0;
                      return o3[9136] ? A8 = 1 : (mA(), HA(36528, 16), o3[9136] = 1, A8 = 0), 0 | A8;
                    }, lc: function(A8, I7, g6, C4, B4) {
                      A8 |= 0, I7 |= 0, g6 |= 0, B4 |= 0;
                      var i4, f4 = 0, c4 = 0, e4 = 0;
                      w3 = i4 = w3 - 16 | 0;
                      A: {
                        if (C4 |= 0) {
                          if ((f4 = C4 - 1 | 0) & C4 ? (c4 = -1 ^ g6, f4 = f4 - ((g6 >>> 0) % (C4 >>> 0) | 0) | 0) : f4 &= c4 = -1 ^ g6, c4 >>> 0 <= f4 >>> 0)
                            break A;
                          if (c4 = -1, !((g6 = g6 + f4 | 0) >>> 0 >= B4 >>> 0))
                            for (A8 && (o3[A8 >> 2] = g6 + 1), A8 = I7 + g6 | 0, c4 = 0, E3[i4 + 15 | 0] = 0, g6 = 0; B4 = I7 = A8 - g6 | 0, e4 = a3[0 | I7] & a3[i4 + 15 | 0], I7 = (g6 ^ f4) - 1 >>> 24 | 0, E3[0 | B4] = e4 | 128 & I7, E3[i4 + 15 | 0] = I7 | a3[i4 + 15 | 0], (0 | C4) != (0 | (g6 = g6 + 1 | 0)); )
                              ;
                        } else
                          c4 = -1;
                        return w3 = i4 + 16 | 0, 0 | c4;
                      }
                      zA(), Q3();
                    }, mc: function(A8, I7, g6, C4) {
                      A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0;
                      var B4, Q4 = 0, i4 = 0, E4 = 0, f4 = 0, c4 = 0;
                      if (o3[12 + (B4 = w3 - 16 | 0) >> 2] = 0, C4 - 1 >>> 0 < g6 >>> 0) {
                        for (c4 = (Q4 = g6 - 1 | 0) + I7 | 0, g6 = 0, I7 = 0; f4 = ((128 ^ (i4 = a3[c4 - g6 | 0])) - 1 & o3[B4 + 12 >> 2] - 1 & E4 - 1) >>> 8 & 1, o3[B4 + 12 >> 2] = o3[B4 + 12 >> 2] | 0 - f4 & g6, I7 |= f4, E4 |= i4, (0 | C4) != (0 | (g6 = g6 + 1 | 0)); )
                          ;
                        o3[A8 >> 2] = Q4 - o3[B4 + 12 >> 2], A8 = (255 & I7) - 1 | 0;
                      } else
                        A8 = -1;
                      return 0 | A8;
                    }, nc: function() {
                      return 1312;
                    }, oc: function() {
                      return 26;
                    }, pc: rI, qc: rI, rc: function(A8) {
                      var I7, g6 = 0, C4 = 0, B4 = 0, Q4 = 0, i4 = 0, E4 = 0, c4 = 0, r4 = 0, D4 = 0, t4 = 0, y4 = 0, h4 = 0;
                      w3 = I7 = w3 - 16 | 0;
                      A: {
                        I: {
                          g: {
                            C: {
                              B: {
                                Q: {
                                  i: {
                                    E: {
                                      o: {
                                        a: {
                                          f: {
                                            c: {
                                              e: {
                                                r: {
                                                  if ((A8 |= 0) >>> 0 <= 244) {
                                                    if (3 & (g6 = (E4 = o3[9006]) >>> (C4 = (c4 = A8 >>> 0 < 11 ? 16 : A8 + 11 & -8) >>> 3 | 0) | 0)) {
                                                      g6 = 36064 + (A8 = (C4 = C4 + (1 & (-1 ^ g6)) | 0) << 3) | 0, B4 = o3[A8 + 36072 >> 2], (0 | g6) != (0 | (A8 = o3[B4 + 8 >> 2])) ? (o3[A8 + 12 >> 2] = g6, o3[g6 + 8 >> 2] = A8) : (y4 = 36024, h4 = RA(-2, C4) & E4, o3[y4 >> 2] = h4), A8 = B4 + 8 | 0, g6 = C4 << 3, o3[B4 + 4 >> 2] = 3 | g6, o3[4 + (g6 = g6 + B4 | 0) >> 2] = 1 | o3[g6 + 4 >> 2];
                                                      break A;
                                                    }
                                                    if ((t4 = o3[9008]) >>> 0 >= c4 >>> 0)
                                                      break r;
                                                    if (g6) {
                                                      g6 = 36064 + (A8 = (B4 = TA((0 - (A8 = 2 << C4) | A8) & g6 << C4)) << 3) | 0, Q4 = o3[A8 + 36072 >> 2], (0 | g6) != (0 | (A8 = o3[Q4 + 8 >> 2])) ? (o3[A8 + 12 >> 2] = g6, o3[g6 + 8 >> 2] = A8) : (E4 = RA(-2, B4) & E4, o3[9006] = E4), o3[Q4 + 4 >> 2] = 3 | c4, B4 = (A8 = B4 << 3) - c4 | 0, o3[4 + (C4 = Q4 + c4 | 0) >> 2] = 1 | B4, o3[A8 + Q4 >> 2] = B4, t4 && (g6 = 36064 + (-8 & t4) | 0, i4 = o3[9011], (A8 = 1 << (t4 >>> 3)) & E4 ? A8 = o3[g6 + 8 >> 2] : (o3[9006] = A8 | E4, A8 = g6), o3[g6 + 8 >> 2] = i4, o3[A8 + 12 >> 2] = i4, o3[i4 + 12 >> 2] = g6, o3[i4 + 8 >> 2] = A8), A8 = Q4 + 8 | 0, o3[9011] = C4, o3[9008] = B4;
                                                      break A;
                                                    }
                                                    if (!(D4 = o3[9007]))
                                                      break r;
                                                    for (C4 = o3[36328 + (TA(D4) << 2) >> 2], i4 = (-8 & o3[C4 + 4 >> 2]) - c4 | 0, g6 = C4; (A8 = o3[g6 + 16 >> 2]) || (A8 = o3[g6 + 20 >> 2]); )
                                                      i4 = (B4 = (g6 = (-8 & o3[A8 + 4 >> 2]) - c4 | 0) >>> 0 < i4 >>> 0) ? g6 : i4, C4 = B4 ? A8 : C4, g6 = A8;
                                                    if (r4 = o3[C4 + 24 >> 2], (0 | (B4 = o3[C4 + 12 >> 2])) != (0 | C4)) {
                                                      A8 = o3[C4 + 8 >> 2], o3[A8 + 12 >> 2] = B4, o3[B4 + 8 >> 2] = A8;
                                                      break I;
                                                    }
                                                    if (!(A8 = o3[(g6 = C4 + 20 | 0) >> 2])) {
                                                      if (!(A8 = o3[C4 + 16 >> 2]))
                                                        break e;
                                                      g6 = C4 + 16 | 0;
                                                    }
                                                    for (; Q4 = g6, B4 = A8, (A8 = o3[(g6 = A8 + 20 | 0) >> 2]) || (g6 = B4 + 16 | 0, A8 = o3[B4 + 16 >> 2]); )
                                                      ;
                                                    o3[Q4 >> 2] = 0;
                                                    break I;
                                                  }
                                                  if (c4 = -1, !(A8 >>> 0 > 4294967231) && (c4 = -8 & (A8 = A8 + 11 | 0), D4 = o3[9007])) {
                                                    i4 = 0 - c4 | 0, E4 = 0, c4 >>> 0 < 256 || (E4 = 31, c4 >>> 0 > 16777215 || (E4 = 62 + ((c4 >>> 38 - (A8 = e3(A8 >>> 8 | 0)) & 1) - (A8 << 1) | 0) | 0));
                                                    D: {
                                                      t: {
                                                        if (g6 = o3[36328 + (E4 << 2) >> 2])
                                                          for (A8 = 0, C4 = c4 << (31 != (0 | E4) ? 25 - (E4 >>> 1 | 0) | 0 : 0); ; ) {
                                                            if (!((Q4 = (-8 & o3[g6 + 4 >> 2]) - c4 | 0) >>> 0 >= i4 >>> 0 || (B4 = g6, i4 = Q4, Q4))) {
                                                              i4 = 0, A8 = g6;
                                                              break t;
                                                            }
                                                            if (Q4 = o3[g6 + 20 >> 2], g6 = o3[16 + ((C4 >>> 29 & 4) + g6 | 0) >> 2], A8 = Q4 ? (0 | Q4) == (0 | g6) ? A8 : Q4 : A8, C4 <<= 1, !g6)
                                                              break;
                                                          }
                                                        else
                                                          A8 = 0;
                                                        if (!(A8 | B4)) {
                                                          if (B4 = 0, !(A8 = (0 - (A8 = 2 << E4) | A8) & D4))
                                                            break r;
                                                          A8 = o3[36328 + (TA(A8) << 2) >> 2];
                                                        }
                                                        if (!A8)
                                                          break D;
                                                      }
                                                      for (; i4 = (C4 = (g6 = (-8 & o3[A8 + 4 >> 2]) - c4 | 0) >>> 0 < i4 >>> 0) ? g6 : i4, B4 = C4 ? A8 : B4, A8 = (g6 = o3[A8 + 16 >> 2]) || o3[A8 + 20 >> 2]; )
                                                        ;
                                                    }
                                                    if (!(!B4 | o3[9008] - c4 >>> 0 <= i4 >>> 0)) {
                                                      if (E4 = o3[B4 + 24 >> 2], (0 | B4) != (0 | (C4 = o3[B4 + 12 >> 2]))) {
                                                        A8 = o3[B4 + 8 >> 2], o3[A8 + 12 >> 2] = C4, o3[C4 + 8 >> 2] = A8;
                                                        break g;
                                                      }
                                                      if (!(A8 = o3[(g6 = B4 + 20 | 0) >> 2])) {
                                                        if (!(A8 = o3[B4 + 16 >> 2]))
                                                          break c;
                                                        g6 = B4 + 16 | 0;
                                                      }
                                                      for (; Q4 = g6, C4 = A8, (A8 = o3[(g6 = A8 + 20 | 0) >> 2]) || (g6 = C4 + 16 | 0, A8 = o3[C4 + 16 >> 2]); )
                                                        ;
                                                      o3[Q4 >> 2] = 0;
                                                      break g;
                                                    }
                                                  }
                                                }
                                                if ((A8 = o3[9008]) >>> 0 >= c4 >>> 0) {
                                                  B4 = o3[9011], (g6 = A8 - c4 | 0) >>> 0 >= 16 ? (o3[4 + (C4 = B4 + c4 | 0) >> 2] = 1 | g6, o3[A8 + B4 >> 2] = g6, o3[B4 + 4 >> 2] = 3 | c4) : (o3[B4 + 4 >> 2] = 3 | A8, o3[4 + (A8 = A8 + B4 | 0) >> 2] = 1 | o3[A8 + 4 >> 2], C4 = 0, g6 = 0), o3[9008] = g6, o3[9011] = C4, A8 = B4 + 8 | 0;
                                                  break A;
                                                }
                                                if ((r4 = o3[9009]) >>> 0 > c4 >>> 0) {
                                                  g6 = r4 - c4 | 0, o3[9009] = g6, A8 = (C4 = o3[9012]) + c4 | 0, o3[9012] = A8, o3[A8 + 4 >> 2] = 1 | g6, o3[C4 + 4 >> 2] = 3 | c4, A8 = C4 + 8 | 0;
                                                  break A;
                                                }
                                                if (A8 = 0, D4 = c4 + 47 | 0, o3[9124] ? C4 = o3[9126] : (o3[9127] = -1, o3[9128] = -1, o3[9125] = 4096, o3[9126] = 4096, o3[9124] = I7 + 12 & -16 ^ 1431655768, o3[9129] = 0, o3[9117] = 0, C4 = 4096), (g6 = (Q4 = D4 + C4 | 0) & (i4 = 0 - C4 | 0)) >>> 0 <= c4 >>> 0)
                                                  break A;
                                                if ((B4 = o3[9116]) && B4 >>> 0 < (E4 = (C4 = o3[9114]) + g6 | 0) >>> 0 | C4 >>> 0 >= E4 >>> 0)
                                                  break A;
                                                r: {
                                                  if (!(4 & a3[36468])) {
                                                    D: {
                                                      t: {
                                                        y: {
                                                          w: {
                                                            if (B4 = o3[9012])
                                                              for (A8 = 36472; ; ) {
                                                                if ((C4 = o3[A8 >> 2]) >>> 0 <= B4 >>> 0 & B4 >>> 0 < C4 + o3[A8 + 4 >> 2] >>> 0)
                                                                  break w;
                                                                if (!(A8 = o3[A8 + 8 >> 2]))
                                                                  break;
                                                              }
                                                            if (-1 == (0 | (C4 = _A(0))))
                                                              break D;
                                                            if (E4 = g6, (A8 = (B4 = o3[9125]) - 1 | 0) & C4 && (E4 = (g6 - C4 | 0) + (A8 + C4 & 0 - B4) | 0), E4 >>> 0 <= c4 >>> 0)
                                                              break D;
                                                            if ((B4 = o3[9116]) && B4 >>> 0 < (i4 = (A8 = o3[9114]) + E4 | 0) >>> 0 | A8 >>> 0 >= i4 >>> 0)
                                                              break D;
                                                            if ((0 | C4) != (0 | (A8 = _A(E4))))
                                                              break y;
                                                            break r;
                                                          }
                                                          if ((0 | (C4 = _A(E4 = i4 & Q4 - r4))) == (o3[A8 >> 2] + o3[A8 + 4 >> 2] | 0))
                                                            break t;
                                                          A8 = C4;
                                                        }
                                                        if (-1 == (0 | A8))
                                                          break D;
                                                        if (c4 + 48 >>> 0 <= E4 >>> 0) {
                                                          C4 = A8;
                                                          break r;
                                                        }
                                                        if (-1 == (0 | _A(C4 = (C4 = o3[9126]) + (D4 - E4 | 0) & 0 - C4)))
                                                          break D;
                                                        E4 = C4 + E4 | 0, C4 = A8;
                                                        break r;
                                                      }
                                                      if (-1 != (0 | C4))
                                                        break r;
                                                    }
                                                    o3[9117] = 4 | o3[9117];
                                                  }
                                                  if (-1 == (0 | (C4 = _A(g6))) | -1 == (0 | (A8 = _A(0))) | A8 >>> 0 <= C4 >>> 0)
                                                    break o;
                                                  if ((E4 = A8 - C4 | 0) >>> 0 <= c4 + 40 >>> 0)
                                                    break o;
                                                }
                                                A8 = o3[9114] + E4 | 0, o3[9114] = A8, A8 >>> 0 > f3[9115] && (o3[9115] = A8);
                                                r: {
                                                  if (Q4 = o3[9012]) {
                                                    for (A8 = 36472; ; ) {
                                                      if (((B4 = o3[A8 >> 2]) + (g6 = o3[A8 + 4 >> 2]) | 0) == (0 | C4))
                                                        break r;
                                                      if (!(A8 = o3[A8 + 8 >> 2]))
                                                        break;
                                                    }
                                                    break f;
                                                  }
                                                  for ((A8 = o3[9010]) >>> 0 <= C4 >>> 0 && A8 || (o3[9010] = C4), A8 = 0, o3[9119] = E4, o3[9118] = C4, o3[9014] = -1, o3[9015] = o3[9124], o3[9121] = 0; g6 = 36064 + (B4 = A8 << 3) | 0, o3[B4 + 36072 >> 2] = g6, o3[B4 + 36076 >> 2] = g6, 32 != (0 | (A8 = A8 + 1 | 0)); )
                                                    ;
                                                  g6 = (B4 = E4 - 40 | 0) - (A8 = -8 - C4 & 7) | 0, o3[9009] = g6, A8 = A8 + C4 | 0, o3[9012] = A8, o3[A8 + 4 >> 2] = 1 | g6, o3[4 + (C4 + B4 | 0) >> 2] = 40, o3[9013] = o3[9128];
                                                  break a;
                                                }
                                                if (8 & o3[A8 + 12 >> 2] | C4 >>> 0 <= Q4 >>> 0 | B4 >>> 0 > Q4 >>> 0)
                                                  break f;
                                                o3[A8 + 4 >> 2] = g6 + E4, C4 = (A8 = -8 - Q4 & 7) + Q4 | 0, o3[9012] = C4, A8 = (g6 = o3[9009] + E4 | 0) - A8 | 0, o3[9009] = A8, o3[C4 + 4 >> 2] = 1 | A8, o3[4 + (g6 + Q4 | 0) >> 2] = 40, o3[9013] = o3[9128];
                                                break a;
                                              }
                                              B4 = 0;
                                              break I;
                                            }
                                            C4 = 0;
                                            break g;
                                          }
                                          f3[9010] > C4 >>> 0 && (o3[9010] = C4), g6 = C4 + E4 | 0, A8 = 36472;
                                          f: {
                                            c: {
                                              e: {
                                                for (; ; ) {
                                                  if ((0 | g6) != o3[A8 >> 2]) {
                                                    if (A8 = o3[A8 + 8 >> 2])
                                                      continue;
                                                    break e;
                                                  }
                                                  break;
                                                }
                                                if (!(8 & a3[A8 + 12 | 0]))
                                                  break c;
                                              }
                                              for (A8 = 36472; ; ) {
                                                if ((g6 = o3[A8 >> 2]) >>> 0 <= Q4 >>> 0 && (i4 = g6 + o3[A8 + 4 >> 2] | 0) >>> 0 > Q4 >>> 0)
                                                  break f;
                                                A8 = o3[A8 + 8 >> 2];
                                              }
                                            }
                                            if (o3[A8 >> 2] = C4, o3[A8 + 4 >> 2] = o3[A8 + 4 >> 2] + E4, o3[4 + (D4 = (-8 - C4 & 7) + C4 | 0) >> 2] = 3 | c4, A8 = (E4 = g6 + (-8 - g6 & 7) | 0) - (r4 = c4 + D4 | 0) | 0, (0 | Q4) == (0 | E4)) {
                                              o3[9012] = r4, A8 = o3[9009] + A8 | 0, o3[9009] = A8, o3[r4 + 4 >> 2] = 1 | A8;
                                              break C;
                                            }
                                            if (o3[9011] == (0 | E4)) {
                                              o3[9011] = r4, A8 = o3[9008] + A8 | 0, o3[9008] = A8, o3[r4 + 4 >> 2] = 1 | A8, o3[A8 + r4 >> 2] = A8;
                                              break C;
                                            }
                                            if (1 != (3 & (i4 = o3[E4 + 4 >> 2])))
                                              break B;
                                            if (Q4 = -8 & i4, i4 >>> 0 <= 255) {
                                              if ((0 | (C4 = o3[E4 + 12 >> 2])) == (0 | (g6 = o3[E4 + 8 >> 2]))) {
                                                y4 = 36024, h4 = o3[9006] & RA(-2, i4 >>> 3 | 0), o3[y4 >> 2] = h4;
                                                break Q;
                                              }
                                              o3[g6 + 12 >> 2] = C4, o3[C4 + 8 >> 2] = g6;
                                              break Q;
                                            }
                                            if (c4 = o3[E4 + 24 >> 2], (0 | E4) != (0 | (C4 = o3[E4 + 12 >> 2]))) {
                                              g6 = o3[E4 + 8 >> 2], o3[g6 + 12 >> 2] = C4, o3[C4 + 8 >> 2] = g6;
                                              break i;
                                            }
                                            if (!(i4 = o3[(g6 = E4 + 20 | 0) >> 2])) {
                                              if (!(i4 = o3[E4 + 16 >> 2]))
                                                break E;
                                              g6 = E4 + 16 | 0;
                                            }
                                            for (; B4 = g6, (i4 = o3[(g6 = (C4 = i4) + 20 | 0) >> 2]) || (g6 = C4 + 16 | 0, i4 = o3[C4 + 16 >> 2]); )
                                              ;
                                            o3[B4 >> 2] = 0;
                                            break i;
                                          }
                                          for (g6 = (B4 = E4 - 40 | 0) - (A8 = -8 - C4 & 7) | 0, o3[9009] = g6, A8 = A8 + C4 | 0, o3[9012] = A8, o3[A8 + 4 >> 2] = 1 | g6, o3[4 + (C4 + B4 | 0) >> 2] = 40, o3[9013] = o3[9128], o3[(B4 = (A8 = (i4 + (39 - i4 & 7) | 0) - 47 | 0) >>> 0 < Q4 + 16 >>> 0 ? Q4 : A8) + 4 >> 2] = 27, A8 = o3[9121], o3[B4 + 16 >> 2] = o3[9120], o3[B4 + 20 >> 2] = A8, A8 = o3[9119], o3[B4 + 8 >> 2] = o3[9118], o3[B4 + 12 >> 2] = A8, o3[9120] = B4 + 8, o3[9119] = E4, o3[9118] = C4, o3[9121] = 0, A8 = B4 + 24 | 0; o3[A8 + 4 >> 2] = 7, g6 = A8 + 8 | 0, A8 = A8 + 4 | 0, g6 >>> 0 < i4 >>> 0; )
                                            ;
                                          if ((0 | B4) != (0 | Q4))
                                            if (o3[B4 + 4 >> 2] = -2 & o3[B4 + 4 >> 2], i4 = B4 - Q4 | 0, o3[Q4 + 4 >> 2] = 1 | i4, o3[B4 >> 2] = i4, i4 >>> 0 <= 255)
                                              g6 = 36064 + (-8 & i4) | 0, (C4 = o3[9006]) & (A8 = 1 << (i4 >>> 3)) ? A8 = o3[g6 + 8 >> 2] : (o3[9006] = A8 | C4, A8 = g6), o3[g6 + 8 >> 2] = Q4, o3[A8 + 12 >> 2] = Q4, o3[Q4 + 12 >> 2] = g6, o3[Q4 + 8 >> 2] = A8;
                                            else {
                                              A8 = 31, i4 >>> 0 <= 16777215 && (A8 = 62 + ((i4 >>> 38 - (A8 = e3(i4 >>> 8 | 0)) & 1) - (A8 << 1) | 0) | 0), o3[Q4 + 28 >> 2] = A8, o3[Q4 + 16 >> 2] = 0, o3[Q4 + 20 >> 2] = 0, g6 = 36328 + (A8 << 2) | 0;
                                              f: {
                                                if ((B4 = o3[9007]) & (C4 = 1 << A8)) {
                                                  for (A8 = i4 << (31 != (0 | A8) ? 25 - (A8 >>> 1 | 0) | 0 : 0), B4 = o3[g6 >> 2]; ; ) {
                                                    if ((0 | i4) == (-8 & o3[(g6 = B4) + 4 >> 2]))
                                                      break f;
                                                    if (C4 = A8 >>> 29 | 0, A8 <<= 1, !(B4 = o3[16 + (C4 = (4 & C4) + g6 | 0) >> 2]))
                                                      break;
                                                  }
                                                  o3[C4 + 16 >> 2] = Q4;
                                                } else
                                                  o3[9007] = C4 | B4, o3[g6 >> 2] = Q4;
                                                o3[Q4 + 24 >> 2] = g6, o3[Q4 + 12 >> 2] = Q4, o3[Q4 + 8 >> 2] = Q4;
                                                break a;
                                              }
                                              A8 = o3[g6 + 8 >> 2], o3[A8 + 12 >> 2] = Q4, o3[g6 + 8 >> 2] = Q4, o3[Q4 + 24 >> 2] = 0, o3[Q4 + 12 >> 2] = g6, o3[Q4 + 8 >> 2] = A8;
                                            }
                                        }
                                        if (!((A8 = o3[9009]) >>> 0 <= c4 >>> 0)) {
                                          g6 = A8 - c4 | 0, o3[9009] = g6, A8 = (C4 = o3[9012]) + c4 | 0, o3[9012] = A8, o3[A8 + 4 >> 2] = 1 | g6, o3[C4 + 4 >> 2] = 3 | c4, A8 = C4 + 8 | 0;
                                          break A;
                                        }
                                      }
                                      o3[9005] = 48, A8 = 0;
                                      break A;
                                    }
                                    C4 = 0;
                                  }
                                  if (c4) {
                                    B4 = o3[E4 + 28 >> 2];
                                    i: {
                                      if (o3[(g6 = 36328 + (B4 << 2) | 0) >> 2] == (0 | E4)) {
                                        if (o3[g6 >> 2] = C4, C4)
                                          break i;
                                        y4 = 36028, h4 = o3[9007] & RA(-2, B4), o3[y4 >> 2] = h4;
                                        break Q;
                                      }
                                      if (o3[c4 + (o3[c4 + 16 >> 2] == (0 | E4) ? 16 : 20) >> 2] = C4, !C4)
                                        break Q;
                                    }
                                    o3[C4 + 24 >> 2] = c4, (g6 = o3[E4 + 16 >> 2]) && (o3[C4 + 16 >> 2] = g6, o3[g6 + 24 >> 2] = C4), (g6 = o3[E4 + 20 >> 2]) && (o3[C4 + 20 >> 2] = g6, o3[g6 + 24 >> 2] = C4);
                                  }
                                }
                                A8 = A8 + Q4 | 0, i4 = o3[4 + (E4 = Q4 + E4 | 0) >> 2];
                              }
                              if (o3[E4 + 4 >> 2] = -2 & i4, o3[r4 + 4 >> 2] = 1 | A8, o3[A8 + r4 >> 2] = A8, A8 >>> 0 <= 255)
                                g6 = 36064 + (-8 & A8) | 0, (C4 = o3[9006]) & (A8 = 1 << (A8 >>> 3)) ? A8 = o3[g6 + 8 >> 2] : (o3[9006] = A8 | C4, A8 = g6), o3[g6 + 8 >> 2] = r4, o3[A8 + 12 >> 2] = r4, o3[r4 + 12 >> 2] = g6, o3[r4 + 8 >> 2] = A8;
                              else {
                                i4 = 31, A8 >>> 0 <= 16777215 && (i4 = 62 + ((A8 >>> 38 - (g6 = e3(A8 >>> 8 | 0)) & 1) - (g6 << 1) | 0) | 0), o3[r4 + 28 >> 2] = i4, o3[r4 + 16 >> 2] = 0, o3[r4 + 20 >> 2] = 0, g6 = 36328 + (i4 << 2) | 0;
                                B: {
                                  if ((B4 = o3[9007]) & (C4 = 1 << i4)) {
                                    for (i4 = A8 << (31 != (0 | i4) ? 25 - (i4 >>> 1 | 0) | 0 : 0), C4 = o3[g6 >> 2]; ; ) {
                                      if (g6 = C4, (-8 & o3[C4 + 4 >> 2]) == (0 | A8))
                                        break B;
                                      if (B4 = i4 >>> 29 | 0, i4 <<= 1, !(C4 = o3[16 + (B4 = (4 & B4) + C4 | 0) >> 2]))
                                        break;
                                    }
                                    o3[B4 + 16 >> 2] = r4;
                                  } else
                                    o3[9007] = C4 | B4, o3[g6 >> 2] = r4;
                                  o3[r4 + 24 >> 2] = g6, o3[r4 + 12 >> 2] = r4, o3[r4 + 8 >> 2] = r4;
                                  break C;
                                }
                                A8 = o3[g6 + 8 >> 2], o3[A8 + 12 >> 2] = r4, o3[g6 + 8 >> 2] = r4, o3[r4 + 24 >> 2] = 0, o3[r4 + 12 >> 2] = g6, o3[r4 + 8 >> 2] = A8;
                              }
                            }
                            A8 = D4 + 8 | 0;
                            break A;
                          }
                          g:
                            if (E4) {
                              g6 = o3[B4 + 28 >> 2];
                              C: {
                                if (o3[(A8 = 36328 + (g6 << 2) | 0) >> 2] == (0 | B4)) {
                                  if (o3[A8 >> 2] = C4, C4)
                                    break C;
                                  D4 = RA(-2, g6) & D4, o3[9007] = D4;
                                  break g;
                                }
                                if (o3[E4 + (o3[E4 + 16 >> 2] == (0 | B4) ? 16 : 20) >> 2] = C4, !C4)
                                  break g;
                              }
                              o3[C4 + 24 >> 2] = E4, (A8 = o3[B4 + 16 >> 2]) && (o3[C4 + 16 >> 2] = A8, o3[A8 + 24 >> 2] = C4), (A8 = o3[B4 + 20 >> 2]) && (o3[C4 + 20 >> 2] = A8, o3[A8 + 24 >> 2] = C4);
                            }
                          g:
                            if (i4 >>> 0 <= 15)
                              A8 = i4 + c4 | 0, o3[B4 + 4 >> 2] = 3 | A8, o3[4 + (A8 = A8 + B4 | 0) >> 2] = 1 | o3[A8 + 4 >> 2];
                            else if (o3[B4 + 4 >> 2] = 3 | c4, o3[4 + (Q4 = B4 + c4 | 0) >> 2] = 1 | i4, o3[Q4 + i4 >> 2] = i4, i4 >>> 0 <= 255)
                              g6 = 36064 + (-8 & i4) | 0, (C4 = o3[9006]) & (A8 = 1 << (i4 >>> 3)) ? A8 = o3[g6 + 8 >> 2] : (o3[9006] = A8 | C4, A8 = g6), o3[g6 + 8 >> 2] = Q4, o3[A8 + 12 >> 2] = Q4, o3[Q4 + 12 >> 2] = g6, o3[Q4 + 8 >> 2] = A8;
                            else {
                              A8 = 31, i4 >>> 0 <= 16777215 && (A8 = 62 + ((i4 >>> 38 - (A8 = e3(i4 >>> 8 | 0)) & 1) - (A8 << 1) | 0) | 0), o3[Q4 + 28 >> 2] = A8, o3[Q4 + 16 >> 2] = 0, o3[Q4 + 20 >> 2] = 0, g6 = 36328 + (A8 << 2) | 0;
                              C: {
                                if ((C4 = 1 << A8) & D4) {
                                  for (A8 = i4 << (31 != (0 | A8) ? 25 - (A8 >>> 1 | 0) | 0 : 0), c4 = o3[g6 >> 2]; ; ) {
                                    if ((-8 & o3[(g6 = c4) + 4 >> 2]) == (0 | i4))
                                      break C;
                                    if (C4 = A8 >>> 29 | 0, A8 <<= 1, !(c4 = o3[16 + (C4 = (4 & C4) + g6 | 0) >> 2]))
                                      break;
                                  }
                                  o3[C4 + 16 >> 2] = Q4;
                                } else
                                  o3[9007] = C4 | D4, o3[g6 >> 2] = Q4;
                                o3[Q4 + 24 >> 2] = g6, o3[Q4 + 12 >> 2] = Q4, o3[Q4 + 8 >> 2] = Q4;
                                break g;
                              }
                              A8 = o3[g6 + 8 >> 2], o3[A8 + 12 >> 2] = Q4, o3[g6 + 8 >> 2] = Q4, o3[Q4 + 24 >> 2] = 0, o3[Q4 + 12 >> 2] = g6, o3[Q4 + 8 >> 2] = A8;
                            }
                          A8 = B4 + 8 | 0;
                          break A;
                        }
                        I:
                          if (r4) {
                            g6 = o3[C4 + 28 >> 2];
                            g: {
                              if (o3[(A8 = 36328 + (g6 << 2) | 0) >> 2] == (0 | C4)) {
                                if (o3[A8 >> 2] = B4, B4)
                                  break g;
                                y4 = 36028, h4 = RA(-2, g6) & D4, o3[y4 >> 2] = h4;
                                break I;
                              }
                              if (o3[r4 + (o3[r4 + 16 >> 2] == (0 | C4) ? 16 : 20) >> 2] = B4, !B4)
                                break I;
                            }
                            o3[B4 + 24 >> 2] = r4, (A8 = o3[C4 + 16 >> 2]) && (o3[B4 + 16 >> 2] = A8, o3[A8 + 24 >> 2] = B4), (A8 = o3[C4 + 20 >> 2]) && (o3[B4 + 20 >> 2] = A8, o3[A8 + 24 >> 2] = B4);
                          }
                        i4 >>> 0 <= 15 ? (A8 = i4 + c4 | 0, o3[C4 + 4 >> 2] = 3 | A8, o3[4 + (A8 = A8 + C4 | 0) >> 2] = 1 | o3[A8 + 4 >> 2]) : (o3[C4 + 4 >> 2] = 3 | c4, o3[4 + (B4 = C4 + c4 | 0) >> 2] = 1 | i4, o3[B4 + i4 >> 2] = i4, t4 && (g6 = 36064 + (-8 & t4) | 0, Q4 = o3[9011], (A8 = 1 << (t4 >>> 3)) & E4 ? A8 = o3[g6 + 8 >> 2] : (o3[9006] = A8 | E4, A8 = g6), o3[g6 + 8 >> 2] = Q4, o3[A8 + 12 >> 2] = Q4, o3[Q4 + 12 >> 2] = g6, o3[Q4 + 8 >> 2] = A8), o3[9011] = B4, o3[9008] = i4), A8 = C4 + 8 | 0;
                      }
                      return w3 = I7 + 16 | 0, 0 | A8;
                    }, sc: function(A8) {
                      var I7 = 0, g6 = 0, C4 = 0, B4 = 0, Q4 = 0, i4 = 0, E4 = 0, a4 = 0, c4 = 0;
                      A:
                        if (A8 |= 0) {
                          Q4 = (C4 = A8 - 8 | 0) + (A8 = -8 & (I7 = o3[A8 - 4 >> 2])) | 0;
                          I:
                            if (!(1 & I7)) {
                              if (!(3 & I7))
                                break A;
                              if ((C4 = C4 - (I7 = o3[C4 >> 2]) | 0) >>> 0 < f3[9010])
                                break A;
                              A8 = A8 + I7 | 0;
                              g: {
                                C: {
                                  if (o3[9011] != (0 | C4)) {
                                    if (I7 >>> 0 <= 255) {
                                      if (B4 = I7 >>> 3 | 0, (0 | (I7 = o3[C4 + 12 >> 2])) == (0 | (g6 = o3[C4 + 8 >> 2]))) {
                                        a4 = 36024, c4 = o3[9006] & RA(-2, B4), o3[a4 >> 2] = c4;
                                        break I;
                                      }
                                      o3[g6 + 12 >> 2] = I7, o3[I7 + 8 >> 2] = g6;
                                      break I;
                                    }
                                    if (E4 = o3[C4 + 24 >> 2], (0 | C4) != (0 | (I7 = o3[C4 + 12 >> 2]))) {
                                      g6 = o3[C4 + 8 >> 2], o3[g6 + 12 >> 2] = I7, o3[I7 + 8 >> 2] = g6;
                                      break g;
                                    }
                                    if (!(g6 = o3[(B4 = C4 + 20 | 0) >> 2])) {
                                      if (!(g6 = o3[C4 + 16 >> 2]))
                                        break C;
                                      B4 = C4 + 16 | 0;
                                    }
                                    for (; i4 = B4, (g6 = o3[(B4 = (I7 = g6) + 20 | 0) >> 2]) || (B4 = I7 + 16 | 0, g6 = o3[I7 + 16 >> 2]); )
                                      ;
                                    o3[i4 >> 2] = 0;
                                    break g;
                                  }
                                  if (3 != (3 & (I7 = o3[Q4 + 4 >> 2])))
                                    break I;
                                  return o3[9008] = A8, o3[Q4 + 4 >> 2] = -2 & I7, o3[C4 + 4 >> 2] = 1 | A8, void (o3[Q4 >> 2] = A8);
                                }
                                I7 = 0;
                              }
                              if (E4) {
                                g6 = o3[C4 + 28 >> 2];
                                g: {
                                  if (o3[(B4 = 36328 + (g6 << 2) | 0) >> 2] == (0 | C4)) {
                                    if (o3[B4 >> 2] = I7, I7)
                                      break g;
                                    a4 = 36028, c4 = o3[9007] & RA(-2, g6), o3[a4 >> 2] = c4;
                                    break I;
                                  }
                                  if (o3[E4 + (o3[E4 + 16 >> 2] == (0 | C4) ? 16 : 20) >> 2] = I7, !I7)
                                    break I;
                                }
                                o3[I7 + 24 >> 2] = E4, (g6 = o3[C4 + 16 >> 2]) && (o3[I7 + 16 >> 2] = g6, o3[g6 + 24 >> 2] = I7), (g6 = o3[C4 + 20 >> 2]) && (o3[I7 + 20 >> 2] = g6, o3[g6 + 24 >> 2] = I7);
                              }
                            }
                          if (!(C4 >>> 0 >= Q4 >>> 0) && 1 & (I7 = o3[Q4 + 4 >> 2])) {
                            I: {
                              g: {
                                C: {
                                  B: {
                                    if (!(2 & I7)) {
                                      if (o3[9012] == (0 | Q4)) {
                                        if (o3[9012] = C4, A8 = o3[9009] + A8 | 0, o3[9009] = A8, o3[C4 + 4 >> 2] = 1 | A8, o3[9011] != (0 | C4))
                                          break A;
                                        return o3[9008] = 0, void (o3[9011] = 0);
                                      }
                                      if (o3[9011] == (0 | Q4))
                                        return o3[9011] = C4, A8 = o3[9008] + A8 | 0, o3[9008] = A8, o3[C4 + 4 >> 2] = 1 | A8, void (o3[A8 + C4 >> 2] = A8);
                                      if (A8 = (-8 & I7) + A8 | 0, I7 >>> 0 <= 255) {
                                        if (B4 = I7 >>> 3 | 0, (0 | (I7 = o3[Q4 + 12 >> 2])) == (0 | (g6 = o3[Q4 + 8 >> 2]))) {
                                          a4 = 36024, c4 = o3[9006] & RA(-2, B4), o3[a4 >> 2] = c4;
                                          break g;
                                        }
                                        o3[g6 + 12 >> 2] = I7, o3[I7 + 8 >> 2] = g6;
                                        break g;
                                      }
                                      if (E4 = o3[Q4 + 24 >> 2], (0 | Q4) != (0 | (I7 = o3[Q4 + 12 >> 2]))) {
                                        g6 = o3[Q4 + 8 >> 2], o3[g6 + 12 >> 2] = I7, o3[I7 + 8 >> 2] = g6;
                                        break C;
                                      }
                                      if (!(g6 = o3[(B4 = Q4 + 20 | 0) >> 2])) {
                                        if (!(g6 = o3[Q4 + 16 >> 2]))
                                          break B;
                                        B4 = Q4 + 16 | 0;
                                      }
                                      for (; i4 = B4, (g6 = o3[(B4 = (I7 = g6) + 20 | 0) >> 2]) || (B4 = I7 + 16 | 0, g6 = o3[I7 + 16 >> 2]); )
                                        ;
                                      o3[i4 >> 2] = 0;
                                      break C;
                                    }
                                    o3[Q4 + 4 >> 2] = -2 & I7, o3[C4 + 4 >> 2] = 1 | A8, o3[A8 + C4 >> 2] = A8;
                                    break I;
                                  }
                                  I7 = 0;
                                }
                                if (E4) {
                                  g6 = o3[Q4 + 28 >> 2];
                                  C: {
                                    if (o3[(B4 = 36328 + (g6 << 2) | 0) >> 2] == (0 | Q4)) {
                                      if (o3[B4 >> 2] = I7, I7)
                                        break C;
                                      a4 = 36028, c4 = o3[9007] & RA(-2, g6), o3[a4 >> 2] = c4;
                                      break g;
                                    }
                                    if (o3[E4 + (o3[E4 + 16 >> 2] == (0 | Q4) ? 16 : 20) >> 2] = I7, !I7)
                                      break g;
                                  }
                                  o3[I7 + 24 >> 2] = E4, (g6 = o3[Q4 + 16 >> 2]) && (o3[I7 + 16 >> 2] = g6, o3[g6 + 24 >> 2] = I7), (g6 = o3[Q4 + 20 >> 2]) && (o3[I7 + 20 >> 2] = g6, o3[g6 + 24 >> 2] = I7);
                                }
                              }
                              if (o3[C4 + 4 >> 2] = 1 | A8, o3[A8 + C4 >> 2] = A8, o3[9011] == (0 | C4))
                                return void (o3[9008] = A8);
                            }
                            if (A8 >>> 0 <= 255)
                              return I7 = 36064 + (-8 & A8) | 0, (g6 = o3[9006]) & (A8 = 1 << (A8 >>> 3)) ? A8 = o3[I7 + 8 >> 2] : (o3[9006] = A8 | g6, A8 = I7), o3[I7 + 8 >> 2] = C4, o3[A8 + 12 >> 2] = C4, o3[C4 + 12 >> 2] = I7, void (o3[C4 + 8 >> 2] = A8);
                            g6 = 31, A8 >>> 0 <= 16777215 && (g6 = 62 + ((A8 >>> 38 - (I7 = e3(A8 >>> 8 | 0)) & 1) - (I7 << 1) | 0) | 0), o3[C4 + 28 >> 2] = g6, o3[C4 + 16 >> 2] = 0, o3[C4 + 20 >> 2] = 0, I7 = 36328 + (g6 << 2) | 0;
                            I: {
                              g: {
                                if ((B4 = o3[9007]) & (i4 = 1 << g6)) {
                                  for (g6 = A8 << (31 != (0 | g6) ? 25 - (g6 >>> 1 | 0) | 0 : 0), I7 = o3[I7 >> 2]; ; ) {
                                    if (B4 = I7, (-8 & o3[I7 + 4 >> 2]) == (0 | A8))
                                      break g;
                                    if (i4 = g6 >>> 29 | 0, g6 <<= 1, !(I7 = o3[16 + (i4 = I7 + (4 & i4) | 0) >> 2]))
                                      break;
                                  }
                                  o3[i4 + 16 >> 2] = C4, o3[C4 + 24 >> 2] = B4;
                                } else
                                  o3[9007] = B4 | i4, o3[I7 >> 2] = C4, o3[C4 + 24 >> 2] = I7;
                                o3[C4 + 12 >> 2] = C4, o3[C4 + 8 >> 2] = C4;
                                break I;
                              }
                              A8 = o3[B4 + 8 >> 2], o3[A8 + 12 >> 2] = C4, o3[B4 + 8 >> 2] = C4, o3[C4 + 24 >> 2] = 0, o3[C4 + 12 >> 2] = B4, o3[C4 + 8 >> 2] = A8;
                            }
                            A8 = o3[9014] - 1 | 0, o3[9014] = A8 || -1;
                          }
                        }
                    }, tc: wI };
                  }(A6);
                }(I5);
              }, instantiate: function(A5, I5) {
                return { then: function(g4) {
                  var C2 = new y2.Module(A5);
                  g4({ instance: new y2.Instance(C2, I5) });
                } };
              }, RuntimeError: Error };
              r2 = [], "object" != typeof y2 && d2("no native wasm support detected");
              var w2, h2, n2, s2, k2, F2, S2, H2 = false;
              function G2() {
                var A5 = t2.buffer;
                Q2.HEAP8 = w2 = new Int8Array(A5), Q2.HEAP16 = n2 = new Int16Array(A5), Q2.HEAPU8 = h2 = new Uint8Array(A5), Q2.HEAPU16 = new Uint16Array(A5), Q2.HEAP32 = s2 = new Int32Array(A5), Q2.HEAPU32 = k2 = new Uint32Array(A5), Q2.HEAPF32 = F2 = new Float32Array(A5), Q2.HEAPF64 = S2 = new Float64Array(A5);
              }
              var _2 = Q2.INITIAL_MEMORY || 16777216;
              _2 >= 65536 || d2("INITIAL_MEMORY should be larger than STACK_SIZE, was " + _2 + "! (STACK_SIZE=65536)"), t2 = Q2.wasmMemory ? Q2.wasmMemory : new y2.Memory({ initial: _2 / 65536, maximum: 32768 }), G2(), _2 = t2.buffer.byteLength;
              var M2 = [], p2 = [], N2 = [], J2 = 0, U2 = null, Y2 = null;
              function d2(A5) {
                throw Q2.onAbort && Q2.onAbort(A5), D2(A5 = "Aborted(" + A5 + ")"), H2 = true, A5 += ". Build with -sASSERTIONS for more info.", new y2.RuntimeError(A5);
              }
              var K2, b2, P2 = "data:application/octet-stream;base64,";
              function v2(A5) {
                return A5.startsWith(P2);
              }
              v2(K2 = "<<< WASM_BINARY_FILE >>>") || (b2 = K2, K2 = Q2.locateFile ? Q2.locateFile(b2, f2) : f2 + b2);
              var L2, R2 = { 35256: () => Q2.getRandomValue(), 35292: () => {
                if (void 0 === Q2.getRandomValue)
                  try {
                    var A5 = "object" == typeof window ? window : self, I5 = void 0 !== A5.crypto ? A5.crypto : A5.msCrypto, g4 = function() {
                      var A6 = new Uint32Array(1);
                      return I5.getRandomValues(A6), A6[0] >>> 0;
                    };
                    g4(), Q2.getRandomValue = g4;
                  } catch (A6) {
                    try {
                      var C2 = require_crypto2(), B3 = function() {
                        var A7 = C2.randomBytes(4);
                        return (A7[0] << 24 | A7[1] << 16 | A7[2] << 8 | A7[3]) >>> 0;
                      };
                      B3(), Q2.getRandomValue = B3;
                    } catch (A7) {
                      throw "No secure random number generator found";
                    }
                  }
              } }, u2 = (A5) => {
                for (; A5.length > 0; )
                  A5.shift()(Q2);
              }, x2 = "undefined" != typeof TextDecoder ? new TextDecoder("utf8") : void 0, m2 = (A5, I5) => A5 ? ((A6, I6, g4) => {
                for (var C2 = I6 + g4, B3 = I6; A6[B3] && !(B3 >= C2); )
                  ++B3;
                if (B3 - I6 > 16 && A6.buffer && x2)
                  return x2.decode(A6.subarray(I6, B3));
                for (var Q3 = ""; I6 < B3; ) {
                  var i3 = A6[I6++];
                  if (128 & i3) {
                    var E3 = 63 & A6[I6++];
                    if (192 != (224 & i3)) {
                      var o3 = 63 & A6[I6++];
                      if ((i3 = 224 == (240 & i3) ? (15 & i3) << 12 | E3 << 6 | o3 : (7 & i3) << 18 | E3 << 12 | o3 << 6 | 63 & A6[I6++]) < 65536)
                        Q3 += String.fromCharCode(i3);
                      else {
                        var a3 = i3 - 65536;
                        Q3 += String.fromCharCode(55296 | a3 >> 10, 56320 | 1023 & a3);
                      }
                    } else
                      Q3 += String.fromCharCode((31 & i3) << 6 | E3);
                  } else
                    Q3 += String.fromCharCode(i3);
                }
                return Q3;
              })(h2, A5, I5) : "", l2 = [], z2 = (A5) => {
                var I5 = (A5 - t2.buffer.byteLength + 65535) / 65536;
                try {
                  return t2.grow(I5), G2(), 1;
                } catch (A6) {
                }
              }, q2 = { c: (A5, I5, g4, C2) => {
                d2(`Assertion failed: ${m2(A5)}, at: ` + [I5 ? m2(I5) : "unknown filename", g4, C2 ? m2(C2) : "unknown function"]);
              }, d: () => {
                d2("");
              }, b: (A5, I5, g4) => ((A6, I6, g5) => {
                var C2 = ((A7, I7) => {
                  var g6;
                  for (l2.length = 0; g6 = h2[A7++]; )
                    I7 += 105 != g6 && I7 % 8 ? 4 : 0, l2.push(105 == g6 ? s2[I7 >> 2] : S2[I7 >> 3]), I7 += 105 == g6 ? 4 : 8;
                  return l2;
                })(I6, g5);
                return R2[A6].apply(null, C2);
              })(A5, I5, g4), e: (A5) => {
                var I5 = h2.length, g4 = 2147483648;
                if ((A5 >>>= 0) > g4)
                  return false;
                for (var C2, B3 = 1; B3 <= 4; B3 *= 2) {
                  var Q3 = I5 * (1 + 0.2 / B3);
                  Q3 = Math.min(Q3, A5 + 100663296);
                  var i3 = Math.min(g4, (C2 = Math.max(A5, Q3)) + (65536 - C2 % 65536) % 65536);
                  if (z2(i3))
                    return true;
                }
                return false;
              }, a: t2 }, X = function() {
                var A5, I5, g4 = { a: q2 };
                function C2(A6, I6) {
                  var g5, C3 = A6.exports;
                  return (X = C3).tc, g5 = X.f, p2.unshift(g5), function(A7) {
                    if (J2--, Q2.monitorRunDependencies && Q2.monitorRunDependencies(J2), 0 == J2 && (null !== U2 && (clearInterval(U2), U2 = null), Y2)) {
                      var I7 = Y2;
                      Y2 = null, I7();
                    }
                  }(), C3;
                }
                if (J2++, Q2.monitorRunDependencies && Q2.monitorRunDependencies(J2), Q2.instantiateWasm)
                  try {
                    return Q2.instantiateWasm(g4, C2);
                  } catch (A6) {
                    return D2(`Module.instantiateWasm callback failed with error: ${A6}`), false;
                  }
                return A5 = g4, I5 = function(A6) {
                  C2(A6.instance);
                }, function(A6) {
                  return Promise.resolve().then(() => function(A7) {
                    if (A7 == K2 && r2)
                      return new Uint8Array(r2);
                    var I6 = function(A8) {
                      if (v2(A8))
                        return function(A9) {
                          if (void 0 !== a2 && a2) {
                            var I7 = Buffer.from(A9, "base64");
                            return new Uint8Array(I7.buffer, I7.byteOffset, I7.length);
                          }
                          try {
                            for (var g5 = atob(A9), C3 = new Uint8Array(g5.length), B3 = 0; B3 < g5.length; ++B3)
                              C3[B3] = g5.charCodeAt(B3);
                            return C3;
                          } catch (A10) {
                            throw new Error("Converting base64 string to bytes failed.");
                          }
                        }(A8.slice(P2.length));
                    }(A7);
                    if (I6)
                      return I6;
                    if (B2)
                      return B2(A7);
                    throw "both async and sync fetching of the wasm failed";
                  }(A6));
                }(K2).then((I6) => y2.instantiate(I6, A5)).then((A6) => A6).then(I5, (A6) => {
                  D2(`failed to asynchronously prepare wasm: ${A6}`), d2(A6);
                }), {};
              }();
              function j() {
                function A5() {
                  L2 || (L2 = true, Q2.calledRun = true, H2 || (u2(p2), Q2.onRuntimeInitialized && Q2.onRuntimeInitialized(), function() {
                    if (Q2.postRun)
                      for ("function" == typeof Q2.postRun && (Q2.postRun = [Q2.postRun]); Q2.postRun.length; )
                        A6 = Q2.postRun.shift(), N2.unshift(A6);
                    var A6;
                    u2(N2);
                  }()));
                }
                J2 > 0 || (function() {
                  if (Q2.preRun)
                    for ("function" == typeof Q2.preRun && (Q2.preRun = [Q2.preRun]); Q2.preRun.length; )
                      A6 = Q2.preRun.shift(), M2.unshift(A6);
                  var A6;
                  u2(M2);
                }(), J2 > 0 || (Q2.setStatus ? (Q2.setStatus("Running..."), setTimeout(function() {
                  setTimeout(function() {
                    Q2.setStatus("");
                  }, 1), A5();
                }, 1)) : A5()));
              }
              if (Q2._crypto_aead_chacha20poly1305_encrypt_detached = (A5, I5, g4, C2, B3, i3, E3, o3, a3, f3, c3, e3) => (Q2._crypto_aead_chacha20poly1305_encrypt_detached = X.g)(A5, I5, g4, C2, B3, i3, E3, o3, a3, f3, c3, e3), Q2._crypto_aead_chacha20poly1305_encrypt = (A5, I5, g4, C2, B3, i3, E3, o3, a3, f3, c3) => (Q2._crypto_aead_chacha20poly1305_encrypt = X.h)(A5, I5, g4, C2, B3, i3, E3, o3, a3, f3, c3), Q2._crypto_aead_chacha20poly1305_ietf_encrypt_detached = (A5, I5, g4, C2, B3, i3, E3, o3, a3, f3, c3, e3) => (Q2._crypto_aead_chacha20poly1305_ietf_encrypt_detached = X.i)(A5, I5, g4, C2, B3, i3, E3, o3, a3, f3, c3, e3), Q2._crypto_aead_chacha20poly1305_ietf_encrypt = (A5, I5, g4, C2, B3, i3, E3, o3, a3, f3, c3) => (Q2._crypto_aead_chacha20poly1305_ietf_encrypt = X.j)(A5, I5, g4, C2, B3, i3, E3, o3, a3, f3, c3), Q2._crypto_aead_chacha20poly1305_decrypt_detached = (A5, I5, g4, C2, B3, i3, E3, o3, a3, f3, c3) => (Q2._crypto_aead_chacha20poly1305_decrypt_detached = X.k)(A5, I5, g4, C2, B3, i3, E3, o3, a3, f3, c3), Q2._crypto_aead_chacha20poly1305_decrypt = (A5, I5, g4, C2, B3, i3, E3, o3, a3, f3, c3) => (Q2._crypto_aead_chacha20poly1305_decrypt = X.l)(A5, I5, g4, C2, B3, i3, E3, o3, a3, f3, c3), Q2._crypto_aead_chacha20poly1305_ietf_decrypt_detached = (A5, I5, g4, C2, B3, i3, E3, o3, a3, f3, c3) => (Q2._crypto_aead_chacha20poly1305_ietf_decrypt_detached = X.m)(A5, I5, g4, C2, B3, i3, E3, o3, a3, f3, c3), Q2._crypto_aead_chacha20poly1305_ietf_decrypt = (A5, I5, g4, C2, B3, i3, E3, o3, a3, f3, c3) => (Q2._crypto_aead_chacha20poly1305_ietf_decrypt = X.n)(A5, I5, g4, C2, B3, i3, E3, o3, a3, f3, c3), Q2._crypto_aead_chacha20poly1305_ietf_keybytes = () => (Q2._crypto_aead_chacha20poly1305_ietf_keybytes = X.o)(), Q2._crypto_aead_chacha20poly1305_ietf_npubbytes = () => (Q2._crypto_aead_chacha20poly1305_ietf_npubbytes = X.p)(), Q2._crypto_aead_chacha20poly1305_ietf_nsecbytes = () => (Q2._crypto_aead_chacha20poly1305_ietf_nsecbytes = X.q)(), Q2._crypto_aead_chacha20poly1305_ietf_abytes = () => (Q2._crypto_aead_chacha20poly1305_ietf_abytes = X.r)(), Q2._crypto_aead_chacha20poly1305_ietf_messagebytes_max = () => (Q2._crypto_aead_chacha20poly1305_ietf_messagebytes_max = X.s)(), Q2._crypto_aead_chacha20poly1305_ietf_keygen = (A5) => (Q2._crypto_aead_chacha20poly1305_ietf_keygen = X.t)(A5), Q2._crypto_aead_chacha20poly1305_keybytes = () => (Q2._crypto_aead_chacha20poly1305_keybytes = X.u)(), Q2._crypto_aead_chacha20poly1305_npubbytes = () => (Q2._crypto_aead_chacha20poly1305_npubbytes = X.v)(), Q2._crypto_aead_chacha20poly1305_nsecbytes = () => (Q2._crypto_aead_chacha20poly1305_nsecbytes = X.w)(), Q2._crypto_aead_chacha20poly1305_abytes = () => (Q2._crypto_aead_chacha20poly1305_abytes = X.x)(), Q2._crypto_aead_chacha20poly1305_messagebytes_max = () => (Q2._crypto_aead_chacha20poly1305_messagebytes_max = X.y)(), Q2._crypto_aead_chacha20poly1305_keygen = (A5) => (Q2._crypto_aead_chacha20poly1305_keygen = X.z)(A5), Q2._crypto_aead_xchacha20poly1305_ietf_encrypt_detached = (A5, I5, g4, C2, B3, i3, E3, o3, a3, f3, c3, e3) => (Q2._crypto_aead_xchacha20poly1305_ietf_encrypt_detached = X.A)(A5, I5, g4, C2, B3, i3, E3, o3, a3, f3, c3, e3), Q2._crypto_aead_xchacha20poly1305_ietf_encrypt = (A5, I5, g4, C2, B3, i3, E3, o3, a3, f3, c3) => (Q2._crypto_aead_xchacha20poly1305_ietf_encrypt = X.B)(A5, I5, g4, C2, B3, i3, E3, o3, a3, f3, c3), Q2._crypto_aead_xchacha20poly1305_ietf_decrypt_detached = (A5, I5, g4, C2, B3, i3, E3, o3, a3, f3, c3) => (Q2._crypto_aead_xchacha20poly1305_ietf_decrypt_detached = X.C)(A5, I5, g4, C2, B3, i3, E3, o3, a3, f3, c3), Q2._crypto_aead_xchacha20poly1305_ietf_decrypt = (A5, I5, g4, C2, B3, i3, E3, o3, a3, f3, c3) => (Q2._crypto_aead_xchacha20poly1305_ietf_decrypt = X.D)(A5, I5, g4, C2, B3, i3, E3, o3, a3, f3, c3), Q2._crypto_aead_xchacha20poly1305_ietf_keybytes = () => (Q2._crypto_aead_xchacha20poly1305_ietf_keybytes = X.E)(), Q2._crypto_aead_xchacha20poly1305_ietf_npubbytes = () => (Q2._crypto_aead_xchacha20poly1305_ietf_npubbytes = X.F)(), Q2._crypto_aead_xchacha20poly1305_ietf_nsecbytes = () => (Q2._crypto_aead_xchacha20poly1305_ietf_nsecbytes = X.G)(), Q2._crypto_aead_xchacha20poly1305_ietf_abytes = () => (Q2._crypto_aead_xchacha20poly1305_ietf_abytes = X.H)(), Q2._crypto_aead_xchacha20poly1305_ietf_messagebytes_max = () => (Q2._crypto_aead_xchacha20poly1305_ietf_messagebytes_max = X.I)(), Q2._crypto_aead_xchacha20poly1305_ietf_keygen = (A5) => (Q2._crypto_aead_xchacha20poly1305_ietf_keygen = X.J)(A5), Q2._crypto_auth_bytes = () => (Q2._crypto_auth_bytes = X.K)(), Q2._crypto_auth_keybytes = () => (Q2._crypto_auth_keybytes = X.L)(), Q2._crypto_auth = (A5, I5, g4, C2, B3) => (Q2._crypto_auth = X.M)(A5, I5, g4, C2, B3), Q2._crypto_auth_verify = (A5, I5, g4, C2, B3) => (Q2._crypto_auth_verify = X.N)(A5, I5, g4, C2, B3), Q2._crypto_auth_keygen = (A5) => (Q2._crypto_auth_keygen = X.O)(A5), Q2._crypto_box_seedbytes = () => (Q2._crypto_box_seedbytes = X.P)(), Q2._crypto_box_publickeybytes = () => (Q2._crypto_box_publickeybytes = X.Q)(), Q2._crypto_box_secretkeybytes = () => (Q2._crypto_box_secretkeybytes = X.R)(), Q2._crypto_box_beforenmbytes = () => (Q2._crypto_box_beforenmbytes = X.S)(), Q2._crypto_box_noncebytes = () => (Q2._crypto_box_noncebytes = X.T)(), Q2._crypto_box_macbytes = () => (Q2._crypto_box_macbytes = X.U)(), Q2._crypto_box_messagebytes_max = () => (Q2._crypto_box_messagebytes_max = X.V)(), Q2._crypto_box_seed_keypair = (A5, I5, g4) => (Q2._crypto_box_seed_keypair = X.W)(A5, I5, g4), Q2._crypto_box_keypair = (A5, I5) => (Q2._crypto_box_keypair = X.X)(A5, I5), Q2._crypto_box_beforenm = (A5, I5, g4) => (Q2._crypto_box_beforenm = X.Y)(A5, I5, g4), Q2._crypto_box_detached_afternm = (A5, I5, g4, C2, B3, i3, E3) => (Q2._crypto_box_detached_afternm = X.Z)(A5, I5, g4, C2, B3, i3, E3), Q2._crypto_box_detached = (A5, I5, g4, C2, B3, i3, E3, o3) => (Q2._crypto_box_detached = X._)(A5, I5, g4, C2, B3, i3, E3, o3), Q2._crypto_box_easy_afternm = (A5, I5, g4, C2, B3, i3) => (Q2._crypto_box_easy_afternm = X.$)(A5, I5, g4, C2, B3, i3), Q2._crypto_box_easy = (A5, I5, g4, C2, B3, i3, E3) => (Q2._crypto_box_easy = X.aa)(A5, I5, g4, C2, B3, i3, E3), Q2._crypto_box_open_detached_afternm = (A5, I5, g4, C2, B3, i3, E3) => (Q2._crypto_box_open_detached_afternm = X.ba)(A5, I5, g4, C2, B3, i3, E3), Q2._crypto_box_open_detached = (A5, I5, g4, C2, B3, i3, E3, o3) => (Q2._crypto_box_open_detached = X.ca)(A5, I5, g4, C2, B3, i3, E3, o3), Q2._crypto_box_open_easy_afternm = (A5, I5, g4, C2, B3, i3) => (Q2._crypto_box_open_easy_afternm = X.da)(A5, I5, g4, C2, B3, i3), Q2._crypto_box_open_easy = (A5, I5, g4, C2, B3, i3, E3) => (Q2._crypto_box_open_easy = X.ea)(A5, I5, g4, C2, B3, i3, E3), Q2._crypto_box_seal = (A5, I5, g4, C2, B3) => (Q2._crypto_box_seal = X.fa)(A5, I5, g4, C2, B3), Q2._crypto_box_seal_open = (A5, I5, g4, C2, B3, i3) => (Q2._crypto_box_seal_open = X.ga)(A5, I5, g4, C2, B3, i3), Q2._crypto_box_sealbytes = () => (Q2._crypto_box_sealbytes = X.ha)(), Q2._crypto_generichash_bytes_min = () => (Q2._crypto_generichash_bytes_min = X.ia)(), Q2._crypto_generichash_bytes_max = () => (Q2._crypto_generichash_bytes_max = X.ja)(), Q2._crypto_generichash_bytes = () => (Q2._crypto_generichash_bytes = X.ka)(), Q2._crypto_generichash_keybytes_min = () => (Q2._crypto_generichash_keybytes_min = X.la)(), Q2._crypto_generichash_keybytes_max = () => (Q2._crypto_generichash_keybytes_max = X.ma)(), Q2._crypto_generichash_keybytes = () => (Q2._crypto_generichash_keybytes = X.na)(), Q2._crypto_generichash_statebytes = () => (Q2._crypto_generichash_statebytes = X.oa)(), Q2._crypto_generichash = (A5, I5, g4, C2, B3, i3, E3) => (Q2._crypto_generichash = X.pa)(A5, I5, g4, C2, B3, i3, E3), Q2._crypto_generichash_init = (A5, I5, g4, C2) => (Q2._crypto_generichash_init = X.qa)(A5, I5, g4, C2), Q2._crypto_generichash_update = (A5, I5, g4, C2) => (Q2._crypto_generichash_update = X.ra)(A5, I5, g4, C2), Q2._crypto_generichash_final = (A5, I5, g4) => (Q2._crypto_generichash_final = X.sa)(A5, I5, g4), Q2._crypto_generichash_keygen = (A5) => (Q2._crypto_generichash_keygen = X.ta)(A5), Q2._crypto_hash_bytes = () => (Q2._crypto_hash_bytes = X.ua)(), Q2._crypto_hash = (A5, I5, g4, C2) => (Q2._crypto_hash = X.va)(A5, I5, g4, C2), Q2._crypto_kdf_bytes_min = () => (Q2._crypto_kdf_bytes_min = X.wa)(), Q2._crypto_kdf_bytes_max = () => (Q2._crypto_kdf_bytes_max = X.xa)(), Q2._crypto_kdf_contextbytes = () => (Q2._crypto_kdf_contextbytes = X.ya)(), Q2._crypto_kdf_keybytes = () => (Q2._crypto_kdf_keybytes = X.za)(), Q2._crypto_kdf_derive_from_key = (A5, I5, g4, C2, B3, i3) => (Q2._crypto_kdf_derive_from_key = X.Aa)(A5, I5, g4, C2, B3, i3), Q2._crypto_kdf_keygen = (A5) => (Q2._crypto_kdf_keygen = X.Ba)(A5), Q2._crypto_kdf_hkdf_sha256_extract_init = (A5, I5, g4) => (Q2._crypto_kdf_hkdf_sha256_extract_init = X.Ca)(A5, I5, g4), Q2._crypto_kdf_hkdf_sha256_extract_update = (A5, I5, g4) => (Q2._crypto_kdf_hkdf_sha256_extract_update = X.Da)(A5, I5, g4), Q2._crypto_kdf_hkdf_sha256_extract_final = (A5, I5) => (Q2._crypto_kdf_hkdf_sha256_extract_final = X.Ea)(A5, I5), Q2._crypto_kdf_hkdf_sha256_extract = (A5, I5, g4, C2, B3) => (Q2._crypto_kdf_hkdf_sha256_extract = X.Fa)(A5, I5, g4, C2, B3), Q2._crypto_kdf_hkdf_sha256_keygen = (A5) => (Q2._crypto_kdf_hkdf_sha256_keygen = X.Ga)(A5), Q2._crypto_kdf_hkdf_sha256_expand = (A5, I5, g4, C2, B3) => (Q2._crypto_kdf_hkdf_sha256_expand = X.Ha)(A5, I5, g4, C2, B3), Q2._crypto_kdf_hkdf_sha256_keybytes = () => (Q2._crypto_kdf_hkdf_sha256_keybytes = X.Ia)(), Q2._crypto_kdf_hkdf_sha256_bytes_min = () => (Q2._crypto_kdf_hkdf_sha256_bytes_min = X.Ja)(), Q2._crypto_kdf_hkdf_sha256_bytes_max = () => (Q2._crypto_kdf_hkdf_sha256_bytes_max = X.Ka)(), Q2._crypto_kdf_hkdf_sha256_statebytes = () => (Q2._crypto_kdf_hkdf_sha256_statebytes = X.La)(), Q2._crypto_kdf_hkdf_sha512_extract_init = (A5, I5, g4) => (Q2._crypto_kdf_hkdf_sha512_extract_init = X.Ma)(A5, I5, g4), Q2._crypto_kdf_hkdf_sha512_extract_update = (A5, I5, g4) => (Q2._crypto_kdf_hkdf_sha512_extract_update = X.Na)(A5, I5, g4), Q2._crypto_kdf_hkdf_sha512_extract_final = (A5, I5) => (Q2._crypto_kdf_hkdf_sha512_extract_final = X.Oa)(A5, I5), Q2._crypto_kdf_hkdf_sha512_extract = (A5, I5, g4, C2, B3) => (Q2._crypto_kdf_hkdf_sha512_extract = X.Pa)(A5, I5, g4, C2, B3), Q2._crypto_kdf_hkdf_sha512_keygen = (A5) => (Q2._crypto_kdf_hkdf_sha512_keygen = X.Qa)(A5), Q2._crypto_kdf_hkdf_sha512_expand = (A5, I5, g4, C2, B3) => (Q2._crypto_kdf_hkdf_sha512_expand = X.Ra)(A5, I5, g4, C2, B3), Q2._crypto_kdf_hkdf_sha512_keybytes = () => (Q2._crypto_kdf_hkdf_sha512_keybytes = X.Sa)(), Q2._crypto_kdf_hkdf_sha512_bytes_min = () => (Q2._crypto_kdf_hkdf_sha512_bytes_min = X.Ta)(), Q2._crypto_kdf_hkdf_sha512_bytes_max = () => (Q2._crypto_kdf_hkdf_sha512_bytes_max = X.Ua)(), Q2._crypto_kx_seed_keypair = (A5, I5, g4) => (Q2._crypto_kx_seed_keypair = X.Va)(A5, I5, g4), Q2._crypto_kx_keypair = (A5, I5) => (Q2._crypto_kx_keypair = X.Wa)(A5, I5), Q2._crypto_kx_client_session_keys = (A5, I5, g4, C2, B3) => (Q2._crypto_kx_client_session_keys = X.Xa)(A5, I5, g4, C2, B3), Q2._crypto_kx_server_session_keys = (A5, I5, g4, C2, B3) => (Q2._crypto_kx_server_session_keys = X.Ya)(A5, I5, g4, C2, B3), Q2._crypto_kx_publickeybytes = () => (Q2._crypto_kx_publickeybytes = X.Za)(), Q2._crypto_kx_secretkeybytes = () => (Q2._crypto_kx_secretkeybytes = X._a)(), Q2._crypto_kx_seedbytes = () => (Q2._crypto_kx_seedbytes = X.$a)(), Q2._crypto_kx_sessionkeybytes = () => (Q2._crypto_kx_sessionkeybytes = X.ab)(), Q2._crypto_scalarmult_base = (A5, I5) => (Q2._crypto_scalarmult_base = X.bb)(A5, I5), Q2._crypto_scalarmult = (A5, I5, g4) => (Q2._crypto_scalarmult = X.cb)(A5, I5, g4), Q2._crypto_scalarmult_bytes = () => (Q2._crypto_scalarmult_bytes = X.db)(), Q2._crypto_scalarmult_scalarbytes = () => (Q2._crypto_scalarmult_scalarbytes = X.eb)(), Q2._crypto_secretbox_keybytes = () => (Q2._crypto_secretbox_keybytes = X.fb)(), Q2._crypto_secretbox_noncebytes = () => (Q2._crypto_secretbox_noncebytes = X.gb)(), Q2._crypto_secretbox_macbytes = () => (Q2._crypto_secretbox_macbytes = X.hb)(), Q2._crypto_secretbox_messagebytes_max = () => (Q2._crypto_secretbox_messagebytes_max = X.ib)(), Q2._crypto_secretbox_keygen = (A5) => (Q2._crypto_secretbox_keygen = X.jb)(A5), Q2._crypto_secretbox_detached = (A5, I5, g4, C2, B3, i3, E3) => (Q2._crypto_secretbox_detached = X.kb)(A5, I5, g4, C2, B3, i3, E3), Q2._crypto_secretbox_easy = (A5, I5, g4, C2, B3, i3) => (Q2._crypto_secretbox_easy = X.lb)(A5, I5, g4, C2, B3, i3), Q2._crypto_secretbox_open_detached = (A5, I5, g4, C2, B3, i3, E3) => (Q2._crypto_secretbox_open_detached = X.mb)(A5, I5, g4, C2, B3, i3, E3), Q2._crypto_secretbox_open_easy = (A5, I5, g4, C2, B3, i3) => (Q2._crypto_secretbox_open_easy = X.nb)(A5, I5, g4, C2, B3, i3), Q2._crypto_secretstream_xchacha20poly1305_keygen = (A5) => (Q2._crypto_secretstream_xchacha20poly1305_keygen = X.ob)(A5), Q2._crypto_secretstream_xchacha20poly1305_init_push = (A5, I5, g4) => (Q2._crypto_secretstream_xchacha20poly1305_init_push = X.pb)(A5, I5, g4), Q2._crypto_secretstream_xchacha20poly1305_init_pull = (A5, I5, g4) => (Q2._crypto_secretstream_xchacha20poly1305_init_pull = X.qb)(A5, I5, g4), Q2._crypto_secretstream_xchacha20poly1305_rekey = (A5) => (Q2._crypto_secretstream_xchacha20poly1305_rekey = X.rb)(A5), Q2._crypto_secretstream_xchacha20poly1305_push = (A5, I5, g4, C2, B3, i3, E3, o3, a3, f3) => (Q2._crypto_secretstream_xchacha20poly1305_push = X.sb)(A5, I5, g4, C2, B3, i3, E3, o3, a3, f3), Q2._crypto_secretstream_xchacha20poly1305_pull = (A5, I5, g4, C2, B3, i3, E3, o3, a3, f3) => (Q2._crypto_secretstream_xchacha20poly1305_pull = X.tb)(A5, I5, g4, C2, B3, i3, E3, o3, a3, f3), Q2._crypto_secretstream_xchacha20poly1305_statebytes = () => (Q2._crypto_secretstream_xchacha20poly1305_statebytes = X.ub)(), Q2._crypto_secretstream_xchacha20poly1305_abytes = () => (Q2._crypto_secretstream_xchacha20poly1305_abytes = X.vb)(), Q2._crypto_secretstream_xchacha20poly1305_headerbytes = () => (Q2._crypto_secretstream_xchacha20poly1305_headerbytes = X.wb)(), Q2._crypto_secretstream_xchacha20poly1305_keybytes = () => (Q2._crypto_secretstream_xchacha20poly1305_keybytes = X.xb)(), Q2._crypto_secretstream_xchacha20poly1305_messagebytes_max = () => (Q2._crypto_secretstream_xchacha20poly1305_messagebytes_max = X.yb)(), Q2._crypto_secretstream_xchacha20poly1305_tag_message = () => (Q2._crypto_secretstream_xchacha20poly1305_tag_message = X.zb)(), Q2._crypto_secretstream_xchacha20poly1305_tag_push = () => (Q2._crypto_secretstream_xchacha20poly1305_tag_push = X.Ab)(), Q2._crypto_secretstream_xchacha20poly1305_tag_rekey = () => (Q2._crypto_secretstream_xchacha20poly1305_tag_rekey = X.Bb)(), Q2._crypto_secretstream_xchacha20poly1305_tag_final = () => (Q2._crypto_secretstream_xchacha20poly1305_tag_final = X.Cb)(), Q2._crypto_shorthash_bytes = () => (Q2._crypto_shorthash_bytes = X.Db)(), Q2._crypto_shorthash_keybytes = () => (Q2._crypto_shorthash_keybytes = X.Eb)(), Q2._crypto_shorthash = (A5, I5, g4, C2, B3) => (Q2._crypto_shorthash = X.Fb)(A5, I5, g4, C2, B3), Q2._crypto_shorthash_keygen = (A5) => (Q2._crypto_shorthash_keygen = X.Gb)(A5), Q2._crypto_sign_statebytes = () => (Q2._crypto_sign_statebytes = X.Hb)(), Q2._crypto_sign_bytes = () => (Q2._crypto_sign_bytes = X.Ib)(), Q2._crypto_sign_seedbytes = () => (Q2._crypto_sign_seedbytes = X.Jb)(), Q2._crypto_sign_publickeybytes = () => (Q2._crypto_sign_publickeybytes = X.Kb)(), Q2._crypto_sign_secretkeybytes = () => (Q2._crypto_sign_secretkeybytes = X.Lb)(), Q2._crypto_sign_messagebytes_max = () => (Q2._crypto_sign_messagebytes_max = X.Mb)(), Q2._crypto_sign_seed_keypair = (A5, I5, g4) => (Q2._crypto_sign_seed_keypair = X.Nb)(A5, I5, g4), Q2._crypto_sign_keypair = (A5, I5) => (Q2._crypto_sign_keypair = X.Ob)(A5, I5), Q2._crypto_sign = (A5, I5, g4, C2, B3, i3) => (Q2._crypto_sign = X.Pb)(A5, I5, g4, C2, B3, i3), Q2._crypto_sign_open = (A5, I5, g4, C2, B3, i3) => (Q2._crypto_sign_open = X.Qb)(A5, I5, g4, C2, B3, i3), Q2._crypto_sign_detached = (A5, I5, g4, C2, B3, i3) => (Q2._crypto_sign_detached = X.Rb)(A5, I5, g4, C2, B3, i3), Q2._crypto_sign_verify_detached = (A5, I5, g4, C2, B3) => (Q2._crypto_sign_verify_detached = X.Sb)(A5, I5, g4, C2, B3), Q2._crypto_sign_init = (A5) => (Q2._crypto_sign_init = X.Tb)(A5), Q2._crypto_sign_update = (A5, I5, g4, C2) => (Q2._crypto_sign_update = X.Ub)(A5, I5, g4, C2), Q2._crypto_sign_final_create = (A5, I5, g4, C2) => (Q2._crypto_sign_final_create = X.Vb)(A5, I5, g4, C2), Q2._crypto_sign_final_verify = (A5, I5, g4) => (Q2._crypto_sign_final_verify = X.Wb)(A5, I5, g4), Q2._crypto_sign_ed25519_pk_to_curve25519 = (A5, I5) => (Q2._crypto_sign_ed25519_pk_to_curve25519 = X.Xb)(A5, I5), Q2._crypto_sign_ed25519_sk_to_curve25519 = (A5, I5) => (Q2._crypto_sign_ed25519_sk_to_curve25519 = X.Yb)(A5, I5), Q2._randombytes_random = () => (Q2._randombytes_random = X.Zb)(), Q2._randombytes_stir = () => (Q2._randombytes_stir = X._b)(), Q2._randombytes_uniform = (A5) => (Q2._randombytes_uniform = X.$b)(A5), Q2._randombytes_buf = (A5, I5) => (Q2._randombytes_buf = X.ac)(A5, I5), Q2._randombytes_buf_deterministic = (A5, I5, g4) => (Q2._randombytes_buf_deterministic = X.bc)(A5, I5, g4), Q2._randombytes_seedbytes = () => (Q2._randombytes_seedbytes = X.cc)(), Q2._randombytes_close = () => (Q2._randombytes_close = X.dc)(), Q2._randombytes = (A5, I5, g4) => (Q2._randombytes = X.ec)(A5, I5, g4), Q2._sodium_bin2hex = (A5, I5, g4, C2) => (Q2._sodium_bin2hex = X.fc)(A5, I5, g4, C2), Q2._sodium_hex2bin = (A5, I5, g4, C2, B3, i3, E3) => (Q2._sodium_hex2bin = X.gc)(A5, I5, g4, C2, B3, i3, E3), Q2._sodium_base64_encoded_len = (A5, I5) => (Q2._sodium_base64_encoded_len = X.hc)(A5, I5), Q2._sodium_bin2base64 = (A5, I5, g4, C2, B3) => (Q2._sodium_bin2base64 = X.ic)(A5, I5, g4, C2, B3), Q2._sodium_base642bin = (A5, I5, g4, C2, B3, i3, E3, o3) => (Q2._sodium_base642bin = X.jc)(A5, I5, g4, C2, B3, i3, E3, o3), Q2._sodium_init = () => (Q2._sodium_init = X.kc)(), Q2._sodium_pad = (A5, I5, g4, C2, B3) => (Q2._sodium_pad = X.lc)(A5, I5, g4, C2, B3), Q2._sodium_unpad = (A5, I5, g4, C2) => (Q2._sodium_unpad = X.mc)(A5, I5, g4, C2), Q2._sodium_version_string = () => (Q2._sodium_version_string = X.nc)(), Q2._sodium_library_version_major = () => (Q2._sodium_library_version_major = X.oc)(), Q2._sodium_library_version_minor = () => (Q2._sodium_library_version_minor = X.pc)(), Q2._sodium_library_minimal = () => (Q2._sodium_library_minimal = X.qc)(), Q2._malloc = (A5) => (Q2._malloc = X.rc)(A5), Q2._free = (A5) => (Q2._free = X.sc)(A5), Q2.setValue = function(A5, I5, g4 = "i8") {
                switch (g4.endsWith("*") && (g4 = "*"), g4) {
                  case "i1":
                  case "i8":
                    w2[A5 >> 0] = I5;
                    break;
                  case "i16":
                    n2[A5 >> 1] = I5;
                    break;
                  case "i32":
                    s2[A5 >> 2] = I5;
                    break;
                  case "i64":
                    d2("to do setValue(i64) use WASM_BIGINT");
                  case "float":
                    F2[A5 >> 2] = I5;
                    break;
                  case "double":
                    S2[A5 >> 3] = I5;
                    break;
                  case "*":
                    k2[A5 >> 2] = I5;
                    break;
                  default:
                    d2(`invalid type for setValue: ${g4}`);
                }
              }, Q2.getValue = function(A5, I5 = "i8") {
                switch (I5.endsWith("*") && (I5 = "*"), I5) {
                  case "i1":
                  case "i8":
                    return w2[A5 >> 0];
                  case "i16":
                    return n2[A5 >> 1];
                  case "i32":
                    return s2[A5 >> 2];
                  case "i64":
                    d2("to do getValue(i64) use WASM_BIGINT");
                  case "float":
                    return F2[A5 >> 2];
                  case "double":
                    return S2[A5 >> 3];
                  case "*":
                    return k2[A5 >> 2];
                  default:
                    d2(`invalid type for getValue: ${I5}`);
                }
              }, Q2.UTF8ToString = m2, Y2 = function A5() {
                L2 || j(), L2 || (Y2 = A5);
              }, Q2.preInit)
                for ("function" == typeof Q2.preInit && (Q2.preInit = [Q2.preInit]); Q2.preInit.length > 0; )
                  Q2.preInit.pop()();
              j();
            });
          };
          var g2, B, Q = void 0 !== Q ? Q : {}, i = Object.assign({}, Q), E = "object" == typeof window, o = "function" == typeof importScripts, a = "object" == typeof process && "object" == typeof process.versions && "string" == typeof process.versions.node, f = "";
          if (a) {
            var c = require_fs(), e = require_path();
            f = o ? e.dirname(f) + "/" : __dirname + "/", g2 = (A4, I4) => (A4 = function(A5) {
              return A5.startsWith("file://");
            }(A4) ? new URL(A4) : e.normalize(A4), c.readFileSync(A4, I4 ? void 0 : "utf8")), B = (A4) => {
              var I4 = g2(A4, true);
              return I4.buffer || (I4 = new Uint8Array(I4)), I4;
            }, !Q.thisProgram && process.argv.length > 1 && process.argv[1].replace(/\\/g, "/"), process.argv.slice(2), "undefined" != typeof module && (module.exports = Q), Q.inspect = () => "[Emscripten Module object]";
          } else
            (E || o) && (o ? f = self.location.href : "undefined" != typeof document && document.currentScript && (f = document.currentScript.src), f = 0 !== f.indexOf("blob:") ? f.substr(0, f.replace(/[?#].*/, "").lastIndexOf("/") + 1) : "", g2 = (A4) => {
              var I4 = new XMLHttpRequest();
              return I4.open("GET", A4, false), I4.send(null), I4.responseText;
            }, o && (B = (A4) => {
              var I4 = new XMLHttpRequest();
              return I4.open("GET", A4, false), I4.responseType = "arraybuffer", I4.send(null), new Uint8Array(I4.response);
            }));
          Q.print;
          var r, D, t = Q.printErr || void 0;
          Object.assign(Q, i), i = null, Q.arguments && Q.arguments, Q.thisProgram && Q.thisProgram, Q.quit && Q.quit, Q.wasmBinary && (r = Q.wasmBinary), Q.noExitRuntime, "object" != typeof WebAssembly && U("no native wasm support detected");
          var y, w, h, n, s, k, F, S = false;
          function H() {
            var A4 = D.buffer;
            Q.HEAP8 = y = new Int8Array(A4), Q.HEAP16 = h = new Int16Array(A4), Q.HEAPU8 = w = new Uint8Array(A4), Q.HEAPU16 = new Uint16Array(A4), Q.HEAP32 = n = new Int32Array(A4), Q.HEAPU32 = s = new Uint32Array(A4), Q.HEAPF32 = k = new Float32Array(A4), Q.HEAPF64 = F = new Float64Array(A4);
          }
          var G = [], _ = [], M = [], p = 0, N = null, J = null;
          function U(A4) {
            throw Q.onAbort && Q.onAbort(A4), t(A4 = "Aborted(" + A4 + ")"), S = true, A4 += ". Build with -sASSERTIONS for more info.", new WebAssembly.RuntimeError(A4);
          }
          var Y, d, K = "data:application/octet-stream;base64,";
          function b(A4) {
            return A4.startsWith(K);
          }
          b(Y = "data:application/octet-stream;base64,") || (d = Y, Y = Q.locateFile ? Q.locateFile(d, f) : f + d);
          var P, v = { 35256: () => Q.getRandomValue(), 35292: () => {
            if (void 0 === Q.getRandomValue)
              try {
                var A4 = "object" == typeof window ? window : self, I4 = void 0 !== A4.crypto ? A4.crypto : A4.msCrypto, g3 = function() {
                  var A5 = new Uint32Array(1);
                  return I4.getRandomValues(A5), A5[0] >>> 0;
                };
                g3(), Q.getRandomValue = g3;
              } catch (A5) {
                try {
                  var C2 = require_crypto2(), B2 = function() {
                    var A6 = C2.randomBytes(4);
                    return (A6[0] << 24 | A6[1] << 16 | A6[2] << 8 | A6[3]) >>> 0;
                  };
                  B2(), Q.getRandomValue = B2;
                } catch (A6) {
                  throw "No secure random number generator found";
                }
              }
          } }, L = (A4) => {
            for (; A4.length > 0; )
              A4.shift()(Q);
          }, R = "undefined" != typeof TextDecoder ? new TextDecoder("utf8") : void 0, u = (A4, I4) => A4 ? ((A5, I5, g3) => {
            for (var C2 = I5 + g3, B2 = I5; A5[B2] && !(B2 >= C2); )
              ++B2;
            if (B2 - I5 > 16 && A5.buffer && R)
              return R.decode(A5.subarray(I5, B2));
            for (var Q2 = ""; I5 < B2; ) {
              var i2 = A5[I5++];
              if (128 & i2) {
                var E2 = 63 & A5[I5++];
                if (192 != (224 & i2)) {
                  var o2 = 63 & A5[I5++];
                  if ((i2 = 224 == (240 & i2) ? (15 & i2) << 12 | E2 << 6 | o2 : (7 & i2) << 18 | E2 << 12 | o2 << 6 | 63 & A5[I5++]) < 65536)
                    Q2 += String.fromCharCode(i2);
                  else {
                    var a2 = i2 - 65536;
                    Q2 += String.fromCharCode(55296 | a2 >> 10, 56320 | 1023 & a2);
                  }
                } else
                  Q2 += String.fromCharCode((31 & i2) << 6 | E2);
              } else
                Q2 += String.fromCharCode(i2);
            }
            return Q2;
          })(w, A4, I4) : "", x = [], m = (A4) => {
            var I4 = (A4 - D.buffer.byteLength + 65535) / 65536;
            try {
              return D.grow(I4), H(), 1;
            } catch (A5) {
            }
          }, l = { b: (A4, I4, g3, C2) => {
            U(`Assertion failed: ${u(A4)}, at: ` + [I4 ? u(I4) : "unknown filename", g3, C2 ? u(C2) : "unknown function"]);
          }, c: () => {
            U("");
          }, a: (A4, I4, g3) => ((A5, I5, g4) => {
            var C2 = ((A6, I6) => {
              var g5;
              for (x.length = 0; g5 = w[A6++]; )
                I6 += 105 != g5 && I6 % 8 ? 4 : 0, x.push(105 == g5 ? n[I6 >> 2] : F[I6 >> 3]), I6 += 105 == g5 ? 4 : 8;
              return x;
            })(I5, g4);
            return v[A5].apply(null, C2);
          })(A4, I4, g3), d: (A4, I4, g3) => w.copyWithin(A4, I4, I4 + g3), e: (A4) => {
            var I4 = w.length, g3 = 2147483648;
            if ((A4 >>>= 0) > g3)
              return false;
            for (var C2, B2 = 1; B2 <= 4; B2 *= 2) {
              var Q2 = I4 * (1 + 0.2 / B2);
              Q2 = Math.min(Q2, A4 + 100663296);
              var i2 = Math.min(g3, (C2 = Math.max(A4, Q2)) + (65536 - C2 % 65536) % 65536);
              if (m(i2))
                return true;
            }
            return false;
          } }, z = function() {
            var A4, I4, g3 = { a: l };
            function C2(A5, I5) {
              var g4 = A5.exports;
              return D = (z = g4).f, H(), z.tc, function(A6) {
                if (p--, Q.monitorRunDependencies && Q.monitorRunDependencies(p), 0 == p && (null !== N && (clearInterval(N), N = null), J)) {
                  var I6 = J;
                  J = null, I6();
                }
              }(), g4;
            }
            if (p++, Q.monitorRunDependencies && Q.monitorRunDependencies(p), Q.instantiateWasm)
              try {
                return Q.instantiateWasm(g3, C2);
              } catch (A5) {
                return t(`Module.instantiateWasm callback failed with error: ${A5}`), false;
              }
            return A4 = g3, I4 = function(A5) {
              C2(A5.instance);
            }, function(A5) {
              return Promise.resolve().then(() => function(A6) {
                if (A6 == Y && r)
                  return new Uint8Array(r);
                var I5 = function(A7) {
                  if (b(A7))
                    return function(A8) {
                      if (void 0 !== a && a) {
                        var I6 = Buffer.from(A8, "base64");
                        return new Uint8Array(I6.buffer, I6.byteOffset, I6.length);
                      }
                      try {
                        for (var g4 = atob(A8), C3 = new Uint8Array(g4.length), B2 = 0; B2 < g4.length; ++B2)
                          C3[B2] = g4.charCodeAt(B2);
                        return C3;
                      } catch (A9) {
                        throw new Error("Converting base64 string to bytes failed.");
                      }
                    }(A7.slice(K.length));
                }(A6);
                if (I5)
                  return I5;
                if (B)
                  return B(A6);
                throw "both async and sync fetching of the wasm failed";
              }(A5));
            }(Y).then((I5) => WebAssembly.instantiate(I5, A4)).then((A5) => A5).then(I4, (A5) => {
              t(`failed to asynchronously prepare wasm: ${A5}`), U(A5);
            }), {};
          }();
          function q() {
            function A4() {
              P || (P = true, Q.calledRun = true, S || (L(_), Q.onRuntimeInitialized && Q.onRuntimeInitialized(), function() {
                if (Q.postRun)
                  for ("function" == typeof Q.postRun && (Q.postRun = [Q.postRun]); Q.postRun.length; )
                    A5 = Q.postRun.shift(), M.unshift(A5);
                var A5;
                L(M);
              }()));
            }
            p > 0 || (function() {
              if (Q.preRun)
                for ("function" == typeof Q.preRun && (Q.preRun = [Q.preRun]); Q.preRun.length; )
                  A5 = Q.preRun.shift(), G.unshift(A5);
              var A5;
              L(G);
            }(), p > 0 || (Q.setStatus ? (Q.setStatus("Running..."), setTimeout(function() {
              setTimeout(function() {
                Q.setStatus("");
              }, 1), A4();
            }, 1)) : A4()));
          }
          if (Q._crypto_aead_chacha20poly1305_encrypt_detached = (A4, I4, g3, C2, B2, i2, E2, o2, a2, f2, c2, e2) => (Q._crypto_aead_chacha20poly1305_encrypt_detached = z.g)(A4, I4, g3, C2, B2, i2, E2, o2, a2, f2, c2, e2), Q._crypto_aead_chacha20poly1305_encrypt = (A4, I4, g3, C2, B2, i2, E2, o2, a2, f2, c2) => (Q._crypto_aead_chacha20poly1305_encrypt = z.h)(A4, I4, g3, C2, B2, i2, E2, o2, a2, f2, c2), Q._crypto_aead_chacha20poly1305_ietf_encrypt_detached = (A4, I4, g3, C2, B2, i2, E2, o2, a2, f2, c2, e2) => (Q._crypto_aead_chacha20poly1305_ietf_encrypt_detached = z.i)(A4, I4, g3, C2, B2, i2, E2, o2, a2, f2, c2, e2), Q._crypto_aead_chacha20poly1305_ietf_encrypt = (A4, I4, g3, C2, B2, i2, E2, o2, a2, f2, c2) => (Q._crypto_aead_chacha20poly1305_ietf_encrypt = z.j)(A4, I4, g3, C2, B2, i2, E2, o2, a2, f2, c2), Q._crypto_aead_chacha20poly1305_decrypt_detached = (A4, I4, g3, C2, B2, i2, E2, o2, a2, f2, c2) => (Q._crypto_aead_chacha20poly1305_decrypt_detached = z.k)(A4, I4, g3, C2, B2, i2, E2, o2, a2, f2, c2), Q._crypto_aead_chacha20poly1305_decrypt = (A4, I4, g3, C2, B2, i2, E2, o2, a2, f2, c2) => (Q._crypto_aead_chacha20poly1305_decrypt = z.l)(A4, I4, g3, C2, B2, i2, E2, o2, a2, f2, c2), Q._crypto_aead_chacha20poly1305_ietf_decrypt_detached = (A4, I4, g3, C2, B2, i2, E2, o2, a2, f2, c2) => (Q._crypto_aead_chacha20poly1305_ietf_decrypt_detached = z.m)(A4, I4, g3, C2, B2, i2, E2, o2, a2, f2, c2), Q._crypto_aead_chacha20poly1305_ietf_decrypt = (A4, I4, g3, C2, B2, i2, E2, o2, a2, f2, c2) => (Q._crypto_aead_chacha20poly1305_ietf_decrypt = z.n)(A4, I4, g3, C2, B2, i2, E2, o2, a2, f2, c2), Q._crypto_aead_chacha20poly1305_ietf_keybytes = () => (Q._crypto_aead_chacha20poly1305_ietf_keybytes = z.o)(), Q._crypto_aead_chacha20poly1305_ietf_npubbytes = () => (Q._crypto_aead_chacha20poly1305_ietf_npubbytes = z.p)(), Q._crypto_aead_chacha20poly1305_ietf_nsecbytes = () => (Q._crypto_aead_chacha20poly1305_ietf_nsecbytes = z.q)(), Q._crypto_aead_chacha20poly1305_ietf_abytes = () => (Q._crypto_aead_chacha20poly1305_ietf_abytes = z.r)(), Q._crypto_aead_chacha20poly1305_ietf_messagebytes_max = () => (Q._crypto_aead_chacha20poly1305_ietf_messagebytes_max = z.s)(), Q._crypto_aead_chacha20poly1305_ietf_keygen = (A4) => (Q._crypto_aead_chacha20poly1305_ietf_keygen = z.t)(A4), Q._crypto_aead_chacha20poly1305_keybytes = () => (Q._crypto_aead_chacha20poly1305_keybytes = z.u)(), Q._crypto_aead_chacha20poly1305_npubbytes = () => (Q._crypto_aead_chacha20poly1305_npubbytes = z.v)(), Q._crypto_aead_chacha20poly1305_nsecbytes = () => (Q._crypto_aead_chacha20poly1305_nsecbytes = z.w)(), Q._crypto_aead_chacha20poly1305_abytes = () => (Q._crypto_aead_chacha20poly1305_abytes = z.x)(), Q._crypto_aead_chacha20poly1305_messagebytes_max = () => (Q._crypto_aead_chacha20poly1305_messagebytes_max = z.y)(), Q._crypto_aead_chacha20poly1305_keygen = (A4) => (Q._crypto_aead_chacha20poly1305_keygen = z.z)(A4), Q._crypto_aead_xchacha20poly1305_ietf_encrypt_detached = (A4, I4, g3, C2, B2, i2, E2, o2, a2, f2, c2, e2) => (Q._crypto_aead_xchacha20poly1305_ietf_encrypt_detached = z.A)(A4, I4, g3, C2, B2, i2, E2, o2, a2, f2, c2, e2), Q._crypto_aead_xchacha20poly1305_ietf_encrypt = (A4, I4, g3, C2, B2, i2, E2, o2, a2, f2, c2) => (Q._crypto_aead_xchacha20poly1305_ietf_encrypt = z.B)(A4, I4, g3, C2, B2, i2, E2, o2, a2, f2, c2), Q._crypto_aead_xchacha20poly1305_ietf_decrypt_detached = (A4, I4, g3, C2, B2, i2, E2, o2, a2, f2, c2) => (Q._crypto_aead_xchacha20poly1305_ietf_decrypt_detached = z.C)(A4, I4, g3, C2, B2, i2, E2, o2, a2, f2, c2), Q._crypto_aead_xchacha20poly1305_ietf_decrypt = (A4, I4, g3, C2, B2, i2, E2, o2, a2, f2, c2) => (Q._crypto_aead_xchacha20poly1305_ietf_decrypt = z.D)(A4, I4, g3, C2, B2, i2, E2, o2, a2, f2, c2), Q._crypto_aead_xchacha20poly1305_ietf_keybytes = () => (Q._crypto_aead_xchacha20poly1305_ietf_keybytes = z.E)(), Q._crypto_aead_xchacha20poly1305_ietf_npubbytes = () => (Q._crypto_aead_xchacha20poly1305_ietf_npubbytes = z.F)(), Q._crypto_aead_xchacha20poly1305_ietf_nsecbytes = () => (Q._crypto_aead_xchacha20poly1305_ietf_nsecbytes = z.G)(), Q._crypto_aead_xchacha20poly1305_ietf_abytes = () => (Q._crypto_aead_xchacha20poly1305_ietf_abytes = z.H)(), Q._crypto_aead_xchacha20poly1305_ietf_messagebytes_max = () => (Q._crypto_aead_xchacha20poly1305_ietf_messagebytes_max = z.I)(), Q._crypto_aead_xchacha20poly1305_ietf_keygen = (A4) => (Q._crypto_aead_xchacha20poly1305_ietf_keygen = z.J)(A4), Q._crypto_auth_bytes = () => (Q._crypto_auth_bytes = z.K)(), Q._crypto_auth_keybytes = () => (Q._crypto_auth_keybytes = z.L)(), Q._crypto_auth = (A4, I4, g3, C2, B2) => (Q._crypto_auth = z.M)(A4, I4, g3, C2, B2), Q._crypto_auth_verify = (A4, I4, g3, C2, B2) => (Q._crypto_auth_verify = z.N)(A4, I4, g3, C2, B2), Q._crypto_auth_keygen = (A4) => (Q._crypto_auth_keygen = z.O)(A4), Q._crypto_box_seedbytes = () => (Q._crypto_box_seedbytes = z.P)(), Q._crypto_box_publickeybytes = () => (Q._crypto_box_publickeybytes = z.Q)(), Q._crypto_box_secretkeybytes = () => (Q._crypto_box_secretkeybytes = z.R)(), Q._crypto_box_beforenmbytes = () => (Q._crypto_box_beforenmbytes = z.S)(), Q._crypto_box_noncebytes = () => (Q._crypto_box_noncebytes = z.T)(), Q._crypto_box_macbytes = () => (Q._crypto_box_macbytes = z.U)(), Q._crypto_box_messagebytes_max = () => (Q._crypto_box_messagebytes_max = z.V)(), Q._crypto_box_seed_keypair = (A4, I4, g3) => (Q._crypto_box_seed_keypair = z.W)(A4, I4, g3), Q._crypto_box_keypair = (A4, I4) => (Q._crypto_box_keypair = z.X)(A4, I4), Q._crypto_box_beforenm = (A4, I4, g3) => (Q._crypto_box_beforenm = z.Y)(A4, I4, g3), Q._crypto_box_detached_afternm = (A4, I4, g3, C2, B2, i2, E2) => (Q._crypto_box_detached_afternm = z.Z)(A4, I4, g3, C2, B2, i2, E2), Q._crypto_box_detached = (A4, I4, g3, C2, B2, i2, E2, o2) => (Q._crypto_box_detached = z._)(A4, I4, g3, C2, B2, i2, E2, o2), Q._crypto_box_easy_afternm = (A4, I4, g3, C2, B2, i2) => (Q._crypto_box_easy_afternm = z.$)(A4, I4, g3, C2, B2, i2), Q._crypto_box_easy = (A4, I4, g3, C2, B2, i2, E2) => (Q._crypto_box_easy = z.aa)(A4, I4, g3, C2, B2, i2, E2), Q._crypto_box_open_detached_afternm = (A4, I4, g3, C2, B2, i2, E2) => (Q._crypto_box_open_detached_afternm = z.ba)(A4, I4, g3, C2, B2, i2, E2), Q._crypto_box_open_detached = (A4, I4, g3, C2, B2, i2, E2, o2) => (Q._crypto_box_open_detached = z.ca)(A4, I4, g3, C2, B2, i2, E2, o2), Q._crypto_box_open_easy_afternm = (A4, I4, g3, C2, B2, i2) => (Q._crypto_box_open_easy_afternm = z.da)(A4, I4, g3, C2, B2, i2), Q._crypto_box_open_easy = (A4, I4, g3, C2, B2, i2, E2) => (Q._crypto_box_open_easy = z.ea)(A4, I4, g3, C2, B2, i2, E2), Q._crypto_box_seal = (A4, I4, g3, C2, B2) => (Q._crypto_box_seal = z.fa)(A4, I4, g3, C2, B2), Q._crypto_box_seal_open = (A4, I4, g3, C2, B2, i2) => (Q._crypto_box_seal_open = z.ga)(A4, I4, g3, C2, B2, i2), Q._crypto_box_sealbytes = () => (Q._crypto_box_sealbytes = z.ha)(), Q._crypto_generichash_bytes_min = () => (Q._crypto_generichash_bytes_min = z.ia)(), Q._crypto_generichash_bytes_max = () => (Q._crypto_generichash_bytes_max = z.ja)(), Q._crypto_generichash_bytes = () => (Q._crypto_generichash_bytes = z.ka)(), Q._crypto_generichash_keybytes_min = () => (Q._crypto_generichash_keybytes_min = z.la)(), Q._crypto_generichash_keybytes_max = () => (Q._crypto_generichash_keybytes_max = z.ma)(), Q._crypto_generichash_keybytes = () => (Q._crypto_generichash_keybytes = z.na)(), Q._crypto_generichash_statebytes = () => (Q._crypto_generichash_statebytes = z.oa)(), Q._crypto_generichash = (A4, I4, g3, C2, B2, i2, E2) => (Q._crypto_generichash = z.pa)(A4, I4, g3, C2, B2, i2, E2), Q._crypto_generichash_init = (A4, I4, g3, C2) => (Q._crypto_generichash_init = z.qa)(A4, I4, g3, C2), Q._crypto_generichash_update = (A4, I4, g3, C2) => (Q._crypto_generichash_update = z.ra)(A4, I4, g3, C2), Q._crypto_generichash_final = (A4, I4, g3) => (Q._crypto_generichash_final = z.sa)(A4, I4, g3), Q._crypto_generichash_keygen = (A4) => (Q._crypto_generichash_keygen = z.ta)(A4), Q._crypto_hash_bytes = () => (Q._crypto_hash_bytes = z.ua)(), Q._crypto_hash = (A4, I4, g3, C2) => (Q._crypto_hash = z.va)(A4, I4, g3, C2), Q._crypto_kdf_bytes_min = () => (Q._crypto_kdf_bytes_min = z.wa)(), Q._crypto_kdf_bytes_max = () => (Q._crypto_kdf_bytes_max = z.xa)(), Q._crypto_kdf_contextbytes = () => (Q._crypto_kdf_contextbytes = z.ya)(), Q._crypto_kdf_keybytes = () => (Q._crypto_kdf_keybytes = z.za)(), Q._crypto_kdf_derive_from_key = (A4, I4, g3, C2, B2, i2) => (Q._crypto_kdf_derive_from_key = z.Aa)(A4, I4, g3, C2, B2, i2), Q._crypto_kdf_keygen = (A4) => (Q._crypto_kdf_keygen = z.Ba)(A4), Q._crypto_kdf_hkdf_sha256_extract_init = (A4, I4, g3) => (Q._crypto_kdf_hkdf_sha256_extract_init = z.Ca)(A4, I4, g3), Q._crypto_kdf_hkdf_sha256_extract_update = (A4, I4, g3) => (Q._crypto_kdf_hkdf_sha256_extract_update = z.Da)(A4, I4, g3), Q._crypto_kdf_hkdf_sha256_extract_final = (A4, I4) => (Q._crypto_kdf_hkdf_sha256_extract_final = z.Ea)(A4, I4), Q._crypto_kdf_hkdf_sha256_extract = (A4, I4, g3, C2, B2) => (Q._crypto_kdf_hkdf_sha256_extract = z.Fa)(A4, I4, g3, C2, B2), Q._crypto_kdf_hkdf_sha256_keygen = (A4) => (Q._crypto_kdf_hkdf_sha256_keygen = z.Ga)(A4), Q._crypto_kdf_hkdf_sha256_expand = (A4, I4, g3, C2, B2) => (Q._crypto_kdf_hkdf_sha256_expand = z.Ha)(A4, I4, g3, C2, B2), Q._crypto_kdf_hkdf_sha256_keybytes = () => (Q._crypto_kdf_hkdf_sha256_keybytes = z.Ia)(), Q._crypto_kdf_hkdf_sha256_bytes_min = () => (Q._crypto_kdf_hkdf_sha256_bytes_min = z.Ja)(), Q._crypto_kdf_hkdf_sha256_bytes_max = () => (Q._crypto_kdf_hkdf_sha256_bytes_max = z.Ka)(), Q._crypto_kdf_hkdf_sha256_statebytes = () => (Q._crypto_kdf_hkdf_sha256_statebytes = z.La)(), Q._crypto_kdf_hkdf_sha512_extract_init = (A4, I4, g3) => (Q._crypto_kdf_hkdf_sha512_extract_init = z.Ma)(A4, I4, g3), Q._crypto_kdf_hkdf_sha512_extract_update = (A4, I4, g3) => (Q._crypto_kdf_hkdf_sha512_extract_update = z.Na)(A4, I4, g3), Q._crypto_kdf_hkdf_sha512_extract_final = (A4, I4) => (Q._crypto_kdf_hkdf_sha512_extract_final = z.Oa)(A4, I4), Q._crypto_kdf_hkdf_sha512_extract = (A4, I4, g3, C2, B2) => (Q._crypto_kdf_hkdf_sha512_extract = z.Pa)(A4, I4, g3, C2, B2), Q._crypto_kdf_hkdf_sha512_keygen = (A4) => (Q._crypto_kdf_hkdf_sha512_keygen = z.Qa)(A4), Q._crypto_kdf_hkdf_sha512_expand = (A4, I4, g3, C2, B2) => (Q._crypto_kdf_hkdf_sha512_expand = z.Ra)(A4, I4, g3, C2, B2), Q._crypto_kdf_hkdf_sha512_keybytes = () => (Q._crypto_kdf_hkdf_sha512_keybytes = z.Sa)(), Q._crypto_kdf_hkdf_sha512_bytes_min = () => (Q._crypto_kdf_hkdf_sha512_bytes_min = z.Ta)(), Q._crypto_kdf_hkdf_sha512_bytes_max = () => (Q._crypto_kdf_hkdf_sha512_bytes_max = z.Ua)(), Q._crypto_kx_seed_keypair = (A4, I4, g3) => (Q._crypto_kx_seed_keypair = z.Va)(A4, I4, g3), Q._crypto_kx_keypair = (A4, I4) => (Q._crypto_kx_keypair = z.Wa)(A4, I4), Q._crypto_kx_client_session_keys = (A4, I4, g3, C2, B2) => (Q._crypto_kx_client_session_keys = z.Xa)(A4, I4, g3, C2, B2), Q._crypto_kx_server_session_keys = (A4, I4, g3, C2, B2) => (Q._crypto_kx_server_session_keys = z.Ya)(A4, I4, g3, C2, B2), Q._crypto_kx_publickeybytes = () => (Q._crypto_kx_publickeybytes = z.Za)(), Q._crypto_kx_secretkeybytes = () => (Q._crypto_kx_secretkeybytes = z._a)(), Q._crypto_kx_seedbytes = () => (Q._crypto_kx_seedbytes = z.$a)(), Q._crypto_kx_sessionkeybytes = () => (Q._crypto_kx_sessionkeybytes = z.ab)(), Q._crypto_scalarmult_base = (A4, I4) => (Q._crypto_scalarmult_base = z.bb)(A4, I4), Q._crypto_scalarmult = (A4, I4, g3) => (Q._crypto_scalarmult = z.cb)(A4, I4, g3), Q._crypto_scalarmult_bytes = () => (Q._crypto_scalarmult_bytes = z.db)(), Q._crypto_scalarmult_scalarbytes = () => (Q._crypto_scalarmult_scalarbytes = z.eb)(), Q._crypto_secretbox_keybytes = () => (Q._crypto_secretbox_keybytes = z.fb)(), Q._crypto_secretbox_noncebytes = () => (Q._crypto_secretbox_noncebytes = z.gb)(), Q._crypto_secretbox_macbytes = () => (Q._crypto_secretbox_macbytes = z.hb)(), Q._crypto_secretbox_messagebytes_max = () => (Q._crypto_secretbox_messagebytes_max = z.ib)(), Q._crypto_secretbox_keygen = (A4) => (Q._crypto_secretbox_keygen = z.jb)(A4), Q._crypto_secretbox_detached = (A4, I4, g3, C2, B2, i2, E2) => (Q._crypto_secretbox_detached = z.kb)(A4, I4, g3, C2, B2, i2, E2), Q._crypto_secretbox_easy = (A4, I4, g3, C2, B2, i2) => (Q._crypto_secretbox_easy = z.lb)(A4, I4, g3, C2, B2, i2), Q._crypto_secretbox_open_detached = (A4, I4, g3, C2, B2, i2, E2) => (Q._crypto_secretbox_open_detached = z.mb)(A4, I4, g3, C2, B2, i2, E2), Q._crypto_secretbox_open_easy = (A4, I4, g3, C2, B2, i2) => (Q._crypto_secretbox_open_easy = z.nb)(A4, I4, g3, C2, B2, i2), Q._crypto_secretstream_xchacha20poly1305_keygen = (A4) => (Q._crypto_secretstream_xchacha20poly1305_keygen = z.ob)(A4), Q._crypto_secretstream_xchacha20poly1305_init_push = (A4, I4, g3) => (Q._crypto_secretstream_xchacha20poly1305_init_push = z.pb)(A4, I4, g3), Q._crypto_secretstream_xchacha20poly1305_init_pull = (A4, I4, g3) => (Q._crypto_secretstream_xchacha20poly1305_init_pull = z.qb)(A4, I4, g3), Q._crypto_secretstream_xchacha20poly1305_rekey = (A4) => (Q._crypto_secretstream_xchacha20poly1305_rekey = z.rb)(A4), Q._crypto_secretstream_xchacha20poly1305_push = (A4, I4, g3, C2, B2, i2, E2, o2, a2, f2) => (Q._crypto_secretstream_xchacha20poly1305_push = z.sb)(A4, I4, g3, C2, B2, i2, E2, o2, a2, f2), Q._crypto_secretstream_xchacha20poly1305_pull = (A4, I4, g3, C2, B2, i2, E2, o2, a2, f2) => (Q._crypto_secretstream_xchacha20poly1305_pull = z.tb)(A4, I4, g3, C2, B2, i2, E2, o2, a2, f2), Q._crypto_secretstream_xchacha20poly1305_statebytes = () => (Q._crypto_secretstream_xchacha20poly1305_statebytes = z.ub)(), Q._crypto_secretstream_xchacha20poly1305_abytes = () => (Q._crypto_secretstream_xchacha20poly1305_abytes = z.vb)(), Q._crypto_secretstream_xchacha20poly1305_headerbytes = () => (Q._crypto_secretstream_xchacha20poly1305_headerbytes = z.wb)(), Q._crypto_secretstream_xchacha20poly1305_keybytes = () => (Q._crypto_secretstream_xchacha20poly1305_keybytes = z.xb)(), Q._crypto_secretstream_xchacha20poly1305_messagebytes_max = () => (Q._crypto_secretstream_xchacha20poly1305_messagebytes_max = z.yb)(), Q._crypto_secretstream_xchacha20poly1305_tag_message = () => (Q._crypto_secretstream_xchacha20poly1305_tag_message = z.zb)(), Q._crypto_secretstream_xchacha20poly1305_tag_push = () => (Q._crypto_secretstream_xchacha20poly1305_tag_push = z.Ab)(), Q._crypto_secretstream_xchacha20poly1305_tag_rekey = () => (Q._crypto_secretstream_xchacha20poly1305_tag_rekey = z.Bb)(), Q._crypto_secretstream_xchacha20poly1305_tag_final = () => (Q._crypto_secretstream_xchacha20poly1305_tag_final = z.Cb)(), Q._crypto_shorthash_bytes = () => (Q._crypto_shorthash_bytes = z.Db)(), Q._crypto_shorthash_keybytes = () => (Q._crypto_shorthash_keybytes = z.Eb)(), Q._crypto_shorthash = (A4, I4, g3, C2, B2) => (Q._crypto_shorthash = z.Fb)(A4, I4, g3, C2, B2), Q._crypto_shorthash_keygen = (A4) => (Q._crypto_shorthash_keygen = z.Gb)(A4), Q._crypto_sign_statebytes = () => (Q._crypto_sign_statebytes = z.Hb)(), Q._crypto_sign_bytes = () => (Q._crypto_sign_bytes = z.Ib)(), Q._crypto_sign_seedbytes = () => (Q._crypto_sign_seedbytes = z.Jb)(), Q._crypto_sign_publickeybytes = () => (Q._crypto_sign_publickeybytes = z.Kb)(), Q._crypto_sign_secretkeybytes = () => (Q._crypto_sign_secretkeybytes = z.Lb)(), Q._crypto_sign_messagebytes_max = () => (Q._crypto_sign_messagebytes_max = z.Mb)(), Q._crypto_sign_seed_keypair = (A4, I4, g3) => (Q._crypto_sign_seed_keypair = z.Nb)(A4, I4, g3), Q._crypto_sign_keypair = (A4, I4) => (Q._crypto_sign_keypair = z.Ob)(A4, I4), Q._crypto_sign = (A4, I4, g3, C2, B2, i2) => (Q._crypto_sign = z.Pb)(A4, I4, g3, C2, B2, i2), Q._crypto_sign_open = (A4, I4, g3, C2, B2, i2) => (Q._crypto_sign_open = z.Qb)(A4, I4, g3, C2, B2, i2), Q._crypto_sign_detached = (A4, I4, g3, C2, B2, i2) => (Q._crypto_sign_detached = z.Rb)(A4, I4, g3, C2, B2, i2), Q._crypto_sign_verify_detached = (A4, I4, g3, C2, B2) => (Q._crypto_sign_verify_detached = z.Sb)(A4, I4, g3, C2, B2), Q._crypto_sign_init = (A4) => (Q._crypto_sign_init = z.Tb)(A4), Q._crypto_sign_update = (A4, I4, g3, C2) => (Q._crypto_sign_update = z.Ub)(A4, I4, g3, C2), Q._crypto_sign_final_create = (A4, I4, g3, C2) => (Q._crypto_sign_final_create = z.Vb)(A4, I4, g3, C2), Q._crypto_sign_final_verify = (A4, I4, g3) => (Q._crypto_sign_final_verify = z.Wb)(A4, I4, g3), Q._crypto_sign_ed25519_pk_to_curve25519 = (A4, I4) => (Q._crypto_sign_ed25519_pk_to_curve25519 = z.Xb)(A4, I4), Q._crypto_sign_ed25519_sk_to_curve25519 = (A4, I4) => (Q._crypto_sign_ed25519_sk_to_curve25519 = z.Yb)(A4, I4), Q._randombytes_random = () => (Q._randombytes_random = z.Zb)(), Q._randombytes_stir = () => (Q._randombytes_stir = z._b)(), Q._randombytes_uniform = (A4) => (Q._randombytes_uniform = z.$b)(A4), Q._randombytes_buf = (A4, I4) => (Q._randombytes_buf = z.ac)(A4, I4), Q._randombytes_buf_deterministic = (A4, I4, g3) => (Q._randombytes_buf_deterministic = z.bc)(A4, I4, g3), Q._randombytes_seedbytes = () => (Q._randombytes_seedbytes = z.cc)(), Q._randombytes_close = () => (Q._randombytes_close = z.dc)(), Q._randombytes = (A4, I4, g3) => (Q._randombytes = z.ec)(A4, I4, g3), Q._sodium_bin2hex = (A4, I4, g3, C2) => (Q._sodium_bin2hex = z.fc)(A4, I4, g3, C2), Q._sodium_hex2bin = (A4, I4, g3, C2, B2, i2, E2) => (Q._sodium_hex2bin = z.gc)(A4, I4, g3, C2, B2, i2, E2), Q._sodium_base64_encoded_len = (A4, I4) => (Q._sodium_base64_encoded_len = z.hc)(A4, I4), Q._sodium_bin2base64 = (A4, I4, g3, C2, B2) => (Q._sodium_bin2base64 = z.ic)(A4, I4, g3, C2, B2), Q._sodium_base642bin = (A4, I4, g3, C2, B2, i2, E2, o2) => (Q._sodium_base642bin = z.jc)(A4, I4, g3, C2, B2, i2, E2, o2), Q._sodium_init = () => (Q._sodium_init = z.kc)(), Q._sodium_pad = (A4, I4, g3, C2, B2) => (Q._sodium_pad = z.lc)(A4, I4, g3, C2, B2), Q._sodium_unpad = (A4, I4, g3, C2) => (Q._sodium_unpad = z.mc)(A4, I4, g3, C2), Q._sodium_version_string = () => (Q._sodium_version_string = z.nc)(), Q._sodium_library_version_major = () => (Q._sodium_library_version_major = z.oc)(), Q._sodium_library_version_minor = () => (Q._sodium_library_version_minor = z.pc)(), Q._sodium_library_minimal = () => (Q._sodium_library_minimal = z.qc)(), Q._malloc = (A4) => (Q._malloc = z.rc)(A4), Q._free = (A4) => (Q._free = z.sc)(A4), Q.setValue = function(A4, I4, g3 = "i8") {
            switch (g3.endsWith("*") && (g3 = "*"), g3) {
              case "i1":
              case "i8":
                y[A4 >> 0] = I4;
                break;
              case "i16":
                h[A4 >> 1] = I4;
                break;
              case "i32":
                n[A4 >> 2] = I4;
                break;
              case "i64":
                U("to do setValue(i64) use WASM_BIGINT");
              case "float":
                k[A4 >> 2] = I4;
                break;
              case "double":
                F[A4 >> 3] = I4;
                break;
              case "*":
                s[A4 >> 2] = I4;
                break;
              default:
                U(`invalid type for setValue: ${g3}`);
            }
          }, Q.getValue = function(A4, I4 = "i8") {
            switch (I4.endsWith("*") && (I4 = "*"), I4) {
              case "i1":
              case "i8":
                return y[A4 >> 0];
              case "i16":
                return h[A4 >> 1];
              case "i32":
                return n[A4 >> 2];
              case "i64":
                U("to do getValue(i64) use WASM_BIGINT");
              case "float":
                return k[A4 >> 2];
              case "double":
                return F[A4 >> 3];
              case "*":
                return s[A4 >> 2];
              default:
                U(`invalid type for getValue: ${I4}`);
            }
          }, Q.UTF8ToString = u, J = function A4() {
            P || q(), P || (J = A4);
          }, Q.preInit)
            for ("function" == typeof Q.preInit && (Q.preInit = [Q.preInit]); Q.preInit.length > 0; )
              Q.preInit.pop()();
          q();
        }).catch(function() {
          return C.useBackupModule();
        }), I2;
      }
      "function" == typeof define && define.amd ? define(["exports"], I) : "object" == typeof exports && "string" != typeof exports.nodeName ? I(exports) : A.libsodium = I(A.libsodium_mod || (A.commonJsStrict = {}));
    }(exports);
  }
});

// node_modules/libsodium-wrappers/dist/modules/libsodium-wrappers.js
var require_libsodium_wrappers = __commonJS({
  "node_modules/libsodium-wrappers/dist/modules/libsodium-wrappers.js"(exports) {
    !function(e) {
      function r(e2, r2) {
        "use strict";
        var t2, a = "uint8array", _ = r2.ready.then(function() {
          function a2() {
            if (0 !== t2._sodium_init())
              throw new Error("libsodium was not correctly initialized.");
            for (var r3 = ["crypto_aead_aegis128l_decrypt", "crypto_aead_aegis128l_decrypt_detached", "crypto_aead_aegis128l_encrypt", "crypto_aead_aegis128l_encrypt_detached", "crypto_aead_aegis128l_keygen", "crypto_aead_aegis256_decrypt", "crypto_aead_aegis256_decrypt_detached", "crypto_aead_aegis256_encrypt", "crypto_aead_aegis256_encrypt_detached", "crypto_aead_aegis256_keygen", "crypto_aead_chacha20poly1305_decrypt", "crypto_aead_chacha20poly1305_decrypt_detached", "crypto_aead_chacha20poly1305_encrypt", "crypto_aead_chacha20poly1305_encrypt_detached", "crypto_aead_chacha20poly1305_ietf_decrypt", "crypto_aead_chacha20poly1305_ietf_decrypt_detached", "crypto_aead_chacha20poly1305_ietf_encrypt", "crypto_aead_chacha20poly1305_ietf_encrypt_detached", "crypto_aead_chacha20poly1305_ietf_keygen", "crypto_aead_chacha20poly1305_keygen", "crypto_aead_xchacha20poly1305_ietf_decrypt", "crypto_aead_xchacha20poly1305_ietf_decrypt_detached", "crypto_aead_xchacha20poly1305_ietf_encrypt", "crypto_aead_xchacha20poly1305_ietf_encrypt_detached", "crypto_aead_xchacha20poly1305_ietf_keygen", "crypto_auth", "crypto_auth_hmacsha256", "crypto_auth_hmacsha256_final", "crypto_auth_hmacsha256_init", "crypto_auth_hmacsha256_keygen", "crypto_auth_hmacsha256_update", "crypto_auth_hmacsha256_verify", "crypto_auth_hmacsha512", "crypto_auth_hmacsha512_final", "crypto_auth_hmacsha512_init", "crypto_auth_hmacsha512_keygen", "crypto_auth_hmacsha512_update", "crypto_auth_hmacsha512_verify", "crypto_auth_keygen", "crypto_auth_verify", "crypto_box_beforenm", "crypto_box_curve25519xchacha20poly1305_beforenm", "crypto_box_curve25519xchacha20poly1305_detached", "crypto_box_curve25519xchacha20poly1305_detached_afternm", "crypto_box_curve25519xchacha20poly1305_easy", "crypto_box_curve25519xchacha20poly1305_easy_afternm", "crypto_box_curve25519xchacha20poly1305_keypair", "crypto_box_curve25519xchacha20poly1305_open_detached", "crypto_box_curve25519xchacha20poly1305_open_detached_afternm", "crypto_box_curve25519xchacha20poly1305_open_easy", "crypto_box_curve25519xchacha20poly1305_open_easy_afternm", "crypto_box_curve25519xchacha20poly1305_seal", "crypto_box_curve25519xchacha20poly1305_seal_open", "crypto_box_curve25519xchacha20poly1305_seed_keypair", "crypto_box_detached", "crypto_box_easy", "crypto_box_easy_afternm", "crypto_box_keypair", "crypto_box_open_detached", "crypto_box_open_easy", "crypto_box_open_easy_afternm", "crypto_box_seal", "crypto_box_seal_open", "crypto_box_seed_keypair", "crypto_core_ed25519_add", "crypto_core_ed25519_from_hash", "crypto_core_ed25519_from_uniform", "crypto_core_ed25519_is_valid_point", "crypto_core_ed25519_random", "crypto_core_ed25519_scalar_add", "crypto_core_ed25519_scalar_complement", "crypto_core_ed25519_scalar_invert", "crypto_core_ed25519_scalar_mul", "crypto_core_ed25519_scalar_negate", "crypto_core_ed25519_scalar_random", "crypto_core_ed25519_scalar_reduce", "crypto_core_ed25519_scalar_sub", "crypto_core_ed25519_sub", "crypto_core_hchacha20", "crypto_core_hsalsa20", "crypto_core_ristretto255_add", "crypto_core_ristretto255_from_hash", "crypto_core_ristretto255_is_valid_point", "crypto_core_ristretto255_random", "crypto_core_ristretto255_scalar_add", "crypto_core_ristretto255_scalar_complement", "crypto_core_ristretto255_scalar_invert", "crypto_core_ristretto255_scalar_mul", "crypto_core_ristretto255_scalar_negate", "crypto_core_ristretto255_scalar_random", "crypto_core_ristretto255_scalar_reduce", "crypto_core_ristretto255_scalar_sub", "crypto_core_ristretto255_sub", "crypto_generichash", "crypto_generichash_blake2b_salt_personal", "crypto_generichash_final", "crypto_generichash_init", "crypto_generichash_keygen", "crypto_generichash_update", "crypto_hash", "crypto_hash_sha256", "crypto_hash_sha256_final", "crypto_hash_sha256_init", "crypto_hash_sha256_update", "crypto_hash_sha512", "crypto_hash_sha512_final", "crypto_hash_sha512_init", "crypto_hash_sha512_update", "crypto_kdf_derive_from_key", "crypto_kdf_keygen", "crypto_kx_client_session_keys", "crypto_kx_keypair", "crypto_kx_seed_keypair", "crypto_kx_server_session_keys", "crypto_onetimeauth", "crypto_onetimeauth_final", "crypto_onetimeauth_init", "crypto_onetimeauth_keygen", "crypto_onetimeauth_update", "crypto_onetimeauth_verify", "crypto_pwhash", "crypto_pwhash_scryptsalsa208sha256", "crypto_pwhash_scryptsalsa208sha256_ll", "crypto_pwhash_scryptsalsa208sha256_str", "crypto_pwhash_scryptsalsa208sha256_str_verify", "crypto_pwhash_str", "crypto_pwhash_str_needs_rehash", "crypto_pwhash_str_verify", "crypto_scalarmult", "crypto_scalarmult_base", "crypto_scalarmult_ed25519", "crypto_scalarmult_ed25519_base", "crypto_scalarmult_ed25519_base_noclamp", "crypto_scalarmult_ed25519_noclamp", "crypto_scalarmult_ristretto255", "crypto_scalarmult_ristretto255_base", "crypto_secretbox_detached", "crypto_secretbox_easy", "crypto_secretbox_keygen", "crypto_secretbox_open_detached", "crypto_secretbox_open_easy", "crypto_secretstream_xchacha20poly1305_init_pull", "crypto_secretstream_xchacha20poly1305_init_push", "crypto_secretstream_xchacha20poly1305_keygen", "crypto_secretstream_xchacha20poly1305_pull", "crypto_secretstream_xchacha20poly1305_push", "crypto_secretstream_xchacha20poly1305_rekey", "crypto_shorthash", "crypto_shorthash_keygen", "crypto_shorthash_siphashx24", "crypto_sign", "crypto_sign_detached", "crypto_sign_ed25519_pk_to_curve25519", "crypto_sign_ed25519_sk_to_curve25519", "crypto_sign_ed25519_sk_to_pk", "crypto_sign_ed25519_sk_to_seed", "crypto_sign_final_create", "crypto_sign_final_verify", "crypto_sign_init", "crypto_sign_keypair", "crypto_sign_open", "crypto_sign_seed_keypair", "crypto_sign_update", "crypto_sign_verify_detached", "crypto_stream_chacha20", "crypto_stream_chacha20_ietf_xor", "crypto_stream_chacha20_ietf_xor_ic", "crypto_stream_chacha20_keygen", "crypto_stream_chacha20_xor", "crypto_stream_chacha20_xor_ic", "crypto_stream_keygen", "crypto_stream_xchacha20_keygen", "crypto_stream_xchacha20_xor", "crypto_stream_xchacha20_xor_ic", "randombytes_buf", "randombytes_buf_deterministic", "randombytes_close", "randombytes_random", "randombytes_set_implementation", "randombytes_stir", "randombytes_uniform", "sodium_version_string"], a3 = [E, k, S, T, w, Y, B, A, K, M, I, N, L, U, O, C, R, P, G, X, D, F, V, H, q, j, z, W, J, Q, Z, $, ee, re, te, ae, _e, ne, se, ce, oe, he, pe, ye, ie, le, ue, de, ve, ge, be, fe, me, xe, Ee, ke, Se, Te, we, Ye, Be, Ae, Ke, Me, Ie, Ne, Le, Ue, Oe, Ce, Re, Pe, Ge, Xe, De, Fe, Ve, He, qe, je, ze, We, Je, Qe, Ze, $e, er, rr, tr, ar, _r, nr, sr, cr, or, hr, pr, yr, ir, lr, ur, dr, vr, gr, br, fr, mr, xr, Er, kr, Sr, Tr, wr, Yr, Br, Ar, Kr, Mr, Ir, Nr, Lr, Ur, Or, Cr, Rr, Pr, Gr, Xr, Dr, Fr, Vr, Hr, qr, jr, zr, Wr, Jr, Qr, Zr, $r, et, rt, tt, at, _t, nt, st, ct, ot, ht, pt, yt, it, lt, ut, dt, vt, gt, bt, ft, mt, xt, Et, kt, St, Tt, wt, Yt, Bt, At, Kt, Mt, It, Nt, Lt, Ut, Ot, Ct, Rt, Pt, Gt, Xt], _3 = 0; _3 < a3.length; _3++)
              "function" == typeof t2["_" + r3[_3]] && (e2[r3[_3]] = a3[_3]);
            var n3 = ["SODIUM_LIBRARY_VERSION_MAJOR", "SODIUM_LIBRARY_VERSION_MINOR", "crypto_aead_chacha20poly1305_ABYTES", "crypto_aead_chacha20poly1305_IETF_ABYTES", "crypto_aead_chacha20poly1305_IETF_KEYBYTES", "crypto_aead_chacha20poly1305_IETF_MESSAGEBYTES_MAX", "crypto_aead_chacha20poly1305_IETF_NPUBBYTES", "crypto_aead_chacha20poly1305_IETF_NSECBYTES", "crypto_aead_chacha20poly1305_KEYBYTES", "crypto_aead_chacha20poly1305_MESSAGEBYTES_MAX", "crypto_aead_chacha20poly1305_NPUBBYTES", "crypto_aead_chacha20poly1305_NSECBYTES", "crypto_aead_chacha20poly1305_ietf_ABYTES", "crypto_aead_chacha20poly1305_ietf_KEYBYTES", "crypto_aead_chacha20poly1305_ietf_MESSAGEBYTES_MAX", "crypto_aead_chacha20poly1305_ietf_NPUBBYTES", "crypto_aead_chacha20poly1305_ietf_NSECBYTES", "crypto_aead_xchacha20poly1305_IETF_ABYTES", "crypto_aead_xchacha20poly1305_IETF_KEYBYTES", "crypto_aead_xchacha20poly1305_IETF_MESSAGEBYTES_MAX", "crypto_aead_xchacha20poly1305_IETF_NPUBBYTES", "crypto_aead_xchacha20poly1305_IETF_NSECBYTES", "crypto_aead_xchacha20poly1305_ietf_ABYTES", "crypto_aead_xchacha20poly1305_ietf_KEYBYTES", "crypto_aead_xchacha20poly1305_ietf_MESSAGEBYTES_MAX", "crypto_aead_xchacha20poly1305_ietf_NPUBBYTES", "crypto_aead_xchacha20poly1305_ietf_NSECBYTES", "crypto_auth_BYTES", "crypto_auth_KEYBYTES", "crypto_auth_hmacsha256_BYTES", "crypto_auth_hmacsha256_KEYBYTES", "crypto_auth_hmacsha512256_BYTES", "crypto_auth_hmacsha512256_KEYBYTES", "crypto_auth_hmacsha512_BYTES", "crypto_auth_hmacsha512_KEYBYTES", "crypto_box_BEFORENMBYTES", "crypto_box_MACBYTES", "crypto_box_MESSAGEBYTES_MAX", "crypto_box_NONCEBYTES", "crypto_box_PUBLICKEYBYTES", "crypto_box_SEALBYTES", "crypto_box_SECRETKEYBYTES", "crypto_box_SEEDBYTES", "crypto_box_curve25519xchacha20poly1305_BEFORENMBYTES", "crypto_box_curve25519xchacha20poly1305_MACBYTES", "crypto_box_curve25519xchacha20poly1305_MESSAGEBYTES_MAX", "crypto_box_curve25519xchacha20poly1305_NONCEBYTES", "crypto_box_curve25519xchacha20poly1305_PUBLICKEYBYTES", "crypto_box_curve25519xchacha20poly1305_SEALBYTES", "crypto_box_curve25519xchacha20poly1305_SECRETKEYBYTES", "crypto_box_curve25519xchacha20poly1305_SEEDBYTES", "crypto_box_curve25519xsalsa20poly1305_BEFORENMBYTES", "crypto_box_curve25519xsalsa20poly1305_MACBYTES", "crypto_box_curve25519xsalsa20poly1305_MESSAGEBYTES_MAX", "crypto_box_curve25519xsalsa20poly1305_NONCEBYTES", "crypto_box_curve25519xsalsa20poly1305_PUBLICKEYBYTES", "crypto_box_curve25519xsalsa20poly1305_SECRETKEYBYTES", "crypto_box_curve25519xsalsa20poly1305_SEEDBYTES", "crypto_core_ed25519_BYTES", "crypto_core_ed25519_HASHBYTES", "crypto_core_ed25519_NONREDUCEDSCALARBYTES", "crypto_core_ed25519_SCALARBYTES", "crypto_core_ed25519_UNIFORMBYTES", "crypto_core_hchacha20_CONSTBYTES", "crypto_core_hchacha20_INPUTBYTES", "crypto_core_hchacha20_KEYBYTES", "crypto_core_hchacha20_OUTPUTBYTES", "crypto_core_hsalsa20_CONSTBYTES", "crypto_core_hsalsa20_INPUTBYTES", "crypto_core_hsalsa20_KEYBYTES", "crypto_core_hsalsa20_OUTPUTBYTES", "crypto_core_ristretto255_BYTES", "crypto_core_ristretto255_HASHBYTES", "crypto_core_ristretto255_NONREDUCEDSCALARBYTES", "crypto_core_ristretto255_SCALARBYTES", "crypto_core_salsa2012_CONSTBYTES", "crypto_core_salsa2012_INPUTBYTES", "crypto_core_salsa2012_KEYBYTES", "crypto_core_salsa2012_OUTPUTBYTES", "crypto_core_salsa20_CONSTBYTES", "crypto_core_salsa20_INPUTBYTES", "crypto_core_salsa20_KEYBYTES", "crypto_core_salsa20_OUTPUTBYTES", "crypto_generichash_BYTES", "crypto_generichash_BYTES_MAX", "crypto_generichash_BYTES_MIN", "crypto_generichash_KEYBYTES", "crypto_generichash_KEYBYTES_MAX", "crypto_generichash_KEYBYTES_MIN", "crypto_generichash_blake2b_BYTES", "crypto_generichash_blake2b_BYTES_MAX", "crypto_generichash_blake2b_BYTES_MIN", "crypto_generichash_blake2b_KEYBYTES", "crypto_generichash_blake2b_KEYBYTES_MAX", "crypto_generichash_blake2b_KEYBYTES_MIN", "crypto_generichash_blake2b_PERSONALBYTES", "crypto_generichash_blake2b_SALTBYTES", "crypto_hash_BYTES", "crypto_hash_sha256_BYTES", "crypto_hash_sha512_BYTES", "crypto_kdf_BYTES_MAX", "crypto_kdf_BYTES_MIN", "crypto_kdf_CONTEXTBYTES", "crypto_kdf_KEYBYTES", "crypto_kdf_blake2b_BYTES_MAX", "crypto_kdf_blake2b_BYTES_MIN", "crypto_kdf_blake2b_CONTEXTBYTES", "crypto_kdf_blake2b_KEYBYTES", "crypto_kx_PUBLICKEYBYTES", "crypto_kx_SECRETKEYBYTES", "crypto_kx_SEEDBYTES", "crypto_kx_SESSIONKEYBYTES", "crypto_onetimeauth_BYTES", "crypto_onetimeauth_KEYBYTES", "crypto_onetimeauth_poly1305_BYTES", "crypto_onetimeauth_poly1305_KEYBYTES", "crypto_pwhash_ALG_ARGON2I13", "crypto_pwhash_ALG_ARGON2ID13", "crypto_pwhash_ALG_DEFAULT", "crypto_pwhash_BYTES_MAX", "crypto_pwhash_BYTES_MIN", "crypto_pwhash_MEMLIMIT_INTERACTIVE", "crypto_pwhash_MEMLIMIT_MAX", "crypto_pwhash_MEMLIMIT_MIN", "crypto_pwhash_MEMLIMIT_MODERATE", "crypto_pwhash_MEMLIMIT_SENSITIVE", "crypto_pwhash_OPSLIMIT_INTERACTIVE", "crypto_pwhash_OPSLIMIT_MAX", "crypto_pwhash_OPSLIMIT_MIN", "crypto_pwhash_OPSLIMIT_MODERATE", "crypto_pwhash_OPSLIMIT_SENSITIVE", "crypto_pwhash_PASSWD_MAX", "crypto_pwhash_PASSWD_MIN", "crypto_pwhash_SALTBYTES", "crypto_pwhash_STRBYTES", "crypto_pwhash_argon2i_BYTES_MAX", "crypto_pwhash_argon2i_BYTES_MIN", "crypto_pwhash_argon2i_SALTBYTES", "crypto_pwhash_argon2i_STRBYTES", "crypto_pwhash_argon2id_BYTES_MAX", "crypto_pwhash_argon2id_BYTES_MIN", "crypto_pwhash_argon2id_SALTBYTES", "crypto_pwhash_argon2id_STRBYTES", "crypto_pwhash_scryptsalsa208sha256_BYTES_MAX", "crypto_pwhash_scryptsalsa208sha256_BYTES_MIN", "crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_INTERACTIVE", "crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_MAX", "crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_MIN", "crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_SENSITIVE", "crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_INTERACTIVE", "crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_MAX", "crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_MIN", "crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_SENSITIVE", "crypto_pwhash_scryptsalsa208sha256_SALTBYTES", "crypto_pwhash_scryptsalsa208sha256_STRBYTES", "crypto_scalarmult_BYTES", "crypto_scalarmult_SCALARBYTES", "crypto_scalarmult_curve25519_BYTES", "crypto_scalarmult_curve25519_SCALARBYTES", "crypto_scalarmult_ed25519_BYTES", "crypto_scalarmult_ed25519_SCALARBYTES", "crypto_scalarmult_ristretto255_BYTES", "crypto_scalarmult_ristretto255_SCALARBYTES", "crypto_secretbox_KEYBYTES", "crypto_secretbox_MACBYTES", "crypto_secretbox_MESSAGEBYTES_MAX", "crypto_secretbox_NONCEBYTES", "crypto_secretbox_xchacha20poly1305_KEYBYTES", "crypto_secretbox_xchacha20poly1305_MACBYTES", "crypto_secretbox_xchacha20poly1305_MESSAGEBYTES_MAX", "crypto_secretbox_xchacha20poly1305_NONCEBYTES", "crypto_secretbox_xsalsa20poly1305_KEYBYTES", "crypto_secretbox_xsalsa20poly1305_MACBYTES", "crypto_secretbox_xsalsa20poly1305_MESSAGEBYTES_MAX", "crypto_secretbox_xsalsa20poly1305_NONCEBYTES", "crypto_secretstream_xchacha20poly1305_ABYTES", "crypto_secretstream_xchacha20poly1305_HEADERBYTES", "crypto_secretstream_xchacha20poly1305_KEYBYTES", "crypto_secretstream_xchacha20poly1305_MESSAGEBYTES_MAX", "crypto_secretstream_xchacha20poly1305_TAG_FINAL", "crypto_secretstream_xchacha20poly1305_TAG_MESSAGE", "crypto_secretstream_xchacha20poly1305_TAG_PUSH", "crypto_secretstream_xchacha20poly1305_TAG_REKEY", "crypto_shorthash_BYTES", "crypto_shorthash_KEYBYTES", "crypto_shorthash_siphash24_BYTES", "crypto_shorthash_siphash24_KEYBYTES", "crypto_shorthash_siphashx24_BYTES", "crypto_shorthash_siphashx24_KEYBYTES", "crypto_sign_BYTES", "crypto_sign_MESSAGEBYTES_MAX", "crypto_sign_PUBLICKEYBYTES", "crypto_sign_SECRETKEYBYTES", "crypto_sign_SEEDBYTES", "crypto_sign_ed25519_BYTES", "crypto_sign_ed25519_MESSAGEBYTES_MAX", "crypto_sign_ed25519_PUBLICKEYBYTES", "crypto_sign_ed25519_SECRETKEYBYTES", "crypto_sign_ed25519_SEEDBYTES", "crypto_stream_KEYBYTES", "crypto_stream_MESSAGEBYTES_MAX", "crypto_stream_NONCEBYTES", "crypto_stream_chacha20_IETF_KEYBYTES", "crypto_stream_chacha20_IETF_MESSAGEBYTES_MAX", "crypto_stream_chacha20_IETF_NONCEBYTES", "crypto_stream_chacha20_KEYBYTES", "crypto_stream_chacha20_MESSAGEBYTES_MAX", "crypto_stream_chacha20_NONCEBYTES", "crypto_stream_chacha20_ietf_KEYBYTES", "crypto_stream_chacha20_ietf_MESSAGEBYTES_MAX", "crypto_stream_chacha20_ietf_NONCEBYTES", "crypto_stream_salsa2012_KEYBYTES", "crypto_stream_salsa2012_MESSAGEBYTES_MAX", "crypto_stream_salsa2012_NONCEBYTES", "crypto_stream_salsa208_KEYBYTES", "crypto_stream_salsa208_MESSAGEBYTES_MAX", "crypto_stream_salsa208_NONCEBYTES", "crypto_stream_salsa20_KEYBYTES", "crypto_stream_salsa20_MESSAGEBYTES_MAX", "crypto_stream_salsa20_NONCEBYTES", "crypto_stream_xchacha20_KEYBYTES", "crypto_stream_xchacha20_MESSAGEBYTES_MAX", "crypto_stream_xchacha20_NONCEBYTES", "crypto_stream_xsalsa20_KEYBYTES", "crypto_stream_xsalsa20_MESSAGEBYTES_MAX", "crypto_stream_xsalsa20_NONCEBYTES", "crypto_verify_16_BYTES", "crypto_verify_32_BYTES", "crypto_verify_64_BYTES"];
            for (_3 = 0; _3 < n3.length; _3++)
              "function" == typeof (c3 = t2["_" + n3[_3].toLowerCase()]) && (e2[n3[_3]] = c3());
            var s3 = ["SODIUM_VERSION_STRING", "crypto_pwhash_STRPREFIX", "crypto_pwhash_scryptsalsa208sha256_STRPREFIX"];
            for (_3 = 0; _3 < s3.length; _3++) {
              var c3;
              "function" == typeof (c3 = t2["_" + s3[_3].toLowerCase()]) && (e2[s3[_3]] = t2.UTF8ToString(c3()));
            }
          }
          t2 = r2;
          try {
            a2();
            var _2 = new Uint8Array([98, 97, 108, 108, 115]), n2 = e2.randombytes_buf(e2.crypto_secretbox_NONCEBYTES), s2 = e2.randombytes_buf(e2.crypto_secretbox_KEYBYTES), c2 = e2.crypto_secretbox_easy(_2, n2, s2), o2 = e2.crypto_secretbox_open_easy(c2, n2, s2);
            if (e2.memcmp(_2, o2))
              return;
          } catch (e3) {
            if (null == t2.useBackupModule)
              throw new Error("Both wasm and asm failed to load" + e3);
          }
          t2.useBackupModule(), a2();
        });
        function n(e3) {
          if ("function" == typeof TextEncoder)
            return new TextEncoder().encode(e3);
          e3 = unescape(encodeURIComponent(e3));
          for (var r3 = new Uint8Array(e3.length), t3 = 0, a2 = e3.length; t3 < a2; t3++)
            r3[t3] = e3.charCodeAt(t3);
          return r3;
        }
        function s(e3) {
          if ("function" == typeof TextDecoder)
            return new TextDecoder("utf-8", { fatal: true }).decode(e3);
          var r3 = 8192, t3 = Math.ceil(e3.length / r3);
          if (t3 <= 1)
            try {
              return decodeURIComponent(escape(String.fromCharCode.apply(null, e3)));
            } catch (e4) {
              throw new TypeError("The encoded data was not valid.");
            }
          for (var a2 = "", _2 = 0, n2 = 0; n2 < t3; n2++) {
            var c2 = Array.prototype.slice.call(e3, n2 * r3 + _2, (n2 + 1) * r3 + _2);
            if (0 != c2.length) {
              var o2, h2 = c2.length, p2 = 0;
              do {
                var y2 = c2[--h2];
                y2 >= 240 ? (p2 = 4, o2 = true) : y2 >= 224 ? (p2 = 3, o2 = true) : y2 >= 192 ? (p2 = 2, o2 = true) : y2 < 128 && (p2 = 1, o2 = true);
              } while (!o2);
              for (var i2 = p2 - (c2.length - h2), l2 = 0; l2 < i2; l2++)
                _2--, c2.pop();
              a2 += s(c2);
            }
          }
          return a2;
        }
        function c(e3) {
          e3 = x(null, e3, "input");
          for (var r3, t3, a2, _2 = "", n2 = 0; n2 < e3.length; n2++)
            a2 = 87 + (t3 = 15 & e3[n2]) + (t3 - 10 >> 8 & -39) << 8 | 87 + (r3 = e3[n2] >>> 4) + (r3 - 10 >> 8 & -39), _2 += String.fromCharCode(255 & a2) + String.fromCharCode(a2 >>> 8);
          return _2;
        }
        var o = { ORIGINAL: 1, ORIGINAL_NO_PADDING: 3, URLSAFE: 5, URLSAFE_NO_PADDING: 7 };
        function h(e3) {
          if (null == e3)
            return o.URLSAFE_NO_PADDING;
          if (e3 !== o.ORIGINAL && e3 !== o.ORIGINAL_NO_PADDING && e3 !== o.URLSAFE && e3 != o.URLSAFE_NO_PADDING)
            throw new Error("unsupported base64 variant");
          return e3;
        }
        function p(e3, r3) {
          r3 = h(r3), e3 = x(_2, e3, "input");
          var a2, _2 = [], n2 = 0 | Math.floor(e3.length / 3), c2 = e3.length - 3 * n2, o2 = 4 * n2 + (0 !== c2 ? 0 == (2 & r3) ? 4 : 2 + (c2 >>> 1) : 0), p2 = new u(o2 + 1), y2 = d(e3);
          return _2.push(y2), _2.push(p2.address), 0 === t2._sodium_bin2base64(p2.address, p2.length, y2, e3.length, r3) && b(_2, "conversion failed"), p2.length = o2, a2 = s(p2.to_Uint8Array()), g(_2), a2;
        }
        function y(e3, r3) {
          var t3 = r3 || a;
          if (!i(t3))
            throw new Error(t3 + " output format is not available");
          if (e3 instanceof u) {
            if ("uint8array" === t3)
              return e3.to_Uint8Array();
            if ("text" === t3)
              return s(e3.to_Uint8Array());
            if ("hex" === t3)
              return c(e3.to_Uint8Array());
            if ("base64" === t3)
              return p(e3.to_Uint8Array(), o.URLSAFE_NO_PADDING);
            throw new Error('What is output format "' + t3 + '"?');
          }
          if ("object" == typeof e3) {
            for (var _2 = Object.keys(e3), n2 = {}, h2 = 0; h2 < _2.length; h2++)
              n2[_2[h2]] = y(e3[_2[h2]], t3);
            return n2;
          }
          if ("string" == typeof e3)
            return e3;
          throw new TypeError("Cannot format output");
        }
        function i(e3) {
          for (var r3 = ["uint8array", "text", "hex", "base64"], t3 = 0; t3 < r3.length; t3++)
            if (r3[t3] === e3)
              return true;
          return false;
        }
        function l(e3) {
          if (e3) {
            if ("string" != typeof e3)
              throw new TypeError("When defined, the output format must be a string");
            if (!i(e3))
              throw new Error(e3 + " is not a supported output format");
          }
        }
        function u(e3) {
          this.length = e3, this.address = v(e3);
        }
        function d(e3) {
          var r3 = v(e3.length);
          return t2.HEAPU8.set(e3, r3), r3;
        }
        function v(e3) {
          var r3 = t2._malloc(e3);
          if (0 === r3)
            throw { message: "_malloc() failed", length: e3 };
          return r3;
        }
        function g(e3) {
          if (e3)
            for (var r3 = 0; r3 < e3.length; r3++)
              a2 = e3[r3], t2._free(a2);
          var a2;
        }
        function b(e3, r3) {
          throw g(e3), new Error(r3);
        }
        function f(e3, r3) {
          throw g(e3), new TypeError(r3);
        }
        function m(e3, r3, t3) {
          null == r3 && f(e3, t3 + " cannot be null or undefined");
        }
        function x(e3, r3, t3) {
          return m(e3, r3, t3), r3 instanceof Uint8Array ? r3 : "string" == typeof r3 ? n(r3) : void f(e3, "unsupported input type for " + t3);
        }
        function E(e3, r3, a2, _2, n2, s2) {
          var c2 = [];
          l(s2);
          var o2 = null;
          null != e3 && (o2 = d(e3 = x(c2, e3, "secret_nonce")), e3.length, c2.push(o2)), r3 = x(c2, r3, "ciphertext");
          var h2, p2 = t2._crypto_aead_aegis128l_abytes(), i2 = r3.length;
          i2 < p2 && f(c2, "ciphertext is too short"), h2 = d(r3), c2.push(h2);
          var v2 = null, m2 = 0;
          null != a2 && (v2 = d(a2 = x(c2, a2, "additional_data")), m2 = a2.length, c2.push(v2)), _2 = x(c2, _2, "public_nonce");
          var E2, k2 = 0 | t2._crypto_aead_aegis128l_npubbytes();
          _2.length !== k2 && f(c2, "invalid public_nonce length"), E2 = d(_2), c2.push(E2), n2 = x(c2, n2, "key");
          var S2, T2 = 0 | t2._crypto_aead_aegis128l_keybytes();
          n2.length !== T2 && f(c2, "invalid key length"), S2 = d(n2), c2.push(S2);
          var w2 = new u(i2 - t2._crypto_aead_aegis128l_abytes() | 0), Y2 = w2.address;
          if (c2.push(Y2), 0 === t2._crypto_aead_aegis128l_decrypt(Y2, null, o2, h2, i2, 0, v2, m2, 0, E2, S2)) {
            var B2 = y(w2, s2);
            return g(c2), B2;
          }
          b(c2, "ciphertext cannot be decrypted using that key");
        }
        function k(e3, r3, a2, _2, n2, s2, c2) {
          var o2 = [];
          l(c2);
          var h2 = null;
          null != e3 && (h2 = d(e3 = x(o2, e3, "secret_nonce")), e3.length, o2.push(h2));
          var p2 = d(r3 = x(o2, r3, "ciphertext")), i2 = r3.length;
          o2.push(p2), a2 = x(o2, a2, "mac");
          var v2, m2 = 0 | t2._crypto_box_macbytes();
          a2.length !== m2 && f(o2, "invalid mac length"), v2 = d(a2), o2.push(v2);
          var E2 = null, k2 = 0;
          null != _2 && (E2 = d(_2 = x(o2, _2, "additional_data")), k2 = _2.length, o2.push(E2)), n2 = x(o2, n2, "public_nonce");
          var S2, T2 = 0 | t2._crypto_aead_aegis128l_npubbytes();
          n2.length !== T2 && f(o2, "invalid public_nonce length"), S2 = d(n2), o2.push(S2), s2 = x(o2, s2, "key");
          var w2, Y2 = 0 | t2._crypto_aead_aegis128l_keybytes();
          s2.length !== Y2 && f(o2, "invalid key length"), w2 = d(s2), o2.push(w2);
          var B2 = new u(0 | i2), A2 = B2.address;
          if (o2.push(A2), 0 === t2._crypto_aead_aegis128l_decrypt_detached(A2, h2, p2, i2, 0, v2, E2, k2, 0, S2, w2)) {
            var K2 = y(B2, c2);
            return g(o2), K2;
          }
          b(o2, "ciphertext cannot be decrypted using that key");
        }
        function S(e3, r3, a2, _2, n2, s2) {
          var c2 = [];
          l(s2);
          var o2 = d(e3 = x(c2, e3, "message")), h2 = e3.length;
          c2.push(o2);
          var p2 = null, i2 = 0;
          null != r3 && (p2 = d(r3 = x(c2, r3, "additional_data")), i2 = r3.length, c2.push(p2));
          var v2 = null;
          null != a2 && (v2 = d(a2 = x(c2, a2, "secret_nonce")), a2.length, c2.push(v2)), _2 = x(c2, _2, "public_nonce");
          var m2, E2 = 0 | t2._crypto_aead_aegis128l_npubbytes();
          _2.length !== E2 && f(c2, "invalid public_nonce length"), m2 = d(_2), c2.push(m2), n2 = x(c2, n2, "key");
          var k2, S2 = 0 | t2._crypto_aead_aegis128l_keybytes();
          n2.length !== S2 && f(c2, "invalid key length"), k2 = d(n2), c2.push(k2);
          var T2 = new u(h2 + t2._crypto_aead_aegis128l_abytes() | 0), w2 = T2.address;
          if (c2.push(w2), 0 === t2._crypto_aead_aegis128l_encrypt(w2, null, o2, h2, 0, p2, i2, 0, v2, m2, k2)) {
            var Y2 = y(T2, s2);
            return g(c2), Y2;
          }
          b(c2, "invalid usage");
        }
        function T(e3, r3, a2, _2, n2, s2) {
          var c2 = [];
          l(s2);
          var o2 = d(e3 = x(c2, e3, "message")), h2 = e3.length;
          c2.push(o2);
          var p2 = null, i2 = 0;
          null != r3 && (p2 = d(r3 = x(c2, r3, "additional_data")), i2 = r3.length, c2.push(p2));
          var v2 = null;
          null != a2 && (v2 = d(a2 = x(c2, a2, "secret_nonce")), a2.length, c2.push(v2)), _2 = x(c2, _2, "public_nonce");
          var m2, E2 = 0 | t2._crypto_aead_aegis128l_npubbytes();
          _2.length !== E2 && f(c2, "invalid public_nonce length"), m2 = d(_2), c2.push(m2), n2 = x(c2, n2, "key");
          var k2, S2 = 0 | t2._crypto_aead_aegis128l_keybytes();
          n2.length !== S2 && f(c2, "invalid key length"), k2 = d(n2), c2.push(k2);
          var T2 = new u(0 | h2), w2 = T2.address;
          c2.push(w2);
          var Y2 = new u(0 | t2._crypto_aead_aegis128l_abytes()), B2 = Y2.address;
          if (c2.push(B2), 0 === t2._crypto_aead_aegis128l_encrypt_detached(w2, B2, null, o2, h2, 0, p2, i2, 0, v2, m2, k2)) {
            var A2 = y({ ciphertext: T2, mac: Y2 }, s2);
            return g(c2), A2;
          }
          b(c2, "invalid usage");
        }
        function w(e3) {
          var r3 = [];
          l(e3);
          var a2 = new u(0 | t2._crypto_aead_aegis128l_keybytes()), _2 = a2.address;
          r3.push(_2), t2._crypto_aead_aegis128l_keygen(_2);
          var n2 = y(a2, e3);
          return g(r3), n2;
        }
        function Y(e3, r3, a2, _2, n2, s2) {
          var c2 = [];
          l(s2);
          var o2 = null;
          null != e3 && (o2 = d(e3 = x(c2, e3, "secret_nonce")), e3.length, c2.push(o2)), r3 = x(c2, r3, "ciphertext");
          var h2, p2 = t2._crypto_aead_aegis256_abytes(), i2 = r3.length;
          i2 < p2 && f(c2, "ciphertext is too short"), h2 = d(r3), c2.push(h2);
          var v2 = null, m2 = 0;
          null != a2 && (v2 = d(a2 = x(c2, a2, "additional_data")), m2 = a2.length, c2.push(v2)), _2 = x(c2, _2, "public_nonce");
          var E2, k2 = 0 | t2._crypto_aead_aegis256_npubbytes();
          _2.length !== k2 && f(c2, "invalid public_nonce length"), E2 = d(_2), c2.push(E2), n2 = x(c2, n2, "key");
          var S2, T2 = 0 | t2._crypto_aead_aegis256_keybytes();
          n2.length !== T2 && f(c2, "invalid key length"), S2 = d(n2), c2.push(S2);
          var w2 = new u(i2 - t2._crypto_aead_aegis256_abytes() | 0), Y2 = w2.address;
          if (c2.push(Y2), 0 === t2._crypto_aead_aegis256_decrypt(Y2, null, o2, h2, i2, 0, v2, m2, 0, E2, S2)) {
            var B2 = y(w2, s2);
            return g(c2), B2;
          }
          b(c2, "ciphertext cannot be decrypted using that key");
        }
        function B(e3, r3, a2, _2, n2, s2, c2) {
          var o2 = [];
          l(c2);
          var h2 = null;
          null != e3 && (h2 = d(e3 = x(o2, e3, "secret_nonce")), e3.length, o2.push(h2));
          var p2 = d(r3 = x(o2, r3, "ciphertext")), i2 = r3.length;
          o2.push(p2), a2 = x(o2, a2, "mac");
          var v2, m2 = 0 | t2._crypto_box_macbytes();
          a2.length !== m2 && f(o2, "invalid mac length"), v2 = d(a2), o2.push(v2);
          var E2 = null, k2 = 0;
          null != _2 && (E2 = d(_2 = x(o2, _2, "additional_data")), k2 = _2.length, o2.push(E2)), n2 = x(o2, n2, "public_nonce");
          var S2, T2 = 0 | t2._crypto_aead_aegis256_npubbytes();
          n2.length !== T2 && f(o2, "invalid public_nonce length"), S2 = d(n2), o2.push(S2), s2 = x(o2, s2, "key");
          var w2, Y2 = 0 | t2._crypto_aead_aegis256_keybytes();
          s2.length !== Y2 && f(o2, "invalid key length"), w2 = d(s2), o2.push(w2);
          var B2 = new u(0 | i2), A2 = B2.address;
          if (o2.push(A2), 0 === t2._crypto_aead_aegis256_decrypt_detached(A2, h2, p2, i2, 0, v2, E2, k2, 0, S2, w2)) {
            var K2 = y(B2, c2);
            return g(o2), K2;
          }
          b(o2, "ciphertext cannot be decrypted using that key");
        }
        function A(e3, r3, a2, _2, n2, s2) {
          var c2 = [];
          l(s2);
          var o2 = d(e3 = x(c2, e3, "message")), h2 = e3.length;
          c2.push(o2);
          var p2 = null, i2 = 0;
          null != r3 && (p2 = d(r3 = x(c2, r3, "additional_data")), i2 = r3.length, c2.push(p2));
          var v2 = null;
          null != a2 && (v2 = d(a2 = x(c2, a2, "secret_nonce")), a2.length, c2.push(v2)), _2 = x(c2, _2, "public_nonce");
          var m2, E2 = 0 | t2._crypto_aead_aegis256_npubbytes();
          _2.length !== E2 && f(c2, "invalid public_nonce length"), m2 = d(_2), c2.push(m2), n2 = x(c2, n2, "key");
          var k2, S2 = 0 | t2._crypto_aead_aegis256_keybytes();
          n2.length !== S2 && f(c2, "invalid key length"), k2 = d(n2), c2.push(k2);
          var T2 = new u(h2 + t2._crypto_aead_aegis256_abytes() | 0), w2 = T2.address;
          if (c2.push(w2), 0 === t2._crypto_aead_aegis256_encrypt(w2, null, o2, h2, 0, p2, i2, 0, v2, m2, k2)) {
            var Y2 = y(T2, s2);
            return g(c2), Y2;
          }
          b(c2, "invalid usage");
        }
        function K(e3, r3, a2, _2, n2, s2) {
          var c2 = [];
          l(s2);
          var o2 = d(e3 = x(c2, e3, "message")), h2 = e3.length;
          c2.push(o2);
          var p2 = null, i2 = 0;
          null != r3 && (p2 = d(r3 = x(c2, r3, "additional_data")), i2 = r3.length, c2.push(p2));
          var v2 = null;
          null != a2 && (v2 = d(a2 = x(c2, a2, "secret_nonce")), a2.length, c2.push(v2)), _2 = x(c2, _2, "public_nonce");
          var m2, E2 = 0 | t2._crypto_aead_aegis256_npubbytes();
          _2.length !== E2 && f(c2, "invalid public_nonce length"), m2 = d(_2), c2.push(m2), n2 = x(c2, n2, "key");
          var k2, S2 = 0 | t2._crypto_aead_aegis256_keybytes();
          n2.length !== S2 && f(c2, "invalid key length"), k2 = d(n2), c2.push(k2);
          var T2 = new u(0 | h2), w2 = T2.address;
          c2.push(w2);
          var Y2 = new u(0 | t2._crypto_aead_aegis256_abytes()), B2 = Y2.address;
          if (c2.push(B2), 0 === t2._crypto_aead_aegis256_encrypt_detached(w2, B2, null, o2, h2, 0, p2, i2, 0, v2, m2, k2)) {
            var A2 = y({ ciphertext: T2, mac: Y2 }, s2);
            return g(c2), A2;
          }
          b(c2, "invalid usage");
        }
        function M(e3) {
          var r3 = [];
          l(e3);
          var a2 = new u(0 | t2._crypto_aead_aegis256_keybytes()), _2 = a2.address;
          r3.push(_2), t2._crypto_aead_aegis256_keygen(_2);
          var n2 = y(a2, e3);
          return g(r3), n2;
        }
        function I(e3, r3, a2, _2, n2, s2) {
          var c2 = [];
          l(s2);
          var o2 = null;
          null != e3 && (o2 = d(e3 = x(c2, e3, "secret_nonce")), e3.length, c2.push(o2)), r3 = x(c2, r3, "ciphertext");
          var h2, p2 = t2._crypto_aead_chacha20poly1305_abytes(), i2 = r3.length;
          i2 < p2 && f(c2, "ciphertext is too short"), h2 = d(r3), c2.push(h2);
          var v2 = null, m2 = 0;
          null != a2 && (v2 = d(a2 = x(c2, a2, "additional_data")), m2 = a2.length, c2.push(v2)), _2 = x(c2, _2, "public_nonce");
          var E2, k2 = 0 | t2._crypto_aead_chacha20poly1305_npubbytes();
          _2.length !== k2 && f(c2, "invalid public_nonce length"), E2 = d(_2), c2.push(E2), n2 = x(c2, n2, "key");
          var S2, T2 = 0 | t2._crypto_aead_chacha20poly1305_keybytes();
          n2.length !== T2 && f(c2, "invalid key length"), S2 = d(n2), c2.push(S2);
          var w2 = new u(i2 - t2._crypto_aead_chacha20poly1305_abytes() | 0), Y2 = w2.address;
          if (c2.push(Y2), 0 === t2._crypto_aead_chacha20poly1305_decrypt(Y2, null, o2, h2, i2, 0, v2, m2, 0, E2, S2)) {
            var B2 = y(w2, s2);
            return g(c2), B2;
          }
          b(c2, "ciphertext cannot be decrypted using that key");
        }
        function N(e3, r3, a2, _2, n2, s2, c2) {
          var o2 = [];
          l(c2);
          var h2 = null;
          null != e3 && (h2 = d(e3 = x(o2, e3, "secret_nonce")), e3.length, o2.push(h2));
          var p2 = d(r3 = x(o2, r3, "ciphertext")), i2 = r3.length;
          o2.push(p2), a2 = x(o2, a2, "mac");
          var v2, m2 = 0 | t2._crypto_box_macbytes();
          a2.length !== m2 && f(o2, "invalid mac length"), v2 = d(a2), o2.push(v2);
          var E2 = null, k2 = 0;
          null != _2 && (E2 = d(_2 = x(o2, _2, "additional_data")), k2 = _2.length, o2.push(E2)), n2 = x(o2, n2, "public_nonce");
          var S2, T2 = 0 | t2._crypto_aead_chacha20poly1305_npubbytes();
          n2.length !== T2 && f(o2, "invalid public_nonce length"), S2 = d(n2), o2.push(S2), s2 = x(o2, s2, "key");
          var w2, Y2 = 0 | t2._crypto_aead_chacha20poly1305_keybytes();
          s2.length !== Y2 && f(o2, "invalid key length"), w2 = d(s2), o2.push(w2);
          var B2 = new u(0 | i2), A2 = B2.address;
          if (o2.push(A2), 0 === t2._crypto_aead_chacha20poly1305_decrypt_detached(A2, h2, p2, i2, 0, v2, E2, k2, 0, S2, w2)) {
            var K2 = y(B2, c2);
            return g(o2), K2;
          }
          b(o2, "ciphertext cannot be decrypted using that key");
        }
        function L(e3, r3, a2, _2, n2, s2) {
          var c2 = [];
          l(s2);
          var o2 = d(e3 = x(c2, e3, "message")), h2 = e3.length;
          c2.push(o2);
          var p2 = null, i2 = 0;
          null != r3 && (p2 = d(r3 = x(c2, r3, "additional_data")), i2 = r3.length, c2.push(p2));
          var v2 = null;
          null != a2 && (v2 = d(a2 = x(c2, a2, "secret_nonce")), a2.length, c2.push(v2)), _2 = x(c2, _2, "public_nonce");
          var m2, E2 = 0 | t2._crypto_aead_chacha20poly1305_npubbytes();
          _2.length !== E2 && f(c2, "invalid public_nonce length"), m2 = d(_2), c2.push(m2), n2 = x(c2, n2, "key");
          var k2, S2 = 0 | t2._crypto_aead_chacha20poly1305_keybytes();
          n2.length !== S2 && f(c2, "invalid key length"), k2 = d(n2), c2.push(k2);
          var T2 = new u(h2 + t2._crypto_aead_chacha20poly1305_abytes() | 0), w2 = T2.address;
          if (c2.push(w2), 0 === t2._crypto_aead_chacha20poly1305_encrypt(w2, null, o2, h2, 0, p2, i2, 0, v2, m2, k2)) {
            var Y2 = y(T2, s2);
            return g(c2), Y2;
          }
          b(c2, "invalid usage");
        }
        function U(e3, r3, a2, _2, n2, s2) {
          var c2 = [];
          l(s2);
          var o2 = d(e3 = x(c2, e3, "message")), h2 = e3.length;
          c2.push(o2);
          var p2 = null, i2 = 0;
          null != r3 && (p2 = d(r3 = x(c2, r3, "additional_data")), i2 = r3.length, c2.push(p2));
          var v2 = null;
          null != a2 && (v2 = d(a2 = x(c2, a2, "secret_nonce")), a2.length, c2.push(v2)), _2 = x(c2, _2, "public_nonce");
          var m2, E2 = 0 | t2._crypto_aead_chacha20poly1305_npubbytes();
          _2.length !== E2 && f(c2, "invalid public_nonce length"), m2 = d(_2), c2.push(m2), n2 = x(c2, n2, "key");
          var k2, S2 = 0 | t2._crypto_aead_chacha20poly1305_keybytes();
          n2.length !== S2 && f(c2, "invalid key length"), k2 = d(n2), c2.push(k2);
          var T2 = new u(0 | h2), w2 = T2.address;
          c2.push(w2);
          var Y2 = new u(0 | t2._crypto_aead_chacha20poly1305_abytes()), B2 = Y2.address;
          if (c2.push(B2), 0 === t2._crypto_aead_chacha20poly1305_encrypt_detached(w2, B2, null, o2, h2, 0, p2, i2, 0, v2, m2, k2)) {
            var A2 = y({ ciphertext: T2, mac: Y2 }, s2);
            return g(c2), A2;
          }
          b(c2, "invalid usage");
        }
        function O(e3, r3, a2, _2, n2, s2) {
          var c2 = [];
          l(s2);
          var o2 = null;
          null != e3 && (o2 = d(e3 = x(c2, e3, "secret_nonce")), e3.length, c2.push(o2)), r3 = x(c2, r3, "ciphertext");
          var h2, p2 = t2._crypto_aead_chacha20poly1305_ietf_abytes(), i2 = r3.length;
          i2 < p2 && f(c2, "ciphertext is too short"), h2 = d(r3), c2.push(h2);
          var v2 = null, m2 = 0;
          null != a2 && (v2 = d(a2 = x(c2, a2, "additional_data")), m2 = a2.length, c2.push(v2)), _2 = x(c2, _2, "public_nonce");
          var E2, k2 = 0 | t2._crypto_aead_chacha20poly1305_ietf_npubbytes();
          _2.length !== k2 && f(c2, "invalid public_nonce length"), E2 = d(_2), c2.push(E2), n2 = x(c2, n2, "key");
          var S2, T2 = 0 | t2._crypto_aead_chacha20poly1305_ietf_keybytes();
          n2.length !== T2 && f(c2, "invalid key length"), S2 = d(n2), c2.push(S2);
          var w2 = new u(i2 - t2._crypto_aead_chacha20poly1305_ietf_abytes() | 0), Y2 = w2.address;
          if (c2.push(Y2), 0 === t2._crypto_aead_chacha20poly1305_ietf_decrypt(Y2, null, o2, h2, i2, 0, v2, m2, 0, E2, S2)) {
            var B2 = y(w2, s2);
            return g(c2), B2;
          }
          b(c2, "ciphertext cannot be decrypted using that key");
        }
        function C(e3, r3, a2, _2, n2, s2, c2) {
          var o2 = [];
          l(c2);
          var h2 = null;
          null != e3 && (h2 = d(e3 = x(o2, e3, "secret_nonce")), e3.length, o2.push(h2));
          var p2 = d(r3 = x(o2, r3, "ciphertext")), i2 = r3.length;
          o2.push(p2), a2 = x(o2, a2, "mac");
          var v2, m2 = 0 | t2._crypto_box_macbytes();
          a2.length !== m2 && f(o2, "invalid mac length"), v2 = d(a2), o2.push(v2);
          var E2 = null, k2 = 0;
          null != _2 && (E2 = d(_2 = x(o2, _2, "additional_data")), k2 = _2.length, o2.push(E2)), n2 = x(o2, n2, "public_nonce");
          var S2, T2 = 0 | t2._crypto_aead_chacha20poly1305_ietf_npubbytes();
          n2.length !== T2 && f(o2, "invalid public_nonce length"), S2 = d(n2), o2.push(S2), s2 = x(o2, s2, "key");
          var w2, Y2 = 0 | t2._crypto_aead_chacha20poly1305_ietf_keybytes();
          s2.length !== Y2 && f(o2, "invalid key length"), w2 = d(s2), o2.push(w2);
          var B2 = new u(0 | i2), A2 = B2.address;
          if (o2.push(A2), 0 === t2._crypto_aead_chacha20poly1305_ietf_decrypt_detached(A2, h2, p2, i2, 0, v2, E2, k2, 0, S2, w2)) {
            var K2 = y(B2, c2);
            return g(o2), K2;
          }
          b(o2, "ciphertext cannot be decrypted using that key");
        }
        function R(e3, r3, a2, _2, n2, s2) {
          var c2 = [];
          l(s2);
          var o2 = d(e3 = x(c2, e3, "message")), h2 = e3.length;
          c2.push(o2);
          var p2 = null, i2 = 0;
          null != r3 && (p2 = d(r3 = x(c2, r3, "additional_data")), i2 = r3.length, c2.push(p2));
          var v2 = null;
          null != a2 && (v2 = d(a2 = x(c2, a2, "secret_nonce")), a2.length, c2.push(v2)), _2 = x(c2, _2, "public_nonce");
          var m2, E2 = 0 | t2._crypto_aead_chacha20poly1305_ietf_npubbytes();
          _2.length !== E2 && f(c2, "invalid public_nonce length"), m2 = d(_2), c2.push(m2), n2 = x(c2, n2, "key");
          var k2, S2 = 0 | t2._crypto_aead_chacha20poly1305_ietf_keybytes();
          n2.length !== S2 && f(c2, "invalid key length"), k2 = d(n2), c2.push(k2);
          var T2 = new u(h2 + t2._crypto_aead_chacha20poly1305_ietf_abytes() | 0), w2 = T2.address;
          if (c2.push(w2), 0 === t2._crypto_aead_chacha20poly1305_ietf_encrypt(w2, null, o2, h2, 0, p2, i2, 0, v2, m2, k2)) {
            var Y2 = y(T2, s2);
            return g(c2), Y2;
          }
          b(c2, "invalid usage");
        }
        function P(e3, r3, a2, _2, n2, s2) {
          var c2 = [];
          l(s2);
          var o2 = d(e3 = x(c2, e3, "message")), h2 = e3.length;
          c2.push(o2);
          var p2 = null, i2 = 0;
          null != r3 && (p2 = d(r3 = x(c2, r3, "additional_data")), i2 = r3.length, c2.push(p2));
          var v2 = null;
          null != a2 && (v2 = d(a2 = x(c2, a2, "secret_nonce")), a2.length, c2.push(v2)), _2 = x(c2, _2, "public_nonce");
          var m2, E2 = 0 | t2._crypto_aead_chacha20poly1305_ietf_npubbytes();
          _2.length !== E2 && f(c2, "invalid public_nonce length"), m2 = d(_2), c2.push(m2), n2 = x(c2, n2, "key");
          var k2, S2 = 0 | t2._crypto_aead_chacha20poly1305_ietf_keybytes();
          n2.length !== S2 && f(c2, "invalid key length"), k2 = d(n2), c2.push(k2);
          var T2 = new u(0 | h2), w2 = T2.address;
          c2.push(w2);
          var Y2 = new u(0 | t2._crypto_aead_chacha20poly1305_ietf_abytes()), B2 = Y2.address;
          if (c2.push(B2), 0 === t2._crypto_aead_chacha20poly1305_ietf_encrypt_detached(w2, B2, null, o2, h2, 0, p2, i2, 0, v2, m2, k2)) {
            var A2 = y({ ciphertext: T2, mac: Y2 }, s2);
            return g(c2), A2;
          }
          b(c2, "invalid usage");
        }
        function G(e3) {
          var r3 = [];
          l(e3);
          var a2 = new u(0 | t2._crypto_aead_chacha20poly1305_ietf_keybytes()), _2 = a2.address;
          r3.push(_2), t2._crypto_aead_chacha20poly1305_ietf_keygen(_2);
          var n2 = y(a2, e3);
          return g(r3), n2;
        }
        function X(e3) {
          var r3 = [];
          l(e3);
          var a2 = new u(0 | t2._crypto_aead_chacha20poly1305_keybytes()), _2 = a2.address;
          r3.push(_2), t2._crypto_aead_chacha20poly1305_keygen(_2);
          var n2 = y(a2, e3);
          return g(r3), n2;
        }
        function D(e3, r3, a2, _2, n2, s2) {
          var c2 = [];
          l(s2);
          var o2 = null;
          null != e3 && (o2 = d(e3 = x(c2, e3, "secret_nonce")), e3.length, c2.push(o2)), r3 = x(c2, r3, "ciphertext");
          var h2, p2 = t2._crypto_aead_xchacha20poly1305_ietf_abytes(), i2 = r3.length;
          i2 < p2 && f(c2, "ciphertext is too short"), h2 = d(r3), c2.push(h2);
          var v2 = null, m2 = 0;
          null != a2 && (v2 = d(a2 = x(c2, a2, "additional_data")), m2 = a2.length, c2.push(v2)), _2 = x(c2, _2, "public_nonce");
          var E2, k2 = 0 | t2._crypto_aead_xchacha20poly1305_ietf_npubbytes();
          _2.length !== k2 && f(c2, "invalid public_nonce length"), E2 = d(_2), c2.push(E2), n2 = x(c2, n2, "key");
          var S2, T2 = 0 | t2._crypto_aead_xchacha20poly1305_ietf_keybytes();
          n2.length !== T2 && f(c2, "invalid key length"), S2 = d(n2), c2.push(S2);
          var w2 = new u(i2 - t2._crypto_aead_xchacha20poly1305_ietf_abytes() | 0), Y2 = w2.address;
          if (c2.push(Y2), 0 === t2._crypto_aead_xchacha20poly1305_ietf_decrypt(Y2, null, o2, h2, i2, 0, v2, m2, 0, E2, S2)) {
            var B2 = y(w2, s2);
            return g(c2), B2;
          }
          b(c2, "ciphertext cannot be decrypted using that key");
        }
        function F(e3, r3, a2, _2, n2, s2, c2) {
          var o2 = [];
          l(c2);
          var h2 = null;
          null != e3 && (h2 = d(e3 = x(o2, e3, "secret_nonce")), e3.length, o2.push(h2));
          var p2 = d(r3 = x(o2, r3, "ciphertext")), i2 = r3.length;
          o2.push(p2), a2 = x(o2, a2, "mac");
          var v2, m2 = 0 | t2._crypto_box_macbytes();
          a2.length !== m2 && f(o2, "invalid mac length"), v2 = d(a2), o2.push(v2);
          var E2 = null, k2 = 0;
          null != _2 && (E2 = d(_2 = x(o2, _2, "additional_data")), k2 = _2.length, o2.push(E2)), n2 = x(o2, n2, "public_nonce");
          var S2, T2 = 0 | t2._crypto_aead_xchacha20poly1305_ietf_npubbytes();
          n2.length !== T2 && f(o2, "invalid public_nonce length"), S2 = d(n2), o2.push(S2), s2 = x(o2, s2, "key");
          var w2, Y2 = 0 | t2._crypto_aead_xchacha20poly1305_ietf_keybytes();
          s2.length !== Y2 && f(o2, "invalid key length"), w2 = d(s2), o2.push(w2);
          var B2 = new u(0 | i2), A2 = B2.address;
          if (o2.push(A2), 0 === t2._crypto_aead_xchacha20poly1305_ietf_decrypt_detached(A2, h2, p2, i2, 0, v2, E2, k2, 0, S2, w2)) {
            var K2 = y(B2, c2);
            return g(o2), K2;
          }
          b(o2, "ciphertext cannot be decrypted using that key");
        }
        function V(e3, r3, a2, _2, n2, s2) {
          var c2 = [];
          l(s2);
          var o2 = d(e3 = x(c2, e3, "message")), h2 = e3.length;
          c2.push(o2);
          var p2 = null, i2 = 0;
          null != r3 && (p2 = d(r3 = x(c2, r3, "additional_data")), i2 = r3.length, c2.push(p2));
          var v2 = null;
          null != a2 && (v2 = d(a2 = x(c2, a2, "secret_nonce")), a2.length, c2.push(v2)), _2 = x(c2, _2, "public_nonce");
          var m2, E2 = 0 | t2._crypto_aead_xchacha20poly1305_ietf_npubbytes();
          _2.length !== E2 && f(c2, "invalid public_nonce length"), m2 = d(_2), c2.push(m2), n2 = x(c2, n2, "key");
          var k2, S2 = 0 | t2._crypto_aead_xchacha20poly1305_ietf_keybytes();
          n2.length !== S2 && f(c2, "invalid key length"), k2 = d(n2), c2.push(k2);
          var T2 = new u(h2 + t2._crypto_aead_xchacha20poly1305_ietf_abytes() | 0), w2 = T2.address;
          if (c2.push(w2), 0 === t2._crypto_aead_xchacha20poly1305_ietf_encrypt(w2, null, o2, h2, 0, p2, i2, 0, v2, m2, k2)) {
            var Y2 = y(T2, s2);
            return g(c2), Y2;
          }
          b(c2, "invalid usage");
        }
        function H(e3, r3, a2, _2, n2, s2) {
          var c2 = [];
          l(s2);
          var o2 = d(e3 = x(c2, e3, "message")), h2 = e3.length;
          c2.push(o2);
          var p2 = null, i2 = 0;
          null != r3 && (p2 = d(r3 = x(c2, r3, "additional_data")), i2 = r3.length, c2.push(p2));
          var v2 = null;
          null != a2 && (v2 = d(a2 = x(c2, a2, "secret_nonce")), a2.length, c2.push(v2)), _2 = x(c2, _2, "public_nonce");
          var m2, E2 = 0 | t2._crypto_aead_xchacha20poly1305_ietf_npubbytes();
          _2.length !== E2 && f(c2, "invalid public_nonce length"), m2 = d(_2), c2.push(m2), n2 = x(c2, n2, "key");
          var k2, S2 = 0 | t2._crypto_aead_xchacha20poly1305_ietf_keybytes();
          n2.length !== S2 && f(c2, "invalid key length"), k2 = d(n2), c2.push(k2);
          var T2 = new u(0 | h2), w2 = T2.address;
          c2.push(w2);
          var Y2 = new u(0 | t2._crypto_aead_xchacha20poly1305_ietf_abytes()), B2 = Y2.address;
          if (c2.push(B2), 0 === t2._crypto_aead_xchacha20poly1305_ietf_encrypt_detached(w2, B2, null, o2, h2, 0, p2, i2, 0, v2, m2, k2)) {
            var A2 = y({ ciphertext: T2, mac: Y2 }, s2);
            return g(c2), A2;
          }
          b(c2, "invalid usage");
        }
        function q(e3) {
          var r3 = [];
          l(e3);
          var a2 = new u(0 | t2._crypto_aead_xchacha20poly1305_ietf_keybytes()), _2 = a2.address;
          r3.push(_2), t2._crypto_aead_xchacha20poly1305_ietf_keygen(_2);
          var n2 = y(a2, e3);
          return g(r3), n2;
        }
        function j(e3, r3, a2) {
          var _2 = [];
          l(a2);
          var n2 = d(e3 = x(_2, e3, "message")), s2 = e3.length;
          _2.push(n2), r3 = x(_2, r3, "key");
          var c2, o2 = 0 | t2._crypto_auth_keybytes();
          r3.length !== o2 && f(_2, "invalid key length"), c2 = d(r3), _2.push(c2);
          var h2 = new u(0 | t2._crypto_auth_bytes()), p2 = h2.address;
          if (_2.push(p2), 0 == (0 | t2._crypto_auth(p2, n2, s2, 0, c2))) {
            var i2 = y(h2, a2);
            return g(_2), i2;
          }
          b(_2, "invalid usage");
        }
        function z(e3, r3, a2) {
          var _2 = [];
          l(a2);
          var n2 = d(e3 = x(_2, e3, "message")), s2 = e3.length;
          _2.push(n2), r3 = x(_2, r3, "key");
          var c2, o2 = 0 | t2._crypto_auth_hmacsha256_keybytes();
          r3.length !== o2 && f(_2, "invalid key length"), c2 = d(r3), _2.push(c2);
          var h2 = new u(0 | t2._crypto_auth_hmacsha256_bytes()), p2 = h2.address;
          if (_2.push(p2), 0 == (0 | t2._crypto_auth_hmacsha256(p2, n2, s2, 0, c2))) {
            var i2 = y(h2, a2);
            return g(_2), i2;
          }
          b(_2, "invalid usage");
        }
        function W(e3, r3) {
          var a2 = [];
          l(r3), m(a2, e3, "state_address");
          var _2 = new u(0 | t2._crypto_auth_hmacsha256_bytes()), n2 = _2.address;
          if (a2.push(n2), 0 == (0 | t2._crypto_auth_hmacsha256_final(e3, n2))) {
            var s2 = (t2._free(e3), y(_2, r3));
            return g(a2), s2;
          }
          b(a2, "invalid usage");
        }
        function J(e3, r3) {
          var a2 = [];
          l(r3);
          var _2 = null, n2 = 0;
          null != e3 && (_2 = d(e3 = x(a2, e3, "key")), n2 = e3.length, a2.push(_2));
          var s2 = new u(208).address;
          if (0 == (0 | t2._crypto_auth_hmacsha256_init(s2, _2, n2))) {
            var c2 = s2;
            return g(a2), c2;
          }
          b(a2, "invalid usage");
        }
        function Q(e3) {
          var r3 = [];
          l(e3);
          var a2 = new u(0 | t2._crypto_auth_hmacsha256_keybytes()), _2 = a2.address;
          r3.push(_2), t2._crypto_auth_hmacsha256_keygen(_2);
          var n2 = y(a2, e3);
          return g(r3), n2;
        }
        function Z(e3, r3, a2) {
          var _2 = [];
          l(a2), m(_2, e3, "state_address");
          var n2 = d(r3 = x(_2, r3, "message_chunk")), s2 = r3.length;
          _2.push(n2), 0 != (0 | t2._crypto_auth_hmacsha256_update(e3, n2, s2)) && b(_2, "invalid usage"), g(_2);
        }
        function $(e3, r3, a2) {
          var _2 = [];
          e3 = x(_2, e3, "tag");
          var n2, s2 = 0 | t2._crypto_auth_hmacsha256_bytes();
          e3.length !== s2 && f(_2, "invalid tag length"), n2 = d(e3), _2.push(n2);
          var c2 = d(r3 = x(_2, r3, "message")), o2 = r3.length;
          _2.push(c2), a2 = x(_2, a2, "key");
          var h2, p2 = 0 | t2._crypto_auth_hmacsha256_keybytes();
          a2.length !== p2 && f(_2, "invalid key length"), h2 = d(a2), _2.push(h2);
          var y2 = 0 == (0 | t2._crypto_auth_hmacsha256_verify(n2, c2, o2, 0, h2));
          return g(_2), y2;
        }
        function ee(e3, r3, a2) {
          var _2 = [];
          l(a2);
          var n2 = d(e3 = x(_2, e3, "message")), s2 = e3.length;
          _2.push(n2), r3 = x(_2, r3, "key");
          var c2, o2 = 0 | t2._crypto_auth_hmacsha512_keybytes();
          r3.length !== o2 && f(_2, "invalid key length"), c2 = d(r3), _2.push(c2);
          var h2 = new u(0 | t2._crypto_auth_hmacsha512_bytes()), p2 = h2.address;
          if (_2.push(p2), 0 == (0 | t2._crypto_auth_hmacsha512(p2, n2, s2, 0, c2))) {
            var i2 = y(h2, a2);
            return g(_2), i2;
          }
          b(_2, "invalid usage");
        }
        function re(e3, r3) {
          var a2 = [];
          l(r3), m(a2, e3, "state_address");
          var _2 = new u(0 | t2._crypto_auth_hmacsha512_bytes()), n2 = _2.address;
          if (a2.push(n2), 0 == (0 | t2._crypto_auth_hmacsha512_final(e3, n2))) {
            var s2 = (t2._free(e3), y(_2, r3));
            return g(a2), s2;
          }
          b(a2, "invalid usage");
        }
        function te(e3, r3) {
          var a2 = [];
          l(r3);
          var _2 = null, n2 = 0;
          null != e3 && (_2 = d(e3 = x(a2, e3, "key")), n2 = e3.length, a2.push(_2));
          var s2 = new u(416).address;
          if (0 == (0 | t2._crypto_auth_hmacsha512_init(s2, _2, n2))) {
            var c2 = s2;
            return g(a2), c2;
          }
          b(a2, "invalid usage");
        }
        function ae(e3) {
          var r3 = [];
          l(e3);
          var a2 = new u(0 | t2._crypto_auth_hmacsha512_keybytes()), _2 = a2.address;
          r3.push(_2), t2._crypto_auth_hmacsha512_keygen(_2);
          var n2 = y(a2, e3);
          return g(r3), n2;
        }
        function _e(e3, r3, a2) {
          var _2 = [];
          l(a2), m(_2, e3, "state_address");
          var n2 = d(r3 = x(_2, r3, "message_chunk")), s2 = r3.length;
          _2.push(n2), 0 != (0 | t2._crypto_auth_hmacsha512_update(e3, n2, s2)) && b(_2, "invalid usage"), g(_2);
        }
        function ne(e3, r3, a2) {
          var _2 = [];
          e3 = x(_2, e3, "tag");
          var n2, s2 = 0 | t2._crypto_auth_hmacsha512_bytes();
          e3.length !== s2 && f(_2, "invalid tag length"), n2 = d(e3), _2.push(n2);
          var c2 = d(r3 = x(_2, r3, "message")), o2 = r3.length;
          _2.push(c2), a2 = x(_2, a2, "key");
          var h2, p2 = 0 | t2._crypto_auth_hmacsha512_keybytes();
          a2.length !== p2 && f(_2, "invalid key length"), h2 = d(a2), _2.push(h2);
          var y2 = 0 == (0 | t2._crypto_auth_hmacsha512_verify(n2, c2, o2, 0, h2));
          return g(_2), y2;
        }
        function se(e3) {
          var r3 = [];
          l(e3);
          var a2 = new u(0 | t2._crypto_auth_keybytes()), _2 = a2.address;
          r3.push(_2), t2._crypto_auth_keygen(_2);
          var n2 = y(a2, e3);
          return g(r3), n2;
        }
        function ce(e3, r3, a2) {
          var _2 = [];
          e3 = x(_2, e3, "tag");
          var n2, s2 = 0 | t2._crypto_auth_bytes();
          e3.length !== s2 && f(_2, "invalid tag length"), n2 = d(e3), _2.push(n2);
          var c2 = d(r3 = x(_2, r3, "message")), o2 = r3.length;
          _2.push(c2), a2 = x(_2, a2, "key");
          var h2, p2 = 0 | t2._crypto_auth_keybytes();
          a2.length !== p2 && f(_2, "invalid key length"), h2 = d(a2), _2.push(h2);
          var y2 = 0 == (0 | t2._crypto_auth_verify(n2, c2, o2, 0, h2));
          return g(_2), y2;
        }
        function oe(e3, r3, a2) {
          var _2 = [];
          l(a2), e3 = x(_2, e3, "publicKey");
          var n2, s2 = 0 | t2._crypto_box_publickeybytes();
          e3.length !== s2 && f(_2, "invalid publicKey length"), n2 = d(e3), _2.push(n2), r3 = x(_2, r3, "privateKey");
          var c2, o2 = 0 | t2._crypto_box_secretkeybytes();
          r3.length !== o2 && f(_2, "invalid privateKey length"), c2 = d(r3), _2.push(c2);
          var h2 = new u(0 | t2._crypto_box_beforenmbytes()), p2 = h2.address;
          if (_2.push(p2), 0 == (0 | t2._crypto_box_beforenm(p2, n2, c2))) {
            var i2 = y(h2, a2);
            return g(_2), i2;
          }
          b(_2, "invalid usage");
        }
        function he(e3, r3, a2) {
          var _2 = [];
          l(a2), e3 = x(_2, e3, "publicKey");
          var n2, s2 = 0 | t2._crypto_box_curve25519xchacha20poly1305_publickeybytes();
          e3.length !== s2 && f(_2, "invalid publicKey length"), n2 = d(e3), _2.push(n2), r3 = x(_2, r3, "privateKey");
          var c2, o2 = 0 | t2._crypto_box_curve25519xchacha20poly1305_secretkeybytes();
          r3.length !== o2 && f(_2, "invalid privateKey length"), c2 = d(r3), _2.push(c2);
          var h2 = new u(0 | t2._crypto_box_curve25519xchacha20poly1305_beforenmbytes()), p2 = h2.address;
          if (_2.push(p2), 0 == (0 | t2._crypto_box_curve25519xchacha20poly1305_beforenm(p2, n2, c2))) {
            var i2 = y(h2, a2);
            return g(_2), i2;
          }
          b(_2, "invalid usage");
        }
        function pe(e3, r3, a2, _2, n2) {
          var s2 = [];
          l(n2);
          var c2 = d(e3 = x(s2, e3, "message")), o2 = e3.length;
          s2.push(c2), r3 = x(s2, r3, "nonce");
          var h2, p2 = 0 | t2._crypto_box_curve25519xchacha20poly1305_noncebytes();
          r3.length !== p2 && f(s2, "invalid nonce length"), h2 = d(r3), s2.push(h2), a2 = x(s2, a2, "publicKey");
          var i2, v2 = 0 | t2._crypto_box_curve25519xchacha20poly1305_publickeybytes();
          a2.length !== v2 && f(s2, "invalid publicKey length"), i2 = d(a2), s2.push(i2), _2 = x(s2, _2, "privateKey");
          var m2, E2 = 0 | t2._crypto_box_curve25519xchacha20poly1305_secretkeybytes();
          _2.length !== E2 && f(s2, "invalid privateKey length"), m2 = d(_2), s2.push(m2);
          var k2 = new u(0 | o2), S2 = k2.address;
          s2.push(S2);
          var T2 = new u(0 | t2._crypto_box_curve25519xchacha20poly1305_macbytes()), w2 = T2.address;
          if (s2.push(w2), 0 == (0 | t2._crypto_box_curve25519xchacha20poly1305_detached(S2, w2, c2, o2, 0, h2, i2, m2))) {
            var Y2 = y({ ciphertext: k2, mac: T2 }, n2);
            return g(s2), Y2;
          }
          b(s2, "invalid usage");
        }
        function ye(e3, r3, a2, _2) {
          var n2 = [];
          l(_2);
          var s2 = d(e3 = x(n2, e3, "message")), c2 = e3.length;
          n2.push(s2), r3 = x(n2, r3, "nonce");
          var o2, h2 = 0 | t2._crypto_box_curve25519xchacha20poly1305_noncebytes();
          r3.length !== h2 && f(n2, "invalid nonce length"), o2 = d(r3), n2.push(o2), a2 = x(n2, a2, "sharedKey");
          var p2, i2 = 0 | t2._crypto_box_curve25519xchacha20poly1305_beforenmbytes();
          a2.length !== i2 && f(n2, "invalid sharedKey length"), p2 = d(a2), n2.push(p2);
          var v2 = new u(0 | c2), m2 = v2.address;
          n2.push(m2);
          var E2 = new u(0 | t2._crypto_box_curve25519xchacha20poly1305_macbytes()), k2 = E2.address;
          if (n2.push(k2), 0 == (0 | t2._crypto_box_curve25519xchacha20poly1305_detached_afternm(m2, k2, s2, c2, 0, o2, p2))) {
            var S2 = y({ ciphertext: v2, mac: E2 }, _2);
            return g(n2), S2;
          }
          b(n2, "invalid usage");
        }
        function ie(e3, r3, a2, _2, n2) {
          var s2 = [];
          l(n2);
          var c2 = d(e3 = x(s2, e3, "message")), o2 = e3.length;
          s2.push(c2), r3 = x(s2, r3, "nonce");
          var h2, p2 = 0 | t2._crypto_box_curve25519xchacha20poly1305_noncebytes();
          r3.length !== p2 && f(s2, "invalid nonce length"), h2 = d(r3), s2.push(h2), a2 = x(s2, a2, "publicKey");
          var i2, v2 = 0 | t2._crypto_box_curve25519xchacha20poly1305_publickeybytes();
          a2.length !== v2 && f(s2, "invalid publicKey length"), i2 = d(a2), s2.push(i2), _2 = x(s2, _2, "privateKey");
          var m2, E2 = 0 | t2._crypto_box_curve25519xchacha20poly1305_secretkeybytes();
          _2.length !== E2 && f(s2, "invalid privateKey length"), m2 = d(_2), s2.push(m2);
          var k2 = new u(o2 + t2._crypto_box_curve25519xchacha20poly1305_macbytes() | 0), S2 = k2.address;
          if (s2.push(S2), 0 == (0 | t2._crypto_box_curve25519xchacha20poly1305_easy(S2, c2, o2, 0, h2, i2, m2))) {
            var T2 = y(k2, n2);
            return g(s2), T2;
          }
          b(s2, "invalid usage");
        }
        function le(e3, r3, a2, _2) {
          var n2 = [];
          l(_2);
          var s2 = d(e3 = x(n2, e3, "message")), c2 = e3.length;
          n2.push(s2), r3 = x(n2, r3, "nonce");
          var o2, h2 = 0 | t2._crypto_box_curve25519xchacha20poly1305_noncebytes();
          r3.length !== h2 && f(n2, "invalid nonce length"), o2 = d(r3), n2.push(o2), a2 = x(n2, a2, "sharedKey");
          var p2, i2 = 0 | t2._crypto_box_curve25519xchacha20poly1305_beforenmbytes();
          a2.length !== i2 && f(n2, "invalid sharedKey length"), p2 = d(a2), n2.push(p2);
          var v2 = new u(c2 + t2._crypto_box_curve25519xchacha20poly1305_macbytes() | 0), m2 = v2.address;
          if (n2.push(m2), 0 == (0 | t2._crypto_box_curve25519xchacha20poly1305_easy_afternm(m2, s2, c2, 0, o2, p2))) {
            var E2 = y(v2, _2);
            return g(n2), E2;
          }
          b(n2, "invalid usage");
        }
        function ue(e3) {
          var r3 = [];
          l(e3);
          var a2 = new u(0 | t2._crypto_box_curve25519xchacha20poly1305_publickeybytes()), _2 = a2.address;
          r3.push(_2);
          var n2 = new u(0 | t2._crypto_box_curve25519xchacha20poly1305_secretkeybytes()), s2 = n2.address;
          r3.push(s2), t2._crypto_box_curve25519xchacha20poly1305_keypair(_2, s2);
          var c2 = y({ publicKey: a2, privateKey: n2, keyType: "curve25519" }, e3);
          return g(r3), c2;
        }
        function de(e3, r3, a2, _2, n2, s2) {
          var c2 = [];
          l(s2);
          var o2 = d(e3 = x(c2, e3, "ciphertext")), h2 = e3.length;
          c2.push(o2), r3 = x(c2, r3, "mac");
          var p2, i2 = 0 | t2._crypto_box_curve25519xchacha20poly1305_macbytes();
          r3.length !== i2 && f(c2, "invalid mac length"), p2 = d(r3), c2.push(p2), a2 = x(c2, a2, "nonce");
          var v2, m2 = 0 | t2._crypto_box_curve25519xchacha20poly1305_noncebytes();
          a2.length !== m2 && f(c2, "invalid nonce length"), v2 = d(a2), c2.push(v2), _2 = x(c2, _2, "publicKey");
          var E2, k2 = 0 | t2._crypto_box_curve25519xchacha20poly1305_publickeybytes();
          _2.length !== k2 && f(c2, "invalid publicKey length"), E2 = d(_2), c2.push(E2), n2 = x(c2, n2, "privateKey");
          var S2, T2 = 0 | t2._crypto_box_curve25519xchacha20poly1305_secretkeybytes();
          n2.length !== T2 && f(c2, "invalid privateKey length"), S2 = d(n2), c2.push(S2);
          var w2 = new u(0 | h2), Y2 = w2.address;
          if (c2.push(Y2), 0 == (0 | t2._crypto_box_curve25519xchacha20poly1305_open_detached(Y2, o2, p2, h2, 0, v2, E2, S2))) {
            var B2 = y(w2, s2);
            return g(c2), B2;
          }
          b(c2, "incorrect key pair for the given ciphertext");
        }
        function ve(e3, r3, a2, _2, n2) {
          var s2 = [];
          l(n2);
          var c2 = d(e3 = x(s2, e3, "ciphertext")), o2 = e3.length;
          s2.push(c2), r3 = x(s2, r3, "mac");
          var h2, p2 = 0 | t2._crypto_box_curve25519xchacha20poly1305_macbytes();
          r3.length !== p2 && f(s2, "invalid mac length"), h2 = d(r3), s2.push(h2), a2 = x(s2, a2, "nonce");
          var i2, v2 = 0 | t2._crypto_box_curve25519xchacha20poly1305_noncebytes();
          a2.length !== v2 && f(s2, "invalid nonce length"), i2 = d(a2), s2.push(i2), _2 = x(s2, _2, "sharedKey");
          var m2, E2 = 0 | t2._crypto_box_curve25519xchacha20poly1305_beforenmbytes();
          _2.length !== E2 && f(s2, "invalid sharedKey length"), m2 = d(_2), s2.push(m2);
          var k2 = new u(0 | o2), S2 = k2.address;
          if (s2.push(S2), 0 == (0 | t2._crypto_box_curve25519xchacha20poly1305_open_detached_afternm(S2, c2, h2, o2, 0, i2, m2))) {
            var T2 = y(k2, n2);
            return g(s2), T2;
          }
          b(s2, "incorrect secret key for the given ciphertext");
        }
        function ge(e3, r3, a2, _2, n2) {
          var s2 = [];
          l(n2), e3 = x(s2, e3, "ciphertext");
          var c2, o2 = t2._crypto_box_curve25519xchacha20poly1305_macbytes(), h2 = e3.length;
          h2 < o2 && f(s2, "ciphertext is too short"), c2 = d(e3), s2.push(c2), r3 = x(s2, r3, "nonce");
          var p2, i2 = 0 | t2._crypto_box_curve25519xchacha20poly1305_noncebytes();
          r3.length !== i2 && f(s2, "invalid nonce length"), p2 = d(r3), s2.push(p2), a2 = x(s2, a2, "publicKey");
          var v2, m2 = 0 | t2._crypto_box_curve25519xchacha20poly1305_publickeybytes();
          a2.length !== m2 && f(s2, "invalid publicKey length"), v2 = d(a2), s2.push(v2), _2 = x(s2, _2, "privateKey");
          var E2, k2 = 0 | t2._crypto_box_curve25519xchacha20poly1305_secretkeybytes();
          _2.length !== k2 && f(s2, "invalid privateKey length"), E2 = d(_2), s2.push(E2);
          var S2 = new u(h2 - t2._crypto_box_curve25519xchacha20poly1305_macbytes() | 0), T2 = S2.address;
          if (s2.push(T2), 0 == (0 | t2._crypto_box_curve25519xchacha20poly1305_open_easy(T2, c2, h2, 0, p2, v2, E2))) {
            var w2 = y(S2, n2);
            return g(s2), w2;
          }
          b(s2, "incorrect key pair for the given ciphertext");
        }
        function be(e3, r3, a2, _2) {
          var n2 = [];
          l(_2);
          var s2 = d(e3 = x(n2, e3, "ciphertext")), c2 = e3.length;
          n2.push(s2), r3 = x(n2, r3, "nonce");
          var o2, h2 = 0 | t2._crypto_box_curve25519xchacha20poly1305_noncebytes();
          r3.length !== h2 && f(n2, "invalid nonce length"), o2 = d(r3), n2.push(o2), a2 = x(n2, a2, "sharedKey");
          var p2, i2 = 0 | t2._crypto_box_curve25519xchacha20poly1305_beforenmbytes();
          a2.length !== i2 && f(n2, "invalid sharedKey length"), p2 = d(a2), n2.push(p2);
          var v2 = new u(c2 - t2._crypto_box_curve25519xchacha20poly1305_macbytes() | 0), m2 = v2.address;
          if (n2.push(m2), 0 == (0 | t2._crypto_box_curve25519xchacha20poly1305_open_easy_afternm(m2, s2, c2, 0, o2, p2))) {
            var E2 = y(v2, _2);
            return g(n2), E2;
          }
          b(n2, "incorrect secret key for the given ciphertext");
        }
        function fe(e3, r3, a2) {
          var _2 = [];
          l(a2);
          var n2 = d(e3 = x(_2, e3, "message")), s2 = e3.length;
          _2.push(n2), r3 = x(_2, r3, "publicKey");
          var c2, o2 = 0 | t2._crypto_box_curve25519xchacha20poly1305_publickeybytes();
          r3.length !== o2 && f(_2, "invalid publicKey length"), c2 = d(r3), _2.push(c2);
          var h2 = new u(s2 + t2._crypto_box_curve25519xchacha20poly1305_sealbytes() | 0), p2 = h2.address;
          _2.push(p2), t2._crypto_box_curve25519xchacha20poly1305_seal(p2, n2, s2, 0, c2);
          var i2 = y(h2, a2);
          return g(_2), i2;
        }
        function me(e3, r3, a2, _2) {
          var n2 = [];
          l(_2), e3 = x(n2, e3, "ciphertext");
          var s2, c2 = t2._crypto_box_curve25519xchacha20poly1305_sealbytes(), o2 = e3.length;
          o2 < c2 && f(n2, "ciphertext is too short"), s2 = d(e3), n2.push(s2), r3 = x(n2, r3, "publicKey");
          var h2, p2 = 0 | t2._crypto_box_curve25519xchacha20poly1305_publickeybytes();
          r3.length !== p2 && f(n2, "invalid publicKey length"), h2 = d(r3), n2.push(h2), a2 = x(n2, a2, "secretKey");
          var i2, v2 = 0 | t2._crypto_box_curve25519xchacha20poly1305_secretkeybytes();
          a2.length !== v2 && f(n2, "invalid secretKey length"), i2 = d(a2), n2.push(i2);
          var b2 = new u(o2 - t2._crypto_box_curve25519xchacha20poly1305_sealbytes() | 0), m2 = b2.address;
          n2.push(m2), t2._crypto_box_curve25519xchacha20poly1305_seal_open(m2, s2, o2, 0, h2, i2);
          var E2 = y(b2, _2);
          return g(n2), E2;
        }
        function xe(e3, r3) {
          var a2 = [];
          l(r3), e3 = x(a2, e3, "seed");
          var _2, n2 = 0 | t2._crypto_box_curve25519xchacha20poly1305_seedbytes();
          e3.length !== n2 && f(a2, "invalid seed length"), _2 = d(e3), a2.push(_2);
          var s2 = new u(0 | t2._crypto_box_curve25519xchacha20poly1305_publickeybytes()), c2 = s2.address;
          a2.push(c2);
          var o2 = new u(0 | t2._crypto_box_curve25519xchacha20poly1305_secretkeybytes()), h2 = o2.address;
          if (a2.push(h2), 0 == (0 | t2._crypto_box_curve25519xchacha20poly1305_seed_keypair(c2, h2, _2))) {
            var p2 = { publicKey: y(s2, r3), privateKey: y(o2, r3), keyType: "x25519" };
            return g(a2), p2;
          }
          b(a2, "invalid usage");
        }
        function Ee(e3, r3, a2, _2, n2) {
          var s2 = [];
          l(n2);
          var c2 = d(e3 = x(s2, e3, "message")), o2 = e3.length;
          s2.push(c2), r3 = x(s2, r3, "nonce");
          var h2, p2 = 0 | t2._crypto_box_noncebytes();
          r3.length !== p2 && f(s2, "invalid nonce length"), h2 = d(r3), s2.push(h2), a2 = x(s2, a2, "publicKey");
          var i2, v2 = 0 | t2._crypto_box_publickeybytes();
          a2.length !== v2 && f(s2, "invalid publicKey length"), i2 = d(a2), s2.push(i2), _2 = x(s2, _2, "privateKey");
          var m2, E2 = 0 | t2._crypto_box_secretkeybytes();
          _2.length !== E2 && f(s2, "invalid privateKey length"), m2 = d(_2), s2.push(m2);
          var k2 = new u(0 | o2), S2 = k2.address;
          s2.push(S2);
          var T2 = new u(0 | t2._crypto_box_macbytes()), w2 = T2.address;
          if (s2.push(w2), 0 == (0 | t2._crypto_box_detached(S2, w2, c2, o2, 0, h2, i2, m2))) {
            var Y2 = y({ ciphertext: k2, mac: T2 }, n2);
            return g(s2), Y2;
          }
          b(s2, "invalid usage");
        }
        function ke(e3, r3, a2, _2, n2) {
          var s2 = [];
          l(n2);
          var c2 = d(e3 = x(s2, e3, "message")), o2 = e3.length;
          s2.push(c2), r3 = x(s2, r3, "nonce");
          var h2, p2 = 0 | t2._crypto_box_noncebytes();
          r3.length !== p2 && f(s2, "invalid nonce length"), h2 = d(r3), s2.push(h2), a2 = x(s2, a2, "publicKey");
          var i2, v2 = 0 | t2._crypto_box_publickeybytes();
          a2.length !== v2 && f(s2, "invalid publicKey length"), i2 = d(a2), s2.push(i2), _2 = x(s2, _2, "privateKey");
          var m2, E2 = 0 | t2._crypto_box_secretkeybytes();
          _2.length !== E2 && f(s2, "invalid privateKey length"), m2 = d(_2), s2.push(m2);
          var k2 = new u(o2 + t2._crypto_box_macbytes() | 0), S2 = k2.address;
          if (s2.push(S2), 0 == (0 | t2._crypto_box_easy(S2, c2, o2, 0, h2, i2, m2))) {
            var T2 = y(k2, n2);
            return g(s2), T2;
          }
          b(s2, "invalid usage");
        }
        function Se(e3, r3, a2, _2) {
          var n2 = [];
          l(_2);
          var s2 = d(e3 = x(n2, e3, "message")), c2 = e3.length;
          n2.push(s2), r3 = x(n2, r3, "nonce");
          var o2, h2 = 0 | t2._crypto_box_noncebytes();
          r3.length !== h2 && f(n2, "invalid nonce length"), o2 = d(r3), n2.push(o2), a2 = x(n2, a2, "sharedKey");
          var p2, i2 = 0 | t2._crypto_box_beforenmbytes();
          a2.length !== i2 && f(n2, "invalid sharedKey length"), p2 = d(a2), n2.push(p2);
          var v2 = new u(c2 + t2._crypto_box_macbytes() | 0), m2 = v2.address;
          if (n2.push(m2), 0 == (0 | t2._crypto_box_easy_afternm(m2, s2, c2, 0, o2, p2))) {
            var E2 = y(v2, _2);
            return g(n2), E2;
          }
          b(n2, "invalid usage");
        }
        function Te(e3) {
          var r3 = [];
          l(e3);
          var a2 = new u(0 | t2._crypto_box_publickeybytes()), _2 = a2.address;
          r3.push(_2);
          var n2 = new u(0 | t2._crypto_box_secretkeybytes()), s2 = n2.address;
          if (r3.push(s2), 0 == (0 | t2._crypto_box_keypair(_2, s2))) {
            var c2 = { publicKey: y(a2, e3), privateKey: y(n2, e3), keyType: "x25519" };
            return g(r3), c2;
          }
          b(r3, "internal error");
        }
        function we(e3, r3, a2, _2, n2, s2) {
          var c2 = [];
          l(s2);
          var o2 = d(e3 = x(c2, e3, "ciphertext")), h2 = e3.length;
          c2.push(o2), r3 = x(c2, r3, "mac");
          var p2, i2 = 0 | t2._crypto_box_macbytes();
          r3.length !== i2 && f(c2, "invalid mac length"), p2 = d(r3), c2.push(p2), a2 = x(c2, a2, "nonce");
          var v2, m2 = 0 | t2._crypto_box_noncebytes();
          a2.length !== m2 && f(c2, "invalid nonce length"), v2 = d(a2), c2.push(v2), _2 = x(c2, _2, "publicKey");
          var E2, k2 = 0 | t2._crypto_box_publickeybytes();
          _2.length !== k2 && f(c2, "invalid publicKey length"), E2 = d(_2), c2.push(E2), n2 = x(c2, n2, "privateKey");
          var S2, T2 = 0 | t2._crypto_box_secretkeybytes();
          n2.length !== T2 && f(c2, "invalid privateKey length"), S2 = d(n2), c2.push(S2);
          var w2 = new u(0 | h2), Y2 = w2.address;
          if (c2.push(Y2), 0 == (0 | t2._crypto_box_open_detached(Y2, o2, p2, h2, 0, v2, E2, S2))) {
            var B2 = y(w2, s2);
            return g(c2), B2;
          }
          b(c2, "incorrect key pair for the given ciphertext");
        }
        function Ye(e3, r3, a2, _2, n2) {
          var s2 = [];
          l(n2), e3 = x(s2, e3, "ciphertext");
          var c2, o2 = t2._crypto_box_macbytes(), h2 = e3.length;
          h2 < o2 && f(s2, "ciphertext is too short"), c2 = d(e3), s2.push(c2), r3 = x(s2, r3, "nonce");
          var p2, i2 = 0 | t2._crypto_box_noncebytes();
          r3.length !== i2 && f(s2, "invalid nonce length"), p2 = d(r3), s2.push(p2), a2 = x(s2, a2, "publicKey");
          var v2, m2 = 0 | t2._crypto_box_publickeybytes();
          a2.length !== m2 && f(s2, "invalid publicKey length"), v2 = d(a2), s2.push(v2), _2 = x(s2, _2, "privateKey");
          var E2, k2 = 0 | t2._crypto_box_secretkeybytes();
          _2.length !== k2 && f(s2, "invalid privateKey length"), E2 = d(_2), s2.push(E2);
          var S2 = new u(h2 - t2._crypto_box_macbytes() | 0), T2 = S2.address;
          if (s2.push(T2), 0 == (0 | t2._crypto_box_open_easy(T2, c2, h2, 0, p2, v2, E2))) {
            var w2 = y(S2, n2);
            return g(s2), w2;
          }
          b(s2, "incorrect key pair for the given ciphertext");
        }
        function Be(e3, r3, a2, _2) {
          var n2 = [];
          l(_2);
          var s2 = d(e3 = x(n2, e3, "ciphertext")), c2 = e3.length;
          n2.push(s2), r3 = x(n2, r3, "nonce");
          var o2, h2 = 0 | t2._crypto_box_noncebytes();
          r3.length !== h2 && f(n2, "invalid nonce length"), o2 = d(r3), n2.push(o2), a2 = x(n2, a2, "sharedKey");
          var p2, i2 = 0 | t2._crypto_box_beforenmbytes();
          a2.length !== i2 && f(n2, "invalid sharedKey length"), p2 = d(a2), n2.push(p2);
          var v2 = new u(c2 - t2._crypto_box_macbytes() | 0), m2 = v2.address;
          if (n2.push(m2), 0 == (0 | t2._crypto_box_open_easy_afternm(m2, s2, c2, 0, o2, p2))) {
            var E2 = y(v2, _2);
            return g(n2), E2;
          }
          b(n2, "incorrect secret key for the given ciphertext");
        }
        function Ae(e3, r3, a2) {
          var _2 = [];
          l(a2);
          var n2 = d(e3 = x(_2, e3, "message")), s2 = e3.length;
          _2.push(n2), r3 = x(_2, r3, "publicKey");
          var c2, o2 = 0 | t2._crypto_box_publickeybytes();
          r3.length !== o2 && f(_2, "invalid publicKey length"), c2 = d(r3), _2.push(c2);
          var h2 = new u(s2 + t2._crypto_box_sealbytes() | 0), p2 = h2.address;
          if (_2.push(p2), 0 == (0 | t2._crypto_box_seal(p2, n2, s2, 0, c2))) {
            var i2 = y(h2, a2);
            return g(_2), i2;
          }
          b(_2, "invalid usage");
        }
        function Ke(e3, r3, a2, _2) {
          var n2 = [];
          l(_2), e3 = x(n2, e3, "ciphertext");
          var s2, c2 = t2._crypto_box_sealbytes(), o2 = e3.length;
          o2 < c2 && f(n2, "ciphertext is too short"), s2 = d(e3), n2.push(s2), r3 = x(n2, r3, "publicKey");
          var h2, p2 = 0 | t2._crypto_box_publickeybytes();
          r3.length !== p2 && f(n2, "invalid publicKey length"), h2 = d(r3), n2.push(h2), a2 = x(n2, a2, "privateKey");
          var i2, v2 = 0 | t2._crypto_box_secretkeybytes();
          a2.length !== v2 && f(n2, "invalid privateKey length"), i2 = d(a2), n2.push(i2);
          var m2 = new u(o2 - t2._crypto_box_sealbytes() | 0), E2 = m2.address;
          if (n2.push(E2), 0 == (0 | t2._crypto_box_seal_open(E2, s2, o2, 0, h2, i2))) {
            var k2 = y(m2, _2);
            return g(n2), k2;
          }
          b(n2, "incorrect key pair for the given ciphertext");
        }
        function Me(e3, r3) {
          var a2 = [];
          l(r3), e3 = x(a2, e3, "seed");
          var _2, n2 = 0 | t2._crypto_box_seedbytes();
          e3.length !== n2 && f(a2, "invalid seed length"), _2 = d(e3), a2.push(_2);
          var s2 = new u(0 | t2._crypto_box_publickeybytes()), c2 = s2.address;
          a2.push(c2);
          var o2 = new u(0 | t2._crypto_box_secretkeybytes()), h2 = o2.address;
          if (a2.push(h2), 0 == (0 | t2._crypto_box_seed_keypair(c2, h2, _2))) {
            var p2 = { publicKey: y(s2, r3), privateKey: y(o2, r3), keyType: "x25519" };
            return g(a2), p2;
          }
          b(a2, "invalid usage");
        }
        function Ie(e3, r3, a2) {
          var _2 = [];
          l(a2), e3 = x(_2, e3, "p");
          var n2, s2 = 0 | t2._crypto_core_ed25519_bytes();
          e3.length !== s2 && f(_2, "invalid p length"), n2 = d(e3), _2.push(n2), r3 = x(_2, r3, "q");
          var c2, o2 = 0 | t2._crypto_core_ed25519_bytes();
          r3.length !== o2 && f(_2, "invalid q length"), c2 = d(r3), _2.push(c2);
          var h2 = new u(0 | t2._crypto_core_ed25519_bytes()), p2 = h2.address;
          if (_2.push(p2), 0 == (0 | t2._crypto_core_ed25519_add(p2, n2, c2))) {
            var i2 = y(h2, a2);
            return g(_2), i2;
          }
          b(_2, "input is an invalid element");
        }
        function Ne(e3, r3) {
          var a2 = [];
          l(r3);
          var _2 = d(e3 = x(a2, e3, "r"));
          e3.length, a2.push(_2);
          var n2 = new u(0 | t2._crypto_core_ed25519_bytes()), s2 = n2.address;
          if (a2.push(s2), 0 == (0 | t2._crypto_core_ed25519_from_hash(s2, _2))) {
            var c2 = y(n2, r3);
            return g(a2), c2;
          }
          b(a2, "invalid usage");
        }
        function Le(e3, r3) {
          var a2 = [];
          l(r3);
          var _2 = d(e3 = x(a2, e3, "r"));
          e3.length, a2.push(_2);
          var n2 = new u(0 | t2._crypto_core_ed25519_bytes()), s2 = n2.address;
          if (a2.push(s2), 0 == (0 | t2._crypto_core_ed25519_from_uniform(s2, _2))) {
            var c2 = y(n2, r3);
            return g(a2), c2;
          }
          b(a2, "invalid usage");
        }
        function Ue(e3, r3) {
          var a2 = [];
          l(r3), e3 = x(a2, e3, "repr");
          var _2, n2 = 0 | t2._crypto_core_ed25519_bytes();
          e3.length !== n2 && f(a2, "invalid repr length"), _2 = d(e3), a2.push(_2);
          var s2 = 1 == (0 | t2._crypto_core_ed25519_is_valid_point(_2));
          return g(a2), s2;
        }
        function Oe(e3) {
          var r3 = [];
          l(e3);
          var a2 = new u(0 | t2._crypto_core_ed25519_bytes()), _2 = a2.address;
          r3.push(_2), t2._crypto_core_ed25519_random(_2);
          var n2 = y(a2, e3);
          return g(r3), n2;
        }
        function Ce(e3, r3, a2) {
          var _2 = [];
          l(a2), e3 = x(_2, e3, "x");
          var n2, s2 = 0 | t2._crypto_core_ed25519_scalarbytes();
          e3.length !== s2 && f(_2, "invalid x length"), n2 = d(e3), _2.push(n2), r3 = x(_2, r3, "y");
          var c2, o2 = 0 | t2._crypto_core_ed25519_scalarbytes();
          r3.length !== o2 && f(_2, "invalid y length"), c2 = d(r3), _2.push(c2);
          var h2 = new u(0 | t2._crypto_core_ed25519_scalarbytes()), p2 = h2.address;
          _2.push(p2), t2._crypto_core_ed25519_scalar_add(p2, n2, c2);
          var i2 = y(h2, a2);
          return g(_2), i2;
        }
        function Re(e3, r3) {
          var a2 = [];
          l(r3), e3 = x(a2, e3, "s");
          var _2, n2 = 0 | t2._crypto_core_ed25519_scalarbytes();
          e3.length !== n2 && f(a2, "invalid s length"), _2 = d(e3), a2.push(_2);
          var s2 = new u(0 | t2._crypto_core_ed25519_scalarbytes()), c2 = s2.address;
          a2.push(c2), t2._crypto_core_ed25519_scalar_complement(c2, _2);
          var o2 = y(s2, r3);
          return g(a2), o2;
        }
        function Pe(e3, r3) {
          var a2 = [];
          l(r3), e3 = x(a2, e3, "s");
          var _2, n2 = 0 | t2._crypto_core_ed25519_scalarbytes();
          e3.length !== n2 && f(a2, "invalid s length"), _2 = d(e3), a2.push(_2);
          var s2 = new u(0 | t2._crypto_core_ed25519_scalarbytes()), c2 = s2.address;
          if (a2.push(c2), 0 == (0 | t2._crypto_core_ed25519_scalar_invert(c2, _2))) {
            var o2 = y(s2, r3);
            return g(a2), o2;
          }
          b(a2, "invalid reciprocate");
        }
        function Ge(e3, r3, a2) {
          var _2 = [];
          l(a2), e3 = x(_2, e3, "x");
          var n2, s2 = 0 | t2._crypto_core_ed25519_scalarbytes();
          e3.length !== s2 && f(_2, "invalid x length"), n2 = d(e3), _2.push(n2), r3 = x(_2, r3, "y");
          var c2, o2 = 0 | t2._crypto_core_ed25519_scalarbytes();
          r3.length !== o2 && f(_2, "invalid y length"), c2 = d(r3), _2.push(c2);
          var h2 = new u(0 | t2._crypto_core_ed25519_scalarbytes()), p2 = h2.address;
          _2.push(p2), t2._crypto_core_ed25519_scalar_mul(p2, n2, c2);
          var i2 = y(h2, a2);
          return g(_2), i2;
        }
        function Xe(e3, r3) {
          var a2 = [];
          l(r3), e3 = x(a2, e3, "s");
          var _2, n2 = 0 | t2._crypto_core_ed25519_scalarbytes();
          e3.length !== n2 && f(a2, "invalid s length"), _2 = d(e3), a2.push(_2);
          var s2 = new u(0 | t2._crypto_core_ed25519_scalarbytes()), c2 = s2.address;
          a2.push(c2), t2._crypto_core_ed25519_scalar_negate(c2, _2);
          var o2 = y(s2, r3);
          return g(a2), o2;
        }
        function De(e3) {
          var r3 = [];
          l(e3);
          var a2 = new u(0 | t2._crypto_core_ed25519_scalarbytes()), _2 = a2.address;
          r3.push(_2), t2._crypto_core_ed25519_scalar_random(_2);
          var n2 = y(a2, e3);
          return g(r3), n2;
        }
        function Fe(e3, r3) {
          var a2 = [];
          l(r3), e3 = x(a2, e3, "sample");
          var _2, n2 = 0 | t2._crypto_core_ed25519_nonreducedscalarbytes();
          e3.length !== n2 && f(a2, "invalid sample length"), _2 = d(e3), a2.push(_2);
          var s2 = new u(0 | t2._crypto_core_ed25519_scalarbytes()), c2 = s2.address;
          a2.push(c2), t2._crypto_core_ed25519_scalar_reduce(c2, _2);
          var o2 = y(s2, r3);
          return g(a2), o2;
        }
        function Ve(e3, r3, a2) {
          var _2 = [];
          l(a2), e3 = x(_2, e3, "x");
          var n2, s2 = 0 | t2._crypto_core_ed25519_scalarbytes();
          e3.length !== s2 && f(_2, "invalid x length"), n2 = d(e3), _2.push(n2), r3 = x(_2, r3, "y");
          var c2, o2 = 0 | t2._crypto_core_ed25519_scalarbytes();
          r3.length !== o2 && f(_2, "invalid y length"), c2 = d(r3), _2.push(c2);
          var h2 = new u(0 | t2._crypto_core_ed25519_scalarbytes()), p2 = h2.address;
          _2.push(p2), t2._crypto_core_ed25519_scalar_sub(p2, n2, c2);
          var i2 = y(h2, a2);
          return g(_2), i2;
        }
        function He(e3, r3, a2) {
          var _2 = [];
          l(a2), e3 = x(_2, e3, "p");
          var n2, s2 = 0 | t2._crypto_core_ed25519_bytes();
          e3.length !== s2 && f(_2, "invalid p length"), n2 = d(e3), _2.push(n2), r3 = x(_2, r3, "q");
          var c2, o2 = 0 | t2._crypto_core_ed25519_bytes();
          r3.length !== o2 && f(_2, "invalid q length"), c2 = d(r3), _2.push(c2);
          var h2 = new u(0 | t2._crypto_core_ed25519_bytes()), p2 = h2.address;
          if (_2.push(p2), 0 == (0 | t2._crypto_core_ed25519_sub(p2, n2, c2))) {
            var i2 = y(h2, a2);
            return g(_2), i2;
          }
          b(_2, "input is an invalid element");
        }
        function qe(e3, r3, a2, _2) {
          var n2 = [];
          l(_2), e3 = x(n2, e3, "input");
          var s2, c2 = 0 | t2._crypto_core_hchacha20_inputbytes();
          e3.length !== c2 && f(n2, "invalid input length"), s2 = d(e3), n2.push(s2), r3 = x(n2, r3, "privateKey");
          var o2, h2 = 0 | t2._crypto_core_hchacha20_keybytes();
          r3.length !== h2 && f(n2, "invalid privateKey length"), o2 = d(r3), n2.push(o2);
          var p2 = null;
          null != a2 && (p2 = d(a2 = x(n2, a2, "constant")), a2.length, n2.push(p2));
          var i2 = new u(0 | t2._crypto_core_hchacha20_outputbytes()), v2 = i2.address;
          if (n2.push(v2), 0 == (0 | t2._crypto_core_hchacha20(v2, s2, o2, p2))) {
            var m2 = y(i2, _2);
            return g(n2), m2;
          }
          b(n2, "invalid usage");
        }
        function je(e3, r3, a2, _2) {
          var n2 = [];
          l(_2), e3 = x(n2, e3, "input");
          var s2, c2 = 0 | t2._crypto_core_hsalsa20_inputbytes();
          e3.length !== c2 && f(n2, "invalid input length"), s2 = d(e3), n2.push(s2), r3 = x(n2, r3, "privateKey");
          var o2, h2 = 0 | t2._crypto_core_hsalsa20_keybytes();
          r3.length !== h2 && f(n2, "invalid privateKey length"), o2 = d(r3), n2.push(o2);
          var p2 = null;
          null != a2 && (p2 = d(a2 = x(n2, a2, "constant")), a2.length, n2.push(p2));
          var i2 = new u(0 | t2._crypto_core_hsalsa20_outputbytes()), v2 = i2.address;
          if (n2.push(v2), 0 == (0 | t2._crypto_core_hsalsa20(v2, s2, o2, p2))) {
            var m2 = y(i2, _2);
            return g(n2), m2;
          }
          b(n2, "invalid usage");
        }
        function ze(e3, r3, a2) {
          var _2 = [];
          l(a2), e3 = x(_2, e3, "p");
          var n2, s2 = 0 | t2._crypto_core_ristretto255_bytes();
          e3.length !== s2 && f(_2, "invalid p length"), n2 = d(e3), _2.push(n2), r3 = x(_2, r3, "q");
          var c2, o2 = 0 | t2._crypto_core_ristretto255_bytes();
          r3.length !== o2 && f(_2, "invalid q length"), c2 = d(r3), _2.push(c2);
          var h2 = new u(0 | t2._crypto_core_ristretto255_bytes()), p2 = h2.address;
          if (_2.push(p2), 0 == (0 | t2._crypto_core_ristretto255_add(p2, n2, c2))) {
            var i2 = y(h2, a2);
            return g(_2), i2;
          }
          b(_2, "input is an invalid element");
        }
        function We(e3, r3) {
          var a2 = [];
          l(r3);
          var _2 = d(e3 = x(a2, e3, "r"));
          e3.length, a2.push(_2);
          var n2 = new u(0 | t2._crypto_core_ristretto255_bytes()), s2 = n2.address;
          if (a2.push(s2), 0 == (0 | t2._crypto_core_ristretto255_from_hash(s2, _2))) {
            var c2 = y(n2, r3);
            return g(a2), c2;
          }
          b(a2, "invalid usage");
        }
        function Je(e3, r3) {
          var a2 = [];
          l(r3), e3 = x(a2, e3, "repr");
          var _2, n2 = 0 | t2._crypto_core_ristretto255_bytes();
          e3.length !== n2 && f(a2, "invalid repr length"), _2 = d(e3), a2.push(_2);
          var s2 = 1 == (0 | t2._crypto_core_ristretto255_is_valid_point(_2));
          return g(a2), s2;
        }
        function Qe(e3) {
          var r3 = [];
          l(e3);
          var a2 = new u(0 | t2._crypto_core_ristretto255_bytes()), _2 = a2.address;
          r3.push(_2), t2._crypto_core_ristretto255_random(_2);
          var n2 = y(a2, e3);
          return g(r3), n2;
        }
        function Ze(e3, r3, a2) {
          var _2 = [];
          l(a2), e3 = x(_2, e3, "x");
          var n2, s2 = 0 | t2._crypto_core_ristretto255_scalarbytes();
          e3.length !== s2 && f(_2, "invalid x length"), n2 = d(e3), _2.push(n2), r3 = x(_2, r3, "y");
          var c2, o2 = 0 | t2._crypto_core_ristretto255_scalarbytes();
          r3.length !== o2 && f(_2, "invalid y length"), c2 = d(r3), _2.push(c2);
          var h2 = new u(0 | t2._crypto_core_ristretto255_scalarbytes()), p2 = h2.address;
          _2.push(p2), t2._crypto_core_ristretto255_scalar_add(p2, n2, c2);
          var i2 = y(h2, a2);
          return g(_2), i2;
        }
        function $e(e3, r3) {
          var a2 = [];
          l(r3), e3 = x(a2, e3, "s");
          var _2, n2 = 0 | t2._crypto_core_ristretto255_scalarbytes();
          e3.length !== n2 && f(a2, "invalid s length"), _2 = d(e3), a2.push(_2);
          var s2 = new u(0 | t2._crypto_core_ristretto255_scalarbytes()), c2 = s2.address;
          a2.push(c2), t2._crypto_core_ristretto255_scalar_complement(c2, _2);
          var o2 = y(s2, r3);
          return g(a2), o2;
        }
        function er(e3, r3) {
          var a2 = [];
          l(r3), e3 = x(a2, e3, "s");
          var _2, n2 = 0 | t2._crypto_core_ristretto255_scalarbytes();
          e3.length !== n2 && f(a2, "invalid s length"), _2 = d(e3), a2.push(_2);
          var s2 = new u(0 | t2._crypto_core_ristretto255_scalarbytes()), c2 = s2.address;
          if (a2.push(c2), 0 == (0 | t2._crypto_core_ristretto255_scalar_invert(c2, _2))) {
            var o2 = y(s2, r3);
            return g(a2), o2;
          }
          b(a2, "invalid reciprocate");
        }
        function rr(e3, r3, a2) {
          var _2 = [];
          l(a2), e3 = x(_2, e3, "x");
          var n2, s2 = 0 | t2._crypto_core_ristretto255_scalarbytes();
          e3.length !== s2 && f(_2, "invalid x length"), n2 = d(e3), _2.push(n2), r3 = x(_2, r3, "y");
          var c2, o2 = 0 | t2._crypto_core_ristretto255_scalarbytes();
          r3.length !== o2 && f(_2, "invalid y length"), c2 = d(r3), _2.push(c2);
          var h2 = new u(0 | t2._crypto_core_ristretto255_scalarbytes()), p2 = h2.address;
          _2.push(p2), t2._crypto_core_ristretto255_scalar_mul(p2, n2, c2);
          var i2 = y(h2, a2);
          return g(_2), i2;
        }
        function tr(e3, r3) {
          var a2 = [];
          l(r3), e3 = x(a2, e3, "s");
          var _2, n2 = 0 | t2._crypto_core_ristretto255_scalarbytes();
          e3.length !== n2 && f(a2, "invalid s length"), _2 = d(e3), a2.push(_2);
          var s2 = new u(0 | t2._crypto_core_ristretto255_scalarbytes()), c2 = s2.address;
          a2.push(c2), t2._crypto_core_ristretto255_scalar_negate(c2, _2);
          var o2 = y(s2, r3);
          return g(a2), o2;
        }
        function ar(e3) {
          var r3 = [];
          l(e3);
          var a2 = new u(0 | t2._crypto_core_ristretto255_scalarbytes()), _2 = a2.address;
          r3.push(_2), t2._crypto_core_ristretto255_scalar_random(_2);
          var n2 = y(a2, e3);
          return g(r3), n2;
        }
        function _r(e3, r3) {
          var a2 = [];
          l(r3), e3 = x(a2, e3, "sample");
          var _2, n2 = 0 | t2._crypto_core_ristretto255_nonreducedscalarbytes();
          e3.length !== n2 && f(a2, "invalid sample length"), _2 = d(e3), a2.push(_2);
          var s2 = new u(0 | t2._crypto_core_ristretto255_scalarbytes()), c2 = s2.address;
          a2.push(c2), t2._crypto_core_ristretto255_scalar_reduce(c2, _2);
          var o2 = y(s2, r3);
          return g(a2), o2;
        }
        function nr(e3, r3, a2) {
          var _2 = [];
          l(a2), e3 = x(_2, e3, "x");
          var n2, s2 = 0 | t2._crypto_core_ristretto255_scalarbytes();
          e3.length !== s2 && f(_2, "invalid x length"), n2 = d(e3), _2.push(n2), r3 = x(_2, r3, "y");
          var c2, o2 = 0 | t2._crypto_core_ristretto255_scalarbytes();
          r3.length !== o2 && f(_2, "invalid y length"), c2 = d(r3), _2.push(c2);
          var h2 = new u(0 | t2._crypto_core_ristretto255_scalarbytes()), p2 = h2.address;
          _2.push(p2), t2._crypto_core_ristretto255_scalar_sub(p2, n2, c2);
          var i2 = y(h2, a2);
          return g(_2), i2;
        }
        function sr(e3, r3, a2) {
          var _2 = [];
          l(a2), e3 = x(_2, e3, "p");
          var n2, s2 = 0 | t2._crypto_core_ristretto255_bytes();
          e3.length !== s2 && f(_2, "invalid p length"), n2 = d(e3), _2.push(n2), r3 = x(_2, r3, "q");
          var c2, o2 = 0 | t2._crypto_core_ristretto255_bytes();
          r3.length !== o2 && f(_2, "invalid q length"), c2 = d(r3), _2.push(c2);
          var h2 = new u(0 | t2._crypto_core_ristretto255_bytes()), p2 = h2.address;
          if (_2.push(p2), 0 == (0 | t2._crypto_core_ristretto255_sub(p2, n2, c2))) {
            var i2 = y(h2, a2);
            return g(_2), i2;
          }
          b(_2, "input is an invalid element");
        }
        function cr(e3, r3, a2, _2) {
          var n2 = [];
          l(_2), m(n2, e3, "hash_length"), ("number" != typeof e3 || (0 | e3) !== e3 || e3 < 0) && f(n2, "hash_length must be an unsigned integer");
          var s2 = d(r3 = x(n2, r3, "message")), c2 = r3.length;
          n2.push(s2);
          var o2 = null, h2 = 0;
          null != a2 && (o2 = d(a2 = x(n2, a2, "key")), h2 = a2.length, n2.push(o2));
          var p2 = new u(e3 |= 0), i2 = p2.address;
          if (n2.push(i2), 0 == (0 | t2._crypto_generichash(i2, e3, s2, c2, 0, o2, h2))) {
            var v2 = y(p2, _2);
            return g(n2), v2;
          }
          b(n2, "invalid usage");
        }
        function or(e3, r3, a2, _2, n2) {
          var s2 = [];
          l(n2), m(s2, e3, "subkey_len"), ("number" != typeof e3 || (0 | e3) !== e3 || e3 < 0) && f(s2, "subkey_len must be an unsigned integer");
          var c2 = null, o2 = 0;
          null != r3 && (c2 = d(r3 = x(s2, r3, "key")), o2 = r3.length, s2.push(c2));
          var h2 = null, p2 = 0;
          null != a2 && (a2 = x(s2, a2, "id"), p2 = 0 | t2._crypto_generichash_blake2b_saltbytes(), a2.length !== p2 && f(s2, "invalid id length"), h2 = d(a2), s2.push(h2));
          var i2 = null, v2 = 0;
          null != _2 && (_2 = x(s2, _2, "ctx"), v2 = 0 | t2._crypto_generichash_blake2b_personalbytes(), _2.length !== v2 && f(s2, "invalid ctx length"), i2 = d(_2), s2.push(i2));
          var E2 = new u(0 | e3), k2 = E2.address;
          if (s2.push(k2), 0 == (0 | t2._crypto_generichash_blake2b_salt_personal(k2, e3, null, 0, 0, c2, o2, h2, i2))) {
            var S2 = y(E2, n2);
            return g(s2), S2;
          }
          b(s2, "invalid usage");
        }
        function hr(e3, r3, a2) {
          var _2 = [];
          l(a2), m(_2, e3, "state_address"), m(_2, r3, "hash_length"), ("number" != typeof r3 || (0 | r3) !== r3 || r3 < 0) && f(_2, "hash_length must be an unsigned integer");
          var n2 = new u(r3 |= 0), s2 = n2.address;
          if (_2.push(s2), 0 == (0 | t2._crypto_generichash_final(e3, s2, r3))) {
            var c2 = (t2._free(e3), y(n2, a2));
            return g(_2), c2;
          }
          b(_2, "invalid usage");
        }
        function pr(e3, r3, a2) {
          var _2 = [];
          l(a2);
          var n2 = null, s2 = 0;
          null != e3 && (n2 = d(e3 = x(_2, e3, "key")), s2 = e3.length, _2.push(n2)), m(_2, r3, "hash_length"), ("number" != typeof r3 || (0 | r3) !== r3 || r3 < 0) && f(_2, "hash_length must be an unsigned integer");
          var c2 = new u(357).address;
          if (0 == (0 | t2._crypto_generichash_init(c2, n2, s2, r3))) {
            var o2 = c2;
            return g(_2), o2;
          }
          b(_2, "invalid usage");
        }
        function yr(e3) {
          var r3 = [];
          l(e3);
          var a2 = new u(0 | t2._crypto_generichash_keybytes()), _2 = a2.address;
          r3.push(_2), t2._crypto_generichash_keygen(_2);
          var n2 = y(a2, e3);
          return g(r3), n2;
        }
        function ir(e3, r3, a2) {
          var _2 = [];
          l(a2), m(_2, e3, "state_address");
          var n2 = d(r3 = x(_2, r3, "message_chunk")), s2 = r3.length;
          _2.push(n2), 0 != (0 | t2._crypto_generichash_update(e3, n2, s2)) && b(_2, "invalid usage"), g(_2);
        }
        function lr(e3, r3) {
          var a2 = [];
          l(r3);
          var _2 = d(e3 = x(a2, e3, "message")), n2 = e3.length;
          a2.push(_2);
          var s2 = new u(0 | t2._crypto_hash_bytes()), c2 = s2.address;
          if (a2.push(c2), 0 == (0 | t2._crypto_hash(c2, _2, n2, 0))) {
            var o2 = y(s2, r3);
            return g(a2), o2;
          }
          b(a2, "invalid usage");
        }
        function ur(e3, r3) {
          var a2 = [];
          l(r3);
          var _2 = d(e3 = x(a2, e3, "message")), n2 = e3.length;
          a2.push(_2);
          var s2 = new u(0 | t2._crypto_hash_sha256_bytes()), c2 = s2.address;
          if (a2.push(c2), 0 == (0 | t2._crypto_hash_sha256(c2, _2, n2, 0))) {
            var o2 = y(s2, r3);
            return g(a2), o2;
          }
          b(a2, "invalid usage");
        }
        function dr(e3, r3) {
          var a2 = [];
          l(r3), m(a2, e3, "state_address");
          var _2 = new u(0 | t2._crypto_hash_sha256_bytes()), n2 = _2.address;
          if (a2.push(n2), 0 == (0 | t2._crypto_hash_sha256_final(e3, n2))) {
            var s2 = (t2._free(e3), y(_2, r3));
            return g(a2), s2;
          }
          b(a2, "invalid usage");
        }
        function vr(e3) {
          var r3 = [];
          l(e3);
          var a2 = new u(104).address;
          if (0 == (0 | t2._crypto_hash_sha256_init(a2))) {
            var _2 = a2;
            return g(r3), _2;
          }
          b(r3, "invalid usage");
        }
        function gr(e3, r3, a2) {
          var _2 = [];
          l(a2), m(_2, e3, "state_address");
          var n2 = d(r3 = x(_2, r3, "message_chunk")), s2 = r3.length;
          _2.push(n2), 0 != (0 | t2._crypto_hash_sha256_update(e3, n2, s2)) && b(_2, "invalid usage"), g(_2);
        }
        function br(e3, r3) {
          var a2 = [];
          l(r3);
          var _2 = d(e3 = x(a2, e3, "message")), n2 = e3.length;
          a2.push(_2);
          var s2 = new u(0 | t2._crypto_hash_sha512_bytes()), c2 = s2.address;
          if (a2.push(c2), 0 == (0 | t2._crypto_hash_sha512(c2, _2, n2, 0))) {
            var o2 = y(s2, r3);
            return g(a2), o2;
          }
          b(a2, "invalid usage");
        }
        function fr(e3, r3) {
          var a2 = [];
          l(r3), m(a2, e3, "state_address");
          var _2 = new u(0 | t2._crypto_hash_sha512_bytes()), n2 = _2.address;
          if (a2.push(n2), 0 == (0 | t2._crypto_hash_sha512_final(e3, n2))) {
            var s2 = (t2._free(e3), y(_2, r3));
            return g(a2), s2;
          }
          b(a2, "invalid usage");
        }
        function mr(e3) {
          var r3 = [];
          l(e3);
          var a2 = new u(208).address;
          if (0 == (0 | t2._crypto_hash_sha512_init(a2))) {
            var _2 = a2;
            return g(r3), _2;
          }
          b(r3, "invalid usage");
        }
        function xr(e3, r3, a2) {
          var _2 = [];
          l(a2), m(_2, e3, "state_address");
          var n2 = d(r3 = x(_2, r3, "message_chunk")), s2 = r3.length;
          _2.push(n2), 0 != (0 | t2._crypto_hash_sha512_update(e3, n2, s2)) && b(_2, "invalid usage"), g(_2);
        }
        function Er(e3, r3, a2, _2, s2) {
          var c2 = [];
          l(s2), m(c2, e3, "subkey_len"), ("number" != typeof e3 || (0 | e3) !== e3 || e3 < 0) && f(c2, "subkey_len must be an unsigned integer"), m(c2, r3, "subkey_id"), ("number" != typeof r3 || (0 | r3) !== r3 || r3 < 0) && f(c2, "subkey_id must be an unsigned integer"), "string" != typeof a2 && f(c2, "ctx must be a string"), a2 = n(a2 + "\0"), null != h2 && a2.length - 1 !== h2 && f(c2, "invalid ctx length");
          var o2 = d(a2), h2 = a2.length - 1;
          c2.push(o2), _2 = x(c2, _2, "key");
          var p2, i2 = 0 | t2._crypto_kdf_keybytes();
          _2.length !== i2 && f(c2, "invalid key length"), p2 = d(_2), c2.push(p2);
          var v2 = new u(0 | e3), b2 = v2.address;
          c2.push(b2), t2._crypto_kdf_derive_from_key(b2, e3, r3, r3 >>> 24 >>> 8, o2, p2);
          var E2 = y(v2, s2);
          return g(c2), E2;
        }
        function kr(e3) {
          var r3 = [];
          l(e3);
          var a2 = new u(0 | t2._crypto_kdf_keybytes()), _2 = a2.address;
          r3.push(_2), t2._crypto_kdf_keygen(_2);
          var n2 = y(a2, e3);
          return g(r3), n2;
        }
        function Sr(e3, r3, a2, _2) {
          var n2 = [];
          l(_2), e3 = x(n2, e3, "clientPublicKey");
          var s2, c2 = 0 | t2._crypto_kx_publickeybytes();
          e3.length !== c2 && f(n2, "invalid clientPublicKey length"), s2 = d(e3), n2.push(s2), r3 = x(n2, r3, "clientSecretKey");
          var o2, h2 = 0 | t2._crypto_kx_secretkeybytes();
          r3.length !== h2 && f(n2, "invalid clientSecretKey length"), o2 = d(r3), n2.push(o2), a2 = x(n2, a2, "serverPublicKey");
          var p2, i2 = 0 | t2._crypto_kx_publickeybytes();
          a2.length !== i2 && f(n2, "invalid serverPublicKey length"), p2 = d(a2), n2.push(p2);
          var v2 = new u(0 | t2._crypto_kx_sessionkeybytes()), m2 = v2.address;
          n2.push(m2);
          var E2 = new u(0 | t2._crypto_kx_sessionkeybytes()), k2 = E2.address;
          if (n2.push(k2), 0 == (0 | t2._crypto_kx_client_session_keys(m2, k2, s2, o2, p2))) {
            var S2 = y({ sharedRx: v2, sharedTx: E2 }, _2);
            return g(n2), S2;
          }
          b(n2, "invalid usage");
        }
        function Tr(e3) {
          var r3 = [];
          l(e3);
          var a2 = new u(0 | t2._crypto_kx_publickeybytes()), _2 = a2.address;
          r3.push(_2);
          var n2 = new u(0 | t2._crypto_kx_secretkeybytes()), s2 = n2.address;
          if (r3.push(s2), 0 == (0 | t2._crypto_kx_keypair(_2, s2))) {
            var c2 = { publicKey: y(a2, e3), privateKey: y(n2, e3), keyType: "x25519" };
            return g(r3), c2;
          }
          b(r3, "internal error");
        }
        function wr(e3, r3) {
          var a2 = [];
          l(r3), e3 = x(a2, e3, "seed");
          var _2, n2 = 0 | t2._crypto_kx_seedbytes();
          e3.length !== n2 && f(a2, "invalid seed length"), _2 = d(e3), a2.push(_2);
          var s2 = new u(0 | t2._crypto_kx_publickeybytes()), c2 = s2.address;
          a2.push(c2);
          var o2 = new u(0 | t2._crypto_kx_secretkeybytes()), h2 = o2.address;
          if (a2.push(h2), 0 == (0 | t2._crypto_kx_seed_keypair(c2, h2, _2))) {
            var p2 = { publicKey: y(s2, r3), privateKey: y(o2, r3), keyType: "x25519" };
            return g(a2), p2;
          }
          b(a2, "internal error");
        }
        function Yr(e3, r3, a2, _2) {
          var n2 = [];
          l(_2), e3 = x(n2, e3, "serverPublicKey");
          var s2, c2 = 0 | t2._crypto_kx_publickeybytes();
          e3.length !== c2 && f(n2, "invalid serverPublicKey length"), s2 = d(e3), n2.push(s2), r3 = x(n2, r3, "serverSecretKey");
          var o2, h2 = 0 | t2._crypto_kx_secretkeybytes();
          r3.length !== h2 && f(n2, "invalid serverSecretKey length"), o2 = d(r3), n2.push(o2), a2 = x(n2, a2, "clientPublicKey");
          var p2, i2 = 0 | t2._crypto_kx_publickeybytes();
          a2.length !== i2 && f(n2, "invalid clientPublicKey length"), p2 = d(a2), n2.push(p2);
          var v2 = new u(0 | t2._crypto_kx_sessionkeybytes()), m2 = v2.address;
          n2.push(m2);
          var E2 = new u(0 | t2._crypto_kx_sessionkeybytes()), k2 = E2.address;
          if (n2.push(k2), 0 == (0 | t2._crypto_kx_server_session_keys(m2, k2, s2, o2, p2))) {
            var S2 = y({ sharedRx: v2, sharedTx: E2 }, _2);
            return g(n2), S2;
          }
          b(n2, "invalid usage");
        }
        function Br(e3, r3, a2) {
          var _2 = [];
          l(a2);
          var n2 = d(e3 = x(_2, e3, "message")), s2 = e3.length;
          _2.push(n2), r3 = x(_2, r3, "key");
          var c2, o2 = 0 | t2._crypto_onetimeauth_keybytes();
          r3.length !== o2 && f(_2, "invalid key length"), c2 = d(r3), _2.push(c2);
          var h2 = new u(0 | t2._crypto_onetimeauth_bytes()), p2 = h2.address;
          if (_2.push(p2), 0 == (0 | t2._crypto_onetimeauth(p2, n2, s2, 0, c2))) {
            var i2 = y(h2, a2);
            return g(_2), i2;
          }
          b(_2, "invalid usage");
        }
        function Ar(e3, r3) {
          var a2 = [];
          l(r3), m(a2, e3, "state_address");
          var _2 = new u(0 | t2._crypto_onetimeauth_bytes()), n2 = _2.address;
          if (a2.push(n2), 0 == (0 | t2._crypto_onetimeauth_final(e3, n2))) {
            var s2 = (t2._free(e3), y(_2, r3));
            return g(a2), s2;
          }
          b(a2, "invalid usage");
        }
        function Kr(e3, r3) {
          var a2 = [];
          l(r3);
          var _2 = null;
          null != e3 && (_2 = d(e3 = x(a2, e3, "key")), e3.length, a2.push(_2));
          var n2 = new u(144).address;
          if (0 == (0 | t2._crypto_onetimeauth_init(n2, _2))) {
            var s2 = n2;
            return g(a2), s2;
          }
          b(a2, "invalid usage");
        }
        function Mr(e3) {
          var r3 = [];
          l(e3);
          var a2 = new u(0 | t2._crypto_onetimeauth_keybytes()), _2 = a2.address;
          r3.push(_2), t2._crypto_onetimeauth_keygen(_2);
          var n2 = y(a2, e3);
          return g(r3), n2;
        }
        function Ir(e3, r3, a2) {
          var _2 = [];
          l(a2), m(_2, e3, "state_address");
          var n2 = d(r3 = x(_2, r3, "message_chunk")), s2 = r3.length;
          _2.push(n2), 0 != (0 | t2._crypto_onetimeauth_update(e3, n2, s2)) && b(_2, "invalid usage"), g(_2);
        }
        function Nr(e3, r3, a2) {
          var _2 = [];
          e3 = x(_2, e3, "hash");
          var n2, s2 = 0 | t2._crypto_onetimeauth_bytes();
          e3.length !== s2 && f(_2, "invalid hash length"), n2 = d(e3), _2.push(n2);
          var c2 = d(r3 = x(_2, r3, "message")), o2 = r3.length;
          _2.push(c2), a2 = x(_2, a2, "key");
          var h2, p2 = 0 | t2._crypto_onetimeauth_keybytes();
          a2.length !== p2 && f(_2, "invalid key length"), h2 = d(a2), _2.push(h2);
          var y2 = 0 == (0 | t2._crypto_onetimeauth_verify(n2, c2, o2, 0, h2));
          return g(_2), y2;
        }
        function Lr(e3, r3, a2, _2, n2, s2, c2) {
          var o2 = [];
          l(c2), m(o2, e3, "keyLength"), ("number" != typeof e3 || (0 | e3) !== e3 || e3 < 0) && f(o2, "keyLength must be an unsigned integer");
          var h2 = d(r3 = x(o2, r3, "password")), p2 = r3.length;
          o2.push(h2), a2 = x(o2, a2, "salt");
          var i2, v2 = 0 | t2._crypto_pwhash_saltbytes();
          a2.length !== v2 && f(o2, "invalid salt length"), i2 = d(a2), o2.push(i2), m(o2, _2, "opsLimit"), ("number" != typeof _2 || (0 | _2) !== _2 || _2 < 0) && f(o2, "opsLimit must be an unsigned integer"), m(o2, n2, "memLimit"), ("number" != typeof n2 || (0 | n2) !== n2 || n2 < 0) && f(o2, "memLimit must be an unsigned integer"), m(o2, s2, "algorithm"), ("number" != typeof s2 || (0 | s2) !== s2 || s2 < 0) && f(o2, "algorithm must be an unsigned integer");
          var E2 = new u(0 | e3), k2 = E2.address;
          if (o2.push(k2), 0 == (0 | t2._crypto_pwhash(k2, e3, 0, h2, p2, 0, i2, _2, 0, n2, s2))) {
            var S2 = y(E2, c2);
            return g(o2), S2;
          }
          b(o2, "invalid usage");
        }
        function Ur(e3, r3, a2, _2, n2, s2) {
          var c2 = [];
          l(s2), m(c2, e3, "keyLength"), ("number" != typeof e3 || (0 | e3) !== e3 || e3 < 0) && f(c2, "keyLength must be an unsigned integer");
          var o2 = d(r3 = x(c2, r3, "password")), h2 = r3.length;
          c2.push(o2), a2 = x(c2, a2, "salt");
          var p2, i2 = 0 | t2._crypto_pwhash_scryptsalsa208sha256_saltbytes();
          a2.length !== i2 && f(c2, "invalid salt length"), p2 = d(a2), c2.push(p2), m(c2, _2, "opsLimit"), ("number" != typeof _2 || (0 | _2) !== _2 || _2 < 0) && f(c2, "opsLimit must be an unsigned integer"), m(c2, n2, "memLimit"), ("number" != typeof n2 || (0 | n2) !== n2 || n2 < 0) && f(c2, "memLimit must be an unsigned integer");
          var v2 = new u(0 | e3), E2 = v2.address;
          if (c2.push(E2), 0 == (0 | t2._crypto_pwhash_scryptsalsa208sha256(E2, e3, 0, o2, h2, 0, p2, _2, 0, n2))) {
            var k2 = y(v2, s2);
            return g(c2), k2;
          }
          b(c2, "invalid usage");
        }
        function Or(e3, r3, a2, _2, n2, s2, c2) {
          var o2 = [];
          l(c2);
          var h2 = d(e3 = x(o2, e3, "password")), p2 = e3.length;
          o2.push(h2);
          var i2 = d(r3 = x(o2, r3, "salt")), v2 = r3.length;
          o2.push(i2), m(o2, a2, "opsLimit"), ("number" != typeof a2 || (0 | a2) !== a2 || a2 < 0) && f(o2, "opsLimit must be an unsigned integer"), m(o2, _2, "r"), ("number" != typeof _2 || (0 | _2) !== _2 || _2 < 0) && f(o2, "r must be an unsigned integer"), m(o2, n2, "p"), ("number" != typeof n2 || (0 | n2) !== n2 || n2 < 0) && f(o2, "p must be an unsigned integer"), m(o2, s2, "keyLength"), ("number" != typeof s2 || (0 | s2) !== s2 || s2 < 0) && f(o2, "keyLength must be an unsigned integer");
          var E2 = new u(0 | s2), k2 = E2.address;
          if (o2.push(k2), 0 == (0 | t2._crypto_pwhash_scryptsalsa208sha256_ll(h2, p2, i2, v2, a2, 0, _2, n2, k2, s2))) {
            var S2 = y(E2, c2);
            return g(o2), S2;
          }
          b(o2, "invalid usage");
        }
        function Cr(e3, r3, a2, _2) {
          var n2 = [];
          l(_2);
          var s2 = d(e3 = x(n2, e3, "password")), c2 = e3.length;
          n2.push(s2), m(n2, r3, "opsLimit"), ("number" != typeof r3 || (0 | r3) !== r3 || r3 < 0) && f(n2, "opsLimit must be an unsigned integer"), m(n2, a2, "memLimit"), ("number" != typeof a2 || (0 | a2) !== a2 || a2 < 0) && f(n2, "memLimit must be an unsigned integer");
          var o2 = new u(0 | t2._crypto_pwhash_scryptsalsa208sha256_strbytes()).address;
          if (n2.push(o2), 0 == (0 | t2._crypto_pwhash_scryptsalsa208sha256_str(o2, s2, c2, 0, r3, 0, a2))) {
            var h2 = t2.UTF8ToString(o2);
            return g(n2), h2;
          }
          b(n2, "invalid usage");
        }
        function Rr(e3, r3, a2) {
          var _2 = [];
          l(a2), "string" != typeof e3 && f(_2, "hashed_password must be a string"), e3 = n(e3 + "\0"), null != c2 && e3.length - 1 !== c2 && f(_2, "invalid hashed_password length");
          var s2 = d(e3), c2 = e3.length - 1;
          _2.push(s2);
          var o2 = d(r3 = x(_2, r3, "password")), h2 = r3.length;
          _2.push(o2);
          var p2 = 0 == (0 | t2._crypto_pwhash_scryptsalsa208sha256_str_verify(s2, o2, h2, 0));
          return g(_2), p2;
        }
        function Pr(e3, r3, a2, _2) {
          var n2 = [];
          l(_2);
          var s2 = d(e3 = x(n2, e3, "password")), c2 = e3.length;
          n2.push(s2), m(n2, r3, "opsLimit"), ("number" != typeof r3 || (0 | r3) !== r3 || r3 < 0) && f(n2, "opsLimit must be an unsigned integer"), m(n2, a2, "memLimit"), ("number" != typeof a2 || (0 | a2) !== a2 || a2 < 0) && f(n2, "memLimit must be an unsigned integer");
          var o2 = new u(0 | t2._crypto_pwhash_strbytes()).address;
          if (n2.push(o2), 0 == (0 | t2._crypto_pwhash_str(o2, s2, c2, 0, r3, 0, a2))) {
            var h2 = t2.UTF8ToString(o2);
            return g(n2), h2;
          }
          b(n2, "invalid usage");
        }
        function Gr(e3, r3, a2, _2) {
          var s2 = [];
          l(_2), "string" != typeof e3 && f(s2, "hashed_password must be a string"), e3 = n(e3 + "\0"), null != o2 && e3.length - 1 !== o2 && f(s2, "invalid hashed_password length");
          var c2 = d(e3), o2 = e3.length - 1;
          s2.push(c2), m(s2, r3, "opsLimit"), ("number" != typeof r3 || (0 | r3) !== r3 || r3 < 0) && f(s2, "opsLimit must be an unsigned integer"), m(s2, a2, "memLimit"), ("number" != typeof a2 || (0 | a2) !== a2 || a2 < 0) && f(s2, "memLimit must be an unsigned integer");
          var h2 = 0 != (0 | t2._crypto_pwhash_str_needs_rehash(c2, r3, 0, a2));
          return g(s2), h2;
        }
        function Xr(e3, r3, a2) {
          var _2 = [];
          l(a2), "string" != typeof e3 && f(_2, "hashed_password must be a string"), e3 = n(e3 + "\0"), null != c2 && e3.length - 1 !== c2 && f(_2, "invalid hashed_password length");
          var s2 = d(e3), c2 = e3.length - 1;
          _2.push(s2);
          var o2 = d(r3 = x(_2, r3, "password")), h2 = r3.length;
          _2.push(o2);
          var p2 = 0 == (0 | t2._crypto_pwhash_str_verify(s2, o2, h2, 0));
          return g(_2), p2;
        }
        function Dr(e3, r3, a2) {
          var _2 = [];
          l(a2), e3 = x(_2, e3, "privateKey");
          var n2, s2 = 0 | t2._crypto_scalarmult_scalarbytes();
          e3.length !== s2 && f(_2, "invalid privateKey length"), n2 = d(e3), _2.push(n2), r3 = x(_2, r3, "publicKey");
          var c2, o2 = 0 | t2._crypto_scalarmult_bytes();
          r3.length !== o2 && f(_2, "invalid publicKey length"), c2 = d(r3), _2.push(c2);
          var h2 = new u(0 | t2._crypto_scalarmult_bytes()), p2 = h2.address;
          if (_2.push(p2), 0 == (0 | t2._crypto_scalarmult(p2, n2, c2))) {
            var i2 = y(h2, a2);
            return g(_2), i2;
          }
          b(_2, "weak public key");
        }
        function Fr(e3, r3) {
          var a2 = [];
          l(r3), e3 = x(a2, e3, "privateKey");
          var _2, n2 = 0 | t2._crypto_scalarmult_scalarbytes();
          e3.length !== n2 && f(a2, "invalid privateKey length"), _2 = d(e3), a2.push(_2);
          var s2 = new u(0 | t2._crypto_scalarmult_bytes()), c2 = s2.address;
          if (a2.push(c2), 0 == (0 | t2._crypto_scalarmult_base(c2, _2))) {
            var o2 = y(s2, r3);
            return g(a2), o2;
          }
          b(a2, "unknown error");
        }
        function Vr(e3, r3, a2) {
          var _2 = [];
          l(a2), e3 = x(_2, e3, "n");
          var n2, s2 = 0 | t2._crypto_scalarmult_ed25519_scalarbytes();
          e3.length !== s2 && f(_2, "invalid n length"), n2 = d(e3), _2.push(n2), r3 = x(_2, r3, "p");
          var c2, o2 = 0 | t2._crypto_scalarmult_ed25519_bytes();
          r3.length !== o2 && f(_2, "invalid p length"), c2 = d(r3), _2.push(c2);
          var h2 = new u(0 | t2._crypto_scalarmult_ed25519_bytes()), p2 = h2.address;
          if (_2.push(p2), 0 == (0 | t2._crypto_scalarmult_ed25519(p2, n2, c2))) {
            var i2 = y(h2, a2);
            return g(_2), i2;
          }
          b(_2, "invalid point or scalar is 0");
        }
        function Hr(e3, r3) {
          var a2 = [];
          l(r3), e3 = x(a2, e3, "scalar");
          var _2, n2 = 0 | t2._crypto_scalarmult_ed25519_scalarbytes();
          e3.length !== n2 && f(a2, "invalid scalar length"), _2 = d(e3), a2.push(_2);
          var s2 = new u(0 | t2._crypto_scalarmult_ed25519_bytes()), c2 = s2.address;
          if (a2.push(c2), 0 == (0 | t2._crypto_scalarmult_ed25519_base(c2, _2))) {
            var o2 = y(s2, r3);
            return g(a2), o2;
          }
          b(a2, "scalar is 0");
        }
        function qr(e3, r3) {
          var a2 = [];
          l(r3), e3 = x(a2, e3, "scalar");
          var _2, n2 = 0 | t2._crypto_scalarmult_ed25519_scalarbytes();
          e3.length !== n2 && f(a2, "invalid scalar length"), _2 = d(e3), a2.push(_2);
          var s2 = new u(0 | t2._crypto_scalarmult_ed25519_bytes()), c2 = s2.address;
          if (a2.push(c2), 0 == (0 | t2._crypto_scalarmult_ed25519_base_noclamp(c2, _2))) {
            var o2 = y(s2, r3);
            return g(a2), o2;
          }
          b(a2, "scalar is 0");
        }
        function jr(e3, r3, a2) {
          var _2 = [];
          l(a2), e3 = x(_2, e3, "n");
          var n2, s2 = 0 | t2._crypto_scalarmult_ed25519_scalarbytes();
          e3.length !== s2 && f(_2, "invalid n length"), n2 = d(e3), _2.push(n2), r3 = x(_2, r3, "p");
          var c2, o2 = 0 | t2._crypto_scalarmult_ed25519_bytes();
          r3.length !== o2 && f(_2, "invalid p length"), c2 = d(r3), _2.push(c2);
          var h2 = new u(0 | t2._crypto_scalarmult_ed25519_bytes()), p2 = h2.address;
          if (_2.push(p2), 0 == (0 | t2._crypto_scalarmult_ed25519_noclamp(p2, n2, c2))) {
            var i2 = y(h2, a2);
            return g(_2), i2;
          }
          b(_2, "invalid point or scalar is 0");
        }
        function zr(e3, r3, a2) {
          var _2 = [];
          l(a2), e3 = x(_2, e3, "scalar");
          var n2, s2 = 0 | t2._crypto_scalarmult_ristretto255_scalarbytes();
          e3.length !== s2 && f(_2, "invalid scalar length"), n2 = d(e3), _2.push(n2), r3 = x(_2, r3, "element");
          var c2, o2 = 0 | t2._crypto_scalarmult_ristretto255_bytes();
          r3.length !== o2 && f(_2, "invalid element length"), c2 = d(r3), _2.push(c2);
          var h2 = new u(0 | t2._crypto_scalarmult_ristretto255_bytes()), p2 = h2.address;
          if (_2.push(p2), 0 == (0 | t2._crypto_scalarmult_ristretto255(p2, n2, c2))) {
            var i2 = y(h2, a2);
            return g(_2), i2;
          }
          b(_2, "result is identity element");
        }
        function Wr(e3, r3) {
          var a2 = [];
          l(r3), e3 = x(a2, e3, "scalar");
          var _2, n2 = 0 | t2._crypto_core_ristretto255_scalarbytes();
          e3.length !== n2 && f(a2, "invalid scalar length"), _2 = d(e3), a2.push(_2);
          var s2 = new u(0 | t2._crypto_core_ristretto255_bytes()), c2 = s2.address;
          if (a2.push(c2), 0 == (0 | t2._crypto_scalarmult_ristretto255_base(c2, _2))) {
            var o2 = y(s2, r3);
            return g(a2), o2;
          }
          b(a2, "scalar is 0");
        }
        function Jr(e3, r3, a2, _2) {
          var n2 = [];
          l(_2);
          var s2 = d(e3 = x(n2, e3, "message")), c2 = e3.length;
          n2.push(s2), r3 = x(n2, r3, "nonce");
          var o2, h2 = 0 | t2._crypto_secretbox_noncebytes();
          r3.length !== h2 && f(n2, "invalid nonce length"), o2 = d(r3), n2.push(o2), a2 = x(n2, a2, "key");
          var p2, i2 = 0 | t2._crypto_secretbox_keybytes();
          a2.length !== i2 && f(n2, "invalid key length"), p2 = d(a2), n2.push(p2);
          var v2 = new u(0 | c2), m2 = v2.address;
          n2.push(m2);
          var E2 = new u(0 | t2._crypto_secretbox_macbytes()), k2 = E2.address;
          if (n2.push(k2), 0 == (0 | t2._crypto_secretbox_detached(m2, k2, s2, c2, 0, o2, p2))) {
            var S2 = y({ mac: E2, cipher: v2 }, _2);
            return g(n2), S2;
          }
          b(n2, "invalid usage");
        }
        function Qr(e3, r3, a2, _2) {
          var n2 = [];
          l(_2);
          var s2 = d(e3 = x(n2, e3, "message")), c2 = e3.length;
          n2.push(s2), r3 = x(n2, r3, "nonce");
          var o2, h2 = 0 | t2._crypto_secretbox_noncebytes();
          r3.length !== h2 && f(n2, "invalid nonce length"), o2 = d(r3), n2.push(o2), a2 = x(n2, a2, "key");
          var p2, i2 = 0 | t2._crypto_secretbox_keybytes();
          a2.length !== i2 && f(n2, "invalid key length"), p2 = d(a2), n2.push(p2);
          var v2 = new u(c2 + t2._crypto_secretbox_macbytes() | 0), m2 = v2.address;
          if (n2.push(m2), 0 == (0 | t2._crypto_secretbox_easy(m2, s2, c2, 0, o2, p2))) {
            var E2 = y(v2, _2);
            return g(n2), E2;
          }
          b(n2, "invalid usage");
        }
        function Zr(e3) {
          var r3 = [];
          l(e3);
          var a2 = new u(0 | t2._crypto_secretbox_keybytes()), _2 = a2.address;
          r3.push(_2), t2._crypto_secretbox_keygen(_2);
          var n2 = y(a2, e3);
          return g(r3), n2;
        }
        function $r(e3, r3, a2, _2, n2) {
          var s2 = [];
          l(n2);
          var c2 = d(e3 = x(s2, e3, "ciphertext")), o2 = e3.length;
          s2.push(c2), r3 = x(s2, r3, "mac");
          var h2, p2 = 0 | t2._crypto_secretbox_macbytes();
          r3.length !== p2 && f(s2, "invalid mac length"), h2 = d(r3), s2.push(h2), a2 = x(s2, a2, "nonce");
          var i2, v2 = 0 | t2._crypto_secretbox_noncebytes();
          a2.length !== v2 && f(s2, "invalid nonce length"), i2 = d(a2), s2.push(i2), _2 = x(s2, _2, "key");
          var m2, E2 = 0 | t2._crypto_secretbox_keybytes();
          _2.length !== E2 && f(s2, "invalid key length"), m2 = d(_2), s2.push(m2);
          var k2 = new u(0 | o2), S2 = k2.address;
          if (s2.push(S2), 0 == (0 | t2._crypto_secretbox_open_detached(S2, c2, h2, o2, 0, i2, m2))) {
            var T2 = y(k2, n2);
            return g(s2), T2;
          }
          b(s2, "wrong secret key for the given ciphertext");
        }
        function et(e3, r3, a2, _2) {
          var n2 = [];
          l(_2), e3 = x(n2, e3, "ciphertext");
          var s2, c2 = t2._crypto_secretbox_macbytes(), o2 = e3.length;
          o2 < c2 && f(n2, "ciphertext is too short"), s2 = d(e3), n2.push(s2), r3 = x(n2, r3, "nonce");
          var h2, p2 = 0 | t2._crypto_secretbox_noncebytes();
          r3.length !== p2 && f(n2, "invalid nonce length"), h2 = d(r3), n2.push(h2), a2 = x(n2, a2, "key");
          var i2, v2 = 0 | t2._crypto_secretbox_keybytes();
          a2.length !== v2 && f(n2, "invalid key length"), i2 = d(a2), n2.push(i2);
          var m2 = new u(o2 - t2._crypto_secretbox_macbytes() | 0), E2 = m2.address;
          if (n2.push(E2), 0 == (0 | t2._crypto_secretbox_open_easy(E2, s2, o2, 0, h2, i2))) {
            var k2 = y(m2, _2);
            return g(n2), k2;
          }
          b(n2, "wrong secret key for the given ciphertext");
        }
        function rt(e3, r3, a2) {
          var _2 = [];
          l(a2), e3 = x(_2, e3, "header");
          var n2, s2 = 0 | t2._crypto_secretstream_xchacha20poly1305_headerbytes();
          e3.length !== s2 && f(_2, "invalid header length"), n2 = d(e3), _2.push(n2), r3 = x(_2, r3, "key");
          var c2, o2 = 0 | t2._crypto_secretstream_xchacha20poly1305_keybytes();
          r3.length !== o2 && f(_2, "invalid key length"), c2 = d(r3), _2.push(c2);
          var h2 = new u(52).address;
          if (0 == (0 | t2._crypto_secretstream_xchacha20poly1305_init_pull(h2, n2, c2))) {
            var p2 = h2;
            return g(_2), p2;
          }
          b(_2, "invalid usage");
        }
        function tt(e3, r3) {
          var a2 = [];
          l(r3), e3 = x(a2, e3, "key");
          var _2, n2 = 0 | t2._crypto_secretstream_xchacha20poly1305_keybytes();
          e3.length !== n2 && f(a2, "invalid key length"), _2 = d(e3), a2.push(_2);
          var s2 = new u(52).address, c2 = new u(0 | t2._crypto_secretstream_xchacha20poly1305_headerbytes()), o2 = c2.address;
          if (a2.push(o2), 0 == (0 | t2._crypto_secretstream_xchacha20poly1305_init_push(s2, o2, _2))) {
            var h2 = { state: s2, header: y(c2, r3) };
            return g(a2), h2;
          }
          b(a2, "invalid usage");
        }
        function at(e3) {
          var r3 = [];
          l(e3);
          var a2 = new u(0 | t2._crypto_secretstream_xchacha20poly1305_keybytes()), _2 = a2.address;
          r3.push(_2), t2._crypto_secretstream_xchacha20poly1305_keygen(_2);
          var n2 = y(a2, e3);
          return g(r3), n2;
        }
        function _t(e3, r3, a2, _2) {
          var n2 = [];
          l(_2), m(n2, e3, "state_address"), r3 = x(n2, r3, "cipher");
          var s2, c2 = t2._crypto_secretstream_xchacha20poly1305_abytes(), o2 = r3.length;
          o2 < c2 && f(n2, "cipher is too short"), s2 = d(r3), n2.push(s2);
          var h2 = null, p2 = 0;
          null != a2 && (h2 = d(a2 = x(n2, a2, "ad")), p2 = a2.length, n2.push(h2));
          var i2 = new u(o2 - t2._crypto_secretstream_xchacha20poly1305_abytes() | 0), b2 = i2.address;
          n2.push(b2);
          var E2, k2 = (E2 = v(1), n2.push(E2), (k2 = 0 === t2._crypto_secretstream_xchacha20poly1305_pull(e3, b2, 0, E2, s2, o2, 0, h2, p2) && { tag: t2.HEAPU8[E2], message: i2 }) && { message: y(k2.message, _2), tag: k2.tag });
          return g(n2), k2;
        }
        function nt(e3, r3, a2, _2, n2) {
          var s2 = [];
          l(n2), m(s2, e3, "state_address");
          var c2 = d(r3 = x(s2, r3, "message_chunk")), o2 = r3.length;
          s2.push(c2);
          var h2 = null, p2 = 0;
          null != a2 && (h2 = d(a2 = x(s2, a2, "ad")), p2 = a2.length, s2.push(h2)), m(s2, _2, "tag"), ("number" != typeof _2 || (0 | _2) !== _2 || _2 < 0) && f(s2, "tag must be an unsigned integer");
          var i2 = new u(o2 + t2._crypto_secretstream_xchacha20poly1305_abytes() | 0), v2 = i2.address;
          if (s2.push(v2), 0 == (0 | t2._crypto_secretstream_xchacha20poly1305_push(e3, v2, 0, c2, o2, 0, h2, p2, 0, _2))) {
            var E2 = y(i2, n2);
            return g(s2), E2;
          }
          b(s2, "invalid usage");
        }
        function st(e3, r3) {
          var a2 = [];
          return l(r3), m(a2, e3, "state_address"), t2._crypto_secretstream_xchacha20poly1305_rekey(e3), g(a2), true;
        }
        function ct(e3, r3, a2) {
          var _2 = [];
          l(a2);
          var n2 = d(e3 = x(_2, e3, "message")), s2 = e3.length;
          _2.push(n2), r3 = x(_2, r3, "key");
          var c2, o2 = 0 | t2._crypto_shorthash_keybytes();
          r3.length !== o2 && f(_2, "invalid key length"), c2 = d(r3), _2.push(c2);
          var h2 = new u(0 | t2._crypto_shorthash_bytes()), p2 = h2.address;
          if (_2.push(p2), 0 == (0 | t2._crypto_shorthash(p2, n2, s2, 0, c2))) {
            var i2 = y(h2, a2);
            return g(_2), i2;
          }
          b(_2, "invalid usage");
        }
        function ot(e3) {
          var r3 = [];
          l(e3);
          var a2 = new u(0 | t2._crypto_shorthash_keybytes()), _2 = a2.address;
          r3.push(_2), t2._crypto_shorthash_keygen(_2);
          var n2 = y(a2, e3);
          return g(r3), n2;
        }
        function ht(e3, r3, a2) {
          var _2 = [];
          l(a2);
          var n2 = d(e3 = x(_2, e3, "message")), s2 = e3.length;
          _2.push(n2), r3 = x(_2, r3, "key");
          var c2, o2 = 0 | t2._crypto_shorthash_siphashx24_keybytes();
          r3.length !== o2 && f(_2, "invalid key length"), c2 = d(r3), _2.push(c2);
          var h2 = new u(0 | t2._crypto_shorthash_siphashx24_bytes()), p2 = h2.address;
          if (_2.push(p2), 0 == (0 | t2._crypto_shorthash_siphashx24(p2, n2, s2, 0, c2))) {
            var i2 = y(h2, a2);
            return g(_2), i2;
          }
          b(_2, "invalid usage");
        }
        function pt(e3, r3, a2) {
          var _2 = [];
          l(a2);
          var n2 = d(e3 = x(_2, e3, "message")), s2 = e3.length;
          _2.push(n2), r3 = x(_2, r3, "privateKey");
          var c2, o2 = 0 | t2._crypto_sign_secretkeybytes();
          r3.length !== o2 && f(_2, "invalid privateKey length"), c2 = d(r3), _2.push(c2);
          var h2 = new u(e3.length + t2._crypto_sign_bytes() | 0), p2 = h2.address;
          if (_2.push(p2), 0 == (0 | t2._crypto_sign(p2, null, n2, s2, 0, c2))) {
            var i2 = y(h2, a2);
            return g(_2), i2;
          }
          b(_2, "invalid usage");
        }
        function yt(e3, r3, a2) {
          var _2 = [];
          l(a2);
          var n2 = d(e3 = x(_2, e3, "message")), s2 = e3.length;
          _2.push(n2), r3 = x(_2, r3, "privateKey");
          var c2, o2 = 0 | t2._crypto_sign_secretkeybytes();
          r3.length !== o2 && f(_2, "invalid privateKey length"), c2 = d(r3), _2.push(c2);
          var h2 = new u(0 | t2._crypto_sign_bytes()), p2 = h2.address;
          if (_2.push(p2), 0 == (0 | t2._crypto_sign_detached(p2, null, n2, s2, 0, c2))) {
            var i2 = y(h2, a2);
            return g(_2), i2;
          }
          b(_2, "invalid usage");
        }
        function it(e3, r3) {
          var a2 = [];
          l(r3), e3 = x(a2, e3, "edPk");
          var _2, n2 = 0 | t2._crypto_sign_publickeybytes();
          e3.length !== n2 && f(a2, "invalid edPk length"), _2 = d(e3), a2.push(_2);
          var s2 = new u(0 | t2._crypto_scalarmult_scalarbytes()), c2 = s2.address;
          if (a2.push(c2), 0 == (0 | t2._crypto_sign_ed25519_pk_to_curve25519(c2, _2))) {
            var o2 = y(s2, r3);
            return g(a2), o2;
          }
          b(a2, "invalid key");
        }
        function lt(e3, r3) {
          var a2 = [];
          l(r3), e3 = x(a2, e3, "edSk");
          var _2, n2 = 0 | t2._crypto_sign_secretkeybytes();
          e3.length !== n2 && f(a2, "invalid edSk length"), _2 = d(e3), a2.push(_2);
          var s2 = new u(0 | t2._crypto_scalarmult_scalarbytes()), c2 = s2.address;
          if (a2.push(c2), 0 == (0 | t2._crypto_sign_ed25519_sk_to_curve25519(c2, _2))) {
            var o2 = y(s2, r3);
            return g(a2), o2;
          }
          b(a2, "invalid key");
        }
        function ut(e3, r3) {
          var a2 = [];
          l(r3), e3 = x(a2, e3, "privateKey");
          var _2, n2 = 0 | t2._crypto_sign_secretkeybytes();
          e3.length !== n2 && f(a2, "invalid privateKey length"), _2 = d(e3), a2.push(_2);
          var s2 = new u(0 | t2._crypto_sign_publickeybytes()), c2 = s2.address;
          if (a2.push(c2), 0 == (0 | t2._crypto_sign_ed25519_sk_to_pk(c2, _2))) {
            var o2 = y(s2, r3);
            return g(a2), o2;
          }
          b(a2, "invalid key");
        }
        function dt(e3, r3) {
          var a2 = [];
          l(r3), e3 = x(a2, e3, "privateKey");
          var _2, n2 = 0 | t2._crypto_sign_secretkeybytes();
          e3.length !== n2 && f(a2, "invalid privateKey length"), _2 = d(e3), a2.push(_2);
          var s2 = new u(0 | t2._crypto_sign_seedbytes()), c2 = s2.address;
          if (a2.push(c2), 0 == (0 | t2._crypto_sign_ed25519_sk_to_seed(c2, _2))) {
            var o2 = y(s2, r3);
            return g(a2), o2;
          }
          b(a2, "invalid key");
        }
        function vt(e3, r3, a2) {
          var _2 = [];
          l(a2), m(_2, e3, "state_address"), r3 = x(_2, r3, "privateKey");
          var n2, s2 = 0 | t2._crypto_sign_secretkeybytes();
          r3.length !== s2 && f(_2, "invalid privateKey length"), n2 = d(r3), _2.push(n2);
          var c2 = new u(0 | t2._crypto_sign_bytes()), o2 = c2.address;
          if (_2.push(o2), 0 == (0 | t2._crypto_sign_final_create(e3, o2, null, n2))) {
            var h2 = (t2._free(e3), y(c2, a2));
            return g(_2), h2;
          }
          b(_2, "invalid usage");
        }
        function gt(e3, r3, a2, _2) {
          var n2 = [];
          l(_2), m(n2, e3, "state_address"), r3 = x(n2, r3, "signature");
          var s2, c2 = 0 | t2._crypto_sign_bytes();
          r3.length !== c2 && f(n2, "invalid signature length"), s2 = d(r3), n2.push(s2), a2 = x(n2, a2, "publicKey");
          var o2, h2 = 0 | t2._crypto_sign_publickeybytes();
          a2.length !== h2 && f(n2, "invalid publicKey length"), o2 = d(a2), n2.push(o2);
          var p2 = 0 == (0 | t2._crypto_sign_final_verify(e3, s2, o2));
          return g(n2), p2;
        }
        function bt(e3) {
          var r3 = [];
          l(e3);
          var a2 = new u(208).address;
          if (0 == (0 | t2._crypto_sign_init(a2))) {
            var _2 = a2;
            return g(r3), _2;
          }
          b(r3, "internal error");
        }
        function ft(e3) {
          var r3 = [];
          l(e3);
          var a2 = new u(0 | t2._crypto_sign_publickeybytes()), _2 = a2.address;
          r3.push(_2);
          var n2 = new u(0 | t2._crypto_sign_secretkeybytes()), s2 = n2.address;
          if (r3.push(s2), 0 == (0 | t2._crypto_sign_keypair(_2, s2))) {
            var c2 = { publicKey: y(a2, e3), privateKey: y(n2, e3), keyType: "ed25519" };
            return g(r3), c2;
          }
          b(r3, "internal error");
        }
        function mt(e3, r3, a2) {
          var _2 = [];
          l(a2), e3 = x(_2, e3, "signedMessage");
          var n2, s2 = t2._crypto_sign_bytes(), c2 = e3.length;
          c2 < s2 && f(_2, "signedMessage is too short"), n2 = d(e3), _2.push(n2), r3 = x(_2, r3, "publicKey");
          var o2, h2 = 0 | t2._crypto_sign_publickeybytes();
          r3.length !== h2 && f(_2, "invalid publicKey length"), o2 = d(r3), _2.push(o2);
          var p2 = new u(c2 - t2._crypto_sign_bytes() | 0), i2 = p2.address;
          if (_2.push(i2), 0 == (0 | t2._crypto_sign_open(i2, null, n2, c2, 0, o2))) {
            var v2 = y(p2, a2);
            return g(_2), v2;
          }
          b(_2, "incorrect signature for the given public key");
        }
        function xt(e3, r3) {
          var a2 = [];
          l(r3), e3 = x(a2, e3, "seed");
          var _2, n2 = 0 | t2._crypto_sign_seedbytes();
          e3.length !== n2 && f(a2, "invalid seed length"), _2 = d(e3), a2.push(_2);
          var s2 = new u(0 | t2._crypto_sign_publickeybytes()), c2 = s2.address;
          a2.push(c2);
          var o2 = new u(0 | t2._crypto_sign_secretkeybytes()), h2 = o2.address;
          if (a2.push(h2), 0 == (0 | t2._crypto_sign_seed_keypair(c2, h2, _2))) {
            var p2 = { publicKey: y(s2, r3), privateKey: y(o2, r3), keyType: "ed25519" };
            return g(a2), p2;
          }
          b(a2, "invalid usage");
        }
        function Et(e3, r3, a2) {
          var _2 = [];
          l(a2), m(_2, e3, "state_address");
          var n2 = d(r3 = x(_2, r3, "message_chunk")), s2 = r3.length;
          _2.push(n2), 0 != (0 | t2._crypto_sign_update(e3, n2, s2, 0)) && b(_2, "invalid usage"), g(_2);
        }
        function kt(e3, r3, a2) {
          var _2 = [];
          e3 = x(_2, e3, "signature");
          var n2, s2 = 0 | t2._crypto_sign_bytes();
          e3.length !== s2 && f(_2, "invalid signature length"), n2 = d(e3), _2.push(n2);
          var c2 = d(r3 = x(_2, r3, "message")), o2 = r3.length;
          _2.push(c2), a2 = x(_2, a2, "publicKey");
          var h2, p2 = 0 | t2._crypto_sign_publickeybytes();
          a2.length !== p2 && f(_2, "invalid publicKey length"), h2 = d(a2), _2.push(h2);
          var y2 = 0 == (0 | t2._crypto_sign_verify_detached(n2, c2, o2, 0, h2));
          return g(_2), y2;
        }
        function St(e3, r3, a2, _2) {
          var n2 = [];
          l(_2), m(n2, e3, "outLength"), ("number" != typeof e3 || (0 | e3) !== e3 || e3 < 0) && f(n2, "outLength must be an unsigned integer"), r3 = x(n2, r3, "key");
          var s2, c2 = 0 | t2._crypto_stream_chacha20_keybytes();
          r3.length !== c2 && f(n2, "invalid key length"), s2 = d(r3), n2.push(s2), a2 = x(n2, a2, "nonce");
          var o2, h2 = 0 | t2._crypto_stream_chacha20_noncebytes();
          a2.length !== h2 && f(n2, "invalid nonce length"), o2 = d(a2), n2.push(o2);
          var p2 = new u(0 | e3), i2 = p2.address;
          n2.push(i2), t2._crypto_stream_chacha20(i2, e3, 0, o2, s2);
          var v2 = y(p2, _2);
          return g(n2), v2;
        }
        function Tt(e3, r3, a2, _2) {
          var n2 = [];
          l(_2);
          var s2 = d(e3 = x(n2, e3, "input_message")), c2 = e3.length;
          n2.push(s2), r3 = x(n2, r3, "nonce");
          var o2, h2 = 0 | t2._crypto_stream_chacha20_ietf_noncebytes();
          r3.length !== h2 && f(n2, "invalid nonce length"), o2 = d(r3), n2.push(o2), a2 = x(n2, a2, "key");
          var p2, i2 = 0 | t2._crypto_stream_chacha20_ietf_keybytes();
          a2.length !== i2 && f(n2, "invalid key length"), p2 = d(a2), n2.push(p2);
          var v2 = new u(0 | c2), m2 = v2.address;
          if (n2.push(m2), 0 === t2._crypto_stream_chacha20_ietf_xor(m2, s2, c2, 0, o2, p2)) {
            var E2 = y(v2, _2);
            return g(n2), E2;
          }
          b(n2, "invalid usage");
        }
        function wt(e3, r3, a2, _2, n2) {
          var s2 = [];
          l(n2);
          var c2 = d(e3 = x(s2, e3, "input_message")), o2 = e3.length;
          s2.push(c2), r3 = x(s2, r3, "nonce");
          var h2, p2 = 0 | t2._crypto_stream_chacha20_ietf_noncebytes();
          r3.length !== p2 && f(s2, "invalid nonce length"), h2 = d(r3), s2.push(h2), m(s2, a2, "nonce_increment"), ("number" != typeof a2 || (0 | a2) !== a2 || a2 < 0) && f(s2, "nonce_increment must be an unsigned integer"), _2 = x(s2, _2, "key");
          var i2, v2 = 0 | t2._crypto_stream_chacha20_ietf_keybytes();
          _2.length !== v2 && f(s2, "invalid key length"), i2 = d(_2), s2.push(i2);
          var E2 = new u(0 | o2), k2 = E2.address;
          if (s2.push(k2), 0 === t2._crypto_stream_chacha20_ietf_xor_ic(k2, c2, o2, 0, h2, a2, i2)) {
            var S2 = y(E2, n2);
            return g(s2), S2;
          }
          b(s2, "invalid usage");
        }
        function Yt(e3) {
          var r3 = [];
          l(e3);
          var a2 = new u(0 | t2._crypto_stream_chacha20_keybytes()), _2 = a2.address;
          r3.push(_2), t2._crypto_stream_chacha20_keygen(_2);
          var n2 = y(a2, e3);
          return g(r3), n2;
        }
        function Bt(e3, r3, a2, _2) {
          var n2 = [];
          l(_2);
          var s2 = d(e3 = x(n2, e3, "input_message")), c2 = e3.length;
          n2.push(s2), r3 = x(n2, r3, "nonce");
          var o2, h2 = 0 | t2._crypto_stream_chacha20_noncebytes();
          r3.length !== h2 && f(n2, "invalid nonce length"), o2 = d(r3), n2.push(o2), a2 = x(n2, a2, "key");
          var p2, i2 = 0 | t2._crypto_stream_chacha20_keybytes();
          a2.length !== i2 && f(n2, "invalid key length"), p2 = d(a2), n2.push(p2);
          var v2 = new u(0 | c2), m2 = v2.address;
          if (n2.push(m2), 0 === t2._crypto_stream_chacha20_xor(m2, s2, c2, 0, o2, p2)) {
            var E2 = y(v2, _2);
            return g(n2), E2;
          }
          b(n2, "invalid usage");
        }
        function At(e3, r3, a2, _2, n2) {
          var s2 = [];
          l(n2);
          var c2 = d(e3 = x(s2, e3, "input_message")), o2 = e3.length;
          s2.push(c2), r3 = x(s2, r3, "nonce");
          var h2, p2 = 0 | t2._crypto_stream_chacha20_noncebytes();
          r3.length !== p2 && f(s2, "invalid nonce length"), h2 = d(r3), s2.push(h2), m(s2, a2, "nonce_increment"), ("number" != typeof a2 || (0 | a2) !== a2 || a2 < 0) && f(s2, "nonce_increment must be an unsigned integer"), _2 = x(s2, _2, "key");
          var i2, v2 = 0 | t2._crypto_stream_chacha20_keybytes();
          _2.length !== v2 && f(s2, "invalid key length"), i2 = d(_2), s2.push(i2);
          var E2 = new u(0 | o2), k2 = E2.address;
          if (s2.push(k2), 0 === t2._crypto_stream_chacha20_xor_ic(k2, c2, o2, 0, h2, a2, 0, i2)) {
            var S2 = y(E2, n2);
            return g(s2), S2;
          }
          b(s2, "invalid usage");
        }
        function Kt(e3) {
          var r3 = [];
          l(e3);
          var a2 = new u(0 | t2._crypto_stream_keybytes()), _2 = a2.address;
          r3.push(_2), t2._crypto_stream_keygen(_2);
          var n2 = y(a2, e3);
          return g(r3), n2;
        }
        function Mt(e3) {
          var r3 = [];
          l(e3);
          var a2 = new u(0 | t2._crypto_stream_xchacha20_keybytes()), _2 = a2.address;
          r3.push(_2), t2._crypto_stream_xchacha20_keygen(_2);
          var n2 = y(a2, e3);
          return g(r3), n2;
        }
        function It(e3, r3, a2, _2) {
          var n2 = [];
          l(_2);
          var s2 = d(e3 = x(n2, e3, "input_message")), c2 = e3.length;
          n2.push(s2), r3 = x(n2, r3, "nonce");
          var o2, h2 = 0 | t2._crypto_stream_xchacha20_noncebytes();
          r3.length !== h2 && f(n2, "invalid nonce length"), o2 = d(r3), n2.push(o2), a2 = x(n2, a2, "key");
          var p2, i2 = 0 | t2._crypto_stream_xchacha20_keybytes();
          a2.length !== i2 && f(n2, "invalid key length"), p2 = d(a2), n2.push(p2);
          var v2 = new u(0 | c2), m2 = v2.address;
          if (n2.push(m2), 0 === t2._crypto_stream_xchacha20_xor(m2, s2, c2, 0, o2, p2)) {
            var E2 = y(v2, _2);
            return g(n2), E2;
          }
          b(n2, "invalid usage");
        }
        function Nt(e3, r3, a2, _2, n2) {
          var s2 = [];
          l(n2);
          var c2 = d(e3 = x(s2, e3, "input_message")), o2 = e3.length;
          s2.push(c2), r3 = x(s2, r3, "nonce");
          var h2, p2 = 0 | t2._crypto_stream_xchacha20_noncebytes();
          r3.length !== p2 && f(s2, "invalid nonce length"), h2 = d(r3), s2.push(h2), m(s2, a2, "nonce_increment"), ("number" != typeof a2 || (0 | a2) !== a2 || a2 < 0) && f(s2, "nonce_increment must be an unsigned integer"), _2 = x(s2, _2, "key");
          var i2, v2 = 0 | t2._crypto_stream_xchacha20_keybytes();
          _2.length !== v2 && f(s2, "invalid key length"), i2 = d(_2), s2.push(i2);
          var E2 = new u(0 | o2), k2 = E2.address;
          if (s2.push(k2), 0 === t2._crypto_stream_xchacha20_xor_ic(k2, c2, o2, 0, h2, a2, 0, i2)) {
            var S2 = y(E2, n2);
            return g(s2), S2;
          }
          b(s2, "invalid usage");
        }
        function Lt(e3, r3) {
          var a2 = [];
          l(r3), m(a2, e3, "length"), ("number" != typeof e3 || (0 | e3) !== e3 || e3 < 0) && f(a2, "length must be an unsigned integer");
          var _2 = new u(0 | e3), n2 = _2.address;
          a2.push(n2), t2._randombytes_buf(n2, e3);
          var s2 = y(_2, r3);
          return g(a2), s2;
        }
        function Ut(e3, r3, a2) {
          var _2 = [];
          l(a2), m(_2, e3, "length"), ("number" != typeof e3 || (0 | e3) !== e3 || e3 < 0) && f(_2, "length must be an unsigned integer"), r3 = x(_2, r3, "seed");
          var n2, s2 = 0 | t2._randombytes_seedbytes();
          r3.length !== s2 && f(_2, "invalid seed length"), n2 = d(r3), _2.push(n2);
          var c2 = new u(0 | e3), o2 = c2.address;
          _2.push(o2), t2._randombytes_buf_deterministic(o2, e3, n2);
          var h2 = y(c2, a2);
          return g(_2), h2;
        }
        function Ot(e3) {
          l(e3), t2._randombytes_close();
        }
        function Ct(e3) {
          l(e3);
          var r3 = t2._randombytes_random() >>> 0;
          return g([]), r3;
        }
        function Rt(e3, r3) {
          var a2 = [];
          l(r3);
          for (var _2 = t2._malloc(24), n2 = 0; n2 < 6; n2++)
            t2.setValue(_2 + 4 * n2, t2.Runtime.addFunction(e3[["implementation_name", "random", "stir", "uniform", "buf", "close"][n2]]), "i32");
          0 != (0 | t2._randombytes_set_implementation(_2)) && b(a2, "unsupported implementation"), g(a2);
        }
        function Pt(e3) {
          l(e3), t2._randombytes_stir();
        }
        function Gt(e3, r3) {
          var a2 = [];
          l(r3), m(a2, e3, "upper_bound"), ("number" != typeof e3 || (0 | e3) !== e3 || e3 < 0) && f(a2, "upper_bound must be an unsigned integer");
          var _2 = t2._randombytes_uniform(e3) >>> 0;
          return g(a2), _2;
        }
        function Xt() {
          var e3 = t2._sodium_version_string(), r3 = t2.UTF8ToString(e3);
          return g([]), r3;
        }
        return u.prototype.to_Uint8Array = function() {
          var e3 = new Uint8Array(this.length);
          return e3.set(t2.HEAPU8.subarray(this.address, this.address + this.length)), e3;
        }, e2.add = function(e3, r3) {
          if (!(e3 instanceof Uint8Array && r3 instanceof Uint8Array))
            throw new TypeError("Only Uint8Array instances can added");
          var t3 = e3.length, a2 = 0, _2 = 0;
          if (r3.length != e3.length)
            throw new TypeError("Arguments must have the same length");
          for (_2 = 0; _2 < t3; _2++)
            a2 >>= 8, a2 += e3[_2] + r3[_2], e3[_2] = 255 & a2;
        }, e2.base64_variants = o, e2.compare = function(e3, r3) {
          if (!(e3 instanceof Uint8Array && r3 instanceof Uint8Array))
            throw new TypeError("Only Uint8Array instances can be compared");
          if (e3.length !== r3.length)
            throw new TypeError("Only instances of identical length can be compared");
          for (var t3 = 0, a2 = 1, _2 = e3.length; _2-- > 0; )
            t3 |= r3[_2] - e3[_2] >> 8 & a2, a2 &= (r3[_2] ^ e3[_2]) - 1 >> 8;
          return t3 + t3 + a2 - 1;
        }, e2.from_base64 = function(e3, r3) {
          r3 = h(r3);
          var a2, _2 = [], n2 = new u(3 * (e3 = x(_2, e3, "input")).length / 4), s2 = d(e3), c2 = v(4), o2 = v(4);
          return _2.push(s2), _2.push(n2.address), _2.push(n2.result_bin_len_p), _2.push(n2.b64_end_p), 0 !== t2._sodium_base642bin(n2.address, n2.length, s2, e3.length, 0, c2, o2, r3) && b(_2, "invalid input"), t2.getValue(o2, "i32") - s2 !== e3.length && b(_2, "incomplete input"), n2.length = t2.getValue(c2, "i32"), a2 = n2.to_Uint8Array(), g(_2), a2;
        }, e2.from_hex = function(e3) {
          var r3, a2 = [], _2 = new u((e3 = x(a2, e3, "input")).length / 2), n2 = d(e3), s2 = v(4);
          return a2.push(n2), a2.push(_2.address), a2.push(_2.hex_end_p), 0 !== t2._sodium_hex2bin(_2.address, _2.length, n2, e3.length, 0, 0, s2) && b(a2, "invalid input"), t2.getValue(s2, "i32") - n2 !== e3.length && b(a2, "incomplete input"), r3 = _2.to_Uint8Array(), g(a2), r3;
        }, e2.from_string = n, e2.increment = function(e3) {
          if (!(e3 instanceof Uint8Array))
            throw new TypeError("Only Uint8Array instances can be incremented");
          for (var r3 = 256, t3 = 0, a2 = e3.length; t3 < a2; t3++)
            r3 >>= 8, r3 += e3[t3], e3[t3] = 255 & r3;
        }, e2.is_zero = function(e3) {
          if (!(e3 instanceof Uint8Array))
            throw new TypeError("Only Uint8Array instances can be checked");
          for (var r3 = 0, t3 = 0, a2 = e3.length; t3 < a2; t3++)
            r3 |= e3[t3];
          return 0 === r3;
        }, e2.libsodium = r2, e2.memcmp = function(e3, r3) {
          if (!(e3 instanceof Uint8Array && r3 instanceof Uint8Array))
            throw new TypeError("Only Uint8Array instances can be compared");
          if (e3.length !== r3.length)
            throw new TypeError("Only instances of identical length can be compared");
          for (var t3 = 0, a2 = 0, _2 = e3.length; a2 < _2; a2++)
            t3 |= e3[a2] ^ r3[a2];
          return 0 === t3;
        }, e2.memzero = function(e3) {
          if (!(e3 instanceof Uint8Array))
            throw new TypeError("Only Uint8Array instances can be wiped");
          for (var r3 = 0, t3 = e3.length; r3 < t3; r3++)
            e3[r3] = 0;
        }, e2.output_formats = function() {
          return ["uint8array", "text", "hex", "base64"];
        }, e2.pad = function(e3, r3) {
          if (!(e3 instanceof Uint8Array))
            throw new TypeError("buffer must be a Uint8Array");
          if ((r3 |= 0) <= 0)
            throw new Error("block size must be > 0");
          var a2, _2 = [], n2 = v(4), s2 = 1, c2 = 0, o2 = 0 | e3.length, h2 = new u(o2 + r3);
          _2.push(n2), _2.push(h2.address);
          for (var p2 = h2.address, y2 = h2.address + o2 + r3; p2 < y2; p2++)
            t2.HEAPU8[p2] = e3[c2], c2 += s2 = 1 & ~((65535 & ((o2 -= s2) >>> 48 | o2 >>> 32 | o2 >>> 16 | o2)) - 1 >> 16);
          return 0 !== t2._sodium_pad(n2, h2.address, e3.length, r3, h2.length) && b(_2, "internal error"), h2.length = t2.getValue(n2, "i32"), a2 = h2.to_Uint8Array(), g(_2), a2;
        }, e2.unpad = function(e3, r3) {
          if (!(e3 instanceof Uint8Array))
            throw new TypeError("buffer must be a Uint8Array");
          if ((r3 |= 0) <= 0)
            throw new Error("block size must be > 0");
          var a2 = [], _2 = d(e3), n2 = v(4);
          return a2.push(_2), a2.push(n2), 0 !== t2._sodium_unpad(n2, _2, e3.length, r3) && b(a2, "unsupported/invalid padding"), e3 = (e3 = new Uint8Array(e3)).subarray(0, t2.getValue(n2, "i32")), g(a2), e3;
        }, e2.ready = _, e2.symbols = function() {
          return Object.keys(e2).sort();
        }, e2.to_base64 = p, e2.to_hex = c, e2.to_string = s, e2;
      }
      var t = "object" == typeof e.sodium && "function" == typeof e.sodium.onload ? e.sodium.onload : null;
      "function" == typeof define && define.amd ? define(["exports", "libsodium"], r) : "object" == typeof exports && "string" != typeof exports.nodeName ? r(exports, require_libsodium()) : e.sodium = r(e.commonJsStrict = {}, e.libsodium), t && e.sodium.ready.then(function() {
        t(e.sodium);
      });
    }(exports);
  }
});

// node_modules/@cosmjs/crypto/build/libsodium.js
var require_libsodium2 = __commonJS({
  "node_modules/@cosmjs/crypto/build/libsodium.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Xchacha20poly1305Ietf = exports.xchacha20NonceLength = exports.Ed25519 = exports.Ed25519Keypair = exports.Argon2id = exports.isArgon2idOptions = void 0;
    var utils_1 = require_build3();
    var libsodium_wrappers_1 = __importDefault(require_libsodium_wrappers());
    function isArgon2idOptions(thing) {
      if (!(0, utils_1.isNonNullObject)(thing))
        return false;
      if (typeof thing.outputLength !== "number")
        return false;
      if (typeof thing.opsLimit !== "number")
        return false;
      if (typeof thing.memLimitKib !== "number")
        return false;
      return true;
    }
    exports.isArgon2idOptions = isArgon2idOptions;
    var Argon2id = class {
      static async execute(password, salt, options) {
        await libsodium_wrappers_1.default.ready;
        return libsodium_wrappers_1.default.crypto_pwhash(
          options.outputLength,
          password,
          salt,
          // libsodium only supports 16 byte salts and will throw when you don't respect that
          options.opsLimit,
          options.memLimitKib * 1024,
          libsodium_wrappers_1.default.crypto_pwhash_ALG_ARGON2ID13
        );
      }
    };
    exports.Argon2id = Argon2id;
    var Ed25519Keypair = class _Ed25519Keypair {
      constructor(privkey, pubkey) {
        this.privkey = privkey;
        this.pubkey = pubkey;
      }
      // a libsodium privkey has the format `<ed25519 privkey> + <ed25519 pubkey>`
      static fromLibsodiumPrivkey(libsodiumPrivkey) {
        if (libsodiumPrivkey.length !== 64) {
          throw new Error(`Unexpected key length ${libsodiumPrivkey.length}. Must be 64.`);
        }
        return new _Ed25519Keypair(libsodiumPrivkey.slice(0, 32), libsodiumPrivkey.slice(32, 64));
      }
      toLibsodiumPrivkey() {
        return new Uint8Array([...this.privkey, ...this.pubkey]);
      }
    };
    exports.Ed25519Keypair = Ed25519Keypair;
    var Ed25519 = class {
      /**
       * Generates a keypair deterministically from a given 32 bytes seed.
       *
       * This seed equals the Ed25519 private key.
       * For implementation details see crypto_sign_seed_keypair in
       * https://download.libsodium.org/doc/public-key_cryptography/public-key_signatures.html
       * and diagram on https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/
       */
      static async makeKeypair(seed) {
        await libsodium_wrappers_1.default.ready;
        const keypair = libsodium_wrappers_1.default.crypto_sign_seed_keypair(seed);
        return Ed25519Keypair.fromLibsodiumPrivkey(keypair.privateKey);
      }
      static async createSignature(message, keyPair) {
        await libsodium_wrappers_1.default.ready;
        return libsodium_wrappers_1.default.crypto_sign_detached(message, keyPair.toLibsodiumPrivkey());
      }
      static async verifySignature(signature, message, pubkey) {
        await libsodium_wrappers_1.default.ready;
        return libsodium_wrappers_1.default.crypto_sign_verify_detached(signature, message, pubkey);
      }
    };
    exports.Ed25519 = Ed25519;
    exports.xchacha20NonceLength = 24;
    var Xchacha20poly1305Ietf = class {
      static async encrypt(message, key, nonce) {
        await libsodium_wrappers_1.default.ready;
        const additionalData = null;
        return libsodium_wrappers_1.default.crypto_aead_xchacha20poly1305_ietf_encrypt(
          message,
          additionalData,
          null,
          // secret nonce: unused and should be null (https://download.libsodium.org/doc/secret-key_cryptography/aead/chacha20-poly1305/xchacha20-poly1305_construction)
          nonce,
          key
        );
      }
      static async decrypt(ciphertext, key, nonce) {
        await libsodium_wrappers_1.default.ready;
        const additionalData = null;
        return libsodium_wrappers_1.default.crypto_aead_xchacha20poly1305_ietf_decrypt(
          null,
          // secret nonce: unused and should be null (https://download.libsodium.org/doc/secret-key_cryptography/aead/chacha20-poly1305/xchacha20-poly1305_construction)
          ciphertext,
          additionalData,
          nonce,
          key
        );
      }
    };
    exports.Xchacha20poly1305Ietf = Xchacha20poly1305Ietf;
  }
});

// node_modules/@cosmjs/crypto/build/random.js
var require_random = __commonJS({
  "node_modules/@cosmjs/crypto/build/random.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Random = void 0;
    var Random = class {
      /**
       * Returns `count` cryptographically secure random bytes
       */
      static getBytes(count) {
        try {
          const globalObject = typeof window === "object" ? window : self;
          const cryptoApi = typeof globalObject.crypto !== "undefined" ? globalObject.crypto : globalObject.msCrypto;
          const out = new Uint8Array(count);
          cryptoApi.getRandomValues(out);
          return out;
        } catch {
          try {
            const crypto = require_crypto2();
            return new Uint8Array([...crypto.randomBytes(count)]);
          } catch {
            throw new Error("No secure random number generator found");
          }
        }
      }
    };
    exports.Random = Random;
  }
});

// node_modules/@noble/hashes/ripemd160.js
var require_ripemd160 = __commonJS({
  "node_modules/@noble/hashes/ripemd160.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ripemd160 = exports.RIPEMD160 = void 0;
    var _sha2_js_1 = require_sha2();
    var utils_js_1 = require_utils();
    var Rho = new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]);
    var Id = Uint8Array.from({ length: 16 }, (_, i) => i);
    var Pi = Id.map((i) => (9 * i + 5) % 16);
    var idxL = [Id];
    var idxR = [Pi];
    for (let i = 0; i < 4; i++)
      for (let j of [idxL, idxR])
        j.push(j[i].map((k) => Rho[k]));
    var shifts = [
      [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],
      [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],
      [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],
      [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],
      [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5]
    ].map((i) => new Uint8Array(i));
    var shiftsL = idxL.map((idx, i) => idx.map((j) => shifts[i][j]));
    var shiftsR = idxR.map((idx, i) => idx.map((j) => shifts[i][j]));
    var Kl = new Uint32Array([
      0,
      1518500249,
      1859775393,
      2400959708,
      2840853838
    ]);
    var Kr = new Uint32Array([
      1352829926,
      1548603684,
      1836072691,
      2053994217,
      0
    ]);
    var rotl = (word, shift) => word << shift | word >>> 32 - shift;
    function f(group, x, y, z) {
      if (group === 0)
        return x ^ y ^ z;
      else if (group === 1)
        return x & y | ~x & z;
      else if (group === 2)
        return (x | ~y) ^ z;
      else if (group === 3)
        return x & z | y & ~z;
      else
        return x ^ (y | ~z);
    }
    var BUF = new Uint32Array(16);
    var RIPEMD160 = class extends _sha2_js_1.SHA2 {
      constructor() {
        super(64, 20, 8, true);
        this.h0 = 1732584193 | 0;
        this.h1 = 4023233417 | 0;
        this.h2 = 2562383102 | 0;
        this.h3 = 271733878 | 0;
        this.h4 = 3285377520 | 0;
      }
      get() {
        const { h0, h1, h2, h3, h4 } = this;
        return [h0, h1, h2, h3, h4];
      }
      set(h0, h1, h2, h3, h4) {
        this.h0 = h0 | 0;
        this.h1 = h1 | 0;
        this.h2 = h2 | 0;
        this.h3 = h3 | 0;
        this.h4 = h4 | 0;
      }
      process(view, offset) {
        for (let i = 0; i < 16; i++, offset += 4)
          BUF[i] = view.getUint32(offset, true);
        let al = this.h0 | 0, ar = al, bl = this.h1 | 0, br = bl, cl = this.h2 | 0, cr = cl, dl = this.h3 | 0, dr = dl, el = this.h4 | 0, er = el;
        for (let group = 0; group < 5; group++) {
          const rGroup = 4 - group;
          const hbl = Kl[group], hbr = Kr[group];
          const rl = idxL[group], rr = idxR[group];
          const sl = shiftsL[group], sr = shiftsR[group];
          for (let i = 0; i < 16; i++) {
            const tl = rotl(al + f(group, bl, cl, dl) + BUF[rl[i]] + hbl, sl[i]) + el | 0;
            al = el, el = dl, dl = rotl(cl, 10) | 0, cl = bl, bl = tl;
          }
          for (let i = 0; i < 16; i++) {
            const tr = rotl(ar + f(rGroup, br, cr, dr) + BUF[rr[i]] + hbr, sr[i]) + er | 0;
            ar = er, er = dr, dr = rotl(cr, 10) | 0, cr = br, br = tr;
          }
        }
        this.set(this.h1 + cl + dr | 0, this.h2 + dl + er | 0, this.h3 + el + ar | 0, this.h4 + al + br | 0, this.h0 + bl + cr | 0);
      }
      roundClean() {
        BUF.fill(0);
      }
      destroy() {
        this.destroyed = true;
        this.buffer.fill(0);
        this.set(0, 0, 0, 0, 0);
      }
    };
    exports.RIPEMD160 = RIPEMD160;
    exports.ripemd160 = (0, utils_js_1.wrapConstructor)(() => new RIPEMD160());
  }
});

// node_modules/@cosmjs/crypto/build/ripemd.js
var require_ripemd = __commonJS({
  "node_modules/@cosmjs/crypto/build/ripemd.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ripemd160 = exports.Ripemd160 = void 0;
    var ripemd160_1 = require_ripemd160();
    var utils_1 = require_utils2();
    var Ripemd160 = class {
      constructor(firstData) {
        this.blockSize = 512 / 8;
        this.impl = ripemd160_1.ripemd160.create();
        if (firstData) {
          this.update(firstData);
        }
      }
      update(data) {
        this.impl.update((0, utils_1.toRealUint8Array)(data));
        return this;
      }
      digest() {
        return this.impl.digest();
      }
    };
    exports.Ripemd160 = Ripemd160;
    function ripemd160(data) {
      return new Ripemd160(data).digest();
    }
    exports.ripemd160 = ripemd160;
  }
});

// node_modules/elliptic/package.json
var require_package = __commonJS({
  "node_modules/elliptic/package.json"(exports, module) {
    module.exports = {
      name: "elliptic",
      version: "6.5.4",
      description: "EC cryptography",
      main: "lib/elliptic.js",
      files: [
        "lib"
      ],
      scripts: {
        lint: "eslint lib test",
        "lint:fix": "npm run lint -- --fix",
        unit: "istanbul test _mocha --reporter=spec test/index.js",
        test: "npm run lint && npm run unit",
        version: "grunt dist && git add dist/"
      },
      repository: {
        type: "git",
        url: "git@github.com:indutny/elliptic"
      },
      keywords: [
        "EC",
        "Elliptic",
        "curve",
        "Cryptography"
      ],
      author: "Fedor Indutny <fedor@indutny.com>",
      license: "MIT",
      bugs: {
        url: "https://github.com/indutny/elliptic/issues"
      },
      homepage: "https://github.com/indutny/elliptic",
      devDependencies: {
        brfs: "^2.0.2",
        coveralls: "^3.1.0",
        eslint: "^7.6.0",
        grunt: "^1.2.1",
        "grunt-browserify": "^5.3.0",
        "grunt-cli": "^1.3.2",
        "grunt-contrib-connect": "^3.0.0",
        "grunt-contrib-copy": "^1.0.0",
        "grunt-contrib-uglify": "^5.0.0",
        "grunt-mocha-istanbul": "^5.0.2",
        "grunt-saucelabs": "^9.0.1",
        istanbul: "^0.4.5",
        mocha: "^8.0.1"
      },
      dependencies: {
        "bn.js": "^4.11.9",
        brorand: "^1.1.0",
        "hash.js": "^1.0.0",
        "hmac-drbg": "^1.0.1",
        inherits: "^2.0.4",
        "minimalistic-assert": "^1.0.1",
        "minimalistic-crypto-utils": "^1.0.1"
      }
    };
  }
});

// node_modules/elliptic/node_modules/bn.js/lib/bn.js
var require_bn2 = __commonJS({
  "node_modules/elliptic/node_modules/bn.js/lib/bn.js"(exports, module) {
    (function(module2, exports2) {
      "use strict";
      function assert(val, msg) {
        if (!val)
          throw new Error(msg || "Assertion failed");
      }
      function inherits(ctor, superCtor) {
        ctor.super_ = superCtor;
        var TempCtor = function() {
        };
        TempCtor.prototype = superCtor.prototype;
        ctor.prototype = new TempCtor();
        ctor.prototype.constructor = ctor;
      }
      function BN(number, base, endian) {
        if (BN.isBN(number)) {
          return number;
        }
        this.negative = 0;
        this.words = null;
        this.length = 0;
        this.red = null;
        if (number !== null) {
          if (base === "le" || base === "be") {
            endian = base;
            base = 10;
          }
          this._init(number || 0, base || 10, endian || "be");
        }
      }
      if (typeof module2 === "object") {
        module2.exports = BN;
      } else {
        exports2.BN = BN;
      }
      BN.BN = BN;
      BN.wordSize = 26;
      var Buffer2;
      try {
        if (typeof window !== "undefined" && typeof window.Buffer !== "undefined") {
          Buffer2 = window.Buffer;
        } else {
          Buffer2 = require_buffer().Buffer;
        }
      } catch (e) {
      }
      BN.isBN = function isBN(num) {
        if (num instanceof BN) {
          return true;
        }
        return num !== null && typeof num === "object" && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
      };
      BN.max = function max(left, right) {
        if (left.cmp(right) > 0)
          return left;
        return right;
      };
      BN.min = function min(left, right) {
        if (left.cmp(right) < 0)
          return left;
        return right;
      };
      BN.prototype._init = function init(number, base, endian) {
        if (typeof number === "number") {
          return this._initNumber(number, base, endian);
        }
        if (typeof number === "object") {
          return this._initArray(number, base, endian);
        }
        if (base === "hex") {
          base = 16;
        }
        assert(base === (base | 0) && base >= 2 && base <= 36);
        number = number.toString().replace(/\s+/g, "");
        var start = 0;
        if (number[0] === "-") {
          start++;
          this.negative = 1;
        }
        if (start < number.length) {
          if (base === 16) {
            this._parseHex(number, start, endian);
          } else {
            this._parseBase(number, base, start);
            if (endian === "le") {
              this._initArray(this.toArray(), base, endian);
            }
          }
        }
      };
      BN.prototype._initNumber = function _initNumber(number, base, endian) {
        if (number < 0) {
          this.negative = 1;
          number = -number;
        }
        if (number < 67108864) {
          this.words = [number & 67108863];
          this.length = 1;
        } else if (number < 4503599627370496) {
          this.words = [
            number & 67108863,
            number / 67108864 & 67108863
          ];
          this.length = 2;
        } else {
          assert(number < 9007199254740992);
          this.words = [
            number & 67108863,
            number / 67108864 & 67108863,
            1
          ];
          this.length = 3;
        }
        if (endian !== "le")
          return;
        this._initArray(this.toArray(), base, endian);
      };
      BN.prototype._initArray = function _initArray(number, base, endian) {
        assert(typeof number.length === "number");
        if (number.length <= 0) {
          this.words = [0];
          this.length = 1;
          return this;
        }
        this.length = Math.ceil(number.length / 3);
        this.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          this.words[i] = 0;
        }
        var j, w;
        var off = 0;
        if (endian === "be") {
          for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
            w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
              off -= 26;
              j++;
            }
          }
        } else if (endian === "le") {
          for (i = 0, j = 0; i < number.length; i += 3) {
            w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
              off -= 26;
              j++;
            }
          }
        }
        return this.strip();
      };
      function parseHex4Bits(string, index) {
        var c = string.charCodeAt(index);
        if (c >= 65 && c <= 70) {
          return c - 55;
        } else if (c >= 97 && c <= 102) {
          return c - 87;
        } else {
          return c - 48 & 15;
        }
      }
      function parseHexByte(string, lowerBound, index) {
        var r = parseHex4Bits(string, index);
        if (index - 1 >= lowerBound) {
          r |= parseHex4Bits(string, index - 1) << 4;
        }
        return r;
      }
      BN.prototype._parseHex = function _parseHex(number, start, endian) {
        this.length = Math.ceil((number.length - start) / 6);
        this.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          this.words[i] = 0;
        }
        var off = 0;
        var j = 0;
        var w;
        if (endian === "be") {
          for (i = number.length - 1; i >= start; i -= 2) {
            w = parseHexByte(number, start, i) << off;
            this.words[j] |= w & 67108863;
            if (off >= 18) {
              off -= 18;
              j += 1;
              this.words[j] |= w >>> 26;
            } else {
              off += 8;
            }
          }
        } else {
          var parseLength = number.length - start;
          for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
            w = parseHexByte(number, start, i) << off;
            this.words[j] |= w & 67108863;
            if (off >= 18) {
              off -= 18;
              j += 1;
              this.words[j] |= w >>> 26;
            } else {
              off += 8;
            }
          }
        }
        this.strip();
      };
      function parseBase(str, start, end, mul) {
        var r = 0;
        var len = Math.min(str.length, end);
        for (var i = start; i < len; i++) {
          var c = str.charCodeAt(i) - 48;
          r *= mul;
          if (c >= 49) {
            r += c - 49 + 10;
          } else if (c >= 17) {
            r += c - 17 + 10;
          } else {
            r += c;
          }
        }
        return r;
      }
      BN.prototype._parseBase = function _parseBase(number, base, start) {
        this.words = [0];
        this.length = 1;
        for (var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base) {
          limbLen++;
        }
        limbLen--;
        limbPow = limbPow / base | 0;
        var total = number.length - start;
        var mod = total % limbLen;
        var end = Math.min(total, total - mod) + start;
        var word = 0;
        for (var i = start; i < end; i += limbLen) {
          word = parseBase(number, i, i + limbLen, base);
          this.imuln(limbPow);
          if (this.words[0] + word < 67108864) {
            this.words[0] += word;
          } else {
            this._iaddn(word);
          }
        }
        if (mod !== 0) {
          var pow = 1;
          word = parseBase(number, i, number.length, base);
          for (i = 0; i < mod; i++) {
            pow *= base;
          }
          this.imuln(pow);
          if (this.words[0] + word < 67108864) {
            this.words[0] += word;
          } else {
            this._iaddn(word);
          }
        }
        this.strip();
      };
      BN.prototype.copy = function copy(dest) {
        dest.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          dest.words[i] = this.words[i];
        }
        dest.length = this.length;
        dest.negative = this.negative;
        dest.red = this.red;
      };
      BN.prototype.clone = function clone() {
        var r = new BN(null);
        this.copy(r);
        return r;
      };
      BN.prototype._expand = function _expand(size) {
        while (this.length < size) {
          this.words[this.length++] = 0;
        }
        return this;
      };
      BN.prototype.strip = function strip() {
        while (this.length > 1 && this.words[this.length - 1] === 0) {
          this.length--;
        }
        return this._normSign();
      };
      BN.prototype._normSign = function _normSign() {
        if (this.length === 1 && this.words[0] === 0) {
          this.negative = 0;
        }
        return this;
      };
      BN.prototype.inspect = function inspect() {
        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
      };
      var zeros = [
        "",
        "0",
        "00",
        "000",
        "0000",
        "00000",
        "000000",
        "0000000",
        "00000000",
        "000000000",
        "0000000000",
        "00000000000",
        "000000000000",
        "0000000000000",
        "00000000000000",
        "000000000000000",
        "0000000000000000",
        "00000000000000000",
        "000000000000000000",
        "0000000000000000000",
        "00000000000000000000",
        "000000000000000000000",
        "0000000000000000000000",
        "00000000000000000000000",
        "000000000000000000000000",
        "0000000000000000000000000"
      ];
      var groupSizes = [
        0,
        0,
        25,
        16,
        12,
        11,
        10,
        9,
        8,
        8,
        7,
        7,
        7,
        7,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5
      ];
      var groupBases = [
        0,
        0,
        33554432,
        43046721,
        16777216,
        48828125,
        60466176,
        40353607,
        16777216,
        43046721,
        1e7,
        19487171,
        35831808,
        62748517,
        7529536,
        11390625,
        16777216,
        24137569,
        34012224,
        47045881,
        64e6,
        4084101,
        5153632,
        6436343,
        7962624,
        9765625,
        11881376,
        14348907,
        17210368,
        20511149,
        243e5,
        28629151,
        33554432,
        39135393,
        45435424,
        52521875,
        60466176
      ];
      BN.prototype.toString = function toString(base, padding) {
        base = base || 10;
        padding = padding | 0 || 1;
        var out;
        if (base === 16 || base === "hex") {
          out = "";
          var off = 0;
          var carry = 0;
          for (var i = 0; i < this.length; i++) {
            var w = this.words[i];
            var word = ((w << off | carry) & 16777215).toString(16);
            carry = w >>> 24 - off & 16777215;
            if (carry !== 0 || i !== this.length - 1) {
              out = zeros[6 - word.length] + word + out;
            } else {
              out = word + out;
            }
            off += 2;
            if (off >= 26) {
              off -= 26;
              i--;
            }
          }
          if (carry !== 0) {
            out = carry.toString(16) + out;
          }
          while (out.length % padding !== 0) {
            out = "0" + out;
          }
          if (this.negative !== 0) {
            out = "-" + out;
          }
          return out;
        }
        if (base === (base | 0) && base >= 2 && base <= 36) {
          var groupSize = groupSizes[base];
          var groupBase = groupBases[base];
          out = "";
          var c = this.clone();
          c.negative = 0;
          while (!c.isZero()) {
            var r = c.modn(groupBase).toString(base);
            c = c.idivn(groupBase);
            if (!c.isZero()) {
              out = zeros[groupSize - r.length] + r + out;
            } else {
              out = r + out;
            }
          }
          if (this.isZero()) {
            out = "0" + out;
          }
          while (out.length % padding !== 0) {
            out = "0" + out;
          }
          if (this.negative !== 0) {
            out = "-" + out;
          }
          return out;
        }
        assert(false, "Base should be between 2 and 36");
      };
      BN.prototype.toNumber = function toNumber() {
        var ret = this.words[0];
        if (this.length === 2) {
          ret += this.words[1] * 67108864;
        } else if (this.length === 3 && this.words[2] === 1) {
          ret += 4503599627370496 + this.words[1] * 67108864;
        } else if (this.length > 2) {
          assert(false, "Number can only safely store up to 53 bits");
        }
        return this.negative !== 0 ? -ret : ret;
      };
      BN.prototype.toJSON = function toJSON() {
        return this.toString(16);
      };
      BN.prototype.toBuffer = function toBuffer(endian, length) {
        assert(typeof Buffer2 !== "undefined");
        return this.toArrayLike(Buffer2, endian, length);
      };
      BN.prototype.toArray = function toArray(endian, length) {
        return this.toArrayLike(Array, endian, length);
      };
      BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {
        var byteLength = this.byteLength();
        var reqLength = length || Math.max(1, byteLength);
        assert(byteLength <= reqLength, "byte array longer than desired length");
        assert(reqLength > 0, "Requested array length <= 0");
        this.strip();
        var littleEndian = endian === "le";
        var res = new ArrayType(reqLength);
        var b, i;
        var q = this.clone();
        if (!littleEndian) {
          for (i = 0; i < reqLength - byteLength; i++) {
            res[i] = 0;
          }
          for (i = 0; !q.isZero(); i++) {
            b = q.andln(255);
            q.iushrn(8);
            res[reqLength - i - 1] = b;
          }
        } else {
          for (i = 0; !q.isZero(); i++) {
            b = q.andln(255);
            q.iushrn(8);
            res[i] = b;
          }
          for (; i < reqLength; i++) {
            res[i] = 0;
          }
        }
        return res;
      };
      if (Math.clz32) {
        BN.prototype._countBits = function _countBits(w) {
          return 32 - Math.clz32(w);
        };
      } else {
        BN.prototype._countBits = function _countBits(w) {
          var t = w;
          var r = 0;
          if (t >= 4096) {
            r += 13;
            t >>>= 13;
          }
          if (t >= 64) {
            r += 7;
            t >>>= 7;
          }
          if (t >= 8) {
            r += 4;
            t >>>= 4;
          }
          if (t >= 2) {
            r += 2;
            t >>>= 2;
          }
          return r + t;
        };
      }
      BN.prototype._zeroBits = function _zeroBits(w) {
        if (w === 0)
          return 26;
        var t = w;
        var r = 0;
        if ((t & 8191) === 0) {
          r += 13;
          t >>>= 13;
        }
        if ((t & 127) === 0) {
          r += 7;
          t >>>= 7;
        }
        if ((t & 15) === 0) {
          r += 4;
          t >>>= 4;
        }
        if ((t & 3) === 0) {
          r += 2;
          t >>>= 2;
        }
        if ((t & 1) === 0) {
          r++;
        }
        return r;
      };
      BN.prototype.bitLength = function bitLength() {
        var w = this.words[this.length - 1];
        var hi = this._countBits(w);
        return (this.length - 1) * 26 + hi;
      };
      function toBitArray(num) {
        var w = new Array(num.bitLength());
        for (var bit = 0; bit < w.length; bit++) {
          var off = bit / 26 | 0;
          var wbit = bit % 26;
          w[bit] = (num.words[off] & 1 << wbit) >>> wbit;
        }
        return w;
      }
      BN.prototype.zeroBits = function zeroBits() {
        if (this.isZero())
          return 0;
        var r = 0;
        for (var i = 0; i < this.length; i++) {
          var b = this._zeroBits(this.words[i]);
          r += b;
          if (b !== 26)
            break;
        }
        return r;
      };
      BN.prototype.byteLength = function byteLength() {
        return Math.ceil(this.bitLength() / 8);
      };
      BN.prototype.toTwos = function toTwos(width) {
        if (this.negative !== 0) {
          return this.abs().inotn(width).iaddn(1);
        }
        return this.clone();
      };
      BN.prototype.fromTwos = function fromTwos(width) {
        if (this.testn(width - 1)) {
          return this.notn(width).iaddn(1).ineg();
        }
        return this.clone();
      };
      BN.prototype.isNeg = function isNeg() {
        return this.negative !== 0;
      };
      BN.prototype.neg = function neg() {
        return this.clone().ineg();
      };
      BN.prototype.ineg = function ineg() {
        if (!this.isZero()) {
          this.negative ^= 1;
        }
        return this;
      };
      BN.prototype.iuor = function iuor(num) {
        while (this.length < num.length) {
          this.words[this.length++] = 0;
        }
        for (var i = 0; i < num.length; i++) {
          this.words[i] = this.words[i] | num.words[i];
        }
        return this.strip();
      };
      BN.prototype.ior = function ior(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuor(num);
      };
      BN.prototype.or = function or(num) {
        if (this.length > num.length)
          return this.clone().ior(num);
        return num.clone().ior(this);
      };
      BN.prototype.uor = function uor(num) {
        if (this.length > num.length)
          return this.clone().iuor(num);
        return num.clone().iuor(this);
      };
      BN.prototype.iuand = function iuand(num) {
        var b;
        if (this.length > num.length) {
          b = num;
        } else {
          b = this;
        }
        for (var i = 0; i < b.length; i++) {
          this.words[i] = this.words[i] & num.words[i];
        }
        this.length = b.length;
        return this.strip();
      };
      BN.prototype.iand = function iand(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuand(num);
      };
      BN.prototype.and = function and(num) {
        if (this.length > num.length)
          return this.clone().iand(num);
        return num.clone().iand(this);
      };
      BN.prototype.uand = function uand(num) {
        if (this.length > num.length)
          return this.clone().iuand(num);
        return num.clone().iuand(this);
      };
      BN.prototype.iuxor = function iuxor(num) {
        var a;
        var b;
        if (this.length > num.length) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        for (var i = 0; i < b.length; i++) {
          this.words[i] = a.words[i] ^ b.words[i];
        }
        if (this !== a) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        this.length = a.length;
        return this.strip();
      };
      BN.prototype.ixor = function ixor(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuxor(num);
      };
      BN.prototype.xor = function xor(num) {
        if (this.length > num.length)
          return this.clone().ixor(num);
        return num.clone().ixor(this);
      };
      BN.prototype.uxor = function uxor(num) {
        if (this.length > num.length)
          return this.clone().iuxor(num);
        return num.clone().iuxor(this);
      };
      BN.prototype.inotn = function inotn(width) {
        assert(typeof width === "number" && width >= 0);
        var bytesNeeded = Math.ceil(width / 26) | 0;
        var bitsLeft = width % 26;
        this._expand(bytesNeeded);
        if (bitsLeft > 0) {
          bytesNeeded--;
        }
        for (var i = 0; i < bytesNeeded; i++) {
          this.words[i] = ~this.words[i] & 67108863;
        }
        if (bitsLeft > 0) {
          this.words[i] = ~this.words[i] & 67108863 >> 26 - bitsLeft;
        }
        return this.strip();
      };
      BN.prototype.notn = function notn(width) {
        return this.clone().inotn(width);
      };
      BN.prototype.setn = function setn(bit, val) {
        assert(typeof bit === "number" && bit >= 0);
        var off = bit / 26 | 0;
        var wbit = bit % 26;
        this._expand(off + 1);
        if (val) {
          this.words[off] = this.words[off] | 1 << wbit;
        } else {
          this.words[off] = this.words[off] & ~(1 << wbit);
        }
        return this.strip();
      };
      BN.prototype.iadd = function iadd(num) {
        var r;
        if (this.negative !== 0 && num.negative === 0) {
          this.negative = 0;
          r = this.isub(num);
          this.negative ^= 1;
          return this._normSign();
        } else if (this.negative === 0 && num.negative !== 0) {
          num.negative = 0;
          r = this.isub(num);
          num.negative = 1;
          return r._normSign();
        }
        var a, b;
        if (this.length > num.length) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        var carry = 0;
        for (var i = 0; i < b.length; i++) {
          r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
          this.words[i] = r & 67108863;
          carry = r >>> 26;
        }
        for (; carry !== 0 && i < a.length; i++) {
          r = (a.words[i] | 0) + carry;
          this.words[i] = r & 67108863;
          carry = r >>> 26;
        }
        this.length = a.length;
        if (carry !== 0) {
          this.words[this.length] = carry;
          this.length++;
        } else if (a !== this) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        return this;
      };
      BN.prototype.add = function add(num) {
        var res;
        if (num.negative !== 0 && this.negative === 0) {
          num.negative = 0;
          res = this.sub(num);
          num.negative ^= 1;
          return res;
        } else if (num.negative === 0 && this.negative !== 0) {
          this.negative = 0;
          res = num.sub(this);
          this.negative = 1;
          return res;
        }
        if (this.length > num.length)
          return this.clone().iadd(num);
        return num.clone().iadd(this);
      };
      BN.prototype.isub = function isub(num) {
        if (num.negative !== 0) {
          num.negative = 0;
          var r = this.iadd(num);
          num.negative = 1;
          return r._normSign();
        } else if (this.negative !== 0) {
          this.negative = 0;
          this.iadd(num);
          this.negative = 1;
          return this._normSign();
        }
        var cmp = this.cmp(num);
        if (cmp === 0) {
          this.negative = 0;
          this.length = 1;
          this.words[0] = 0;
          return this;
        }
        var a, b;
        if (cmp > 0) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        var carry = 0;
        for (var i = 0; i < b.length; i++) {
          r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
          carry = r >> 26;
          this.words[i] = r & 67108863;
        }
        for (; carry !== 0 && i < a.length; i++) {
          r = (a.words[i] | 0) + carry;
          carry = r >> 26;
          this.words[i] = r & 67108863;
        }
        if (carry === 0 && i < a.length && a !== this) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        this.length = Math.max(this.length, i);
        if (a !== this) {
          this.negative = 1;
        }
        return this.strip();
      };
      BN.prototype.sub = function sub(num) {
        return this.clone().isub(num);
      };
      function smallMulTo(self2, num, out) {
        out.negative = num.negative ^ self2.negative;
        var len = self2.length + num.length | 0;
        out.length = len;
        len = len - 1 | 0;
        var a = self2.words[0] | 0;
        var b = num.words[0] | 0;
        var r = a * b;
        var lo = r & 67108863;
        var carry = r / 67108864 | 0;
        out.words[0] = lo;
        for (var k = 1; k < len; k++) {
          var ncarry = carry >>> 26;
          var rword = carry & 67108863;
          var maxJ = Math.min(k, num.length - 1);
          for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {
            var i = k - j | 0;
            a = self2.words[i] | 0;
            b = num.words[j] | 0;
            r = a * b + rword;
            ncarry += r / 67108864 | 0;
            rword = r & 67108863;
          }
          out.words[k] = rword | 0;
          carry = ncarry | 0;
        }
        if (carry !== 0) {
          out.words[k] = carry | 0;
        } else {
          out.length--;
        }
        return out.strip();
      }
      var comb10MulTo = function comb10MulTo2(self2, num, out) {
        var a = self2.words;
        var b = num.words;
        var o = out.words;
        var c = 0;
        var lo;
        var mid;
        var hi;
        var a0 = a[0] | 0;
        var al0 = a0 & 8191;
        var ah0 = a0 >>> 13;
        var a1 = a[1] | 0;
        var al1 = a1 & 8191;
        var ah1 = a1 >>> 13;
        var a2 = a[2] | 0;
        var al2 = a2 & 8191;
        var ah2 = a2 >>> 13;
        var a3 = a[3] | 0;
        var al3 = a3 & 8191;
        var ah3 = a3 >>> 13;
        var a4 = a[4] | 0;
        var al4 = a4 & 8191;
        var ah4 = a4 >>> 13;
        var a5 = a[5] | 0;
        var al5 = a5 & 8191;
        var ah5 = a5 >>> 13;
        var a6 = a[6] | 0;
        var al6 = a6 & 8191;
        var ah6 = a6 >>> 13;
        var a7 = a[7] | 0;
        var al7 = a7 & 8191;
        var ah7 = a7 >>> 13;
        var a8 = a[8] | 0;
        var al8 = a8 & 8191;
        var ah8 = a8 >>> 13;
        var a9 = a[9] | 0;
        var al9 = a9 & 8191;
        var ah9 = a9 >>> 13;
        var b0 = b[0] | 0;
        var bl0 = b0 & 8191;
        var bh0 = b0 >>> 13;
        var b1 = b[1] | 0;
        var bl1 = b1 & 8191;
        var bh1 = b1 >>> 13;
        var b2 = b[2] | 0;
        var bl2 = b2 & 8191;
        var bh2 = b2 >>> 13;
        var b3 = b[3] | 0;
        var bl3 = b3 & 8191;
        var bh3 = b3 >>> 13;
        var b4 = b[4] | 0;
        var bl4 = b4 & 8191;
        var bh4 = b4 >>> 13;
        var b5 = b[5] | 0;
        var bl5 = b5 & 8191;
        var bh5 = b5 >>> 13;
        var b6 = b[6] | 0;
        var bl6 = b6 & 8191;
        var bh6 = b6 >>> 13;
        var b7 = b[7] | 0;
        var bl7 = b7 & 8191;
        var bh7 = b7 >>> 13;
        var b8 = b[8] | 0;
        var bl8 = b8 & 8191;
        var bh8 = b8 >>> 13;
        var b9 = b[9] | 0;
        var bl9 = b9 & 8191;
        var bh9 = b9 >>> 13;
        out.negative = self2.negative ^ num.negative;
        out.length = 19;
        lo = Math.imul(al0, bl0);
        mid = Math.imul(al0, bh0);
        mid = mid + Math.imul(ah0, bl0) | 0;
        hi = Math.imul(ah0, bh0);
        var w0 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;
        w0 &= 67108863;
        lo = Math.imul(al1, bl0);
        mid = Math.imul(al1, bh0);
        mid = mid + Math.imul(ah1, bl0) | 0;
        hi = Math.imul(ah1, bh0);
        lo = lo + Math.imul(al0, bl1) | 0;
        mid = mid + Math.imul(al0, bh1) | 0;
        mid = mid + Math.imul(ah0, bl1) | 0;
        hi = hi + Math.imul(ah0, bh1) | 0;
        var w1 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;
        w1 &= 67108863;
        lo = Math.imul(al2, bl0);
        mid = Math.imul(al2, bh0);
        mid = mid + Math.imul(ah2, bl0) | 0;
        hi = Math.imul(ah2, bh0);
        lo = lo + Math.imul(al1, bl1) | 0;
        mid = mid + Math.imul(al1, bh1) | 0;
        mid = mid + Math.imul(ah1, bl1) | 0;
        hi = hi + Math.imul(ah1, bh1) | 0;
        lo = lo + Math.imul(al0, bl2) | 0;
        mid = mid + Math.imul(al0, bh2) | 0;
        mid = mid + Math.imul(ah0, bl2) | 0;
        hi = hi + Math.imul(ah0, bh2) | 0;
        var w2 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;
        w2 &= 67108863;
        lo = Math.imul(al3, bl0);
        mid = Math.imul(al3, bh0);
        mid = mid + Math.imul(ah3, bl0) | 0;
        hi = Math.imul(ah3, bh0);
        lo = lo + Math.imul(al2, bl1) | 0;
        mid = mid + Math.imul(al2, bh1) | 0;
        mid = mid + Math.imul(ah2, bl1) | 0;
        hi = hi + Math.imul(ah2, bh1) | 0;
        lo = lo + Math.imul(al1, bl2) | 0;
        mid = mid + Math.imul(al1, bh2) | 0;
        mid = mid + Math.imul(ah1, bl2) | 0;
        hi = hi + Math.imul(ah1, bh2) | 0;
        lo = lo + Math.imul(al0, bl3) | 0;
        mid = mid + Math.imul(al0, bh3) | 0;
        mid = mid + Math.imul(ah0, bl3) | 0;
        hi = hi + Math.imul(ah0, bh3) | 0;
        var w3 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;
        w3 &= 67108863;
        lo = Math.imul(al4, bl0);
        mid = Math.imul(al4, bh0);
        mid = mid + Math.imul(ah4, bl0) | 0;
        hi = Math.imul(ah4, bh0);
        lo = lo + Math.imul(al3, bl1) | 0;
        mid = mid + Math.imul(al3, bh1) | 0;
        mid = mid + Math.imul(ah3, bl1) | 0;
        hi = hi + Math.imul(ah3, bh1) | 0;
        lo = lo + Math.imul(al2, bl2) | 0;
        mid = mid + Math.imul(al2, bh2) | 0;
        mid = mid + Math.imul(ah2, bl2) | 0;
        hi = hi + Math.imul(ah2, bh2) | 0;
        lo = lo + Math.imul(al1, bl3) | 0;
        mid = mid + Math.imul(al1, bh3) | 0;
        mid = mid + Math.imul(ah1, bl3) | 0;
        hi = hi + Math.imul(ah1, bh3) | 0;
        lo = lo + Math.imul(al0, bl4) | 0;
        mid = mid + Math.imul(al0, bh4) | 0;
        mid = mid + Math.imul(ah0, bl4) | 0;
        hi = hi + Math.imul(ah0, bh4) | 0;
        var w4 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;
        w4 &= 67108863;
        lo = Math.imul(al5, bl0);
        mid = Math.imul(al5, bh0);
        mid = mid + Math.imul(ah5, bl0) | 0;
        hi = Math.imul(ah5, bh0);
        lo = lo + Math.imul(al4, bl1) | 0;
        mid = mid + Math.imul(al4, bh1) | 0;
        mid = mid + Math.imul(ah4, bl1) | 0;
        hi = hi + Math.imul(ah4, bh1) | 0;
        lo = lo + Math.imul(al3, bl2) | 0;
        mid = mid + Math.imul(al3, bh2) | 0;
        mid = mid + Math.imul(ah3, bl2) | 0;
        hi = hi + Math.imul(ah3, bh2) | 0;
        lo = lo + Math.imul(al2, bl3) | 0;
        mid = mid + Math.imul(al2, bh3) | 0;
        mid = mid + Math.imul(ah2, bl3) | 0;
        hi = hi + Math.imul(ah2, bh3) | 0;
        lo = lo + Math.imul(al1, bl4) | 0;
        mid = mid + Math.imul(al1, bh4) | 0;
        mid = mid + Math.imul(ah1, bl4) | 0;
        hi = hi + Math.imul(ah1, bh4) | 0;
        lo = lo + Math.imul(al0, bl5) | 0;
        mid = mid + Math.imul(al0, bh5) | 0;
        mid = mid + Math.imul(ah0, bl5) | 0;
        hi = hi + Math.imul(ah0, bh5) | 0;
        var w5 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;
        w5 &= 67108863;
        lo = Math.imul(al6, bl0);
        mid = Math.imul(al6, bh0);
        mid = mid + Math.imul(ah6, bl0) | 0;
        hi = Math.imul(ah6, bh0);
        lo = lo + Math.imul(al5, bl1) | 0;
        mid = mid + Math.imul(al5, bh1) | 0;
        mid = mid + Math.imul(ah5, bl1) | 0;
        hi = hi + Math.imul(ah5, bh1) | 0;
        lo = lo + Math.imul(al4, bl2) | 0;
        mid = mid + Math.imul(al4, bh2) | 0;
        mid = mid + Math.imul(ah4, bl2) | 0;
        hi = hi + Math.imul(ah4, bh2) | 0;
        lo = lo + Math.imul(al3, bl3) | 0;
        mid = mid + Math.imul(al3, bh3) | 0;
        mid = mid + Math.imul(ah3, bl3) | 0;
        hi = hi + Math.imul(ah3, bh3) | 0;
        lo = lo + Math.imul(al2, bl4) | 0;
        mid = mid + Math.imul(al2, bh4) | 0;
        mid = mid + Math.imul(ah2, bl4) | 0;
        hi = hi + Math.imul(ah2, bh4) | 0;
        lo = lo + Math.imul(al1, bl5) | 0;
        mid = mid + Math.imul(al1, bh5) | 0;
        mid = mid + Math.imul(ah1, bl5) | 0;
        hi = hi + Math.imul(ah1, bh5) | 0;
        lo = lo + Math.imul(al0, bl6) | 0;
        mid = mid + Math.imul(al0, bh6) | 0;
        mid = mid + Math.imul(ah0, bl6) | 0;
        hi = hi + Math.imul(ah0, bh6) | 0;
        var w6 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;
        w6 &= 67108863;
        lo = Math.imul(al7, bl0);
        mid = Math.imul(al7, bh0);
        mid = mid + Math.imul(ah7, bl0) | 0;
        hi = Math.imul(ah7, bh0);
        lo = lo + Math.imul(al6, bl1) | 0;
        mid = mid + Math.imul(al6, bh1) | 0;
        mid = mid + Math.imul(ah6, bl1) | 0;
        hi = hi + Math.imul(ah6, bh1) | 0;
        lo = lo + Math.imul(al5, bl2) | 0;
        mid = mid + Math.imul(al5, bh2) | 0;
        mid = mid + Math.imul(ah5, bl2) | 0;
        hi = hi + Math.imul(ah5, bh2) | 0;
        lo = lo + Math.imul(al4, bl3) | 0;
        mid = mid + Math.imul(al4, bh3) | 0;
        mid = mid + Math.imul(ah4, bl3) | 0;
        hi = hi + Math.imul(ah4, bh3) | 0;
        lo = lo + Math.imul(al3, bl4) | 0;
        mid = mid + Math.imul(al3, bh4) | 0;
        mid = mid + Math.imul(ah3, bl4) | 0;
        hi = hi + Math.imul(ah3, bh4) | 0;
        lo = lo + Math.imul(al2, bl5) | 0;
        mid = mid + Math.imul(al2, bh5) | 0;
        mid = mid + Math.imul(ah2, bl5) | 0;
        hi = hi + Math.imul(ah2, bh5) | 0;
        lo = lo + Math.imul(al1, bl6) | 0;
        mid = mid + Math.imul(al1, bh6) | 0;
        mid = mid + Math.imul(ah1, bl6) | 0;
        hi = hi + Math.imul(ah1, bh6) | 0;
        lo = lo + Math.imul(al0, bl7) | 0;
        mid = mid + Math.imul(al0, bh7) | 0;
        mid = mid + Math.imul(ah0, bl7) | 0;
        hi = hi + Math.imul(ah0, bh7) | 0;
        var w7 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;
        w7 &= 67108863;
        lo = Math.imul(al8, bl0);
        mid = Math.imul(al8, bh0);
        mid = mid + Math.imul(ah8, bl0) | 0;
        hi = Math.imul(ah8, bh0);
        lo = lo + Math.imul(al7, bl1) | 0;
        mid = mid + Math.imul(al7, bh1) | 0;
        mid = mid + Math.imul(ah7, bl1) | 0;
        hi = hi + Math.imul(ah7, bh1) | 0;
        lo = lo + Math.imul(al6, bl2) | 0;
        mid = mid + Math.imul(al6, bh2) | 0;
        mid = mid + Math.imul(ah6, bl2) | 0;
        hi = hi + Math.imul(ah6, bh2) | 0;
        lo = lo + Math.imul(al5, bl3) | 0;
        mid = mid + Math.imul(al5, bh3) | 0;
        mid = mid + Math.imul(ah5, bl3) | 0;
        hi = hi + Math.imul(ah5, bh3) | 0;
        lo = lo + Math.imul(al4, bl4) | 0;
        mid = mid + Math.imul(al4, bh4) | 0;
        mid = mid + Math.imul(ah4, bl4) | 0;
        hi = hi + Math.imul(ah4, bh4) | 0;
        lo = lo + Math.imul(al3, bl5) | 0;
        mid = mid + Math.imul(al3, bh5) | 0;
        mid = mid + Math.imul(ah3, bl5) | 0;
        hi = hi + Math.imul(ah3, bh5) | 0;
        lo = lo + Math.imul(al2, bl6) | 0;
        mid = mid + Math.imul(al2, bh6) | 0;
        mid = mid + Math.imul(ah2, bl6) | 0;
        hi = hi + Math.imul(ah2, bh6) | 0;
        lo = lo + Math.imul(al1, bl7) | 0;
        mid = mid + Math.imul(al1, bh7) | 0;
        mid = mid + Math.imul(ah1, bl7) | 0;
        hi = hi + Math.imul(ah1, bh7) | 0;
        lo = lo + Math.imul(al0, bl8) | 0;
        mid = mid + Math.imul(al0, bh8) | 0;
        mid = mid + Math.imul(ah0, bl8) | 0;
        hi = hi + Math.imul(ah0, bh8) | 0;
        var w8 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;
        w8 &= 67108863;
        lo = Math.imul(al9, bl0);
        mid = Math.imul(al9, bh0);
        mid = mid + Math.imul(ah9, bl0) | 0;
        hi = Math.imul(ah9, bh0);
        lo = lo + Math.imul(al8, bl1) | 0;
        mid = mid + Math.imul(al8, bh1) | 0;
        mid = mid + Math.imul(ah8, bl1) | 0;
        hi = hi + Math.imul(ah8, bh1) | 0;
        lo = lo + Math.imul(al7, bl2) | 0;
        mid = mid + Math.imul(al7, bh2) | 0;
        mid = mid + Math.imul(ah7, bl2) | 0;
        hi = hi + Math.imul(ah7, bh2) | 0;
        lo = lo + Math.imul(al6, bl3) | 0;
        mid = mid + Math.imul(al6, bh3) | 0;
        mid = mid + Math.imul(ah6, bl3) | 0;
        hi = hi + Math.imul(ah6, bh3) | 0;
        lo = lo + Math.imul(al5, bl4) | 0;
        mid = mid + Math.imul(al5, bh4) | 0;
        mid = mid + Math.imul(ah5, bl4) | 0;
        hi = hi + Math.imul(ah5, bh4) | 0;
        lo = lo + Math.imul(al4, bl5) | 0;
        mid = mid + Math.imul(al4, bh5) | 0;
        mid = mid + Math.imul(ah4, bl5) | 0;
        hi = hi + Math.imul(ah4, bh5) | 0;
        lo = lo + Math.imul(al3, bl6) | 0;
        mid = mid + Math.imul(al3, bh6) | 0;
        mid = mid + Math.imul(ah3, bl6) | 0;
        hi = hi + Math.imul(ah3, bh6) | 0;
        lo = lo + Math.imul(al2, bl7) | 0;
        mid = mid + Math.imul(al2, bh7) | 0;
        mid = mid + Math.imul(ah2, bl7) | 0;
        hi = hi + Math.imul(ah2, bh7) | 0;
        lo = lo + Math.imul(al1, bl8) | 0;
        mid = mid + Math.imul(al1, bh8) | 0;
        mid = mid + Math.imul(ah1, bl8) | 0;
        hi = hi + Math.imul(ah1, bh8) | 0;
        lo = lo + Math.imul(al0, bl9) | 0;
        mid = mid + Math.imul(al0, bh9) | 0;
        mid = mid + Math.imul(ah0, bl9) | 0;
        hi = hi + Math.imul(ah0, bh9) | 0;
        var w9 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;
        w9 &= 67108863;
        lo = Math.imul(al9, bl1);
        mid = Math.imul(al9, bh1);
        mid = mid + Math.imul(ah9, bl1) | 0;
        hi = Math.imul(ah9, bh1);
        lo = lo + Math.imul(al8, bl2) | 0;
        mid = mid + Math.imul(al8, bh2) | 0;
        mid = mid + Math.imul(ah8, bl2) | 0;
        hi = hi + Math.imul(ah8, bh2) | 0;
        lo = lo + Math.imul(al7, bl3) | 0;
        mid = mid + Math.imul(al7, bh3) | 0;
        mid = mid + Math.imul(ah7, bl3) | 0;
        hi = hi + Math.imul(ah7, bh3) | 0;
        lo = lo + Math.imul(al6, bl4) | 0;
        mid = mid + Math.imul(al6, bh4) | 0;
        mid = mid + Math.imul(ah6, bl4) | 0;
        hi = hi + Math.imul(ah6, bh4) | 0;
        lo = lo + Math.imul(al5, bl5) | 0;
        mid = mid + Math.imul(al5, bh5) | 0;
        mid = mid + Math.imul(ah5, bl5) | 0;
        hi = hi + Math.imul(ah5, bh5) | 0;
        lo = lo + Math.imul(al4, bl6) | 0;
        mid = mid + Math.imul(al4, bh6) | 0;
        mid = mid + Math.imul(ah4, bl6) | 0;
        hi = hi + Math.imul(ah4, bh6) | 0;
        lo = lo + Math.imul(al3, bl7) | 0;
        mid = mid + Math.imul(al3, bh7) | 0;
        mid = mid + Math.imul(ah3, bl7) | 0;
        hi = hi + Math.imul(ah3, bh7) | 0;
        lo = lo + Math.imul(al2, bl8) | 0;
        mid = mid + Math.imul(al2, bh8) | 0;
        mid = mid + Math.imul(ah2, bl8) | 0;
        hi = hi + Math.imul(ah2, bh8) | 0;
        lo = lo + Math.imul(al1, bl9) | 0;
        mid = mid + Math.imul(al1, bh9) | 0;
        mid = mid + Math.imul(ah1, bl9) | 0;
        hi = hi + Math.imul(ah1, bh9) | 0;
        var w10 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;
        w10 &= 67108863;
        lo = Math.imul(al9, bl2);
        mid = Math.imul(al9, bh2);
        mid = mid + Math.imul(ah9, bl2) | 0;
        hi = Math.imul(ah9, bh2);
        lo = lo + Math.imul(al8, bl3) | 0;
        mid = mid + Math.imul(al8, bh3) | 0;
        mid = mid + Math.imul(ah8, bl3) | 0;
        hi = hi + Math.imul(ah8, bh3) | 0;
        lo = lo + Math.imul(al7, bl4) | 0;
        mid = mid + Math.imul(al7, bh4) | 0;
        mid = mid + Math.imul(ah7, bl4) | 0;
        hi = hi + Math.imul(ah7, bh4) | 0;
        lo = lo + Math.imul(al6, bl5) | 0;
        mid = mid + Math.imul(al6, bh5) | 0;
        mid = mid + Math.imul(ah6, bl5) | 0;
        hi = hi + Math.imul(ah6, bh5) | 0;
        lo = lo + Math.imul(al5, bl6) | 0;
        mid = mid + Math.imul(al5, bh6) | 0;
        mid = mid + Math.imul(ah5, bl6) | 0;
        hi = hi + Math.imul(ah5, bh6) | 0;
        lo = lo + Math.imul(al4, bl7) | 0;
        mid = mid + Math.imul(al4, bh7) | 0;
        mid = mid + Math.imul(ah4, bl7) | 0;
        hi = hi + Math.imul(ah4, bh7) | 0;
        lo = lo + Math.imul(al3, bl8) | 0;
        mid = mid + Math.imul(al3, bh8) | 0;
        mid = mid + Math.imul(ah3, bl8) | 0;
        hi = hi + Math.imul(ah3, bh8) | 0;
        lo = lo + Math.imul(al2, bl9) | 0;
        mid = mid + Math.imul(al2, bh9) | 0;
        mid = mid + Math.imul(ah2, bl9) | 0;
        hi = hi + Math.imul(ah2, bh9) | 0;
        var w11 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;
        w11 &= 67108863;
        lo = Math.imul(al9, bl3);
        mid = Math.imul(al9, bh3);
        mid = mid + Math.imul(ah9, bl3) | 0;
        hi = Math.imul(ah9, bh3);
        lo = lo + Math.imul(al8, bl4) | 0;
        mid = mid + Math.imul(al8, bh4) | 0;
        mid = mid + Math.imul(ah8, bl4) | 0;
        hi = hi + Math.imul(ah8, bh4) | 0;
        lo = lo + Math.imul(al7, bl5) | 0;
        mid = mid + Math.imul(al7, bh5) | 0;
        mid = mid + Math.imul(ah7, bl5) | 0;
        hi = hi + Math.imul(ah7, bh5) | 0;
        lo = lo + Math.imul(al6, bl6) | 0;
        mid = mid + Math.imul(al6, bh6) | 0;
        mid = mid + Math.imul(ah6, bl6) | 0;
        hi = hi + Math.imul(ah6, bh6) | 0;
        lo = lo + Math.imul(al5, bl7) | 0;
        mid = mid + Math.imul(al5, bh7) | 0;
        mid = mid + Math.imul(ah5, bl7) | 0;
        hi = hi + Math.imul(ah5, bh7) | 0;
        lo = lo + Math.imul(al4, bl8) | 0;
        mid = mid + Math.imul(al4, bh8) | 0;
        mid = mid + Math.imul(ah4, bl8) | 0;
        hi = hi + Math.imul(ah4, bh8) | 0;
        lo = lo + Math.imul(al3, bl9) | 0;
        mid = mid + Math.imul(al3, bh9) | 0;
        mid = mid + Math.imul(ah3, bl9) | 0;
        hi = hi + Math.imul(ah3, bh9) | 0;
        var w12 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;
        w12 &= 67108863;
        lo = Math.imul(al9, bl4);
        mid = Math.imul(al9, bh4);
        mid = mid + Math.imul(ah9, bl4) | 0;
        hi = Math.imul(ah9, bh4);
        lo = lo + Math.imul(al8, bl5) | 0;
        mid = mid + Math.imul(al8, bh5) | 0;
        mid = mid + Math.imul(ah8, bl5) | 0;
        hi = hi + Math.imul(ah8, bh5) | 0;
        lo = lo + Math.imul(al7, bl6) | 0;
        mid = mid + Math.imul(al7, bh6) | 0;
        mid = mid + Math.imul(ah7, bl6) | 0;
        hi = hi + Math.imul(ah7, bh6) | 0;
        lo = lo + Math.imul(al6, bl7) | 0;
        mid = mid + Math.imul(al6, bh7) | 0;
        mid = mid + Math.imul(ah6, bl7) | 0;
        hi = hi + Math.imul(ah6, bh7) | 0;
        lo = lo + Math.imul(al5, bl8) | 0;
        mid = mid + Math.imul(al5, bh8) | 0;
        mid = mid + Math.imul(ah5, bl8) | 0;
        hi = hi + Math.imul(ah5, bh8) | 0;
        lo = lo + Math.imul(al4, bl9) | 0;
        mid = mid + Math.imul(al4, bh9) | 0;
        mid = mid + Math.imul(ah4, bl9) | 0;
        hi = hi + Math.imul(ah4, bh9) | 0;
        var w13 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;
        w13 &= 67108863;
        lo = Math.imul(al9, bl5);
        mid = Math.imul(al9, bh5);
        mid = mid + Math.imul(ah9, bl5) | 0;
        hi = Math.imul(ah9, bh5);
        lo = lo + Math.imul(al8, bl6) | 0;
        mid = mid + Math.imul(al8, bh6) | 0;
        mid = mid + Math.imul(ah8, bl6) | 0;
        hi = hi + Math.imul(ah8, bh6) | 0;
        lo = lo + Math.imul(al7, bl7) | 0;
        mid = mid + Math.imul(al7, bh7) | 0;
        mid = mid + Math.imul(ah7, bl7) | 0;
        hi = hi + Math.imul(ah7, bh7) | 0;
        lo = lo + Math.imul(al6, bl8) | 0;
        mid = mid + Math.imul(al6, bh8) | 0;
        mid = mid + Math.imul(ah6, bl8) | 0;
        hi = hi + Math.imul(ah6, bh8) | 0;
        lo = lo + Math.imul(al5, bl9) | 0;
        mid = mid + Math.imul(al5, bh9) | 0;
        mid = mid + Math.imul(ah5, bl9) | 0;
        hi = hi + Math.imul(ah5, bh9) | 0;
        var w14 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;
        w14 &= 67108863;
        lo = Math.imul(al9, bl6);
        mid = Math.imul(al9, bh6);
        mid = mid + Math.imul(ah9, bl6) | 0;
        hi = Math.imul(ah9, bh6);
        lo = lo + Math.imul(al8, bl7) | 0;
        mid = mid + Math.imul(al8, bh7) | 0;
        mid = mid + Math.imul(ah8, bl7) | 0;
        hi = hi + Math.imul(ah8, bh7) | 0;
        lo = lo + Math.imul(al7, bl8) | 0;
        mid = mid + Math.imul(al7, bh8) | 0;
        mid = mid + Math.imul(ah7, bl8) | 0;
        hi = hi + Math.imul(ah7, bh8) | 0;
        lo = lo + Math.imul(al6, bl9) | 0;
        mid = mid + Math.imul(al6, bh9) | 0;
        mid = mid + Math.imul(ah6, bl9) | 0;
        hi = hi + Math.imul(ah6, bh9) | 0;
        var w15 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;
        w15 &= 67108863;
        lo = Math.imul(al9, bl7);
        mid = Math.imul(al9, bh7);
        mid = mid + Math.imul(ah9, bl7) | 0;
        hi = Math.imul(ah9, bh7);
        lo = lo + Math.imul(al8, bl8) | 0;
        mid = mid + Math.imul(al8, bh8) | 0;
        mid = mid + Math.imul(ah8, bl8) | 0;
        hi = hi + Math.imul(ah8, bh8) | 0;
        lo = lo + Math.imul(al7, bl9) | 0;
        mid = mid + Math.imul(al7, bh9) | 0;
        mid = mid + Math.imul(ah7, bl9) | 0;
        hi = hi + Math.imul(ah7, bh9) | 0;
        var w16 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;
        w16 &= 67108863;
        lo = Math.imul(al9, bl8);
        mid = Math.imul(al9, bh8);
        mid = mid + Math.imul(ah9, bl8) | 0;
        hi = Math.imul(ah9, bh8);
        lo = lo + Math.imul(al8, bl9) | 0;
        mid = mid + Math.imul(al8, bh9) | 0;
        mid = mid + Math.imul(ah8, bl9) | 0;
        hi = hi + Math.imul(ah8, bh9) | 0;
        var w17 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;
        w17 &= 67108863;
        lo = Math.imul(al9, bl9);
        mid = Math.imul(al9, bh9);
        mid = mid + Math.imul(ah9, bl9) | 0;
        hi = Math.imul(ah9, bh9);
        var w18 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;
        w18 &= 67108863;
        o[0] = w0;
        o[1] = w1;
        o[2] = w2;
        o[3] = w3;
        o[4] = w4;
        o[5] = w5;
        o[6] = w6;
        o[7] = w7;
        o[8] = w8;
        o[9] = w9;
        o[10] = w10;
        o[11] = w11;
        o[12] = w12;
        o[13] = w13;
        o[14] = w14;
        o[15] = w15;
        o[16] = w16;
        o[17] = w17;
        o[18] = w18;
        if (c !== 0) {
          o[19] = c;
          out.length++;
        }
        return out;
      };
      if (!Math.imul) {
        comb10MulTo = smallMulTo;
      }
      function bigMulTo(self2, num, out) {
        out.negative = num.negative ^ self2.negative;
        out.length = self2.length + num.length;
        var carry = 0;
        var hncarry = 0;
        for (var k = 0; k < out.length - 1; k++) {
          var ncarry = hncarry;
          hncarry = 0;
          var rword = carry & 67108863;
          var maxJ = Math.min(k, num.length - 1);
          for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {
            var i = k - j;
            var a = self2.words[i] | 0;
            var b = num.words[j] | 0;
            var r = a * b;
            var lo = r & 67108863;
            ncarry = ncarry + (r / 67108864 | 0) | 0;
            lo = lo + rword | 0;
            rword = lo & 67108863;
            ncarry = ncarry + (lo >>> 26) | 0;
            hncarry += ncarry >>> 26;
            ncarry &= 67108863;
          }
          out.words[k] = rword;
          carry = ncarry;
          ncarry = hncarry;
        }
        if (carry !== 0) {
          out.words[k] = carry;
        } else {
          out.length--;
        }
        return out.strip();
      }
      function jumboMulTo(self2, num, out) {
        var fftm = new FFTM();
        return fftm.mulp(self2, num, out);
      }
      BN.prototype.mulTo = function mulTo(num, out) {
        var res;
        var len = this.length + num.length;
        if (this.length === 10 && num.length === 10) {
          res = comb10MulTo(this, num, out);
        } else if (len < 63) {
          res = smallMulTo(this, num, out);
        } else if (len < 1024) {
          res = bigMulTo(this, num, out);
        } else {
          res = jumboMulTo(this, num, out);
        }
        return res;
      };
      function FFTM(x, y) {
        this.x = x;
        this.y = y;
      }
      FFTM.prototype.makeRBT = function makeRBT(N) {
        var t = new Array(N);
        var l = BN.prototype._countBits(N) - 1;
        for (var i = 0; i < N; i++) {
          t[i] = this.revBin(i, l, N);
        }
        return t;
      };
      FFTM.prototype.revBin = function revBin(x, l, N) {
        if (x === 0 || x === N - 1)
          return x;
        var rb = 0;
        for (var i = 0; i < l; i++) {
          rb |= (x & 1) << l - i - 1;
          x >>= 1;
        }
        return rb;
      };
      FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {
        for (var i = 0; i < N; i++) {
          rtws[i] = rws[rbt[i]];
          itws[i] = iws[rbt[i]];
        }
      };
      FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {
        this.permute(rbt, rws, iws, rtws, itws, N);
        for (var s = 1; s < N; s <<= 1) {
          var l = s << 1;
          var rtwdf = Math.cos(2 * Math.PI / l);
          var itwdf = Math.sin(2 * Math.PI / l);
          for (var p = 0; p < N; p += l) {
            var rtwdf_ = rtwdf;
            var itwdf_ = itwdf;
            for (var j = 0; j < s; j++) {
              var re = rtws[p + j];
              var ie = itws[p + j];
              var ro = rtws[p + j + s];
              var io = itws[p + j + s];
              var rx = rtwdf_ * ro - itwdf_ * io;
              io = rtwdf_ * io + itwdf_ * ro;
              ro = rx;
              rtws[p + j] = re + ro;
              itws[p + j] = ie + io;
              rtws[p + j + s] = re - ro;
              itws[p + j + s] = ie - io;
              if (j !== l) {
                rx = rtwdf * rtwdf_ - itwdf * itwdf_;
                itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                rtwdf_ = rx;
              }
            }
          }
        }
      };
      FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
        var N = Math.max(m, n) | 1;
        var odd = N & 1;
        var i = 0;
        for (N = N / 2 | 0; N; N = N >>> 1) {
          i++;
        }
        return 1 << i + 1 + odd;
      };
      FFTM.prototype.conjugate = function conjugate(rws, iws, N) {
        if (N <= 1)
          return;
        for (var i = 0; i < N / 2; i++) {
          var t = rws[i];
          rws[i] = rws[N - i - 1];
          rws[N - i - 1] = t;
          t = iws[i];
          iws[i] = -iws[N - i - 1];
          iws[N - i - 1] = -t;
        }
      };
      FFTM.prototype.normalize13b = function normalize13b(ws, N) {
        var carry = 0;
        for (var i = 0; i < N / 2; i++) {
          var w = Math.round(ws[2 * i + 1] / N) * 8192 + Math.round(ws[2 * i] / N) + carry;
          ws[i] = w & 67108863;
          if (w < 67108864) {
            carry = 0;
          } else {
            carry = w / 67108864 | 0;
          }
        }
        return ws;
      };
      FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {
        var carry = 0;
        for (var i = 0; i < len; i++) {
          carry = carry + (ws[i] | 0);
          rws[2 * i] = carry & 8191;
          carry = carry >>> 13;
          rws[2 * i + 1] = carry & 8191;
          carry = carry >>> 13;
        }
        for (i = 2 * len; i < N; ++i) {
          rws[i] = 0;
        }
        assert(carry === 0);
        assert((carry & ~8191) === 0);
      };
      FFTM.prototype.stub = function stub(N) {
        var ph = new Array(N);
        for (var i = 0; i < N; i++) {
          ph[i] = 0;
        }
        return ph;
      };
      FFTM.prototype.mulp = function mulp(x, y, out) {
        var N = 2 * this.guessLen13b(x.length, y.length);
        var rbt = this.makeRBT(N);
        var _ = this.stub(N);
        var rws = new Array(N);
        var rwst = new Array(N);
        var iwst = new Array(N);
        var nrws = new Array(N);
        var nrwst = new Array(N);
        var niwst = new Array(N);
        var rmws = out.words;
        rmws.length = N;
        this.convert13b(x.words, x.length, rws, N);
        this.convert13b(y.words, y.length, nrws, N);
        this.transform(rws, _, rwst, iwst, N, rbt);
        this.transform(nrws, _, nrwst, niwst, N, rbt);
        for (var i = 0; i < N; i++) {
          var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
          iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
          rwst[i] = rx;
        }
        this.conjugate(rwst, iwst, N);
        this.transform(rwst, iwst, rmws, _, N, rbt);
        this.conjugate(rmws, _, N);
        this.normalize13b(rmws, N);
        out.negative = x.negative ^ y.negative;
        out.length = x.length + y.length;
        return out.strip();
      };
      BN.prototype.mul = function mul(num) {
        var out = new BN(null);
        out.words = new Array(this.length + num.length);
        return this.mulTo(num, out);
      };
      BN.prototype.mulf = function mulf(num) {
        var out = new BN(null);
        out.words = new Array(this.length + num.length);
        return jumboMulTo(this, num, out);
      };
      BN.prototype.imul = function imul(num) {
        return this.clone().mulTo(num, this);
      };
      BN.prototype.imuln = function imuln(num) {
        assert(typeof num === "number");
        assert(num < 67108864);
        var carry = 0;
        for (var i = 0; i < this.length; i++) {
          var w = (this.words[i] | 0) * num;
          var lo = (w & 67108863) + (carry & 67108863);
          carry >>= 26;
          carry += w / 67108864 | 0;
          carry += lo >>> 26;
          this.words[i] = lo & 67108863;
        }
        if (carry !== 0) {
          this.words[i] = carry;
          this.length++;
        }
        return this;
      };
      BN.prototype.muln = function muln(num) {
        return this.clone().imuln(num);
      };
      BN.prototype.sqr = function sqr() {
        return this.mul(this);
      };
      BN.prototype.isqr = function isqr() {
        return this.imul(this.clone());
      };
      BN.prototype.pow = function pow(num) {
        var w = toBitArray(num);
        if (w.length === 0)
          return new BN(1);
        var res = this;
        for (var i = 0; i < w.length; i++, res = res.sqr()) {
          if (w[i] !== 0)
            break;
        }
        if (++i < w.length) {
          for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
            if (w[i] === 0)
              continue;
            res = res.mul(q);
          }
        }
        return res;
      };
      BN.prototype.iushln = function iushln(bits) {
        assert(typeof bits === "number" && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        var carryMask = 67108863 >>> 26 - r << 26 - r;
        var i;
        if (r !== 0) {
          var carry = 0;
          for (i = 0; i < this.length; i++) {
            var newCarry = this.words[i] & carryMask;
            var c = (this.words[i] | 0) - newCarry << r;
            this.words[i] = c | carry;
            carry = newCarry >>> 26 - r;
          }
          if (carry) {
            this.words[i] = carry;
            this.length++;
          }
        }
        if (s !== 0) {
          for (i = this.length - 1; i >= 0; i--) {
            this.words[i + s] = this.words[i];
          }
          for (i = 0; i < s; i++) {
            this.words[i] = 0;
          }
          this.length += s;
        }
        return this.strip();
      };
      BN.prototype.ishln = function ishln(bits) {
        assert(this.negative === 0);
        return this.iushln(bits);
      };
      BN.prototype.iushrn = function iushrn(bits, hint, extended) {
        assert(typeof bits === "number" && bits >= 0);
        var h;
        if (hint) {
          h = (hint - hint % 26) / 26;
        } else {
          h = 0;
        }
        var r = bits % 26;
        var s = Math.min((bits - r) / 26, this.length);
        var mask = 67108863 ^ 67108863 >>> r << r;
        var maskedWords = extended;
        h -= s;
        h = Math.max(0, h);
        if (maskedWords) {
          for (var i = 0; i < s; i++) {
            maskedWords.words[i] = this.words[i];
          }
          maskedWords.length = s;
        }
        if (s === 0) {
        } else if (this.length > s) {
          this.length -= s;
          for (i = 0; i < this.length; i++) {
            this.words[i] = this.words[i + s];
          }
        } else {
          this.words[0] = 0;
          this.length = 1;
        }
        var carry = 0;
        for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
          var word = this.words[i] | 0;
          this.words[i] = carry << 26 - r | word >>> r;
          carry = word & mask;
        }
        if (maskedWords && carry !== 0) {
          maskedWords.words[maskedWords.length++] = carry;
        }
        if (this.length === 0) {
          this.words[0] = 0;
          this.length = 1;
        }
        return this.strip();
      };
      BN.prototype.ishrn = function ishrn(bits, hint, extended) {
        assert(this.negative === 0);
        return this.iushrn(bits, hint, extended);
      };
      BN.prototype.shln = function shln(bits) {
        return this.clone().ishln(bits);
      };
      BN.prototype.ushln = function ushln(bits) {
        return this.clone().iushln(bits);
      };
      BN.prototype.shrn = function shrn(bits) {
        return this.clone().ishrn(bits);
      };
      BN.prototype.ushrn = function ushrn(bits) {
        return this.clone().iushrn(bits);
      };
      BN.prototype.testn = function testn(bit) {
        assert(typeof bit === "number" && bit >= 0);
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        if (this.length <= s)
          return false;
        var w = this.words[s];
        return !!(w & q);
      };
      BN.prototype.imaskn = function imaskn(bits) {
        assert(typeof bits === "number" && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        assert(this.negative === 0, "imaskn works only with positive numbers");
        if (this.length <= s) {
          return this;
        }
        if (r !== 0) {
          s++;
        }
        this.length = Math.min(s, this.length);
        if (r !== 0) {
          var mask = 67108863 ^ 67108863 >>> r << r;
          this.words[this.length - 1] &= mask;
        }
        return this.strip();
      };
      BN.prototype.maskn = function maskn(bits) {
        return this.clone().imaskn(bits);
      };
      BN.prototype.iaddn = function iaddn(num) {
        assert(typeof num === "number");
        assert(num < 67108864);
        if (num < 0)
          return this.isubn(-num);
        if (this.negative !== 0) {
          if (this.length === 1 && (this.words[0] | 0) < num) {
            this.words[0] = num - (this.words[0] | 0);
            this.negative = 0;
            return this;
          }
          this.negative = 0;
          this.isubn(num);
          this.negative = 1;
          return this;
        }
        return this._iaddn(num);
      };
      BN.prototype._iaddn = function _iaddn(num) {
        this.words[0] += num;
        for (var i = 0; i < this.length && this.words[i] >= 67108864; i++) {
          this.words[i] -= 67108864;
          if (i === this.length - 1) {
            this.words[i + 1] = 1;
          } else {
            this.words[i + 1]++;
          }
        }
        this.length = Math.max(this.length, i + 1);
        return this;
      };
      BN.prototype.isubn = function isubn(num) {
        assert(typeof num === "number");
        assert(num < 67108864);
        if (num < 0)
          return this.iaddn(-num);
        if (this.negative !== 0) {
          this.negative = 0;
          this.iaddn(num);
          this.negative = 1;
          return this;
        }
        this.words[0] -= num;
        if (this.length === 1 && this.words[0] < 0) {
          this.words[0] = -this.words[0];
          this.negative = 1;
        } else {
          for (var i = 0; i < this.length && this.words[i] < 0; i++) {
            this.words[i] += 67108864;
            this.words[i + 1] -= 1;
          }
        }
        return this.strip();
      };
      BN.prototype.addn = function addn(num) {
        return this.clone().iaddn(num);
      };
      BN.prototype.subn = function subn(num) {
        return this.clone().isubn(num);
      };
      BN.prototype.iabs = function iabs() {
        this.negative = 0;
        return this;
      };
      BN.prototype.abs = function abs() {
        return this.clone().iabs();
      };
      BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {
        var len = num.length + shift;
        var i;
        this._expand(len);
        var w;
        var carry = 0;
        for (i = 0; i < num.length; i++) {
          w = (this.words[i + shift] | 0) + carry;
          var right = (num.words[i] | 0) * mul;
          w -= right & 67108863;
          carry = (w >> 26) - (right / 67108864 | 0);
          this.words[i + shift] = w & 67108863;
        }
        for (; i < this.length - shift; i++) {
          w = (this.words[i + shift] | 0) + carry;
          carry = w >> 26;
          this.words[i + shift] = w & 67108863;
        }
        if (carry === 0)
          return this.strip();
        assert(carry === -1);
        carry = 0;
        for (i = 0; i < this.length; i++) {
          w = -(this.words[i] | 0) + carry;
          carry = w >> 26;
          this.words[i] = w & 67108863;
        }
        this.negative = 1;
        return this.strip();
      };
      BN.prototype._wordDiv = function _wordDiv(num, mode) {
        var shift = this.length - num.length;
        var a = this.clone();
        var b = num;
        var bhi = b.words[b.length - 1] | 0;
        var bhiBits = this._countBits(bhi);
        shift = 26 - bhiBits;
        if (shift !== 0) {
          b = b.ushln(shift);
          a.iushln(shift);
          bhi = b.words[b.length - 1] | 0;
        }
        var m = a.length - b.length;
        var q;
        if (mode !== "mod") {
          q = new BN(null);
          q.length = m + 1;
          q.words = new Array(q.length);
          for (var i = 0; i < q.length; i++) {
            q.words[i] = 0;
          }
        }
        var diff = a.clone()._ishlnsubmul(b, 1, m);
        if (diff.negative === 0) {
          a = diff;
          if (q) {
            q.words[m] = 1;
          }
        }
        for (var j = m - 1; j >= 0; j--) {
          var qj = (a.words[b.length + j] | 0) * 67108864 + (a.words[b.length + j - 1] | 0);
          qj = Math.min(qj / bhi | 0, 67108863);
          a._ishlnsubmul(b, qj, j);
          while (a.negative !== 0) {
            qj--;
            a.negative = 0;
            a._ishlnsubmul(b, 1, j);
            if (!a.isZero()) {
              a.negative ^= 1;
            }
          }
          if (q) {
            q.words[j] = qj;
          }
        }
        if (q) {
          q.strip();
        }
        a.strip();
        if (mode !== "div" && shift !== 0) {
          a.iushrn(shift);
        }
        return {
          div: q || null,
          mod: a
        };
      };
      BN.prototype.divmod = function divmod(num, mode, positive) {
        assert(!num.isZero());
        if (this.isZero()) {
          return {
            div: new BN(0),
            mod: new BN(0)
          };
        }
        var div, mod, res;
        if (this.negative !== 0 && num.negative === 0) {
          res = this.neg().divmod(num, mode);
          if (mode !== "mod") {
            div = res.div.neg();
          }
          if (mode !== "div") {
            mod = res.mod.neg();
            if (positive && mod.negative !== 0) {
              mod.iadd(num);
            }
          }
          return {
            div,
            mod
          };
        }
        if (this.negative === 0 && num.negative !== 0) {
          res = this.divmod(num.neg(), mode);
          if (mode !== "mod") {
            div = res.div.neg();
          }
          return {
            div,
            mod: res.mod
          };
        }
        if ((this.negative & num.negative) !== 0) {
          res = this.neg().divmod(num.neg(), mode);
          if (mode !== "div") {
            mod = res.mod.neg();
            if (positive && mod.negative !== 0) {
              mod.isub(num);
            }
          }
          return {
            div: res.div,
            mod
          };
        }
        if (num.length > this.length || this.cmp(num) < 0) {
          return {
            div: new BN(0),
            mod: this
          };
        }
        if (num.length === 1) {
          if (mode === "div") {
            return {
              div: this.divn(num.words[0]),
              mod: null
            };
          }
          if (mode === "mod") {
            return {
              div: null,
              mod: new BN(this.modn(num.words[0]))
            };
          }
          return {
            div: this.divn(num.words[0]),
            mod: new BN(this.modn(num.words[0]))
          };
        }
        return this._wordDiv(num, mode);
      };
      BN.prototype.div = function div(num) {
        return this.divmod(num, "div", false).div;
      };
      BN.prototype.mod = function mod(num) {
        return this.divmod(num, "mod", false).mod;
      };
      BN.prototype.umod = function umod(num) {
        return this.divmod(num, "mod", true).mod;
      };
      BN.prototype.divRound = function divRound(num) {
        var dm = this.divmod(num);
        if (dm.mod.isZero())
          return dm.div;
        var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;
        var half = num.ushrn(1);
        var r2 = num.andln(1);
        var cmp = mod.cmp(half);
        if (cmp < 0 || r2 === 1 && cmp === 0)
          return dm.div;
        return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
      };
      BN.prototype.modn = function modn(num) {
        assert(num <= 67108863);
        var p = (1 << 26) % num;
        var acc = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          acc = (p * acc + (this.words[i] | 0)) % num;
        }
        return acc;
      };
      BN.prototype.idivn = function idivn(num) {
        assert(num <= 67108863);
        var carry = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          var w = (this.words[i] | 0) + carry * 67108864;
          this.words[i] = w / num | 0;
          carry = w % num;
        }
        return this.strip();
      };
      BN.prototype.divn = function divn(num) {
        return this.clone().idivn(num);
      };
      BN.prototype.egcd = function egcd(p) {
        assert(p.negative === 0);
        assert(!p.isZero());
        var x = this;
        var y = p.clone();
        if (x.negative !== 0) {
          x = x.umod(p);
        } else {
          x = x.clone();
        }
        var A = new BN(1);
        var B = new BN(0);
        var C = new BN(0);
        var D = new BN(1);
        var g = 0;
        while (x.isEven() && y.isEven()) {
          x.iushrn(1);
          y.iushrn(1);
          ++g;
        }
        var yp = y.clone();
        var xp = x.clone();
        while (!x.isZero()) {
          for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1)
            ;
          if (i > 0) {
            x.iushrn(i);
            while (i-- > 0) {
              if (A.isOdd() || B.isOdd()) {
                A.iadd(yp);
                B.isub(xp);
              }
              A.iushrn(1);
              B.iushrn(1);
            }
          }
          for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1)
            ;
          if (j > 0) {
            y.iushrn(j);
            while (j-- > 0) {
              if (C.isOdd() || D.isOdd()) {
                C.iadd(yp);
                D.isub(xp);
              }
              C.iushrn(1);
              D.iushrn(1);
            }
          }
          if (x.cmp(y) >= 0) {
            x.isub(y);
            A.isub(C);
            B.isub(D);
          } else {
            y.isub(x);
            C.isub(A);
            D.isub(B);
          }
        }
        return {
          a: C,
          b: D,
          gcd: y.iushln(g)
        };
      };
      BN.prototype._invmp = function _invmp(p) {
        assert(p.negative === 0);
        assert(!p.isZero());
        var a = this;
        var b = p.clone();
        if (a.negative !== 0) {
          a = a.umod(p);
        } else {
          a = a.clone();
        }
        var x1 = new BN(1);
        var x2 = new BN(0);
        var delta = b.clone();
        while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
          for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1)
            ;
          if (i > 0) {
            a.iushrn(i);
            while (i-- > 0) {
              if (x1.isOdd()) {
                x1.iadd(delta);
              }
              x1.iushrn(1);
            }
          }
          for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1)
            ;
          if (j > 0) {
            b.iushrn(j);
            while (j-- > 0) {
              if (x2.isOdd()) {
                x2.iadd(delta);
              }
              x2.iushrn(1);
            }
          }
          if (a.cmp(b) >= 0) {
            a.isub(b);
            x1.isub(x2);
          } else {
            b.isub(a);
            x2.isub(x1);
          }
        }
        var res;
        if (a.cmpn(1) === 0) {
          res = x1;
        } else {
          res = x2;
        }
        if (res.cmpn(0) < 0) {
          res.iadd(p);
        }
        return res;
      };
      BN.prototype.gcd = function gcd(num) {
        if (this.isZero())
          return num.abs();
        if (num.isZero())
          return this.abs();
        var a = this.clone();
        var b = num.clone();
        a.negative = 0;
        b.negative = 0;
        for (var shift = 0; a.isEven() && b.isEven(); shift++) {
          a.iushrn(1);
          b.iushrn(1);
        }
        do {
          while (a.isEven()) {
            a.iushrn(1);
          }
          while (b.isEven()) {
            b.iushrn(1);
          }
          var r = a.cmp(b);
          if (r < 0) {
            var t = a;
            a = b;
            b = t;
          } else if (r === 0 || b.cmpn(1) === 0) {
            break;
          }
          a.isub(b);
        } while (true);
        return b.iushln(shift);
      };
      BN.prototype.invm = function invm(num) {
        return this.egcd(num).a.umod(num);
      };
      BN.prototype.isEven = function isEven() {
        return (this.words[0] & 1) === 0;
      };
      BN.prototype.isOdd = function isOdd() {
        return (this.words[0] & 1) === 1;
      };
      BN.prototype.andln = function andln(num) {
        return this.words[0] & num;
      };
      BN.prototype.bincn = function bincn(bit) {
        assert(typeof bit === "number");
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        if (this.length <= s) {
          this._expand(s + 1);
          this.words[s] |= q;
          return this;
        }
        var carry = q;
        for (var i = s; carry !== 0 && i < this.length; i++) {
          var w = this.words[i] | 0;
          w += carry;
          carry = w >>> 26;
          w &= 67108863;
          this.words[i] = w;
        }
        if (carry !== 0) {
          this.words[i] = carry;
          this.length++;
        }
        return this;
      };
      BN.prototype.isZero = function isZero() {
        return this.length === 1 && this.words[0] === 0;
      };
      BN.prototype.cmpn = function cmpn(num) {
        var negative = num < 0;
        if (this.negative !== 0 && !negative)
          return -1;
        if (this.negative === 0 && negative)
          return 1;
        this.strip();
        var res;
        if (this.length > 1) {
          res = 1;
        } else {
          if (negative) {
            num = -num;
          }
          assert(num <= 67108863, "Number is too big");
          var w = this.words[0] | 0;
          res = w === num ? 0 : w < num ? -1 : 1;
        }
        if (this.negative !== 0)
          return -res | 0;
        return res;
      };
      BN.prototype.cmp = function cmp(num) {
        if (this.negative !== 0 && num.negative === 0)
          return -1;
        if (this.negative === 0 && num.negative !== 0)
          return 1;
        var res = this.ucmp(num);
        if (this.negative !== 0)
          return -res | 0;
        return res;
      };
      BN.prototype.ucmp = function ucmp(num) {
        if (this.length > num.length)
          return 1;
        if (this.length < num.length)
          return -1;
        var res = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          var a = this.words[i] | 0;
          var b = num.words[i] | 0;
          if (a === b)
            continue;
          if (a < b) {
            res = -1;
          } else if (a > b) {
            res = 1;
          }
          break;
        }
        return res;
      };
      BN.prototype.gtn = function gtn(num) {
        return this.cmpn(num) === 1;
      };
      BN.prototype.gt = function gt(num) {
        return this.cmp(num) === 1;
      };
      BN.prototype.gten = function gten(num) {
        return this.cmpn(num) >= 0;
      };
      BN.prototype.gte = function gte(num) {
        return this.cmp(num) >= 0;
      };
      BN.prototype.ltn = function ltn(num) {
        return this.cmpn(num) === -1;
      };
      BN.prototype.lt = function lt(num) {
        return this.cmp(num) === -1;
      };
      BN.prototype.lten = function lten(num) {
        return this.cmpn(num) <= 0;
      };
      BN.prototype.lte = function lte(num) {
        return this.cmp(num) <= 0;
      };
      BN.prototype.eqn = function eqn(num) {
        return this.cmpn(num) === 0;
      };
      BN.prototype.eq = function eq(num) {
        return this.cmp(num) === 0;
      };
      BN.red = function red(num) {
        return new Red(num);
      };
      BN.prototype.toRed = function toRed(ctx) {
        assert(!this.red, "Already a number in reduction context");
        assert(this.negative === 0, "red works only with positives");
        return ctx.convertTo(this)._forceRed(ctx);
      };
      BN.prototype.fromRed = function fromRed() {
        assert(this.red, "fromRed works only with numbers in reduction context");
        return this.red.convertFrom(this);
      };
      BN.prototype._forceRed = function _forceRed(ctx) {
        this.red = ctx;
        return this;
      };
      BN.prototype.forceRed = function forceRed(ctx) {
        assert(!this.red, "Already a number in reduction context");
        return this._forceRed(ctx);
      };
      BN.prototype.redAdd = function redAdd(num) {
        assert(this.red, "redAdd works only with red numbers");
        return this.red.add(this, num);
      };
      BN.prototype.redIAdd = function redIAdd(num) {
        assert(this.red, "redIAdd works only with red numbers");
        return this.red.iadd(this, num);
      };
      BN.prototype.redSub = function redSub(num) {
        assert(this.red, "redSub works only with red numbers");
        return this.red.sub(this, num);
      };
      BN.prototype.redISub = function redISub(num) {
        assert(this.red, "redISub works only with red numbers");
        return this.red.isub(this, num);
      };
      BN.prototype.redShl = function redShl(num) {
        assert(this.red, "redShl works only with red numbers");
        return this.red.shl(this, num);
      };
      BN.prototype.redMul = function redMul(num) {
        assert(this.red, "redMul works only with red numbers");
        this.red._verify2(this, num);
        return this.red.mul(this, num);
      };
      BN.prototype.redIMul = function redIMul(num) {
        assert(this.red, "redMul works only with red numbers");
        this.red._verify2(this, num);
        return this.red.imul(this, num);
      };
      BN.prototype.redSqr = function redSqr() {
        assert(this.red, "redSqr works only with red numbers");
        this.red._verify1(this);
        return this.red.sqr(this);
      };
      BN.prototype.redISqr = function redISqr() {
        assert(this.red, "redISqr works only with red numbers");
        this.red._verify1(this);
        return this.red.isqr(this);
      };
      BN.prototype.redSqrt = function redSqrt() {
        assert(this.red, "redSqrt works only with red numbers");
        this.red._verify1(this);
        return this.red.sqrt(this);
      };
      BN.prototype.redInvm = function redInvm() {
        assert(this.red, "redInvm works only with red numbers");
        this.red._verify1(this);
        return this.red.invm(this);
      };
      BN.prototype.redNeg = function redNeg() {
        assert(this.red, "redNeg works only with red numbers");
        this.red._verify1(this);
        return this.red.neg(this);
      };
      BN.prototype.redPow = function redPow(num) {
        assert(this.red && !num.red, "redPow(normalNum)");
        this.red._verify1(this);
        return this.red.pow(this, num);
      };
      var primes = {
        k256: null,
        p224: null,
        p192: null,
        p25519: null
      };
      function MPrime(name, p) {
        this.name = name;
        this.p = new BN(p, 16);
        this.n = this.p.bitLength();
        this.k = new BN(1).iushln(this.n).isub(this.p);
        this.tmp = this._tmp();
      }
      MPrime.prototype._tmp = function _tmp() {
        var tmp = new BN(null);
        tmp.words = new Array(Math.ceil(this.n / 13));
        return tmp;
      };
      MPrime.prototype.ireduce = function ireduce(num) {
        var r = num;
        var rlen;
        do {
          this.split(r, this.tmp);
          r = this.imulK(r);
          r = r.iadd(this.tmp);
          rlen = r.bitLength();
        } while (rlen > this.n);
        var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
        if (cmp === 0) {
          r.words[0] = 0;
          r.length = 1;
        } else if (cmp > 0) {
          r.isub(this.p);
        } else {
          if (r.strip !== void 0) {
            r.strip();
          } else {
            r._strip();
          }
        }
        return r;
      };
      MPrime.prototype.split = function split(input, out) {
        input.iushrn(this.n, 0, out);
      };
      MPrime.prototype.imulK = function imulK(num) {
        return num.imul(this.k);
      };
      function K256() {
        MPrime.call(
          this,
          "k256",
          "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f"
        );
      }
      inherits(K256, MPrime);
      K256.prototype.split = function split(input, output) {
        var mask = 4194303;
        var outLen = Math.min(input.length, 9);
        for (var i = 0; i < outLen; i++) {
          output.words[i] = input.words[i];
        }
        output.length = outLen;
        if (input.length <= 9) {
          input.words[0] = 0;
          input.length = 1;
          return;
        }
        var prev = input.words[9];
        output.words[output.length++] = prev & mask;
        for (i = 10; i < input.length; i++) {
          var next = input.words[i] | 0;
          input.words[i - 10] = (next & mask) << 4 | prev >>> 22;
          prev = next;
        }
        prev >>>= 22;
        input.words[i - 10] = prev;
        if (prev === 0 && input.length > 10) {
          input.length -= 10;
        } else {
          input.length -= 9;
        }
      };
      K256.prototype.imulK = function imulK(num) {
        num.words[num.length] = 0;
        num.words[num.length + 1] = 0;
        num.length += 2;
        var lo = 0;
        for (var i = 0; i < num.length; i++) {
          var w = num.words[i] | 0;
          lo += w * 977;
          num.words[i] = lo & 67108863;
          lo = w * 64 + (lo / 67108864 | 0);
        }
        if (num.words[num.length - 1] === 0) {
          num.length--;
          if (num.words[num.length - 1] === 0) {
            num.length--;
          }
        }
        return num;
      };
      function P224() {
        MPrime.call(
          this,
          "p224",
          "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001"
        );
      }
      inherits(P224, MPrime);
      function P192() {
        MPrime.call(
          this,
          "p192",
          "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff"
        );
      }
      inherits(P192, MPrime);
      function P25519() {
        MPrime.call(
          this,
          "25519",
          "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed"
        );
      }
      inherits(P25519, MPrime);
      P25519.prototype.imulK = function imulK(num) {
        var carry = 0;
        for (var i = 0; i < num.length; i++) {
          var hi = (num.words[i] | 0) * 19 + carry;
          var lo = hi & 67108863;
          hi >>>= 26;
          num.words[i] = lo;
          carry = hi;
        }
        if (carry !== 0) {
          num.words[num.length++] = carry;
        }
        return num;
      };
      BN._prime = function prime(name) {
        if (primes[name])
          return primes[name];
        var prime2;
        if (name === "k256") {
          prime2 = new K256();
        } else if (name === "p224") {
          prime2 = new P224();
        } else if (name === "p192") {
          prime2 = new P192();
        } else if (name === "p25519") {
          prime2 = new P25519();
        } else {
          throw new Error("Unknown prime " + name);
        }
        primes[name] = prime2;
        return prime2;
      };
      function Red(m) {
        if (typeof m === "string") {
          var prime = BN._prime(m);
          this.m = prime.p;
          this.prime = prime;
        } else {
          assert(m.gtn(1), "modulus must be greater than 1");
          this.m = m;
          this.prime = null;
        }
      }
      Red.prototype._verify1 = function _verify1(a) {
        assert(a.negative === 0, "red works only with positives");
        assert(a.red, "red works only with red numbers");
      };
      Red.prototype._verify2 = function _verify2(a, b) {
        assert((a.negative | b.negative) === 0, "red works only with positives");
        assert(
          a.red && a.red === b.red,
          "red works only with red numbers"
        );
      };
      Red.prototype.imod = function imod(a) {
        if (this.prime)
          return this.prime.ireduce(a)._forceRed(this);
        return a.umod(this.m)._forceRed(this);
      };
      Red.prototype.neg = function neg(a) {
        if (a.isZero()) {
          return a.clone();
        }
        return this.m.sub(a)._forceRed(this);
      };
      Red.prototype.add = function add(a, b) {
        this._verify2(a, b);
        var res = a.add(b);
        if (res.cmp(this.m) >= 0) {
          res.isub(this.m);
        }
        return res._forceRed(this);
      };
      Red.prototype.iadd = function iadd(a, b) {
        this._verify2(a, b);
        var res = a.iadd(b);
        if (res.cmp(this.m) >= 0) {
          res.isub(this.m);
        }
        return res;
      };
      Red.prototype.sub = function sub(a, b) {
        this._verify2(a, b);
        var res = a.sub(b);
        if (res.cmpn(0) < 0) {
          res.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Red.prototype.isub = function isub(a, b) {
        this._verify2(a, b);
        var res = a.isub(b);
        if (res.cmpn(0) < 0) {
          res.iadd(this.m);
        }
        return res;
      };
      Red.prototype.shl = function shl(a, num) {
        this._verify1(a);
        return this.imod(a.ushln(num));
      };
      Red.prototype.imul = function imul(a, b) {
        this._verify2(a, b);
        return this.imod(a.imul(b));
      };
      Red.prototype.mul = function mul(a, b) {
        this._verify2(a, b);
        return this.imod(a.mul(b));
      };
      Red.prototype.isqr = function isqr(a) {
        return this.imul(a, a.clone());
      };
      Red.prototype.sqr = function sqr(a) {
        return this.mul(a, a);
      };
      Red.prototype.sqrt = function sqrt(a) {
        if (a.isZero())
          return a.clone();
        var mod3 = this.m.andln(3);
        assert(mod3 % 2 === 1);
        if (mod3 === 3) {
          var pow = this.m.add(new BN(1)).iushrn(2);
          return this.pow(a, pow);
        }
        var q = this.m.subn(1);
        var s = 0;
        while (!q.isZero() && q.andln(1) === 0) {
          s++;
          q.iushrn(1);
        }
        assert(!q.isZero());
        var one = new BN(1).toRed(this);
        var nOne = one.redNeg();
        var lpow = this.m.subn(1).iushrn(1);
        var z = this.m.bitLength();
        z = new BN(2 * z * z).toRed(this);
        while (this.pow(z, lpow).cmp(nOne) !== 0) {
          z.redIAdd(nOne);
        }
        var c = this.pow(z, q);
        var r = this.pow(a, q.addn(1).iushrn(1));
        var t = this.pow(a, q);
        var m = s;
        while (t.cmp(one) !== 0) {
          var tmp = t;
          for (var i = 0; tmp.cmp(one) !== 0; i++) {
            tmp = tmp.redSqr();
          }
          assert(i < m);
          var b = this.pow(c, new BN(1).iushln(m - i - 1));
          r = r.redMul(b);
          c = b.redSqr();
          t = t.redMul(c);
          m = i;
        }
        return r;
      };
      Red.prototype.invm = function invm(a) {
        var inv = a._invmp(this.m);
        if (inv.negative !== 0) {
          inv.negative = 0;
          return this.imod(inv).redNeg();
        } else {
          return this.imod(inv);
        }
      };
      Red.prototype.pow = function pow(a, num) {
        if (num.isZero())
          return new BN(1).toRed(this);
        if (num.cmpn(1) === 0)
          return a.clone();
        var windowSize = 4;
        var wnd = new Array(1 << windowSize);
        wnd[0] = new BN(1).toRed(this);
        wnd[1] = a;
        for (var i = 2; i < wnd.length; i++) {
          wnd[i] = this.mul(wnd[i - 1], a);
        }
        var res = wnd[0];
        var current = 0;
        var currentLen = 0;
        var start = num.bitLength() % 26;
        if (start === 0) {
          start = 26;
        }
        for (i = num.length - 1; i >= 0; i--) {
          var word = num.words[i];
          for (var j = start - 1; j >= 0; j--) {
            var bit = word >> j & 1;
            if (res !== wnd[0]) {
              res = this.sqr(res);
            }
            if (bit === 0 && current === 0) {
              currentLen = 0;
              continue;
            }
            current <<= 1;
            current |= bit;
            currentLen++;
            if (currentLen !== windowSize && (i !== 0 || j !== 0))
              continue;
            res = this.mul(res, wnd[current]);
            currentLen = 0;
            current = 0;
          }
          start = 26;
        }
        return res;
      };
      Red.prototype.convertTo = function convertTo(num) {
        var r = num.umod(this.m);
        return r === num ? r.clone() : r;
      };
      Red.prototype.convertFrom = function convertFrom(num) {
        var res = num.clone();
        res.red = null;
        return res;
      };
      BN.mont = function mont(num) {
        return new Mont(num);
      };
      function Mont(m) {
        Red.call(this, m);
        this.shift = this.m.bitLength();
        if (this.shift % 26 !== 0) {
          this.shift += 26 - this.shift % 26;
        }
        this.r = new BN(1).iushln(this.shift);
        this.r2 = this.imod(this.r.sqr());
        this.rinv = this.r._invmp(this.m);
        this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
        this.minv = this.minv.umod(this.r);
        this.minv = this.r.sub(this.minv);
      }
      inherits(Mont, Red);
      Mont.prototype.convertTo = function convertTo(num) {
        return this.imod(num.ushln(this.shift));
      };
      Mont.prototype.convertFrom = function convertFrom(num) {
        var r = this.imod(num.mul(this.rinv));
        r.red = null;
        return r;
      };
      Mont.prototype.imul = function imul(a, b) {
        if (a.isZero() || b.isZero()) {
          a.words[0] = 0;
          a.length = 1;
          return a;
        }
        var t = a.imul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) {
          res = u.isub(this.m);
        } else if (u.cmpn(0) < 0) {
          res = u.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Mont.prototype.mul = function mul(a, b) {
        if (a.isZero() || b.isZero())
          return new BN(0)._forceRed(this);
        var t = a.mul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) {
          res = u.isub(this.m);
        } else if (u.cmpn(0) < 0) {
          res = u.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Mont.prototype.invm = function invm(a) {
        var res = this.imod(a._invmp(this.m).mul(this.r2));
        return res._forceRed(this);
      };
    })(typeof module === "undefined" || module, exports);
  }
});

// node_modules/minimalistic-assert/index.js
var require_minimalistic_assert = __commonJS({
  "node_modules/minimalistic-assert/index.js"(exports, module) {
    module.exports = assert;
    function assert(val, msg) {
      if (!val)
        throw new Error(msg || "Assertion failed");
    }
    assert.equal = function assertEqual(l, r, msg) {
      if (l != r)
        throw new Error(msg || "Assertion failed: " + l + " != " + r);
    };
  }
});

// node_modules/minimalistic-crypto-utils/lib/utils.js
var require_utils3 = __commonJS({
  "node_modules/minimalistic-crypto-utils/lib/utils.js"(exports) {
    "use strict";
    var utils = exports;
    function toArray(msg, enc) {
      if (Array.isArray(msg))
        return msg.slice();
      if (!msg)
        return [];
      var res = [];
      if (typeof msg !== "string") {
        for (var i = 0; i < msg.length; i++)
          res[i] = msg[i] | 0;
        return res;
      }
      if (enc === "hex") {
        msg = msg.replace(/[^a-z0-9]+/ig, "");
        if (msg.length % 2 !== 0)
          msg = "0" + msg;
        for (var i = 0; i < msg.length; i += 2)
          res.push(parseInt(msg[i] + msg[i + 1], 16));
      } else {
        for (var i = 0; i < msg.length; i++) {
          var c = msg.charCodeAt(i);
          var hi = c >> 8;
          var lo = c & 255;
          if (hi)
            res.push(hi, lo);
          else
            res.push(lo);
        }
      }
      return res;
    }
    utils.toArray = toArray;
    function zero2(word) {
      if (word.length === 1)
        return "0" + word;
      else
        return word;
    }
    utils.zero2 = zero2;
    function toHex(msg) {
      var res = "";
      for (var i = 0; i < msg.length; i++)
        res += zero2(msg[i].toString(16));
      return res;
    }
    utils.toHex = toHex;
    utils.encode = function encode(arr, enc) {
      if (enc === "hex")
        return toHex(arr);
      else
        return arr;
    };
  }
});

// node_modules/elliptic/lib/elliptic/utils.js
var require_utils4 = __commonJS({
  "node_modules/elliptic/lib/elliptic/utils.js"(exports) {
    "use strict";
    var utils = exports;
    var BN = require_bn2();
    var minAssert = require_minimalistic_assert();
    var minUtils = require_utils3();
    utils.assert = minAssert;
    utils.toArray = minUtils.toArray;
    utils.zero2 = minUtils.zero2;
    utils.toHex = minUtils.toHex;
    utils.encode = minUtils.encode;
    function getNAF(num, w, bits) {
      var naf = new Array(Math.max(num.bitLength(), bits) + 1);
      naf.fill(0);
      var ws = 1 << w + 1;
      var k = num.clone();
      for (var i = 0; i < naf.length; i++) {
        var z;
        var mod = k.andln(ws - 1);
        if (k.isOdd()) {
          if (mod > (ws >> 1) - 1)
            z = (ws >> 1) - mod;
          else
            z = mod;
          k.isubn(z);
        } else {
          z = 0;
        }
        naf[i] = z;
        k.iushrn(1);
      }
      return naf;
    }
    utils.getNAF = getNAF;
    function getJSF(k1, k2) {
      var jsf = [
        [],
        []
      ];
      k1 = k1.clone();
      k2 = k2.clone();
      var d1 = 0;
      var d2 = 0;
      var m8;
      while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {
        var m14 = k1.andln(3) + d1 & 3;
        var m24 = k2.andln(3) + d2 & 3;
        if (m14 === 3)
          m14 = -1;
        if (m24 === 3)
          m24 = -1;
        var u1;
        if ((m14 & 1) === 0) {
          u1 = 0;
        } else {
          m8 = k1.andln(7) + d1 & 7;
          if ((m8 === 3 || m8 === 5) && m24 === 2)
            u1 = -m14;
          else
            u1 = m14;
        }
        jsf[0].push(u1);
        var u2;
        if ((m24 & 1) === 0) {
          u2 = 0;
        } else {
          m8 = k2.andln(7) + d2 & 7;
          if ((m8 === 3 || m8 === 5) && m14 === 2)
            u2 = -m24;
          else
            u2 = m24;
        }
        jsf[1].push(u2);
        if (2 * d1 === u1 + 1)
          d1 = 1 - d1;
        if (2 * d2 === u2 + 1)
          d2 = 1 - d2;
        k1.iushrn(1);
        k2.iushrn(1);
      }
      return jsf;
    }
    utils.getJSF = getJSF;
    function cachedProperty(obj, name, computer) {
      var key = "_" + name;
      obj.prototype[name] = function cachedProperty2() {
        return this[key] !== void 0 ? this[key] : this[key] = computer.call(this);
      };
    }
    utils.cachedProperty = cachedProperty;
    function parseBytes(bytes) {
      return typeof bytes === "string" ? utils.toArray(bytes, "hex") : bytes;
    }
    utils.parseBytes = parseBytes;
    function intFromLE(bytes) {
      return new BN(bytes, "hex", "le");
    }
    utils.intFromLE = intFromLE;
  }
});

// node_modules/brorand/index.js
var require_brorand = __commonJS({
  "node_modules/brorand/index.js"(exports, module) {
    var r;
    module.exports = function rand(len) {
      if (!r)
        r = new Rand(null);
      return r.generate(len);
    };
    function Rand(rand) {
      this.rand = rand;
    }
    module.exports.Rand = Rand;
    Rand.prototype.generate = function generate(len) {
      return this._rand(len);
    };
    Rand.prototype._rand = function _rand(n) {
      if (this.rand.getBytes)
        return this.rand.getBytes(n);
      var res = new Uint8Array(n);
      for (var i = 0; i < res.length; i++)
        res[i] = this.rand.getByte();
      return res;
    };
    if (typeof self === "object") {
      if (self.crypto && self.crypto.getRandomValues) {
        Rand.prototype._rand = function _rand(n) {
          var arr = new Uint8Array(n);
          self.crypto.getRandomValues(arr);
          return arr;
        };
      } else if (self.msCrypto && self.msCrypto.getRandomValues) {
        Rand.prototype._rand = function _rand(n) {
          var arr = new Uint8Array(n);
          self.msCrypto.getRandomValues(arr);
          return arr;
        };
      } else if (typeof window === "object") {
        Rand.prototype._rand = function() {
          throw new Error("Not implemented yet");
        };
      }
    } else {
      try {
        crypto = require_crypto2();
        if (typeof crypto.randomBytes !== "function")
          throw new Error("Not supported");
        Rand.prototype._rand = function _rand(n) {
          return crypto.randomBytes(n);
        };
      } catch (e) {
      }
    }
    var crypto;
  }
});

// node_modules/elliptic/lib/elliptic/curve/base.js
var require_base = __commonJS({
  "node_modules/elliptic/lib/elliptic/curve/base.js"(exports, module) {
    "use strict";
    var BN = require_bn2();
    var utils = require_utils4();
    var getNAF = utils.getNAF;
    var getJSF = utils.getJSF;
    var assert = utils.assert;
    function BaseCurve(type, conf) {
      this.type = type;
      this.p = new BN(conf.p, 16);
      this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);
      this.zero = new BN(0).toRed(this.red);
      this.one = new BN(1).toRed(this.red);
      this.two = new BN(2).toRed(this.red);
      this.n = conf.n && new BN(conf.n, 16);
      this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);
      this._wnafT1 = new Array(4);
      this._wnafT2 = new Array(4);
      this._wnafT3 = new Array(4);
      this._wnafT4 = new Array(4);
      this._bitLength = this.n ? this.n.bitLength() : 0;
      var adjustCount = this.n && this.p.div(this.n);
      if (!adjustCount || adjustCount.cmpn(100) > 0) {
        this.redN = null;
      } else {
        this._maxwellTrick = true;
        this.redN = this.n.toRed(this.red);
      }
    }
    module.exports = BaseCurve;
    BaseCurve.prototype.point = function point() {
      throw new Error("Not implemented");
    };
    BaseCurve.prototype.validate = function validate() {
      throw new Error("Not implemented");
    };
    BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {
      assert(p.precomputed);
      var doubles = p._getDoubles();
      var naf = getNAF(k, 1, this._bitLength);
      var I = (1 << doubles.step + 1) - (doubles.step % 2 === 0 ? 2 : 1);
      I /= 3;
      var repr = [];
      var j;
      var nafW;
      for (j = 0; j < naf.length; j += doubles.step) {
        nafW = 0;
        for (var l = j + doubles.step - 1; l >= j; l--)
          nafW = (nafW << 1) + naf[l];
        repr.push(nafW);
      }
      var a = this.jpoint(null, null, null);
      var b = this.jpoint(null, null, null);
      for (var i = I; i > 0; i--) {
        for (j = 0; j < repr.length; j++) {
          nafW = repr[j];
          if (nafW === i)
            b = b.mixedAdd(doubles.points[j]);
          else if (nafW === -i)
            b = b.mixedAdd(doubles.points[j].neg());
        }
        a = a.add(b);
      }
      return a.toP();
    };
    BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {
      var w = 4;
      var nafPoints = p._getNAFPoints(w);
      w = nafPoints.wnd;
      var wnd = nafPoints.points;
      var naf = getNAF(k, w, this._bitLength);
      var acc = this.jpoint(null, null, null);
      for (var i = naf.length - 1; i >= 0; i--) {
        for (var l = 0; i >= 0 && naf[i] === 0; i--)
          l++;
        if (i >= 0)
          l++;
        acc = acc.dblp(l);
        if (i < 0)
          break;
        var z = naf[i];
        assert(z !== 0);
        if (p.type === "affine") {
          if (z > 0)
            acc = acc.mixedAdd(wnd[z - 1 >> 1]);
          else
            acc = acc.mixedAdd(wnd[-z - 1 >> 1].neg());
        } else {
          if (z > 0)
            acc = acc.add(wnd[z - 1 >> 1]);
          else
            acc = acc.add(wnd[-z - 1 >> 1].neg());
        }
      }
      return p.type === "affine" ? acc.toP() : acc;
    };
    BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW, points, coeffs, len, jacobianResult) {
      var wndWidth = this._wnafT1;
      var wnd = this._wnafT2;
      var naf = this._wnafT3;
      var max = 0;
      var i;
      var j;
      var p;
      for (i = 0; i < len; i++) {
        p = points[i];
        var nafPoints = p._getNAFPoints(defW);
        wndWidth[i] = nafPoints.wnd;
        wnd[i] = nafPoints.points;
      }
      for (i = len - 1; i >= 1; i -= 2) {
        var a = i - 1;
        var b = i;
        if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
          naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);
          naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);
          max = Math.max(naf[a].length, max);
          max = Math.max(naf[b].length, max);
          continue;
        }
        var comb = [
          points[a],
          /* 1 */
          null,
          /* 3 */
          null,
          /* 5 */
          points[b]
          /* 7 */
        ];
        if (points[a].y.cmp(points[b].y) === 0) {
          comb[1] = points[a].add(points[b]);
          comb[2] = points[a].toJ().mixedAdd(points[b].neg());
        } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
          comb[1] = points[a].toJ().mixedAdd(points[b]);
          comb[2] = points[a].add(points[b].neg());
        } else {
          comb[1] = points[a].toJ().mixedAdd(points[b]);
          comb[2] = points[a].toJ().mixedAdd(points[b].neg());
        }
        var index = [
          -3,
          /* -1 -1 */
          -1,
          /* -1 0 */
          -5,
          /* -1 1 */
          -7,
          /* 0 -1 */
          0,
          /* 0 0 */
          7,
          /* 0 1 */
          5,
          /* 1 -1 */
          1,
          /* 1 0 */
          3
          /* 1 1 */
        ];
        var jsf = getJSF(coeffs[a], coeffs[b]);
        max = Math.max(jsf[0].length, max);
        naf[a] = new Array(max);
        naf[b] = new Array(max);
        for (j = 0; j < max; j++) {
          var ja = jsf[0][j] | 0;
          var jb = jsf[1][j] | 0;
          naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];
          naf[b][j] = 0;
          wnd[a] = comb;
        }
      }
      var acc = this.jpoint(null, null, null);
      var tmp = this._wnafT4;
      for (i = max; i >= 0; i--) {
        var k = 0;
        while (i >= 0) {
          var zero = true;
          for (j = 0; j < len; j++) {
            tmp[j] = naf[j][i] | 0;
            if (tmp[j] !== 0)
              zero = false;
          }
          if (!zero)
            break;
          k++;
          i--;
        }
        if (i >= 0)
          k++;
        acc = acc.dblp(k);
        if (i < 0)
          break;
        for (j = 0; j < len; j++) {
          var z = tmp[j];
          p;
          if (z === 0)
            continue;
          else if (z > 0)
            p = wnd[j][z - 1 >> 1];
          else if (z < 0)
            p = wnd[j][-z - 1 >> 1].neg();
          if (p.type === "affine")
            acc = acc.mixedAdd(p);
          else
            acc = acc.add(p);
        }
      }
      for (i = 0; i < len; i++)
        wnd[i] = null;
      if (jacobianResult)
        return acc;
      else
        return acc.toP();
    };
    function BasePoint(curve, type) {
      this.curve = curve;
      this.type = type;
      this.precomputed = null;
    }
    BaseCurve.BasePoint = BasePoint;
    BasePoint.prototype.eq = function eq() {
      throw new Error("Not implemented");
    };
    BasePoint.prototype.validate = function validate() {
      return this.curve.validate(this);
    };
    BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
      bytes = utils.toArray(bytes, enc);
      var len = this.p.byteLength();
      if ((bytes[0] === 4 || bytes[0] === 6 || bytes[0] === 7) && bytes.length - 1 === 2 * len) {
        if (bytes[0] === 6)
          assert(bytes[bytes.length - 1] % 2 === 0);
        else if (bytes[0] === 7)
          assert(bytes[bytes.length - 1] % 2 === 1);
        var res = this.point(
          bytes.slice(1, 1 + len),
          bytes.slice(1 + len, 1 + 2 * len)
        );
        return res;
      } else if ((bytes[0] === 2 || bytes[0] === 3) && bytes.length - 1 === len) {
        return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 3);
      }
      throw new Error("Unknown point format");
    };
    BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {
      return this.encode(enc, true);
    };
    BasePoint.prototype._encode = function _encode(compact) {
      var len = this.curve.p.byteLength();
      var x = this.getX().toArray("be", len);
      if (compact)
        return [this.getY().isEven() ? 2 : 3].concat(x);
      return [4].concat(x, this.getY().toArray("be", len));
    };
    BasePoint.prototype.encode = function encode(enc, compact) {
      return utils.encode(this._encode(compact), enc);
    };
    BasePoint.prototype.precompute = function precompute(power) {
      if (this.precomputed)
        return this;
      var precomputed = {
        doubles: null,
        naf: null,
        beta: null
      };
      precomputed.naf = this._getNAFPoints(8);
      precomputed.doubles = this._getDoubles(4, power);
      precomputed.beta = this._getBeta();
      this.precomputed = precomputed;
      return this;
    };
    BasePoint.prototype._hasDoubles = function _hasDoubles(k) {
      if (!this.precomputed)
        return false;
      var doubles = this.precomputed.doubles;
      if (!doubles)
        return false;
      return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
    };
    BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
      if (this.precomputed && this.precomputed.doubles)
        return this.precomputed.doubles;
      var doubles = [this];
      var acc = this;
      for (var i = 0; i < power; i += step) {
        for (var j = 0; j < step; j++)
          acc = acc.dbl();
        doubles.push(acc);
      }
      return {
        step,
        points: doubles
      };
    };
    BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
      if (this.precomputed && this.precomputed.naf)
        return this.precomputed.naf;
      var res = [this];
      var max = (1 << wnd) - 1;
      var dbl = max === 1 ? null : this.dbl();
      for (var i = 1; i < max; i++)
        res[i] = res[i - 1].add(dbl);
      return {
        wnd,
        points: res
      };
    };
    BasePoint.prototype._getBeta = function _getBeta() {
      return null;
    };
    BasePoint.prototype.dblp = function dblp(k) {
      var r = this;
      for (var i = 0; i < k; i++)
        r = r.dbl();
      return r;
    };
  }
});

// node_modules/elliptic/lib/elliptic/curve/short.js
var require_short = __commonJS({
  "node_modules/elliptic/lib/elliptic/curve/short.js"(exports, module) {
    "use strict";
    var utils = require_utils4();
    var BN = require_bn2();
    var inherits = require_inherits_browser();
    var Base = require_base();
    var assert = utils.assert;
    function ShortCurve(conf) {
      Base.call(this, "short", conf);
      this.a = new BN(conf.a, 16).toRed(this.red);
      this.b = new BN(conf.b, 16).toRed(this.red);
      this.tinv = this.two.redInvm();
      this.zeroA = this.a.fromRed().cmpn(0) === 0;
      this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;
      this.endo = this._getEndomorphism(conf);
      this._endoWnafT1 = new Array(4);
      this._endoWnafT2 = new Array(4);
    }
    inherits(ShortCurve, Base);
    module.exports = ShortCurve;
    ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {
      if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)
        return;
      var beta;
      var lambda;
      if (conf.beta) {
        beta = new BN(conf.beta, 16).toRed(this.red);
      } else {
        var betas = this._getEndoRoots(this.p);
        beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
        beta = beta.toRed(this.red);
      }
      if (conf.lambda) {
        lambda = new BN(conf.lambda, 16);
      } else {
        var lambdas = this._getEndoRoots(this.n);
        if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
          lambda = lambdas[0];
        } else {
          lambda = lambdas[1];
          assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
        }
      }
      var basis;
      if (conf.basis) {
        basis = conf.basis.map(function(vec) {
          return {
            a: new BN(vec.a, 16),
            b: new BN(vec.b, 16)
          };
        });
      } else {
        basis = this._getEndoBasis(lambda);
      }
      return {
        beta,
        lambda,
        basis
      };
    };
    ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
      var red = num === this.p ? this.red : BN.mont(num);
      var tinv = new BN(2).toRed(red).redInvm();
      var ntinv = tinv.redNeg();
      var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);
      var l1 = ntinv.redAdd(s).fromRed();
      var l2 = ntinv.redSub(s).fromRed();
      return [l1, l2];
    };
    ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
      var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));
      var u = lambda;
      var v = this.n.clone();
      var x1 = new BN(1);
      var y1 = new BN(0);
      var x2 = new BN(0);
      var y2 = new BN(1);
      var a0;
      var b0;
      var a1;
      var b1;
      var a2;
      var b2;
      var prevR;
      var i = 0;
      var r;
      var x;
      while (u.cmpn(0) !== 0) {
        var q = v.div(u);
        r = v.sub(q.mul(u));
        x = x2.sub(q.mul(x1));
        var y = y2.sub(q.mul(y1));
        if (!a1 && r.cmp(aprxSqrt) < 0) {
          a0 = prevR.neg();
          b0 = x1;
          a1 = r.neg();
          b1 = x;
        } else if (a1 && ++i === 2) {
          break;
        }
        prevR = r;
        v = u;
        u = r;
        x2 = x1;
        x1 = x;
        y2 = y1;
        y1 = y;
      }
      a2 = r.neg();
      b2 = x;
      var len1 = a1.sqr().add(b1.sqr());
      var len2 = a2.sqr().add(b2.sqr());
      if (len2.cmp(len1) >= 0) {
        a2 = a0;
        b2 = b0;
      }
      if (a1.negative) {
        a1 = a1.neg();
        b1 = b1.neg();
      }
      if (a2.negative) {
        a2 = a2.neg();
        b2 = b2.neg();
      }
      return [
        { a: a1, b: b1 },
        { a: a2, b: b2 }
      ];
    };
    ShortCurve.prototype._endoSplit = function _endoSplit(k) {
      var basis = this.endo.basis;
      var v1 = basis[0];
      var v2 = basis[1];
      var c1 = v2.b.mul(k).divRound(this.n);
      var c2 = v1.b.neg().mul(k).divRound(this.n);
      var p1 = c1.mul(v1.a);
      var p2 = c2.mul(v2.a);
      var q1 = c1.mul(v1.b);
      var q2 = c2.mul(v2.b);
      var k1 = k.sub(p1).sub(p2);
      var k2 = q1.add(q2).neg();
      return { k1, k2 };
    };
    ShortCurve.prototype.pointFromX = function pointFromX(x, odd) {
      x = new BN(x, 16);
      if (!x.red)
        x = x.toRed(this.red);
      var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
      var y = y2.redSqrt();
      if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
        throw new Error("invalid point");
      var isOdd = y.fromRed().isOdd();
      if (odd && !isOdd || !odd && isOdd)
        y = y.redNeg();
      return this.point(x, y);
    };
    ShortCurve.prototype.validate = function validate(point) {
      if (point.inf)
        return true;
      var x = point.x;
      var y = point.y;
      var ax = this.a.redMul(x);
      var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
      return y.redSqr().redISub(rhs).cmpn(0) === 0;
    };
    ShortCurve.prototype._endoWnafMulAdd = function _endoWnafMulAdd(points, coeffs, jacobianResult) {
      var npoints = this._endoWnafT1;
      var ncoeffs = this._endoWnafT2;
      for (var i = 0; i < points.length; i++) {
        var split = this._endoSplit(coeffs[i]);
        var p = points[i];
        var beta = p._getBeta();
        if (split.k1.negative) {
          split.k1.ineg();
          p = p.neg(true);
        }
        if (split.k2.negative) {
          split.k2.ineg();
          beta = beta.neg(true);
        }
        npoints[i * 2] = p;
        npoints[i * 2 + 1] = beta;
        ncoeffs[i * 2] = split.k1;
        ncoeffs[i * 2 + 1] = split.k2;
      }
      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);
      for (var j = 0; j < i * 2; j++) {
        npoints[j] = null;
        ncoeffs[j] = null;
      }
      return res;
    };
    function Point(curve, x, y, isRed) {
      Base.BasePoint.call(this, curve, "affine");
      if (x === null && y === null) {
        this.x = null;
        this.y = null;
        this.inf = true;
      } else {
        this.x = new BN(x, 16);
        this.y = new BN(y, 16);
        if (isRed) {
          this.x.forceRed(this.curve.red);
          this.y.forceRed(this.curve.red);
        }
        if (!this.x.red)
          this.x = this.x.toRed(this.curve.red);
        if (!this.y.red)
          this.y = this.y.toRed(this.curve.red);
        this.inf = false;
      }
    }
    inherits(Point, Base.BasePoint);
    ShortCurve.prototype.point = function point(x, y, isRed) {
      return new Point(this, x, y, isRed);
    };
    ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
      return Point.fromJSON(this, obj, red);
    };
    Point.prototype._getBeta = function _getBeta() {
      if (!this.curve.endo)
        return;
      var pre = this.precomputed;
      if (pre && pre.beta)
        return pre.beta;
      var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
      if (pre) {
        var curve = this.curve;
        var endoMul = function(p) {
          return curve.point(p.x.redMul(curve.endo.beta), p.y);
        };
        pre.beta = beta;
        beta.precomputed = {
          beta: null,
          naf: pre.naf && {
            wnd: pre.naf.wnd,
            points: pre.naf.points.map(endoMul)
          },
          doubles: pre.doubles && {
            step: pre.doubles.step,
            points: pre.doubles.points.map(endoMul)
          }
        };
      }
      return beta;
    };
    Point.prototype.toJSON = function toJSON() {
      if (!this.precomputed)
        return [this.x, this.y];
      return [this.x, this.y, this.precomputed && {
        doubles: this.precomputed.doubles && {
          step: this.precomputed.doubles.step,
          points: this.precomputed.doubles.points.slice(1)
        },
        naf: this.precomputed.naf && {
          wnd: this.precomputed.naf.wnd,
          points: this.precomputed.naf.points.slice(1)
        }
      }];
    };
    Point.fromJSON = function fromJSON(curve, obj, red) {
      if (typeof obj === "string")
        obj = JSON.parse(obj);
      var res = curve.point(obj[0], obj[1], red);
      if (!obj[2])
        return res;
      function obj2point(obj2) {
        return curve.point(obj2[0], obj2[1], red);
      }
      var pre = obj[2];
      res.precomputed = {
        beta: null,
        doubles: pre.doubles && {
          step: pre.doubles.step,
          points: [res].concat(pre.doubles.points.map(obj2point))
        },
        naf: pre.naf && {
          wnd: pre.naf.wnd,
          points: [res].concat(pre.naf.points.map(obj2point))
        }
      };
      return res;
    };
    Point.prototype.inspect = function inspect() {
      if (this.isInfinity())
        return "<EC Point Infinity>";
      return "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">";
    };
    Point.prototype.isInfinity = function isInfinity() {
      return this.inf;
    };
    Point.prototype.add = function add(p) {
      if (this.inf)
        return p;
      if (p.inf)
        return this;
      if (this.eq(p))
        return this.dbl();
      if (this.neg().eq(p))
        return this.curve.point(null, null);
      if (this.x.cmp(p.x) === 0)
        return this.curve.point(null, null);
      var c = this.y.redSub(p.y);
      if (c.cmpn(0) !== 0)
        c = c.redMul(this.x.redSub(p.x).redInvm());
      var nx = c.redSqr().redISub(this.x).redISub(p.x);
      var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
      return this.curve.point(nx, ny);
    };
    Point.prototype.dbl = function dbl() {
      if (this.inf)
        return this;
      var ys1 = this.y.redAdd(this.y);
      if (ys1.cmpn(0) === 0)
        return this.curve.point(null, null);
      var a = this.curve.a;
      var x2 = this.x.redSqr();
      var dyinv = ys1.redInvm();
      var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);
      var nx = c.redSqr().redISub(this.x.redAdd(this.x));
      var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
      return this.curve.point(nx, ny);
    };
    Point.prototype.getX = function getX() {
      return this.x.fromRed();
    };
    Point.prototype.getY = function getY() {
      return this.y.fromRed();
    };
    Point.prototype.mul = function mul(k) {
      k = new BN(k, 16);
      if (this.isInfinity())
        return this;
      else if (this._hasDoubles(k))
        return this.curve._fixedNafMul(this, k);
      else if (this.curve.endo)
        return this.curve._endoWnafMulAdd([this], [k]);
      else
        return this.curve._wnafMul(this, k);
    };
    Point.prototype.mulAdd = function mulAdd(k1, p2, k2) {
      var points = [this, p2];
      var coeffs = [k1, k2];
      if (this.curve.endo)
        return this.curve._endoWnafMulAdd(points, coeffs);
      else
        return this.curve._wnafMulAdd(1, points, coeffs, 2);
    };
    Point.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {
      var points = [this, p2];
      var coeffs = [k1, k2];
      if (this.curve.endo)
        return this.curve._endoWnafMulAdd(points, coeffs, true);
      else
        return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
    };
    Point.prototype.eq = function eq(p) {
      return this === p || this.inf === p.inf && (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
    };
    Point.prototype.neg = function neg(_precompute) {
      if (this.inf)
        return this;
      var res = this.curve.point(this.x, this.y.redNeg());
      if (_precompute && this.precomputed) {
        var pre = this.precomputed;
        var negate = function(p) {
          return p.neg();
        };
        res.precomputed = {
          naf: pre.naf && {
            wnd: pre.naf.wnd,
            points: pre.naf.points.map(negate)
          },
          doubles: pre.doubles && {
            step: pre.doubles.step,
            points: pre.doubles.points.map(negate)
          }
        };
      }
      return res;
    };
    Point.prototype.toJ = function toJ() {
      if (this.inf)
        return this.curve.jpoint(null, null, null);
      var res = this.curve.jpoint(this.x, this.y, this.curve.one);
      return res;
    };
    function JPoint(curve, x, y, z) {
      Base.BasePoint.call(this, curve, "jacobian");
      if (x === null && y === null && z === null) {
        this.x = this.curve.one;
        this.y = this.curve.one;
        this.z = new BN(0);
      } else {
        this.x = new BN(x, 16);
        this.y = new BN(y, 16);
        this.z = new BN(z, 16);
      }
      if (!this.x.red)
        this.x = this.x.toRed(this.curve.red);
      if (!this.y.red)
        this.y = this.y.toRed(this.curve.red);
      if (!this.z.red)
        this.z = this.z.toRed(this.curve.red);
      this.zOne = this.z === this.curve.one;
    }
    inherits(JPoint, Base.BasePoint);
    ShortCurve.prototype.jpoint = function jpoint(x, y, z) {
      return new JPoint(this, x, y, z);
    };
    JPoint.prototype.toP = function toP() {
      if (this.isInfinity())
        return this.curve.point(null, null);
      var zinv = this.z.redInvm();
      var zinv2 = zinv.redSqr();
      var ax = this.x.redMul(zinv2);
      var ay = this.y.redMul(zinv2).redMul(zinv);
      return this.curve.point(ax, ay);
    };
    JPoint.prototype.neg = function neg() {
      return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
    };
    JPoint.prototype.add = function add(p) {
      if (this.isInfinity())
        return p;
      if (p.isInfinity())
        return this;
      var pz2 = p.z.redSqr();
      var z2 = this.z.redSqr();
      var u1 = this.x.redMul(pz2);
      var u2 = p.x.redMul(z2);
      var s1 = this.y.redMul(pz2.redMul(p.z));
      var s2 = p.y.redMul(z2.redMul(this.z));
      var h = u1.redSub(u2);
      var r = s1.redSub(s2);
      if (h.cmpn(0) === 0) {
        if (r.cmpn(0) !== 0)
          return this.curve.jpoint(null, null, null);
        else
          return this.dbl();
      }
      var h2 = h.redSqr();
      var h3 = h2.redMul(h);
      var v = u1.redMul(h2);
      var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
      var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
      var nz = this.z.redMul(p.z).redMul(h);
      return this.curve.jpoint(nx, ny, nz);
    };
    JPoint.prototype.mixedAdd = function mixedAdd(p) {
      if (this.isInfinity())
        return p.toJ();
      if (p.isInfinity())
        return this;
      var z2 = this.z.redSqr();
      var u1 = this.x;
      var u2 = p.x.redMul(z2);
      var s1 = this.y;
      var s2 = p.y.redMul(z2).redMul(this.z);
      var h = u1.redSub(u2);
      var r = s1.redSub(s2);
      if (h.cmpn(0) === 0) {
        if (r.cmpn(0) !== 0)
          return this.curve.jpoint(null, null, null);
        else
          return this.dbl();
      }
      var h2 = h.redSqr();
      var h3 = h2.redMul(h);
      var v = u1.redMul(h2);
      var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
      var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
      var nz = this.z.redMul(h);
      return this.curve.jpoint(nx, ny, nz);
    };
    JPoint.prototype.dblp = function dblp(pow) {
      if (pow === 0)
        return this;
      if (this.isInfinity())
        return this;
      if (!pow)
        return this.dbl();
      var i;
      if (this.curve.zeroA || this.curve.threeA) {
        var r = this;
        for (i = 0; i < pow; i++)
          r = r.dbl();
        return r;
      }
      var a = this.curve.a;
      var tinv = this.curve.tinv;
      var jx = this.x;
      var jy = this.y;
      var jz = this.z;
      var jz4 = jz.redSqr().redSqr();
      var jyd = jy.redAdd(jy);
      for (i = 0; i < pow; i++) {
        var jx2 = jx.redSqr();
        var jyd2 = jyd.redSqr();
        var jyd4 = jyd2.redSqr();
        var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));
        var t1 = jx.redMul(jyd2);
        var nx = c.redSqr().redISub(t1.redAdd(t1));
        var t2 = t1.redISub(nx);
        var dny = c.redMul(t2);
        dny = dny.redIAdd(dny).redISub(jyd4);
        var nz = jyd.redMul(jz);
        if (i + 1 < pow)
          jz4 = jz4.redMul(jyd4);
        jx = nx;
        jz = nz;
        jyd = dny;
      }
      return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
    };
    JPoint.prototype.dbl = function dbl() {
      if (this.isInfinity())
        return this;
      if (this.curve.zeroA)
        return this._zeroDbl();
      else if (this.curve.threeA)
        return this._threeDbl();
      else
        return this._dbl();
    };
    JPoint.prototype._zeroDbl = function _zeroDbl() {
      var nx;
      var ny;
      var nz;
      if (this.zOne) {
        var xx = this.x.redSqr();
        var yy = this.y.redSqr();
        var yyyy = yy.redSqr();
        var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
        s = s.redIAdd(s);
        var m = xx.redAdd(xx).redIAdd(xx);
        var t = m.redSqr().redISub(s).redISub(s);
        var yyyy8 = yyyy.redIAdd(yyyy);
        yyyy8 = yyyy8.redIAdd(yyyy8);
        yyyy8 = yyyy8.redIAdd(yyyy8);
        nx = t;
        ny = m.redMul(s.redISub(t)).redISub(yyyy8);
        nz = this.y.redAdd(this.y);
      } else {
        var a = this.x.redSqr();
        var b = this.y.redSqr();
        var c = b.redSqr();
        var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
        d = d.redIAdd(d);
        var e = a.redAdd(a).redIAdd(a);
        var f = e.redSqr();
        var c8 = c.redIAdd(c);
        c8 = c8.redIAdd(c8);
        c8 = c8.redIAdd(c8);
        nx = f.redISub(d).redISub(d);
        ny = e.redMul(d.redISub(nx)).redISub(c8);
        nz = this.y.redMul(this.z);
        nz = nz.redIAdd(nz);
      }
      return this.curve.jpoint(nx, ny, nz);
    };
    JPoint.prototype._threeDbl = function _threeDbl() {
      var nx;
      var ny;
      var nz;
      if (this.zOne) {
        var xx = this.x.redSqr();
        var yy = this.y.redSqr();
        var yyyy = yy.redSqr();
        var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
        s = s.redIAdd(s);
        var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
        var t = m.redSqr().redISub(s).redISub(s);
        nx = t;
        var yyyy8 = yyyy.redIAdd(yyyy);
        yyyy8 = yyyy8.redIAdd(yyyy8);
        yyyy8 = yyyy8.redIAdd(yyyy8);
        ny = m.redMul(s.redISub(t)).redISub(yyyy8);
        nz = this.y.redAdd(this.y);
      } else {
        var delta = this.z.redSqr();
        var gamma = this.y.redSqr();
        var beta = this.x.redMul(gamma);
        var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
        alpha = alpha.redAdd(alpha).redIAdd(alpha);
        var beta4 = beta.redIAdd(beta);
        beta4 = beta4.redIAdd(beta4);
        var beta8 = beta4.redAdd(beta4);
        nx = alpha.redSqr().redISub(beta8);
        nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
        var ggamma8 = gamma.redSqr();
        ggamma8 = ggamma8.redIAdd(ggamma8);
        ggamma8 = ggamma8.redIAdd(ggamma8);
        ggamma8 = ggamma8.redIAdd(ggamma8);
        ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
      }
      return this.curve.jpoint(nx, ny, nz);
    };
    JPoint.prototype._dbl = function _dbl() {
      var a = this.curve.a;
      var jx = this.x;
      var jy = this.y;
      var jz = this.z;
      var jz4 = jz.redSqr().redSqr();
      var jx2 = jx.redSqr();
      var jy2 = jy.redSqr();
      var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));
      var jxd4 = jx.redAdd(jx);
      jxd4 = jxd4.redIAdd(jxd4);
      var t1 = jxd4.redMul(jy2);
      var nx = c.redSqr().redISub(t1.redAdd(t1));
      var t2 = t1.redISub(nx);
      var jyd8 = jy2.redSqr();
      jyd8 = jyd8.redIAdd(jyd8);
      jyd8 = jyd8.redIAdd(jyd8);
      jyd8 = jyd8.redIAdd(jyd8);
      var ny = c.redMul(t2).redISub(jyd8);
      var nz = jy.redAdd(jy).redMul(jz);
      return this.curve.jpoint(nx, ny, nz);
    };
    JPoint.prototype.trpl = function trpl() {
      if (!this.curve.zeroA)
        return this.dbl().add(this);
      var xx = this.x.redSqr();
      var yy = this.y.redSqr();
      var zz = this.z.redSqr();
      var yyyy = yy.redSqr();
      var m = xx.redAdd(xx).redIAdd(xx);
      var mm = m.redSqr();
      var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
      e = e.redIAdd(e);
      e = e.redAdd(e).redIAdd(e);
      e = e.redISub(mm);
      var ee = e.redSqr();
      var t = yyyy.redIAdd(yyyy);
      t = t.redIAdd(t);
      t = t.redIAdd(t);
      t = t.redIAdd(t);
      var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
      var yyu4 = yy.redMul(u);
      yyu4 = yyu4.redIAdd(yyu4);
      yyu4 = yyu4.redIAdd(yyu4);
      var nx = this.x.redMul(ee).redISub(yyu4);
      nx = nx.redIAdd(nx);
      nx = nx.redIAdd(nx);
      var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
      ny = ny.redIAdd(ny);
      ny = ny.redIAdd(ny);
      ny = ny.redIAdd(ny);
      var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);
      return this.curve.jpoint(nx, ny, nz);
    };
    JPoint.prototype.mul = function mul(k, kbase) {
      k = new BN(k, kbase);
      return this.curve._wnafMul(this, k);
    };
    JPoint.prototype.eq = function eq(p) {
      if (p.type === "affine")
        return this.eq(p.toJ());
      if (this === p)
        return true;
      var z2 = this.z.redSqr();
      var pz2 = p.z.redSqr();
      if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)
        return false;
      var z3 = z2.redMul(this.z);
      var pz3 = pz2.redMul(p.z);
      return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
    };
    JPoint.prototype.eqXToP = function eqXToP(x) {
      var zs = this.z.redSqr();
      var rx = x.toRed(this.curve.red).redMul(zs);
      if (this.x.cmp(rx) === 0)
        return true;
      var xc = x.clone();
      var t = this.curve.redN.redMul(zs);
      for (; ; ) {
        xc.iadd(this.curve.n);
        if (xc.cmp(this.curve.p) >= 0)
          return false;
        rx.redIAdd(t);
        if (this.x.cmp(rx) === 0)
          return true;
      }
    };
    JPoint.prototype.inspect = function inspect() {
      if (this.isInfinity())
        return "<EC JPoint Infinity>";
      return "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">";
    };
    JPoint.prototype.isInfinity = function isInfinity() {
      return this.z.cmpn(0) === 0;
    };
  }
});

// node_modules/elliptic/lib/elliptic/curve/mont.js
var require_mont = __commonJS({
  "node_modules/elliptic/lib/elliptic/curve/mont.js"(exports, module) {
    "use strict";
    var BN = require_bn2();
    var inherits = require_inherits_browser();
    var Base = require_base();
    var utils = require_utils4();
    function MontCurve(conf) {
      Base.call(this, "mont", conf);
      this.a = new BN(conf.a, 16).toRed(this.red);
      this.b = new BN(conf.b, 16).toRed(this.red);
      this.i4 = new BN(4).toRed(this.red).redInvm();
      this.two = new BN(2).toRed(this.red);
      this.a24 = this.i4.redMul(this.a.redAdd(this.two));
    }
    inherits(MontCurve, Base);
    module.exports = MontCurve;
    MontCurve.prototype.validate = function validate(point) {
      var x = point.normalize().x;
      var x2 = x.redSqr();
      var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);
      var y = rhs.redSqrt();
      return y.redSqr().cmp(rhs) === 0;
    };
    function Point(curve, x, z) {
      Base.BasePoint.call(this, curve, "projective");
      if (x === null && z === null) {
        this.x = this.curve.one;
        this.z = this.curve.zero;
      } else {
        this.x = new BN(x, 16);
        this.z = new BN(z, 16);
        if (!this.x.red)
          this.x = this.x.toRed(this.curve.red);
        if (!this.z.red)
          this.z = this.z.toRed(this.curve.red);
      }
    }
    inherits(Point, Base.BasePoint);
    MontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
      return this.point(utils.toArray(bytes, enc), 1);
    };
    MontCurve.prototype.point = function point(x, z) {
      return new Point(this, x, z);
    };
    MontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
      return Point.fromJSON(this, obj);
    };
    Point.prototype.precompute = function precompute() {
    };
    Point.prototype._encode = function _encode() {
      return this.getX().toArray("be", this.curve.p.byteLength());
    };
    Point.fromJSON = function fromJSON(curve, obj) {
      return new Point(curve, obj[0], obj[1] || curve.one);
    };
    Point.prototype.inspect = function inspect() {
      if (this.isInfinity())
        return "<EC Point Infinity>";
      return "<EC Point x: " + this.x.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
    };
    Point.prototype.isInfinity = function isInfinity() {
      return this.z.cmpn(0) === 0;
    };
    Point.prototype.dbl = function dbl() {
      var a = this.x.redAdd(this.z);
      var aa = a.redSqr();
      var b = this.x.redSub(this.z);
      var bb = b.redSqr();
      var c = aa.redSub(bb);
      var nx = aa.redMul(bb);
      var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));
      return this.curve.point(nx, nz);
    };
    Point.prototype.add = function add() {
      throw new Error("Not supported on Montgomery curve");
    };
    Point.prototype.diffAdd = function diffAdd(p, diff) {
      var a = this.x.redAdd(this.z);
      var b = this.x.redSub(this.z);
      var c = p.x.redAdd(p.z);
      var d = p.x.redSub(p.z);
      var da = d.redMul(a);
      var cb = c.redMul(b);
      var nx = diff.z.redMul(da.redAdd(cb).redSqr());
      var nz = diff.x.redMul(da.redISub(cb).redSqr());
      return this.curve.point(nx, nz);
    };
    Point.prototype.mul = function mul(k) {
      var t = k.clone();
      var a = this;
      var b = this.curve.point(null, null);
      var c = this;
      for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))
        bits.push(t.andln(1));
      for (var i = bits.length - 1; i >= 0; i--) {
        if (bits[i] === 0) {
          a = a.diffAdd(b, c);
          b = b.dbl();
        } else {
          b = a.diffAdd(b, c);
          a = a.dbl();
        }
      }
      return b;
    };
    Point.prototype.mulAdd = function mulAdd() {
      throw new Error("Not supported on Montgomery curve");
    };
    Point.prototype.jumlAdd = function jumlAdd() {
      throw new Error("Not supported on Montgomery curve");
    };
    Point.prototype.eq = function eq(other) {
      return this.getX().cmp(other.getX()) === 0;
    };
    Point.prototype.normalize = function normalize() {
      this.x = this.x.redMul(this.z.redInvm());
      this.z = this.curve.one;
      return this;
    };
    Point.prototype.getX = function getX() {
      this.normalize();
      return this.x.fromRed();
    };
  }
});

// node_modules/elliptic/lib/elliptic/curve/edwards.js
var require_edwards = __commonJS({
  "node_modules/elliptic/lib/elliptic/curve/edwards.js"(exports, module) {
    "use strict";
    var utils = require_utils4();
    var BN = require_bn2();
    var inherits = require_inherits_browser();
    var Base = require_base();
    var assert = utils.assert;
    function EdwardsCurve(conf) {
      this.twisted = (conf.a | 0) !== 1;
      this.mOneA = this.twisted && (conf.a | 0) === -1;
      this.extended = this.mOneA;
      Base.call(this, "edwards", conf);
      this.a = new BN(conf.a, 16).umod(this.red.m);
      this.a = this.a.toRed(this.red);
      this.c = new BN(conf.c, 16).toRed(this.red);
      this.c2 = this.c.redSqr();
      this.d = new BN(conf.d, 16).toRed(this.red);
      this.dd = this.d.redAdd(this.d);
      assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);
      this.oneC = (conf.c | 0) === 1;
    }
    inherits(EdwardsCurve, Base);
    module.exports = EdwardsCurve;
    EdwardsCurve.prototype._mulA = function _mulA(num) {
      if (this.mOneA)
        return num.redNeg();
      else
        return this.a.redMul(num);
    };
    EdwardsCurve.prototype._mulC = function _mulC(num) {
      if (this.oneC)
        return num;
      else
        return this.c.redMul(num);
    };
    EdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {
      return this.point(x, y, z, t);
    };
    EdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {
      x = new BN(x, 16);
      if (!x.red)
        x = x.toRed(this.red);
      var x2 = x.redSqr();
      var rhs = this.c2.redSub(this.a.redMul(x2));
      var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));
      var y2 = rhs.redMul(lhs.redInvm());
      var y = y2.redSqrt();
      if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
        throw new Error("invalid point");
      var isOdd = y.fromRed().isOdd();
      if (odd && !isOdd || !odd && isOdd)
        y = y.redNeg();
      return this.point(x, y);
    };
    EdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {
      y = new BN(y, 16);
      if (!y.red)
        y = y.toRed(this.red);
      var y2 = y.redSqr();
      var lhs = y2.redSub(this.c2);
      var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);
      var x2 = lhs.redMul(rhs.redInvm());
      if (x2.cmp(this.zero) === 0) {
        if (odd)
          throw new Error("invalid point");
        else
          return this.point(this.zero, y);
      }
      var x = x2.redSqrt();
      if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)
        throw new Error("invalid point");
      if (x.fromRed().isOdd() !== odd)
        x = x.redNeg();
      return this.point(x, y);
    };
    EdwardsCurve.prototype.validate = function validate(point) {
      if (point.isInfinity())
        return true;
      point.normalize();
      var x2 = point.x.redSqr();
      var y2 = point.y.redSqr();
      var lhs = x2.redMul(this.a).redAdd(y2);
      var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));
      return lhs.cmp(rhs) === 0;
    };
    function Point(curve, x, y, z, t) {
      Base.BasePoint.call(this, curve, "projective");
      if (x === null && y === null && z === null) {
        this.x = this.curve.zero;
        this.y = this.curve.one;
        this.z = this.curve.one;
        this.t = this.curve.zero;
        this.zOne = true;
      } else {
        this.x = new BN(x, 16);
        this.y = new BN(y, 16);
        this.z = z ? new BN(z, 16) : this.curve.one;
        this.t = t && new BN(t, 16);
        if (!this.x.red)
          this.x = this.x.toRed(this.curve.red);
        if (!this.y.red)
          this.y = this.y.toRed(this.curve.red);
        if (!this.z.red)
          this.z = this.z.toRed(this.curve.red);
        if (this.t && !this.t.red)
          this.t = this.t.toRed(this.curve.red);
        this.zOne = this.z === this.curve.one;
        if (this.curve.extended && !this.t) {
          this.t = this.x.redMul(this.y);
          if (!this.zOne)
            this.t = this.t.redMul(this.z.redInvm());
        }
      }
    }
    inherits(Point, Base.BasePoint);
    EdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
      return Point.fromJSON(this, obj);
    };
    EdwardsCurve.prototype.point = function point(x, y, z, t) {
      return new Point(this, x, y, z, t);
    };
    Point.fromJSON = function fromJSON(curve, obj) {
      return new Point(curve, obj[0], obj[1], obj[2]);
    };
    Point.prototype.inspect = function inspect() {
      if (this.isInfinity())
        return "<EC Point Infinity>";
      return "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
    };
    Point.prototype.isInfinity = function isInfinity() {
      return this.x.cmpn(0) === 0 && (this.y.cmp(this.z) === 0 || this.zOne && this.y.cmp(this.curve.c) === 0);
    };
    Point.prototype._extDbl = function _extDbl() {
      var a = this.x.redSqr();
      var b = this.y.redSqr();
      var c = this.z.redSqr();
      c = c.redIAdd(c);
      var d = this.curve._mulA(a);
      var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);
      var g = d.redAdd(b);
      var f = g.redSub(c);
      var h = d.redSub(b);
      var nx = e.redMul(f);
      var ny = g.redMul(h);
      var nt = e.redMul(h);
      var nz = f.redMul(g);
      return this.curve.point(nx, ny, nz, nt);
    };
    Point.prototype._projDbl = function _projDbl() {
      var b = this.x.redAdd(this.y).redSqr();
      var c = this.x.redSqr();
      var d = this.y.redSqr();
      var nx;
      var ny;
      var nz;
      var e;
      var h;
      var j;
      if (this.curve.twisted) {
        e = this.curve._mulA(c);
        var f = e.redAdd(d);
        if (this.zOne) {
          nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));
          ny = f.redMul(e.redSub(d));
          nz = f.redSqr().redSub(f).redSub(f);
        } else {
          h = this.z.redSqr();
          j = f.redSub(h).redISub(h);
          nx = b.redSub(c).redISub(d).redMul(j);
          ny = f.redMul(e.redSub(d));
          nz = f.redMul(j);
        }
      } else {
        e = c.redAdd(d);
        h = this.curve._mulC(this.z).redSqr();
        j = e.redSub(h).redSub(h);
        nx = this.curve._mulC(b.redISub(e)).redMul(j);
        ny = this.curve._mulC(e).redMul(c.redISub(d));
        nz = e.redMul(j);
      }
      return this.curve.point(nx, ny, nz);
    };
    Point.prototype.dbl = function dbl() {
      if (this.isInfinity())
        return this;
      if (this.curve.extended)
        return this._extDbl();
      else
        return this._projDbl();
    };
    Point.prototype._extAdd = function _extAdd(p) {
      var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));
      var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));
      var c = this.t.redMul(this.curve.dd).redMul(p.t);
      var d = this.z.redMul(p.z.redAdd(p.z));
      var e = b.redSub(a);
      var f = d.redSub(c);
      var g = d.redAdd(c);
      var h = b.redAdd(a);
      var nx = e.redMul(f);
      var ny = g.redMul(h);
      var nt = e.redMul(h);
      var nz = f.redMul(g);
      return this.curve.point(nx, ny, nz, nt);
    };
    Point.prototype._projAdd = function _projAdd(p) {
      var a = this.z.redMul(p.z);
      var b = a.redSqr();
      var c = this.x.redMul(p.x);
      var d = this.y.redMul(p.y);
      var e = this.curve.d.redMul(c).redMul(d);
      var f = b.redSub(e);
      var g = b.redAdd(e);
      var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);
      var nx = a.redMul(f).redMul(tmp);
      var ny;
      var nz;
      if (this.curve.twisted) {
        ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));
        nz = f.redMul(g);
      } else {
        ny = a.redMul(g).redMul(d.redSub(c));
        nz = this.curve._mulC(f).redMul(g);
      }
      return this.curve.point(nx, ny, nz);
    };
    Point.prototype.add = function add(p) {
      if (this.isInfinity())
        return p;
      if (p.isInfinity())
        return this;
      if (this.curve.extended)
        return this._extAdd(p);
      else
        return this._projAdd(p);
    };
    Point.prototype.mul = function mul(k) {
      if (this._hasDoubles(k))
        return this.curve._fixedNafMul(this, k);
      else
        return this.curve._wnafMul(this, k);
    };
    Point.prototype.mulAdd = function mulAdd(k1, p, k2) {
      return this.curve._wnafMulAdd(1, [this, p], [k1, k2], 2, false);
    };
    Point.prototype.jmulAdd = function jmulAdd(k1, p, k2) {
      return this.curve._wnafMulAdd(1, [this, p], [k1, k2], 2, true);
    };
    Point.prototype.normalize = function normalize() {
      if (this.zOne)
        return this;
      var zi = this.z.redInvm();
      this.x = this.x.redMul(zi);
      this.y = this.y.redMul(zi);
      if (this.t)
        this.t = this.t.redMul(zi);
      this.z = this.curve.one;
      this.zOne = true;
      return this;
    };
    Point.prototype.neg = function neg() {
      return this.curve.point(
        this.x.redNeg(),
        this.y,
        this.z,
        this.t && this.t.redNeg()
      );
    };
    Point.prototype.getX = function getX() {
      this.normalize();
      return this.x.fromRed();
    };
    Point.prototype.getY = function getY() {
      this.normalize();
      return this.y.fromRed();
    };
    Point.prototype.eq = function eq(other) {
      return this === other || this.getX().cmp(other.getX()) === 0 && this.getY().cmp(other.getY()) === 0;
    };
    Point.prototype.eqXToP = function eqXToP(x) {
      var rx = x.toRed(this.curve.red).redMul(this.z);
      if (this.x.cmp(rx) === 0)
        return true;
      var xc = x.clone();
      var t = this.curve.redN.redMul(this.z);
      for (; ; ) {
        xc.iadd(this.curve.n);
        if (xc.cmp(this.curve.p) >= 0)
          return false;
        rx.redIAdd(t);
        if (this.x.cmp(rx) === 0)
          return true;
      }
    };
    Point.prototype.toP = Point.prototype.normalize;
    Point.prototype.mixedAdd = Point.prototype.add;
  }
});

// node_modules/elliptic/lib/elliptic/curve/index.js
var require_curve = __commonJS({
  "node_modules/elliptic/lib/elliptic/curve/index.js"(exports) {
    "use strict";
    var curve = exports;
    curve.base = require_base();
    curve.short = require_short();
    curve.mont = require_mont();
    curve.edwards = require_edwards();
  }
});

// node_modules/hash.js/lib/hash/utils.js
var require_utils5 = __commonJS({
  "node_modules/hash.js/lib/hash/utils.js"(exports) {
    "use strict";
    var assert = require_minimalistic_assert();
    var inherits = require_inherits_browser();
    exports.inherits = inherits;
    function isSurrogatePair(msg, i) {
      if ((msg.charCodeAt(i) & 64512) !== 55296) {
        return false;
      }
      if (i < 0 || i + 1 >= msg.length) {
        return false;
      }
      return (msg.charCodeAt(i + 1) & 64512) === 56320;
    }
    function toArray(msg, enc) {
      if (Array.isArray(msg))
        return msg.slice();
      if (!msg)
        return [];
      var res = [];
      if (typeof msg === "string") {
        if (!enc) {
          var p = 0;
          for (var i = 0; i < msg.length; i++) {
            var c = msg.charCodeAt(i);
            if (c < 128) {
              res[p++] = c;
            } else if (c < 2048) {
              res[p++] = c >> 6 | 192;
              res[p++] = c & 63 | 128;
            } else if (isSurrogatePair(msg, i)) {
              c = 65536 + ((c & 1023) << 10) + (msg.charCodeAt(++i) & 1023);
              res[p++] = c >> 18 | 240;
              res[p++] = c >> 12 & 63 | 128;
              res[p++] = c >> 6 & 63 | 128;
              res[p++] = c & 63 | 128;
            } else {
              res[p++] = c >> 12 | 224;
              res[p++] = c >> 6 & 63 | 128;
              res[p++] = c & 63 | 128;
            }
          }
        } else if (enc === "hex") {
          msg = msg.replace(/[^a-z0-9]+/ig, "");
          if (msg.length % 2 !== 0)
            msg = "0" + msg;
          for (i = 0; i < msg.length; i += 2)
            res.push(parseInt(msg[i] + msg[i + 1], 16));
        }
      } else {
        for (i = 0; i < msg.length; i++)
          res[i] = msg[i] | 0;
      }
      return res;
    }
    exports.toArray = toArray;
    function toHex(msg) {
      var res = "";
      for (var i = 0; i < msg.length; i++)
        res += zero2(msg[i].toString(16));
      return res;
    }
    exports.toHex = toHex;
    function htonl(w) {
      var res = w >>> 24 | w >>> 8 & 65280 | w << 8 & 16711680 | (w & 255) << 24;
      return res >>> 0;
    }
    exports.htonl = htonl;
    function toHex32(msg, endian) {
      var res = "";
      for (var i = 0; i < msg.length; i++) {
        var w = msg[i];
        if (endian === "little")
          w = htonl(w);
        res += zero8(w.toString(16));
      }
      return res;
    }
    exports.toHex32 = toHex32;
    function zero2(word) {
      if (word.length === 1)
        return "0" + word;
      else
        return word;
    }
    exports.zero2 = zero2;
    function zero8(word) {
      if (word.length === 7)
        return "0" + word;
      else if (word.length === 6)
        return "00" + word;
      else if (word.length === 5)
        return "000" + word;
      else if (word.length === 4)
        return "0000" + word;
      else if (word.length === 3)
        return "00000" + word;
      else if (word.length === 2)
        return "000000" + word;
      else if (word.length === 1)
        return "0000000" + word;
      else
        return word;
    }
    exports.zero8 = zero8;
    function join32(msg, start, end, endian) {
      var len = end - start;
      assert(len % 4 === 0);
      var res = new Array(len / 4);
      for (var i = 0, k = start; i < res.length; i++, k += 4) {
        var w;
        if (endian === "big")
          w = msg[k] << 24 | msg[k + 1] << 16 | msg[k + 2] << 8 | msg[k + 3];
        else
          w = msg[k + 3] << 24 | msg[k + 2] << 16 | msg[k + 1] << 8 | msg[k];
        res[i] = w >>> 0;
      }
      return res;
    }
    exports.join32 = join32;
    function split32(msg, endian) {
      var res = new Array(msg.length * 4);
      for (var i = 0, k = 0; i < msg.length; i++, k += 4) {
        var m = msg[i];
        if (endian === "big") {
          res[k] = m >>> 24;
          res[k + 1] = m >>> 16 & 255;
          res[k + 2] = m >>> 8 & 255;
          res[k + 3] = m & 255;
        } else {
          res[k + 3] = m >>> 24;
          res[k + 2] = m >>> 16 & 255;
          res[k + 1] = m >>> 8 & 255;
          res[k] = m & 255;
        }
      }
      return res;
    }
    exports.split32 = split32;
    function rotr32(w, b) {
      return w >>> b | w << 32 - b;
    }
    exports.rotr32 = rotr32;
    function rotl32(w, b) {
      return w << b | w >>> 32 - b;
    }
    exports.rotl32 = rotl32;
    function sum32(a, b) {
      return a + b >>> 0;
    }
    exports.sum32 = sum32;
    function sum32_3(a, b, c) {
      return a + b + c >>> 0;
    }
    exports.sum32_3 = sum32_3;
    function sum32_4(a, b, c, d) {
      return a + b + c + d >>> 0;
    }
    exports.sum32_4 = sum32_4;
    function sum32_5(a, b, c, d, e) {
      return a + b + c + d + e >>> 0;
    }
    exports.sum32_5 = sum32_5;
    function sum64(buf, pos, ah, al) {
      var bh = buf[pos];
      var bl = buf[pos + 1];
      var lo = al + bl >>> 0;
      var hi = (lo < al ? 1 : 0) + ah + bh;
      buf[pos] = hi >>> 0;
      buf[pos + 1] = lo;
    }
    exports.sum64 = sum64;
    function sum64_hi(ah, al, bh, bl) {
      var lo = al + bl >>> 0;
      var hi = (lo < al ? 1 : 0) + ah + bh;
      return hi >>> 0;
    }
    exports.sum64_hi = sum64_hi;
    function sum64_lo(ah, al, bh, bl) {
      var lo = al + bl;
      return lo >>> 0;
    }
    exports.sum64_lo = sum64_lo;
    function sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {
      var carry = 0;
      var lo = al;
      lo = lo + bl >>> 0;
      carry += lo < al ? 1 : 0;
      lo = lo + cl >>> 0;
      carry += lo < cl ? 1 : 0;
      lo = lo + dl >>> 0;
      carry += lo < dl ? 1 : 0;
      var hi = ah + bh + ch + dh + carry;
      return hi >>> 0;
    }
    exports.sum64_4_hi = sum64_4_hi;
    function sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {
      var lo = al + bl + cl + dl;
      return lo >>> 0;
    }
    exports.sum64_4_lo = sum64_4_lo;
    function sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
      var carry = 0;
      var lo = al;
      lo = lo + bl >>> 0;
      carry += lo < al ? 1 : 0;
      lo = lo + cl >>> 0;
      carry += lo < cl ? 1 : 0;
      lo = lo + dl >>> 0;
      carry += lo < dl ? 1 : 0;
      lo = lo + el >>> 0;
      carry += lo < el ? 1 : 0;
      var hi = ah + bh + ch + dh + eh + carry;
      return hi >>> 0;
    }
    exports.sum64_5_hi = sum64_5_hi;
    function sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
      var lo = al + bl + cl + dl + el;
      return lo >>> 0;
    }
    exports.sum64_5_lo = sum64_5_lo;
    function rotr64_hi(ah, al, num) {
      var r = al << 32 - num | ah >>> num;
      return r >>> 0;
    }
    exports.rotr64_hi = rotr64_hi;
    function rotr64_lo(ah, al, num) {
      var r = ah << 32 - num | al >>> num;
      return r >>> 0;
    }
    exports.rotr64_lo = rotr64_lo;
    function shr64_hi(ah, al, num) {
      return ah >>> num;
    }
    exports.shr64_hi = shr64_hi;
    function shr64_lo(ah, al, num) {
      var r = ah << 32 - num | al >>> num;
      return r >>> 0;
    }
    exports.shr64_lo = shr64_lo;
  }
});

// node_modules/hash.js/lib/hash/common.js
var require_common = __commonJS({
  "node_modules/hash.js/lib/hash/common.js"(exports) {
    "use strict";
    var utils = require_utils5();
    var assert = require_minimalistic_assert();
    function BlockHash() {
      this.pending = null;
      this.pendingTotal = 0;
      this.blockSize = this.constructor.blockSize;
      this.outSize = this.constructor.outSize;
      this.hmacStrength = this.constructor.hmacStrength;
      this.padLength = this.constructor.padLength / 8;
      this.endian = "big";
      this._delta8 = this.blockSize / 8;
      this._delta32 = this.blockSize / 32;
    }
    exports.BlockHash = BlockHash;
    BlockHash.prototype.update = function update(msg, enc) {
      msg = utils.toArray(msg, enc);
      if (!this.pending)
        this.pending = msg;
      else
        this.pending = this.pending.concat(msg);
      this.pendingTotal += msg.length;
      if (this.pending.length >= this._delta8) {
        msg = this.pending;
        var r = msg.length % this._delta8;
        this.pending = msg.slice(msg.length - r, msg.length);
        if (this.pending.length === 0)
          this.pending = null;
        msg = utils.join32(msg, 0, msg.length - r, this.endian);
        for (var i = 0; i < msg.length; i += this._delta32)
          this._update(msg, i, i + this._delta32);
      }
      return this;
    };
    BlockHash.prototype.digest = function digest(enc) {
      this.update(this._pad());
      assert(this.pending === null);
      return this._digest(enc);
    };
    BlockHash.prototype._pad = function pad() {
      var len = this.pendingTotal;
      var bytes = this._delta8;
      var k = bytes - (len + this.padLength) % bytes;
      var res = new Array(k + this.padLength);
      res[0] = 128;
      for (var i = 1; i < k; i++)
        res[i] = 0;
      len <<= 3;
      if (this.endian === "big") {
        for (var t = 8; t < this.padLength; t++)
          res[i++] = 0;
        res[i++] = 0;
        res[i++] = 0;
        res[i++] = 0;
        res[i++] = 0;
        res[i++] = len >>> 24 & 255;
        res[i++] = len >>> 16 & 255;
        res[i++] = len >>> 8 & 255;
        res[i++] = len & 255;
      } else {
        res[i++] = len & 255;
        res[i++] = len >>> 8 & 255;
        res[i++] = len >>> 16 & 255;
        res[i++] = len >>> 24 & 255;
        res[i++] = 0;
        res[i++] = 0;
        res[i++] = 0;
        res[i++] = 0;
        for (t = 8; t < this.padLength; t++)
          res[i++] = 0;
      }
      return res;
    };
  }
});

// node_modules/hash.js/lib/hash/sha/common.js
var require_common2 = __commonJS({
  "node_modules/hash.js/lib/hash/sha/common.js"(exports) {
    "use strict";
    var utils = require_utils5();
    var rotr32 = utils.rotr32;
    function ft_1(s, x, y, z) {
      if (s === 0)
        return ch32(x, y, z);
      if (s === 1 || s === 3)
        return p32(x, y, z);
      if (s === 2)
        return maj32(x, y, z);
    }
    exports.ft_1 = ft_1;
    function ch32(x, y, z) {
      return x & y ^ ~x & z;
    }
    exports.ch32 = ch32;
    function maj32(x, y, z) {
      return x & y ^ x & z ^ y & z;
    }
    exports.maj32 = maj32;
    function p32(x, y, z) {
      return x ^ y ^ z;
    }
    exports.p32 = p32;
    function s0_256(x) {
      return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
    }
    exports.s0_256 = s0_256;
    function s1_256(x) {
      return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
    }
    exports.s1_256 = s1_256;
    function g0_256(x) {
      return rotr32(x, 7) ^ rotr32(x, 18) ^ x >>> 3;
    }
    exports.g0_256 = g0_256;
    function g1_256(x) {
      return rotr32(x, 17) ^ rotr32(x, 19) ^ x >>> 10;
    }
    exports.g1_256 = g1_256;
  }
});

// node_modules/hash.js/lib/hash/sha/1.js
var require__ = __commonJS({
  "node_modules/hash.js/lib/hash/sha/1.js"(exports, module) {
    "use strict";
    var utils = require_utils5();
    var common = require_common();
    var shaCommon = require_common2();
    var rotl32 = utils.rotl32;
    var sum32 = utils.sum32;
    var sum32_5 = utils.sum32_5;
    var ft_1 = shaCommon.ft_1;
    var BlockHash = common.BlockHash;
    var sha1_K = [
      1518500249,
      1859775393,
      2400959708,
      3395469782
    ];
    function SHA1() {
      if (!(this instanceof SHA1))
        return new SHA1();
      BlockHash.call(this);
      this.h = [
        1732584193,
        4023233417,
        2562383102,
        271733878,
        3285377520
      ];
      this.W = new Array(80);
    }
    utils.inherits(SHA1, BlockHash);
    module.exports = SHA1;
    SHA1.blockSize = 512;
    SHA1.outSize = 160;
    SHA1.hmacStrength = 80;
    SHA1.padLength = 64;
    SHA1.prototype._update = function _update(msg, start) {
      var W = this.W;
      for (var i = 0; i < 16; i++)
        W[i] = msg[start + i];
      for (; i < W.length; i++)
        W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);
      var a = this.h[0];
      var b = this.h[1];
      var c = this.h[2];
      var d = this.h[3];
      var e = this.h[4];
      for (i = 0; i < W.length; i++) {
        var s = ~~(i / 20);
        var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);
        e = d;
        d = c;
        c = rotl32(b, 30);
        b = a;
        a = t;
      }
      this.h[0] = sum32(this.h[0], a);
      this.h[1] = sum32(this.h[1], b);
      this.h[2] = sum32(this.h[2], c);
      this.h[3] = sum32(this.h[3], d);
      this.h[4] = sum32(this.h[4], e);
    };
    SHA1.prototype._digest = function digest(enc) {
      if (enc === "hex")
        return utils.toHex32(this.h, "big");
      else
        return utils.split32(this.h, "big");
    };
  }
});

// node_modules/hash.js/lib/hash/sha/256.js
var require__2 = __commonJS({
  "node_modules/hash.js/lib/hash/sha/256.js"(exports, module) {
    "use strict";
    var utils = require_utils5();
    var common = require_common();
    var shaCommon = require_common2();
    var assert = require_minimalistic_assert();
    var sum32 = utils.sum32;
    var sum32_4 = utils.sum32_4;
    var sum32_5 = utils.sum32_5;
    var ch32 = shaCommon.ch32;
    var maj32 = shaCommon.maj32;
    var s0_256 = shaCommon.s0_256;
    var s1_256 = shaCommon.s1_256;
    var g0_256 = shaCommon.g0_256;
    var g1_256 = shaCommon.g1_256;
    var BlockHash = common.BlockHash;
    var sha256_K = [
      1116352408,
      1899447441,
      3049323471,
      3921009573,
      961987163,
      1508970993,
      2453635748,
      2870763221,
      3624381080,
      310598401,
      607225278,
      1426881987,
      1925078388,
      2162078206,
      2614888103,
      3248222580,
      3835390401,
      4022224774,
      264347078,
      604807628,
      770255983,
      1249150122,
      1555081692,
      1996064986,
      2554220882,
      2821834349,
      2952996808,
      3210313671,
      3336571891,
      3584528711,
      113926993,
      338241895,
      666307205,
      773529912,
      1294757372,
      1396182291,
      1695183700,
      1986661051,
      2177026350,
      2456956037,
      2730485921,
      2820302411,
      3259730800,
      3345764771,
      3516065817,
      3600352804,
      4094571909,
      275423344,
      430227734,
      506948616,
      659060556,
      883997877,
      958139571,
      1322822218,
      1537002063,
      1747873779,
      1955562222,
      2024104815,
      2227730452,
      2361852424,
      2428436474,
      2756734187,
      3204031479,
      3329325298
    ];
    function SHA256() {
      if (!(this instanceof SHA256))
        return new SHA256();
      BlockHash.call(this);
      this.h = [
        1779033703,
        3144134277,
        1013904242,
        2773480762,
        1359893119,
        2600822924,
        528734635,
        1541459225
      ];
      this.k = sha256_K;
      this.W = new Array(64);
    }
    utils.inherits(SHA256, BlockHash);
    module.exports = SHA256;
    SHA256.blockSize = 512;
    SHA256.outSize = 256;
    SHA256.hmacStrength = 192;
    SHA256.padLength = 64;
    SHA256.prototype._update = function _update(msg, start) {
      var W = this.W;
      for (var i = 0; i < 16; i++)
        W[i] = msg[start + i];
      for (; i < W.length; i++)
        W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);
      var a = this.h[0];
      var b = this.h[1];
      var c = this.h[2];
      var d = this.h[3];
      var e = this.h[4];
      var f = this.h[5];
      var g = this.h[6];
      var h = this.h[7];
      assert(this.k.length === W.length);
      for (i = 0; i < W.length; i++) {
        var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);
        var T2 = sum32(s0_256(a), maj32(a, b, c));
        h = g;
        g = f;
        f = e;
        e = sum32(d, T1);
        d = c;
        c = b;
        b = a;
        a = sum32(T1, T2);
      }
      this.h[0] = sum32(this.h[0], a);
      this.h[1] = sum32(this.h[1], b);
      this.h[2] = sum32(this.h[2], c);
      this.h[3] = sum32(this.h[3], d);
      this.h[4] = sum32(this.h[4], e);
      this.h[5] = sum32(this.h[5], f);
      this.h[6] = sum32(this.h[6], g);
      this.h[7] = sum32(this.h[7], h);
    };
    SHA256.prototype._digest = function digest(enc) {
      if (enc === "hex")
        return utils.toHex32(this.h, "big");
      else
        return utils.split32(this.h, "big");
    };
  }
});

// node_modules/hash.js/lib/hash/sha/224.js
var require__3 = __commonJS({
  "node_modules/hash.js/lib/hash/sha/224.js"(exports, module) {
    "use strict";
    var utils = require_utils5();
    var SHA256 = require__2();
    function SHA224() {
      if (!(this instanceof SHA224))
        return new SHA224();
      SHA256.call(this);
      this.h = [
        3238371032,
        914150663,
        812702999,
        4144912697,
        4290775857,
        1750603025,
        1694076839,
        3204075428
      ];
    }
    utils.inherits(SHA224, SHA256);
    module.exports = SHA224;
    SHA224.blockSize = 512;
    SHA224.outSize = 224;
    SHA224.hmacStrength = 192;
    SHA224.padLength = 64;
    SHA224.prototype._digest = function digest(enc) {
      if (enc === "hex")
        return utils.toHex32(this.h.slice(0, 7), "big");
      else
        return utils.split32(this.h.slice(0, 7), "big");
    };
  }
});

// node_modules/hash.js/lib/hash/sha/512.js
var require__4 = __commonJS({
  "node_modules/hash.js/lib/hash/sha/512.js"(exports, module) {
    "use strict";
    var utils = require_utils5();
    var common = require_common();
    var assert = require_minimalistic_assert();
    var rotr64_hi = utils.rotr64_hi;
    var rotr64_lo = utils.rotr64_lo;
    var shr64_hi = utils.shr64_hi;
    var shr64_lo = utils.shr64_lo;
    var sum64 = utils.sum64;
    var sum64_hi = utils.sum64_hi;
    var sum64_lo = utils.sum64_lo;
    var sum64_4_hi = utils.sum64_4_hi;
    var sum64_4_lo = utils.sum64_4_lo;
    var sum64_5_hi = utils.sum64_5_hi;
    var sum64_5_lo = utils.sum64_5_lo;
    var BlockHash = common.BlockHash;
    var sha512_K = [
      1116352408,
      3609767458,
      1899447441,
      602891725,
      3049323471,
      3964484399,
      3921009573,
      2173295548,
      961987163,
      4081628472,
      1508970993,
      3053834265,
      2453635748,
      2937671579,
      2870763221,
      3664609560,
      3624381080,
      2734883394,
      310598401,
      1164996542,
      607225278,
      1323610764,
      1426881987,
      3590304994,
      1925078388,
      4068182383,
      2162078206,
      991336113,
      2614888103,
      633803317,
      3248222580,
      3479774868,
      3835390401,
      2666613458,
      4022224774,
      944711139,
      264347078,
      2341262773,
      604807628,
      2007800933,
      770255983,
      1495990901,
      1249150122,
      1856431235,
      1555081692,
      3175218132,
      1996064986,
      2198950837,
      2554220882,
      3999719339,
      2821834349,
      766784016,
      2952996808,
      2566594879,
      3210313671,
      3203337956,
      3336571891,
      1034457026,
      3584528711,
      2466948901,
      113926993,
      3758326383,
      338241895,
      168717936,
      666307205,
      1188179964,
      773529912,
      1546045734,
      1294757372,
      1522805485,
      1396182291,
      2643833823,
      1695183700,
      2343527390,
      1986661051,
      1014477480,
      2177026350,
      1206759142,
      2456956037,
      344077627,
      2730485921,
      1290863460,
      2820302411,
      3158454273,
      3259730800,
      3505952657,
      3345764771,
      106217008,
      3516065817,
      3606008344,
      3600352804,
      1432725776,
      4094571909,
      1467031594,
      275423344,
      851169720,
      430227734,
      3100823752,
      506948616,
      1363258195,
      659060556,
      3750685593,
      883997877,
      3785050280,
      958139571,
      3318307427,
      1322822218,
      3812723403,
      1537002063,
      2003034995,
      1747873779,
      3602036899,
      1955562222,
      1575990012,
      2024104815,
      1125592928,
      2227730452,
      2716904306,
      2361852424,
      442776044,
      2428436474,
      593698344,
      2756734187,
      3733110249,
      3204031479,
      2999351573,
      3329325298,
      3815920427,
      3391569614,
      3928383900,
      3515267271,
      566280711,
      3940187606,
      3454069534,
      4118630271,
      4000239992,
      116418474,
      1914138554,
      174292421,
      2731055270,
      289380356,
      3203993006,
      460393269,
      320620315,
      685471733,
      587496836,
      852142971,
      1086792851,
      1017036298,
      365543100,
      1126000580,
      2618297676,
      1288033470,
      3409855158,
      1501505948,
      4234509866,
      1607167915,
      987167468,
      1816402316,
      1246189591
    ];
    function SHA512() {
      if (!(this instanceof SHA512))
        return new SHA512();
      BlockHash.call(this);
      this.h = [
        1779033703,
        4089235720,
        3144134277,
        2227873595,
        1013904242,
        4271175723,
        2773480762,
        1595750129,
        1359893119,
        2917565137,
        2600822924,
        725511199,
        528734635,
        4215389547,
        1541459225,
        327033209
      ];
      this.k = sha512_K;
      this.W = new Array(160);
    }
    utils.inherits(SHA512, BlockHash);
    module.exports = SHA512;
    SHA512.blockSize = 1024;
    SHA512.outSize = 512;
    SHA512.hmacStrength = 192;
    SHA512.padLength = 128;
    SHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {
      var W = this.W;
      for (var i = 0; i < 32; i++)
        W[i] = msg[start + i];
      for (; i < W.length; i += 2) {
        var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);
        var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);
        var c1_hi = W[i - 14];
        var c1_lo = W[i - 13];
        var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);
        var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);
        var c3_hi = W[i - 32];
        var c3_lo = W[i - 31];
        W[i] = sum64_4_hi(
          c0_hi,
          c0_lo,
          c1_hi,
          c1_lo,
          c2_hi,
          c2_lo,
          c3_hi,
          c3_lo
        );
        W[i + 1] = sum64_4_lo(
          c0_hi,
          c0_lo,
          c1_hi,
          c1_lo,
          c2_hi,
          c2_lo,
          c3_hi,
          c3_lo
        );
      }
    };
    SHA512.prototype._update = function _update(msg, start) {
      this._prepareBlock(msg, start);
      var W = this.W;
      var ah = this.h[0];
      var al = this.h[1];
      var bh = this.h[2];
      var bl = this.h[3];
      var ch = this.h[4];
      var cl = this.h[5];
      var dh = this.h[6];
      var dl = this.h[7];
      var eh = this.h[8];
      var el = this.h[9];
      var fh = this.h[10];
      var fl = this.h[11];
      var gh = this.h[12];
      var gl = this.h[13];
      var hh = this.h[14];
      var hl = this.h[15];
      assert(this.k.length === W.length);
      for (var i = 0; i < W.length; i += 2) {
        var c0_hi = hh;
        var c0_lo = hl;
        var c1_hi = s1_512_hi(eh, el);
        var c1_lo = s1_512_lo(eh, el);
        var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);
        var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);
        var c3_hi = this.k[i];
        var c3_lo = this.k[i + 1];
        var c4_hi = W[i];
        var c4_lo = W[i + 1];
        var T1_hi = sum64_5_hi(
          c0_hi,
          c0_lo,
          c1_hi,
          c1_lo,
          c2_hi,
          c2_lo,
          c3_hi,
          c3_lo,
          c4_hi,
          c4_lo
        );
        var T1_lo = sum64_5_lo(
          c0_hi,
          c0_lo,
          c1_hi,
          c1_lo,
          c2_hi,
          c2_lo,
          c3_hi,
          c3_lo,
          c4_hi,
          c4_lo
        );
        c0_hi = s0_512_hi(ah, al);
        c0_lo = s0_512_lo(ah, al);
        c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);
        c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);
        var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);
        var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);
        hh = gh;
        hl = gl;
        gh = fh;
        gl = fl;
        fh = eh;
        fl = el;
        eh = sum64_hi(dh, dl, T1_hi, T1_lo);
        el = sum64_lo(dl, dl, T1_hi, T1_lo);
        dh = ch;
        dl = cl;
        ch = bh;
        cl = bl;
        bh = ah;
        bl = al;
        ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);
        al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);
      }
      sum64(this.h, 0, ah, al);
      sum64(this.h, 2, bh, bl);
      sum64(this.h, 4, ch, cl);
      sum64(this.h, 6, dh, dl);
      sum64(this.h, 8, eh, el);
      sum64(this.h, 10, fh, fl);
      sum64(this.h, 12, gh, gl);
      sum64(this.h, 14, hh, hl);
    };
    SHA512.prototype._digest = function digest(enc) {
      if (enc === "hex")
        return utils.toHex32(this.h, "big");
      else
        return utils.split32(this.h, "big");
    };
    function ch64_hi(xh, xl, yh, yl, zh) {
      var r = xh & yh ^ ~xh & zh;
      if (r < 0)
        r += 4294967296;
      return r;
    }
    function ch64_lo(xh, xl, yh, yl, zh, zl) {
      var r = xl & yl ^ ~xl & zl;
      if (r < 0)
        r += 4294967296;
      return r;
    }
    function maj64_hi(xh, xl, yh, yl, zh) {
      var r = xh & yh ^ xh & zh ^ yh & zh;
      if (r < 0)
        r += 4294967296;
      return r;
    }
    function maj64_lo(xh, xl, yh, yl, zh, zl) {
      var r = xl & yl ^ xl & zl ^ yl & zl;
      if (r < 0)
        r += 4294967296;
      return r;
    }
    function s0_512_hi(xh, xl) {
      var c0_hi = rotr64_hi(xh, xl, 28);
      var c1_hi = rotr64_hi(xl, xh, 2);
      var c2_hi = rotr64_hi(xl, xh, 7);
      var r = c0_hi ^ c1_hi ^ c2_hi;
      if (r < 0)
        r += 4294967296;
      return r;
    }
    function s0_512_lo(xh, xl) {
      var c0_lo = rotr64_lo(xh, xl, 28);
      var c1_lo = rotr64_lo(xl, xh, 2);
      var c2_lo = rotr64_lo(xl, xh, 7);
      var r = c0_lo ^ c1_lo ^ c2_lo;
      if (r < 0)
        r += 4294967296;
      return r;
    }
    function s1_512_hi(xh, xl) {
      var c0_hi = rotr64_hi(xh, xl, 14);
      var c1_hi = rotr64_hi(xh, xl, 18);
      var c2_hi = rotr64_hi(xl, xh, 9);
      var r = c0_hi ^ c1_hi ^ c2_hi;
      if (r < 0)
        r += 4294967296;
      return r;
    }
    function s1_512_lo(xh, xl) {
      var c0_lo = rotr64_lo(xh, xl, 14);
      var c1_lo = rotr64_lo(xh, xl, 18);
      var c2_lo = rotr64_lo(xl, xh, 9);
      var r = c0_lo ^ c1_lo ^ c2_lo;
      if (r < 0)
        r += 4294967296;
      return r;
    }
    function g0_512_hi(xh, xl) {
      var c0_hi = rotr64_hi(xh, xl, 1);
      var c1_hi = rotr64_hi(xh, xl, 8);
      var c2_hi = shr64_hi(xh, xl, 7);
      var r = c0_hi ^ c1_hi ^ c2_hi;
      if (r < 0)
        r += 4294967296;
      return r;
    }
    function g0_512_lo(xh, xl) {
      var c0_lo = rotr64_lo(xh, xl, 1);
      var c1_lo = rotr64_lo(xh, xl, 8);
      var c2_lo = shr64_lo(xh, xl, 7);
      var r = c0_lo ^ c1_lo ^ c2_lo;
      if (r < 0)
        r += 4294967296;
      return r;
    }
    function g1_512_hi(xh, xl) {
      var c0_hi = rotr64_hi(xh, xl, 19);
      var c1_hi = rotr64_hi(xl, xh, 29);
      var c2_hi = shr64_hi(xh, xl, 6);
      var r = c0_hi ^ c1_hi ^ c2_hi;
      if (r < 0)
        r += 4294967296;
      return r;
    }
    function g1_512_lo(xh, xl) {
      var c0_lo = rotr64_lo(xh, xl, 19);
      var c1_lo = rotr64_lo(xl, xh, 29);
      var c2_lo = shr64_lo(xh, xl, 6);
      var r = c0_lo ^ c1_lo ^ c2_lo;
      if (r < 0)
        r += 4294967296;
      return r;
    }
  }
});

// node_modules/hash.js/lib/hash/sha/384.js
var require__5 = __commonJS({
  "node_modules/hash.js/lib/hash/sha/384.js"(exports, module) {
    "use strict";
    var utils = require_utils5();
    var SHA512 = require__4();
    function SHA384() {
      if (!(this instanceof SHA384))
        return new SHA384();
      SHA512.call(this);
      this.h = [
        3418070365,
        3238371032,
        1654270250,
        914150663,
        2438529370,
        812702999,
        355462360,
        4144912697,
        1731405415,
        4290775857,
        2394180231,
        1750603025,
        3675008525,
        1694076839,
        1203062813,
        3204075428
      ];
    }
    utils.inherits(SHA384, SHA512);
    module.exports = SHA384;
    SHA384.blockSize = 1024;
    SHA384.outSize = 384;
    SHA384.hmacStrength = 192;
    SHA384.padLength = 128;
    SHA384.prototype._digest = function digest(enc) {
      if (enc === "hex")
        return utils.toHex32(this.h.slice(0, 12), "big");
      else
        return utils.split32(this.h.slice(0, 12), "big");
    };
  }
});

// node_modules/hash.js/lib/hash/sha.js
var require_sha4 = __commonJS({
  "node_modules/hash.js/lib/hash/sha.js"(exports) {
    "use strict";
    exports.sha1 = require__();
    exports.sha224 = require__3();
    exports.sha256 = require__2();
    exports.sha384 = require__5();
    exports.sha512 = require__4();
  }
});

// node_modules/hash.js/lib/hash/ripemd.js
var require_ripemd2 = __commonJS({
  "node_modules/hash.js/lib/hash/ripemd.js"(exports) {
    "use strict";
    var utils = require_utils5();
    var common = require_common();
    var rotl32 = utils.rotl32;
    var sum32 = utils.sum32;
    var sum32_3 = utils.sum32_3;
    var sum32_4 = utils.sum32_4;
    var BlockHash = common.BlockHash;
    function RIPEMD160() {
      if (!(this instanceof RIPEMD160))
        return new RIPEMD160();
      BlockHash.call(this);
      this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];
      this.endian = "little";
    }
    utils.inherits(RIPEMD160, BlockHash);
    exports.ripemd160 = RIPEMD160;
    RIPEMD160.blockSize = 512;
    RIPEMD160.outSize = 160;
    RIPEMD160.hmacStrength = 192;
    RIPEMD160.padLength = 64;
    RIPEMD160.prototype._update = function update(msg, start) {
      var A = this.h[0];
      var B = this.h[1];
      var C = this.h[2];
      var D = this.h[3];
      var E = this.h[4];
      var Ah = A;
      var Bh = B;
      var Ch = C;
      var Dh = D;
      var Eh = E;
      for (var j = 0; j < 80; j++) {
        var T = sum32(
          rotl32(
            sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),
            s[j]
          ),
          E
        );
        A = E;
        E = D;
        D = rotl32(C, 10);
        C = B;
        B = T;
        T = sum32(
          rotl32(
            sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),
            sh[j]
          ),
          Eh
        );
        Ah = Eh;
        Eh = Dh;
        Dh = rotl32(Ch, 10);
        Ch = Bh;
        Bh = T;
      }
      T = sum32_3(this.h[1], C, Dh);
      this.h[1] = sum32_3(this.h[2], D, Eh);
      this.h[2] = sum32_3(this.h[3], E, Ah);
      this.h[3] = sum32_3(this.h[4], A, Bh);
      this.h[4] = sum32_3(this.h[0], B, Ch);
      this.h[0] = T;
    };
    RIPEMD160.prototype._digest = function digest(enc) {
      if (enc === "hex")
        return utils.toHex32(this.h, "little");
      else
        return utils.split32(this.h, "little");
    };
    function f(j, x, y, z) {
      if (j <= 15)
        return x ^ y ^ z;
      else if (j <= 31)
        return x & y | ~x & z;
      else if (j <= 47)
        return (x | ~y) ^ z;
      else if (j <= 63)
        return x & z | y & ~z;
      else
        return x ^ (y | ~z);
    }
    function K(j) {
      if (j <= 15)
        return 0;
      else if (j <= 31)
        return 1518500249;
      else if (j <= 47)
        return 1859775393;
      else if (j <= 63)
        return 2400959708;
      else
        return 2840853838;
    }
    function Kh(j) {
      if (j <= 15)
        return 1352829926;
      else if (j <= 31)
        return 1548603684;
      else if (j <= 47)
        return 1836072691;
      else if (j <= 63)
        return 2053994217;
      else
        return 0;
    }
    var r = [
      0,
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      8,
      9,
      10,
      11,
      12,
      13,
      14,
      15,
      7,
      4,
      13,
      1,
      10,
      6,
      15,
      3,
      12,
      0,
      9,
      5,
      2,
      14,
      11,
      8,
      3,
      10,
      14,
      4,
      9,
      15,
      8,
      1,
      2,
      7,
      0,
      6,
      13,
      11,
      5,
      12,
      1,
      9,
      11,
      10,
      0,
      8,
      12,
      4,
      13,
      3,
      7,
      15,
      14,
      5,
      6,
      2,
      4,
      0,
      5,
      9,
      7,
      12,
      2,
      10,
      14,
      1,
      3,
      8,
      11,
      6,
      15,
      13
    ];
    var rh = [
      5,
      14,
      7,
      0,
      9,
      2,
      11,
      4,
      13,
      6,
      15,
      8,
      1,
      10,
      3,
      12,
      6,
      11,
      3,
      7,
      0,
      13,
      5,
      10,
      14,
      15,
      8,
      12,
      4,
      9,
      1,
      2,
      15,
      5,
      1,
      3,
      7,
      14,
      6,
      9,
      11,
      8,
      12,
      2,
      10,
      0,
      4,
      13,
      8,
      6,
      4,
      1,
      3,
      11,
      15,
      0,
      5,
      12,
      2,
      13,
      9,
      7,
      10,
      14,
      12,
      15,
      10,
      4,
      1,
      5,
      8,
      7,
      6,
      2,
      13,
      14,
      0,
      3,
      9,
      11
    ];
    var s = [
      11,
      14,
      15,
      12,
      5,
      8,
      7,
      9,
      11,
      13,
      14,
      15,
      6,
      7,
      9,
      8,
      7,
      6,
      8,
      13,
      11,
      9,
      7,
      15,
      7,
      12,
      15,
      9,
      11,
      7,
      13,
      12,
      11,
      13,
      6,
      7,
      14,
      9,
      13,
      15,
      14,
      8,
      13,
      6,
      5,
      12,
      7,
      5,
      11,
      12,
      14,
      15,
      14,
      15,
      9,
      8,
      9,
      14,
      5,
      6,
      8,
      6,
      5,
      12,
      9,
      15,
      5,
      11,
      6,
      8,
      13,
      12,
      5,
      12,
      13,
      14,
      11,
      8,
      5,
      6
    ];
    var sh = [
      8,
      9,
      9,
      11,
      13,
      15,
      15,
      5,
      7,
      7,
      8,
      11,
      14,
      14,
      12,
      6,
      9,
      13,
      15,
      7,
      12,
      8,
      9,
      11,
      7,
      7,
      12,
      7,
      6,
      15,
      13,
      11,
      9,
      7,
      15,
      11,
      8,
      6,
      6,
      14,
      12,
      13,
      5,
      14,
      13,
      13,
      7,
      5,
      15,
      5,
      8,
      11,
      14,
      14,
      6,
      14,
      6,
      9,
      12,
      9,
      12,
      5,
      15,
      8,
      8,
      5,
      12,
      9,
      12,
      5,
      14,
      6,
      8,
      13,
      6,
      5,
      15,
      13,
      11,
      11
    ];
  }
});

// node_modules/hash.js/lib/hash/hmac.js
var require_hmac3 = __commonJS({
  "node_modules/hash.js/lib/hash/hmac.js"(exports, module) {
    "use strict";
    var utils = require_utils5();
    var assert = require_minimalistic_assert();
    function Hmac(hash, key, enc) {
      if (!(this instanceof Hmac))
        return new Hmac(hash, key, enc);
      this.Hash = hash;
      this.blockSize = hash.blockSize / 8;
      this.outSize = hash.outSize / 8;
      this.inner = null;
      this.outer = null;
      this._init(utils.toArray(key, enc));
    }
    module.exports = Hmac;
    Hmac.prototype._init = function init(key) {
      if (key.length > this.blockSize)
        key = new this.Hash().update(key).digest();
      assert(key.length <= this.blockSize);
      for (var i = key.length; i < this.blockSize; i++)
        key.push(0);
      for (i = 0; i < key.length; i++)
        key[i] ^= 54;
      this.inner = new this.Hash().update(key);
      for (i = 0; i < key.length; i++)
        key[i] ^= 106;
      this.outer = new this.Hash().update(key);
    };
    Hmac.prototype.update = function update(msg, enc) {
      this.inner.update(msg, enc);
      return this;
    };
    Hmac.prototype.digest = function digest(enc) {
      this.outer.update(this.inner.digest());
      return this.outer.digest(enc);
    };
  }
});

// node_modules/hash.js/lib/hash.js
var require_hash = __commonJS({
  "node_modules/hash.js/lib/hash.js"(exports) {
    var hash = exports;
    hash.utils = require_utils5();
    hash.common = require_common();
    hash.sha = require_sha4();
    hash.ripemd = require_ripemd2();
    hash.hmac = require_hmac3();
    hash.sha1 = hash.sha.sha1;
    hash.sha256 = hash.sha.sha256;
    hash.sha224 = hash.sha.sha224;
    hash.sha384 = hash.sha.sha384;
    hash.sha512 = hash.sha.sha512;
    hash.ripemd160 = hash.ripemd.ripemd160;
  }
});

// node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js
var require_secp256k1 = __commonJS({
  "node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js"(exports, module) {
    module.exports = {
      doubles: {
        step: 4,
        points: [
          [
            "e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a",
            "f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"
          ],
          [
            "8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508",
            "11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"
          ],
          [
            "175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739",
            "d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"
          ],
          [
            "363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640",
            "4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"
          ],
          [
            "8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c",
            "4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"
          ],
          [
            "723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda",
            "96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"
          ],
          [
            "eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa",
            "5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"
          ],
          [
            "100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0",
            "cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"
          ],
          [
            "e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d",
            "9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"
          ],
          [
            "feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d",
            "e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"
          ],
          [
            "da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1",
            "9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"
          ],
          [
            "53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0",
            "5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"
          ],
          [
            "8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047",
            "10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"
          ],
          [
            "385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862",
            "283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"
          ],
          [
            "6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7",
            "7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"
          ],
          [
            "3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd",
            "56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"
          ],
          [
            "85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83",
            "7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"
          ],
          [
            "948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a",
            "53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"
          ],
          [
            "6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8",
            "bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"
          ],
          [
            "e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d",
            "4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"
          ],
          [
            "e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725",
            "7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"
          ],
          [
            "213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754",
            "4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"
          ],
          [
            "4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c",
            "17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"
          ],
          [
            "fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6",
            "6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"
          ],
          [
            "76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39",
            "c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"
          ],
          [
            "c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891",
            "893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"
          ],
          [
            "d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b",
            "febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"
          ],
          [
            "b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03",
            "2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"
          ],
          [
            "e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d",
            "eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"
          ],
          [
            "a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070",
            "7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"
          ],
          [
            "90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4",
            "e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"
          ],
          [
            "8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da",
            "662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"
          ],
          [
            "e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11",
            "1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"
          ],
          [
            "8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e",
            "efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"
          ],
          [
            "e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41",
            "2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"
          ],
          [
            "b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef",
            "67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"
          ],
          [
            "d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8",
            "db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"
          ],
          [
            "324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d",
            "648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"
          ],
          [
            "4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96",
            "35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"
          ],
          [
            "9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd",
            "ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"
          ],
          [
            "6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5",
            "9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"
          ],
          [
            "a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266",
            "40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"
          ],
          [
            "7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71",
            "34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"
          ],
          [
            "928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac",
            "c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"
          ],
          [
            "85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751",
            "1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"
          ],
          [
            "ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e",
            "493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"
          ],
          [
            "827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241",
            "c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"
          ],
          [
            "eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3",
            "be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"
          ],
          [
            "e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f",
            "4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"
          ],
          [
            "1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19",
            "aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"
          ],
          [
            "146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be",
            "b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"
          ],
          [
            "fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9",
            "6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"
          ],
          [
            "da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2",
            "8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"
          ],
          [
            "a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13",
            "7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"
          ],
          [
            "174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c",
            "ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"
          ],
          [
            "959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba",
            "2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"
          ],
          [
            "d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151",
            "e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"
          ],
          [
            "64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073",
            "d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"
          ],
          [
            "8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458",
            "38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"
          ],
          [
            "13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b",
            "69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"
          ],
          [
            "bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366",
            "d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"
          ],
          [
            "8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa",
            "40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"
          ],
          [
            "8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0",
            "620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"
          ],
          [
            "dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787",
            "7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"
          ],
          [
            "f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e",
            "ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"
          ]
        ]
      },
      naf: {
        wnd: 7,
        points: [
          [
            "f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9",
            "388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"
          ],
          [
            "2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4",
            "d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"
          ],
          [
            "5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc",
            "6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"
          ],
          [
            "acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe",
            "cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"
          ],
          [
            "774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb",
            "d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"
          ],
          [
            "f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8",
            "ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"
          ],
          [
            "d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e",
            "581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"
          ],
          [
            "defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34",
            "4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"
          ],
          [
            "2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c",
            "85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"
          ],
          [
            "352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5",
            "321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"
          ],
          [
            "2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f",
            "2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"
          ],
          [
            "9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714",
            "73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"
          ],
          [
            "daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729",
            "a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"
          ],
          [
            "c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db",
            "2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"
          ],
          [
            "6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4",
            "e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"
          ],
          [
            "1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5",
            "b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"
          ],
          [
            "605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479",
            "2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"
          ],
          [
            "62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d",
            "80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"
          ],
          [
            "80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f",
            "1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"
          ],
          [
            "7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb",
            "d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"
          ],
          [
            "d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9",
            "eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"
          ],
          [
            "49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963",
            "758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"
          ],
          [
            "77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74",
            "958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"
          ],
          [
            "f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530",
            "e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"
          ],
          [
            "463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b",
            "5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"
          ],
          [
            "f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247",
            "cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"
          ],
          [
            "caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1",
            "cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"
          ],
          [
            "2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120",
            "4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"
          ],
          [
            "7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435",
            "91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"
          ],
          [
            "754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18",
            "673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"
          ],
          [
            "e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8",
            "59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"
          ],
          [
            "186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb",
            "3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"
          ],
          [
            "df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f",
            "55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"
          ],
          [
            "5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143",
            "efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"
          ],
          [
            "290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba",
            "e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"
          ],
          [
            "af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45",
            "f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"
          ],
          [
            "766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a",
            "744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"
          ],
          [
            "59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e",
            "c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"
          ],
          [
            "f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8",
            "e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"
          ],
          [
            "7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c",
            "30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"
          ],
          [
            "948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519",
            "e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"
          ],
          [
            "7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab",
            "100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"
          ],
          [
            "3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca",
            "ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"
          ],
          [
            "d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf",
            "8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"
          ],
          [
            "1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610",
            "68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"
          ],
          [
            "733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4",
            "f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"
          ],
          [
            "15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c",
            "d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"
          ],
          [
            "a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940",
            "edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"
          ],
          [
            "e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980",
            "a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"
          ],
          [
            "311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3",
            "66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"
          ],
          [
            "34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf",
            "9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"
          ],
          [
            "f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63",
            "4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"
          ],
          [
            "d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448",
            "fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"
          ],
          [
            "32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf",
            "5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"
          ],
          [
            "7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5",
            "8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"
          ],
          [
            "ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6",
            "8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"
          ],
          [
            "16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5",
            "5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"
          ],
          [
            "eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99",
            "f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"
          ],
          [
            "78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51",
            "f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"
          ],
          [
            "494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5",
            "42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"
          ],
          [
            "a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5",
            "204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"
          ],
          [
            "c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997",
            "4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"
          ],
          [
            "841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881",
            "73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"
          ],
          [
            "5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5",
            "39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"
          ],
          [
            "36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66",
            "d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"
          ],
          [
            "336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726",
            "ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"
          ],
          [
            "8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede",
            "6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"
          ],
          [
            "1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94",
            "60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"
          ],
          [
            "85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31",
            "3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"
          ],
          [
            "29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51",
            "b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"
          ],
          [
            "a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252",
            "ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"
          ],
          [
            "4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5",
            "cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"
          ],
          [
            "d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b",
            "6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"
          ],
          [
            "ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4",
            "322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"
          ],
          [
            "af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f",
            "6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"
          ],
          [
            "e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889",
            "2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"
          ],
          [
            "591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246",
            "b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"
          ],
          [
            "11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984",
            "998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"
          ],
          [
            "3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a",
            "b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"
          ],
          [
            "cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030",
            "bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"
          ],
          [
            "c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197",
            "6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"
          ],
          [
            "c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593",
            "c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"
          ],
          [
            "a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef",
            "21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"
          ],
          [
            "347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38",
            "60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"
          ],
          [
            "da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a",
            "49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"
          ],
          [
            "c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111",
            "5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"
          ],
          [
            "4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502",
            "7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"
          ],
          [
            "3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea",
            "be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"
          ],
          [
            "cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26",
            "8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"
          ],
          [
            "b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986",
            "39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"
          ],
          [
            "d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e",
            "62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"
          ],
          [
            "48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4",
            "25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"
          ],
          [
            "dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda",
            "ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"
          ],
          [
            "6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859",
            "cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"
          ],
          [
            "e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f",
            "f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"
          ],
          [
            "eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c",
            "6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"
          ],
          [
            "13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942",
            "fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"
          ],
          [
            "ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a",
            "1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"
          ],
          [
            "b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80",
            "5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"
          ],
          [
            "ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d",
            "438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"
          ],
          [
            "8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1",
            "cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"
          ],
          [
            "52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63",
            "c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"
          ],
          [
            "e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352",
            "6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"
          ],
          [
            "7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193",
            "ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"
          ],
          [
            "5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00",
            "9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"
          ],
          [
            "32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58",
            "ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"
          ],
          [
            "e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7",
            "d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"
          ],
          [
            "8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8",
            "c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"
          ],
          [
            "4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e",
            "67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"
          ],
          [
            "3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d",
            "cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"
          ],
          [
            "674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b",
            "299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"
          ],
          [
            "d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f",
            "f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"
          ],
          [
            "30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6",
            "462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"
          ],
          [
            "be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297",
            "62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"
          ],
          [
            "93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a",
            "7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"
          ],
          [
            "b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c",
            "ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"
          ],
          [
            "d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52",
            "4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"
          ],
          [
            "d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb",
            "bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"
          ],
          [
            "463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065",
            "bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"
          ],
          [
            "7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917",
            "603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"
          ],
          [
            "74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9",
            "cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"
          ],
          [
            "30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3",
            "553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"
          ],
          [
            "9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57",
            "712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"
          ],
          [
            "176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66",
            "ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"
          ],
          [
            "75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8",
            "9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"
          ],
          [
            "809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721",
            "9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"
          ],
          [
            "1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180",
            "4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"
          ]
        ]
      }
    };
  }
});

// node_modules/elliptic/lib/elliptic/curves.js
var require_curves = __commonJS({
  "node_modules/elliptic/lib/elliptic/curves.js"(exports) {
    "use strict";
    var curves = exports;
    var hash = require_hash();
    var curve = require_curve();
    var utils = require_utils4();
    var assert = utils.assert;
    function PresetCurve(options) {
      if (options.type === "short")
        this.curve = new curve.short(options);
      else if (options.type === "edwards")
        this.curve = new curve.edwards(options);
      else
        this.curve = new curve.mont(options);
      this.g = this.curve.g;
      this.n = this.curve.n;
      this.hash = options.hash;
      assert(this.g.validate(), "Invalid curve");
      assert(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
    }
    curves.PresetCurve = PresetCurve;
    function defineCurve(name, options) {
      Object.defineProperty(curves, name, {
        configurable: true,
        enumerable: true,
        get: function() {
          var curve2 = new PresetCurve(options);
          Object.defineProperty(curves, name, {
            configurable: true,
            enumerable: true,
            value: curve2
          });
          return curve2;
        }
      });
    }
    defineCurve("p192", {
      type: "short",
      prime: "p192",
      p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
      a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
      b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
      n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
      hash: hash.sha256,
      gRed: false,
      g: [
        "188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012",
        "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"
      ]
    });
    defineCurve("p224", {
      type: "short",
      prime: "p224",
      p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
      a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
      b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
      n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
      hash: hash.sha256,
      gRed: false,
      g: [
        "b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21",
        "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"
      ]
    });
    defineCurve("p256", {
      type: "short",
      prime: null,
      p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
      a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
      b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
      n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
      hash: hash.sha256,
      gRed: false,
      g: [
        "6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296",
        "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"
      ]
    });
    defineCurve("p384", {
      type: "short",
      prime: null,
      p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
      a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
      b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
      n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
      hash: hash.sha384,
      gRed: false,
      g: [
        "aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7",
        "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"
      ]
    });
    defineCurve("p521", {
      type: "short",
      prime: null,
      p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
      a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
      b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
      n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
      hash: hash.sha512,
      gRed: false,
      g: [
        "000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66",
        "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"
      ]
    });
    defineCurve("curve25519", {
      type: "mont",
      prime: "p25519",
      p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
      a: "76d06",
      b: "1",
      n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
      hash: hash.sha256,
      gRed: false,
      g: [
        "9"
      ]
    });
    defineCurve("ed25519", {
      type: "edwards",
      prime: "p25519",
      p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
      a: "-1",
      c: "1",
      // -121665 * (121666^(-1)) (mod P)
      d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
      n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
      hash: hash.sha256,
      gRed: false,
      g: [
        "216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a",
        // 4/5
        "6666666666666666666666666666666666666666666666666666666666666658"
      ]
    });
    var pre;
    try {
      pre = require_secp256k1();
    } catch (e) {
      pre = void 0;
    }
    defineCurve("secp256k1", {
      type: "short",
      prime: "k256",
      p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
      a: "0",
      b: "7",
      n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
      h: "1",
      hash: hash.sha256,
      // Precomputed endomorphism
      beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
      lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
      basis: [
        {
          a: "3086d221a7d46bcde86c90e49284eb15",
          b: "-e4437ed6010e88286f547fa90abfe4c3"
        },
        {
          a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
          b: "3086d221a7d46bcde86c90e49284eb15"
        }
      ],
      gRed: false,
      g: [
        "79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798",
        "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",
        pre
      ]
    });
  }
});

// node_modules/hmac-drbg/lib/hmac-drbg.js
var require_hmac_drbg = __commonJS({
  "node_modules/hmac-drbg/lib/hmac-drbg.js"(exports, module) {
    "use strict";
    var hash = require_hash();
    var utils = require_utils3();
    var assert = require_minimalistic_assert();
    function HmacDRBG(options) {
      if (!(this instanceof HmacDRBG))
        return new HmacDRBG(options);
      this.hash = options.hash;
      this.predResist = !!options.predResist;
      this.outLen = this.hash.outSize;
      this.minEntropy = options.minEntropy || this.hash.hmacStrength;
      this._reseed = null;
      this.reseedInterval = null;
      this.K = null;
      this.V = null;
      var entropy = utils.toArray(options.entropy, options.entropyEnc || "hex");
      var nonce = utils.toArray(options.nonce, options.nonceEnc || "hex");
      var pers = utils.toArray(options.pers, options.persEnc || "hex");
      assert(
        entropy.length >= this.minEntropy / 8,
        "Not enough entropy. Minimum is: " + this.minEntropy + " bits"
      );
      this._init(entropy, nonce, pers);
    }
    module.exports = HmacDRBG;
    HmacDRBG.prototype._init = function init(entropy, nonce, pers) {
      var seed = entropy.concat(nonce).concat(pers);
      this.K = new Array(this.outLen / 8);
      this.V = new Array(this.outLen / 8);
      for (var i = 0; i < this.V.length; i++) {
        this.K[i] = 0;
        this.V[i] = 1;
      }
      this._update(seed);
      this._reseed = 1;
      this.reseedInterval = 281474976710656;
    };
    HmacDRBG.prototype._hmac = function hmac() {
      return new hash.hmac(this.hash, this.K);
    };
    HmacDRBG.prototype._update = function update(seed) {
      var kmac = this._hmac().update(this.V).update([0]);
      if (seed)
        kmac = kmac.update(seed);
      this.K = kmac.digest();
      this.V = this._hmac().update(this.V).digest();
      if (!seed)
        return;
      this.K = this._hmac().update(this.V).update([1]).update(seed).digest();
      this.V = this._hmac().update(this.V).digest();
    };
    HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {
      if (typeof entropyEnc !== "string") {
        addEnc = add;
        add = entropyEnc;
        entropyEnc = null;
      }
      entropy = utils.toArray(entropy, entropyEnc);
      add = utils.toArray(add, addEnc);
      assert(
        entropy.length >= this.minEntropy / 8,
        "Not enough entropy. Minimum is: " + this.minEntropy + " bits"
      );
      this._update(entropy.concat(add || []));
      this._reseed = 1;
    };
    HmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {
      if (this._reseed > this.reseedInterval)
        throw new Error("Reseed is required");
      if (typeof enc !== "string") {
        addEnc = add;
        add = enc;
        enc = null;
      }
      if (add) {
        add = utils.toArray(add, addEnc || "hex");
        this._update(add);
      }
      var temp = [];
      while (temp.length < len) {
        this.V = this._hmac().update(this.V).digest();
        temp = temp.concat(this.V);
      }
      var res = temp.slice(0, len);
      this._update(add);
      this._reseed++;
      return utils.encode(res, enc);
    };
  }
});

// node_modules/elliptic/lib/elliptic/ec/key.js
var require_key = __commonJS({
  "node_modules/elliptic/lib/elliptic/ec/key.js"(exports, module) {
    "use strict";
    var BN = require_bn2();
    var utils = require_utils4();
    var assert = utils.assert;
    function KeyPair(ec, options) {
      this.ec = ec;
      this.priv = null;
      this.pub = null;
      if (options.priv)
        this._importPrivate(options.priv, options.privEnc);
      if (options.pub)
        this._importPublic(options.pub, options.pubEnc);
    }
    module.exports = KeyPair;
    KeyPair.fromPublic = function fromPublic(ec, pub, enc) {
      if (pub instanceof KeyPair)
        return pub;
      return new KeyPair(ec, {
        pub,
        pubEnc: enc
      });
    };
    KeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {
      if (priv instanceof KeyPair)
        return priv;
      return new KeyPair(ec, {
        priv,
        privEnc: enc
      });
    };
    KeyPair.prototype.validate = function validate() {
      var pub = this.getPublic();
      if (pub.isInfinity())
        return { result: false, reason: "Invalid public key" };
      if (!pub.validate())
        return { result: false, reason: "Public key is not a point" };
      if (!pub.mul(this.ec.curve.n).isInfinity())
        return { result: false, reason: "Public key * N != O" };
      return { result: true, reason: null };
    };
    KeyPair.prototype.getPublic = function getPublic(compact, enc) {
      if (typeof compact === "string") {
        enc = compact;
        compact = null;
      }
      if (!this.pub)
        this.pub = this.ec.g.mul(this.priv);
      if (!enc)
        return this.pub;
      return this.pub.encode(enc, compact);
    };
    KeyPair.prototype.getPrivate = function getPrivate(enc) {
      if (enc === "hex")
        return this.priv.toString(16, 2);
      else
        return this.priv;
    };
    KeyPair.prototype._importPrivate = function _importPrivate(key, enc) {
      this.priv = new BN(key, enc || 16);
      this.priv = this.priv.umod(this.ec.curve.n);
    };
    KeyPair.prototype._importPublic = function _importPublic(key, enc) {
      if (key.x || key.y) {
        if (this.ec.curve.type === "mont") {
          assert(key.x, "Need x coordinate");
        } else if (this.ec.curve.type === "short" || this.ec.curve.type === "edwards") {
          assert(key.x && key.y, "Need both x and y coordinate");
        }
        this.pub = this.ec.curve.point(key.x, key.y);
        return;
      }
      this.pub = this.ec.curve.decodePoint(key, enc);
    };
    KeyPair.prototype.derive = function derive(pub) {
      if (!pub.validate()) {
        assert(pub.validate(), "public point not validated");
      }
      return pub.mul(this.priv).getX();
    };
    KeyPair.prototype.sign = function sign(msg, enc, options) {
      return this.ec.sign(msg, this, enc, options);
    };
    KeyPair.prototype.verify = function verify(msg, signature) {
      return this.ec.verify(msg, signature, this);
    };
    KeyPair.prototype.inspect = function inspect() {
      return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >";
    };
  }
});

// node_modules/elliptic/lib/elliptic/ec/signature.js
var require_signature = __commonJS({
  "node_modules/elliptic/lib/elliptic/ec/signature.js"(exports, module) {
    "use strict";
    var BN = require_bn2();
    var utils = require_utils4();
    var assert = utils.assert;
    function Signature(options, enc) {
      if (options instanceof Signature)
        return options;
      if (this._importDER(options, enc))
        return;
      assert(options.r && options.s, "Signature without r or s");
      this.r = new BN(options.r, 16);
      this.s = new BN(options.s, 16);
      if (options.recoveryParam === void 0)
        this.recoveryParam = null;
      else
        this.recoveryParam = options.recoveryParam;
    }
    module.exports = Signature;
    function Position() {
      this.place = 0;
    }
    function getLength(buf, p) {
      var initial = buf[p.place++];
      if (!(initial & 128)) {
        return initial;
      }
      var octetLen = initial & 15;
      if (octetLen === 0 || octetLen > 4) {
        return false;
      }
      var val = 0;
      for (var i = 0, off = p.place; i < octetLen; i++, off++) {
        val <<= 8;
        val |= buf[off];
        val >>>= 0;
      }
      if (val <= 127) {
        return false;
      }
      p.place = off;
      return val;
    }
    function rmPadding(buf) {
      var i = 0;
      var len = buf.length - 1;
      while (!buf[i] && !(buf[i + 1] & 128) && i < len) {
        i++;
      }
      if (i === 0) {
        return buf;
      }
      return buf.slice(i);
    }
    Signature.prototype._importDER = function _importDER(data, enc) {
      data = utils.toArray(data, enc);
      var p = new Position();
      if (data[p.place++] !== 48) {
        return false;
      }
      var len = getLength(data, p);
      if (len === false) {
        return false;
      }
      if (len + p.place !== data.length) {
        return false;
      }
      if (data[p.place++] !== 2) {
        return false;
      }
      var rlen = getLength(data, p);
      if (rlen === false) {
        return false;
      }
      var r = data.slice(p.place, rlen + p.place);
      p.place += rlen;
      if (data[p.place++] !== 2) {
        return false;
      }
      var slen = getLength(data, p);
      if (slen === false) {
        return false;
      }
      if (data.length !== slen + p.place) {
        return false;
      }
      var s = data.slice(p.place, slen + p.place);
      if (r[0] === 0) {
        if (r[1] & 128) {
          r = r.slice(1);
        } else {
          return false;
        }
      }
      if (s[0] === 0) {
        if (s[1] & 128) {
          s = s.slice(1);
        } else {
          return false;
        }
      }
      this.r = new BN(r);
      this.s = new BN(s);
      this.recoveryParam = null;
      return true;
    };
    function constructLength(arr, len) {
      if (len < 128) {
        arr.push(len);
        return;
      }
      var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
      arr.push(octets | 128);
      while (--octets) {
        arr.push(len >>> (octets << 3) & 255);
      }
      arr.push(len);
    }
    Signature.prototype.toDER = function toDER(enc) {
      var r = this.r.toArray();
      var s = this.s.toArray();
      if (r[0] & 128)
        r = [0].concat(r);
      if (s[0] & 128)
        s = [0].concat(s);
      r = rmPadding(r);
      s = rmPadding(s);
      while (!s[0] && !(s[1] & 128)) {
        s = s.slice(1);
      }
      var arr = [2];
      constructLength(arr, r.length);
      arr = arr.concat(r);
      arr.push(2);
      constructLength(arr, s.length);
      var backHalf = arr.concat(s);
      var res = [48];
      constructLength(res, backHalf.length);
      res = res.concat(backHalf);
      return utils.encode(res, enc);
    };
  }
});

// node_modules/elliptic/lib/elliptic/ec/index.js
var require_ec = __commonJS({
  "node_modules/elliptic/lib/elliptic/ec/index.js"(exports, module) {
    "use strict";
    var BN = require_bn2();
    var HmacDRBG = require_hmac_drbg();
    var utils = require_utils4();
    var curves = require_curves();
    var rand = require_brorand();
    var assert = utils.assert;
    var KeyPair = require_key();
    var Signature = require_signature();
    function EC(options) {
      if (!(this instanceof EC))
        return new EC(options);
      if (typeof options === "string") {
        assert(
          Object.prototype.hasOwnProperty.call(curves, options),
          "Unknown curve " + options
        );
        options = curves[options];
      }
      if (options instanceof curves.PresetCurve)
        options = { curve: options };
      this.curve = options.curve.curve;
      this.n = this.curve.n;
      this.nh = this.n.ushrn(1);
      this.g = this.curve.g;
      this.g = options.curve.g;
      this.g.precompute(options.curve.n.bitLength() + 1);
      this.hash = options.hash || options.curve.hash;
    }
    module.exports = EC;
    EC.prototype.keyPair = function keyPair(options) {
      return new KeyPair(this, options);
    };
    EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
      return KeyPair.fromPrivate(this, priv, enc);
    };
    EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
      return KeyPair.fromPublic(this, pub, enc);
    };
    EC.prototype.genKeyPair = function genKeyPair(options) {
      if (!options)
        options = {};
      var drbg = new HmacDRBG({
        hash: this.hash,
        pers: options.pers,
        persEnc: options.persEnc || "utf8",
        entropy: options.entropy || rand(this.hash.hmacStrength),
        entropyEnc: options.entropy && options.entropyEnc || "utf8",
        nonce: this.n.toArray()
      });
      var bytes = this.n.byteLength();
      var ns2 = this.n.sub(new BN(2));
      for (; ; ) {
        var priv = new BN(drbg.generate(bytes));
        if (priv.cmp(ns2) > 0)
          continue;
        priv.iaddn(1);
        return this.keyFromPrivate(priv);
      }
    };
    EC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {
      var delta = msg.byteLength() * 8 - this.n.bitLength();
      if (delta > 0)
        msg = msg.ushrn(delta);
      if (!truncOnly && msg.cmp(this.n) >= 0)
        return msg.sub(this.n);
      else
        return msg;
    };
    EC.prototype.sign = function sign(msg, key, enc, options) {
      if (typeof enc === "object") {
        options = enc;
        enc = null;
      }
      if (!options)
        options = {};
      key = this.keyFromPrivate(key, enc);
      msg = this._truncateToN(new BN(msg, 16));
      var bytes = this.n.byteLength();
      var bkey = key.getPrivate().toArray("be", bytes);
      var nonce = msg.toArray("be", bytes);
      var drbg = new HmacDRBG({
        hash: this.hash,
        entropy: bkey,
        nonce,
        pers: options.pers,
        persEnc: options.persEnc || "utf8"
      });
      var ns1 = this.n.sub(new BN(1));
      for (var iter = 0; ; iter++) {
        var k = options.k ? options.k(iter) : new BN(drbg.generate(this.n.byteLength()));
        k = this._truncateToN(k, true);
        if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)
          continue;
        var kp = this.g.mul(k);
        if (kp.isInfinity())
          continue;
        var kpX = kp.getX();
        var r = kpX.umod(this.n);
        if (r.cmpn(0) === 0)
          continue;
        var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
        s = s.umod(this.n);
        if (s.cmpn(0) === 0)
          continue;
        var recoveryParam = (kp.getY().isOdd() ? 1 : 0) | (kpX.cmp(r) !== 0 ? 2 : 0);
        if (options.canonical && s.cmp(this.nh) > 0) {
          s = this.n.sub(s);
          recoveryParam ^= 1;
        }
        return new Signature({ r, s, recoveryParam });
      }
    };
    EC.prototype.verify = function verify(msg, signature, key, enc) {
      msg = this._truncateToN(new BN(msg, 16));
      key = this.keyFromPublic(key, enc);
      signature = new Signature(signature, "hex");
      var r = signature.r;
      var s = signature.s;
      if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)
        return false;
      if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)
        return false;
      var sinv = s.invm(this.n);
      var u1 = sinv.mul(msg).umod(this.n);
      var u2 = sinv.mul(r).umod(this.n);
      var p;
      if (!this.curve._maxwellTrick) {
        p = this.g.mulAdd(u1, key.getPublic(), u2);
        if (p.isInfinity())
          return false;
        return p.getX().umod(this.n).cmp(r) === 0;
      }
      p = this.g.jmulAdd(u1, key.getPublic(), u2);
      if (p.isInfinity())
        return false;
      return p.eqXToP(r);
    };
    EC.prototype.recoverPubKey = function(msg, signature, j, enc) {
      assert((3 & j) === j, "The recovery param is more than two bits");
      signature = new Signature(signature, enc);
      var n = this.n;
      var e = new BN(msg);
      var r = signature.r;
      var s = signature.s;
      var isYOdd = j & 1;
      var isSecondKey = j >> 1;
      if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)
        throw new Error("Unable to find sencond key candinate");
      if (isSecondKey)
        r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);
      else
        r = this.curve.pointFromX(r, isYOdd);
      var rInv = signature.r.invm(n);
      var s1 = n.sub(e).mul(rInv).umod(n);
      var s2 = s.mul(rInv).umod(n);
      return this.g.mulAdd(s1, r, s2);
    };
    EC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {
      signature = new Signature(signature, enc);
      if (signature.recoveryParam !== null)
        return signature.recoveryParam;
      for (var i = 0; i < 4; i++) {
        var Qprime;
        try {
          Qprime = this.recoverPubKey(e, signature, i);
        } catch (e2) {
          continue;
        }
        if (Qprime.eq(Q))
          return i;
      }
      throw new Error("Unable to find valid recovery factor");
    };
  }
});

// node_modules/elliptic/lib/elliptic/eddsa/key.js
var require_key2 = __commonJS({
  "node_modules/elliptic/lib/elliptic/eddsa/key.js"(exports, module) {
    "use strict";
    var utils = require_utils4();
    var assert = utils.assert;
    var parseBytes = utils.parseBytes;
    var cachedProperty = utils.cachedProperty;
    function KeyPair(eddsa, params) {
      this.eddsa = eddsa;
      this._secret = parseBytes(params.secret);
      if (eddsa.isPoint(params.pub))
        this._pub = params.pub;
      else
        this._pubBytes = parseBytes(params.pub);
    }
    KeyPair.fromPublic = function fromPublic(eddsa, pub) {
      if (pub instanceof KeyPair)
        return pub;
      return new KeyPair(eddsa, { pub });
    };
    KeyPair.fromSecret = function fromSecret(eddsa, secret) {
      if (secret instanceof KeyPair)
        return secret;
      return new KeyPair(eddsa, { secret });
    };
    KeyPair.prototype.secret = function secret() {
      return this._secret;
    };
    cachedProperty(KeyPair, "pubBytes", function pubBytes() {
      return this.eddsa.encodePoint(this.pub());
    });
    cachedProperty(KeyPair, "pub", function pub() {
      if (this._pubBytes)
        return this.eddsa.decodePoint(this._pubBytes);
      return this.eddsa.g.mul(this.priv());
    });
    cachedProperty(KeyPair, "privBytes", function privBytes() {
      var eddsa = this.eddsa;
      var hash = this.hash();
      var lastIx = eddsa.encodingLength - 1;
      var a = hash.slice(0, eddsa.encodingLength);
      a[0] &= 248;
      a[lastIx] &= 127;
      a[lastIx] |= 64;
      return a;
    });
    cachedProperty(KeyPair, "priv", function priv() {
      return this.eddsa.decodeInt(this.privBytes());
    });
    cachedProperty(KeyPair, "hash", function hash() {
      return this.eddsa.hash().update(this.secret()).digest();
    });
    cachedProperty(KeyPair, "messagePrefix", function messagePrefix() {
      return this.hash().slice(this.eddsa.encodingLength);
    });
    KeyPair.prototype.sign = function sign(message) {
      assert(this._secret, "KeyPair can only verify");
      return this.eddsa.sign(message, this);
    };
    KeyPair.prototype.verify = function verify(message, sig) {
      return this.eddsa.verify(message, sig, this);
    };
    KeyPair.prototype.getSecret = function getSecret(enc) {
      assert(this._secret, "KeyPair is public only");
      return utils.encode(this.secret(), enc);
    };
    KeyPair.prototype.getPublic = function getPublic(enc) {
      return utils.encode(this.pubBytes(), enc);
    };
    module.exports = KeyPair;
  }
});

// node_modules/elliptic/lib/elliptic/eddsa/signature.js
var require_signature2 = __commonJS({
  "node_modules/elliptic/lib/elliptic/eddsa/signature.js"(exports, module) {
    "use strict";
    var BN = require_bn2();
    var utils = require_utils4();
    var assert = utils.assert;
    var cachedProperty = utils.cachedProperty;
    var parseBytes = utils.parseBytes;
    function Signature(eddsa, sig) {
      this.eddsa = eddsa;
      if (typeof sig !== "object")
        sig = parseBytes(sig);
      if (Array.isArray(sig)) {
        sig = {
          R: sig.slice(0, eddsa.encodingLength),
          S: sig.slice(eddsa.encodingLength)
        };
      }
      assert(sig.R && sig.S, "Signature without R or S");
      if (eddsa.isPoint(sig.R))
        this._R = sig.R;
      if (sig.S instanceof BN)
        this._S = sig.S;
      this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;
      this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;
    }
    cachedProperty(Signature, "S", function S() {
      return this.eddsa.decodeInt(this.Sencoded());
    });
    cachedProperty(Signature, "R", function R() {
      return this.eddsa.decodePoint(this.Rencoded());
    });
    cachedProperty(Signature, "Rencoded", function Rencoded() {
      return this.eddsa.encodePoint(this.R());
    });
    cachedProperty(Signature, "Sencoded", function Sencoded() {
      return this.eddsa.encodeInt(this.S());
    });
    Signature.prototype.toBytes = function toBytes() {
      return this.Rencoded().concat(this.Sencoded());
    };
    Signature.prototype.toHex = function toHex() {
      return utils.encode(this.toBytes(), "hex").toUpperCase();
    };
    module.exports = Signature;
  }
});

// node_modules/elliptic/lib/elliptic/eddsa/index.js
var require_eddsa = __commonJS({
  "node_modules/elliptic/lib/elliptic/eddsa/index.js"(exports, module) {
    "use strict";
    var hash = require_hash();
    var curves = require_curves();
    var utils = require_utils4();
    var assert = utils.assert;
    var parseBytes = utils.parseBytes;
    var KeyPair = require_key2();
    var Signature = require_signature2();
    function EDDSA(curve) {
      assert(curve === "ed25519", "only tested with ed25519 so far");
      if (!(this instanceof EDDSA))
        return new EDDSA(curve);
      curve = curves[curve].curve;
      this.curve = curve;
      this.g = curve.g;
      this.g.precompute(curve.n.bitLength() + 1);
      this.pointClass = curve.point().constructor;
      this.encodingLength = Math.ceil(curve.n.bitLength() / 8);
      this.hash = hash.sha512;
    }
    module.exports = EDDSA;
    EDDSA.prototype.sign = function sign(message, secret) {
      message = parseBytes(message);
      var key = this.keyFromSecret(secret);
      var r = this.hashInt(key.messagePrefix(), message);
      var R = this.g.mul(r);
      var Rencoded = this.encodePoint(R);
      var s_ = this.hashInt(Rencoded, key.pubBytes(), message).mul(key.priv());
      var S = r.add(s_).umod(this.curve.n);
      return this.makeSignature({ R, S, Rencoded });
    };
    EDDSA.prototype.verify = function verify(message, sig, pub) {
      message = parseBytes(message);
      sig = this.makeSignature(sig);
      var key = this.keyFromPublic(pub);
      var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);
      var SG = this.g.mul(sig.S());
      var RplusAh = sig.R().add(key.pub().mul(h));
      return RplusAh.eq(SG);
    };
    EDDSA.prototype.hashInt = function hashInt() {
      var hash2 = this.hash();
      for (var i = 0; i < arguments.length; i++)
        hash2.update(arguments[i]);
      return utils.intFromLE(hash2.digest()).umod(this.curve.n);
    };
    EDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {
      return KeyPair.fromPublic(this, pub);
    };
    EDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {
      return KeyPair.fromSecret(this, secret);
    };
    EDDSA.prototype.makeSignature = function makeSignature(sig) {
      if (sig instanceof Signature)
        return sig;
      return new Signature(this, sig);
    };
    EDDSA.prototype.encodePoint = function encodePoint(point) {
      var enc = point.getY().toArray("le", this.encodingLength);
      enc[this.encodingLength - 1] |= point.getX().isOdd() ? 128 : 0;
      return enc;
    };
    EDDSA.prototype.decodePoint = function decodePoint(bytes) {
      bytes = utils.parseBytes(bytes);
      var lastIx = bytes.length - 1;
      var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~128);
      var xIsOdd = (bytes[lastIx] & 128) !== 0;
      var y = utils.intFromLE(normed);
      return this.curve.pointFromY(y, xIsOdd);
    };
    EDDSA.prototype.encodeInt = function encodeInt(num) {
      return num.toArray("le", this.encodingLength);
    };
    EDDSA.prototype.decodeInt = function decodeInt(bytes) {
      return utils.intFromLE(bytes);
    };
    EDDSA.prototype.isPoint = function isPoint(val) {
      return val instanceof this.pointClass;
    };
  }
});

// node_modules/elliptic/lib/elliptic.js
var require_elliptic = __commonJS({
  "node_modules/elliptic/lib/elliptic.js"(exports) {
    "use strict";
    var elliptic = exports;
    elliptic.version = require_package().version;
    elliptic.utils = require_utils4();
    elliptic.rand = require_brorand();
    elliptic.curve = require_curve();
    elliptic.curves = require_curves();
    elliptic.ec = require_ec();
    elliptic.eddsa = require_eddsa();
  }
});

// node_modules/@cosmjs/crypto/build/secp256k1signature.js
var require_secp256k1signature = __commonJS({
  "node_modules/@cosmjs/crypto/build/secp256k1signature.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ExtendedSecp256k1Signature = exports.Secp256k1Signature = void 0;
    function trimLeadingNullBytes(inData) {
      let numberOfLeadingNullBytes = 0;
      for (const byte of inData) {
        if (byte === 0) {
          numberOfLeadingNullBytes++;
        } else {
          break;
        }
      }
      return inData.slice(numberOfLeadingNullBytes);
    }
    var derTagInteger = 2;
    var Secp256k1Signature = class _Secp256k1Signature {
      constructor(r, s) {
        if (r.length > 32 || r.length === 0 || r[0] === 0) {
          throw new Error("Unsigned integer r must be encoded as unpadded big endian.");
        }
        if (s.length > 32 || s.length === 0 || s[0] === 0) {
          throw new Error("Unsigned integer s must be encoded as unpadded big endian.");
        }
        this.data = {
          r,
          s
        };
      }
      /**
       * Takes the pair of integers (r, s) as 2x32 byte of binary data.
       *
       * Note: This is the format Cosmos SDK uses natively.
       *
       * @param data a 64 byte value containing integers r and s.
       */
      static fromFixedLength(data) {
        if (data.length !== 64) {
          throw new Error(`Got invalid data length: ${data.length}. Expected 2x 32 bytes for the pair (r, s)`);
        }
        return new _Secp256k1Signature(trimLeadingNullBytes(data.slice(0, 32)), trimLeadingNullBytes(data.slice(32, 64)));
      }
      static fromDer(data) {
        let pos = 0;
        if (data[pos++] !== 48) {
          throw new Error("Prefix 0x30 expected");
        }
        const bodyLength = data[pos++];
        if (data.length - pos !== bodyLength) {
          throw new Error("Data length mismatch detected");
        }
        const rTag = data[pos++];
        if (rTag !== derTagInteger) {
          throw new Error("INTEGER tag expected");
        }
        const rLength = data[pos++];
        if (rLength >= 128) {
          throw new Error("Decoding length values above 127 not supported");
        }
        const rData = data.slice(pos, pos + rLength);
        pos += rLength;
        const sTag = data[pos++];
        if (sTag !== derTagInteger) {
          throw new Error("INTEGER tag expected");
        }
        const sLength = data[pos++];
        if (sLength >= 128) {
          throw new Error("Decoding length values above 127 not supported");
        }
        const sData = data.slice(pos, pos + sLength);
        pos += sLength;
        return new _Secp256k1Signature(
          // r/s data can contain leading 0 bytes to express integers being non-negative in DER
          trimLeadingNullBytes(rData),
          trimLeadingNullBytes(sData)
        );
      }
      r(length) {
        if (length === void 0) {
          return this.data.r;
        } else {
          const paddingLength = length - this.data.r.length;
          if (paddingLength < 0) {
            throw new Error("Length too small to hold parameter r");
          }
          const padding = new Uint8Array(paddingLength);
          return new Uint8Array([...padding, ...this.data.r]);
        }
      }
      s(length) {
        if (length === void 0) {
          return this.data.s;
        } else {
          const paddingLength = length - this.data.s.length;
          if (paddingLength < 0) {
            throw new Error("Length too small to hold parameter s");
          }
          const padding = new Uint8Array(paddingLength);
          return new Uint8Array([...padding, ...this.data.s]);
        }
      }
      toFixedLength() {
        return new Uint8Array([...this.r(32), ...this.s(32)]);
      }
      toDer() {
        const rEncoded = this.data.r[0] >= 128 ? new Uint8Array([0, ...this.data.r]) : this.data.r;
        const sEncoded = this.data.s[0] >= 128 ? new Uint8Array([0, ...this.data.s]) : this.data.s;
        const rLength = rEncoded.length;
        const sLength = sEncoded.length;
        const data = new Uint8Array([derTagInteger, rLength, ...rEncoded, derTagInteger, sLength, ...sEncoded]);
        return new Uint8Array([48, data.length, ...data]);
      }
    };
    exports.Secp256k1Signature = Secp256k1Signature;
    var ExtendedSecp256k1Signature = class _ExtendedSecp256k1Signature extends Secp256k1Signature {
      constructor(r, s, recovery) {
        super(r, s);
        if (!Number.isInteger(recovery)) {
          throw new Error("The recovery parameter must be an integer.");
        }
        if (recovery < 0 || recovery > 4) {
          throw new Error("The recovery parameter must be one of 0, 1, 2, 3.");
        }
        this.recovery = recovery;
      }
      /**
       * Decode extended signature from the simple fixed length encoding
       * described in toFixedLength().
       */
      static fromFixedLength(data) {
        if (data.length !== 65) {
          throw new Error(`Got invalid data length ${data.length}. Expected 32 + 32 + 1`);
        }
        return new _ExtendedSecp256k1Signature(trimLeadingNullBytes(data.slice(0, 32)), trimLeadingNullBytes(data.slice(32, 64)), data[64]);
      }
      /**
       * A simple custom encoding that encodes the extended signature as
       * r (32 bytes) | s (32 bytes) | recovery param (1 byte)
       * where | denotes concatenation of bonary data.
       */
      toFixedLength() {
        return new Uint8Array([...this.r(32), ...this.s(32), this.recovery]);
      }
    };
    exports.ExtendedSecp256k1Signature = ExtendedSecp256k1Signature;
  }
});

// node_modules/@cosmjs/crypto/build/secp256k1.js
var require_secp256k12 = __commonJS({
  "node_modules/@cosmjs/crypto/build/secp256k1.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Secp256k1 = void 0;
    var encoding_1 = require_build2();
    var bn_js_1 = __importDefault(require_bn());
    var elliptic_1 = __importDefault(require_elliptic());
    var secp256k1signature_1 = require_secp256k1signature();
    var secp256k1 = new elliptic_1.default.ec("secp256k1");
    var secp256k1N = new bn_js_1.default("FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141", "hex");
    var Secp256k1 = class {
      /**
       * Takes a 32 byte private key and returns a privkey/pubkey pair.
       *
       * The resulting pubkey is uncompressed. For the use in Cosmos it should
       * be compressed first using `Secp256k1.compressPubkey`.
       */
      static async makeKeypair(privkey) {
        if (privkey.length !== 32) {
          throw new Error("input data is not a valid secp256k1 private key");
        }
        const keypair = secp256k1.keyFromPrivate(privkey);
        if (keypair.validate().result !== true) {
          throw new Error("input data is not a valid secp256k1 private key");
        }
        const privkeyAsBigInteger = new bn_js_1.default(privkey);
        if (privkeyAsBigInteger.gte(secp256k1N)) {
          throw new Error("input data is not a valid secp256k1 private key");
        }
        const out = {
          privkey: (0, encoding_1.fromHex)(keypair.getPrivate("hex")),
          // encodes uncompressed as
          // - 1-byte prefix "04"
          // - 32-byte x coordinate
          // - 32-byte y coordinate
          pubkey: Uint8Array.from(keypair.getPublic("array"))
        };
        return out;
      }
      /**
       * Creates a signature that is
       * - deterministic (RFC 6979)
       * - lowS signature
       * - DER encoded
       */
      static async createSignature(messageHash, privkey) {
        if (messageHash.length === 0) {
          throw new Error("Message hash must not be empty");
        }
        if (messageHash.length > 32) {
          throw new Error("Message hash length must not exceed 32 bytes");
        }
        const keypair = secp256k1.keyFromPrivate(privkey);
        const { r, s, recoveryParam } = keypair.sign(messageHash, { canonical: true });
        if (typeof recoveryParam !== "number")
          throw new Error("Recovery param missing");
        return new secp256k1signature_1.ExtendedSecp256k1Signature(Uint8Array.from(r.toArray()), Uint8Array.from(s.toArray()), recoveryParam);
      }
      static async verifySignature(signature, messageHash, pubkey) {
        if (messageHash.length === 0) {
          throw new Error("Message hash must not be empty");
        }
        if (messageHash.length > 32) {
          throw new Error("Message hash length must not exceed 32 bytes");
        }
        const keypair = secp256k1.keyFromPublic(pubkey);
        try {
          return keypair.verify(messageHash, signature.toDer());
        } catch (error) {
          return false;
        }
      }
      static recoverPubkey(signature, messageHash) {
        const signatureForElliptic = { r: (0, encoding_1.toHex)(signature.r()), s: (0, encoding_1.toHex)(signature.s()) };
        const point = secp256k1.recoverPubKey(messageHash, signatureForElliptic, signature.recovery);
        const keypair = secp256k1.keyFromPublic(point);
        return (0, encoding_1.fromHex)(keypair.getPublic(false, "hex"));
      }
      /**
       * Takes a compressed or uncompressed pubkey and return a compressed one.
       *
       * This function is idempotent.
       */
      static compressPubkey(pubkey) {
        switch (pubkey.length) {
          case 33:
            return pubkey;
          case 65:
            return Uint8Array.from(secp256k1.keyFromPublic(pubkey).getPublic(true, "array"));
          default:
            throw new Error("Invalid pubkey length");
        }
      }
      /**
       * Takes a compressed or uncompressed pubkey and returns an uncompressed one.
       *
       * This function is idempotent.
       */
      static uncompressPubkey(pubkey) {
        switch (pubkey.length) {
          case 33:
            return Uint8Array.from(secp256k1.keyFromPublic(pubkey).getPublic(false, "array"));
          case 65:
            return pubkey;
          default:
            throw new Error("Invalid pubkey length");
        }
      }
      static trimRecoveryByte(signature) {
        switch (signature.length) {
          case 64:
            return signature;
          case 65:
            return signature.slice(0, 64);
          default:
            throw new Error("Invalid signature length");
        }
      }
    };
    exports.Secp256k1 = Secp256k1;
  }
});

// node_modules/@cosmjs/crypto/build/slip10.js
var require_slip10 = __commonJS({
  "node_modules/@cosmjs/crypto/build/slip10.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.stringToPath = exports.pathToString = exports.Slip10 = exports.Slip10RawIndex = exports.slip10CurveFromString = exports.Slip10Curve = void 0;
    var encoding_1 = require_build2();
    var math_1 = require_build();
    var bn_js_1 = __importDefault(require_bn());
    var elliptic_1 = __importDefault(require_elliptic());
    var hmac_1 = require_hmac2();
    var sha_1 = require_sha();
    var Slip10Curve;
    (function(Slip10Curve2) {
      Slip10Curve2["Secp256k1"] = "Bitcoin seed";
      Slip10Curve2["Ed25519"] = "ed25519 seed";
    })(Slip10Curve = exports.Slip10Curve || (exports.Slip10Curve = {}));
    function slip10CurveFromString(curveString) {
      switch (curveString) {
        case Slip10Curve.Ed25519:
          return Slip10Curve.Ed25519;
        case Slip10Curve.Secp256k1:
          return Slip10Curve.Secp256k1;
        default:
          throw new Error(`Unknown curve string: '${curveString}'`);
      }
    }
    exports.slip10CurveFromString = slip10CurveFromString;
    var Slip10RawIndex = class _Slip10RawIndex extends math_1.Uint32 {
      static hardened(hardenedIndex) {
        return new _Slip10RawIndex(hardenedIndex + 2 ** 31);
      }
      static normal(normalIndex) {
        return new _Slip10RawIndex(normalIndex);
      }
      isHardened() {
        return this.data >= 2 ** 31;
      }
    };
    exports.Slip10RawIndex = Slip10RawIndex;
    var secp256k1 = new elliptic_1.default.ec("secp256k1");
    var Slip10 = class _Slip10 {
      static derivePath(curve, seed, path) {
        let result = this.master(curve, seed);
        for (const rawIndex of path) {
          result = this.child(curve, result.privkey, result.chainCode, rawIndex);
        }
        return result;
      }
      static master(curve, seed) {
        const i = new hmac_1.Hmac(sha_1.Sha512, (0, encoding_1.toAscii)(curve)).update(seed).digest();
        const il = i.slice(0, 32);
        const ir = i.slice(32, 64);
        if (curve !== Slip10Curve.Ed25519 && (this.isZero(il) || this.isGteN(curve, il))) {
          return this.master(curve, i);
        }
        return {
          chainCode: ir,
          privkey: il
        };
      }
      static child(curve, parentPrivkey, parentChainCode, rawIndex) {
        let i;
        if (rawIndex.isHardened()) {
          const payload = new Uint8Array([0, ...parentPrivkey, ...rawIndex.toBytesBigEndian()]);
          i = new hmac_1.Hmac(sha_1.Sha512, parentChainCode).update(payload).digest();
        } else {
          if (curve === Slip10Curve.Ed25519) {
            throw new Error("Normal keys are not allowed with ed25519");
          } else {
            const data = new Uint8Array([
              ..._Slip10.serializedPoint(curve, new bn_js_1.default(parentPrivkey)),
              ...rawIndex.toBytesBigEndian()
            ]);
            i = new hmac_1.Hmac(sha_1.Sha512, parentChainCode).update(data).digest();
          }
        }
        return this.childImpl(curve, parentPrivkey, parentChainCode, rawIndex, i);
      }
      /**
       * Implementation of ser_P(point(k_par)) from BIP-0032
       *
       * @see https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki
       */
      static serializedPoint(curve, p) {
        switch (curve) {
          case Slip10Curve.Secp256k1:
            return (0, encoding_1.fromHex)(secp256k1.g.mul(p).encodeCompressed("hex"));
          default:
            throw new Error("curve not supported");
        }
      }
      static childImpl(curve, parentPrivkey, parentChainCode, rawIndex, i) {
        const il = i.slice(0, 32);
        const ir = i.slice(32, 64);
        const returnChainCode = ir;
        if (curve === Slip10Curve.Ed25519) {
          return {
            chainCode: returnChainCode,
            privkey: il
          };
        }
        const n = this.n(curve);
        const returnChildKeyAsNumber = new bn_js_1.default(il).add(new bn_js_1.default(parentPrivkey)).mod(n);
        const returnChildKey = Uint8Array.from(returnChildKeyAsNumber.toArray("be", 32));
        if (this.isGteN(curve, il) || this.isZero(returnChildKey)) {
          const newI = new hmac_1.Hmac(sha_1.Sha512, parentChainCode).update(new Uint8Array([1, ...ir, ...rawIndex.toBytesBigEndian()])).digest();
          return this.childImpl(curve, parentPrivkey, parentChainCode, rawIndex, newI);
        }
        return {
          chainCode: returnChainCode,
          privkey: returnChildKey
        };
      }
      static isZero(privkey) {
        return privkey.every((byte) => byte === 0);
      }
      static isGteN(curve, privkey) {
        const keyAsNumber = new bn_js_1.default(privkey);
        return keyAsNumber.gte(this.n(curve));
      }
      static n(curve) {
        switch (curve) {
          case Slip10Curve.Secp256k1:
            return new bn_js_1.default("FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141", 16);
          default:
            throw new Error("curve not supported");
        }
      }
    };
    exports.Slip10 = Slip10;
    function pathToString(path) {
      return path.reduce((current, component) => {
        const componentString = component.isHardened() ? `${component.toNumber() - 2 ** 31}'` : component.toString();
        return current + "/" + componentString;
      }, "m");
    }
    exports.pathToString = pathToString;
    function stringToPath(input) {
      if (!input.startsWith("m"))
        throw new Error("Path string must start with 'm'");
      let rest = input.slice(1);
      const out = new Array();
      while (rest) {
        const match = rest.match(/^\/([0-9]+)('?)/);
        if (!match)
          throw new Error("Syntax error while reading path component");
        const [fullMatch, numberString, apostrophe] = match;
        const value = math_1.Uint53.fromString(numberString).toNumber();
        if (value >= 2 ** 31)
          throw new Error("Component value too high. Must not exceed 2**31-1.");
        if (apostrophe)
          out.push(Slip10RawIndex.hardened(value));
        else
          out.push(Slip10RawIndex.normal(value));
        rest = rest.slice(fullMatch.length);
      }
      return out;
    }
    exports.stringToPath = stringToPath;
  }
});

// node_modules/@cosmjs/crypto/build/index.js
var require_build4 = __commonJS({
  "node_modules/@cosmjs/crypto/build/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.stringToPath = exports.Slip10RawIndex = exports.slip10CurveFromString = exports.Slip10Curve = exports.Slip10 = exports.pathToString = exports.sha512 = exports.Sha512 = exports.sha256 = exports.Sha256 = exports.Secp256k1Signature = exports.ExtendedSecp256k1Signature = exports.Secp256k1 = exports.ripemd160 = exports.Ripemd160 = exports.Random = exports.Xchacha20poly1305Ietf = exports.xchacha20NonceLength = exports.isArgon2idOptions = exports.Ed25519Keypair = exports.Ed25519 = exports.Argon2id = exports.keccak256 = exports.Keccak256 = exports.Hmac = exports.EnglishMnemonic = exports.Bip39 = void 0;
    var bip39_1 = require_bip39();
    Object.defineProperty(exports, "Bip39", { enumerable: true, get: function() {
      return bip39_1.Bip39;
    } });
    Object.defineProperty(exports, "EnglishMnemonic", { enumerable: true, get: function() {
      return bip39_1.EnglishMnemonic;
    } });
    var hmac_1 = require_hmac2();
    Object.defineProperty(exports, "Hmac", { enumerable: true, get: function() {
      return hmac_1.Hmac;
    } });
    var keccak_1 = require_keccak();
    Object.defineProperty(exports, "Keccak256", { enumerable: true, get: function() {
      return keccak_1.Keccak256;
    } });
    Object.defineProperty(exports, "keccak256", { enumerable: true, get: function() {
      return keccak_1.keccak256;
    } });
    var libsodium_1 = require_libsodium2();
    Object.defineProperty(exports, "Argon2id", { enumerable: true, get: function() {
      return libsodium_1.Argon2id;
    } });
    Object.defineProperty(exports, "Ed25519", { enumerable: true, get: function() {
      return libsodium_1.Ed25519;
    } });
    Object.defineProperty(exports, "Ed25519Keypair", { enumerable: true, get: function() {
      return libsodium_1.Ed25519Keypair;
    } });
    Object.defineProperty(exports, "isArgon2idOptions", { enumerable: true, get: function() {
      return libsodium_1.isArgon2idOptions;
    } });
    Object.defineProperty(exports, "xchacha20NonceLength", { enumerable: true, get: function() {
      return libsodium_1.xchacha20NonceLength;
    } });
    Object.defineProperty(exports, "Xchacha20poly1305Ietf", { enumerable: true, get: function() {
      return libsodium_1.Xchacha20poly1305Ietf;
    } });
    var random_1 = require_random();
    Object.defineProperty(exports, "Random", { enumerable: true, get: function() {
      return random_1.Random;
    } });
    var ripemd_1 = require_ripemd();
    Object.defineProperty(exports, "Ripemd160", { enumerable: true, get: function() {
      return ripemd_1.Ripemd160;
    } });
    Object.defineProperty(exports, "ripemd160", { enumerable: true, get: function() {
      return ripemd_1.ripemd160;
    } });
    var secp256k1_1 = require_secp256k12();
    Object.defineProperty(exports, "Secp256k1", { enumerable: true, get: function() {
      return secp256k1_1.Secp256k1;
    } });
    var secp256k1signature_1 = require_secp256k1signature();
    Object.defineProperty(exports, "ExtendedSecp256k1Signature", { enumerable: true, get: function() {
      return secp256k1signature_1.ExtendedSecp256k1Signature;
    } });
    Object.defineProperty(exports, "Secp256k1Signature", { enumerable: true, get: function() {
      return secp256k1signature_1.Secp256k1Signature;
    } });
    var sha_1 = require_sha();
    Object.defineProperty(exports, "Sha256", { enumerable: true, get: function() {
      return sha_1.Sha256;
    } });
    Object.defineProperty(exports, "sha256", { enumerable: true, get: function() {
      return sha_1.sha256;
    } });
    Object.defineProperty(exports, "Sha512", { enumerable: true, get: function() {
      return sha_1.Sha512;
    } });
    Object.defineProperty(exports, "sha512", { enumerable: true, get: function() {
      return sha_1.sha512;
    } });
    var slip10_1 = require_slip10();
    Object.defineProperty(exports, "pathToString", { enumerable: true, get: function() {
      return slip10_1.pathToString;
    } });
    Object.defineProperty(exports, "Slip10", { enumerable: true, get: function() {
      return slip10_1.Slip10;
    } });
    Object.defineProperty(exports, "Slip10Curve", { enumerable: true, get: function() {
      return slip10_1.Slip10Curve;
    } });
    Object.defineProperty(exports, "slip10CurveFromString", { enumerable: true, get: function() {
      return slip10_1.slip10CurveFromString;
    } });
    Object.defineProperty(exports, "Slip10RawIndex", { enumerable: true, get: function() {
      return slip10_1.Slip10RawIndex;
    } });
    Object.defineProperty(exports, "stringToPath", { enumerable: true, get: function() {
      return slip10_1.stringToPath;
    } });
  }
});

// node_modules/@cosmjs/amino/build/pubkeys.js
var require_pubkeys = __commonJS({
  "node_modules/@cosmjs/amino/build/pubkeys.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isMultisigThresholdPubkey = exports.isSinglePubkey = exports.pubkeyType = exports.isSecp256k1Pubkey = exports.isEd25519Pubkey = void 0;
    function isEd25519Pubkey(pubkey) {
      return pubkey.type === "tendermint/PubKeyEd25519";
    }
    exports.isEd25519Pubkey = isEd25519Pubkey;
    function isSecp256k1Pubkey(pubkey) {
      return pubkey.type === "tendermint/PubKeySecp256k1";
    }
    exports.isSecp256k1Pubkey = isSecp256k1Pubkey;
    exports.pubkeyType = {
      /** @see https://github.com/tendermint/tendermint/blob/v0.33.0/crypto/ed25519/ed25519.go#L22 */
      secp256k1: "tendermint/PubKeySecp256k1",
      /** @see https://github.com/tendermint/tendermint/blob/v0.33.0/crypto/secp256k1/secp256k1.go#L23 */
      ed25519: "tendermint/PubKeyEd25519",
      /** @see https://github.com/tendermint/tendermint/blob/v0.33.0/crypto/sr25519/codec.go#L12 */
      sr25519: "tendermint/PubKeySr25519",
      multisigThreshold: "tendermint/PubKeyMultisigThreshold"
    };
    function isSinglePubkey(pubkey) {
      const singPubkeyTypes = [exports.pubkeyType.ed25519, exports.pubkeyType.secp256k1, exports.pubkeyType.sr25519];
      return singPubkeyTypes.includes(pubkey.type);
    }
    exports.isSinglePubkey = isSinglePubkey;
    function isMultisigThresholdPubkey(pubkey) {
      return pubkey.type === "tendermint/PubKeyMultisigThreshold";
    }
    exports.isMultisigThresholdPubkey = isMultisigThresholdPubkey;
  }
});

// node_modules/@cosmjs/amino/build/encoding.js
var require_encoding = __commonJS({
  "node_modules/@cosmjs/amino/build/encoding.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.encodeBech32Pubkey = exports.encodeAminoPubkey = exports.decodeBech32Pubkey = exports.decodeAminoPubkey = exports.encodeEd25519Pubkey = exports.encodeSecp256k1Pubkey = void 0;
    var encoding_1 = require_build2();
    var math_1 = require_build();
    var utils_1 = require_build3();
    var pubkeys_1 = require_pubkeys();
    function encodeSecp256k1Pubkey(pubkey) {
      if (pubkey.length !== 33 || pubkey[0] !== 2 && pubkey[0] !== 3) {
        throw new Error("Public key must be compressed secp256k1, i.e. 33 bytes starting with 0x02 or 0x03");
      }
      return {
        type: pubkeys_1.pubkeyType.secp256k1,
        value: (0, encoding_1.toBase64)(pubkey)
      };
    }
    exports.encodeSecp256k1Pubkey = encodeSecp256k1Pubkey;
    function encodeEd25519Pubkey(pubkey) {
      if (pubkey.length !== 32) {
        throw new Error("Ed25519 public key must be 32 bytes long");
      }
      return {
        type: pubkeys_1.pubkeyType.ed25519,
        value: (0, encoding_1.toBase64)(pubkey)
      };
    }
    exports.encodeEd25519Pubkey = encodeEd25519Pubkey;
    var pubkeyAminoPrefixSecp256k1 = (0, encoding_1.fromHex)(
      "eb5ae98721"
      /* fixed length */
    );
    var pubkeyAminoPrefixEd25519 = (0, encoding_1.fromHex)(
      "1624de6420"
      /* fixed length */
    );
    var pubkeyAminoPrefixSr25519 = (0, encoding_1.fromHex)(
      "0dfb100520"
      /* fixed length */
    );
    var pubkeyAminoPrefixMultisigThreshold = (0, encoding_1.fromHex)(
      "22c1f7e2"
      /* variable length not included */
    );
    function decodeAminoPubkey(data) {
      if ((0, utils_1.arrayContentStartsWith)(data, pubkeyAminoPrefixSecp256k1)) {
        const rest = data.slice(pubkeyAminoPrefixSecp256k1.length);
        if (rest.length !== 33) {
          throw new Error("Invalid rest data length. Expected 33 bytes (compressed secp256k1 pubkey).");
        }
        return {
          type: pubkeys_1.pubkeyType.secp256k1,
          value: (0, encoding_1.toBase64)(rest)
        };
      } else if ((0, utils_1.arrayContentStartsWith)(data, pubkeyAminoPrefixEd25519)) {
        const rest = data.slice(pubkeyAminoPrefixEd25519.length);
        if (rest.length !== 32) {
          throw new Error("Invalid rest data length. Expected 32 bytes (Ed25519 pubkey).");
        }
        return {
          type: pubkeys_1.pubkeyType.ed25519,
          value: (0, encoding_1.toBase64)(rest)
        };
      } else if ((0, utils_1.arrayContentStartsWith)(data, pubkeyAminoPrefixSr25519)) {
        const rest = data.slice(pubkeyAminoPrefixSr25519.length);
        if (rest.length !== 32) {
          throw new Error("Invalid rest data length. Expected 32 bytes (Sr25519 pubkey).");
        }
        return {
          type: pubkeys_1.pubkeyType.sr25519,
          value: (0, encoding_1.toBase64)(rest)
        };
      } else if ((0, utils_1.arrayContentStartsWith)(data, pubkeyAminoPrefixMultisigThreshold)) {
        return decodeMultisigPubkey(data);
      } else {
        throw new Error("Unsupported public key type. Amino data starts with: " + (0, encoding_1.toHex)(data.slice(0, 5)));
      }
    }
    exports.decodeAminoPubkey = decodeAminoPubkey;
    function decodeBech32Pubkey(bechEncoded) {
      const { data } = (0, encoding_1.fromBech32)(bechEncoded);
      return decodeAminoPubkey(data);
    }
    exports.decodeBech32Pubkey = decodeBech32Pubkey;
    function decodeUvarint(reader) {
      if (reader.length < 1) {
        throw new Error("Can't decode varint. EOF");
      }
      if (reader[0] > 127) {
        throw new Error("Decoding numbers > 127 is not supported here. Please tell those lazy CosmJS maintainers to port the binary.Varint implementation from the Go standard library and write some tests.");
      }
      return [reader[0], 1];
    }
    function decodeMultisigPubkey(data) {
      const reader = Array.from(data);
      const prefixFromReader = reader.splice(0, pubkeyAminoPrefixMultisigThreshold.length);
      if (!(0, utils_1.arrayContentStartsWith)(prefixFromReader, pubkeyAminoPrefixMultisigThreshold)) {
        throw new Error("Invalid multisig prefix.");
      }
      if (reader.shift() != 8) {
        throw new Error("Invalid multisig data. Expecting 0x08 prefix before threshold.");
      }
      const [threshold, thresholdBytesLength] = decodeUvarint(reader);
      reader.splice(0, thresholdBytesLength);
      const pubkeys = [];
      while (reader.length > 0) {
        if (reader.shift() != 18) {
          throw new Error("Invalid multisig data. Expecting 0x12 prefix before participant pubkey length.");
        }
        const [pubkeyLength, pubkeyLengthBytesSize] = decodeUvarint(reader);
        reader.splice(0, pubkeyLengthBytesSize);
        if (reader.length < pubkeyLength) {
          throw new Error("Invalid multisig data length.");
        }
        const encodedPubkey = reader.splice(0, pubkeyLength);
        const pubkey = decodeAminoPubkey(Uint8Array.from(encodedPubkey));
        pubkeys.push(pubkey);
      }
      return {
        type: pubkeys_1.pubkeyType.multisigThreshold,
        value: {
          threshold: threshold.toString(),
          pubkeys
        }
      };
    }
    function encodeUvarint(value) {
      const checked = math_1.Uint53.fromString(value.toString()).toNumber();
      if (checked > 127) {
        throw new Error("Encoding numbers > 127 is not supported here. Please tell those lazy CosmJS maintainers to port the binary.PutUvarint implementation from the Go standard library and write some tests.");
      }
      return [checked];
    }
    function encodeAminoPubkey(pubkey) {
      if ((0, pubkeys_1.isMultisigThresholdPubkey)(pubkey)) {
        const out = Array.from(pubkeyAminoPrefixMultisigThreshold);
        out.push(8);
        out.push(...encodeUvarint(pubkey.value.threshold));
        for (const pubkeyData of pubkey.value.pubkeys.map((p) => encodeAminoPubkey(p))) {
          out.push(18);
          out.push(...encodeUvarint(pubkeyData.length));
          out.push(...pubkeyData);
        }
        return new Uint8Array(out);
      } else if ((0, pubkeys_1.isEd25519Pubkey)(pubkey)) {
        return new Uint8Array([...pubkeyAminoPrefixEd25519, ...(0, encoding_1.fromBase64)(pubkey.value)]);
      } else if ((0, pubkeys_1.isSecp256k1Pubkey)(pubkey)) {
        return new Uint8Array([...pubkeyAminoPrefixSecp256k1, ...(0, encoding_1.fromBase64)(pubkey.value)]);
      } else {
        throw new Error("Unsupported pubkey type");
      }
    }
    exports.encodeAminoPubkey = encodeAminoPubkey;
    function encodeBech32Pubkey(pubkey, prefix) {
      return (0, encoding_1.toBech32)(prefix, encodeAminoPubkey(pubkey));
    }
    exports.encodeBech32Pubkey = encodeBech32Pubkey;
  }
});

// node_modules/@cosmjs/amino/build/addresses.js
var require_addresses = __commonJS({
  "node_modules/@cosmjs/amino/build/addresses.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.pubkeyToAddress = exports.pubkeyToRawAddress = exports.rawSecp256k1PubkeyToRawAddress = exports.rawEd25519PubkeyToRawAddress = void 0;
    var crypto_1 = require_build4();
    var encoding_1 = require_build2();
    var encoding_2 = require_encoding();
    var pubkeys_1 = require_pubkeys();
    function rawEd25519PubkeyToRawAddress(pubkeyData) {
      if (pubkeyData.length !== 32) {
        throw new Error(`Invalid Ed25519 pubkey length: ${pubkeyData.length}`);
      }
      return (0, crypto_1.sha256)(pubkeyData).slice(0, 20);
    }
    exports.rawEd25519PubkeyToRawAddress = rawEd25519PubkeyToRawAddress;
    function rawSecp256k1PubkeyToRawAddress(pubkeyData) {
      if (pubkeyData.length !== 33) {
        throw new Error(`Invalid Secp256k1 pubkey length (compressed): ${pubkeyData.length}`);
      }
      return (0, crypto_1.ripemd160)((0, crypto_1.sha256)(pubkeyData));
    }
    exports.rawSecp256k1PubkeyToRawAddress = rawSecp256k1PubkeyToRawAddress;
    function pubkeyToRawAddress(pubkey) {
      if ((0, pubkeys_1.isSecp256k1Pubkey)(pubkey)) {
        const pubkeyData = (0, encoding_1.fromBase64)(pubkey.value);
        return rawSecp256k1PubkeyToRawAddress(pubkeyData);
      } else if ((0, pubkeys_1.isEd25519Pubkey)(pubkey)) {
        const pubkeyData = (0, encoding_1.fromBase64)(pubkey.value);
        return rawEd25519PubkeyToRawAddress(pubkeyData);
      } else if ((0, pubkeys_1.isMultisigThresholdPubkey)(pubkey)) {
        const pubkeyData = (0, encoding_2.encodeAminoPubkey)(pubkey);
        return (0, crypto_1.sha256)(pubkeyData).slice(0, 20);
      } else {
        throw new Error("Unsupported public key type");
      }
    }
    exports.pubkeyToRawAddress = pubkeyToRawAddress;
    function pubkeyToAddress(pubkey, prefix) {
      return (0, encoding_1.toBech32)(prefix, pubkeyToRawAddress(pubkey));
    }
    exports.pubkeyToAddress = pubkeyToAddress;
  }
});

// node_modules/@cosmjs/amino/build/coins.js
var require_coins2 = __commonJS({
  "node_modules/@cosmjs/amino/build/coins.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.addCoins = exports.parseCoins = exports.coins = exports.coin = void 0;
    var math_1 = require_build();
    function coin(amount, denom) {
      let outAmount;
      if (typeof amount === "number") {
        try {
          outAmount = new math_1.Uint53(amount).toString();
        } catch (_err) {
          throw new Error("Given amount is not a safe integer. Consider using a string instead to overcome the limitations of JS numbers.");
        }
      } else {
        if (!amount.match(/^[0-9]+$/)) {
          throw new Error("Invalid unsigned integer string format");
        }
        outAmount = amount.replace(/^0*/, "") || "0";
      }
      return {
        amount: outAmount,
        denom
      };
    }
    exports.coin = coin;
    function coins(amount, denom) {
      return [coin(amount, denom)];
    }
    exports.coins = coins;
    function parseCoins(input) {
      return input.replace(/\s/g, "").split(",").filter(Boolean).map((part) => {
        const match = part.match(/^([0-9]+)([a-zA-Z]+)/);
        if (!match)
          throw new Error("Got an invalid coin string");
        return {
          amount: match[1].replace(/^0+/, "") || "0",
          denom: match[2]
        };
      });
    }
    exports.parseCoins = parseCoins;
    function addCoins(lhs, rhs) {
      if (lhs.denom !== rhs.denom)
        throw new Error("Trying to add two coins with different denoms");
      return {
        amount: math_1.Decimal.fromAtomics(lhs.amount, 0).plus(math_1.Decimal.fromAtomics(rhs.amount, 0)).atomics,
        denom: lhs.denom
      };
    }
    exports.addCoins = addCoins;
  }
});

// node_modules/@cosmjs/amino/build/multisig.js
var require_multisig2 = __commonJS({
  "node_modules/@cosmjs/amino/build/multisig.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createMultisigThresholdPubkey = exports.compareArrays = void 0;
    var encoding_1 = require_build2();
    var math_1 = require_build();
    var addresses_1 = require_addresses();
    function compareArrays(a, b) {
      const aHex = (0, encoding_1.toHex)(a);
      const bHex = (0, encoding_1.toHex)(b);
      return aHex === bHex ? 0 : aHex < bHex ? -1 : 1;
    }
    exports.compareArrays = compareArrays;
    function createMultisigThresholdPubkey(pubkeys, threshold, nosort = false) {
      const uintThreshold = new math_1.Uint53(threshold);
      if (uintThreshold.toNumber() > pubkeys.length) {
        throw new Error(`Threshold k = ${uintThreshold.toNumber()} exceeds number of keys n = ${pubkeys.length}`);
      }
      const outPubkeys = nosort ? pubkeys : Array.from(pubkeys).sort((lhs, rhs) => {
        const addressLhs = (0, addresses_1.pubkeyToRawAddress)(lhs);
        const addressRhs = (0, addresses_1.pubkeyToRawAddress)(rhs);
        return compareArrays(addressLhs, addressRhs);
      });
      return {
        type: "tendermint/PubKeyMultisigThreshold",
        value: {
          threshold: uintThreshold.toString(),
          pubkeys: outPubkeys
        }
      };
    }
    exports.createMultisigThresholdPubkey = createMultisigThresholdPubkey;
  }
});

// node_modules/@cosmjs/amino/build/paths.js
var require_paths = __commonJS({
  "node_modules/@cosmjs/amino/build/paths.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.makeCosmoshubPath = void 0;
    var crypto_1 = require_build4();
    function makeCosmoshubPath(a) {
      return [
        crypto_1.Slip10RawIndex.hardened(44),
        crypto_1.Slip10RawIndex.hardened(118),
        crypto_1.Slip10RawIndex.hardened(0),
        crypto_1.Slip10RawIndex.normal(0),
        crypto_1.Slip10RawIndex.normal(a)
      ];
    }
    exports.makeCosmoshubPath = makeCosmoshubPath;
  }
});

// node_modules/@cosmjs/amino/build/signature.js
var require_signature3 = __commonJS({
  "node_modules/@cosmjs/amino/build/signature.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.decodeSignature = exports.encodeSecp256k1Signature = void 0;
    var encoding_1 = require_build2();
    var encoding_2 = require_encoding();
    var pubkeys_1 = require_pubkeys();
    function encodeSecp256k1Signature(pubkey, signature) {
      if (signature.length !== 64) {
        throw new Error("Signature must be 64 bytes long. Cosmos SDK uses a 2x32 byte fixed length encoding for the secp256k1 signature integers r and s.");
      }
      return {
        pub_key: (0, encoding_2.encodeSecp256k1Pubkey)(pubkey),
        signature: (0, encoding_1.toBase64)(signature)
      };
    }
    exports.encodeSecp256k1Signature = encodeSecp256k1Signature;
    function decodeSignature(signature) {
      switch (signature.pub_key.type) {
        case pubkeys_1.pubkeyType.secp256k1:
          return {
            pubkey: (0, encoding_1.fromBase64)(signature.pub_key.value),
            signature: (0, encoding_1.fromBase64)(signature.signature)
          };
        default:
          throw new Error("Unsupported pubkey type");
      }
    }
    exports.decodeSignature = decodeSignature;
  }
});

// node_modules/@cosmjs/amino/build/signdoc.js
var require_signdoc = __commonJS({
  "node_modules/@cosmjs/amino/build/signdoc.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.serializeSignDoc = exports.makeSignDoc = exports.sortedJsonStringify = void 0;
    var encoding_1 = require_build2();
    var math_1 = require_build();
    function sortedObject(obj) {
      if (typeof obj !== "object" || obj === null) {
        return obj;
      }
      if (Array.isArray(obj)) {
        return obj.map(sortedObject);
      }
      const sortedKeys = Object.keys(obj).sort();
      const result = {};
      sortedKeys.forEach((key) => {
        result[key] = sortedObject(obj[key]);
      });
      return result;
    }
    function sortedJsonStringify(obj) {
      return JSON.stringify(sortedObject(obj));
    }
    exports.sortedJsonStringify = sortedJsonStringify;
    function makeSignDoc(msgs, fee, chainId, memo, accountNumber, sequence) {
      return {
        chain_id: chainId,
        account_number: math_1.Uint53.fromString(accountNumber.toString()).toString(),
        sequence: math_1.Uint53.fromString(sequence.toString()).toString(),
        fee,
        msgs,
        memo: memo || ""
      };
    }
    exports.makeSignDoc = makeSignDoc;
    function serializeSignDoc(signDoc) {
      return (0, encoding_1.toUtf8)(sortedJsonStringify(signDoc));
    }
    exports.serializeSignDoc = serializeSignDoc;
  }
});

// node_modules/@cosmjs/amino/build/wallet.js
var require_wallet = __commonJS({
  "node_modules/@cosmjs/amino/build/wallet.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.decrypt = exports.encrypt = exports.supportedAlgorithms = exports.executeKdf = exports.cosmjsSalt = void 0;
    var crypto_1 = require_build4();
    var encoding_1 = require_build2();
    exports.cosmjsSalt = (0, encoding_1.toAscii)("The CosmJS salt.");
    async function executeKdf(password, configuration) {
      switch (configuration.algorithm) {
        case "argon2id": {
          const options = configuration.params;
          if (!(0, crypto_1.isArgon2idOptions)(options))
            throw new Error("Invalid format of argon2id params");
          return crypto_1.Argon2id.execute(password, exports.cosmjsSalt, options);
        }
        default:
          throw new Error("Unsupported KDF algorithm");
      }
    }
    exports.executeKdf = executeKdf;
    exports.supportedAlgorithms = {
      xchacha20poly1305Ietf: "xchacha20poly1305-ietf"
    };
    async function encrypt(plaintext, encryptionKey, config) {
      switch (config.algorithm) {
        case exports.supportedAlgorithms.xchacha20poly1305Ietf: {
          const nonce = crypto_1.Random.getBytes(crypto_1.xchacha20NonceLength);
          return new Uint8Array([
            ...nonce,
            ...await crypto_1.Xchacha20poly1305Ietf.encrypt(plaintext, encryptionKey, nonce)
          ]);
        }
        default:
          throw new Error(`Unsupported encryption algorithm: '${config.algorithm}'`);
      }
    }
    exports.encrypt = encrypt;
    async function decrypt(ciphertext, encryptionKey, config) {
      switch (config.algorithm) {
        case exports.supportedAlgorithms.xchacha20poly1305Ietf: {
          const nonce = ciphertext.slice(0, crypto_1.xchacha20NonceLength);
          return crypto_1.Xchacha20poly1305Ietf.decrypt(ciphertext.slice(crypto_1.xchacha20NonceLength), encryptionKey, nonce);
        }
        default:
          throw new Error(`Unsupported encryption algorithm: '${config.algorithm}'`);
      }
    }
    exports.decrypt = decrypt;
  }
});

// node_modules/@cosmjs/amino/build/secp256k1hdwallet.js
var require_secp256k1hdwallet = __commonJS({
  "node_modules/@cosmjs/amino/build/secp256k1hdwallet.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Secp256k1HdWallet = exports.extractKdfConfiguration = void 0;
    var crypto_1 = require_build4();
    var encoding_1 = require_build2();
    var utils_1 = require_build3();
    var addresses_1 = require_addresses();
    var paths_1 = require_paths();
    var signature_1 = require_signature3();
    var signdoc_1 = require_signdoc();
    var wallet_1 = require_wallet();
    var serializationTypeV1 = "secp256k1wallet-v1";
    var basicPasswordHashingOptions = {
      algorithm: "argon2id",
      params: {
        outputLength: 32,
        opsLimit: 24,
        memLimitKib: 12 * 1024
      }
    };
    function isDerivationJson(thing) {
      if (!(0, utils_1.isNonNullObject)(thing))
        return false;
      if (typeof thing.hdPath !== "string")
        return false;
      if (typeof thing.prefix !== "string")
        return false;
      return true;
    }
    function extractKdfConfigurationV1(doc) {
      return doc.kdf;
    }
    function extractKdfConfiguration(serialization) {
      const root = JSON.parse(serialization);
      if (!(0, utils_1.isNonNullObject)(root))
        throw new Error("Root document is not an object.");
      switch (root.type) {
        case serializationTypeV1:
          return extractKdfConfigurationV1(root);
        default:
          throw new Error("Unsupported serialization type");
      }
    }
    exports.extractKdfConfiguration = extractKdfConfiguration;
    var defaultOptions = {
      bip39Password: "",
      hdPaths: [(0, paths_1.makeCosmoshubPath)(0)],
      prefix: "cosmos"
    };
    var Secp256k1HdWallet = class _Secp256k1HdWallet {
      constructor(mnemonic, options) {
        const hdPaths = options.hdPaths ?? defaultOptions.hdPaths;
        const prefix = options.prefix ?? defaultOptions.prefix;
        this.secret = mnemonic;
        this.seed = options.seed;
        this.accounts = hdPaths.map((hdPath) => ({
          hdPath,
          prefix
        }));
      }
      /**
       * Restores a wallet from the given BIP39 mnemonic.
       *
       * @param mnemonic Any valid English mnemonic.
       * @param options An optional `Secp256k1HdWalletOptions` object optionally containing a bip39Password, hdPaths, and prefix.
       */
      static async fromMnemonic(mnemonic, options = {}) {
        const mnemonicChecked = new crypto_1.EnglishMnemonic(mnemonic);
        const seed = await crypto_1.Bip39.mnemonicToSeed(mnemonicChecked, options.bip39Password);
        return new _Secp256k1HdWallet(mnemonicChecked, {
          ...options,
          seed
        });
      }
      /**
       * Generates a new wallet with a BIP39 mnemonic of the given length.
       *
       * @param length The number of words in the mnemonic (12, 15, 18, 21 or 24).
       * @param options An optional `Secp256k1HdWalletOptions` object optionally containing a bip39Password, hdPaths, and prefix.
       */
      static async generate(length = 12, options = {}) {
        const entropyLength = 4 * Math.floor(11 * length / 33);
        const entropy = crypto_1.Random.getBytes(entropyLength);
        const mnemonic = crypto_1.Bip39.encode(entropy);
        return _Secp256k1HdWallet.fromMnemonic(mnemonic.toString(), options);
      }
      /**
       * Restores a wallet from an encrypted serialization.
       *
       * @param password The user provided password used to generate an encryption key via a KDF.
       *                 This is not normalized internally (see "Unicode normalization" to learn more).
       */
      static async deserialize(serialization, password) {
        const root = JSON.parse(serialization);
        if (!(0, utils_1.isNonNullObject)(root))
          throw new Error("Root document is not an object.");
        switch (root.type) {
          case serializationTypeV1:
            return _Secp256k1HdWallet.deserializeTypeV1(serialization, password);
          default:
            throw new Error("Unsupported serialization type");
        }
      }
      /**
       * Restores a wallet from an encrypted serialization.
       *
       * This is an advanced alternative to calling `deserialize(serialization, password)` directly, which allows
       * you to offload the KDF execution to a non-UI thread (e.g. in a WebWorker).
       *
       * The caller is responsible for ensuring the key was derived with the given KDF configuration. This can be
       * done using `extractKdfConfiguration(serialization)` and `executeKdf(password, kdfConfiguration)` from this package.
       */
      static async deserializeWithEncryptionKey(serialization, encryptionKey) {
        const root = JSON.parse(serialization);
        if (!(0, utils_1.isNonNullObject)(root))
          throw new Error("Root document is not an object.");
        const untypedRoot = root;
        switch (untypedRoot.type) {
          case serializationTypeV1: {
            const decryptedBytes = await (0, wallet_1.decrypt)((0, encoding_1.fromBase64)(untypedRoot.data), encryptionKey, untypedRoot.encryption);
            const decryptedDocument = JSON.parse((0, encoding_1.fromUtf8)(decryptedBytes));
            const { mnemonic, accounts } = decryptedDocument;
            (0, utils_1.assert)(typeof mnemonic === "string");
            if (!Array.isArray(accounts))
              throw new Error("Property 'accounts' is not an array");
            if (!accounts.every((account) => isDerivationJson(account))) {
              throw new Error("Account is not in the correct format.");
            }
            const firstPrefix = accounts[0].prefix;
            if (!accounts.every(({ prefix }) => prefix === firstPrefix)) {
              throw new Error("Accounts do not all have the same prefix");
            }
            const hdPaths = accounts.map(({ hdPath }) => (0, crypto_1.stringToPath)(hdPath));
            return _Secp256k1HdWallet.fromMnemonic(mnemonic, {
              hdPaths,
              prefix: firstPrefix
            });
          }
          default:
            throw new Error("Unsupported serialization type");
        }
      }
      static async deserializeTypeV1(serialization, password) {
        const root = JSON.parse(serialization);
        if (!(0, utils_1.isNonNullObject)(root))
          throw new Error("Root document is not an object.");
        const encryptionKey = await (0, wallet_1.executeKdf)(password, root.kdf);
        return _Secp256k1HdWallet.deserializeWithEncryptionKey(serialization, encryptionKey);
      }
      get mnemonic() {
        return this.secret.toString();
      }
      async getAccounts() {
        const accountsWithPrivkeys = await this.getAccountsWithPrivkeys();
        return accountsWithPrivkeys.map(({ algo, pubkey, address }) => ({
          algo,
          pubkey,
          address
        }));
      }
      async signAmino(signerAddress, signDoc) {
        const accounts = await this.getAccountsWithPrivkeys();
        const account = accounts.find(({ address }) => address === signerAddress);
        if (account === void 0) {
          throw new Error(`Address ${signerAddress} not found in wallet`);
        }
        const { privkey, pubkey } = account;
        const message = (0, crypto_1.sha256)((0, signdoc_1.serializeSignDoc)(signDoc));
        const signature = await crypto_1.Secp256k1.createSignature(message, privkey);
        const signatureBytes = new Uint8Array([...signature.r(32), ...signature.s(32)]);
        return {
          signed: signDoc,
          signature: (0, signature_1.encodeSecp256k1Signature)(pubkey, signatureBytes)
        };
      }
      /**
       * Generates an encrypted serialization of this wallet.
       *
       * @param password The user provided password used to generate an encryption key via a KDF.
       *                 This is not normalized internally (see "Unicode normalization" to learn more).
       */
      async serialize(password) {
        const kdfConfiguration = basicPasswordHashingOptions;
        const encryptionKey = await (0, wallet_1.executeKdf)(password, kdfConfiguration);
        return this.serializeWithEncryptionKey(encryptionKey, kdfConfiguration);
      }
      /**
       * Generates an encrypted serialization of this wallet.
       *
       * This is an advanced alternative to calling `serialize(password)` directly, which allows you to
       * offload the KDF execution to a non-UI thread (e.g. in a WebWorker).
       *
       * The caller is responsible for ensuring the key was derived with the given KDF options. If this
       * is not the case, the wallet cannot be restored with the original password.
       */
      async serializeWithEncryptionKey(encryptionKey, kdfConfiguration) {
        const dataToEncrypt = {
          mnemonic: this.mnemonic,
          accounts: this.accounts.map(({ hdPath, prefix }) => ({
            hdPath: (0, crypto_1.pathToString)(hdPath),
            prefix
          }))
        };
        const dataToEncryptRaw = (0, encoding_1.toUtf8)(JSON.stringify(dataToEncrypt));
        const encryptionConfiguration = {
          algorithm: wallet_1.supportedAlgorithms.xchacha20poly1305Ietf
        };
        const encryptedData = await (0, wallet_1.encrypt)(dataToEncryptRaw, encryptionKey, encryptionConfiguration);
        const out = {
          type: serializationTypeV1,
          kdf: kdfConfiguration,
          encryption: encryptionConfiguration,
          data: (0, encoding_1.toBase64)(encryptedData)
        };
        return JSON.stringify(out);
      }
      async getKeyPair(hdPath) {
        const { privkey } = crypto_1.Slip10.derivePath(crypto_1.Slip10Curve.Secp256k1, this.seed, hdPath);
        const { pubkey } = await crypto_1.Secp256k1.makeKeypair(privkey);
        return {
          privkey,
          pubkey: crypto_1.Secp256k1.compressPubkey(pubkey)
        };
      }
      async getAccountsWithPrivkeys() {
        return Promise.all(this.accounts.map(async ({ hdPath, prefix }) => {
          const { privkey, pubkey } = await this.getKeyPair(hdPath);
          const address = (0, encoding_1.toBech32)(prefix, (0, addresses_1.rawSecp256k1PubkeyToRawAddress)(pubkey));
          return {
            algo: "secp256k1",
            privkey,
            pubkey,
            address
          };
        }));
      }
    };
    exports.Secp256k1HdWallet = Secp256k1HdWallet;
  }
});

// node_modules/@cosmjs/amino/build/secp256k1wallet.js
var require_secp256k1wallet = __commonJS({
  "node_modules/@cosmjs/amino/build/secp256k1wallet.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Secp256k1Wallet = void 0;
    var crypto_1 = require_build4();
    var encoding_1 = require_build2();
    var addresses_1 = require_addresses();
    var signature_1 = require_signature3();
    var signdoc_1 = require_signdoc();
    var Secp256k1Wallet = class _Secp256k1Wallet {
      constructor(privkey, pubkey, prefix) {
        this.privkey = privkey;
        this.pubkey = pubkey;
        this.prefix = prefix;
      }
      /**
       * Creates a Secp256k1Wallet from the given private key
       *
       * @param privkey The private key.
       * @param prefix The bech32 address prefix (human readable part). Defaults to "cosmos".
       */
      static async fromKey(privkey, prefix = "cosmos") {
        const uncompressed = (await crypto_1.Secp256k1.makeKeypair(privkey)).pubkey;
        return new _Secp256k1Wallet(privkey, crypto_1.Secp256k1.compressPubkey(uncompressed), prefix);
      }
      get address() {
        return (0, encoding_1.toBech32)(this.prefix, (0, addresses_1.rawSecp256k1PubkeyToRawAddress)(this.pubkey));
      }
      async getAccounts() {
        return [
          {
            algo: "secp256k1",
            address: this.address,
            pubkey: this.pubkey
          }
        ];
      }
      async signAmino(signerAddress, signDoc) {
        if (signerAddress !== this.address) {
          throw new Error(`Address ${signerAddress} not found in wallet`);
        }
        const message = new crypto_1.Sha256((0, signdoc_1.serializeSignDoc)(signDoc)).digest();
        const signature = await crypto_1.Secp256k1.createSignature(message, this.privkey);
        const signatureBytes = new Uint8Array([...signature.r(32), ...signature.s(32)]);
        return {
          signed: signDoc,
          signature: (0, signature_1.encodeSecp256k1Signature)(this.pubkey, signatureBytes)
        };
      }
    };
    exports.Secp256k1Wallet = Secp256k1Wallet;
  }
});

// node_modules/@cosmjs/amino/build/stdtx.js
var require_stdtx = __commonJS({
  "node_modules/@cosmjs/amino/build/stdtx.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.makeStdTx = exports.isStdTx = void 0;
    function isStdTx(txValue) {
      const { memo, msg, fee, signatures } = txValue;
      return typeof memo === "string" && Array.isArray(msg) && typeof fee === "object" && Array.isArray(signatures);
    }
    exports.isStdTx = isStdTx;
    function makeStdTx(content, signatures) {
      return {
        msg: content.msgs,
        fee: content.fee,
        memo: content.memo,
        signatures: Array.isArray(signatures) ? signatures : [signatures]
      };
    }
    exports.makeStdTx = makeStdTx;
  }
});

// node_modules/@cosmjs/amino/build/index.js
var require_build5 = __commonJS({
  "node_modules/@cosmjs/amino/build/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.executeKdf = exports.makeStdTx = exports.isStdTx = exports.serializeSignDoc = exports.makeSignDoc = exports.encodeSecp256k1Signature = exports.decodeSignature = exports.Secp256k1Wallet = exports.Secp256k1HdWallet = exports.extractKdfConfiguration = exports.pubkeyType = exports.isSinglePubkey = exports.isSecp256k1Pubkey = exports.isMultisigThresholdPubkey = exports.isEd25519Pubkey = exports.makeCosmoshubPath = exports.createMultisigThresholdPubkey = exports.encodeSecp256k1Pubkey = exports.encodeEd25519Pubkey = exports.encodeBech32Pubkey = exports.encodeAminoPubkey = exports.decodeBech32Pubkey = exports.decodeAminoPubkey = exports.parseCoins = exports.coins = exports.coin = exports.addCoins = exports.rawSecp256k1PubkeyToRawAddress = exports.rawEd25519PubkeyToRawAddress = exports.pubkeyToRawAddress = exports.pubkeyToAddress = void 0;
    var addresses_1 = require_addresses();
    Object.defineProperty(exports, "pubkeyToAddress", { enumerable: true, get: function() {
      return addresses_1.pubkeyToAddress;
    } });
    Object.defineProperty(exports, "pubkeyToRawAddress", { enumerable: true, get: function() {
      return addresses_1.pubkeyToRawAddress;
    } });
    Object.defineProperty(exports, "rawEd25519PubkeyToRawAddress", { enumerable: true, get: function() {
      return addresses_1.rawEd25519PubkeyToRawAddress;
    } });
    Object.defineProperty(exports, "rawSecp256k1PubkeyToRawAddress", { enumerable: true, get: function() {
      return addresses_1.rawSecp256k1PubkeyToRawAddress;
    } });
    var coins_1 = require_coins2();
    Object.defineProperty(exports, "addCoins", { enumerable: true, get: function() {
      return coins_1.addCoins;
    } });
    Object.defineProperty(exports, "coin", { enumerable: true, get: function() {
      return coins_1.coin;
    } });
    Object.defineProperty(exports, "coins", { enumerable: true, get: function() {
      return coins_1.coins;
    } });
    Object.defineProperty(exports, "parseCoins", { enumerable: true, get: function() {
      return coins_1.parseCoins;
    } });
    var encoding_1 = require_encoding();
    Object.defineProperty(exports, "decodeAminoPubkey", { enumerable: true, get: function() {
      return encoding_1.decodeAminoPubkey;
    } });
    Object.defineProperty(exports, "decodeBech32Pubkey", { enumerable: true, get: function() {
      return encoding_1.decodeBech32Pubkey;
    } });
    Object.defineProperty(exports, "encodeAminoPubkey", { enumerable: true, get: function() {
      return encoding_1.encodeAminoPubkey;
    } });
    Object.defineProperty(exports, "encodeBech32Pubkey", { enumerable: true, get: function() {
      return encoding_1.encodeBech32Pubkey;
    } });
    Object.defineProperty(exports, "encodeEd25519Pubkey", { enumerable: true, get: function() {
      return encoding_1.encodeEd25519Pubkey;
    } });
    Object.defineProperty(exports, "encodeSecp256k1Pubkey", { enumerable: true, get: function() {
      return encoding_1.encodeSecp256k1Pubkey;
    } });
    var multisig_1 = require_multisig2();
    Object.defineProperty(exports, "createMultisigThresholdPubkey", { enumerable: true, get: function() {
      return multisig_1.createMultisigThresholdPubkey;
    } });
    var paths_1 = require_paths();
    Object.defineProperty(exports, "makeCosmoshubPath", { enumerable: true, get: function() {
      return paths_1.makeCosmoshubPath;
    } });
    var pubkeys_1 = require_pubkeys();
    Object.defineProperty(exports, "isEd25519Pubkey", { enumerable: true, get: function() {
      return pubkeys_1.isEd25519Pubkey;
    } });
    Object.defineProperty(exports, "isMultisigThresholdPubkey", { enumerable: true, get: function() {
      return pubkeys_1.isMultisigThresholdPubkey;
    } });
    Object.defineProperty(exports, "isSecp256k1Pubkey", { enumerable: true, get: function() {
      return pubkeys_1.isSecp256k1Pubkey;
    } });
    Object.defineProperty(exports, "isSinglePubkey", { enumerable: true, get: function() {
      return pubkeys_1.isSinglePubkey;
    } });
    Object.defineProperty(exports, "pubkeyType", { enumerable: true, get: function() {
      return pubkeys_1.pubkeyType;
    } });
    var secp256k1hdwallet_1 = require_secp256k1hdwallet();
    Object.defineProperty(exports, "extractKdfConfiguration", { enumerable: true, get: function() {
      return secp256k1hdwallet_1.extractKdfConfiguration;
    } });
    Object.defineProperty(exports, "Secp256k1HdWallet", { enumerable: true, get: function() {
      return secp256k1hdwallet_1.Secp256k1HdWallet;
    } });
    var secp256k1wallet_1 = require_secp256k1wallet();
    Object.defineProperty(exports, "Secp256k1Wallet", { enumerable: true, get: function() {
      return secp256k1wallet_1.Secp256k1Wallet;
    } });
    var signature_1 = require_signature3();
    Object.defineProperty(exports, "decodeSignature", { enumerable: true, get: function() {
      return signature_1.decodeSignature;
    } });
    Object.defineProperty(exports, "encodeSecp256k1Signature", { enumerable: true, get: function() {
      return signature_1.encodeSecp256k1Signature;
    } });
    var signdoc_1 = require_signdoc();
    Object.defineProperty(exports, "makeSignDoc", { enumerable: true, get: function() {
      return signdoc_1.makeSignDoc;
    } });
    Object.defineProperty(exports, "serializeSignDoc", { enumerable: true, get: function() {
      return signdoc_1.serializeSignDoc;
    } });
    var stdtx_1 = require_stdtx();
    Object.defineProperty(exports, "isStdTx", { enumerable: true, get: function() {
      return stdtx_1.isStdTx;
    } });
    Object.defineProperty(exports, "makeStdTx", { enumerable: true, get: function() {
      return stdtx_1.makeStdTx;
    } });
    var wallet_1 = require_wallet();
    Object.defineProperty(exports, "executeKdf", { enumerable: true, get: function() {
      return wallet_1.executeKdf;
    } });
  }
});

// node_modules/@cosmjs/proto-signing/build/signing.js
var require_signing2 = __commonJS({
  "node_modules/@cosmjs/proto-signing/build/signing.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.makeSignBytes = exports.makeSignDoc = exports.makeAuthInfoBytes = void 0;
    var utils_1 = require_build3();
    var signing_1 = require_signing();
    var tx_1 = require_tx();
    var long_1 = __importDefault(require_long());
    function makeSignerInfos(signers, signMode) {
      return signers.map(({ pubkey, sequence }) => ({
        publicKey: pubkey,
        modeInfo: {
          single: { mode: signMode }
        },
        sequence: long_1.default.fromNumber(sequence)
      }));
    }
    function makeAuthInfoBytes(signers, feeAmount, gasLimit, feeGranter, feePayer, signMode = signing_1.SignMode.SIGN_MODE_DIRECT) {
      (0, utils_1.assert)(feeGranter === void 0 || typeof feeGranter === "string", "feeGranter must be undefined or string");
      (0, utils_1.assert)(feePayer === void 0 || typeof feePayer === "string", "feePayer must be undefined or string");
      const authInfo = tx_1.AuthInfo.fromPartial({
        signerInfos: makeSignerInfos(signers, signMode),
        fee: {
          amount: [...feeAmount],
          gasLimit: long_1.default.fromNumber(gasLimit),
          granter: feeGranter,
          payer: feePayer
        }
      });
      return tx_1.AuthInfo.encode(authInfo).finish();
    }
    exports.makeAuthInfoBytes = makeAuthInfoBytes;
    function makeSignDoc(bodyBytes, authInfoBytes, chainId, accountNumber) {
      return {
        bodyBytes,
        authInfoBytes,
        chainId,
        accountNumber: long_1.default.fromNumber(accountNumber)
      };
    }
    exports.makeSignDoc = makeSignDoc;
    function makeSignBytes({ accountNumber, authInfoBytes, bodyBytes, chainId }) {
      const signDoc = tx_1.SignDoc.fromPartial({
        accountNumber,
        authInfoBytes,
        bodyBytes,
        chainId
      });
      return tx_1.SignDoc.encode(signDoc).finish();
    }
    exports.makeSignBytes = makeSignBytes;
  }
});

// node_modules/@cosmjs/proto-signing/build/wallet.js
var require_wallet2 = __commonJS({
  "node_modules/@cosmjs/proto-signing/build/wallet.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.decrypt = exports.encrypt = exports.supportedAlgorithms = exports.executeKdf = exports.cosmjsSalt = void 0;
    var crypto_1 = require_build4();
    var encoding_1 = require_build2();
    exports.cosmjsSalt = (0, encoding_1.toAscii)("The CosmJS salt.");
    async function executeKdf(password, configuration) {
      switch (configuration.algorithm) {
        case "argon2id": {
          const options = configuration.params;
          if (!(0, crypto_1.isArgon2idOptions)(options))
            throw new Error("Invalid format of argon2id params");
          return crypto_1.Argon2id.execute(password, exports.cosmjsSalt, options);
        }
        default:
          throw new Error("Unsupported KDF algorithm");
      }
    }
    exports.executeKdf = executeKdf;
    exports.supportedAlgorithms = {
      xchacha20poly1305Ietf: "xchacha20poly1305-ietf"
    };
    async function encrypt(plaintext, encryptionKey, config) {
      switch (config.algorithm) {
        case exports.supportedAlgorithms.xchacha20poly1305Ietf: {
          const nonce = crypto_1.Random.getBytes(crypto_1.xchacha20NonceLength);
          return new Uint8Array([
            ...nonce,
            ...await crypto_1.Xchacha20poly1305Ietf.encrypt(plaintext, encryptionKey, nonce)
          ]);
        }
        default:
          throw new Error(`Unsupported encryption algorithm: '${config.algorithm}'`);
      }
    }
    exports.encrypt = encrypt;
    async function decrypt(ciphertext, encryptionKey, config) {
      switch (config.algorithm) {
        case exports.supportedAlgorithms.xchacha20poly1305Ietf: {
          const nonce = ciphertext.slice(0, crypto_1.xchacha20NonceLength);
          return crypto_1.Xchacha20poly1305Ietf.decrypt(ciphertext.slice(crypto_1.xchacha20NonceLength), encryptionKey, nonce);
        }
        default:
          throw new Error(`Unsupported encryption algorithm: '${config.algorithm}'`);
      }
    }
    exports.decrypt = decrypt;
  }
});

// node_modules/@cosmjs/proto-signing/build/directsecp256k1hdwallet.js
var require_directsecp256k1hdwallet = __commonJS({
  "node_modules/@cosmjs/proto-signing/build/directsecp256k1hdwallet.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.DirectSecp256k1HdWallet = exports.extractKdfConfiguration = void 0;
    var amino_1 = require_build5();
    var crypto_1 = require_build4();
    var encoding_1 = require_build2();
    var utils_1 = require_build3();
    var signing_1 = require_signing2();
    var wallet_1 = require_wallet2();
    var serializationTypeV1 = "directsecp256k1hdwallet-v1";
    var basicPasswordHashingOptions = {
      algorithm: "argon2id",
      params: {
        outputLength: 32,
        opsLimit: 24,
        memLimitKib: 12 * 1024
      }
    };
    function isDerivationJson(thing) {
      if (!(0, utils_1.isNonNullObject)(thing))
        return false;
      if (typeof thing.hdPath !== "string")
        return false;
      if (typeof thing.prefix !== "string")
        return false;
      return true;
    }
    function extractKdfConfigurationV1(doc) {
      return doc.kdf;
    }
    function extractKdfConfiguration(serialization) {
      const root = JSON.parse(serialization);
      if (!(0, utils_1.isNonNullObject)(root))
        throw new Error("Root document is not an object.");
      switch (root.type) {
        case serializationTypeV1:
          return extractKdfConfigurationV1(root);
        default:
          throw new Error("Unsupported serialization type");
      }
    }
    exports.extractKdfConfiguration = extractKdfConfiguration;
    var defaultOptions = {
      bip39Password: "",
      hdPaths: [(0, amino_1.makeCosmoshubPath)(0)],
      prefix: "cosmos"
    };
    var DirectSecp256k1HdWallet = class _DirectSecp256k1HdWallet {
      constructor(mnemonic, options) {
        const prefix = options.prefix ?? defaultOptions.prefix;
        const hdPaths = options.hdPaths ?? defaultOptions.hdPaths;
        this.secret = mnemonic;
        this.seed = options.seed;
        this.accounts = hdPaths.map((hdPath) => ({
          hdPath,
          prefix
        }));
      }
      /**
       * Restores a wallet from the given BIP39 mnemonic.
       *
       * @param mnemonic Any valid English mnemonic.
       * @param options An optional `DirectSecp256k1HdWalletOptions` object optionally containing a bip39Password, hdPaths, and prefix.
       */
      static async fromMnemonic(mnemonic, options = {}) {
        const mnemonicChecked = new crypto_1.EnglishMnemonic(mnemonic);
        const seed = await crypto_1.Bip39.mnemonicToSeed(mnemonicChecked, options.bip39Password);
        return new _DirectSecp256k1HdWallet(mnemonicChecked, {
          ...options,
          seed
        });
      }
      /**
       * Generates a new wallet with a BIP39 mnemonic of the given length.
       *
       * @param length The number of words in the mnemonic (12, 15, 18, 21 or 24).
       * @param options An optional `DirectSecp256k1HdWalletOptions` object optionally containing a bip39Password, hdPaths, and prefix.
       */
      static async generate(length = 12, options = {}) {
        const entropyLength = 4 * Math.floor(11 * length / 33);
        const entropy = crypto_1.Random.getBytes(entropyLength);
        const mnemonic = crypto_1.Bip39.encode(entropy);
        return _DirectSecp256k1HdWallet.fromMnemonic(mnemonic.toString(), options);
      }
      /**
       * Restores a wallet from an encrypted serialization.
       *
       * @param password The user provided password used to generate an encryption key via a KDF.
       *                 This is not normalized internally (see "Unicode normalization" to learn more).
       */
      static async deserialize(serialization, password) {
        const root = JSON.parse(serialization);
        if (!(0, utils_1.isNonNullObject)(root))
          throw new Error("Root document is not an object.");
        switch (root.type) {
          case serializationTypeV1:
            return _DirectSecp256k1HdWallet.deserializeTypeV1(serialization, password);
          default:
            throw new Error("Unsupported serialization type");
        }
      }
      /**
       * Restores a wallet from an encrypted serialization.
       *
       * This is an advanced alternative to calling `deserialize(serialization, password)` directly, which allows
       * you to offload the KDF execution to a non-UI thread (e.g. in a WebWorker).
       *
       * The caller is responsible for ensuring the key was derived with the given KDF configuration. This can be
       * done using `extractKdfConfiguration(serialization)` and `executeKdf(password, kdfConfiguration)` from this package.
       */
      static async deserializeWithEncryptionKey(serialization, encryptionKey) {
        const root = JSON.parse(serialization);
        if (!(0, utils_1.isNonNullObject)(root))
          throw new Error("Root document is not an object.");
        const untypedRoot = root;
        switch (untypedRoot.type) {
          case serializationTypeV1: {
            const decryptedBytes = await (0, wallet_1.decrypt)((0, encoding_1.fromBase64)(untypedRoot.data), encryptionKey, untypedRoot.encryption);
            const decryptedDocument = JSON.parse((0, encoding_1.fromUtf8)(decryptedBytes));
            const { mnemonic, accounts } = decryptedDocument;
            (0, utils_1.assert)(typeof mnemonic === "string");
            if (!Array.isArray(accounts))
              throw new Error("Property 'accounts' is not an array");
            if (!accounts.every((account) => isDerivationJson(account))) {
              throw new Error("Account is not in the correct format.");
            }
            const firstPrefix = accounts[0].prefix;
            if (!accounts.every(({ prefix }) => prefix === firstPrefix)) {
              throw new Error("Accounts do not all have the same prefix");
            }
            const hdPaths = accounts.map(({ hdPath }) => (0, crypto_1.stringToPath)(hdPath));
            return _DirectSecp256k1HdWallet.fromMnemonic(mnemonic, {
              hdPaths,
              prefix: firstPrefix
            });
          }
          default:
            throw new Error("Unsupported serialization type");
        }
      }
      static async deserializeTypeV1(serialization, password) {
        const root = JSON.parse(serialization);
        if (!(0, utils_1.isNonNullObject)(root))
          throw new Error("Root document is not an object.");
        const encryptionKey = await (0, wallet_1.executeKdf)(password, root.kdf);
        return _DirectSecp256k1HdWallet.deserializeWithEncryptionKey(serialization, encryptionKey);
      }
      get mnemonic() {
        return this.secret.toString();
      }
      async getAccounts() {
        const accountsWithPrivkeys = await this.getAccountsWithPrivkeys();
        return accountsWithPrivkeys.map(({ algo, pubkey, address }) => ({
          algo,
          pubkey,
          address
        }));
      }
      async signDirect(signerAddress, signDoc) {
        const accounts = await this.getAccountsWithPrivkeys();
        const account = accounts.find(({ address }) => address === signerAddress);
        if (account === void 0) {
          throw new Error(`Address ${signerAddress} not found in wallet`);
        }
        const { privkey, pubkey } = account;
        const signBytes = (0, signing_1.makeSignBytes)(signDoc);
        const hashedMessage = (0, crypto_1.sha256)(signBytes);
        const signature = await crypto_1.Secp256k1.createSignature(hashedMessage, privkey);
        const signatureBytes = new Uint8Array([...signature.r(32), ...signature.s(32)]);
        const stdSignature = (0, amino_1.encodeSecp256k1Signature)(pubkey, signatureBytes);
        return {
          signed: signDoc,
          signature: stdSignature
        };
      }
      /**
       * Generates an encrypted serialization of this wallet.
       *
       * @param password The user provided password used to generate an encryption key via a KDF.
       *                 This is not normalized internally (see "Unicode normalization" to learn more).
       */
      async serialize(password) {
        const kdfConfiguration = basicPasswordHashingOptions;
        const encryptionKey = await (0, wallet_1.executeKdf)(password, kdfConfiguration);
        return this.serializeWithEncryptionKey(encryptionKey, kdfConfiguration);
      }
      /**
       * Generates an encrypted serialization of this wallet.
       *
       * This is an advanced alternative to calling `serialize(password)` directly, which allows you to
       * offload the KDF execution to a non-UI thread (e.g. in a WebWorker).
       *
       * The caller is responsible for ensuring the key was derived with the given KDF options. If this
       * is not the case, the wallet cannot be restored with the original password.
       */
      async serializeWithEncryptionKey(encryptionKey, kdfConfiguration) {
        const dataToEncrypt = {
          mnemonic: this.mnemonic,
          accounts: this.accounts.map(({ hdPath, prefix }) => ({
            hdPath: (0, crypto_1.pathToString)(hdPath),
            prefix
          }))
        };
        const dataToEncryptRaw = (0, encoding_1.toUtf8)(JSON.stringify(dataToEncrypt));
        const encryptionConfiguration = {
          algorithm: wallet_1.supportedAlgorithms.xchacha20poly1305Ietf
        };
        const encryptedData = await (0, wallet_1.encrypt)(dataToEncryptRaw, encryptionKey, encryptionConfiguration);
        const out = {
          type: serializationTypeV1,
          kdf: kdfConfiguration,
          encryption: encryptionConfiguration,
          data: (0, encoding_1.toBase64)(encryptedData)
        };
        return JSON.stringify(out);
      }
      async getKeyPair(hdPath) {
        const { privkey } = crypto_1.Slip10.derivePath(crypto_1.Slip10Curve.Secp256k1, this.seed, hdPath);
        const { pubkey } = await crypto_1.Secp256k1.makeKeypair(privkey);
        return {
          privkey,
          pubkey: crypto_1.Secp256k1.compressPubkey(pubkey)
        };
      }
      async getAccountsWithPrivkeys() {
        return Promise.all(this.accounts.map(async ({ hdPath, prefix }) => {
          const { privkey, pubkey } = await this.getKeyPair(hdPath);
          const address = (0, encoding_1.toBech32)(prefix, (0, amino_1.rawSecp256k1PubkeyToRawAddress)(pubkey));
          return {
            algo: "secp256k1",
            privkey,
            pubkey,
            address
          };
        }));
      }
    };
    exports.DirectSecp256k1HdWallet = DirectSecp256k1HdWallet;
  }
});

// node_modules/@cosmjs/proto-signing/build/directsecp256k1wallet.js
var require_directsecp256k1wallet = __commonJS({
  "node_modules/@cosmjs/proto-signing/build/directsecp256k1wallet.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.DirectSecp256k1Wallet = void 0;
    var amino_1 = require_build5();
    var crypto_1 = require_build4();
    var encoding_1 = require_build2();
    var signing_1 = require_signing2();
    var DirectSecp256k1Wallet = class _DirectSecp256k1Wallet {
      constructor(privkey, pubkey, prefix) {
        this.privkey = privkey;
        this.pubkey = pubkey;
        this.prefix = prefix;
      }
      /**
       * Creates a DirectSecp256k1Wallet from the given private key
       *
       * @param privkey The private key.
       * @param prefix The bech32 address prefix (human readable part). Defaults to "cosmos".
       */
      static async fromKey(privkey, prefix = "cosmos") {
        const uncompressed = (await crypto_1.Secp256k1.makeKeypair(privkey)).pubkey;
        return new _DirectSecp256k1Wallet(privkey, crypto_1.Secp256k1.compressPubkey(uncompressed), prefix);
      }
      get address() {
        return (0, encoding_1.toBech32)(this.prefix, (0, amino_1.rawSecp256k1PubkeyToRawAddress)(this.pubkey));
      }
      async getAccounts() {
        return [
          {
            algo: "secp256k1",
            address: this.address,
            pubkey: this.pubkey
          }
        ];
      }
      async signDirect(address, signDoc) {
        const signBytes = (0, signing_1.makeSignBytes)(signDoc);
        if (address !== this.address) {
          throw new Error(`Address ${address} not found in wallet`);
        }
        const hashedMessage = (0, crypto_1.sha256)(signBytes);
        const signature = await crypto_1.Secp256k1.createSignature(hashedMessage, this.privkey);
        const signatureBytes = new Uint8Array([...signature.r(32), ...signature.s(32)]);
        const stdSignature = (0, amino_1.encodeSecp256k1Signature)(this.pubkey, signatureBytes);
        return {
          signed: signDoc,
          signature: stdSignature
        };
      }
    };
    exports.DirectSecp256k1Wallet = DirectSecp256k1Wallet;
  }
});

// node_modules/@cosmjs/proto-signing/build/paths.js
var require_paths2 = __commonJS({
  "node_modules/@cosmjs/proto-signing/build/paths.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.makeCosmoshubPath = void 0;
    var crypto_1 = require_build4();
    function makeCosmoshubPath(a) {
      return [
        crypto_1.Slip10RawIndex.hardened(44),
        crypto_1.Slip10RawIndex.hardened(118),
        crypto_1.Slip10RawIndex.hardened(0),
        crypto_1.Slip10RawIndex.normal(0),
        crypto_1.Slip10RawIndex.normal(a)
      ];
    }
    exports.makeCosmoshubPath = makeCosmoshubPath;
  }
});

// node_modules/cosmjs-types/cosmos/crypto/ed25519/keys.js
var require_keys = __commonJS({
  "node_modules/cosmjs-types/cosmos/crypto/ed25519/keys.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PrivKey = exports.PubKey = exports.protobufPackage = void 0;
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.crypto.ed25519";
    function createBasePubKey() {
      return {
        key: new Uint8Array()
      };
    }
    exports.PubKey = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.key.length !== 0) {
          writer.uint32(10).bytes(message.key);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBasePubKey();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.key = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          key: (0, helpers_1.isSet)(object.key) ? (0, helpers_1.bytesFromBase64)(object.key) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.key !== void 0 && (obj.key = (0, helpers_1.base64FromBytes)(message.key !== void 0 ? message.key : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBasePubKey();
        message.key = object.key ?? new Uint8Array();
        return message;
      }
    };
    function createBasePrivKey() {
      return {
        key: new Uint8Array()
      };
    }
    exports.PrivKey = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.key.length !== 0) {
          writer.uint32(10).bytes(message.key);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBasePrivKey();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.key = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          key: (0, helpers_1.isSet)(object.key) ? (0, helpers_1.bytesFromBase64)(object.key) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.key !== void 0 && (obj.key = (0, helpers_1.base64FromBytes)(message.key !== void 0 ? message.key : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBasePrivKey();
        message.key = object.key ?? new Uint8Array();
        return message;
      }
    };
  }
});

// node_modules/cosmjs-types/cosmos/crypto/multisig/keys.js
var require_keys2 = __commonJS({
  "node_modules/cosmjs-types/cosmos/crypto/multisig/keys.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.LegacyAminoPubKey = exports.protobufPackage = void 0;
    var any_1 = require_any();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.crypto.multisig";
    function createBaseLegacyAminoPubKey() {
      return {
        threshold: 0,
        publicKeys: []
      };
    }
    exports.LegacyAminoPubKey = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.threshold !== 0) {
          writer.uint32(8).uint32(message.threshold);
        }
        for (const v of message.publicKeys) {
          any_1.Any.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseLegacyAminoPubKey();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.threshold = reader.uint32();
              break;
            case 2:
              message.publicKeys.push(any_1.Any.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          threshold: (0, helpers_1.isSet)(object.threshold) ? Number(object.threshold) : 0,
          publicKeys: Array.isArray(object == null ? void 0 : object.publicKeys) ? object.publicKeys.map((e) => any_1.Any.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.threshold !== void 0 && (obj.threshold = Math.round(message.threshold));
        if (message.publicKeys) {
          obj.publicKeys = message.publicKeys.map((e) => e ? any_1.Any.toJSON(e) : void 0);
        } else {
          obj.publicKeys = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseLegacyAminoPubKey();
        message.threshold = object.threshold ?? 0;
        message.publicKeys = ((_a = object.publicKeys) == null ? void 0 : _a.map((e) => any_1.Any.fromPartial(e))) || [];
        return message;
      }
    };
  }
});

// node_modules/cosmjs-types/cosmos/crypto/secp256k1/keys.js
var require_keys3 = __commonJS({
  "node_modules/cosmjs-types/cosmos/crypto/secp256k1/keys.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PrivKey = exports.PubKey = exports.protobufPackage = void 0;
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.crypto.secp256k1";
    function createBasePubKey() {
      return {
        key: new Uint8Array()
      };
    }
    exports.PubKey = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.key.length !== 0) {
          writer.uint32(10).bytes(message.key);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBasePubKey();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.key = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          key: (0, helpers_1.isSet)(object.key) ? (0, helpers_1.bytesFromBase64)(object.key) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.key !== void 0 && (obj.key = (0, helpers_1.base64FromBytes)(message.key !== void 0 ? message.key : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBasePubKey();
        message.key = object.key ?? new Uint8Array();
        return message;
      }
    };
    function createBasePrivKey() {
      return {
        key: new Uint8Array()
      };
    }
    exports.PrivKey = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.key.length !== 0) {
          writer.uint32(10).bytes(message.key);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBasePrivKey();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.key = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          key: (0, helpers_1.isSet)(object.key) ? (0, helpers_1.bytesFromBase64)(object.key) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.key !== void 0 && (obj.key = (0, helpers_1.base64FromBytes)(message.key !== void 0 ? message.key : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBasePrivKey();
        message.key = object.key ?? new Uint8Array();
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/proto-signing/build/pubkey.js
var require_pubkey = __commonJS({
  "node_modules/@cosmjs/proto-signing/build/pubkey.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.decodePubkey = exports.anyToSinglePubkey = exports.encodePubkey = void 0;
    var amino_1 = require_build5();
    var encoding_1 = require_build2();
    var math_1 = require_build();
    var keys_1 = require_keys();
    var keys_2 = require_keys2();
    var keys_3 = require_keys3();
    var any_1 = require_any();
    function encodePubkey(pubkey) {
      if ((0, amino_1.isSecp256k1Pubkey)(pubkey)) {
        const pubkeyProto = keys_3.PubKey.fromPartial({
          key: (0, encoding_1.fromBase64)(pubkey.value)
        });
        return any_1.Any.fromPartial({
          typeUrl: "/cosmos.crypto.secp256k1.PubKey",
          value: Uint8Array.from(keys_3.PubKey.encode(pubkeyProto).finish())
        });
      } else if ((0, amino_1.isEd25519Pubkey)(pubkey)) {
        const pubkeyProto = keys_1.PubKey.fromPartial({
          key: (0, encoding_1.fromBase64)(pubkey.value)
        });
        return any_1.Any.fromPartial({
          typeUrl: "/cosmos.crypto.ed25519.PubKey",
          value: Uint8Array.from(keys_1.PubKey.encode(pubkeyProto).finish())
        });
      } else if ((0, amino_1.isMultisigThresholdPubkey)(pubkey)) {
        const pubkeyProto = keys_2.LegacyAminoPubKey.fromPartial({
          threshold: math_1.Uint53.fromString(pubkey.value.threshold).toNumber(),
          publicKeys: pubkey.value.pubkeys.map(encodePubkey)
        });
        return any_1.Any.fromPartial({
          typeUrl: "/cosmos.crypto.multisig.LegacyAminoPubKey",
          value: Uint8Array.from(keys_2.LegacyAminoPubKey.encode(pubkeyProto).finish())
        });
      } else {
        throw new Error(`Pubkey type ${pubkey.type} not recognized`);
      }
    }
    exports.encodePubkey = encodePubkey;
    function anyToSinglePubkey(pubkey) {
      switch (pubkey.typeUrl) {
        case "/cosmos.crypto.secp256k1.PubKey": {
          const { key } = keys_3.PubKey.decode(pubkey.value);
          return (0, amino_1.encodeSecp256k1Pubkey)(key);
        }
        case "/cosmos.crypto.ed25519.PubKey": {
          const { key } = keys_1.PubKey.decode(pubkey.value);
          return (0, amino_1.encodeEd25519Pubkey)(key);
        }
        default:
          throw new Error(`Pubkey type_url ${pubkey.typeUrl} not recognized as single public key type`);
      }
    }
    exports.anyToSinglePubkey = anyToSinglePubkey;
    function decodePubkey(pubkey) {
      switch (pubkey.typeUrl) {
        case "/cosmos.crypto.secp256k1.PubKey":
        case "/cosmos.crypto.ed25519.PubKey": {
          return anyToSinglePubkey(pubkey);
        }
        case "/cosmos.crypto.multisig.LegacyAminoPubKey": {
          const { threshold, publicKeys } = keys_2.LegacyAminoPubKey.decode(pubkey.value);
          const out = {
            type: "tendermint/PubKeyMultisigThreshold",
            value: {
              threshold: threshold.toString(),
              pubkeys: publicKeys.map(anyToSinglePubkey)
            }
          };
          return out;
        }
        default:
          throw new Error(`Pubkey type_url ${pubkey.typeUrl} not recognized`);
      }
    }
    exports.decodePubkey = decodePubkey;
  }
});

// node_modules/cosmjs-types/cosmos/bank/v1beta1/bank.js
var require_bank = __commonJS({
  "node_modules/cosmjs-types/cosmos/bank/v1beta1/bank.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Metadata = exports.DenomUnit = exports.Supply = exports.Output = exports.Input = exports.SendEnabled = exports.Params = exports.protobufPackage = void 0;
    var coin_1 = require_coin();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.bank.v1beta1";
    function createBaseParams() {
      return {
        sendEnabled: [],
        defaultSendEnabled: false
      };
    }
    exports.Params = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.sendEnabled) {
          exports.SendEnabled.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.defaultSendEnabled === true) {
          writer.uint32(16).bool(message.defaultSendEnabled);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseParams();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.sendEnabled.push(exports.SendEnabled.decode(reader, reader.uint32()));
              break;
            case 2:
              message.defaultSendEnabled = reader.bool();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          sendEnabled: Array.isArray(object == null ? void 0 : object.sendEnabled) ? object.sendEnabled.map((e) => exports.SendEnabled.fromJSON(e)) : [],
          defaultSendEnabled: (0, helpers_1.isSet)(object.defaultSendEnabled) ? Boolean(object.defaultSendEnabled) : false
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.sendEnabled) {
          obj.sendEnabled = message.sendEnabled.map((e) => e ? exports.SendEnabled.toJSON(e) : void 0);
        } else {
          obj.sendEnabled = [];
        }
        message.defaultSendEnabled !== void 0 && (obj.defaultSendEnabled = message.defaultSendEnabled);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseParams();
        message.sendEnabled = ((_a = object.sendEnabled) == null ? void 0 : _a.map((e) => exports.SendEnabled.fromPartial(e))) || [];
        message.defaultSendEnabled = object.defaultSendEnabled ?? false;
        return message;
      }
    };
    function createBaseSendEnabled() {
      return {
        denom: "",
        enabled: false
      };
    }
    exports.SendEnabled = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.denom !== "") {
          writer.uint32(10).string(message.denom);
        }
        if (message.enabled === true) {
          writer.uint32(16).bool(message.enabled);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseSendEnabled();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.denom = reader.string();
              break;
            case 2:
              message.enabled = reader.bool();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          denom: (0, helpers_1.isSet)(object.denom) ? String(object.denom) : "",
          enabled: (0, helpers_1.isSet)(object.enabled) ? Boolean(object.enabled) : false
        };
      },
      toJSON(message) {
        const obj = {};
        message.denom !== void 0 && (obj.denom = message.denom);
        message.enabled !== void 0 && (obj.enabled = message.enabled);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseSendEnabled();
        message.denom = object.denom ?? "";
        message.enabled = object.enabled ?? false;
        return message;
      }
    };
    function createBaseInput() {
      return {
        address: "",
        coins: []
      };
    }
    exports.Input = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.address !== "") {
          writer.uint32(10).string(message.address);
        }
        for (const v of message.coins) {
          coin_1.Coin.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseInput();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.address = reader.string();
              break;
            case 2:
              message.coins.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          address: (0, helpers_1.isSet)(object.address) ? String(object.address) : "",
          coins: Array.isArray(object == null ? void 0 : object.coins) ? object.coins.map((e) => coin_1.Coin.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.address !== void 0 && (obj.address = message.address);
        if (message.coins) {
          obj.coins = message.coins.map((e) => e ? coin_1.Coin.toJSON(e) : void 0);
        } else {
          obj.coins = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseInput();
        message.address = object.address ?? "";
        message.coins = ((_a = object.coins) == null ? void 0 : _a.map((e) => coin_1.Coin.fromPartial(e))) || [];
        return message;
      }
    };
    function createBaseOutput() {
      return {
        address: "",
        coins: []
      };
    }
    exports.Output = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.address !== "") {
          writer.uint32(10).string(message.address);
        }
        for (const v of message.coins) {
          coin_1.Coin.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseOutput();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.address = reader.string();
              break;
            case 2:
              message.coins.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          address: (0, helpers_1.isSet)(object.address) ? String(object.address) : "",
          coins: Array.isArray(object == null ? void 0 : object.coins) ? object.coins.map((e) => coin_1.Coin.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.address !== void 0 && (obj.address = message.address);
        if (message.coins) {
          obj.coins = message.coins.map((e) => e ? coin_1.Coin.toJSON(e) : void 0);
        } else {
          obj.coins = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseOutput();
        message.address = object.address ?? "";
        message.coins = ((_a = object.coins) == null ? void 0 : _a.map((e) => coin_1.Coin.fromPartial(e))) || [];
        return message;
      }
    };
    function createBaseSupply() {
      return {
        total: []
      };
    }
    exports.Supply = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.total) {
          coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseSupply();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.total.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          total: Array.isArray(object == null ? void 0 : object.total) ? object.total.map((e) => coin_1.Coin.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.total) {
          obj.total = message.total.map((e) => e ? coin_1.Coin.toJSON(e) : void 0);
        } else {
          obj.total = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseSupply();
        message.total = ((_a = object.total) == null ? void 0 : _a.map((e) => coin_1.Coin.fromPartial(e))) || [];
        return message;
      }
    };
    function createBaseDenomUnit() {
      return {
        denom: "",
        exponent: 0,
        aliases: []
      };
    }
    exports.DenomUnit = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.denom !== "") {
          writer.uint32(10).string(message.denom);
        }
        if (message.exponent !== 0) {
          writer.uint32(16).uint32(message.exponent);
        }
        for (const v of message.aliases) {
          writer.uint32(26).string(v);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseDenomUnit();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.denom = reader.string();
              break;
            case 2:
              message.exponent = reader.uint32();
              break;
            case 3:
              message.aliases.push(reader.string());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          denom: (0, helpers_1.isSet)(object.denom) ? String(object.denom) : "",
          exponent: (0, helpers_1.isSet)(object.exponent) ? Number(object.exponent) : 0,
          aliases: Array.isArray(object == null ? void 0 : object.aliases) ? object.aliases.map((e) => String(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.denom !== void 0 && (obj.denom = message.denom);
        message.exponent !== void 0 && (obj.exponent = Math.round(message.exponent));
        if (message.aliases) {
          obj.aliases = message.aliases.map((e) => e);
        } else {
          obj.aliases = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseDenomUnit();
        message.denom = object.denom ?? "";
        message.exponent = object.exponent ?? 0;
        message.aliases = ((_a = object.aliases) == null ? void 0 : _a.map((e) => e)) || [];
        return message;
      }
    };
    function createBaseMetadata() {
      return {
        description: "",
        denomUnits: [],
        base: "",
        display: "",
        name: "",
        symbol: ""
      };
    }
    exports.Metadata = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.description !== "") {
          writer.uint32(10).string(message.description);
        }
        for (const v of message.denomUnits) {
          exports.DenomUnit.encode(v, writer.uint32(18).fork()).ldelim();
        }
        if (message.base !== "") {
          writer.uint32(26).string(message.base);
        }
        if (message.display !== "") {
          writer.uint32(34).string(message.display);
        }
        if (message.name !== "") {
          writer.uint32(42).string(message.name);
        }
        if (message.symbol !== "") {
          writer.uint32(50).string(message.symbol);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMetadata();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.description = reader.string();
              break;
            case 2:
              message.denomUnits.push(exports.DenomUnit.decode(reader, reader.uint32()));
              break;
            case 3:
              message.base = reader.string();
              break;
            case 4:
              message.display = reader.string();
              break;
            case 5:
              message.name = reader.string();
              break;
            case 6:
              message.symbol = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          description: (0, helpers_1.isSet)(object.description) ? String(object.description) : "",
          denomUnits: Array.isArray(object == null ? void 0 : object.denomUnits) ? object.denomUnits.map((e) => exports.DenomUnit.fromJSON(e)) : [],
          base: (0, helpers_1.isSet)(object.base) ? String(object.base) : "",
          display: (0, helpers_1.isSet)(object.display) ? String(object.display) : "",
          name: (0, helpers_1.isSet)(object.name) ? String(object.name) : "",
          symbol: (0, helpers_1.isSet)(object.symbol) ? String(object.symbol) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.description !== void 0 && (obj.description = message.description);
        if (message.denomUnits) {
          obj.denomUnits = message.denomUnits.map((e) => e ? exports.DenomUnit.toJSON(e) : void 0);
        } else {
          obj.denomUnits = [];
        }
        message.base !== void 0 && (obj.base = message.base);
        message.display !== void 0 && (obj.display = message.display);
        message.name !== void 0 && (obj.name = message.name);
        message.symbol !== void 0 && (obj.symbol = message.symbol);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseMetadata();
        message.description = object.description ?? "";
        message.denomUnits = ((_a = object.denomUnits) == null ? void 0 : _a.map((e) => exports.DenomUnit.fromPartial(e))) || [];
        message.base = object.base ?? "";
        message.display = object.display ?? "";
        message.name = object.name ?? "";
        message.symbol = object.symbol ?? "";
        return message;
      }
    };
  }
});

// node_modules/cosmjs-types/cosmos/bank/v1beta1/tx.js
var require_tx2 = __commonJS({
  "node_modules/cosmjs-types/cosmos/bank/v1beta1/tx.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MsgClientImpl = exports.MsgMultiSendResponse = exports.MsgMultiSend = exports.MsgSendResponse = exports.MsgSend = exports.protobufPackage = void 0;
    var coin_1 = require_coin();
    var bank_1 = require_bank();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.bank.v1beta1";
    function createBaseMsgSend() {
      return {
        fromAddress: "",
        toAddress: "",
        amount: []
      };
    }
    exports.MsgSend = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.fromAddress !== "") {
          writer.uint32(10).string(message.fromAddress);
        }
        if (message.toAddress !== "") {
          writer.uint32(18).string(message.toAddress);
        }
        for (const v of message.amount) {
          coin_1.Coin.encode(v, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgSend();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.fromAddress = reader.string();
              break;
            case 2:
              message.toAddress = reader.string();
              break;
            case 3:
              message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          fromAddress: (0, helpers_1.isSet)(object.fromAddress) ? String(object.fromAddress) : "",
          toAddress: (0, helpers_1.isSet)(object.toAddress) ? String(object.toAddress) : "",
          amount: Array.isArray(object == null ? void 0 : object.amount) ? object.amount.map((e) => coin_1.Coin.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.fromAddress !== void 0 && (obj.fromAddress = message.fromAddress);
        message.toAddress !== void 0 && (obj.toAddress = message.toAddress);
        if (message.amount) {
          obj.amount = message.amount.map((e) => e ? coin_1.Coin.toJSON(e) : void 0);
        } else {
          obj.amount = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseMsgSend();
        message.fromAddress = object.fromAddress ?? "";
        message.toAddress = object.toAddress ?? "";
        message.amount = ((_a = object.amount) == null ? void 0 : _a.map((e) => coin_1.Coin.fromPartial(e))) || [];
        return message;
      }
    };
    function createBaseMsgSendResponse() {
      return {};
    }
    exports.MsgSendResponse = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgSendResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseMsgSendResponse();
        return message;
      }
    };
    function createBaseMsgMultiSend() {
      return {
        inputs: [],
        outputs: []
      };
    }
    exports.MsgMultiSend = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.inputs) {
          bank_1.Input.encode(v, writer.uint32(10).fork()).ldelim();
        }
        for (const v of message.outputs) {
          bank_1.Output.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgMultiSend();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.inputs.push(bank_1.Input.decode(reader, reader.uint32()));
              break;
            case 2:
              message.outputs.push(bank_1.Output.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          inputs: Array.isArray(object == null ? void 0 : object.inputs) ? object.inputs.map((e) => bank_1.Input.fromJSON(e)) : [],
          outputs: Array.isArray(object == null ? void 0 : object.outputs) ? object.outputs.map((e) => bank_1.Output.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.inputs) {
          obj.inputs = message.inputs.map((e) => e ? bank_1.Input.toJSON(e) : void 0);
        } else {
          obj.inputs = [];
        }
        if (message.outputs) {
          obj.outputs = message.outputs.map((e) => e ? bank_1.Output.toJSON(e) : void 0);
        } else {
          obj.outputs = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a, _b;
        const message = createBaseMsgMultiSend();
        message.inputs = ((_a = object.inputs) == null ? void 0 : _a.map((e) => bank_1.Input.fromPartial(e))) || [];
        message.outputs = ((_b = object.outputs) == null ? void 0 : _b.map((e) => bank_1.Output.fromPartial(e))) || [];
        return message;
      }
    };
    function createBaseMsgMultiSendResponse() {
      return {};
    }
    exports.MsgMultiSendResponse = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgMultiSendResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseMsgMultiSendResponse();
        return message;
      }
    };
    var MsgClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.Send = this.Send.bind(this);
        this.MultiSend = this.MultiSend.bind(this);
      }
      Send(request) {
        const data = exports.MsgSend.encode(request).finish();
        const promise = this.rpc.request("cosmos.bank.v1beta1.Msg", "Send", data);
        return promise.then((data2) => exports.MsgSendResponse.decode(new _m0.Reader(data2)));
      }
      MultiSend(request) {
        const data = exports.MsgMultiSend.encode(request).finish();
        const promise = this.rpc.request("cosmos.bank.v1beta1.Msg", "MultiSend", data);
        return promise.then((data2) => exports.MsgMultiSendResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.MsgClientImpl = MsgClientImpl;
  }
});

// node_modules/@cosmjs/proto-signing/build/registry.js
var require_registry = __commonJS({
  "node_modules/@cosmjs/proto-signing/build/registry.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Registry = exports.isTxBodyEncodeObject = exports.isPbjsGeneratedType = exports.isTsProtoGeneratedType = void 0;
    var tx_1 = require_tx2();
    var coin_1 = require_coin();
    var tx_2 = require_tx();
    var any_1 = require_any();
    function isTsProtoGeneratedType(type) {
      return typeof type.fromPartial === "function";
    }
    exports.isTsProtoGeneratedType = isTsProtoGeneratedType;
    function isPbjsGeneratedType(type) {
      return !isTsProtoGeneratedType(type);
    }
    exports.isPbjsGeneratedType = isPbjsGeneratedType;
    var defaultTypeUrls = {
      cosmosCoin: "/cosmos.base.v1beta1.Coin",
      cosmosMsgSend: "/cosmos.bank.v1beta1.MsgSend",
      cosmosTxBody: "/cosmos.tx.v1beta1.TxBody",
      googleAny: "/google.protobuf.Any"
    };
    function isTxBodyEncodeObject(encodeObject) {
      return encodeObject.typeUrl === "/cosmos.tx.v1beta1.TxBody";
    }
    exports.isTxBodyEncodeObject = isTxBodyEncodeObject;
    var Registry = class {
      /**
       * Creates a new Registry for mapping protobuf type identifiers/type URLs to
       * actual implementations. Those implementations are typically generated with ts-proto
       * but we also support protobuf.js as a type generator.
       *
       * If there is no parameter given, a `new Registry()` adds the types `Coin` and `MsgSend`
       * for historic reasons. Those can be overriden by customTypes.
       *
       * There are currently two methods for adding new types:
       * 1. Passing types to the constructor.
       * 2. Using the `register()` method
       */
      constructor(customTypes) {
        const { cosmosCoin, cosmosMsgSend } = defaultTypeUrls;
        this.types = customTypes ? new Map([...customTypes]) : /* @__PURE__ */ new Map([
          [cosmosCoin, coin_1.Coin],
          [cosmosMsgSend, tx_1.MsgSend]
        ]);
      }
      register(typeUrl, type) {
        this.types.set(typeUrl, type);
      }
      /**
       * Looks up a type that was previously added to the registry.
       *
       * The generator information (ts-proto or pbjs) gets lost along the way.
       * If you need to work with the result type in TypeScript, you can use:
       *
       * ```
       * import { assert } from "@cosmjs/utils";
       *
       * const Coin = registry.lookupType("/cosmos.base.v1beta1.Coin");
       * assert(Coin); // Ensures not unset
       * assert(isTsProtoGeneratedType(Coin)); // Ensures this is the type we expect
       *
       * // Coin is typed TsProtoGeneratedType now.
       * ```
       */
      lookupType(typeUrl) {
        return this.types.get(typeUrl);
      }
      lookupTypeWithError(typeUrl) {
        const type = this.lookupType(typeUrl);
        if (!type) {
          throw new Error(`Unregistered type url: ${typeUrl}`);
        }
        return type;
      }
      /**
       * Takes a typeUrl/value pair and encodes the value to protobuf if
       * the given type was previously registered.
       *
       * If the value has to be wrapped in an Any, this needs to be done
       * manually after this call. Or use `encodeAsAny` instead.
       */
      encode(encodeObject) {
        const { value, typeUrl } = encodeObject;
        if (isTxBodyEncodeObject(encodeObject)) {
          return this.encodeTxBody(value);
        }
        const type = this.lookupTypeWithError(typeUrl);
        const instance = isTsProtoGeneratedType(type) ? type.fromPartial(value) : type.create(value);
        return type.encode(instance).finish();
      }
      /**
       * Takes a typeUrl/value pair and encodes the value to an Any if
       * the given type was previously registered.
       */
      encodeAsAny(encodeObject) {
        const binaryValue = this.encode(encodeObject);
        return any_1.Any.fromPartial({
          typeUrl: encodeObject.typeUrl,
          value: binaryValue
        });
      }
      encodeTxBody(txBodyFields) {
        const wrappedMessages = txBodyFields.messages.map((message) => this.encodeAsAny(message));
        const txBody = tx_2.TxBody.fromPartial({
          ...txBodyFields,
          messages: wrappedMessages
        });
        return tx_2.TxBody.encode(txBody).finish();
      }
      decode({ typeUrl, value }) {
        if (typeUrl === defaultTypeUrls.cosmosTxBody) {
          return this.decodeTxBody(value);
        }
        const type = this.lookupTypeWithError(typeUrl);
        const decoded = type.decode(value);
        Object.entries(decoded).forEach(([key, val]) => {
          if (typeof Buffer !== "undefined" && typeof Buffer.isBuffer !== "undefined" && Buffer.isBuffer(val)) {
            decoded[key] = Uint8Array.from(val);
          }
        });
        return decoded;
      }
      decodeTxBody(txBody) {
        const decodedTxBody = tx_2.TxBody.decode(txBody);
        return {
          ...decodedTxBody,
          messages: decodedTxBody.messages.map(({ typeUrl, value }) => {
            if (!typeUrl) {
              throw new Error("Missing type_url in Any");
            }
            if (!value) {
              throw new Error("Missing value in Any");
            }
            return this.decode({ typeUrl, value });
          })
        };
      }
    };
    exports.Registry = Registry;
  }
});

// node_modules/@cosmjs/proto-signing/build/signer.js
var require_signer = __commonJS({
  "node_modules/@cosmjs/proto-signing/build/signer.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isOfflineDirectSigner = void 0;
    function isOfflineDirectSigner(signer) {
      return signer.signDirect !== void 0;
    }
    exports.isOfflineDirectSigner = isOfflineDirectSigner;
  }
});

// node_modules/@cosmjs/proto-signing/build/index.js
var require_build6 = __commonJS({
  "node_modules/@cosmjs/proto-signing/build/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.coins = exports.coin = exports.executeKdf = exports.makeSignDoc = exports.makeSignBytes = exports.makeAuthInfoBytes = exports.isOfflineDirectSigner = exports.Registry = exports.isTxBodyEncodeObject = exports.isTsProtoGeneratedType = exports.isPbjsGeneratedType = exports.encodePubkey = exports.decodePubkey = exports.anyToSinglePubkey = exports.makeCosmoshubPath = exports.DirectSecp256k1Wallet = exports.extractKdfConfiguration = exports.DirectSecp256k1HdWallet = exports.decodeTxRaw = exports.parseCoins = void 0;
    var coins_1 = require_coins();
    Object.defineProperty(exports, "parseCoins", { enumerable: true, get: function() {
      return coins_1.parseCoins;
    } });
    var decode_1 = require_decode();
    Object.defineProperty(exports, "decodeTxRaw", { enumerable: true, get: function() {
      return decode_1.decodeTxRaw;
    } });
    var directsecp256k1hdwallet_1 = require_directsecp256k1hdwallet();
    Object.defineProperty(exports, "DirectSecp256k1HdWallet", { enumerable: true, get: function() {
      return directsecp256k1hdwallet_1.DirectSecp256k1HdWallet;
    } });
    Object.defineProperty(exports, "extractKdfConfiguration", { enumerable: true, get: function() {
      return directsecp256k1hdwallet_1.extractKdfConfiguration;
    } });
    var directsecp256k1wallet_1 = require_directsecp256k1wallet();
    Object.defineProperty(exports, "DirectSecp256k1Wallet", { enumerable: true, get: function() {
      return directsecp256k1wallet_1.DirectSecp256k1Wallet;
    } });
    var paths_1 = require_paths2();
    Object.defineProperty(exports, "makeCosmoshubPath", { enumerable: true, get: function() {
      return paths_1.makeCosmoshubPath;
    } });
    var pubkey_1 = require_pubkey();
    Object.defineProperty(exports, "anyToSinglePubkey", { enumerable: true, get: function() {
      return pubkey_1.anyToSinglePubkey;
    } });
    Object.defineProperty(exports, "decodePubkey", { enumerable: true, get: function() {
      return pubkey_1.decodePubkey;
    } });
    Object.defineProperty(exports, "encodePubkey", { enumerable: true, get: function() {
      return pubkey_1.encodePubkey;
    } });
    var registry_1 = require_registry();
    Object.defineProperty(exports, "isPbjsGeneratedType", { enumerable: true, get: function() {
      return registry_1.isPbjsGeneratedType;
    } });
    Object.defineProperty(exports, "isTsProtoGeneratedType", { enumerable: true, get: function() {
      return registry_1.isTsProtoGeneratedType;
    } });
    Object.defineProperty(exports, "isTxBodyEncodeObject", { enumerable: true, get: function() {
      return registry_1.isTxBodyEncodeObject;
    } });
    Object.defineProperty(exports, "Registry", { enumerable: true, get: function() {
      return registry_1.Registry;
    } });
    var signer_1 = require_signer();
    Object.defineProperty(exports, "isOfflineDirectSigner", { enumerable: true, get: function() {
      return signer_1.isOfflineDirectSigner;
    } });
    var signing_1 = require_signing2();
    Object.defineProperty(exports, "makeAuthInfoBytes", { enumerable: true, get: function() {
      return signing_1.makeAuthInfoBytes;
    } });
    Object.defineProperty(exports, "makeSignBytes", { enumerable: true, get: function() {
      return signing_1.makeSignBytes;
    } });
    Object.defineProperty(exports, "makeSignDoc", { enumerable: true, get: function() {
      return signing_1.makeSignDoc;
    } });
    var wallet_1 = require_wallet2();
    Object.defineProperty(exports, "executeKdf", { enumerable: true, get: function() {
      return wallet_1.executeKdf;
    } });
    var amino_1 = require_build5();
    Object.defineProperty(exports, "coin", { enumerable: true, get: function() {
      return amino_1.coin;
    } });
    Object.defineProperty(exports, "coins", { enumerable: true, get: function() {
      return amino_1.coins;
    } });
  }
});

// node_modules/cosmjs-types/cosmos/auth/v1beta1/auth.js
var require_auth = __commonJS({
  "node_modules/cosmjs-types/cosmos/auth/v1beta1/auth.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Params = exports.ModuleAccount = exports.BaseAccount = exports.protobufPackage = void 0;
    var any_1 = require_any();
    var helpers_1 = require_helpers();
    var _m0 = __importStar(require_minimal());
    exports.protobufPackage = "cosmos.auth.v1beta1";
    function createBaseBaseAccount() {
      return {
        address: "",
        pubKey: void 0,
        accountNumber: helpers_1.Long.UZERO,
        sequence: helpers_1.Long.UZERO
      };
    }
    exports.BaseAccount = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.address !== "") {
          writer.uint32(10).string(message.address);
        }
        if (message.pubKey !== void 0) {
          any_1.Any.encode(message.pubKey, writer.uint32(18).fork()).ldelim();
        }
        if (!message.accountNumber.isZero()) {
          writer.uint32(24).uint64(message.accountNumber);
        }
        if (!message.sequence.isZero()) {
          writer.uint32(32).uint64(message.sequence);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseBaseAccount();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.address = reader.string();
              break;
            case 2:
              message.pubKey = any_1.Any.decode(reader, reader.uint32());
              break;
            case 3:
              message.accountNumber = reader.uint64();
              break;
            case 4:
              message.sequence = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          address: (0, helpers_1.isSet)(object.address) ? String(object.address) : "",
          pubKey: (0, helpers_1.isSet)(object.pubKey) ? any_1.Any.fromJSON(object.pubKey) : void 0,
          accountNumber: (0, helpers_1.isSet)(object.accountNumber) ? helpers_1.Long.fromValue(object.accountNumber) : helpers_1.Long.UZERO,
          sequence: (0, helpers_1.isSet)(object.sequence) ? helpers_1.Long.fromValue(object.sequence) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.address !== void 0 && (obj.address = message.address);
        message.pubKey !== void 0 && (obj.pubKey = message.pubKey ? any_1.Any.toJSON(message.pubKey) : void 0);
        message.accountNumber !== void 0 && (obj.accountNumber = (message.accountNumber || helpers_1.Long.UZERO).toString());
        message.sequence !== void 0 && (obj.sequence = (message.sequence || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseBaseAccount();
        message.address = object.address ?? "";
        message.pubKey = object.pubKey !== void 0 && object.pubKey !== null ? any_1.Any.fromPartial(object.pubKey) : void 0;
        message.accountNumber = object.accountNumber !== void 0 && object.accountNumber !== null ? helpers_1.Long.fromValue(object.accountNumber) : helpers_1.Long.UZERO;
        message.sequence = object.sequence !== void 0 && object.sequence !== null ? helpers_1.Long.fromValue(object.sequence) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseModuleAccount() {
      return {
        baseAccount: void 0,
        name: "",
        permissions: []
      };
    }
    exports.ModuleAccount = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.baseAccount !== void 0) {
          exports.BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();
        }
        if (message.name !== "") {
          writer.uint32(18).string(message.name);
        }
        for (const v of message.permissions) {
          writer.uint32(26).string(v);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseModuleAccount();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.baseAccount = exports.BaseAccount.decode(reader, reader.uint32());
              break;
            case 2:
              message.name = reader.string();
              break;
            case 3:
              message.permissions.push(reader.string());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          baseAccount: (0, helpers_1.isSet)(object.baseAccount) ? exports.BaseAccount.fromJSON(object.baseAccount) : void 0,
          name: (0, helpers_1.isSet)(object.name) ? String(object.name) : "",
          permissions: Array.isArray(object == null ? void 0 : object.permissions) ? object.permissions.map((e) => String(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.baseAccount !== void 0 && (obj.baseAccount = message.baseAccount ? exports.BaseAccount.toJSON(message.baseAccount) : void 0);
        message.name !== void 0 && (obj.name = message.name);
        if (message.permissions) {
          obj.permissions = message.permissions.map((e) => e);
        } else {
          obj.permissions = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseModuleAccount();
        message.baseAccount = object.baseAccount !== void 0 && object.baseAccount !== null ? exports.BaseAccount.fromPartial(object.baseAccount) : void 0;
        message.name = object.name ?? "";
        message.permissions = ((_a = object.permissions) == null ? void 0 : _a.map((e) => e)) || [];
        return message;
      }
    };
    function createBaseParams() {
      return {
        maxMemoCharacters: helpers_1.Long.UZERO,
        txSigLimit: helpers_1.Long.UZERO,
        txSizeCostPerByte: helpers_1.Long.UZERO,
        sigVerifyCostEd25519: helpers_1.Long.UZERO,
        sigVerifyCostSecp256k1: helpers_1.Long.UZERO
      };
    }
    exports.Params = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.maxMemoCharacters.isZero()) {
          writer.uint32(8).uint64(message.maxMemoCharacters);
        }
        if (!message.txSigLimit.isZero()) {
          writer.uint32(16).uint64(message.txSigLimit);
        }
        if (!message.txSizeCostPerByte.isZero()) {
          writer.uint32(24).uint64(message.txSizeCostPerByte);
        }
        if (!message.sigVerifyCostEd25519.isZero()) {
          writer.uint32(32).uint64(message.sigVerifyCostEd25519);
        }
        if (!message.sigVerifyCostSecp256k1.isZero()) {
          writer.uint32(40).uint64(message.sigVerifyCostSecp256k1);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseParams();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.maxMemoCharacters = reader.uint64();
              break;
            case 2:
              message.txSigLimit = reader.uint64();
              break;
            case 3:
              message.txSizeCostPerByte = reader.uint64();
              break;
            case 4:
              message.sigVerifyCostEd25519 = reader.uint64();
              break;
            case 5:
              message.sigVerifyCostSecp256k1 = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          maxMemoCharacters: (0, helpers_1.isSet)(object.maxMemoCharacters) ? helpers_1.Long.fromValue(object.maxMemoCharacters) : helpers_1.Long.UZERO,
          txSigLimit: (0, helpers_1.isSet)(object.txSigLimit) ? helpers_1.Long.fromValue(object.txSigLimit) : helpers_1.Long.UZERO,
          txSizeCostPerByte: (0, helpers_1.isSet)(object.txSizeCostPerByte) ? helpers_1.Long.fromValue(object.txSizeCostPerByte) : helpers_1.Long.UZERO,
          sigVerifyCostEd25519: (0, helpers_1.isSet)(object.sigVerifyCostEd25519) ? helpers_1.Long.fromValue(object.sigVerifyCostEd25519) : helpers_1.Long.UZERO,
          sigVerifyCostSecp256k1: (0, helpers_1.isSet)(object.sigVerifyCostSecp256k1) ? helpers_1.Long.fromValue(object.sigVerifyCostSecp256k1) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.maxMemoCharacters !== void 0 && (obj.maxMemoCharacters = (message.maxMemoCharacters || helpers_1.Long.UZERO).toString());
        message.txSigLimit !== void 0 && (obj.txSigLimit = (message.txSigLimit || helpers_1.Long.UZERO).toString());
        message.txSizeCostPerByte !== void 0 && (obj.txSizeCostPerByte = (message.txSizeCostPerByte || helpers_1.Long.UZERO).toString());
        message.sigVerifyCostEd25519 !== void 0 && (obj.sigVerifyCostEd25519 = (message.sigVerifyCostEd25519 || helpers_1.Long.UZERO).toString());
        message.sigVerifyCostSecp256k1 !== void 0 && (obj.sigVerifyCostSecp256k1 = (message.sigVerifyCostSecp256k1 || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseParams();
        message.maxMemoCharacters = object.maxMemoCharacters !== void 0 && object.maxMemoCharacters !== null ? helpers_1.Long.fromValue(object.maxMemoCharacters) : helpers_1.Long.UZERO;
        message.txSigLimit = object.txSigLimit !== void 0 && object.txSigLimit !== null ? helpers_1.Long.fromValue(object.txSigLimit) : helpers_1.Long.UZERO;
        message.txSizeCostPerByte = object.txSizeCostPerByte !== void 0 && object.txSizeCostPerByte !== null ? helpers_1.Long.fromValue(object.txSizeCostPerByte) : helpers_1.Long.UZERO;
        message.sigVerifyCostEd25519 = object.sigVerifyCostEd25519 !== void 0 && object.sigVerifyCostEd25519 !== null ? helpers_1.Long.fromValue(object.sigVerifyCostEd25519) : helpers_1.Long.UZERO;
        message.sigVerifyCostSecp256k1 = object.sigVerifyCostSecp256k1 !== void 0 && object.sigVerifyCostSecp256k1 !== null ? helpers_1.Long.fromValue(object.sigVerifyCostSecp256k1) : helpers_1.Long.UZERO;
        return message;
      }
    };
  }
});

// node_modules/cosmjs-types/cosmos/vesting/v1beta1/vesting.js
var require_vesting = __commonJS({
  "node_modules/cosmjs-types/cosmos/vesting/v1beta1/vesting.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PermanentLockedAccount = exports.PeriodicVestingAccount = exports.Period = exports.DelayedVestingAccount = exports.ContinuousVestingAccount = exports.BaseVestingAccount = exports.protobufPackage = void 0;
    var auth_1 = require_auth();
    var coin_1 = require_coin();
    var helpers_1 = require_helpers();
    var _m0 = __importStar(require_minimal());
    exports.protobufPackage = "cosmos.vesting.v1beta1";
    function createBaseBaseVestingAccount() {
      return {
        baseAccount: void 0,
        originalVesting: [],
        delegatedFree: [],
        delegatedVesting: [],
        endTime: helpers_1.Long.ZERO
      };
    }
    exports.BaseVestingAccount = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.baseAccount !== void 0) {
          auth_1.BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();
        }
        for (const v of message.originalVesting) {
          coin_1.Coin.encode(v, writer.uint32(18).fork()).ldelim();
        }
        for (const v of message.delegatedFree) {
          coin_1.Coin.encode(v, writer.uint32(26).fork()).ldelim();
        }
        for (const v of message.delegatedVesting) {
          coin_1.Coin.encode(v, writer.uint32(34).fork()).ldelim();
        }
        if (!message.endTime.isZero()) {
          writer.uint32(40).int64(message.endTime);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseBaseVestingAccount();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.baseAccount = auth_1.BaseAccount.decode(reader, reader.uint32());
              break;
            case 2:
              message.originalVesting.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            case 3:
              message.delegatedFree.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            case 4:
              message.delegatedVesting.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            case 5:
              message.endTime = reader.int64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          baseAccount: (0, helpers_1.isSet)(object.baseAccount) ? auth_1.BaseAccount.fromJSON(object.baseAccount) : void 0,
          originalVesting: Array.isArray(object == null ? void 0 : object.originalVesting) ? object.originalVesting.map((e) => coin_1.Coin.fromJSON(e)) : [],
          delegatedFree: Array.isArray(object == null ? void 0 : object.delegatedFree) ? object.delegatedFree.map((e) => coin_1.Coin.fromJSON(e)) : [],
          delegatedVesting: Array.isArray(object == null ? void 0 : object.delegatedVesting) ? object.delegatedVesting.map((e) => coin_1.Coin.fromJSON(e)) : [],
          endTime: (0, helpers_1.isSet)(object.endTime) ? helpers_1.Long.fromValue(object.endTime) : helpers_1.Long.ZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.baseAccount !== void 0 && (obj.baseAccount = message.baseAccount ? auth_1.BaseAccount.toJSON(message.baseAccount) : void 0);
        if (message.originalVesting) {
          obj.originalVesting = message.originalVesting.map((e) => e ? coin_1.Coin.toJSON(e) : void 0);
        } else {
          obj.originalVesting = [];
        }
        if (message.delegatedFree) {
          obj.delegatedFree = message.delegatedFree.map((e) => e ? coin_1.Coin.toJSON(e) : void 0);
        } else {
          obj.delegatedFree = [];
        }
        if (message.delegatedVesting) {
          obj.delegatedVesting = message.delegatedVesting.map((e) => e ? coin_1.Coin.toJSON(e) : void 0);
        } else {
          obj.delegatedVesting = [];
        }
        message.endTime !== void 0 && (obj.endTime = (message.endTime || helpers_1.Long.ZERO).toString());
        return obj;
      },
      fromPartial(object) {
        var _a, _b, _c;
        const message = createBaseBaseVestingAccount();
        message.baseAccount = object.baseAccount !== void 0 && object.baseAccount !== null ? auth_1.BaseAccount.fromPartial(object.baseAccount) : void 0;
        message.originalVesting = ((_a = object.originalVesting) == null ? void 0 : _a.map((e) => coin_1.Coin.fromPartial(e))) || [];
        message.delegatedFree = ((_b = object.delegatedFree) == null ? void 0 : _b.map((e) => coin_1.Coin.fromPartial(e))) || [];
        message.delegatedVesting = ((_c = object.delegatedVesting) == null ? void 0 : _c.map((e) => coin_1.Coin.fromPartial(e))) || [];
        message.endTime = object.endTime !== void 0 && object.endTime !== null ? helpers_1.Long.fromValue(object.endTime) : helpers_1.Long.ZERO;
        return message;
      }
    };
    function createBaseContinuousVestingAccount() {
      return {
        baseVestingAccount: void 0,
        startTime: helpers_1.Long.ZERO
      };
    }
    exports.ContinuousVestingAccount = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.baseVestingAccount !== void 0) {
          exports.BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();
        }
        if (!message.startTime.isZero()) {
          writer.uint32(16).int64(message.startTime);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseContinuousVestingAccount();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.baseVestingAccount = exports.BaseVestingAccount.decode(reader, reader.uint32());
              break;
            case 2:
              message.startTime = reader.int64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          baseVestingAccount: (0, helpers_1.isSet)(object.baseVestingAccount) ? exports.BaseVestingAccount.fromJSON(object.baseVestingAccount) : void 0,
          startTime: (0, helpers_1.isSet)(object.startTime) ? helpers_1.Long.fromValue(object.startTime) : helpers_1.Long.ZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.baseVestingAccount !== void 0 && (obj.baseVestingAccount = message.baseVestingAccount ? exports.BaseVestingAccount.toJSON(message.baseVestingAccount) : void 0);
        message.startTime !== void 0 && (obj.startTime = (message.startTime || helpers_1.Long.ZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseContinuousVestingAccount();
        message.baseVestingAccount = object.baseVestingAccount !== void 0 && object.baseVestingAccount !== null ? exports.BaseVestingAccount.fromPartial(object.baseVestingAccount) : void 0;
        message.startTime = object.startTime !== void 0 && object.startTime !== null ? helpers_1.Long.fromValue(object.startTime) : helpers_1.Long.ZERO;
        return message;
      }
    };
    function createBaseDelayedVestingAccount() {
      return {
        baseVestingAccount: void 0
      };
    }
    exports.DelayedVestingAccount = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.baseVestingAccount !== void 0) {
          exports.BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseDelayedVestingAccount();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.baseVestingAccount = exports.BaseVestingAccount.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          baseVestingAccount: (0, helpers_1.isSet)(object.baseVestingAccount) ? exports.BaseVestingAccount.fromJSON(object.baseVestingAccount) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.baseVestingAccount !== void 0 && (obj.baseVestingAccount = message.baseVestingAccount ? exports.BaseVestingAccount.toJSON(message.baseVestingAccount) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseDelayedVestingAccount();
        message.baseVestingAccount = object.baseVestingAccount !== void 0 && object.baseVestingAccount !== null ? exports.BaseVestingAccount.fromPartial(object.baseVestingAccount) : void 0;
        return message;
      }
    };
    function createBasePeriod() {
      return {
        length: helpers_1.Long.ZERO,
        amount: []
      };
    }
    exports.Period = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.length.isZero()) {
          writer.uint32(8).int64(message.length);
        }
        for (const v of message.amount) {
          coin_1.Coin.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBasePeriod();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.length = reader.int64();
              break;
            case 2:
              message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          length: (0, helpers_1.isSet)(object.length) ? helpers_1.Long.fromValue(object.length) : helpers_1.Long.ZERO,
          amount: Array.isArray(object == null ? void 0 : object.amount) ? object.amount.map((e) => coin_1.Coin.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.length !== void 0 && (obj.length = (message.length || helpers_1.Long.ZERO).toString());
        if (message.amount) {
          obj.amount = message.amount.map((e) => e ? coin_1.Coin.toJSON(e) : void 0);
        } else {
          obj.amount = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBasePeriod();
        message.length = object.length !== void 0 && object.length !== null ? helpers_1.Long.fromValue(object.length) : helpers_1.Long.ZERO;
        message.amount = ((_a = object.amount) == null ? void 0 : _a.map((e) => coin_1.Coin.fromPartial(e))) || [];
        return message;
      }
    };
    function createBasePeriodicVestingAccount() {
      return {
        baseVestingAccount: void 0,
        startTime: helpers_1.Long.ZERO,
        vestingPeriods: []
      };
    }
    exports.PeriodicVestingAccount = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.baseVestingAccount !== void 0) {
          exports.BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();
        }
        if (!message.startTime.isZero()) {
          writer.uint32(16).int64(message.startTime);
        }
        for (const v of message.vestingPeriods) {
          exports.Period.encode(v, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBasePeriodicVestingAccount();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.baseVestingAccount = exports.BaseVestingAccount.decode(reader, reader.uint32());
              break;
            case 2:
              message.startTime = reader.int64();
              break;
            case 3:
              message.vestingPeriods.push(exports.Period.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          baseVestingAccount: (0, helpers_1.isSet)(object.baseVestingAccount) ? exports.BaseVestingAccount.fromJSON(object.baseVestingAccount) : void 0,
          startTime: (0, helpers_1.isSet)(object.startTime) ? helpers_1.Long.fromValue(object.startTime) : helpers_1.Long.ZERO,
          vestingPeriods: Array.isArray(object == null ? void 0 : object.vestingPeriods) ? object.vestingPeriods.map((e) => exports.Period.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.baseVestingAccount !== void 0 && (obj.baseVestingAccount = message.baseVestingAccount ? exports.BaseVestingAccount.toJSON(message.baseVestingAccount) : void 0);
        message.startTime !== void 0 && (obj.startTime = (message.startTime || helpers_1.Long.ZERO).toString());
        if (message.vestingPeriods) {
          obj.vestingPeriods = message.vestingPeriods.map((e) => e ? exports.Period.toJSON(e) : void 0);
        } else {
          obj.vestingPeriods = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBasePeriodicVestingAccount();
        message.baseVestingAccount = object.baseVestingAccount !== void 0 && object.baseVestingAccount !== null ? exports.BaseVestingAccount.fromPartial(object.baseVestingAccount) : void 0;
        message.startTime = object.startTime !== void 0 && object.startTime !== null ? helpers_1.Long.fromValue(object.startTime) : helpers_1.Long.ZERO;
        message.vestingPeriods = ((_a = object.vestingPeriods) == null ? void 0 : _a.map((e) => exports.Period.fromPartial(e))) || [];
        return message;
      }
    };
    function createBasePermanentLockedAccount() {
      return {
        baseVestingAccount: void 0
      };
    }
    exports.PermanentLockedAccount = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.baseVestingAccount !== void 0) {
          exports.BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBasePermanentLockedAccount();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.baseVestingAccount = exports.BaseVestingAccount.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          baseVestingAccount: (0, helpers_1.isSet)(object.baseVestingAccount) ? exports.BaseVestingAccount.fromJSON(object.baseVestingAccount) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.baseVestingAccount !== void 0 && (obj.baseVestingAccount = message.baseVestingAccount ? exports.BaseVestingAccount.toJSON(message.baseVestingAccount) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBasePermanentLockedAccount();
        message.baseVestingAccount = object.baseVestingAccount !== void 0 && object.baseVestingAccount !== null ? exports.BaseVestingAccount.fromPartial(object.baseVestingAccount) : void 0;
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/stargate/build/accounts.js
var require_accounts = __commonJS({
  "node_modules/@cosmjs/stargate/build/accounts.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.accountFromAny = void 0;
    var math_1 = require_build();
    var proto_signing_1 = require_build6();
    var utils_1 = require_build3();
    var auth_1 = require_auth();
    var vesting_1 = require_vesting();
    function uint64FromProto(input) {
      return math_1.Uint64.fromString(input.toString());
    }
    function accountFromBaseAccount(input) {
      const { address, pubKey, accountNumber, sequence } = input;
      const pubkey = pubKey ? (0, proto_signing_1.decodePubkey)(pubKey) : null;
      return {
        address,
        pubkey,
        accountNumber: uint64FromProto(accountNumber).toNumber(),
        sequence: uint64FromProto(sequence).toNumber()
      };
    }
    function accountFromAny(input) {
      var _a, _b, _c, _d, _e, _f, _g;
      const { typeUrl, value } = input;
      switch (typeUrl) {
        case "/cosmos.auth.v1beta1.BaseAccount":
          return accountFromBaseAccount(auth_1.BaseAccount.decode(value));
        case "/cosmos.auth.v1beta1.ModuleAccount": {
          const baseAccount = auth_1.ModuleAccount.decode(value).baseAccount;
          (0, utils_1.assert)(baseAccount);
          return accountFromBaseAccount(baseAccount);
        }
        case "/cosmos.vesting.v1beta1.BaseVestingAccount": {
          const baseAccount = (_a = vesting_1.BaseVestingAccount.decode(value)) == null ? void 0 : _a.baseAccount;
          (0, utils_1.assert)(baseAccount);
          return accountFromBaseAccount(baseAccount);
        }
        case "/cosmos.vesting.v1beta1.ContinuousVestingAccount": {
          const baseAccount = (_c = (_b = vesting_1.ContinuousVestingAccount.decode(value)) == null ? void 0 : _b.baseVestingAccount) == null ? void 0 : _c.baseAccount;
          (0, utils_1.assert)(baseAccount);
          return accountFromBaseAccount(baseAccount);
        }
        case "/cosmos.vesting.v1beta1.DelayedVestingAccount": {
          const baseAccount = (_e = (_d = vesting_1.DelayedVestingAccount.decode(value)) == null ? void 0 : _d.baseVestingAccount) == null ? void 0 : _e.baseAccount;
          (0, utils_1.assert)(baseAccount);
          return accountFromBaseAccount(baseAccount);
        }
        case "/cosmos.vesting.v1beta1.PeriodicVestingAccount": {
          const baseAccount = (_g = (_f = vesting_1.PeriodicVestingAccount.decode(value)) == null ? void 0 : _f.baseVestingAccount) == null ? void 0 : _g.baseAccount;
          (0, utils_1.assert)(baseAccount);
          return accountFromBaseAccount(baseAccount);
        }
        default:
          throw new Error(`Unsupported type: '${typeUrl}'`);
      }
    }
    exports.accountFromAny = accountFromAny;
  }
});

// node_modules/@cosmjs/stargate/build/aminotypes.js
var require_aminotypes = __commonJS({
  "node_modules/@cosmjs/stargate/build/aminotypes.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.AminoTypes = void 0;
    function isAminoConverter(converter) {
      return typeof converter[1] !== "string";
    }
    var AminoTypes = class {
      constructor(types) {
        this.register = types;
      }
      toAmino({ typeUrl, value }) {
        const converter = this.register[typeUrl];
        if (converter === "not_supported_by_chain") {
          throw new Error(`The message type '${typeUrl}' cannot be signed using the Amino JSON sign mode because this is not supported by chain.`);
        }
        if (!converter) {
          throw new Error(`Type URL '${typeUrl}' does not exist in the Amino message type register. If you need support for this message type, you can pass in additional entries to the AminoTypes constructor. If you think this message type should be included by default, please open an issue at https://github.com/cosmos/cosmjs/issues.`);
        }
        return {
          type: converter.aminoType,
          value: converter.toAmino(value)
        };
      }
      fromAmino({ type, value }) {
        const matches = Object.entries(this.register).filter(isAminoConverter).filter(([_typeUrl, { aminoType }]) => aminoType === type);
        switch (matches.length) {
          case 0: {
            throw new Error(`Amino type identifier '${type}' does not exist in the Amino message type register. If you need support for this message type, you can pass in additional entries to the AminoTypes constructor. If you think this message type should be included by default, please open an issue at https://github.com/cosmos/cosmjs/issues.`);
          }
          case 1: {
            const [typeUrl, converter] = matches[0];
            return {
              typeUrl,
              value: converter.fromAmino(value)
            };
          }
          default:
            throw new Error(`Multiple types are registered with Amino type identifier '${type}': '` + matches.map(([key, _value]) => key).sort().join("', '") + "'. Thus fromAmino cannot be performed.");
        }
      }
    };
    exports.AminoTypes = AminoTypes;
  }
});

// node_modules/@cosmjs/stargate/build/events.js
var require_events = __commonJS({
  "node_modules/@cosmjs/stargate/build/events.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.fromTendermintEvent = void 0;
    var encoding_1 = require_build2();
    function fromTendermintEvent(event) {
      return {
        type: event.type,
        attributes: event.attributes.map((attr) => ({
          key: typeof attr.key == "string" ? attr.key : (0, encoding_1.fromUtf8)(attr.key, true),
          value: typeof attr.value == "string" ? attr.value : (0, encoding_1.fromUtf8)(attr.value, true)
        }))
      };
    }
    exports.fromTendermintEvent = fromTendermintEvent;
  }
});

// node_modules/@cosmjs/stargate/build/fee.js
var require_fee = __commonJS({
  "node_modules/@cosmjs/stargate/build/fee.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.calculateFee = exports.GasPrice = void 0;
    var math_1 = require_build();
    var proto_signing_1 = require_build6();
    function checkDenom(denom) {
      if (denom.length < 3 || denom.length > 128) {
        throw new Error("Denom must be between 3 and 128 characters");
      }
    }
    var GasPrice = class _GasPrice {
      constructor(amount, denom) {
        this.amount = amount;
        this.denom = denom;
      }
      /**
       * Parses a gas price formatted as `<amount><denom>`, e.g. `GasPrice.fromString("0.012utoken")`.
       *
       * The denom must match the Cosmos SDK 0.42 pattern (https://github.com/cosmos/cosmos-sdk/blob/v0.42.4/types/coin.go#L599-L601).
       * See `GasPrice` in @cosmjs/stargate for a more generic matcher.
       *
       * Separators are not yet supported.
       */
      static fromString(gasPrice) {
        const matchResult = gasPrice.match(/^([0-9.]+)([a-z][a-z0-9]*)$/i);
        if (!matchResult) {
          throw new Error("Invalid gas price string");
        }
        const [_, amount, denom] = matchResult;
        checkDenom(denom);
        const fractionalDigits = 18;
        const decimalAmount = math_1.Decimal.fromUserInput(amount, fractionalDigits);
        return new _GasPrice(decimalAmount, denom);
      }
      /**
       * Returns a string representation of this gas price, e.g. "0.025uatom".
       * This can be used as an input to `GasPrice.fromString`.
       */
      toString() {
        return this.amount.toString() + this.denom;
      }
    };
    exports.GasPrice = GasPrice;
    function calculateFee(gasLimit, gasPrice) {
      const processedGasPrice = typeof gasPrice === "string" ? GasPrice.fromString(gasPrice) : gasPrice;
      const { denom, amount: gasPriceAmount } = processedGasPrice;
      const amount = gasPriceAmount.multiply(new math_1.Uint53(gasLimit)).ceil().toString();
      return {
        amount: (0, proto_signing_1.coins)(amount, denom),
        gas: gasLimit.toString()
      };
    }
    exports.calculateFee = calculateFee;
  }
});

// node_modules/@cosmjs/stargate/build/logs.js
var require_logs = __commonJS({
  "node_modules/@cosmjs/stargate/build/logs.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.findAttribute = exports.parseRawLog = exports.parseLogs = exports.parseLog = exports.parseEvent = exports.parseAttribute = void 0;
    var utils_1 = require_build3();
    function parseAttribute(input) {
      if (!(0, utils_1.isNonNullObject)(input))
        throw new Error("Attribute must be a non-null object");
      const { key, value } = input;
      if (typeof key !== "string" || !key)
        throw new Error("Attribute's key must be a non-empty string");
      if (typeof value !== "string" && typeof value !== "undefined") {
        throw new Error("Attribute's value must be a string or unset");
      }
      return {
        key,
        value: value || ""
      };
    }
    exports.parseAttribute = parseAttribute;
    function parseEvent(input) {
      if (!(0, utils_1.isNonNullObject)(input))
        throw new Error("Event must be a non-null object");
      const { type, attributes } = input;
      if (typeof type !== "string" || type === "") {
        throw new Error(`Event type must be a non-empty string`);
      }
      if (!Array.isArray(attributes))
        throw new Error("Event's attributes must be an array");
      return {
        type,
        attributes: attributes.map(parseAttribute)
      };
    }
    exports.parseEvent = parseEvent;
    function parseLog(input) {
      if (!(0, utils_1.isNonNullObject)(input))
        throw new Error("Log must be a non-null object");
      const { msg_index, log, events } = input;
      if (typeof msg_index !== "number")
        throw new Error("Log's msg_index must be a number");
      if (typeof log !== "string")
        throw new Error("Log's log must be a string");
      if (!Array.isArray(events))
        throw new Error("Log's events must be an array");
      return {
        msg_index,
        log,
        events: events.map(parseEvent)
      };
    }
    exports.parseLog = parseLog;
    function parseLogs(input) {
      if (!Array.isArray(input))
        throw new Error("Logs must be an array");
      return input.map(parseLog);
    }
    exports.parseLogs = parseLogs;
    function parseRawLog(input = "[]") {
      const logsToParse = JSON.parse(input).map(({ events }, i) => ({
        msg_index: i,
        events,
        log: ""
      }));
      return parseLogs(logsToParse);
    }
    exports.parseRawLog = parseRawLog;
    function findAttribute(logs, eventType, attrKey) {
      var _a;
      const firstLogs = logs.find(() => true);
      const out = (_a = firstLogs == null ? void 0 : firstLogs.events.find((event) => event.type === eventType)) == null ? void 0 : _a.attributes.find((attr) => attr.key === attrKey);
      if (!out) {
        throw new Error(`Could not find attribute '${attrKey}' in first event of type '${eventType}' in first log.`);
      }
      return out;
    }
    exports.findAttribute = findAttribute;
  }
});

// node_modules/cosmjs-types/cosmos/base/query/v1beta1/pagination.js
var require_pagination = __commonJS({
  "node_modules/cosmjs-types/cosmos/base/query/v1beta1/pagination.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PageResponse = exports.PageRequest = exports.protobufPackage = void 0;
    var helpers_1 = require_helpers();
    var _m0 = __importStar(require_minimal());
    exports.protobufPackage = "cosmos.base.query.v1beta1";
    function createBasePageRequest() {
      return {
        key: new Uint8Array(),
        offset: helpers_1.Long.UZERO,
        limit: helpers_1.Long.UZERO,
        countTotal: false,
        reverse: false
      };
    }
    exports.PageRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.key.length !== 0) {
          writer.uint32(10).bytes(message.key);
        }
        if (!message.offset.isZero()) {
          writer.uint32(16).uint64(message.offset);
        }
        if (!message.limit.isZero()) {
          writer.uint32(24).uint64(message.limit);
        }
        if (message.countTotal === true) {
          writer.uint32(32).bool(message.countTotal);
        }
        if (message.reverse === true) {
          writer.uint32(40).bool(message.reverse);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBasePageRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.key = reader.bytes();
              break;
            case 2:
              message.offset = reader.uint64();
              break;
            case 3:
              message.limit = reader.uint64();
              break;
            case 4:
              message.countTotal = reader.bool();
              break;
            case 5:
              message.reverse = reader.bool();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          key: (0, helpers_1.isSet)(object.key) ? (0, helpers_1.bytesFromBase64)(object.key) : new Uint8Array(),
          offset: (0, helpers_1.isSet)(object.offset) ? helpers_1.Long.fromValue(object.offset) : helpers_1.Long.UZERO,
          limit: (0, helpers_1.isSet)(object.limit) ? helpers_1.Long.fromValue(object.limit) : helpers_1.Long.UZERO,
          countTotal: (0, helpers_1.isSet)(object.countTotal) ? Boolean(object.countTotal) : false,
          reverse: (0, helpers_1.isSet)(object.reverse) ? Boolean(object.reverse) : false
        };
      },
      toJSON(message) {
        const obj = {};
        message.key !== void 0 && (obj.key = (0, helpers_1.base64FromBytes)(message.key !== void 0 ? message.key : new Uint8Array()));
        message.offset !== void 0 && (obj.offset = (message.offset || helpers_1.Long.UZERO).toString());
        message.limit !== void 0 && (obj.limit = (message.limit || helpers_1.Long.UZERO).toString());
        message.countTotal !== void 0 && (obj.countTotal = message.countTotal);
        message.reverse !== void 0 && (obj.reverse = message.reverse);
        return obj;
      },
      fromPartial(object) {
        const message = createBasePageRequest();
        message.key = object.key ?? new Uint8Array();
        message.offset = object.offset !== void 0 && object.offset !== null ? helpers_1.Long.fromValue(object.offset) : helpers_1.Long.UZERO;
        message.limit = object.limit !== void 0 && object.limit !== null ? helpers_1.Long.fromValue(object.limit) : helpers_1.Long.UZERO;
        message.countTotal = object.countTotal ?? false;
        message.reverse = object.reverse ?? false;
        return message;
      }
    };
    function createBasePageResponse() {
      return {
        nextKey: new Uint8Array(),
        total: helpers_1.Long.UZERO
      };
    }
    exports.PageResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.nextKey.length !== 0) {
          writer.uint32(10).bytes(message.nextKey);
        }
        if (!message.total.isZero()) {
          writer.uint32(16).uint64(message.total);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBasePageResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.nextKey = reader.bytes();
              break;
            case 2:
              message.total = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          nextKey: (0, helpers_1.isSet)(object.nextKey) ? (0, helpers_1.bytesFromBase64)(object.nextKey) : new Uint8Array(),
          total: (0, helpers_1.isSet)(object.total) ? helpers_1.Long.fromValue(object.total) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.nextKey !== void 0 && (obj.nextKey = (0, helpers_1.base64FromBytes)(message.nextKey !== void 0 ? message.nextKey : new Uint8Array()));
        message.total !== void 0 && (obj.total = (message.total || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBasePageResponse();
        message.nextKey = object.nextKey ?? new Uint8Array();
        message.total = object.total !== void 0 && object.total !== null ? helpers_1.Long.fromValue(object.total) : helpers_1.Long.UZERO;
        return message;
      }
    };
  }
});

// node_modules/cosmjs-types/cosmos/auth/v1beta1/query.js
var require_query = __commonJS({
  "node_modules/cosmjs-types/cosmos/auth/v1beta1/query.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.QueryClientImpl = exports.QueryModuleAccountByNameResponse = exports.QueryModuleAccountByNameRequest = exports.QueryParamsResponse = exports.QueryParamsRequest = exports.QueryAccountResponse = exports.QueryAccountRequest = exports.QueryAccountsResponse = exports.QueryAccountsRequest = exports.protobufPackage = void 0;
    var pagination_1 = require_pagination();
    var any_1 = require_any();
    var auth_1 = require_auth();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.auth.v1beta1";
    function createBaseQueryAccountsRequest() {
      return {
        pagination: void 0
      };
    }
    exports.QueryAccountsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryAccountsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryAccountsRequest();
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryAccountsResponse() {
      return {
        accounts: [],
        pagination: void 0
      };
    }
    exports.QueryAccountsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.accounts) {
          any_1.Any.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryAccountsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.accounts.push(any_1.Any.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          accounts: Array.isArray(object == null ? void 0 : object.accounts) ? object.accounts.map((e) => any_1.Any.fromJSON(e)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.accounts) {
          obj.accounts = message.accounts.map((e) => e ? any_1.Any.toJSON(e) : void 0);
        } else {
          obj.accounts = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryAccountsResponse();
        message.accounts = ((_a = object.accounts) == null ? void 0 : _a.map((e) => any_1.Any.fromPartial(e))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryAccountRequest() {
      return {
        address: ""
      };
    }
    exports.QueryAccountRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.address !== "") {
          writer.uint32(10).string(message.address);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryAccountRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.address = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          address: (0, helpers_1.isSet)(object.address) ? String(object.address) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.address !== void 0 && (obj.address = message.address);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryAccountRequest();
        message.address = object.address ?? "";
        return message;
      }
    };
    function createBaseQueryAccountResponse() {
      return {
        account: void 0
      };
    }
    exports.QueryAccountResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.account !== void 0) {
          any_1.Any.encode(message.account, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryAccountResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.account = any_1.Any.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          account: (0, helpers_1.isSet)(object.account) ? any_1.Any.fromJSON(object.account) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.account !== void 0 && (obj.account = message.account ? any_1.Any.toJSON(message.account) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryAccountResponse();
        message.account = object.account !== void 0 && object.account !== null ? any_1.Any.fromPartial(object.account) : void 0;
        return message;
      }
    };
    function createBaseQueryParamsRequest() {
      return {};
    }
    exports.QueryParamsRequest = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryParamsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseQueryParamsRequest();
        return message;
      }
    };
    function createBaseQueryParamsResponse() {
      return {
        params: void 0
      };
    }
    exports.QueryParamsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.params !== void 0) {
          auth_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryParamsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.params = auth_1.Params.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          params: (0, helpers_1.isSet)(object.params) ? auth_1.Params.fromJSON(object.params) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.params !== void 0 && (obj.params = message.params ? auth_1.Params.toJSON(message.params) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryParamsResponse();
        message.params = object.params !== void 0 && object.params !== null ? auth_1.Params.fromPartial(object.params) : void 0;
        return message;
      }
    };
    function createBaseQueryModuleAccountByNameRequest() {
      return {
        name: ""
      };
    }
    exports.QueryModuleAccountByNameRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.name !== "") {
          writer.uint32(10).string(message.name);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryModuleAccountByNameRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.name = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          name: (0, helpers_1.isSet)(object.name) ? String(object.name) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.name !== void 0 && (obj.name = message.name);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryModuleAccountByNameRequest();
        message.name = object.name ?? "";
        return message;
      }
    };
    function createBaseQueryModuleAccountByNameResponse() {
      return {
        account: void 0
      };
    }
    exports.QueryModuleAccountByNameResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.account !== void 0) {
          any_1.Any.encode(message.account, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryModuleAccountByNameResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.account = any_1.Any.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          account: (0, helpers_1.isSet)(object.account) ? any_1.Any.fromJSON(object.account) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.account !== void 0 && (obj.account = message.account ? any_1.Any.toJSON(message.account) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryModuleAccountByNameResponse();
        message.account = object.account !== void 0 && object.account !== null ? any_1.Any.fromPartial(object.account) : void 0;
        return message;
      }
    };
    var QueryClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.Accounts = this.Accounts.bind(this);
        this.Account = this.Account.bind(this);
        this.Params = this.Params.bind(this);
        this.ModuleAccountByName = this.ModuleAccountByName.bind(this);
      }
      Accounts(request = {
        pagination: void 0
      }) {
        const data = exports.QueryAccountsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.auth.v1beta1.Query", "Accounts", data);
        return promise.then((data2) => exports.QueryAccountsResponse.decode(new _m0.Reader(data2)));
      }
      Account(request) {
        const data = exports.QueryAccountRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.auth.v1beta1.Query", "Account", data);
        return promise.then((data2) => exports.QueryAccountResponse.decode(new _m0.Reader(data2)));
      }
      Params(request = {}) {
        const data = exports.QueryParamsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.auth.v1beta1.Query", "Params", data);
        return promise.then((data2) => exports.QueryParamsResponse.decode(new _m0.Reader(data2)));
      }
      ModuleAccountByName(request) {
        const data = exports.QueryModuleAccountByNameRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.auth.v1beta1.Query", "ModuleAccountByName", data);
        return promise.then((data2) => exports.QueryModuleAccountByNameResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.QueryClientImpl = QueryClientImpl;
  }
});

// node_modules/@confio/ics23/build/generated/codecimpl.js
var require_codecimpl = __commonJS({
  "node_modules/@confio/ics23/build/generated/codecimpl.js"(exports, module) {
    "use strict";
    var $protobuf = require_minimal();
    var $Reader = $protobuf.Reader;
    var $Writer = $protobuf.Writer;
    var $util = $protobuf.util;
    var $root = $protobuf.roots["default"] || ($protobuf.roots["default"] = {});
    $root.ics23 = function() {
      var ics23 = {};
      ics23.HashOp = function() {
        var valuesById = {}, values = Object.create(valuesById);
        values[valuesById[0] = "NO_HASH"] = 0;
        values[valuesById[1] = "SHA256"] = 1;
        values[valuesById[2] = "SHA512"] = 2;
        values[valuesById[3] = "KECCAK"] = 3;
        values[valuesById[4] = "RIPEMD160"] = 4;
        values[valuesById[5] = "BITCOIN"] = 5;
        values[valuesById[6] = "SHA512_256"] = 6;
        return values;
      }();
      ics23.LengthOp = function() {
        var valuesById = {}, values = Object.create(valuesById);
        values[valuesById[0] = "NO_PREFIX"] = 0;
        values[valuesById[1] = "VAR_PROTO"] = 1;
        values[valuesById[2] = "VAR_RLP"] = 2;
        values[valuesById[3] = "FIXED32_BIG"] = 3;
        values[valuesById[4] = "FIXED32_LITTLE"] = 4;
        values[valuesById[5] = "FIXED64_BIG"] = 5;
        values[valuesById[6] = "FIXED64_LITTLE"] = 6;
        values[valuesById[7] = "REQUIRE_32_BYTES"] = 7;
        values[valuesById[8] = "REQUIRE_64_BYTES"] = 8;
        return values;
      }();
      ics23.ExistenceProof = function() {
        function ExistenceProof(properties) {
          this.path = [];
          if (properties) {
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
              if (properties[keys[i]] != null)
                this[keys[i]] = properties[keys[i]];
          }
        }
        ExistenceProof.prototype.key = $util.newBuffer([]);
        ExistenceProof.prototype.value = $util.newBuffer([]);
        ExistenceProof.prototype.leaf = null;
        ExistenceProof.prototype.path = $util.emptyArray;
        ExistenceProof.create = function create(properties) {
          return new ExistenceProof(properties);
        };
        ExistenceProof.encode = function encode(message, writer) {
          if (!writer)
            writer = $Writer.create();
          if (message.key != null && message.hasOwnProperty("key"))
            writer.uint32(
              /* id 1, wireType 2 =*/
              10
            ).bytes(message.key);
          if (message.value != null && message.hasOwnProperty("value"))
            writer.uint32(
              /* id 2, wireType 2 =*/
              18
            ).bytes(message.value);
          if (message.leaf != null && message.hasOwnProperty("leaf"))
            $root.ics23.LeafOp.encode(message.leaf, writer.uint32(
              /* id 3, wireType 2 =*/
              26
            ).fork()).ldelim();
          if (message.path != null && message.path.length)
            for (var i = 0; i < message.path.length; ++i)
              $root.ics23.InnerOp.encode(message.path[i], writer.uint32(
                /* id 4, wireType 2 =*/
                34
              ).fork()).ldelim();
          return writer;
        };
        ExistenceProof.encodeDelimited = function encodeDelimited(message, writer) {
          return this.encode(message, writer).ldelim();
        };
        ExistenceProof.decode = function decode(reader, length) {
          if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
          var end = length === void 0 ? reader.len : reader.pos + length, message = new $root.ics23.ExistenceProof();
          while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
              case 1:
                message.key = reader.bytes();
                break;
              case 2:
                message.value = reader.bytes();
                break;
              case 3:
                message.leaf = $root.ics23.LeafOp.decode(reader, reader.uint32());
                break;
              case 4:
                if (!(message.path && message.path.length))
                  message.path = [];
                message.path.push($root.ics23.InnerOp.decode(reader, reader.uint32()));
                break;
              default:
                reader.skipType(tag & 7);
                break;
            }
          }
          return message;
        };
        ExistenceProof.decodeDelimited = function decodeDelimited(reader) {
          if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
          return this.decode(reader, reader.uint32());
        };
        ExistenceProof.verify = function verify(message) {
          if (typeof message !== "object" || message === null)
            return "object expected";
          if (message.key != null && message.hasOwnProperty("key")) {
            if (!(message.key && typeof message.key.length === "number" || $util.isString(message.key)))
              return "key: buffer expected";
          }
          if (message.value != null && message.hasOwnProperty("value")) {
            if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
              return "value: buffer expected";
          }
          if (message.leaf != null && message.hasOwnProperty("leaf")) {
            var error = $root.ics23.LeafOp.verify(message.leaf);
            if (error)
              return "leaf." + error;
          }
          if (message.path != null && message.hasOwnProperty("path")) {
            if (!Array.isArray(message.path))
              return "path: array expected";
            for (var i = 0; i < message.path.length; ++i) {
              var error = $root.ics23.InnerOp.verify(message.path[i]);
              if (error)
                return "path." + error;
            }
          }
          return null;
        };
        ExistenceProof.fromObject = function fromObject(object) {
          if (object instanceof $root.ics23.ExistenceProof)
            return object;
          var message = new $root.ics23.ExistenceProof();
          if (object.key != null) {
            if (typeof object.key === "string")
              $util.base64.decode(object.key, message.key = $util.newBuffer($util.base64.length(object.key)), 0);
            else if (object.key.length)
              message.key = object.key;
          }
          if (object.value != null) {
            if (typeof object.value === "string")
              $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
            else if (object.value.length)
              message.value = object.value;
          }
          if (object.leaf != null) {
            if (typeof object.leaf !== "object")
              throw TypeError(".ics23.ExistenceProof.leaf: object expected");
            message.leaf = $root.ics23.LeafOp.fromObject(object.leaf);
          }
          if (object.path) {
            if (!Array.isArray(object.path))
              throw TypeError(".ics23.ExistenceProof.path: array expected");
            message.path = [];
            for (var i = 0; i < object.path.length; ++i) {
              if (typeof object.path[i] !== "object")
                throw TypeError(".ics23.ExistenceProof.path: object expected");
              message.path[i] = $root.ics23.InnerOp.fromObject(object.path[i]);
            }
          }
          return message;
        };
        ExistenceProof.toObject = function toObject(message, options) {
          if (!options)
            options = {};
          var object = {};
          if (options.arrays || options.defaults)
            object.path = [];
          if (options.defaults) {
            if (options.bytes === String)
              object.key = "";
            else {
              object.key = [];
              if (options.bytes !== Array)
                object.key = $util.newBuffer(object.key);
            }
            if (options.bytes === String)
              object.value = "";
            else {
              object.value = [];
              if (options.bytes !== Array)
                object.value = $util.newBuffer(object.value);
            }
            object.leaf = null;
          }
          if (message.key != null && message.hasOwnProperty("key"))
            object.key = options.bytes === String ? $util.base64.encode(message.key, 0, message.key.length) : options.bytes === Array ? Array.prototype.slice.call(message.key) : message.key;
          if (message.value != null && message.hasOwnProperty("value"))
            object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
          if (message.leaf != null && message.hasOwnProperty("leaf"))
            object.leaf = $root.ics23.LeafOp.toObject(message.leaf, options);
          if (message.path && message.path.length) {
            object.path = [];
            for (var j = 0; j < message.path.length; ++j)
              object.path[j] = $root.ics23.InnerOp.toObject(message.path[j], options);
          }
          return object;
        };
        ExistenceProof.prototype.toJSON = function toJSON() {
          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
        return ExistenceProof;
      }();
      ics23.NonExistenceProof = function() {
        function NonExistenceProof(properties) {
          if (properties) {
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
              if (properties[keys[i]] != null)
                this[keys[i]] = properties[keys[i]];
          }
        }
        NonExistenceProof.prototype.key = $util.newBuffer([]);
        NonExistenceProof.prototype.left = null;
        NonExistenceProof.prototype.right = null;
        NonExistenceProof.create = function create(properties) {
          return new NonExistenceProof(properties);
        };
        NonExistenceProof.encode = function encode(message, writer) {
          if (!writer)
            writer = $Writer.create();
          if (message.key != null && message.hasOwnProperty("key"))
            writer.uint32(
              /* id 1, wireType 2 =*/
              10
            ).bytes(message.key);
          if (message.left != null && message.hasOwnProperty("left"))
            $root.ics23.ExistenceProof.encode(message.left, writer.uint32(
              /* id 2, wireType 2 =*/
              18
            ).fork()).ldelim();
          if (message.right != null && message.hasOwnProperty("right"))
            $root.ics23.ExistenceProof.encode(message.right, writer.uint32(
              /* id 3, wireType 2 =*/
              26
            ).fork()).ldelim();
          return writer;
        };
        NonExistenceProof.encodeDelimited = function encodeDelimited(message, writer) {
          return this.encode(message, writer).ldelim();
        };
        NonExistenceProof.decode = function decode(reader, length) {
          if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
          var end = length === void 0 ? reader.len : reader.pos + length, message = new $root.ics23.NonExistenceProof();
          while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
              case 1:
                message.key = reader.bytes();
                break;
              case 2:
                message.left = $root.ics23.ExistenceProof.decode(reader, reader.uint32());
                break;
              case 3:
                message.right = $root.ics23.ExistenceProof.decode(reader, reader.uint32());
                break;
              default:
                reader.skipType(tag & 7);
                break;
            }
          }
          return message;
        };
        NonExistenceProof.decodeDelimited = function decodeDelimited(reader) {
          if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
          return this.decode(reader, reader.uint32());
        };
        NonExistenceProof.verify = function verify(message) {
          if (typeof message !== "object" || message === null)
            return "object expected";
          if (message.key != null && message.hasOwnProperty("key")) {
            if (!(message.key && typeof message.key.length === "number" || $util.isString(message.key)))
              return "key: buffer expected";
          }
          if (message.left != null && message.hasOwnProperty("left")) {
            var error = $root.ics23.ExistenceProof.verify(message.left);
            if (error)
              return "left." + error;
          }
          if (message.right != null && message.hasOwnProperty("right")) {
            var error = $root.ics23.ExistenceProof.verify(message.right);
            if (error)
              return "right." + error;
          }
          return null;
        };
        NonExistenceProof.fromObject = function fromObject(object) {
          if (object instanceof $root.ics23.NonExistenceProof)
            return object;
          var message = new $root.ics23.NonExistenceProof();
          if (object.key != null) {
            if (typeof object.key === "string")
              $util.base64.decode(object.key, message.key = $util.newBuffer($util.base64.length(object.key)), 0);
            else if (object.key.length)
              message.key = object.key;
          }
          if (object.left != null) {
            if (typeof object.left !== "object")
              throw TypeError(".ics23.NonExistenceProof.left: object expected");
            message.left = $root.ics23.ExistenceProof.fromObject(object.left);
          }
          if (object.right != null) {
            if (typeof object.right !== "object")
              throw TypeError(".ics23.NonExistenceProof.right: object expected");
            message.right = $root.ics23.ExistenceProof.fromObject(object.right);
          }
          return message;
        };
        NonExistenceProof.toObject = function toObject(message, options) {
          if (!options)
            options = {};
          var object = {};
          if (options.defaults) {
            if (options.bytes === String)
              object.key = "";
            else {
              object.key = [];
              if (options.bytes !== Array)
                object.key = $util.newBuffer(object.key);
            }
            object.left = null;
            object.right = null;
          }
          if (message.key != null && message.hasOwnProperty("key"))
            object.key = options.bytes === String ? $util.base64.encode(message.key, 0, message.key.length) : options.bytes === Array ? Array.prototype.slice.call(message.key) : message.key;
          if (message.left != null && message.hasOwnProperty("left"))
            object.left = $root.ics23.ExistenceProof.toObject(message.left, options);
          if (message.right != null && message.hasOwnProperty("right"))
            object.right = $root.ics23.ExistenceProof.toObject(message.right, options);
          return object;
        };
        NonExistenceProof.prototype.toJSON = function toJSON() {
          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
        return NonExistenceProof;
      }();
      ics23.CommitmentProof = function() {
        function CommitmentProof(properties) {
          if (properties) {
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
              if (properties[keys[i]] != null)
                this[keys[i]] = properties[keys[i]];
          }
        }
        CommitmentProof.prototype.exist = null;
        CommitmentProof.prototype.nonexist = null;
        CommitmentProof.prototype.batch = null;
        CommitmentProof.prototype.compressed = null;
        var $oneOfFields;
        Object.defineProperty(CommitmentProof.prototype, "proof", {
          get: $util.oneOfGetter($oneOfFields = ["exist", "nonexist", "batch", "compressed"]),
          set: $util.oneOfSetter($oneOfFields)
        });
        CommitmentProof.create = function create(properties) {
          return new CommitmentProof(properties);
        };
        CommitmentProof.encode = function encode(message, writer) {
          if (!writer)
            writer = $Writer.create();
          if (message.exist != null && message.hasOwnProperty("exist"))
            $root.ics23.ExistenceProof.encode(message.exist, writer.uint32(
              /* id 1, wireType 2 =*/
              10
            ).fork()).ldelim();
          if (message.nonexist != null && message.hasOwnProperty("nonexist"))
            $root.ics23.NonExistenceProof.encode(message.nonexist, writer.uint32(
              /* id 2, wireType 2 =*/
              18
            ).fork()).ldelim();
          if (message.batch != null && message.hasOwnProperty("batch"))
            $root.ics23.BatchProof.encode(message.batch, writer.uint32(
              /* id 3, wireType 2 =*/
              26
            ).fork()).ldelim();
          if (message.compressed != null && message.hasOwnProperty("compressed"))
            $root.ics23.CompressedBatchProof.encode(message.compressed, writer.uint32(
              /* id 4, wireType 2 =*/
              34
            ).fork()).ldelim();
          return writer;
        };
        CommitmentProof.encodeDelimited = function encodeDelimited(message, writer) {
          return this.encode(message, writer).ldelim();
        };
        CommitmentProof.decode = function decode(reader, length) {
          if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
          var end = length === void 0 ? reader.len : reader.pos + length, message = new $root.ics23.CommitmentProof();
          while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
              case 1:
                message.exist = $root.ics23.ExistenceProof.decode(reader, reader.uint32());
                break;
              case 2:
                message.nonexist = $root.ics23.NonExistenceProof.decode(reader, reader.uint32());
                break;
              case 3:
                message.batch = $root.ics23.BatchProof.decode(reader, reader.uint32());
                break;
              case 4:
                message.compressed = $root.ics23.CompressedBatchProof.decode(reader, reader.uint32());
                break;
              default:
                reader.skipType(tag & 7);
                break;
            }
          }
          return message;
        };
        CommitmentProof.decodeDelimited = function decodeDelimited(reader) {
          if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
          return this.decode(reader, reader.uint32());
        };
        CommitmentProof.verify = function verify(message) {
          if (typeof message !== "object" || message === null)
            return "object expected";
          var properties = {};
          if (message.exist != null && message.hasOwnProperty("exist")) {
            properties.proof = 1;
            {
              var error = $root.ics23.ExistenceProof.verify(message.exist);
              if (error)
                return "exist." + error;
            }
          }
          if (message.nonexist != null && message.hasOwnProperty("nonexist")) {
            if (properties.proof === 1)
              return "proof: multiple values";
            properties.proof = 1;
            {
              var error = $root.ics23.NonExistenceProof.verify(message.nonexist);
              if (error)
                return "nonexist." + error;
            }
          }
          if (message.batch != null && message.hasOwnProperty("batch")) {
            if (properties.proof === 1)
              return "proof: multiple values";
            properties.proof = 1;
            {
              var error = $root.ics23.BatchProof.verify(message.batch);
              if (error)
                return "batch." + error;
            }
          }
          if (message.compressed != null && message.hasOwnProperty("compressed")) {
            if (properties.proof === 1)
              return "proof: multiple values";
            properties.proof = 1;
            {
              var error = $root.ics23.CompressedBatchProof.verify(message.compressed);
              if (error)
                return "compressed." + error;
            }
          }
          return null;
        };
        CommitmentProof.fromObject = function fromObject(object) {
          if (object instanceof $root.ics23.CommitmentProof)
            return object;
          var message = new $root.ics23.CommitmentProof();
          if (object.exist != null) {
            if (typeof object.exist !== "object")
              throw TypeError(".ics23.CommitmentProof.exist: object expected");
            message.exist = $root.ics23.ExistenceProof.fromObject(object.exist);
          }
          if (object.nonexist != null) {
            if (typeof object.nonexist !== "object")
              throw TypeError(".ics23.CommitmentProof.nonexist: object expected");
            message.nonexist = $root.ics23.NonExistenceProof.fromObject(object.nonexist);
          }
          if (object.batch != null) {
            if (typeof object.batch !== "object")
              throw TypeError(".ics23.CommitmentProof.batch: object expected");
            message.batch = $root.ics23.BatchProof.fromObject(object.batch);
          }
          if (object.compressed != null) {
            if (typeof object.compressed !== "object")
              throw TypeError(".ics23.CommitmentProof.compressed: object expected");
            message.compressed = $root.ics23.CompressedBatchProof.fromObject(object.compressed);
          }
          return message;
        };
        CommitmentProof.toObject = function toObject(message, options) {
          if (!options)
            options = {};
          var object = {};
          if (message.exist != null && message.hasOwnProperty("exist")) {
            object.exist = $root.ics23.ExistenceProof.toObject(message.exist, options);
            if (options.oneofs)
              object.proof = "exist";
          }
          if (message.nonexist != null && message.hasOwnProperty("nonexist")) {
            object.nonexist = $root.ics23.NonExistenceProof.toObject(message.nonexist, options);
            if (options.oneofs)
              object.proof = "nonexist";
          }
          if (message.batch != null && message.hasOwnProperty("batch")) {
            object.batch = $root.ics23.BatchProof.toObject(message.batch, options);
            if (options.oneofs)
              object.proof = "batch";
          }
          if (message.compressed != null && message.hasOwnProperty("compressed")) {
            object.compressed = $root.ics23.CompressedBatchProof.toObject(message.compressed, options);
            if (options.oneofs)
              object.proof = "compressed";
          }
          return object;
        };
        CommitmentProof.prototype.toJSON = function toJSON() {
          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
        return CommitmentProof;
      }();
      ics23.LeafOp = function() {
        function LeafOp(properties) {
          if (properties) {
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
              if (properties[keys[i]] != null)
                this[keys[i]] = properties[keys[i]];
          }
        }
        LeafOp.prototype.hash = 0;
        LeafOp.prototype.prehashKey = 0;
        LeafOp.prototype.prehashValue = 0;
        LeafOp.prototype.length = 0;
        LeafOp.prototype.prefix = $util.newBuffer([]);
        LeafOp.create = function create(properties) {
          return new LeafOp(properties);
        };
        LeafOp.encode = function encode(message, writer) {
          if (!writer)
            writer = $Writer.create();
          if (message.hash != null && message.hasOwnProperty("hash"))
            writer.uint32(
              /* id 1, wireType 0 =*/
              8
            ).int32(message.hash);
          if (message.prehashKey != null && message.hasOwnProperty("prehashKey"))
            writer.uint32(
              /* id 2, wireType 0 =*/
              16
            ).int32(message.prehashKey);
          if (message.prehashValue != null && message.hasOwnProperty("prehashValue"))
            writer.uint32(
              /* id 3, wireType 0 =*/
              24
            ).int32(message.prehashValue);
          if (message.length != null && message.hasOwnProperty("length"))
            writer.uint32(
              /* id 4, wireType 0 =*/
              32
            ).int32(message.length);
          if (message.prefix != null && message.hasOwnProperty("prefix"))
            writer.uint32(
              /* id 5, wireType 2 =*/
              42
            ).bytes(message.prefix);
          return writer;
        };
        LeafOp.encodeDelimited = function encodeDelimited(message, writer) {
          return this.encode(message, writer).ldelim();
        };
        LeafOp.decode = function decode(reader, length) {
          if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
          var end = length === void 0 ? reader.len : reader.pos + length, message = new $root.ics23.LeafOp();
          while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
              case 1:
                message.hash = reader.int32();
                break;
              case 2:
                message.prehashKey = reader.int32();
                break;
              case 3:
                message.prehashValue = reader.int32();
                break;
              case 4:
                message.length = reader.int32();
                break;
              case 5:
                message.prefix = reader.bytes();
                break;
              default:
                reader.skipType(tag & 7);
                break;
            }
          }
          return message;
        };
        LeafOp.decodeDelimited = function decodeDelimited(reader) {
          if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
          return this.decode(reader, reader.uint32());
        };
        LeafOp.verify = function verify(message) {
          if (typeof message !== "object" || message === null)
            return "object expected";
          if (message.hash != null && message.hasOwnProperty("hash"))
            switch (message.hash) {
              default:
                return "hash: enum value expected";
              case 0:
              case 1:
              case 2:
              case 3:
              case 4:
              case 5:
              case 6:
                break;
            }
          if (message.prehashKey != null && message.hasOwnProperty("prehashKey"))
            switch (message.prehashKey) {
              default:
                return "prehashKey: enum value expected";
              case 0:
              case 1:
              case 2:
              case 3:
              case 4:
              case 5:
              case 6:
                break;
            }
          if (message.prehashValue != null && message.hasOwnProperty("prehashValue"))
            switch (message.prehashValue) {
              default:
                return "prehashValue: enum value expected";
              case 0:
              case 1:
              case 2:
              case 3:
              case 4:
              case 5:
              case 6:
                break;
            }
          if (message.length != null && message.hasOwnProperty("length"))
            switch (message.length) {
              default:
                return "length: enum value expected";
              case 0:
              case 1:
              case 2:
              case 3:
              case 4:
              case 5:
              case 6:
              case 7:
              case 8:
                break;
            }
          if (message.prefix != null && message.hasOwnProperty("prefix")) {
            if (!(message.prefix && typeof message.prefix.length === "number" || $util.isString(message.prefix)))
              return "prefix: buffer expected";
          }
          return null;
        };
        LeafOp.fromObject = function fromObject(object) {
          if (object instanceof $root.ics23.LeafOp)
            return object;
          var message = new $root.ics23.LeafOp();
          switch (object.hash) {
            case "NO_HASH":
            case 0:
              message.hash = 0;
              break;
            case "SHA256":
            case 1:
              message.hash = 1;
              break;
            case "SHA512":
            case 2:
              message.hash = 2;
              break;
            case "KECCAK":
            case 3:
              message.hash = 3;
              break;
            case "RIPEMD160":
            case 4:
              message.hash = 4;
              break;
            case "BITCOIN":
            case 5:
              message.hash = 5;
              break;
            case "SHA512_256":
            case 6:
              message.hash = 6;
              break;
          }
          switch (object.prehashKey) {
            case "NO_HASH":
            case 0:
              message.prehashKey = 0;
              break;
            case "SHA256":
            case 1:
              message.prehashKey = 1;
              break;
            case "SHA512":
            case 2:
              message.prehashKey = 2;
              break;
            case "KECCAK":
            case 3:
              message.prehashKey = 3;
              break;
            case "RIPEMD160":
            case 4:
              message.prehashKey = 4;
              break;
            case "BITCOIN":
            case 5:
              message.prehashKey = 5;
              break;
            case "SHA512_256":
            case 6:
              message.prehashKey = 6;
              break;
          }
          switch (object.prehashValue) {
            case "NO_HASH":
            case 0:
              message.prehashValue = 0;
              break;
            case "SHA256":
            case 1:
              message.prehashValue = 1;
              break;
            case "SHA512":
            case 2:
              message.prehashValue = 2;
              break;
            case "KECCAK":
            case 3:
              message.prehashValue = 3;
              break;
            case "RIPEMD160":
            case 4:
              message.prehashValue = 4;
              break;
            case "BITCOIN":
            case 5:
              message.prehashValue = 5;
              break;
            case "SHA512_256":
            case 6:
              message.prehashValue = 6;
              break;
          }
          switch (object.length) {
            case "NO_PREFIX":
            case 0:
              message.length = 0;
              break;
            case "VAR_PROTO":
            case 1:
              message.length = 1;
              break;
            case "VAR_RLP":
            case 2:
              message.length = 2;
              break;
            case "FIXED32_BIG":
            case 3:
              message.length = 3;
              break;
            case "FIXED32_LITTLE":
            case 4:
              message.length = 4;
              break;
            case "FIXED64_BIG":
            case 5:
              message.length = 5;
              break;
            case "FIXED64_LITTLE":
            case 6:
              message.length = 6;
              break;
            case "REQUIRE_32_BYTES":
            case 7:
              message.length = 7;
              break;
            case "REQUIRE_64_BYTES":
            case 8:
              message.length = 8;
              break;
          }
          if (object.prefix != null) {
            if (typeof object.prefix === "string")
              $util.base64.decode(object.prefix, message.prefix = $util.newBuffer($util.base64.length(object.prefix)), 0);
            else if (object.prefix.length)
              message.prefix = object.prefix;
          }
          return message;
        };
        LeafOp.toObject = function toObject(message, options) {
          if (!options)
            options = {};
          var object = {};
          if (options.defaults) {
            object.hash = options.enums === String ? "NO_HASH" : 0;
            object.prehashKey = options.enums === String ? "NO_HASH" : 0;
            object.prehashValue = options.enums === String ? "NO_HASH" : 0;
            object.length = options.enums === String ? "NO_PREFIX" : 0;
            if (options.bytes === String)
              object.prefix = "";
            else {
              object.prefix = [];
              if (options.bytes !== Array)
                object.prefix = $util.newBuffer(object.prefix);
            }
          }
          if (message.hash != null && message.hasOwnProperty("hash"))
            object.hash = options.enums === String ? $root.ics23.HashOp[message.hash] : message.hash;
          if (message.prehashKey != null && message.hasOwnProperty("prehashKey"))
            object.prehashKey = options.enums === String ? $root.ics23.HashOp[message.prehashKey] : message.prehashKey;
          if (message.prehashValue != null && message.hasOwnProperty("prehashValue"))
            object.prehashValue = options.enums === String ? $root.ics23.HashOp[message.prehashValue] : message.prehashValue;
          if (message.length != null && message.hasOwnProperty("length"))
            object.length = options.enums === String ? $root.ics23.LengthOp[message.length] : message.length;
          if (message.prefix != null && message.hasOwnProperty("prefix"))
            object.prefix = options.bytes === String ? $util.base64.encode(message.prefix, 0, message.prefix.length) : options.bytes === Array ? Array.prototype.slice.call(message.prefix) : message.prefix;
          return object;
        };
        LeafOp.prototype.toJSON = function toJSON() {
          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
        return LeafOp;
      }();
      ics23.InnerOp = function() {
        function InnerOp(properties) {
          if (properties) {
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
              if (properties[keys[i]] != null)
                this[keys[i]] = properties[keys[i]];
          }
        }
        InnerOp.prototype.hash = 0;
        InnerOp.prototype.prefix = $util.newBuffer([]);
        InnerOp.prototype.suffix = $util.newBuffer([]);
        InnerOp.create = function create(properties) {
          return new InnerOp(properties);
        };
        InnerOp.encode = function encode(message, writer) {
          if (!writer)
            writer = $Writer.create();
          if (message.hash != null && message.hasOwnProperty("hash"))
            writer.uint32(
              /* id 1, wireType 0 =*/
              8
            ).int32(message.hash);
          if (message.prefix != null && message.hasOwnProperty("prefix"))
            writer.uint32(
              /* id 2, wireType 2 =*/
              18
            ).bytes(message.prefix);
          if (message.suffix != null && message.hasOwnProperty("suffix"))
            writer.uint32(
              /* id 3, wireType 2 =*/
              26
            ).bytes(message.suffix);
          return writer;
        };
        InnerOp.encodeDelimited = function encodeDelimited(message, writer) {
          return this.encode(message, writer).ldelim();
        };
        InnerOp.decode = function decode(reader, length) {
          if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
          var end = length === void 0 ? reader.len : reader.pos + length, message = new $root.ics23.InnerOp();
          while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
              case 1:
                message.hash = reader.int32();
                break;
              case 2:
                message.prefix = reader.bytes();
                break;
              case 3:
                message.suffix = reader.bytes();
                break;
              default:
                reader.skipType(tag & 7);
                break;
            }
          }
          return message;
        };
        InnerOp.decodeDelimited = function decodeDelimited(reader) {
          if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
          return this.decode(reader, reader.uint32());
        };
        InnerOp.verify = function verify(message) {
          if (typeof message !== "object" || message === null)
            return "object expected";
          if (message.hash != null && message.hasOwnProperty("hash"))
            switch (message.hash) {
              default:
                return "hash: enum value expected";
              case 0:
              case 1:
              case 2:
              case 3:
              case 4:
              case 5:
              case 6:
                break;
            }
          if (message.prefix != null && message.hasOwnProperty("prefix")) {
            if (!(message.prefix && typeof message.prefix.length === "number" || $util.isString(message.prefix)))
              return "prefix: buffer expected";
          }
          if (message.suffix != null && message.hasOwnProperty("suffix")) {
            if (!(message.suffix && typeof message.suffix.length === "number" || $util.isString(message.suffix)))
              return "suffix: buffer expected";
          }
          return null;
        };
        InnerOp.fromObject = function fromObject(object) {
          if (object instanceof $root.ics23.InnerOp)
            return object;
          var message = new $root.ics23.InnerOp();
          switch (object.hash) {
            case "NO_HASH":
            case 0:
              message.hash = 0;
              break;
            case "SHA256":
            case 1:
              message.hash = 1;
              break;
            case "SHA512":
            case 2:
              message.hash = 2;
              break;
            case "KECCAK":
            case 3:
              message.hash = 3;
              break;
            case "RIPEMD160":
            case 4:
              message.hash = 4;
              break;
            case "BITCOIN":
            case 5:
              message.hash = 5;
              break;
            case "SHA512_256":
            case 6:
              message.hash = 6;
              break;
          }
          if (object.prefix != null) {
            if (typeof object.prefix === "string")
              $util.base64.decode(object.prefix, message.prefix = $util.newBuffer($util.base64.length(object.prefix)), 0);
            else if (object.prefix.length)
              message.prefix = object.prefix;
          }
          if (object.suffix != null) {
            if (typeof object.suffix === "string")
              $util.base64.decode(object.suffix, message.suffix = $util.newBuffer($util.base64.length(object.suffix)), 0);
            else if (object.suffix.length)
              message.suffix = object.suffix;
          }
          return message;
        };
        InnerOp.toObject = function toObject(message, options) {
          if (!options)
            options = {};
          var object = {};
          if (options.defaults) {
            object.hash = options.enums === String ? "NO_HASH" : 0;
            if (options.bytes === String)
              object.prefix = "";
            else {
              object.prefix = [];
              if (options.bytes !== Array)
                object.prefix = $util.newBuffer(object.prefix);
            }
            if (options.bytes === String)
              object.suffix = "";
            else {
              object.suffix = [];
              if (options.bytes !== Array)
                object.suffix = $util.newBuffer(object.suffix);
            }
          }
          if (message.hash != null && message.hasOwnProperty("hash"))
            object.hash = options.enums === String ? $root.ics23.HashOp[message.hash] : message.hash;
          if (message.prefix != null && message.hasOwnProperty("prefix"))
            object.prefix = options.bytes === String ? $util.base64.encode(message.prefix, 0, message.prefix.length) : options.bytes === Array ? Array.prototype.slice.call(message.prefix) : message.prefix;
          if (message.suffix != null && message.hasOwnProperty("suffix"))
            object.suffix = options.bytes === String ? $util.base64.encode(message.suffix, 0, message.suffix.length) : options.bytes === Array ? Array.prototype.slice.call(message.suffix) : message.suffix;
          return object;
        };
        InnerOp.prototype.toJSON = function toJSON() {
          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
        return InnerOp;
      }();
      ics23.ProofSpec = function() {
        function ProofSpec(properties) {
          if (properties) {
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
              if (properties[keys[i]] != null)
                this[keys[i]] = properties[keys[i]];
          }
        }
        ProofSpec.prototype.leafSpec = null;
        ProofSpec.prototype.innerSpec = null;
        ProofSpec.prototype.maxDepth = 0;
        ProofSpec.prototype.minDepth = 0;
        ProofSpec.create = function create(properties) {
          return new ProofSpec(properties);
        };
        ProofSpec.encode = function encode(message, writer) {
          if (!writer)
            writer = $Writer.create();
          if (message.leafSpec != null && message.hasOwnProperty("leafSpec"))
            $root.ics23.LeafOp.encode(message.leafSpec, writer.uint32(
              /* id 1, wireType 2 =*/
              10
            ).fork()).ldelim();
          if (message.innerSpec != null && message.hasOwnProperty("innerSpec"))
            $root.ics23.InnerSpec.encode(message.innerSpec, writer.uint32(
              /* id 2, wireType 2 =*/
              18
            ).fork()).ldelim();
          if (message.maxDepth != null && message.hasOwnProperty("maxDepth"))
            writer.uint32(
              /* id 3, wireType 0 =*/
              24
            ).int32(message.maxDepth);
          if (message.minDepth != null && message.hasOwnProperty("minDepth"))
            writer.uint32(
              /* id 4, wireType 0 =*/
              32
            ).int32(message.minDepth);
          return writer;
        };
        ProofSpec.encodeDelimited = function encodeDelimited(message, writer) {
          return this.encode(message, writer).ldelim();
        };
        ProofSpec.decode = function decode(reader, length) {
          if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
          var end = length === void 0 ? reader.len : reader.pos + length, message = new $root.ics23.ProofSpec();
          while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
              case 1:
                message.leafSpec = $root.ics23.LeafOp.decode(reader, reader.uint32());
                break;
              case 2:
                message.innerSpec = $root.ics23.InnerSpec.decode(reader, reader.uint32());
                break;
              case 3:
                message.maxDepth = reader.int32();
                break;
              case 4:
                message.minDepth = reader.int32();
                break;
              default:
                reader.skipType(tag & 7);
                break;
            }
          }
          return message;
        };
        ProofSpec.decodeDelimited = function decodeDelimited(reader) {
          if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
          return this.decode(reader, reader.uint32());
        };
        ProofSpec.verify = function verify(message) {
          if (typeof message !== "object" || message === null)
            return "object expected";
          if (message.leafSpec != null && message.hasOwnProperty("leafSpec")) {
            var error = $root.ics23.LeafOp.verify(message.leafSpec);
            if (error)
              return "leafSpec." + error;
          }
          if (message.innerSpec != null && message.hasOwnProperty("innerSpec")) {
            var error = $root.ics23.InnerSpec.verify(message.innerSpec);
            if (error)
              return "innerSpec." + error;
          }
          if (message.maxDepth != null && message.hasOwnProperty("maxDepth")) {
            if (!$util.isInteger(message.maxDepth))
              return "maxDepth: integer expected";
          }
          if (message.minDepth != null && message.hasOwnProperty("minDepth")) {
            if (!$util.isInteger(message.minDepth))
              return "minDepth: integer expected";
          }
          return null;
        };
        ProofSpec.fromObject = function fromObject(object) {
          if (object instanceof $root.ics23.ProofSpec)
            return object;
          var message = new $root.ics23.ProofSpec();
          if (object.leafSpec != null) {
            if (typeof object.leafSpec !== "object")
              throw TypeError(".ics23.ProofSpec.leafSpec: object expected");
            message.leafSpec = $root.ics23.LeafOp.fromObject(object.leafSpec);
          }
          if (object.innerSpec != null) {
            if (typeof object.innerSpec !== "object")
              throw TypeError(".ics23.ProofSpec.innerSpec: object expected");
            message.innerSpec = $root.ics23.InnerSpec.fromObject(object.innerSpec);
          }
          if (object.maxDepth != null)
            message.maxDepth = object.maxDepth | 0;
          if (object.minDepth != null)
            message.minDepth = object.minDepth | 0;
          return message;
        };
        ProofSpec.toObject = function toObject(message, options) {
          if (!options)
            options = {};
          var object = {};
          if (options.defaults) {
            object.leafSpec = null;
            object.innerSpec = null;
            object.maxDepth = 0;
            object.minDepth = 0;
          }
          if (message.leafSpec != null && message.hasOwnProperty("leafSpec"))
            object.leafSpec = $root.ics23.LeafOp.toObject(message.leafSpec, options);
          if (message.innerSpec != null && message.hasOwnProperty("innerSpec"))
            object.innerSpec = $root.ics23.InnerSpec.toObject(message.innerSpec, options);
          if (message.maxDepth != null && message.hasOwnProperty("maxDepth"))
            object.maxDepth = message.maxDepth;
          if (message.minDepth != null && message.hasOwnProperty("minDepth"))
            object.minDepth = message.minDepth;
          return object;
        };
        ProofSpec.prototype.toJSON = function toJSON() {
          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
        return ProofSpec;
      }();
      ics23.InnerSpec = function() {
        function InnerSpec(properties) {
          this.childOrder = [];
          if (properties) {
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
              if (properties[keys[i]] != null)
                this[keys[i]] = properties[keys[i]];
          }
        }
        InnerSpec.prototype.childOrder = $util.emptyArray;
        InnerSpec.prototype.childSize = 0;
        InnerSpec.prototype.minPrefixLength = 0;
        InnerSpec.prototype.maxPrefixLength = 0;
        InnerSpec.prototype.emptyChild = $util.newBuffer([]);
        InnerSpec.prototype.hash = 0;
        InnerSpec.create = function create(properties) {
          return new InnerSpec(properties);
        };
        InnerSpec.encode = function encode(message, writer) {
          if (!writer)
            writer = $Writer.create();
          if (message.childOrder != null && message.childOrder.length) {
            writer.uint32(
              /* id 1, wireType 2 =*/
              10
            ).fork();
            for (var i = 0; i < message.childOrder.length; ++i)
              writer.int32(message.childOrder[i]);
            writer.ldelim();
          }
          if (message.childSize != null && message.hasOwnProperty("childSize"))
            writer.uint32(
              /* id 2, wireType 0 =*/
              16
            ).int32(message.childSize);
          if (message.minPrefixLength != null && message.hasOwnProperty("minPrefixLength"))
            writer.uint32(
              /* id 3, wireType 0 =*/
              24
            ).int32(message.minPrefixLength);
          if (message.maxPrefixLength != null && message.hasOwnProperty("maxPrefixLength"))
            writer.uint32(
              /* id 4, wireType 0 =*/
              32
            ).int32(message.maxPrefixLength);
          if (message.emptyChild != null && message.hasOwnProperty("emptyChild"))
            writer.uint32(
              /* id 5, wireType 2 =*/
              42
            ).bytes(message.emptyChild);
          if (message.hash != null && message.hasOwnProperty("hash"))
            writer.uint32(
              /* id 6, wireType 0 =*/
              48
            ).int32(message.hash);
          return writer;
        };
        InnerSpec.encodeDelimited = function encodeDelimited(message, writer) {
          return this.encode(message, writer).ldelim();
        };
        InnerSpec.decode = function decode(reader, length) {
          if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
          var end = length === void 0 ? reader.len : reader.pos + length, message = new $root.ics23.InnerSpec();
          while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
              case 1:
                if (!(message.childOrder && message.childOrder.length))
                  message.childOrder = [];
                if ((tag & 7) === 2) {
                  var end2 = reader.uint32() + reader.pos;
                  while (reader.pos < end2)
                    message.childOrder.push(reader.int32());
                } else
                  message.childOrder.push(reader.int32());
                break;
              case 2:
                message.childSize = reader.int32();
                break;
              case 3:
                message.minPrefixLength = reader.int32();
                break;
              case 4:
                message.maxPrefixLength = reader.int32();
                break;
              case 5:
                message.emptyChild = reader.bytes();
                break;
              case 6:
                message.hash = reader.int32();
                break;
              default:
                reader.skipType(tag & 7);
                break;
            }
          }
          return message;
        };
        InnerSpec.decodeDelimited = function decodeDelimited(reader) {
          if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
          return this.decode(reader, reader.uint32());
        };
        InnerSpec.verify = function verify(message) {
          if (typeof message !== "object" || message === null)
            return "object expected";
          if (message.childOrder != null && message.hasOwnProperty("childOrder")) {
            if (!Array.isArray(message.childOrder))
              return "childOrder: array expected";
            for (var i = 0; i < message.childOrder.length; ++i)
              if (!$util.isInteger(message.childOrder[i]))
                return "childOrder: integer[] expected";
          }
          if (message.childSize != null && message.hasOwnProperty("childSize")) {
            if (!$util.isInteger(message.childSize))
              return "childSize: integer expected";
          }
          if (message.minPrefixLength != null && message.hasOwnProperty("minPrefixLength")) {
            if (!$util.isInteger(message.minPrefixLength))
              return "minPrefixLength: integer expected";
          }
          if (message.maxPrefixLength != null && message.hasOwnProperty("maxPrefixLength")) {
            if (!$util.isInteger(message.maxPrefixLength))
              return "maxPrefixLength: integer expected";
          }
          if (message.emptyChild != null && message.hasOwnProperty("emptyChild")) {
            if (!(message.emptyChild && typeof message.emptyChild.length === "number" || $util.isString(message.emptyChild)))
              return "emptyChild: buffer expected";
          }
          if (message.hash != null && message.hasOwnProperty("hash"))
            switch (message.hash) {
              default:
                return "hash: enum value expected";
              case 0:
              case 1:
              case 2:
              case 3:
              case 4:
              case 5:
              case 6:
                break;
            }
          return null;
        };
        InnerSpec.fromObject = function fromObject(object) {
          if (object instanceof $root.ics23.InnerSpec)
            return object;
          var message = new $root.ics23.InnerSpec();
          if (object.childOrder) {
            if (!Array.isArray(object.childOrder))
              throw TypeError(".ics23.InnerSpec.childOrder: array expected");
            message.childOrder = [];
            for (var i = 0; i < object.childOrder.length; ++i)
              message.childOrder[i] = object.childOrder[i] | 0;
          }
          if (object.childSize != null)
            message.childSize = object.childSize | 0;
          if (object.minPrefixLength != null)
            message.minPrefixLength = object.minPrefixLength | 0;
          if (object.maxPrefixLength != null)
            message.maxPrefixLength = object.maxPrefixLength | 0;
          if (object.emptyChild != null) {
            if (typeof object.emptyChild === "string")
              $util.base64.decode(object.emptyChild, message.emptyChild = $util.newBuffer($util.base64.length(object.emptyChild)), 0);
            else if (object.emptyChild.length)
              message.emptyChild = object.emptyChild;
          }
          switch (object.hash) {
            case "NO_HASH":
            case 0:
              message.hash = 0;
              break;
            case "SHA256":
            case 1:
              message.hash = 1;
              break;
            case "SHA512":
            case 2:
              message.hash = 2;
              break;
            case "KECCAK":
            case 3:
              message.hash = 3;
              break;
            case "RIPEMD160":
            case 4:
              message.hash = 4;
              break;
            case "BITCOIN":
            case 5:
              message.hash = 5;
              break;
            case "SHA512_256":
            case 6:
              message.hash = 6;
              break;
          }
          return message;
        };
        InnerSpec.toObject = function toObject(message, options) {
          if (!options)
            options = {};
          var object = {};
          if (options.arrays || options.defaults)
            object.childOrder = [];
          if (options.defaults) {
            object.childSize = 0;
            object.minPrefixLength = 0;
            object.maxPrefixLength = 0;
            if (options.bytes === String)
              object.emptyChild = "";
            else {
              object.emptyChild = [];
              if (options.bytes !== Array)
                object.emptyChild = $util.newBuffer(object.emptyChild);
            }
            object.hash = options.enums === String ? "NO_HASH" : 0;
          }
          if (message.childOrder && message.childOrder.length) {
            object.childOrder = [];
            for (var j = 0; j < message.childOrder.length; ++j)
              object.childOrder[j] = message.childOrder[j];
          }
          if (message.childSize != null && message.hasOwnProperty("childSize"))
            object.childSize = message.childSize;
          if (message.minPrefixLength != null && message.hasOwnProperty("minPrefixLength"))
            object.minPrefixLength = message.minPrefixLength;
          if (message.maxPrefixLength != null && message.hasOwnProperty("maxPrefixLength"))
            object.maxPrefixLength = message.maxPrefixLength;
          if (message.emptyChild != null && message.hasOwnProperty("emptyChild"))
            object.emptyChild = options.bytes === String ? $util.base64.encode(message.emptyChild, 0, message.emptyChild.length) : options.bytes === Array ? Array.prototype.slice.call(message.emptyChild) : message.emptyChild;
          if (message.hash != null && message.hasOwnProperty("hash"))
            object.hash = options.enums === String ? $root.ics23.HashOp[message.hash] : message.hash;
          return object;
        };
        InnerSpec.prototype.toJSON = function toJSON() {
          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
        return InnerSpec;
      }();
      ics23.BatchProof = function() {
        function BatchProof(properties) {
          this.entries = [];
          if (properties) {
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
              if (properties[keys[i]] != null)
                this[keys[i]] = properties[keys[i]];
          }
        }
        BatchProof.prototype.entries = $util.emptyArray;
        BatchProof.create = function create(properties) {
          return new BatchProof(properties);
        };
        BatchProof.encode = function encode(message, writer) {
          if (!writer)
            writer = $Writer.create();
          if (message.entries != null && message.entries.length)
            for (var i = 0; i < message.entries.length; ++i)
              $root.ics23.BatchEntry.encode(message.entries[i], writer.uint32(
                /* id 1, wireType 2 =*/
                10
              ).fork()).ldelim();
          return writer;
        };
        BatchProof.encodeDelimited = function encodeDelimited(message, writer) {
          return this.encode(message, writer).ldelim();
        };
        BatchProof.decode = function decode(reader, length) {
          if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
          var end = length === void 0 ? reader.len : reader.pos + length, message = new $root.ics23.BatchProof();
          while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
              case 1:
                if (!(message.entries && message.entries.length))
                  message.entries = [];
                message.entries.push($root.ics23.BatchEntry.decode(reader, reader.uint32()));
                break;
              default:
                reader.skipType(tag & 7);
                break;
            }
          }
          return message;
        };
        BatchProof.decodeDelimited = function decodeDelimited(reader) {
          if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
          return this.decode(reader, reader.uint32());
        };
        BatchProof.verify = function verify(message) {
          if (typeof message !== "object" || message === null)
            return "object expected";
          if (message.entries != null && message.hasOwnProperty("entries")) {
            if (!Array.isArray(message.entries))
              return "entries: array expected";
            for (var i = 0; i < message.entries.length; ++i) {
              var error = $root.ics23.BatchEntry.verify(message.entries[i]);
              if (error)
                return "entries." + error;
            }
          }
          return null;
        };
        BatchProof.fromObject = function fromObject(object) {
          if (object instanceof $root.ics23.BatchProof)
            return object;
          var message = new $root.ics23.BatchProof();
          if (object.entries) {
            if (!Array.isArray(object.entries))
              throw TypeError(".ics23.BatchProof.entries: array expected");
            message.entries = [];
            for (var i = 0; i < object.entries.length; ++i) {
              if (typeof object.entries[i] !== "object")
                throw TypeError(".ics23.BatchProof.entries: object expected");
              message.entries[i] = $root.ics23.BatchEntry.fromObject(object.entries[i]);
            }
          }
          return message;
        };
        BatchProof.toObject = function toObject(message, options) {
          if (!options)
            options = {};
          var object = {};
          if (options.arrays || options.defaults)
            object.entries = [];
          if (message.entries && message.entries.length) {
            object.entries = [];
            for (var j = 0; j < message.entries.length; ++j)
              object.entries[j] = $root.ics23.BatchEntry.toObject(message.entries[j], options);
          }
          return object;
        };
        BatchProof.prototype.toJSON = function toJSON() {
          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
        return BatchProof;
      }();
      ics23.BatchEntry = function() {
        function BatchEntry(properties) {
          if (properties) {
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
              if (properties[keys[i]] != null)
                this[keys[i]] = properties[keys[i]];
          }
        }
        BatchEntry.prototype.exist = null;
        BatchEntry.prototype.nonexist = null;
        var $oneOfFields;
        Object.defineProperty(BatchEntry.prototype, "proof", {
          get: $util.oneOfGetter($oneOfFields = ["exist", "nonexist"]),
          set: $util.oneOfSetter($oneOfFields)
        });
        BatchEntry.create = function create(properties) {
          return new BatchEntry(properties);
        };
        BatchEntry.encode = function encode(message, writer) {
          if (!writer)
            writer = $Writer.create();
          if (message.exist != null && message.hasOwnProperty("exist"))
            $root.ics23.ExistenceProof.encode(message.exist, writer.uint32(
              /* id 1, wireType 2 =*/
              10
            ).fork()).ldelim();
          if (message.nonexist != null && message.hasOwnProperty("nonexist"))
            $root.ics23.NonExistenceProof.encode(message.nonexist, writer.uint32(
              /* id 2, wireType 2 =*/
              18
            ).fork()).ldelim();
          return writer;
        };
        BatchEntry.encodeDelimited = function encodeDelimited(message, writer) {
          return this.encode(message, writer).ldelim();
        };
        BatchEntry.decode = function decode(reader, length) {
          if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
          var end = length === void 0 ? reader.len : reader.pos + length, message = new $root.ics23.BatchEntry();
          while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
              case 1:
                message.exist = $root.ics23.ExistenceProof.decode(reader, reader.uint32());
                break;
              case 2:
                message.nonexist = $root.ics23.NonExistenceProof.decode(reader, reader.uint32());
                break;
              default:
                reader.skipType(tag & 7);
                break;
            }
          }
          return message;
        };
        BatchEntry.decodeDelimited = function decodeDelimited(reader) {
          if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
          return this.decode(reader, reader.uint32());
        };
        BatchEntry.verify = function verify(message) {
          if (typeof message !== "object" || message === null)
            return "object expected";
          var properties = {};
          if (message.exist != null && message.hasOwnProperty("exist")) {
            properties.proof = 1;
            {
              var error = $root.ics23.ExistenceProof.verify(message.exist);
              if (error)
                return "exist." + error;
            }
          }
          if (message.nonexist != null && message.hasOwnProperty("nonexist")) {
            if (properties.proof === 1)
              return "proof: multiple values";
            properties.proof = 1;
            {
              var error = $root.ics23.NonExistenceProof.verify(message.nonexist);
              if (error)
                return "nonexist." + error;
            }
          }
          return null;
        };
        BatchEntry.fromObject = function fromObject(object) {
          if (object instanceof $root.ics23.BatchEntry)
            return object;
          var message = new $root.ics23.BatchEntry();
          if (object.exist != null) {
            if (typeof object.exist !== "object")
              throw TypeError(".ics23.BatchEntry.exist: object expected");
            message.exist = $root.ics23.ExistenceProof.fromObject(object.exist);
          }
          if (object.nonexist != null) {
            if (typeof object.nonexist !== "object")
              throw TypeError(".ics23.BatchEntry.nonexist: object expected");
            message.nonexist = $root.ics23.NonExistenceProof.fromObject(object.nonexist);
          }
          return message;
        };
        BatchEntry.toObject = function toObject(message, options) {
          if (!options)
            options = {};
          var object = {};
          if (message.exist != null && message.hasOwnProperty("exist")) {
            object.exist = $root.ics23.ExistenceProof.toObject(message.exist, options);
            if (options.oneofs)
              object.proof = "exist";
          }
          if (message.nonexist != null && message.hasOwnProperty("nonexist")) {
            object.nonexist = $root.ics23.NonExistenceProof.toObject(message.nonexist, options);
            if (options.oneofs)
              object.proof = "nonexist";
          }
          return object;
        };
        BatchEntry.prototype.toJSON = function toJSON() {
          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
        return BatchEntry;
      }();
      ics23.CompressedBatchProof = function() {
        function CompressedBatchProof(properties) {
          this.entries = [];
          this.lookupInners = [];
          if (properties) {
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
              if (properties[keys[i]] != null)
                this[keys[i]] = properties[keys[i]];
          }
        }
        CompressedBatchProof.prototype.entries = $util.emptyArray;
        CompressedBatchProof.prototype.lookupInners = $util.emptyArray;
        CompressedBatchProof.create = function create(properties) {
          return new CompressedBatchProof(properties);
        };
        CompressedBatchProof.encode = function encode(message, writer) {
          if (!writer)
            writer = $Writer.create();
          if (message.entries != null && message.entries.length)
            for (var i = 0; i < message.entries.length; ++i)
              $root.ics23.CompressedBatchEntry.encode(message.entries[i], writer.uint32(
                /* id 1, wireType 2 =*/
                10
              ).fork()).ldelim();
          if (message.lookupInners != null && message.lookupInners.length)
            for (var i = 0; i < message.lookupInners.length; ++i)
              $root.ics23.InnerOp.encode(message.lookupInners[i], writer.uint32(
                /* id 2, wireType 2 =*/
                18
              ).fork()).ldelim();
          return writer;
        };
        CompressedBatchProof.encodeDelimited = function encodeDelimited(message, writer) {
          return this.encode(message, writer).ldelim();
        };
        CompressedBatchProof.decode = function decode(reader, length) {
          if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
          var end = length === void 0 ? reader.len : reader.pos + length, message = new $root.ics23.CompressedBatchProof();
          while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
              case 1:
                if (!(message.entries && message.entries.length))
                  message.entries = [];
                message.entries.push($root.ics23.CompressedBatchEntry.decode(reader, reader.uint32()));
                break;
              case 2:
                if (!(message.lookupInners && message.lookupInners.length))
                  message.lookupInners = [];
                message.lookupInners.push($root.ics23.InnerOp.decode(reader, reader.uint32()));
                break;
              default:
                reader.skipType(tag & 7);
                break;
            }
          }
          return message;
        };
        CompressedBatchProof.decodeDelimited = function decodeDelimited(reader) {
          if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
          return this.decode(reader, reader.uint32());
        };
        CompressedBatchProof.verify = function verify(message) {
          if (typeof message !== "object" || message === null)
            return "object expected";
          if (message.entries != null && message.hasOwnProperty("entries")) {
            if (!Array.isArray(message.entries))
              return "entries: array expected";
            for (var i = 0; i < message.entries.length; ++i) {
              var error = $root.ics23.CompressedBatchEntry.verify(message.entries[i]);
              if (error)
                return "entries." + error;
            }
          }
          if (message.lookupInners != null && message.hasOwnProperty("lookupInners")) {
            if (!Array.isArray(message.lookupInners))
              return "lookupInners: array expected";
            for (var i = 0; i < message.lookupInners.length; ++i) {
              var error = $root.ics23.InnerOp.verify(message.lookupInners[i]);
              if (error)
                return "lookupInners." + error;
            }
          }
          return null;
        };
        CompressedBatchProof.fromObject = function fromObject(object) {
          if (object instanceof $root.ics23.CompressedBatchProof)
            return object;
          var message = new $root.ics23.CompressedBatchProof();
          if (object.entries) {
            if (!Array.isArray(object.entries))
              throw TypeError(".ics23.CompressedBatchProof.entries: array expected");
            message.entries = [];
            for (var i = 0; i < object.entries.length; ++i) {
              if (typeof object.entries[i] !== "object")
                throw TypeError(".ics23.CompressedBatchProof.entries: object expected");
              message.entries[i] = $root.ics23.CompressedBatchEntry.fromObject(object.entries[i]);
            }
          }
          if (object.lookupInners) {
            if (!Array.isArray(object.lookupInners))
              throw TypeError(".ics23.CompressedBatchProof.lookupInners: array expected");
            message.lookupInners = [];
            for (var i = 0; i < object.lookupInners.length; ++i) {
              if (typeof object.lookupInners[i] !== "object")
                throw TypeError(".ics23.CompressedBatchProof.lookupInners: object expected");
              message.lookupInners[i] = $root.ics23.InnerOp.fromObject(object.lookupInners[i]);
            }
          }
          return message;
        };
        CompressedBatchProof.toObject = function toObject(message, options) {
          if (!options)
            options = {};
          var object = {};
          if (options.arrays || options.defaults) {
            object.entries = [];
            object.lookupInners = [];
          }
          if (message.entries && message.entries.length) {
            object.entries = [];
            for (var j = 0; j < message.entries.length; ++j)
              object.entries[j] = $root.ics23.CompressedBatchEntry.toObject(message.entries[j], options);
          }
          if (message.lookupInners && message.lookupInners.length) {
            object.lookupInners = [];
            for (var j = 0; j < message.lookupInners.length; ++j)
              object.lookupInners[j] = $root.ics23.InnerOp.toObject(message.lookupInners[j], options);
          }
          return object;
        };
        CompressedBatchProof.prototype.toJSON = function toJSON() {
          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
        return CompressedBatchProof;
      }();
      ics23.CompressedBatchEntry = function() {
        function CompressedBatchEntry(properties) {
          if (properties) {
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
              if (properties[keys[i]] != null)
                this[keys[i]] = properties[keys[i]];
          }
        }
        CompressedBatchEntry.prototype.exist = null;
        CompressedBatchEntry.prototype.nonexist = null;
        var $oneOfFields;
        Object.defineProperty(CompressedBatchEntry.prototype, "proof", {
          get: $util.oneOfGetter($oneOfFields = ["exist", "nonexist"]),
          set: $util.oneOfSetter($oneOfFields)
        });
        CompressedBatchEntry.create = function create(properties) {
          return new CompressedBatchEntry(properties);
        };
        CompressedBatchEntry.encode = function encode(message, writer) {
          if (!writer)
            writer = $Writer.create();
          if (message.exist != null && message.hasOwnProperty("exist"))
            $root.ics23.CompressedExistenceProof.encode(message.exist, writer.uint32(
              /* id 1, wireType 2 =*/
              10
            ).fork()).ldelim();
          if (message.nonexist != null && message.hasOwnProperty("nonexist"))
            $root.ics23.CompressedNonExistenceProof.encode(message.nonexist, writer.uint32(
              /* id 2, wireType 2 =*/
              18
            ).fork()).ldelim();
          return writer;
        };
        CompressedBatchEntry.encodeDelimited = function encodeDelimited(message, writer) {
          return this.encode(message, writer).ldelim();
        };
        CompressedBatchEntry.decode = function decode(reader, length) {
          if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
          var end = length === void 0 ? reader.len : reader.pos + length, message = new $root.ics23.CompressedBatchEntry();
          while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
              case 1:
                message.exist = $root.ics23.CompressedExistenceProof.decode(reader, reader.uint32());
                break;
              case 2:
                message.nonexist = $root.ics23.CompressedNonExistenceProof.decode(reader, reader.uint32());
                break;
              default:
                reader.skipType(tag & 7);
                break;
            }
          }
          return message;
        };
        CompressedBatchEntry.decodeDelimited = function decodeDelimited(reader) {
          if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
          return this.decode(reader, reader.uint32());
        };
        CompressedBatchEntry.verify = function verify(message) {
          if (typeof message !== "object" || message === null)
            return "object expected";
          var properties = {};
          if (message.exist != null && message.hasOwnProperty("exist")) {
            properties.proof = 1;
            {
              var error = $root.ics23.CompressedExistenceProof.verify(message.exist);
              if (error)
                return "exist." + error;
            }
          }
          if (message.nonexist != null && message.hasOwnProperty("nonexist")) {
            if (properties.proof === 1)
              return "proof: multiple values";
            properties.proof = 1;
            {
              var error = $root.ics23.CompressedNonExistenceProof.verify(message.nonexist);
              if (error)
                return "nonexist." + error;
            }
          }
          return null;
        };
        CompressedBatchEntry.fromObject = function fromObject(object) {
          if (object instanceof $root.ics23.CompressedBatchEntry)
            return object;
          var message = new $root.ics23.CompressedBatchEntry();
          if (object.exist != null) {
            if (typeof object.exist !== "object")
              throw TypeError(".ics23.CompressedBatchEntry.exist: object expected");
            message.exist = $root.ics23.CompressedExistenceProof.fromObject(object.exist);
          }
          if (object.nonexist != null) {
            if (typeof object.nonexist !== "object")
              throw TypeError(".ics23.CompressedBatchEntry.nonexist: object expected");
            message.nonexist = $root.ics23.CompressedNonExistenceProof.fromObject(object.nonexist);
          }
          return message;
        };
        CompressedBatchEntry.toObject = function toObject(message, options) {
          if (!options)
            options = {};
          var object = {};
          if (message.exist != null && message.hasOwnProperty("exist")) {
            object.exist = $root.ics23.CompressedExistenceProof.toObject(message.exist, options);
            if (options.oneofs)
              object.proof = "exist";
          }
          if (message.nonexist != null && message.hasOwnProperty("nonexist")) {
            object.nonexist = $root.ics23.CompressedNonExistenceProof.toObject(message.nonexist, options);
            if (options.oneofs)
              object.proof = "nonexist";
          }
          return object;
        };
        CompressedBatchEntry.prototype.toJSON = function toJSON() {
          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
        return CompressedBatchEntry;
      }();
      ics23.CompressedExistenceProof = function() {
        function CompressedExistenceProof(properties) {
          this.path = [];
          if (properties) {
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
              if (properties[keys[i]] != null)
                this[keys[i]] = properties[keys[i]];
          }
        }
        CompressedExistenceProof.prototype.key = $util.newBuffer([]);
        CompressedExistenceProof.prototype.value = $util.newBuffer([]);
        CompressedExistenceProof.prototype.leaf = null;
        CompressedExistenceProof.prototype.path = $util.emptyArray;
        CompressedExistenceProof.create = function create(properties) {
          return new CompressedExistenceProof(properties);
        };
        CompressedExistenceProof.encode = function encode(message, writer) {
          if (!writer)
            writer = $Writer.create();
          if (message.key != null && message.hasOwnProperty("key"))
            writer.uint32(
              /* id 1, wireType 2 =*/
              10
            ).bytes(message.key);
          if (message.value != null && message.hasOwnProperty("value"))
            writer.uint32(
              /* id 2, wireType 2 =*/
              18
            ).bytes(message.value);
          if (message.leaf != null && message.hasOwnProperty("leaf"))
            $root.ics23.LeafOp.encode(message.leaf, writer.uint32(
              /* id 3, wireType 2 =*/
              26
            ).fork()).ldelim();
          if (message.path != null && message.path.length) {
            writer.uint32(
              /* id 4, wireType 2 =*/
              34
            ).fork();
            for (var i = 0; i < message.path.length; ++i)
              writer.int32(message.path[i]);
            writer.ldelim();
          }
          return writer;
        };
        CompressedExistenceProof.encodeDelimited = function encodeDelimited(message, writer) {
          return this.encode(message, writer).ldelim();
        };
        CompressedExistenceProof.decode = function decode(reader, length) {
          if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
          var end = length === void 0 ? reader.len : reader.pos + length, message = new $root.ics23.CompressedExistenceProof();
          while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
              case 1:
                message.key = reader.bytes();
                break;
              case 2:
                message.value = reader.bytes();
                break;
              case 3:
                message.leaf = $root.ics23.LeafOp.decode(reader, reader.uint32());
                break;
              case 4:
                if (!(message.path && message.path.length))
                  message.path = [];
                if ((tag & 7) === 2) {
                  var end2 = reader.uint32() + reader.pos;
                  while (reader.pos < end2)
                    message.path.push(reader.int32());
                } else
                  message.path.push(reader.int32());
                break;
              default:
                reader.skipType(tag & 7);
                break;
            }
          }
          return message;
        };
        CompressedExistenceProof.decodeDelimited = function decodeDelimited(reader) {
          if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
          return this.decode(reader, reader.uint32());
        };
        CompressedExistenceProof.verify = function verify(message) {
          if (typeof message !== "object" || message === null)
            return "object expected";
          if (message.key != null && message.hasOwnProperty("key")) {
            if (!(message.key && typeof message.key.length === "number" || $util.isString(message.key)))
              return "key: buffer expected";
          }
          if (message.value != null && message.hasOwnProperty("value")) {
            if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
              return "value: buffer expected";
          }
          if (message.leaf != null && message.hasOwnProperty("leaf")) {
            var error = $root.ics23.LeafOp.verify(message.leaf);
            if (error)
              return "leaf." + error;
          }
          if (message.path != null && message.hasOwnProperty("path")) {
            if (!Array.isArray(message.path))
              return "path: array expected";
            for (var i = 0; i < message.path.length; ++i)
              if (!$util.isInteger(message.path[i]))
                return "path: integer[] expected";
          }
          return null;
        };
        CompressedExistenceProof.fromObject = function fromObject(object) {
          if (object instanceof $root.ics23.CompressedExistenceProof)
            return object;
          var message = new $root.ics23.CompressedExistenceProof();
          if (object.key != null) {
            if (typeof object.key === "string")
              $util.base64.decode(object.key, message.key = $util.newBuffer($util.base64.length(object.key)), 0);
            else if (object.key.length)
              message.key = object.key;
          }
          if (object.value != null) {
            if (typeof object.value === "string")
              $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
            else if (object.value.length)
              message.value = object.value;
          }
          if (object.leaf != null) {
            if (typeof object.leaf !== "object")
              throw TypeError(".ics23.CompressedExistenceProof.leaf: object expected");
            message.leaf = $root.ics23.LeafOp.fromObject(object.leaf);
          }
          if (object.path) {
            if (!Array.isArray(object.path))
              throw TypeError(".ics23.CompressedExistenceProof.path: array expected");
            message.path = [];
            for (var i = 0; i < object.path.length; ++i)
              message.path[i] = object.path[i] | 0;
          }
          return message;
        };
        CompressedExistenceProof.toObject = function toObject(message, options) {
          if (!options)
            options = {};
          var object = {};
          if (options.arrays || options.defaults)
            object.path = [];
          if (options.defaults) {
            if (options.bytes === String)
              object.key = "";
            else {
              object.key = [];
              if (options.bytes !== Array)
                object.key = $util.newBuffer(object.key);
            }
            if (options.bytes === String)
              object.value = "";
            else {
              object.value = [];
              if (options.bytes !== Array)
                object.value = $util.newBuffer(object.value);
            }
            object.leaf = null;
          }
          if (message.key != null && message.hasOwnProperty("key"))
            object.key = options.bytes === String ? $util.base64.encode(message.key, 0, message.key.length) : options.bytes === Array ? Array.prototype.slice.call(message.key) : message.key;
          if (message.value != null && message.hasOwnProperty("value"))
            object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
          if (message.leaf != null && message.hasOwnProperty("leaf"))
            object.leaf = $root.ics23.LeafOp.toObject(message.leaf, options);
          if (message.path && message.path.length) {
            object.path = [];
            for (var j = 0; j < message.path.length; ++j)
              object.path[j] = message.path[j];
          }
          return object;
        };
        CompressedExistenceProof.prototype.toJSON = function toJSON() {
          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
        return CompressedExistenceProof;
      }();
      ics23.CompressedNonExistenceProof = function() {
        function CompressedNonExistenceProof(properties) {
          if (properties) {
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
              if (properties[keys[i]] != null)
                this[keys[i]] = properties[keys[i]];
          }
        }
        CompressedNonExistenceProof.prototype.key = $util.newBuffer([]);
        CompressedNonExistenceProof.prototype.left = null;
        CompressedNonExistenceProof.prototype.right = null;
        CompressedNonExistenceProof.create = function create(properties) {
          return new CompressedNonExistenceProof(properties);
        };
        CompressedNonExistenceProof.encode = function encode(message, writer) {
          if (!writer)
            writer = $Writer.create();
          if (message.key != null && message.hasOwnProperty("key"))
            writer.uint32(
              /* id 1, wireType 2 =*/
              10
            ).bytes(message.key);
          if (message.left != null && message.hasOwnProperty("left"))
            $root.ics23.CompressedExistenceProof.encode(message.left, writer.uint32(
              /* id 2, wireType 2 =*/
              18
            ).fork()).ldelim();
          if (message.right != null && message.hasOwnProperty("right"))
            $root.ics23.CompressedExistenceProof.encode(message.right, writer.uint32(
              /* id 3, wireType 2 =*/
              26
            ).fork()).ldelim();
          return writer;
        };
        CompressedNonExistenceProof.encodeDelimited = function encodeDelimited(message, writer) {
          return this.encode(message, writer).ldelim();
        };
        CompressedNonExistenceProof.decode = function decode(reader, length) {
          if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
          var end = length === void 0 ? reader.len : reader.pos + length, message = new $root.ics23.CompressedNonExistenceProof();
          while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
              case 1:
                message.key = reader.bytes();
                break;
              case 2:
                message.left = $root.ics23.CompressedExistenceProof.decode(reader, reader.uint32());
                break;
              case 3:
                message.right = $root.ics23.CompressedExistenceProof.decode(reader, reader.uint32());
                break;
              default:
                reader.skipType(tag & 7);
                break;
            }
          }
          return message;
        };
        CompressedNonExistenceProof.decodeDelimited = function decodeDelimited(reader) {
          if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
          return this.decode(reader, reader.uint32());
        };
        CompressedNonExistenceProof.verify = function verify(message) {
          if (typeof message !== "object" || message === null)
            return "object expected";
          if (message.key != null && message.hasOwnProperty("key")) {
            if (!(message.key && typeof message.key.length === "number" || $util.isString(message.key)))
              return "key: buffer expected";
          }
          if (message.left != null && message.hasOwnProperty("left")) {
            var error = $root.ics23.CompressedExistenceProof.verify(message.left);
            if (error)
              return "left." + error;
          }
          if (message.right != null && message.hasOwnProperty("right")) {
            var error = $root.ics23.CompressedExistenceProof.verify(message.right);
            if (error)
              return "right." + error;
          }
          return null;
        };
        CompressedNonExistenceProof.fromObject = function fromObject(object) {
          if (object instanceof $root.ics23.CompressedNonExistenceProof)
            return object;
          var message = new $root.ics23.CompressedNonExistenceProof();
          if (object.key != null) {
            if (typeof object.key === "string")
              $util.base64.decode(object.key, message.key = $util.newBuffer($util.base64.length(object.key)), 0);
            else if (object.key.length)
              message.key = object.key;
          }
          if (object.left != null) {
            if (typeof object.left !== "object")
              throw TypeError(".ics23.CompressedNonExistenceProof.left: object expected");
            message.left = $root.ics23.CompressedExistenceProof.fromObject(object.left);
          }
          if (object.right != null) {
            if (typeof object.right !== "object")
              throw TypeError(".ics23.CompressedNonExistenceProof.right: object expected");
            message.right = $root.ics23.CompressedExistenceProof.fromObject(object.right);
          }
          return message;
        };
        CompressedNonExistenceProof.toObject = function toObject(message, options) {
          if (!options)
            options = {};
          var object = {};
          if (options.defaults) {
            if (options.bytes === String)
              object.key = "";
            else {
              object.key = [];
              if (options.bytes !== Array)
                object.key = $util.newBuffer(object.key);
            }
            object.left = null;
            object.right = null;
          }
          if (message.key != null && message.hasOwnProperty("key"))
            object.key = options.bytes === String ? $util.base64.encode(message.key, 0, message.key.length) : options.bytes === Array ? Array.prototype.slice.call(message.key) : message.key;
          if (message.left != null && message.hasOwnProperty("left"))
            object.left = $root.ics23.CompressedExistenceProof.toObject(message.left, options);
          if (message.right != null && message.hasOwnProperty("right"))
            object.right = $root.ics23.CompressedExistenceProof.toObject(message.right, options);
          return object;
        };
        CompressedNonExistenceProof.prototype.toJSON = function toJSON() {
          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
        return CompressedNonExistenceProof;
      }();
      return ics23;
    }();
    module.exports = $root;
  }
});

// node_modules/@confio/ics23/build/compress.js
var require_compress = __commonJS({
  "node_modules/@confio/ics23/build/compress.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.decompress = exports.compress = void 0;
    var codecimpl_1 = require_codecimpl();
    function compress(proof) {
      if (!proof.batch) {
        return proof;
      }
      return { compressed: compressBatch(proof.batch) };
    }
    exports.compress = compress;
    function decompress(proof) {
      if (!proof.compressed) {
        return proof;
      }
      return { batch: decompressBatch(proof.compressed) };
    }
    exports.decompress = decompress;
    function compressBatch(proof) {
      const centries = [];
      const lookup = [];
      const registry = /* @__PURE__ */ new Map();
      for (const entry of proof.entries) {
        if (entry.exist) {
          const centry = { exist: compressExist(entry.exist, lookup, registry) };
          centries.push(centry);
        } else if (entry.nonexist) {
          const non = entry.nonexist;
          const centry = {
            nonexist: {
              key: non.key,
              left: compressExist(non.left, lookup, registry),
              right: compressExist(non.right, lookup, registry)
            }
          };
          centries.push(centry);
        } else {
          throw new Error("Unexpected batch entry during compress");
        }
      }
      return {
        entries: centries,
        lookupInners: lookup
      };
    }
    function compressExist(exist, lookup, registry) {
      if (!exist) {
        return void 0;
      }
      const path = exist.path.map((inner) => {
        const sig = codecimpl_1.ics23.InnerOp.encode(inner).finish();
        let idx = registry.get(sig);
        if (idx === void 0) {
          idx = lookup.length;
          lookup.push(inner);
          registry.set(sig, idx);
        }
        return idx;
      });
      return {
        key: exist.key,
        value: exist.value,
        leaf: exist.leaf,
        path
      };
    }
    function decompressBatch(proof) {
      const lookup = proof.lookupInners;
      const entries = proof.entries.map((comp) => {
        if (comp.exist) {
          return { exist: decompressExist(comp.exist, lookup) };
        } else if (comp.nonexist) {
          const non = comp.nonexist;
          return {
            nonexist: {
              key: non.key,
              left: decompressExist(non.left, lookup),
              right: decompressExist(non.right, lookup)
            }
          };
        } else {
          throw new Error("Unexpected batch entry during compress");
        }
      });
      return {
        entries
      };
    }
    function decompressExist(exist, lookup) {
      if (!exist) {
        return void 0;
      }
      const { key, value, leaf, path } = exist;
      const newPath = (path || []).map((idx) => lookup[idx]);
      return { key, value, leaf, path: newPath };
    }
  }
});

// node_modules/@confio/ics23/build/ops.js
var require_ops = __commonJS({
  "node_modules/@confio/ics23/build/ops.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.doHash = exports.applyInner = exports.applyLeaf = void 0;
    var ripemd160_1 = require_ripemd160();
    var sha256_1 = require_sha256();
    var sha512_1 = require_sha512();
    var codecimpl_1 = require_codecimpl();
    function applyLeaf(leaf, key, value) {
      if (key.length === 0) {
        throw new Error("Missing key");
      }
      if (value.length === 0) {
        throw new Error("Missing value");
      }
      const pkey = prepareLeafData(ensureHash(leaf.prehashKey), ensureLength(leaf.length), key);
      const pvalue = prepareLeafData(ensureHash(leaf.prehashValue), ensureLength(leaf.length), value);
      const data = new Uint8Array([
        ...ensureBytes(leaf.prefix),
        ...pkey,
        ...pvalue
      ]);
      return doHash(ensureHash(leaf.hash), data);
    }
    exports.applyLeaf = applyLeaf;
    function applyInner(inner, child) {
      if (child.length === 0) {
        throw new Error("Inner op needs child value");
      }
      const preimage = new Uint8Array([
        ...ensureBytes(inner.prefix),
        ...child,
        ...ensureBytes(inner.suffix)
      ]);
      return doHash(ensureHash(inner.hash), preimage);
    }
    exports.applyInner = applyInner;
    function ensure(maybe, value) {
      return maybe === void 0 || maybe === null ? value : maybe;
    }
    var ensureHash = (h) => ensure(h, codecimpl_1.ics23.HashOp.NO_HASH);
    var ensureLength = (l) => ensure(l, codecimpl_1.ics23.LengthOp.NO_PREFIX);
    var ensureBytes = (b) => ensure(b, new Uint8Array([]));
    function prepareLeafData(hashOp, lengthOp, data) {
      const h = doHashOrNoop(hashOp, data);
      return doLengthOp(lengthOp, h);
    }
    function doHashOrNoop(hashOp, preimage) {
      if (hashOp === codecimpl_1.ics23.HashOp.NO_HASH) {
        return preimage;
      }
      return doHash(hashOp, preimage);
    }
    function doHash(hashOp, preimage) {
      switch (hashOp) {
        case codecimpl_1.ics23.HashOp.SHA256:
          return (0, sha256_1.sha256)(preimage);
        case codecimpl_1.ics23.HashOp.SHA512:
          return (0, sha512_1.sha512)(preimage);
        case codecimpl_1.ics23.HashOp.RIPEMD160:
          return (0, ripemd160_1.ripemd160)(preimage);
        case codecimpl_1.ics23.HashOp.BITCOIN:
          return (0, ripemd160_1.ripemd160)((0, sha256_1.sha256)(preimage));
        case codecimpl_1.ics23.HashOp.SHA512_256:
          return (0, sha512_1.sha512_256)(preimage);
      }
      throw new Error(`Unsupported hashop: ${hashOp}`);
    }
    exports.doHash = doHash;
    function doLengthOp(lengthOp, data) {
      switch (lengthOp) {
        case codecimpl_1.ics23.LengthOp.NO_PREFIX:
          return data;
        case codecimpl_1.ics23.LengthOp.VAR_PROTO:
          return new Uint8Array([...encodeVarintProto(data.length), ...data]);
        case codecimpl_1.ics23.LengthOp.REQUIRE_32_BYTES:
          if (data.length !== 32) {
            throw new Error(`Length is ${data.length}, not 32 bytes`);
          }
          return data;
        case codecimpl_1.ics23.LengthOp.REQUIRE_64_BYTES:
          if (data.length !== 64) {
            throw new Error(`Length is ${data.length}, not 64 bytes`);
          }
          return data;
        case codecimpl_1.ics23.LengthOp.FIXED32_LITTLE:
          return new Uint8Array([...encodeFixed32Le(data.length), ...data]);
      }
      throw new Error(`Unsupported lengthop: ${lengthOp}`);
    }
    function encodeVarintProto(n) {
      let enc = [];
      let l = n;
      while (l >= 128) {
        const b = l % 128 + 128;
        enc = [...enc, b];
        l = l / 128;
      }
      enc = [...enc, l];
      return new Uint8Array(enc);
    }
    function encodeFixed32Le(n) {
      const enc = new Uint8Array(4);
      let l = n;
      for (let i = enc.length; i > 0; i--) {
        enc[Math.abs(i - enc.length)] = l % 256;
        l = Math.floor(l / 256);
      }
      return enc;
    }
  }
});

// node_modules/@confio/ics23/build/specs.js
var require_specs = __commonJS({
  "node_modules/@confio/ics23/build/specs.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.bytesBefore = exports.ensureBytesBefore = exports.bytesEqual = exports.ensureBytesEqual = exports.ensureInner = exports.ensureLeaf = void 0;
    function ensureLeaf(leaf, spec) {
      if (leaf.hash !== spec.hash) {
        throw new Error(`Unexpected hashOp: ${leaf.hash}`);
      }
      if (leaf.prehashKey !== spec.prehashKey) {
        throw new Error(`Unexpected prehashKey: ${leaf.prehashKey}`);
      }
      if (leaf.prehashValue !== spec.prehashValue) {
        throw new Error(`Unexpected prehashValue: ${leaf.prehashValue}`);
      }
      if (leaf.length !== spec.length) {
        throw new Error(`Unexpected length op: ${leaf.length}`);
      }
      ensurePrefix(leaf.prefix, spec.prefix);
    }
    exports.ensureLeaf = ensureLeaf;
    function ensureInner(inner, prefix, spec) {
      if (inner.hash !== spec.hash) {
        throw new Error(`Unexpected hashOp: ${inner.hash}`);
      }
      if (!inner.prefix) {
        throw new Error("No prefix set for inner node");
      }
      if (hasPrefix(inner.prefix, prefix)) {
        throw new Error(`Inner node has leaf prefix`);
      }
      if (inner.prefix.length < (spec.minPrefixLength || 0)) {
        throw new Error(`Prefix too short: ${inner.prefix.length} bytes`);
      }
      const maxLeftChildBytes = (spec.childOrder.length - 1) * spec.childSize;
      if (inner.prefix.length > (spec.maxPrefixLength || 0) + maxLeftChildBytes) {
        throw new Error(`Prefix too long: ${inner.prefix.length} bytes`);
      }
    }
    exports.ensureInner = ensureInner;
    function ensurePrefix(check, prefix) {
      if (!prefix || prefix.length === 0) {
        return;
      }
      if (!check) {
        throw new Error(`Target bytes missing`);
      }
      ensureBytesEqual(prefix, check.slice(0, prefix.length));
    }
    function ensureBytesEqual(a, b) {
      if (a.length !== b.length) {
        throw new Error(`Different lengths ${a.length} vs ${b.length}`);
      }
      for (let i = 0; i < a.length; i++) {
        if (a[i] !== b[i]) {
          throw new Error(`Arrays differ at index ${i}: ${a[i]} vs ${b[i]}`);
        }
      }
    }
    exports.ensureBytesEqual = ensureBytesEqual;
    function bytesEqual(a, b) {
      if (a.length !== b.length) {
        return false;
      }
      for (let i = 0; i < a.length; i++) {
        if (a[i] !== b[i]) {
          return false;
        }
      }
      return true;
    }
    exports.bytesEqual = bytesEqual;
    function hasPrefix(check, prefix) {
      if (!prefix || prefix.length === 0) {
        return false;
      }
      if (!check) {
        return false;
      }
      if (check.length <= prefix.length) {
        return false;
      }
      for (let i = 0; i < prefix.length; i++) {
        if (check[i] !== prefix[i]) {
          return false;
        }
      }
      throw true;
    }
    function ensureBytesBefore(first, last) {
      if (!bytesBefore(first, last)) {
        throw new Error("first is after last");
      }
    }
    exports.ensureBytesBefore = ensureBytesBefore;
    function bytesBefore(first, last) {
      const min = first.length < last.length ? first.length : last.length;
      for (let i = 0; i < min; i++) {
        if (first[i] < last[i]) {
          return true;
        }
        if (first[i] > last[i]) {
          return false;
        }
      }
      return first.length < last.length;
    }
    exports.bytesBefore = bytesBefore;
  }
});

// node_modules/@confio/ics23/build/proofs.js
var require_proofs = __commonJS({
  "node_modules/@confio/ics23/build/proofs.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ensureLeftNeighbor = exports.ensureSpec = exports.calculateExistenceRoot = exports.verifyNonExistence = exports.verifyExistence = exports.smtSpec = exports.tendermintSpec = exports.iavlSpec = void 0;
    var codecimpl_1 = require_codecimpl();
    var ops_1 = require_ops();
    var specs_1 = require_specs();
    exports.iavlSpec = {
      leafSpec: {
        prefix: Uint8Array.from([0]),
        hash: codecimpl_1.ics23.HashOp.SHA256,
        prehashValue: codecimpl_1.ics23.HashOp.SHA256,
        prehashKey: codecimpl_1.ics23.HashOp.NO_HASH,
        length: codecimpl_1.ics23.LengthOp.VAR_PROTO
      },
      innerSpec: {
        childOrder: [0, 1],
        minPrefixLength: 4,
        maxPrefixLength: 12,
        childSize: 33,
        hash: codecimpl_1.ics23.HashOp.SHA256
      }
    };
    exports.tendermintSpec = {
      leafSpec: {
        prefix: Uint8Array.from([0]),
        hash: codecimpl_1.ics23.HashOp.SHA256,
        prehashValue: codecimpl_1.ics23.HashOp.SHA256,
        prehashKey: codecimpl_1.ics23.HashOp.NO_HASH,
        length: codecimpl_1.ics23.LengthOp.VAR_PROTO
      },
      innerSpec: {
        childOrder: [0, 1],
        minPrefixLength: 1,
        maxPrefixLength: 1,
        childSize: 32,
        hash: codecimpl_1.ics23.HashOp.SHA256
      }
    };
    exports.smtSpec = {
      leafSpec: {
        hash: codecimpl_1.ics23.HashOp.SHA256,
        prehashKey: codecimpl_1.ics23.HashOp.NO_HASH,
        prehashValue: codecimpl_1.ics23.HashOp.SHA256,
        length: codecimpl_1.ics23.LengthOp.NO_PREFIX,
        prefix: Uint8Array.from([0])
      },
      innerSpec: {
        childOrder: [0, 1],
        childSize: 32,
        minPrefixLength: 1,
        maxPrefixLength: 1,
        emptyChild: new Uint8Array(32),
        hash: codecimpl_1.ics23.HashOp.SHA256
      },
      maxDepth: 256
    };
    function verifyExistence(proof, spec, root, key, value) {
      ensureSpec(proof, spec);
      const calc = calculateExistenceRoot(proof);
      (0, specs_1.ensureBytesEqual)(calc, root);
      (0, specs_1.ensureBytesEqual)(key, proof.key);
      (0, specs_1.ensureBytesEqual)(value, proof.value);
    }
    exports.verifyExistence = verifyExistence;
    function verifyNonExistence(proof, spec, root, key) {
      let leftKey;
      let rightKey;
      if (proof.left) {
        verifyExistence(proof.left, spec, root, proof.left.key, proof.left.value);
        leftKey = proof.left.key;
      }
      if (proof.right) {
        verifyExistence(proof.right, spec, root, proof.right.key, proof.right.value);
        rightKey = proof.right.key;
      }
      if (!leftKey && !rightKey) {
        throw new Error("neither left nor right proof defined");
      }
      if (leftKey) {
        (0, specs_1.ensureBytesBefore)(leftKey, key);
      }
      if (rightKey) {
        (0, specs_1.ensureBytesBefore)(key, rightKey);
      }
      if (!spec.innerSpec) {
        throw new Error("no inner spec");
      }
      if (!leftKey) {
        ensureLeftMost(spec.innerSpec, proof.right.path);
      } else if (!rightKey) {
        ensureRightMost(spec.innerSpec, proof.left.path);
      } else {
        ensureLeftNeighbor(spec.innerSpec, proof.left.path, proof.right.path);
      }
      return;
    }
    exports.verifyNonExistence = verifyNonExistence;
    function calculateExistenceRoot(proof) {
      if (!proof.key || !proof.value) {
        throw new Error("Existence proof needs key and value set");
      }
      if (!proof.leaf) {
        throw new Error("Existence proof must start with a leaf operation");
      }
      const path = proof.path || [];
      let res = (0, ops_1.applyLeaf)(proof.leaf, proof.key, proof.value);
      for (const inner of path) {
        res = (0, ops_1.applyInner)(inner, res);
      }
      return res;
    }
    exports.calculateExistenceRoot = calculateExistenceRoot;
    function ensureSpec(proof, spec) {
      if (!proof.leaf) {
        throw new Error("Existence proof must start with a leaf operation");
      }
      if (!spec.leafSpec) {
        throw new Error("Spec must include leafSpec");
      }
      if (!spec.innerSpec) {
        throw new Error("Spec must include innerSpec");
      }
      (0, specs_1.ensureLeaf)(proof.leaf, spec.leafSpec);
      const path = proof.path || [];
      if (spec.minDepth && path.length < spec.minDepth) {
        throw new Error(`Too few inner nodes ${path.length}`);
      }
      if (spec.maxDepth && path.length > spec.maxDepth) {
        throw new Error(`Too many inner nodes ${path.length}`);
      }
      for (const inner of path) {
        (0, specs_1.ensureInner)(inner, spec.leafSpec.prefix, spec.innerSpec);
      }
    }
    exports.ensureSpec = ensureSpec;
    function ensureLeftMost(spec, path) {
      const { minPrefix, maxPrefix, suffix } = getPadding(spec, 0);
      for (const step of path) {
        if (!hasPadding(step, minPrefix, maxPrefix, suffix)) {
          throw new Error("Step not leftmost");
        }
      }
    }
    function ensureRightMost(spec, path) {
      const len = spec.childOrder.length - 1;
      const { minPrefix, maxPrefix, suffix } = getPadding(spec, len);
      for (const step of path) {
        if (!hasPadding(step, minPrefix, maxPrefix, suffix)) {
          throw new Error("Step not leftmost");
        }
      }
    }
    function ensureLeftNeighbor(spec, left, right) {
      const mutleft = [...left];
      const mutright = [...right];
      let topleft = mutleft.pop();
      let topright = mutright.pop();
      while ((0, specs_1.bytesEqual)(topleft.prefix, topright.prefix) && (0, specs_1.bytesEqual)(topleft.suffix, topright.suffix)) {
        topleft = mutleft.pop();
        topright = mutright.pop();
      }
      if (!isLeftStep(spec, topleft, topright)) {
        throw new Error(`Not left neightbor at first divergent step`);
      }
      ensureRightMost(spec, mutleft);
      ensureLeftMost(spec, mutright);
    }
    exports.ensureLeftNeighbor = ensureLeftNeighbor;
    function isLeftStep(spec, left, right) {
      const leftidx = orderFromPadding(spec, left);
      const rightidx = orderFromPadding(spec, right);
      return rightidx === leftidx + 1;
    }
    function orderFromPadding(spec, inner) {
      for (let branch = 0; branch < spec.childOrder.length; branch++) {
        const { minPrefix, maxPrefix, suffix } = getPadding(spec, branch);
        if (hasPadding(inner, minPrefix, maxPrefix, suffix)) {
          return branch;
        }
      }
      throw new Error(`Cannot find any valid spacing for this node`);
    }
    function hasPadding(op, minPrefix, maxPrefix, suffix) {
      if ((op.prefix || []).length < minPrefix) {
        return false;
      }
      if ((op.prefix || []).length > maxPrefix) {
        return false;
      }
      return (op.suffix || []).length === suffix;
    }
    function getPadding(spec, branch) {
      const idx = getPosition(spec.childOrder, branch);
      const prefix = idx * spec.childSize;
      const minPrefix = prefix + spec.minPrefixLength;
      const maxPrefix = prefix + spec.maxPrefixLength;
      const suffix = (spec.childOrder.length - 1 - idx) * spec.childSize;
      return { minPrefix, maxPrefix, suffix };
    }
    function getPosition(order, branch) {
      if (branch < 0 || branch >= order.length) {
        throw new Error(`Invalid branch: ${branch}`);
      }
      return order.findIndex((val) => val === branch);
    }
  }
});

// node_modules/@confio/ics23/build/ics23.js
var require_ics23 = __commonJS({
  "node_modules/@confio/ics23/build/ics23.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.batchVerifyNonMembership = exports.batchVerifyMembership = exports.verifyNonMembership = exports.verifyMembership = void 0;
    var compress_1 = require_compress();
    var proofs_1 = require_proofs();
    var specs_1 = require_specs();
    function verifyMembership(proof, spec, root, key, value) {
      const norm = (0, compress_1.decompress)(proof);
      const exist = getExistForKey(norm, key);
      if (!exist) {
        return false;
      }
      try {
        (0, proofs_1.verifyExistence)(exist, spec, root, key, value);
        return true;
      } catch (_a) {
        return false;
      }
    }
    exports.verifyMembership = verifyMembership;
    function verifyNonMembership(proof, spec, root, key) {
      const norm = (0, compress_1.decompress)(proof);
      const nonexist = getNonExistForKey(norm, key);
      if (!nonexist) {
        return false;
      }
      try {
        (0, proofs_1.verifyNonExistence)(nonexist, spec, root, key);
        return true;
      } catch (_a) {
        return false;
      }
    }
    exports.verifyNonMembership = verifyNonMembership;
    function batchVerifyMembership(proof, spec, root, items) {
      const norm = (0, compress_1.decompress)(proof);
      for (const [key, value] of items.entries()) {
        if (!verifyMembership(norm, spec, root, key, value)) {
          return false;
        }
      }
      return true;
    }
    exports.batchVerifyMembership = batchVerifyMembership;
    function batchVerifyNonMembership(proof, spec, root, keys) {
      const norm = (0, compress_1.decompress)(proof);
      for (const key of keys) {
        if (!verifyNonMembership(norm, spec, root, key)) {
          return false;
        }
      }
      return true;
    }
    exports.batchVerifyNonMembership = batchVerifyNonMembership;
    function getExistForKey(proof, key) {
      const match = (p) => !!p && (0, specs_1.bytesEqual)(key, p.key);
      if (match(proof.exist)) {
        return proof.exist;
      } else if (proof.batch) {
        return proof.batch.entries.map((x) => x.exist || null).find(match);
      }
      return void 0;
    }
    function getNonExistForKey(proof, key) {
      const match = (p) => {
        return !!p && (!p.left || (0, specs_1.bytesBefore)(p.left.key, key)) && (!p.right || (0, specs_1.bytesBefore)(key, p.right.key));
      };
      if (match(proof.nonexist)) {
        return proof.nonexist;
      } else if (proof.batch) {
        return proof.batch.entries.map((x) => x.nonexist || null).find(match);
      }
      return void 0;
    }
  }
});

// node_modules/@confio/ics23/build/index.js
var require_build7 = __commonJS({
  "node_modules/@confio/ics23/build/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.verifyNonExistence = exports.verifyExistence = exports.tendermintSpec = exports.iavlSpec = exports.calculateExistenceRoot = exports.verifyNonMembership = exports.verifyMembership = exports.ics23 = void 0;
    var codecimpl_1 = require_codecimpl();
    Object.defineProperty(exports, "ics23", { enumerable: true, get: function() {
      return codecimpl_1.ics23;
    } });
    var ics23_1 = require_ics23();
    Object.defineProperty(exports, "verifyMembership", { enumerable: true, get: function() {
      return ics23_1.verifyMembership;
    } });
    Object.defineProperty(exports, "verifyNonMembership", { enumerable: true, get: function() {
      return ics23_1.verifyNonMembership;
    } });
    var proofs_1 = require_proofs();
    Object.defineProperty(exports, "calculateExistenceRoot", { enumerable: true, get: function() {
      return proofs_1.calculateExistenceRoot;
    } });
    Object.defineProperty(exports, "iavlSpec", { enumerable: true, get: function() {
      return proofs_1.iavlSpec;
    } });
    Object.defineProperty(exports, "tendermintSpec", { enumerable: true, get: function() {
      return proofs_1.tendermintSpec;
    } });
    Object.defineProperty(exports, "verifyExistence", { enumerable: true, get: function() {
      return proofs_1.verifyExistence;
    } });
    Object.defineProperty(exports, "verifyNonExistence", { enumerable: true, get: function() {
      return proofs_1.verifyNonExistence;
    } });
  }
});

// node_modules/xstream/node_modules/symbol-observable/lib/ponyfill.js
var require_ponyfill = __commonJS({
  "node_modules/xstream/node_modules/symbol-observable/lib/ponyfill.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = symbolObservablePonyfill;
    function symbolObservablePonyfill(root) {
      var result;
      var _Symbol = root.Symbol;
      if (typeof _Symbol === "function") {
        if (_Symbol.observable) {
          result = _Symbol.observable;
        } else {
          result = _Symbol["for"]("https://github.com/benlesh/symbol-observable");
          try {
            _Symbol.observable = result;
          } catch (err) {
          }
        }
      } else {
        result = "@@observable";
      }
      return result;
    }
  }
});

// node_modules/xstream/node_modules/symbol-observable/ponyfill.js
var require_ponyfill2 = __commonJS({
  "node_modules/xstream/node_modules/symbol-observable/ponyfill.js"(exports, module) {
    module.exports = require_ponyfill();
  }
});

// node_modules/object-keys/isArguments.js
var require_isArguments = __commonJS({
  "node_modules/object-keys/isArguments.js"(exports, module) {
    "use strict";
    var toStr = Object.prototype.toString;
    module.exports = function isArguments(value) {
      var str = toStr.call(value);
      var isArgs = str === "[object Arguments]";
      if (!isArgs) {
        isArgs = str !== "[object Array]" && value !== null && typeof value === "object" && typeof value.length === "number" && value.length >= 0 && toStr.call(value.callee) === "[object Function]";
      }
      return isArgs;
    };
  }
});

// node_modules/object-keys/implementation.js
var require_implementation = __commonJS({
  "node_modules/object-keys/implementation.js"(exports, module) {
    "use strict";
    var keysShim;
    if (!Object.keys) {
      has = Object.prototype.hasOwnProperty;
      toStr = Object.prototype.toString;
      isArgs = require_isArguments();
      isEnumerable = Object.prototype.propertyIsEnumerable;
      hasDontEnumBug = !isEnumerable.call({ toString: null }, "toString");
      hasProtoEnumBug = isEnumerable.call(function() {
      }, "prototype");
      dontEnums = [
        "toString",
        "toLocaleString",
        "valueOf",
        "hasOwnProperty",
        "isPrototypeOf",
        "propertyIsEnumerable",
        "constructor"
      ];
      equalsConstructorPrototype = function(o) {
        var ctor = o.constructor;
        return ctor && ctor.prototype === o;
      };
      excludedKeys = {
        $applicationCache: true,
        $console: true,
        $external: true,
        $frame: true,
        $frameElement: true,
        $frames: true,
        $innerHeight: true,
        $innerWidth: true,
        $onmozfullscreenchange: true,
        $onmozfullscreenerror: true,
        $outerHeight: true,
        $outerWidth: true,
        $pageXOffset: true,
        $pageYOffset: true,
        $parent: true,
        $scrollLeft: true,
        $scrollTop: true,
        $scrollX: true,
        $scrollY: true,
        $self: true,
        $webkitIndexedDB: true,
        $webkitStorageInfo: true,
        $window: true
      };
      hasAutomationEqualityBug = function() {
        if (typeof window === "undefined") {
          return false;
        }
        for (var k in window) {
          try {
            if (!excludedKeys["$" + k] && has.call(window, k) && window[k] !== null && typeof window[k] === "object") {
              try {
                equalsConstructorPrototype(window[k]);
              } catch (e) {
                return true;
              }
            }
          } catch (e) {
            return true;
          }
        }
        return false;
      }();
      equalsConstructorPrototypeIfNotBuggy = function(o) {
        if (typeof window === "undefined" || !hasAutomationEqualityBug) {
          return equalsConstructorPrototype(o);
        }
        try {
          return equalsConstructorPrototype(o);
        } catch (e) {
          return false;
        }
      };
      keysShim = function keys(object) {
        var isObject = object !== null && typeof object === "object";
        var isFunction = toStr.call(object) === "[object Function]";
        var isArguments = isArgs(object);
        var isString = isObject && toStr.call(object) === "[object String]";
        var theKeys = [];
        if (!isObject && !isFunction && !isArguments) {
          throw new TypeError("Object.keys called on a non-object");
        }
        var skipProto = hasProtoEnumBug && isFunction;
        if (isString && object.length > 0 && !has.call(object, 0)) {
          for (var i = 0; i < object.length; ++i) {
            theKeys.push(String(i));
          }
        }
        if (isArguments && object.length > 0) {
          for (var j = 0; j < object.length; ++j) {
            theKeys.push(String(j));
          }
        } else {
          for (var name in object) {
            if (!(skipProto && name === "prototype") && has.call(object, name)) {
              theKeys.push(String(name));
            }
          }
        }
        if (hasDontEnumBug) {
          var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);
          for (var k = 0; k < dontEnums.length; ++k) {
            if (!(skipConstructor && dontEnums[k] === "constructor") && has.call(object, dontEnums[k])) {
              theKeys.push(dontEnums[k]);
            }
          }
        }
        return theKeys;
      };
    }
    var has;
    var toStr;
    var isArgs;
    var isEnumerable;
    var hasDontEnumBug;
    var hasProtoEnumBug;
    var dontEnums;
    var equalsConstructorPrototype;
    var excludedKeys;
    var hasAutomationEqualityBug;
    var equalsConstructorPrototypeIfNotBuggy;
    module.exports = keysShim;
  }
});

// node_modules/object-keys/index.js
var require_object_keys = __commonJS({
  "node_modules/object-keys/index.js"(exports, module) {
    "use strict";
    var slice = Array.prototype.slice;
    var isArgs = require_isArguments();
    var origKeys = Object.keys;
    var keysShim = origKeys ? function keys(o) {
      return origKeys(o);
    } : require_implementation();
    var originalKeys = Object.keys;
    keysShim.shim = function shimObjectKeys() {
      if (Object.keys) {
        var keysWorksWithArguments = function() {
          var args = Object.keys(arguments);
          return args && args.length === arguments.length;
        }(1, 2);
        if (!keysWorksWithArguments) {
          Object.keys = function keys(object) {
            if (isArgs(object)) {
              return originalKeys(slice.call(object));
            }
            return originalKeys(object);
          };
        }
      } else {
        Object.keys = keysShim;
      }
      return Object.keys || keysShim;
    };
    module.exports = keysShim;
  }
});

// node_modules/has-symbols/shams.js
var require_shams = __commonJS({
  "node_modules/has-symbols/shams.js"(exports, module) {
    "use strict";
    module.exports = function hasSymbols() {
      if (typeof Symbol !== "function" || typeof Object.getOwnPropertySymbols !== "function") {
        return false;
      }
      if (typeof Symbol.iterator === "symbol") {
        return true;
      }
      var obj = {};
      var sym = Symbol("test");
      var symObj = Object(sym);
      if (typeof sym === "string") {
        return false;
      }
      if (Object.prototype.toString.call(sym) !== "[object Symbol]") {
        return false;
      }
      if (Object.prototype.toString.call(symObj) !== "[object Symbol]") {
        return false;
      }
      var symVal = 42;
      obj[sym] = symVal;
      for (sym in obj) {
        return false;
      }
      if (typeof Object.keys === "function" && Object.keys(obj).length !== 0) {
        return false;
      }
      if (typeof Object.getOwnPropertyNames === "function" && Object.getOwnPropertyNames(obj).length !== 0) {
        return false;
      }
      var syms = Object.getOwnPropertySymbols(obj);
      if (syms.length !== 1 || syms[0] !== sym) {
        return false;
      }
      if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) {
        return false;
      }
      if (typeof Object.getOwnPropertyDescriptor === "function") {
        var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
        if (descriptor.value !== symVal || descriptor.enumerable !== true) {
          return false;
        }
      }
      return true;
    };
  }
});

// node_modules/has-symbols/index.js
var require_has_symbols = __commonJS({
  "node_modules/has-symbols/index.js"(exports, module) {
    "use strict";
    var origSymbol = typeof Symbol !== "undefined" && Symbol;
    var hasSymbolSham = require_shams();
    module.exports = function hasNativeSymbols() {
      if (typeof origSymbol !== "function") {
        return false;
      }
      if (typeof Symbol !== "function") {
        return false;
      }
      if (typeof origSymbol("foo") !== "symbol") {
        return false;
      }
      if (typeof Symbol("bar") !== "symbol") {
        return false;
      }
      return hasSymbolSham();
    };
  }
});

// node_modules/has-proto/index.js
var require_has_proto = __commonJS({
  "node_modules/has-proto/index.js"(exports, module) {
    "use strict";
    var test = {
      foo: {}
    };
    var $Object = Object;
    module.exports = function hasProto() {
      return { __proto__: test }.foo === test.foo && !({ __proto__: null } instanceof $Object);
    };
  }
});

// node_modules/function-bind/implementation.js
var require_implementation2 = __commonJS({
  "node_modules/function-bind/implementation.js"(exports, module) {
    "use strict";
    var ERROR_MESSAGE = "Function.prototype.bind called on incompatible ";
    var toStr = Object.prototype.toString;
    var max = Math.max;
    var funcType = "[object Function]";
    var concatty = function concatty2(a, b) {
      var arr = [];
      for (var i = 0; i < a.length; i += 1) {
        arr[i] = a[i];
      }
      for (var j = 0; j < b.length; j += 1) {
        arr[j + a.length] = b[j];
      }
      return arr;
    };
    var slicy = function slicy2(arrLike, offset) {
      var arr = [];
      for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {
        arr[j] = arrLike[i];
      }
      return arr;
    };
    var joiny = function(arr, joiner) {
      var str = "";
      for (var i = 0; i < arr.length; i += 1) {
        str += arr[i];
        if (i + 1 < arr.length) {
          str += joiner;
        }
      }
      return str;
    };
    module.exports = function bind(that) {
      var target = this;
      if (typeof target !== "function" || toStr.apply(target) !== funcType) {
        throw new TypeError(ERROR_MESSAGE + target);
      }
      var args = slicy(arguments, 1);
      var bound;
      var binder = function() {
        if (this instanceof bound) {
          var result = target.apply(
            this,
            concatty(args, arguments)
          );
          if (Object(result) === result) {
            return result;
          }
          return this;
        }
        return target.apply(
          that,
          concatty(args, arguments)
        );
      };
      var boundLength = max(0, target.length - args.length);
      var boundArgs = [];
      for (var i = 0; i < boundLength; i++) {
        boundArgs[i] = "$" + i;
      }
      bound = Function("binder", "return function (" + joiny(boundArgs, ",") + "){ return binder.apply(this,arguments); }")(binder);
      if (target.prototype) {
        var Empty = function Empty2() {
        };
        Empty.prototype = target.prototype;
        bound.prototype = new Empty();
        Empty.prototype = null;
      }
      return bound;
    };
  }
});

// node_modules/function-bind/index.js
var require_function_bind = __commonJS({
  "node_modules/function-bind/index.js"(exports, module) {
    "use strict";
    var implementation = require_implementation2();
    module.exports = Function.prototype.bind || implementation;
  }
});

// node_modules/hasown/index.js
var require_hasown = __commonJS({
  "node_modules/hasown/index.js"(exports, module) {
    "use strict";
    var call = Function.prototype.call;
    var $hasOwn = Object.prototype.hasOwnProperty;
    var bind = require_function_bind();
    module.exports = bind.call(call, $hasOwn);
  }
});

// node_modules/get-intrinsic/index.js
var require_get_intrinsic = __commonJS({
  "node_modules/get-intrinsic/index.js"(exports, module) {
    "use strict";
    var undefined2;
    var $SyntaxError = SyntaxError;
    var $Function = Function;
    var $TypeError = TypeError;
    var getEvalledConstructor = function(expressionSyntax) {
      try {
        return $Function('"use strict"; return (' + expressionSyntax + ").constructor;")();
      } catch (e) {
      }
    };
    var $gOPD = Object.getOwnPropertyDescriptor;
    if ($gOPD) {
      try {
        $gOPD({}, "");
      } catch (e) {
        $gOPD = null;
      }
    }
    var throwTypeError = function() {
      throw new $TypeError();
    };
    var ThrowTypeError = $gOPD ? function() {
      try {
        arguments.callee;
        return throwTypeError;
      } catch (calleeThrows) {
        try {
          return $gOPD(arguments, "callee").get;
        } catch (gOPDthrows) {
          return throwTypeError;
        }
      }
    }() : throwTypeError;
    var hasSymbols = require_has_symbols()();
    var hasProto = require_has_proto()();
    var getProto = Object.getPrototypeOf || (hasProto ? function(x) {
      return x.__proto__;
    } : null);
    var needsEval = {};
    var TypedArray = typeof Uint8Array === "undefined" || !getProto ? undefined2 : getProto(Uint8Array);
    var INTRINSICS = {
      "%AggregateError%": typeof AggregateError === "undefined" ? undefined2 : AggregateError,
      "%Array%": Array,
      "%ArrayBuffer%": typeof ArrayBuffer === "undefined" ? undefined2 : ArrayBuffer,
      "%ArrayIteratorPrototype%": hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined2,
      "%AsyncFromSyncIteratorPrototype%": undefined2,
      "%AsyncFunction%": needsEval,
      "%AsyncGenerator%": needsEval,
      "%AsyncGeneratorFunction%": needsEval,
      "%AsyncIteratorPrototype%": needsEval,
      "%Atomics%": typeof Atomics === "undefined" ? undefined2 : Atomics,
      "%BigInt%": typeof BigInt === "undefined" ? undefined2 : BigInt,
      "%BigInt64Array%": typeof BigInt64Array === "undefined" ? undefined2 : BigInt64Array,
      "%BigUint64Array%": typeof BigUint64Array === "undefined" ? undefined2 : BigUint64Array,
      "%Boolean%": Boolean,
      "%DataView%": typeof DataView === "undefined" ? undefined2 : DataView,
      "%Date%": Date,
      "%decodeURI%": decodeURI,
      "%decodeURIComponent%": decodeURIComponent,
      "%encodeURI%": encodeURI,
      "%encodeURIComponent%": encodeURIComponent,
      "%Error%": Error,
      "%eval%": eval,
      // eslint-disable-line no-eval
      "%EvalError%": EvalError,
      "%Float32Array%": typeof Float32Array === "undefined" ? undefined2 : Float32Array,
      "%Float64Array%": typeof Float64Array === "undefined" ? undefined2 : Float64Array,
      "%FinalizationRegistry%": typeof FinalizationRegistry === "undefined" ? undefined2 : FinalizationRegistry,
      "%Function%": $Function,
      "%GeneratorFunction%": needsEval,
      "%Int8Array%": typeof Int8Array === "undefined" ? undefined2 : Int8Array,
      "%Int16Array%": typeof Int16Array === "undefined" ? undefined2 : Int16Array,
      "%Int32Array%": typeof Int32Array === "undefined" ? undefined2 : Int32Array,
      "%isFinite%": isFinite,
      "%isNaN%": isNaN,
      "%IteratorPrototype%": hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined2,
      "%JSON%": typeof JSON === "object" ? JSON : undefined2,
      "%Map%": typeof Map === "undefined" ? undefined2 : Map,
      "%MapIteratorPrototype%": typeof Map === "undefined" || !hasSymbols || !getProto ? undefined2 : getProto((/* @__PURE__ */ new Map())[Symbol.iterator]()),
      "%Math%": Math,
      "%Number%": Number,
      "%Object%": Object,
      "%parseFloat%": parseFloat,
      "%parseInt%": parseInt,
      "%Promise%": typeof Promise === "undefined" ? undefined2 : Promise,
      "%Proxy%": typeof Proxy === "undefined" ? undefined2 : Proxy,
      "%RangeError%": RangeError,
      "%ReferenceError%": ReferenceError,
      "%Reflect%": typeof Reflect === "undefined" ? undefined2 : Reflect,
      "%RegExp%": RegExp,
      "%Set%": typeof Set === "undefined" ? undefined2 : Set,
      "%SetIteratorPrototype%": typeof Set === "undefined" || !hasSymbols || !getProto ? undefined2 : getProto((/* @__PURE__ */ new Set())[Symbol.iterator]()),
      "%SharedArrayBuffer%": typeof SharedArrayBuffer === "undefined" ? undefined2 : SharedArrayBuffer,
      "%String%": String,
      "%StringIteratorPrototype%": hasSymbols && getProto ? getProto(""[Symbol.iterator]()) : undefined2,
      "%Symbol%": hasSymbols ? Symbol : undefined2,
      "%SyntaxError%": $SyntaxError,
      "%ThrowTypeError%": ThrowTypeError,
      "%TypedArray%": TypedArray,
      "%TypeError%": $TypeError,
      "%Uint8Array%": typeof Uint8Array === "undefined" ? undefined2 : Uint8Array,
      "%Uint8ClampedArray%": typeof Uint8ClampedArray === "undefined" ? undefined2 : Uint8ClampedArray,
      "%Uint16Array%": typeof Uint16Array === "undefined" ? undefined2 : Uint16Array,
      "%Uint32Array%": typeof Uint32Array === "undefined" ? undefined2 : Uint32Array,
      "%URIError%": URIError,
      "%WeakMap%": typeof WeakMap === "undefined" ? undefined2 : WeakMap,
      "%WeakRef%": typeof WeakRef === "undefined" ? undefined2 : WeakRef,
      "%WeakSet%": typeof WeakSet === "undefined" ? undefined2 : WeakSet
    };
    if (getProto) {
      try {
        null.error;
      } catch (e) {
        errorProto = getProto(getProto(e));
        INTRINSICS["%Error.prototype%"] = errorProto;
      }
    }
    var errorProto;
    var doEval = function doEval2(name) {
      var value;
      if (name === "%AsyncFunction%") {
        value = getEvalledConstructor("async function () {}");
      } else if (name === "%GeneratorFunction%") {
        value = getEvalledConstructor("function* () {}");
      } else if (name === "%AsyncGeneratorFunction%") {
        value = getEvalledConstructor("async function* () {}");
      } else if (name === "%AsyncGenerator%") {
        var fn = doEval2("%AsyncGeneratorFunction%");
        if (fn) {
          value = fn.prototype;
        }
      } else if (name === "%AsyncIteratorPrototype%") {
        var gen = doEval2("%AsyncGenerator%");
        if (gen && getProto) {
          value = getProto(gen.prototype);
        }
      }
      INTRINSICS[name] = value;
      return value;
    };
    var LEGACY_ALIASES = {
      "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"],
      "%ArrayPrototype%": ["Array", "prototype"],
      "%ArrayProto_entries%": ["Array", "prototype", "entries"],
      "%ArrayProto_forEach%": ["Array", "prototype", "forEach"],
      "%ArrayProto_keys%": ["Array", "prototype", "keys"],
      "%ArrayProto_values%": ["Array", "prototype", "values"],
      "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"],
      "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"],
      "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"],
      "%BooleanPrototype%": ["Boolean", "prototype"],
      "%DataViewPrototype%": ["DataView", "prototype"],
      "%DatePrototype%": ["Date", "prototype"],
      "%ErrorPrototype%": ["Error", "prototype"],
      "%EvalErrorPrototype%": ["EvalError", "prototype"],
      "%Float32ArrayPrototype%": ["Float32Array", "prototype"],
      "%Float64ArrayPrototype%": ["Float64Array", "prototype"],
      "%FunctionPrototype%": ["Function", "prototype"],
      "%Generator%": ["GeneratorFunction", "prototype"],
      "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"],
      "%Int8ArrayPrototype%": ["Int8Array", "prototype"],
      "%Int16ArrayPrototype%": ["Int16Array", "prototype"],
      "%Int32ArrayPrototype%": ["Int32Array", "prototype"],
      "%JSONParse%": ["JSON", "parse"],
      "%JSONStringify%": ["JSON", "stringify"],
      "%MapPrototype%": ["Map", "prototype"],
      "%NumberPrototype%": ["Number", "prototype"],
      "%ObjectPrototype%": ["Object", "prototype"],
      "%ObjProto_toString%": ["Object", "prototype", "toString"],
      "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"],
      "%PromisePrototype%": ["Promise", "prototype"],
      "%PromiseProto_then%": ["Promise", "prototype", "then"],
      "%Promise_all%": ["Promise", "all"],
      "%Promise_reject%": ["Promise", "reject"],
      "%Promise_resolve%": ["Promise", "resolve"],
      "%RangeErrorPrototype%": ["RangeError", "prototype"],
      "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"],
      "%RegExpPrototype%": ["RegExp", "prototype"],
      "%SetPrototype%": ["Set", "prototype"],
      "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"],
      "%StringPrototype%": ["String", "prototype"],
      "%SymbolPrototype%": ["Symbol", "prototype"],
      "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"],
      "%TypedArrayPrototype%": ["TypedArray", "prototype"],
      "%TypeErrorPrototype%": ["TypeError", "prototype"],
      "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"],
      "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"],
      "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"],
      "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"],
      "%URIErrorPrototype%": ["URIError", "prototype"],
      "%WeakMapPrototype%": ["WeakMap", "prototype"],
      "%WeakSetPrototype%": ["WeakSet", "prototype"]
    };
    var bind = require_function_bind();
    var hasOwn = require_hasown();
    var $concat = bind.call(Function.call, Array.prototype.concat);
    var $spliceApply = bind.call(Function.apply, Array.prototype.splice);
    var $replace = bind.call(Function.call, String.prototype.replace);
    var $strSlice = bind.call(Function.call, String.prototype.slice);
    var $exec = bind.call(Function.call, RegExp.prototype.exec);
    var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
    var reEscapeChar = /\\(\\)?/g;
    var stringToPath = function stringToPath2(string) {
      var first = $strSlice(string, 0, 1);
      var last = $strSlice(string, -1);
      if (first === "%" && last !== "%") {
        throw new $SyntaxError("invalid intrinsic syntax, expected closing `%`");
      } else if (last === "%" && first !== "%") {
        throw new $SyntaxError("invalid intrinsic syntax, expected opening `%`");
      }
      var result = [];
      $replace(string, rePropName, function(match, number, quote, subString) {
        result[result.length] = quote ? $replace(subString, reEscapeChar, "$1") : number || match;
      });
      return result;
    };
    var getBaseIntrinsic = function getBaseIntrinsic2(name, allowMissing) {
      var intrinsicName = name;
      var alias;
      if (hasOwn(LEGACY_ALIASES, intrinsicName)) {
        alias = LEGACY_ALIASES[intrinsicName];
        intrinsicName = "%" + alias[0] + "%";
      }
      if (hasOwn(INTRINSICS, intrinsicName)) {
        var value = INTRINSICS[intrinsicName];
        if (value === needsEval) {
          value = doEval(intrinsicName);
        }
        if (typeof value === "undefined" && !allowMissing) {
          throw new $TypeError("intrinsic " + name + " exists, but is not available. Please file an issue!");
        }
        return {
          alias,
          name: intrinsicName,
          value
        };
      }
      throw new $SyntaxError("intrinsic " + name + " does not exist!");
    };
    module.exports = function GetIntrinsic(name, allowMissing) {
      if (typeof name !== "string" || name.length === 0) {
        throw new $TypeError("intrinsic name must be a non-empty string");
      }
      if (arguments.length > 1 && typeof allowMissing !== "boolean") {
        throw new $TypeError('"allowMissing" argument must be a boolean');
      }
      if ($exec(/^%?[^%]*%?$/, name) === null) {
        throw new $SyntaxError("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
      }
      var parts = stringToPath(name);
      var intrinsicBaseName = parts.length > 0 ? parts[0] : "";
      var intrinsic = getBaseIntrinsic("%" + intrinsicBaseName + "%", allowMissing);
      var intrinsicRealName = intrinsic.name;
      var value = intrinsic.value;
      var skipFurtherCaching = false;
      var alias = intrinsic.alias;
      if (alias) {
        intrinsicBaseName = alias[0];
        $spliceApply(parts, $concat([0, 1], alias));
      }
      for (var i = 1, isOwn = true; i < parts.length; i += 1) {
        var part = parts[i];
        var first = $strSlice(part, 0, 1);
        var last = $strSlice(part, -1);
        if ((first === '"' || first === "'" || first === "`" || (last === '"' || last === "'" || last === "`")) && first !== last) {
          throw new $SyntaxError("property names with quotes must have matching quotes");
        }
        if (part === "constructor" || !isOwn) {
          skipFurtherCaching = true;
        }
        intrinsicBaseName += "." + part;
        intrinsicRealName = "%" + intrinsicBaseName + "%";
        if (hasOwn(INTRINSICS, intrinsicRealName)) {
          value = INTRINSICS[intrinsicRealName];
        } else if (value != null) {
          if (!(part in value)) {
            if (!allowMissing) {
              throw new $TypeError("base intrinsic for " + name + " exists, but the property is not available.");
            }
            return void 0;
          }
          if ($gOPD && i + 1 >= parts.length) {
            var desc = $gOPD(value, part);
            isOwn = !!desc;
            if (isOwn && "get" in desc && !("originalValue" in desc.get)) {
              value = desc.get;
            } else {
              value = value[part];
            }
          } else {
            isOwn = hasOwn(value, part);
            value = value[part];
          }
          if (isOwn && !skipFurtherCaching) {
            INTRINSICS[intrinsicRealName] = value;
          }
        }
      }
      return value;
    };
  }
});

// node_modules/has-property-descriptors/index.js
var require_has_property_descriptors = __commonJS({
  "node_modules/has-property-descriptors/index.js"(exports, module) {
    "use strict";
    var GetIntrinsic = require_get_intrinsic();
    var $defineProperty = GetIntrinsic("%Object.defineProperty%", true);
    var hasPropertyDescriptors = function hasPropertyDescriptors2() {
      if ($defineProperty) {
        try {
          $defineProperty({}, "a", { value: 1 });
          return true;
        } catch (e) {
          return false;
        }
      }
      return false;
    };
    hasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {
      if (!hasPropertyDescriptors()) {
        return null;
      }
      try {
        return $defineProperty([], "length", { value: 1 }).length !== 1;
      } catch (e) {
        return true;
      }
    };
    module.exports = hasPropertyDescriptors;
  }
});

// node_modules/gopd/index.js
var require_gopd = __commonJS({
  "node_modules/gopd/index.js"(exports, module) {
    "use strict";
    var GetIntrinsic = require_get_intrinsic();
    var $gOPD = GetIntrinsic("%Object.getOwnPropertyDescriptor%", true);
    if ($gOPD) {
      try {
        $gOPD([], "length");
      } catch (e) {
        $gOPD = null;
      }
    }
    module.exports = $gOPD;
  }
});

// node_modules/define-data-property/index.js
var require_define_data_property = __commonJS({
  "node_modules/define-data-property/index.js"(exports, module) {
    "use strict";
    var hasPropertyDescriptors = require_has_property_descriptors()();
    var GetIntrinsic = require_get_intrinsic();
    var $defineProperty = hasPropertyDescriptors && GetIntrinsic("%Object.defineProperty%", true);
    if ($defineProperty) {
      try {
        $defineProperty({}, "a", { value: 1 });
      } catch (e) {
        $defineProperty = false;
      }
    }
    var $SyntaxError = GetIntrinsic("%SyntaxError%");
    var $TypeError = GetIntrinsic("%TypeError%");
    var gopd = require_gopd();
    module.exports = function defineDataProperty(obj, property, value) {
      if (!obj || typeof obj !== "object" && typeof obj !== "function") {
        throw new $TypeError("`obj` must be an object or a function`");
      }
      if (typeof property !== "string" && typeof property !== "symbol") {
        throw new $TypeError("`property` must be a string or a symbol`");
      }
      if (arguments.length > 3 && typeof arguments[3] !== "boolean" && arguments[3] !== null) {
        throw new $TypeError("`nonEnumerable`, if provided, must be a boolean or null");
      }
      if (arguments.length > 4 && typeof arguments[4] !== "boolean" && arguments[4] !== null) {
        throw new $TypeError("`nonWritable`, if provided, must be a boolean or null");
      }
      if (arguments.length > 5 && typeof arguments[5] !== "boolean" && arguments[5] !== null) {
        throw new $TypeError("`nonConfigurable`, if provided, must be a boolean or null");
      }
      if (arguments.length > 6 && typeof arguments[6] !== "boolean") {
        throw new $TypeError("`loose`, if provided, must be a boolean");
      }
      var nonEnumerable = arguments.length > 3 ? arguments[3] : null;
      var nonWritable = arguments.length > 4 ? arguments[4] : null;
      var nonConfigurable = arguments.length > 5 ? arguments[5] : null;
      var loose = arguments.length > 6 ? arguments[6] : false;
      var desc = !!gopd && gopd(obj, property);
      if ($defineProperty) {
        $defineProperty(obj, property, {
          configurable: nonConfigurable === null && desc ? desc.configurable : !nonConfigurable,
          enumerable: nonEnumerable === null && desc ? desc.enumerable : !nonEnumerable,
          value,
          writable: nonWritable === null && desc ? desc.writable : !nonWritable
        });
      } else if (loose || !nonEnumerable && !nonWritable && !nonConfigurable) {
        obj[property] = value;
      } else {
        throw new $SyntaxError("This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.");
      }
    };
  }
});

// node_modules/define-properties/index.js
var require_define_properties = __commonJS({
  "node_modules/define-properties/index.js"(exports, module) {
    "use strict";
    var keys = require_object_keys();
    var hasSymbols = typeof Symbol === "function" && typeof Symbol("foo") === "symbol";
    var toStr = Object.prototype.toString;
    var concat = Array.prototype.concat;
    var defineDataProperty = require_define_data_property();
    var isFunction = function(fn) {
      return typeof fn === "function" && toStr.call(fn) === "[object Function]";
    };
    var supportsDescriptors = require_has_property_descriptors()();
    var defineProperty = function(object, name, value, predicate) {
      if (name in object) {
        if (predicate === true) {
          if (object[name] === value) {
            return;
          }
        } else if (!isFunction(predicate) || !predicate()) {
          return;
        }
      }
      if (supportsDescriptors) {
        defineDataProperty(object, name, value, true);
      } else {
        defineDataProperty(object, name, value);
      }
    };
    var defineProperties = function(object, map) {
      var predicates = arguments.length > 2 ? arguments[2] : {};
      var props = keys(map);
      if (hasSymbols) {
        props = concat.call(props, Object.getOwnPropertySymbols(map));
      }
      for (var i = 0; i < props.length; i += 1) {
        defineProperty(object, props[i], map[props[i]], predicates[props[i]]);
      }
    };
    defineProperties.supportsDescriptors = !!supportsDescriptors;
    module.exports = defineProperties;
  }
});

// node_modules/globalthis/implementation.browser.js
var require_implementation_browser = __commonJS({
  "node_modules/globalthis/implementation.browser.js"(exports, module) {
    "use strict";
    if (typeof self !== "undefined") {
      module.exports = self;
    } else if (typeof window !== "undefined") {
      module.exports = window;
    } else {
      module.exports = Function("return this")();
    }
  }
});

// node_modules/globalthis/polyfill.js
var require_polyfill = __commonJS({
  "node_modules/globalthis/polyfill.js"(exports, module) {
    "use strict";
    var implementation = require_implementation_browser();
    module.exports = function getPolyfill() {
      if (typeof global !== "object" || !global || global.Math !== Math || global.Array !== Array) {
        return implementation;
      }
      return global;
    };
  }
});

// node_modules/globalthis/shim.js
var require_shim = __commonJS({
  "node_modules/globalthis/shim.js"(exports, module) {
    "use strict";
    var define2 = require_define_properties();
    var getPolyfill = require_polyfill();
    module.exports = function shimGlobal() {
      var polyfill = getPolyfill();
      if (define2.supportsDescriptors) {
        var descriptor = Object.getOwnPropertyDescriptor(polyfill, "globalThis");
        if (!descriptor || descriptor.configurable && (descriptor.enumerable || !descriptor.writable || globalThis !== polyfill)) {
          Object.defineProperty(polyfill, "globalThis", {
            configurable: true,
            enumerable: false,
            value: polyfill,
            writable: true
          });
        }
      } else if (typeof globalThis !== "object" || globalThis !== polyfill) {
        polyfill.globalThis = polyfill;
      }
      return polyfill;
    };
  }
});

// node_modules/globalthis/index.js
var require_globalthis = __commonJS({
  "node_modules/globalthis/index.js"(exports, module) {
    "use strict";
    var defineProperties = require_define_properties();
    var implementation = require_implementation_browser();
    var getPolyfill = require_polyfill();
    var shim = require_shim();
    var polyfill = getPolyfill();
    var getGlobal = function() {
      return polyfill;
    };
    defineProperties(getGlobal, {
      getPolyfill,
      implementation,
      shim
    });
    module.exports = getGlobal;
  }
});

// node_modules/xstream/index.js
var require_xstream = __commonJS({
  "node_modules/xstream/index.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || /* @__PURE__ */ function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (b2.hasOwnProperty(p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.NO_IL = exports.NO = exports.MemoryStream = exports.Stream = void 0;
    var ponyfill_1 = require_ponyfill2();
    var globalthis_1 = require_globalthis();
    var $$observable = ponyfill_1.default(globalthis_1.getPolyfill());
    var NO = {};
    exports.NO = NO;
    function noop() {
    }
    function cp(a) {
      var l = a.length;
      var b = Array(l);
      for (var i = 0; i < l; ++i)
        b[i] = a[i];
      return b;
    }
    function and(f1, f2) {
      return function andFn(t) {
        return f1(t) && f2(t);
      };
    }
    function _try(c, t, u) {
      try {
        return c.f(t);
      } catch (e) {
        u._e(e);
        return NO;
      }
    }
    var NO_IL = {
      _n: noop,
      _e: noop,
      _c: noop
    };
    exports.NO_IL = NO_IL;
    function internalizeProducer(producer) {
      producer._start = function _start(il) {
        il.next = il._n;
        il.error = il._e;
        il.complete = il._c;
        this.start(il);
      };
      producer._stop = producer.stop;
    }
    var StreamSub = (
      /** @class */
      function() {
        function StreamSub2(_stream, _listener) {
          this._stream = _stream;
          this._listener = _listener;
        }
        StreamSub2.prototype.unsubscribe = function() {
          this._stream._remove(this._listener);
        };
        return StreamSub2;
      }()
    );
    var Observer = (
      /** @class */
      function() {
        function Observer2(_listener) {
          this._listener = _listener;
        }
        Observer2.prototype.next = function(value) {
          this._listener._n(value);
        };
        Observer2.prototype.error = function(err) {
          this._listener._e(err);
        };
        Observer2.prototype.complete = function() {
          this._listener._c();
        };
        return Observer2;
      }()
    );
    var FromObservable = (
      /** @class */
      function() {
        function FromObservable2(observable) {
          this.type = "fromObservable";
          this.ins = observable;
          this.active = false;
        }
        FromObservable2.prototype._start = function(out) {
          this.out = out;
          this.active = true;
          this._sub = this.ins.subscribe(new Observer(out));
          if (!this.active)
            this._sub.unsubscribe();
        };
        FromObservable2.prototype._stop = function() {
          if (this._sub)
            this._sub.unsubscribe();
          this.active = false;
        };
        return FromObservable2;
      }()
    );
    var Merge = (
      /** @class */
      function() {
        function Merge2(insArr) {
          this.type = "merge";
          this.insArr = insArr;
          this.out = NO;
          this.ac = 0;
        }
        Merge2.prototype._start = function(out) {
          this.out = out;
          var s = this.insArr;
          var L = s.length;
          this.ac = L;
          for (var i = 0; i < L; i++)
            s[i]._add(this);
        };
        Merge2.prototype._stop = function() {
          var s = this.insArr;
          var L = s.length;
          for (var i = 0; i < L; i++)
            s[i]._remove(this);
          this.out = NO;
        };
        Merge2.prototype._n = function(t) {
          var u = this.out;
          if (u === NO)
            return;
          u._n(t);
        };
        Merge2.prototype._e = function(err) {
          var u = this.out;
          if (u === NO)
            return;
          u._e(err);
        };
        Merge2.prototype._c = function() {
          if (--this.ac <= 0) {
            var u = this.out;
            if (u === NO)
              return;
            u._c();
          }
        };
        return Merge2;
      }()
    );
    var CombineListener = (
      /** @class */
      function() {
        function CombineListener2(i, out, p) {
          this.i = i;
          this.out = out;
          this.p = p;
          p.ils.push(this);
        }
        CombineListener2.prototype._n = function(t) {
          var p = this.p, out = this.out;
          if (out === NO)
            return;
          if (p.up(t, this.i)) {
            var b = cp(p.vals);
            out._n(b);
          }
        };
        CombineListener2.prototype._e = function(err) {
          var out = this.out;
          if (out === NO)
            return;
          out._e(err);
        };
        CombineListener2.prototype._c = function() {
          var p = this.p;
          if (p.out === NO)
            return;
          if (--p.Nc === 0)
            p.out._c();
        };
        return CombineListener2;
      }()
    );
    var Combine = (
      /** @class */
      function() {
        function Combine2(insArr) {
          this.type = "combine";
          this.insArr = insArr;
          this.out = NO;
          this.ils = [];
          this.Nc = this.Nn = 0;
          this.vals = [];
        }
        Combine2.prototype.up = function(t, i) {
          var v = this.vals[i];
          var Nn = !this.Nn ? 0 : v === NO ? --this.Nn : this.Nn;
          this.vals[i] = t;
          return Nn === 0;
        };
        Combine2.prototype._start = function(out) {
          this.out = out;
          var s = this.insArr;
          var n = this.Nc = this.Nn = s.length;
          var vals = this.vals = new Array(n);
          if (n === 0) {
            out._n([]);
            out._c();
          } else {
            for (var i = 0; i < n; i++) {
              vals[i] = NO;
              s[i]._add(new CombineListener(i, out, this));
            }
          }
        };
        Combine2.prototype._stop = function() {
          var s = this.insArr;
          var n = s.length;
          var ils = this.ils;
          for (var i = 0; i < n; i++)
            s[i]._remove(ils[i]);
          this.out = NO;
          this.ils = [];
          this.vals = [];
        };
        return Combine2;
      }()
    );
    var FromArray = (
      /** @class */
      function() {
        function FromArray2(a) {
          this.type = "fromArray";
          this.a = a;
        }
        FromArray2.prototype._start = function(out) {
          var a = this.a;
          for (var i = 0, n = a.length; i < n; i++)
            out._n(a[i]);
          out._c();
        };
        FromArray2.prototype._stop = function() {
        };
        return FromArray2;
      }()
    );
    var FromPromise = (
      /** @class */
      function() {
        function FromPromise2(p) {
          this.type = "fromPromise";
          this.on = false;
          this.p = p;
        }
        FromPromise2.prototype._start = function(out) {
          var prod = this;
          this.on = true;
          this.p.then(function(v) {
            if (prod.on) {
              out._n(v);
              out._c();
            }
          }, function(e) {
            out._e(e);
          }).then(noop, function(err) {
            setTimeout(function() {
              throw err;
            });
          });
        };
        FromPromise2.prototype._stop = function() {
          this.on = false;
        };
        return FromPromise2;
      }()
    );
    var Periodic = (
      /** @class */
      function() {
        function Periodic2(period) {
          this.type = "periodic";
          this.period = period;
          this.intervalID = -1;
          this.i = 0;
        }
        Periodic2.prototype._start = function(out) {
          var self2 = this;
          function intervalHandler() {
            out._n(self2.i++);
          }
          this.intervalID = setInterval(intervalHandler, this.period);
        };
        Periodic2.prototype._stop = function() {
          if (this.intervalID !== -1)
            clearInterval(this.intervalID);
          this.intervalID = -1;
          this.i = 0;
        };
        return Periodic2;
      }()
    );
    var Debug = (
      /** @class */
      function() {
        function Debug2(ins, arg) {
          this.type = "debug";
          this.ins = ins;
          this.out = NO;
          this.s = noop;
          this.l = "";
          if (typeof arg === "string")
            this.l = arg;
          else if (typeof arg === "function")
            this.s = arg;
        }
        Debug2.prototype._start = function(out) {
          this.out = out;
          this.ins._add(this);
        };
        Debug2.prototype._stop = function() {
          this.ins._remove(this);
          this.out = NO;
        };
        Debug2.prototype._n = function(t) {
          var u = this.out;
          if (u === NO)
            return;
          var s = this.s, l = this.l;
          if (s !== noop) {
            try {
              s(t);
            } catch (e) {
              u._e(e);
            }
          } else if (l)
            console.log(l + ":", t);
          else
            console.log(t);
          u._n(t);
        };
        Debug2.prototype._e = function(err) {
          var u = this.out;
          if (u === NO)
            return;
          u._e(err);
        };
        Debug2.prototype._c = function() {
          var u = this.out;
          if (u === NO)
            return;
          u._c();
        };
        return Debug2;
      }()
    );
    var Drop = (
      /** @class */
      function() {
        function Drop2(max, ins) {
          this.type = "drop";
          this.ins = ins;
          this.out = NO;
          this.max = max;
          this.dropped = 0;
        }
        Drop2.prototype._start = function(out) {
          this.out = out;
          this.dropped = 0;
          this.ins._add(this);
        };
        Drop2.prototype._stop = function() {
          this.ins._remove(this);
          this.out = NO;
        };
        Drop2.prototype._n = function(t) {
          var u = this.out;
          if (u === NO)
            return;
          if (this.dropped++ >= this.max)
            u._n(t);
        };
        Drop2.prototype._e = function(err) {
          var u = this.out;
          if (u === NO)
            return;
          u._e(err);
        };
        Drop2.prototype._c = function() {
          var u = this.out;
          if (u === NO)
            return;
          u._c();
        };
        return Drop2;
      }()
    );
    var EndWhenListener = (
      /** @class */
      function() {
        function EndWhenListener2(out, op) {
          this.out = out;
          this.op = op;
        }
        EndWhenListener2.prototype._n = function() {
          this.op.end();
        };
        EndWhenListener2.prototype._e = function(err) {
          this.out._e(err);
        };
        EndWhenListener2.prototype._c = function() {
          this.op.end();
        };
        return EndWhenListener2;
      }()
    );
    var EndWhen = (
      /** @class */
      function() {
        function EndWhen2(o, ins) {
          this.type = "endWhen";
          this.ins = ins;
          this.out = NO;
          this.o = o;
          this.oil = NO_IL;
        }
        EndWhen2.prototype._start = function(out) {
          this.out = out;
          this.o._add(this.oil = new EndWhenListener(out, this));
          this.ins._add(this);
        };
        EndWhen2.prototype._stop = function() {
          this.ins._remove(this);
          this.o._remove(this.oil);
          this.out = NO;
          this.oil = NO_IL;
        };
        EndWhen2.prototype.end = function() {
          var u = this.out;
          if (u === NO)
            return;
          u._c();
        };
        EndWhen2.prototype._n = function(t) {
          var u = this.out;
          if (u === NO)
            return;
          u._n(t);
        };
        EndWhen2.prototype._e = function(err) {
          var u = this.out;
          if (u === NO)
            return;
          u._e(err);
        };
        EndWhen2.prototype._c = function() {
          this.end();
        };
        return EndWhen2;
      }()
    );
    var Filter = (
      /** @class */
      function() {
        function Filter2(passes, ins) {
          this.type = "filter";
          this.ins = ins;
          this.out = NO;
          this.f = passes;
        }
        Filter2.prototype._start = function(out) {
          this.out = out;
          this.ins._add(this);
        };
        Filter2.prototype._stop = function() {
          this.ins._remove(this);
          this.out = NO;
        };
        Filter2.prototype._n = function(t) {
          var u = this.out;
          if (u === NO)
            return;
          var r = _try(this, t, u);
          if (r === NO || !r)
            return;
          u._n(t);
        };
        Filter2.prototype._e = function(err) {
          var u = this.out;
          if (u === NO)
            return;
          u._e(err);
        };
        Filter2.prototype._c = function() {
          var u = this.out;
          if (u === NO)
            return;
          u._c();
        };
        return Filter2;
      }()
    );
    var FlattenListener = (
      /** @class */
      function() {
        function FlattenListener2(out, op) {
          this.out = out;
          this.op = op;
        }
        FlattenListener2.prototype._n = function(t) {
          this.out._n(t);
        };
        FlattenListener2.prototype._e = function(err) {
          this.out._e(err);
        };
        FlattenListener2.prototype._c = function() {
          this.op.inner = NO;
          this.op.less();
        };
        return FlattenListener2;
      }()
    );
    var Flatten = (
      /** @class */
      function() {
        function Flatten2(ins) {
          this.type = "flatten";
          this.ins = ins;
          this.out = NO;
          this.open = true;
          this.inner = NO;
          this.il = NO_IL;
        }
        Flatten2.prototype._start = function(out) {
          this.out = out;
          this.open = true;
          this.inner = NO;
          this.il = NO_IL;
          this.ins._add(this);
        };
        Flatten2.prototype._stop = function() {
          this.ins._remove(this);
          if (this.inner !== NO)
            this.inner._remove(this.il);
          this.out = NO;
          this.open = true;
          this.inner = NO;
          this.il = NO_IL;
        };
        Flatten2.prototype.less = function() {
          var u = this.out;
          if (u === NO)
            return;
          if (!this.open && this.inner === NO)
            u._c();
        };
        Flatten2.prototype._n = function(s) {
          var u = this.out;
          if (u === NO)
            return;
          var _a = this, inner = _a.inner, il = _a.il;
          if (inner !== NO && il !== NO_IL)
            inner._remove(il);
          (this.inner = s)._add(this.il = new FlattenListener(u, this));
        };
        Flatten2.prototype._e = function(err) {
          var u = this.out;
          if (u === NO)
            return;
          u._e(err);
        };
        Flatten2.prototype._c = function() {
          this.open = false;
          this.less();
        };
        return Flatten2;
      }()
    );
    var Fold = (
      /** @class */
      function() {
        function Fold2(f, seed, ins) {
          var _this = this;
          this.type = "fold";
          this.ins = ins;
          this.out = NO;
          this.f = function(t) {
            return f(_this.acc, t);
          };
          this.acc = this.seed = seed;
        }
        Fold2.prototype._start = function(out) {
          this.out = out;
          this.acc = this.seed;
          out._n(this.acc);
          this.ins._add(this);
        };
        Fold2.prototype._stop = function() {
          this.ins._remove(this);
          this.out = NO;
          this.acc = this.seed;
        };
        Fold2.prototype._n = function(t) {
          var u = this.out;
          if (u === NO)
            return;
          var r = _try(this, t, u);
          if (r === NO)
            return;
          u._n(this.acc = r);
        };
        Fold2.prototype._e = function(err) {
          var u = this.out;
          if (u === NO)
            return;
          u._e(err);
        };
        Fold2.prototype._c = function() {
          var u = this.out;
          if (u === NO)
            return;
          u._c();
        };
        return Fold2;
      }()
    );
    var Last = (
      /** @class */
      function() {
        function Last2(ins) {
          this.type = "last";
          this.ins = ins;
          this.out = NO;
          this.has = false;
          this.val = NO;
        }
        Last2.prototype._start = function(out) {
          this.out = out;
          this.has = false;
          this.ins._add(this);
        };
        Last2.prototype._stop = function() {
          this.ins._remove(this);
          this.out = NO;
          this.val = NO;
        };
        Last2.prototype._n = function(t) {
          this.has = true;
          this.val = t;
        };
        Last2.prototype._e = function(err) {
          var u = this.out;
          if (u === NO)
            return;
          u._e(err);
        };
        Last2.prototype._c = function() {
          var u = this.out;
          if (u === NO)
            return;
          if (this.has) {
            u._n(this.val);
            u._c();
          } else
            u._e(new Error("last() failed because input stream completed"));
        };
        return Last2;
      }()
    );
    var MapOp = (
      /** @class */
      function() {
        function MapOp2(project, ins) {
          this.type = "map";
          this.ins = ins;
          this.out = NO;
          this.f = project;
        }
        MapOp2.prototype._start = function(out) {
          this.out = out;
          this.ins._add(this);
        };
        MapOp2.prototype._stop = function() {
          this.ins._remove(this);
          this.out = NO;
        };
        MapOp2.prototype._n = function(t) {
          var u = this.out;
          if (u === NO)
            return;
          var r = _try(this, t, u);
          if (r === NO)
            return;
          u._n(r);
        };
        MapOp2.prototype._e = function(err) {
          var u = this.out;
          if (u === NO)
            return;
          u._e(err);
        };
        MapOp2.prototype._c = function() {
          var u = this.out;
          if (u === NO)
            return;
          u._c();
        };
        return MapOp2;
      }()
    );
    var Remember = (
      /** @class */
      function() {
        function Remember2(ins) {
          this.type = "remember";
          this.ins = ins;
          this.out = NO;
        }
        Remember2.prototype._start = function(out) {
          this.out = out;
          this.ins._add(out);
        };
        Remember2.prototype._stop = function() {
          this.ins._remove(this.out);
          this.out = NO;
        };
        return Remember2;
      }()
    );
    var ReplaceError = (
      /** @class */
      function() {
        function ReplaceError2(replacer, ins) {
          this.type = "replaceError";
          this.ins = ins;
          this.out = NO;
          this.f = replacer;
        }
        ReplaceError2.prototype._start = function(out) {
          this.out = out;
          this.ins._add(this);
        };
        ReplaceError2.prototype._stop = function() {
          this.ins._remove(this);
          this.out = NO;
        };
        ReplaceError2.prototype._n = function(t) {
          var u = this.out;
          if (u === NO)
            return;
          u._n(t);
        };
        ReplaceError2.prototype._e = function(err) {
          var u = this.out;
          if (u === NO)
            return;
          try {
            this.ins._remove(this);
            (this.ins = this.f(err))._add(this);
          } catch (e) {
            u._e(e);
          }
        };
        ReplaceError2.prototype._c = function() {
          var u = this.out;
          if (u === NO)
            return;
          u._c();
        };
        return ReplaceError2;
      }()
    );
    var StartWith = (
      /** @class */
      function() {
        function StartWith2(ins, val) {
          this.type = "startWith";
          this.ins = ins;
          this.out = NO;
          this.val = val;
        }
        StartWith2.prototype._start = function(out) {
          this.out = out;
          this.out._n(this.val);
          this.ins._add(out);
        };
        StartWith2.prototype._stop = function() {
          this.ins._remove(this.out);
          this.out = NO;
        };
        return StartWith2;
      }()
    );
    var Take = (
      /** @class */
      function() {
        function Take2(max, ins) {
          this.type = "take";
          this.ins = ins;
          this.out = NO;
          this.max = max;
          this.taken = 0;
        }
        Take2.prototype._start = function(out) {
          this.out = out;
          this.taken = 0;
          if (this.max <= 0)
            out._c();
          else
            this.ins._add(this);
        };
        Take2.prototype._stop = function() {
          this.ins._remove(this);
          this.out = NO;
        };
        Take2.prototype._n = function(t) {
          var u = this.out;
          if (u === NO)
            return;
          var m = ++this.taken;
          if (m < this.max)
            u._n(t);
          else if (m === this.max) {
            u._n(t);
            u._c();
          }
        };
        Take2.prototype._e = function(err) {
          var u = this.out;
          if (u === NO)
            return;
          u._e(err);
        };
        Take2.prototype._c = function() {
          var u = this.out;
          if (u === NO)
            return;
          u._c();
        };
        return Take2;
      }()
    );
    var Stream = (
      /** @class */
      function() {
        function Stream2(producer) {
          this._prod = producer || NO;
          this._ils = [];
          this._stopID = NO;
          this._dl = NO;
          this._d = false;
          this._target = null;
          this._err = NO;
        }
        Stream2.prototype._n = function(t) {
          var a = this._ils;
          var L = a.length;
          if (this._d)
            this._dl._n(t);
          if (L == 1)
            a[0]._n(t);
          else if (L == 0)
            return;
          else {
            var b = cp(a);
            for (var i = 0; i < L; i++)
              b[i]._n(t);
          }
        };
        Stream2.prototype._e = function(err) {
          if (this._err !== NO)
            return;
          this._err = err;
          var a = this._ils;
          var L = a.length;
          this._x();
          if (this._d)
            this._dl._e(err);
          if (L == 1)
            a[0]._e(err);
          else if (L == 0)
            return;
          else {
            var b = cp(a);
            for (var i = 0; i < L; i++)
              b[i]._e(err);
          }
          if (!this._d && L == 0)
            throw this._err;
        };
        Stream2.prototype._c = function() {
          var a = this._ils;
          var L = a.length;
          this._x();
          if (this._d)
            this._dl._c();
          if (L == 1)
            a[0]._c();
          else if (L == 0)
            return;
          else {
            var b = cp(a);
            for (var i = 0; i < L; i++)
              b[i]._c();
          }
        };
        Stream2.prototype._x = function() {
          if (this._ils.length === 0)
            return;
          if (this._prod !== NO)
            this._prod._stop();
          this._err = NO;
          this._ils = [];
        };
        Stream2.prototype._stopNow = function() {
          this._prod._stop();
          this._err = NO;
          this._stopID = NO;
        };
        Stream2.prototype._add = function(il) {
          var ta = this._target;
          if (ta)
            return ta._add(il);
          var a = this._ils;
          a.push(il);
          if (a.length > 1)
            return;
          if (this._stopID !== NO) {
            clearTimeout(this._stopID);
            this._stopID = NO;
          } else {
            var p = this._prod;
            if (p !== NO)
              p._start(this);
          }
        };
        Stream2.prototype._remove = function(il) {
          var _this = this;
          var ta = this._target;
          if (ta)
            return ta._remove(il);
          var a = this._ils;
          var i = a.indexOf(il);
          if (i > -1) {
            a.splice(i, 1);
            if (this._prod !== NO && a.length <= 0) {
              this._err = NO;
              this._stopID = setTimeout(function() {
                return _this._stopNow();
              });
            } else if (a.length === 1) {
              this._pruneCycles();
            }
          }
        };
        Stream2.prototype._pruneCycles = function() {
          if (this._hasNoSinks(this, []))
            this._remove(this._ils[0]);
        };
        Stream2.prototype._hasNoSinks = function(x, trace) {
          if (trace.indexOf(x) !== -1)
            return true;
          else if (x.out === this)
            return true;
          else if (x.out && x.out !== NO)
            return this._hasNoSinks(x.out, trace.concat(x));
          else if (x._ils) {
            for (var i = 0, N = x._ils.length; i < N; i++)
              if (!this._hasNoSinks(x._ils[i], trace.concat(x)))
                return false;
            return true;
          } else
            return false;
        };
        Stream2.prototype.ctor = function() {
          return this instanceof MemoryStream ? MemoryStream : Stream2;
        };
        Stream2.prototype.addListener = function(listener) {
          listener._n = listener.next || noop;
          listener._e = listener.error || noop;
          listener._c = listener.complete || noop;
          this._add(listener);
        };
        Stream2.prototype.removeListener = function(listener) {
          this._remove(listener);
        };
        Stream2.prototype.subscribe = function(listener) {
          this.addListener(listener);
          return new StreamSub(this, listener);
        };
        Stream2.prototype[$$observable] = function() {
          return this;
        };
        Stream2.create = function(producer) {
          if (producer) {
            if (typeof producer.start !== "function" || typeof producer.stop !== "function")
              throw new Error("producer requires both start and stop functions");
            internalizeProducer(producer);
          }
          return new Stream2(producer);
        };
        Stream2.createWithMemory = function(producer) {
          if (producer)
            internalizeProducer(producer);
          return new MemoryStream(producer);
        };
        Stream2.never = function() {
          return new Stream2({ _start: noop, _stop: noop });
        };
        Stream2.empty = function() {
          return new Stream2({
            _start: function(il) {
              il._c();
            },
            _stop: noop
          });
        };
        Stream2.throw = function(error) {
          return new Stream2({
            _start: function(il) {
              il._e(error);
            },
            _stop: noop
          });
        };
        Stream2.from = function(input) {
          if (typeof input[$$observable] === "function")
            return Stream2.fromObservable(input);
          else if (typeof input.then === "function")
            return Stream2.fromPromise(input);
          else if (Array.isArray(input))
            return Stream2.fromArray(input);
          throw new TypeError("Type of input to from() must be an Array, Promise, or Observable");
        };
        Stream2.of = function() {
          var items = [];
          for (var _i = 0; _i < arguments.length; _i++) {
            items[_i] = arguments[_i];
          }
          return Stream2.fromArray(items);
        };
        Stream2.fromArray = function(array) {
          return new Stream2(new FromArray(array));
        };
        Stream2.fromPromise = function(promise) {
          return new Stream2(new FromPromise(promise));
        };
        Stream2.fromObservable = function(obs) {
          if (obs.endWhen !== void 0)
            return obs;
          var o = typeof obs[$$observable] === "function" ? obs[$$observable]() : obs;
          return new Stream2(new FromObservable(o));
        };
        Stream2.periodic = function(period) {
          return new Stream2(new Periodic(period));
        };
        Stream2.prototype._map = function(project) {
          return new (this.ctor())(new MapOp(project, this));
        };
        Stream2.prototype.map = function(project) {
          return this._map(project);
        };
        Stream2.prototype.mapTo = function(projectedValue) {
          var s = this.map(function() {
            return projectedValue;
          });
          var op = s._prod;
          op.type = "mapTo";
          return s;
        };
        Stream2.prototype.filter = function(passes) {
          var p = this._prod;
          if (p instanceof Filter)
            return new Stream2(new Filter(and(p.f, passes), p.ins));
          return new Stream2(new Filter(passes, this));
        };
        Stream2.prototype.take = function(amount) {
          return new (this.ctor())(new Take(amount, this));
        };
        Stream2.prototype.drop = function(amount) {
          return new Stream2(new Drop(amount, this));
        };
        Stream2.prototype.last = function() {
          return new Stream2(new Last(this));
        };
        Stream2.prototype.startWith = function(initial) {
          return new MemoryStream(new StartWith(this, initial));
        };
        Stream2.prototype.endWhen = function(other) {
          return new (this.ctor())(new EndWhen(other, this));
        };
        Stream2.prototype.fold = function(accumulate, seed) {
          return new MemoryStream(new Fold(accumulate, seed, this));
        };
        Stream2.prototype.replaceError = function(replace) {
          return new (this.ctor())(new ReplaceError(replace, this));
        };
        Stream2.prototype.flatten = function() {
          return new Stream2(new Flatten(this));
        };
        Stream2.prototype.compose = function(operator) {
          return operator(this);
        };
        Stream2.prototype.remember = function() {
          return new MemoryStream(new Remember(this));
        };
        Stream2.prototype.debug = function(labelOrSpy) {
          return new (this.ctor())(new Debug(this, labelOrSpy));
        };
        Stream2.prototype.imitate = function(target) {
          if (target instanceof MemoryStream)
            throw new Error("A MemoryStream was given to imitate(), but it only supports a Stream. Read more about this restriction here: https://github.com/staltz/xstream#faq");
          this._target = target;
          for (var ils = this._ils, N = ils.length, i = 0; i < N; i++)
            target._add(ils[i]);
          this._ils = [];
        };
        Stream2.prototype.shamefullySendNext = function(value) {
          this._n(value);
        };
        Stream2.prototype.shamefullySendError = function(error) {
          this._e(error);
        };
        Stream2.prototype.shamefullySendComplete = function() {
          this._c();
        };
        Stream2.prototype.setDebugListener = function(listener) {
          if (!listener) {
            this._d = false;
            this._dl = NO;
          } else {
            this._d = true;
            listener._n = listener.next || noop;
            listener._e = listener.error || noop;
            listener._c = listener.complete || noop;
            this._dl = listener;
          }
        };
        Stream2.merge = function merge() {
          var streams = [];
          for (var _i = 0; _i < arguments.length; _i++) {
            streams[_i] = arguments[_i];
          }
          return new Stream2(new Merge(streams));
        };
        Stream2.combine = function combine() {
          var streams = [];
          for (var _i = 0; _i < arguments.length; _i++) {
            streams[_i] = arguments[_i];
          }
          return new Stream2(new Combine(streams));
        };
        return Stream2;
      }()
    );
    exports.Stream = Stream;
    var MemoryStream = (
      /** @class */
      function(_super) {
        __extends(MemoryStream2, _super);
        function MemoryStream2(producer) {
          var _this = _super.call(this, producer) || this;
          _this._has = false;
          return _this;
        }
        MemoryStream2.prototype._n = function(x) {
          this._v = x;
          this._has = true;
          _super.prototype._n.call(this, x);
        };
        MemoryStream2.prototype._add = function(il) {
          var ta = this._target;
          if (ta)
            return ta._add(il);
          var a = this._ils;
          a.push(il);
          if (a.length > 1) {
            if (this._has)
              il._n(this._v);
            return;
          }
          if (this._stopID !== NO) {
            if (this._has)
              il._n(this._v);
            clearTimeout(this._stopID);
            this._stopID = NO;
          } else if (this._has)
            il._n(this._v);
          else {
            var p = this._prod;
            if (p !== NO)
              p._start(this);
          }
        };
        MemoryStream2.prototype._stopNow = function() {
          this._has = false;
          _super.prototype._stopNow.call(this);
        };
        MemoryStream2.prototype._x = function() {
          this._has = false;
          _super.prototype._x.call(this);
        };
        MemoryStream2.prototype.map = function(project) {
          return this._map(project);
        };
        MemoryStream2.prototype.mapTo = function(projectedValue) {
          return _super.prototype.mapTo.call(this, projectedValue);
        };
        MemoryStream2.prototype.take = function(amount) {
          return _super.prototype.take.call(this, amount);
        };
        MemoryStream2.prototype.endWhen = function(other) {
          return _super.prototype.endWhen.call(this, other);
        };
        MemoryStream2.prototype.replaceError = function(replace) {
          return _super.prototype.replaceError.call(this, replace);
        };
        MemoryStream2.prototype.remember = function() {
          return this;
        };
        MemoryStream2.prototype.debug = function(labelOrSpy) {
          return _super.prototype.debug.call(this, labelOrSpy);
        };
        return MemoryStream2;
      }(Stream)
    );
    exports.MemoryStream = MemoryStream;
    var xs = Stream;
    exports.default = xs;
  }
});

// node_modules/@cosmjs/stream/build/concat.js
var require_concat = __commonJS({
  "node_modules/@cosmjs/stream/build/concat.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.concat = void 0;
    var xstream_1 = require_xstream();
    function concat(...streams) {
      const subscriptions = new Array();
      const queues = new Array();
      const completedStreams = /* @__PURE__ */ new Set();
      let activeStreamIndex = 0;
      function reset() {
        while (subscriptions.length > 0) {
          const subscription = subscriptions.shift();
          subscription.unsubscribe();
        }
        queues.length = 0;
        completedStreams.clear();
        activeStreamIndex = 0;
      }
      const producer = {
        start: (listener) => {
          streams.forEach((_) => queues.push([]));
          function emitAllQueuesEvents(streamIndex) {
            while (true) {
              const element = queues[streamIndex].shift();
              if (element === void 0) {
                return;
              }
              listener.next(element);
            }
          }
          function isDone() {
            return activeStreamIndex >= streams.length;
          }
          if (isDone()) {
            listener.complete();
            return;
          }
          streams.forEach((stream, index) => {
            subscriptions.push(stream.subscribe({
              next: (value) => {
                if (index === activeStreamIndex) {
                  listener.next(value);
                } else {
                  queues[index].push(value);
                }
              },
              complete: () => {
                completedStreams.add(index);
                while (completedStreams.has(activeStreamIndex)) {
                  emitAllQueuesEvents(activeStreamIndex);
                  activeStreamIndex++;
                }
                if (isDone()) {
                  listener.complete();
                } else {
                  emitAllQueuesEvents(activeStreamIndex);
                }
              },
              error: (error) => {
                listener.error(error);
                reset();
              }
            }));
          });
        },
        stop: () => {
          reset();
        }
      };
      return xstream_1.Stream.create(producer);
    }
    exports.concat = concat;
  }
});

// node_modules/@cosmjs/stream/build/defaultvalueproducer.js
var require_defaultvalueproducer = __commonJS({
  "node_modules/@cosmjs/stream/build/defaultvalueproducer.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.DefaultValueProducer = void 0;
    var DefaultValueProducer = class {
      constructor(value, callbacks) {
        this.callbacks = callbacks;
        this.internalValue = value;
      }
      get value() {
        return this.internalValue;
      }
      /**
       * Update the current value.
       *
       * If producer is active (i.e. someone is listening), this emits an event.
       * If not, just the current value is updated.
       */
      update(value) {
        this.internalValue = value;
        if (this.listener) {
          this.listener.next(value);
        }
      }
      /**
       * Produce an error
       */
      // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
      error(error) {
        if (this.listener) {
          this.listener.error(error);
        }
      }
      /**
       * Called by the stream. Do not call this directly.
       */
      start(listener) {
        this.listener = listener;
        listener.next(this.internalValue);
        if (this.callbacks) {
          this.callbacks.onStarted();
        }
      }
      /**
       * Called by the stream. Do not call this directly.
       */
      stop() {
        if (this.callbacks) {
          this.callbacks.onStop();
        }
        this.listener = void 0;
      }
    };
    exports.DefaultValueProducer = DefaultValueProducer;
  }
});

// node_modules/@cosmjs/stream/build/dropduplicates.js
var require_dropduplicates = __commonJS({
  "node_modules/@cosmjs/stream/build/dropduplicates.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.dropDuplicates = void 0;
    function dropDuplicates(valueToKey) {
      const operand = (instream) => {
        const emittedKeys = /* @__PURE__ */ new Set();
        const deduplicatedStream = instream.filter((value) => !emittedKeys.has(valueToKey(value))).debug((value) => emittedKeys.add(valueToKey(value)));
        return deduplicatedStream;
      };
      return operand;
    }
    exports.dropDuplicates = dropDuplicates;
  }
});

// node_modules/@cosmjs/stream/build/promise.js
var require_promise = __commonJS({
  "node_modules/@cosmjs/stream/build/promise.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.firstEvent = exports.toListPromise = exports.fromListPromise = void 0;
    var xstream_1 = require_xstream();
    function fromListPromise(promise) {
      const producer = {
        start: (listener) => {
          promise.then((iterable) => {
            for (const element of iterable) {
              listener.next(element);
            }
            listener.complete();
          }).catch((error) => listener.error(error));
        },
        // eslint-disable-next-line @typescript-eslint/no-empty-function
        stop: () => {
        }
      };
      return xstream_1.Stream.create(producer);
    }
    exports.fromListPromise = fromListPromise;
    async function toListPromise(stream, count) {
      return new Promise((resolve, reject) => {
        if (count === 0) {
          resolve([]);
          return;
        }
        const events = new Array();
        stream.take(count).subscribe({
          next: (event) => {
            events.push(event);
            if (events.length === count) {
              resolve(events);
            }
          },
          complete: () => {
            reject(`Stream completed before all events could be collected. Collected ${events.length}, expected ${count}`);
          },
          error: (error) => reject(error)
        });
      });
    }
    exports.toListPromise = toListPromise;
    async function firstEvent(stream) {
      return (await toListPromise(stream, 1))[0];
    }
    exports.firstEvent = firstEvent;
  }
});

// node_modules/@cosmjs/stream/build/reducer.js
var require_reducer = __commonJS({
  "node_modules/@cosmjs/stream/build/reducer.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.lastValue = exports.asArray = exports.countStream = exports.Reducer = void 0;
    var Reducer = class {
      constructor(stream, reducer, initState) {
        this.stream = stream;
        this.reducer = reducer;
        this.state = initState;
        this.completed = new Promise((resolve, reject) => {
          const subscription = this.stream.subscribe({
            next: (evt) => {
              this.state = this.reducer(this.state, evt);
            },
            complete: () => {
              resolve();
              subscription.unsubscribe();
            },
            error: (err) => {
              reject(err);
              subscription.unsubscribe();
            }
          });
        });
      }
      // value returns current materialized state
      value() {
        return this.state;
      }
      // finished resolves on completed stream, rejects on stream error
      async finished() {
        return this.completed;
      }
    };
    exports.Reducer = Reducer;
    function increment(sum, _) {
      return sum + 1;
    }
    function countStream(stream) {
      return new Reducer(stream, increment, 0);
    }
    exports.countStream = countStream;
    function append(list, evt) {
      return [...list, evt];
    }
    function asArray(stream) {
      return new Reducer(stream, append, []);
    }
    exports.asArray = asArray;
    function last(_, event) {
      return event;
    }
    function lastValue(stream) {
      return new Reducer(stream, last, void 0);
    }
    exports.lastValue = lastValue;
  }
});

// node_modules/@cosmjs/stream/build/valueandupdates.js
var require_valueandupdates = __commonJS({
  "node_modules/@cosmjs/stream/build/valueandupdates.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ValueAndUpdates = void 0;
    var xstream_1 = require_xstream();
    var ValueAndUpdates = class {
      constructor(producer) {
        this.producer = producer;
        this.updates = xstream_1.MemoryStream.createWithMemory(this.producer);
      }
      get value() {
        return this.producer.value;
      }
      /**
       * Resolves as soon as search value is found.
       *
       * @param search either a value or a function that must return true when found
       * @returns the value of the update that caused the search match
       */
      async waitFor(search) {
        const searchImplementation = typeof search === "function" ? search : (value) => value === search;
        return new Promise((resolve, reject) => {
          const subscription = this.updates.subscribe({
            next: (newValue) => {
              if (searchImplementation(newValue)) {
                resolve(newValue);
                setTimeout(() => subscription.unsubscribe(), 0);
              }
            },
            complete: () => {
              subscription.unsubscribe();
              reject("Update stream completed without expected value");
            },
            error: (error) => {
              reject(error);
            }
          });
        });
      }
    };
    exports.ValueAndUpdates = ValueAndUpdates;
  }
});

// node_modules/@cosmjs/stream/build/index.js
var require_build8 = __commonJS({
  "node_modules/@cosmjs/stream/build/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ValueAndUpdates = exports.toListPromise = exports.fromListPromise = exports.firstEvent = exports.dropDuplicates = exports.DefaultValueProducer = exports.concat = void 0;
    var concat_1 = require_concat();
    Object.defineProperty(exports, "concat", { enumerable: true, get: function() {
      return concat_1.concat;
    } });
    var defaultvalueproducer_1 = require_defaultvalueproducer();
    Object.defineProperty(exports, "DefaultValueProducer", { enumerable: true, get: function() {
      return defaultvalueproducer_1.DefaultValueProducer;
    } });
    var dropduplicates_1 = require_dropduplicates();
    Object.defineProperty(exports, "dropDuplicates", { enumerable: true, get: function() {
      return dropduplicates_1.dropDuplicates;
    } });
    var promise_1 = require_promise();
    Object.defineProperty(exports, "firstEvent", { enumerable: true, get: function() {
      return promise_1.firstEvent;
    } });
    Object.defineProperty(exports, "fromListPromise", { enumerable: true, get: function() {
      return promise_1.fromListPromise;
    } });
    Object.defineProperty(exports, "toListPromise", { enumerable: true, get: function() {
      return promise_1.toListPromise;
    } });
    __exportStar(require_reducer(), exports);
    var valueandupdates_1 = require_valueandupdates();
    Object.defineProperty(exports, "ValueAndUpdates", { enumerable: true, get: function() {
      return valueandupdates_1.ValueAndUpdates;
    } });
  }
});

// node_modules/@cosmjs/stargate/build/queryclient/queryclient.js
var require_queryclient = __commonJS({
  "node_modules/@cosmjs/stargate/build/queryclient/queryclient.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.QueryClient = void 0;
    var ics23_1 = require_build7();
    var encoding_1 = require_build2();
    var stream_1 = require_build8();
    var utils_1 = require_build3();
    function checkAndParseOp(op, kind, key) {
      if (op.type !== kind) {
        throw new Error(`Op expected to be ${kind}, got "${op.type}`);
      }
      if (!(0, utils_1.arrayContentEquals)(key, op.key)) {
        throw new Error(`Proven key different than queried key.
Query: ${(0, encoding_1.toHex)(key)}
Proven: ${(0, encoding_1.toHex)(op.key)}`);
      }
      return ics23_1.ics23.CommitmentProof.decode(op.data);
    }
    var QueryClient = class _QueryClient {
      constructor(tmClient) {
        this.tmClient = tmClient;
      }
      static withExtensions(tmClient, ...extensionSetups) {
        const client = new _QueryClient(tmClient);
        const extensions = extensionSetups.map((setupExtension) => setupExtension(client));
        for (const extension of extensions) {
          (0, utils_1.assert)((0, utils_1.isNonNullObject)(extension), `Extension must be a non-null object`);
          for (const [moduleKey, moduleValue] of Object.entries(extension)) {
            (0, utils_1.assert)((0, utils_1.isNonNullObject)(moduleValue), `Module must be a non-null object. Found type ${typeof moduleValue} for module "${moduleKey}".`);
            const current = client[moduleKey] || {};
            client[moduleKey] = {
              ...current,
              ...moduleValue
            };
          }
        }
        return client;
      }
      /**
       * @deprecated use queryStoreVerified instead
       */
      async queryVerified(store, queryKey, desiredHeight) {
        const { value } = await this.queryStoreVerified(store, queryKey, desiredHeight);
        return value;
      }
      /**
       * Queries the database store with a proof, which is then verified.
       *
       * Please note: the current implementation trusts block headers it gets from the PRC endpoint.
       */
      async queryStoreVerified(store, queryKey, desiredHeight) {
        const { height, proof, key, value } = await this.queryRawProof(store, queryKey, desiredHeight);
        const subProof = checkAndParseOp(proof.ops[0], "ics23:iavl", queryKey);
        const storeProof = checkAndParseOp(proof.ops[1], "ics23:simple", (0, encoding_1.toAscii)(store));
        (0, utils_1.assert)(storeProof.exist);
        (0, utils_1.assert)(storeProof.exist.value);
        if (!value || value.length === 0) {
          (0, utils_1.assert)(subProof.nonexist);
          (0, ics23_1.verifyNonExistence)(subProof.nonexist, ics23_1.iavlSpec, storeProof.exist.value, queryKey);
        } else {
          (0, utils_1.assert)(subProof.exist);
          (0, utils_1.assert)(subProof.exist.value);
          (0, ics23_1.verifyExistence)(subProof.exist, ics23_1.iavlSpec, storeProof.exist.value, queryKey, value);
        }
        const header = await this.getNextHeader(height);
        (0, ics23_1.verifyExistence)(storeProof.exist, ics23_1.tendermintSpec, header.appHash, (0, encoding_1.toAscii)(store), storeProof.exist.value);
        return { key, value, height };
      }
      async queryRawProof(store, queryKey, desiredHeight) {
        const { key, value, height, proof, code, log } = await this.tmClient.abciQuery({
          // we need the StoreKey for the module, not the module name
          // https://github.com/cosmos/cosmos-sdk/blob/8cab43c8120fec5200c3459cbf4a92017bb6f287/x/auth/types/keys.go#L12
          path: `/store/${store}/key`,
          data: queryKey,
          prove: true,
          height: desiredHeight
        });
        if (code) {
          throw new Error(`Query failed with (${code}): ${log}`);
        }
        if (!(0, utils_1.arrayContentEquals)(queryKey, key)) {
          throw new Error(`Response key ${(0, encoding_1.toHex)(key)} doesn't match query key ${(0, encoding_1.toHex)(queryKey)}`);
        }
        if (!height) {
          throw new Error("No query height returned");
        }
        if (!proof || proof.ops.length !== 2) {
          throw new Error(`Expected 2 proof ops, got ${(proof == null ? void 0 : proof.ops.length) ?? 0}. Are you using stargate?`);
        }
        checkAndParseOp(proof.ops[0], "ics23:iavl", key);
        checkAndParseOp(proof.ops[1], "ics23:simple", (0, encoding_1.toAscii)(store));
        return {
          key,
          value,
          height,
          // need to clone this: readonly input / writeable output
          proof: {
            ops: [...proof.ops]
          }
        };
      }
      /**
       * Performs an ABCI query to Tendermint without requesting a proof.
       *
       * @deprecated use queryAbci instead
       */
      async queryUnverified(path, request, desiredHeight) {
        const response = await this.queryAbci(path, request, desiredHeight);
        return response.value;
      }
      /**
       * Performs an ABCI query to Tendermint without requesting a proof.
       *
       * If the `desiredHeight` is set, a particular height is requested. Otherwise
       * the latest height is requested. The response contains the actual height of
       * the query.
       */
      async queryAbci(path, request, desiredHeight) {
        const response = await this.tmClient.abciQuery({
          path,
          data: request,
          prove: false,
          height: desiredHeight
        });
        if (response.code) {
          throw new Error(`Query failed with (${response.code}): ${response.log}`);
        }
        if (!response.height) {
          throw new Error("No query height returned");
        }
        return {
          value: response.value,
          height: response.height
        };
      }
      // this must return the header for height+1
      // throws an error if height is 0 or undefined
      async getNextHeader(height) {
        (0, utils_1.assertDefined)(height);
        if (height === 0) {
          throw new Error("Query returned height 0, cannot prove it");
        }
        const searchHeight = height + 1;
        let nextHeader;
        let headersSubscription;
        try {
          headersSubscription = this.tmClient.subscribeNewBlockHeader();
        } catch {
        }
        if (headersSubscription) {
          const firstHeader = await (0, stream_1.firstEvent)(headersSubscription);
          if (firstHeader.height === searchHeight) {
            nextHeader = firstHeader;
          }
        }
        while (!nextHeader) {
          const correctHeader = (await this.tmClient.blockchain(height, searchHeight)).blockMetas.map((meta) => meta.header).find((h) => h.height === searchHeight);
          if (correctHeader) {
            nextHeader = correctHeader;
          } else {
            await (0, utils_1.sleep)(1e3);
          }
        }
        (0, utils_1.assert)(nextHeader.height === searchHeight, "Got wrong header. This is a bug in the logic above.");
        return nextHeader;
      }
    };
    exports.QueryClient = QueryClient;
  }
});

// node_modules/@cosmjs/stargate/build/queryclient/utils.js
var require_utils6 = __commonJS({
  "node_modules/@cosmjs/stargate/build/queryclient/utils.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.decodeCosmosSdkDecFromProto = exports.longify = exports.createProtobufRpcClient = exports.createPagination = exports.toAccAddress = void 0;
    var encoding_1 = require_build2();
    var math_1 = require_build();
    var pagination_1 = require_pagination();
    var long_1 = __importDefault(require_long());
    function toAccAddress(address) {
      return (0, encoding_1.fromBech32)(address).data;
    }
    exports.toAccAddress = toAccAddress;
    function createPagination(paginationKey) {
      return paginationKey ? pagination_1.PageRequest.fromPartial({ key: paginationKey }) : void 0;
    }
    exports.createPagination = createPagination;
    function createProtobufRpcClient(base) {
      return {
        request: async (service, method, data) => {
          const path = `/${service}/${method}`;
          const response = await base.queryAbci(path, data, void 0);
          return response.value;
        }
      };
    }
    exports.createProtobufRpcClient = createProtobufRpcClient;
    function longify(value) {
      const checkedValue = math_1.Uint64.fromString(value.toString());
      return long_1.default.fromBytesBE([...checkedValue.toBytesBigEndian()], true);
    }
    exports.longify = longify;
    function decodeCosmosSdkDecFromProto(input) {
      const asString = typeof input === "string" ? input : (0, encoding_1.fromAscii)(input);
      return math_1.Decimal.fromAtomics(asString, 18);
    }
    exports.decodeCosmosSdkDecFromProto = decodeCosmosSdkDecFromProto;
  }
});

// node_modules/@cosmjs/stargate/build/queryclient/index.js
var require_queryclient2 = __commonJS({
  "node_modules/@cosmjs/stargate/build/queryclient/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.longify = exports.decodeCosmosSdkDecFromProto = exports.createProtobufRpcClient = exports.createPagination = exports.QueryClient = void 0;
    var queryclient_1 = require_queryclient();
    Object.defineProperty(exports, "QueryClient", { enumerable: true, get: function() {
      return queryclient_1.QueryClient;
    } });
    var utils_1 = require_utils6();
    Object.defineProperty(exports, "createPagination", { enumerable: true, get: function() {
      return utils_1.createPagination;
    } });
    Object.defineProperty(exports, "createProtobufRpcClient", { enumerable: true, get: function() {
      return utils_1.createProtobufRpcClient;
    } });
    Object.defineProperty(exports, "decodeCosmosSdkDecFromProto", { enumerable: true, get: function() {
      return utils_1.decodeCosmosSdkDecFromProto;
    } });
    Object.defineProperty(exports, "longify", { enumerable: true, get: function() {
      return utils_1.longify;
    } });
  }
});

// node_modules/@cosmjs/stargate/build/modules/auth/queries.js
var require_queries = __commonJS({
  "node_modules/@cosmjs/stargate/build/modules/auth/queries.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.setupAuthExtension = void 0;
    var query_1 = require_query();
    var queryclient_1 = require_queryclient2();
    function setupAuthExtension(base) {
      const rpc = (0, queryclient_1.createProtobufRpcClient)(base);
      const queryService = new query_1.QueryClientImpl(rpc);
      return {
        auth: {
          account: async (address) => {
            const { account } = await queryService.Account({ address });
            return account ?? null;
          }
        }
      };
    }
    exports.setupAuthExtension = setupAuthExtension;
  }
});

// node_modules/@cosmjs/stargate/build/modules/authz/aminomessages.js
var require_aminomessages = __commonJS({
  "node_modules/@cosmjs/stargate/build/modules/authz/aminomessages.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createAuthzAminoConverters = void 0;
    function createAuthzAminoConverters() {
      return {
        "/cosmos.authz.v1beta1.MsgGrant": "not_supported_by_chain",
        "/cosmos.authz.v1beta1.MsgExec": "not_supported_by_chain",
        "/cosmos.authz.v1beta1.MsgRevoke": "not_supported_by_chain"
      };
    }
    exports.createAuthzAminoConverters = createAuthzAminoConverters;
  }
});

// node_modules/cosmjs-types/google/protobuf/timestamp.js
var require_timestamp = __commonJS({
  "node_modules/cosmjs-types/google/protobuf/timestamp.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Timestamp = exports.protobufPackage = void 0;
    var helpers_1 = require_helpers();
    var _m0 = __importStar(require_minimal());
    exports.protobufPackage = "google.protobuf";
    function createBaseTimestamp() {
      return {
        seconds: helpers_1.Long.ZERO,
        nanos: 0
      };
    }
    exports.Timestamp = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.seconds.isZero()) {
          writer.uint32(8).int64(message.seconds);
        }
        if (message.nanos !== 0) {
          writer.uint32(16).int32(message.nanos);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseTimestamp();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.seconds = reader.int64();
              break;
            case 2:
              message.nanos = reader.int32();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          seconds: (0, helpers_1.isSet)(object.seconds) ? helpers_1.Long.fromValue(object.seconds) : helpers_1.Long.ZERO,
          nanos: (0, helpers_1.isSet)(object.nanos) ? Number(object.nanos) : 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.seconds !== void 0 && (obj.seconds = (message.seconds || helpers_1.Long.ZERO).toString());
        message.nanos !== void 0 && (obj.nanos = Math.round(message.nanos));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseTimestamp();
        message.seconds = object.seconds !== void 0 && object.seconds !== null ? helpers_1.Long.fromValue(object.seconds) : helpers_1.Long.ZERO;
        message.nanos = object.nanos ?? 0;
        return message;
      }
    };
  }
});

// node_modules/cosmjs-types/cosmos/authz/v1beta1/authz.js
var require_authz = __commonJS({
  "node_modules/cosmjs-types/cosmos/authz/v1beta1/authz.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.GrantAuthorization = exports.Grant = exports.GenericAuthorization = exports.protobufPackage = void 0;
    var any_1 = require_any();
    var timestamp_1 = require_timestamp();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.authz.v1beta1";
    function createBaseGenericAuthorization() {
      return {
        msg: ""
      };
    }
    exports.GenericAuthorization = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.msg !== "") {
          writer.uint32(10).string(message.msg);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseGenericAuthorization();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.msg = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          msg: (0, helpers_1.isSet)(object.msg) ? String(object.msg) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.msg !== void 0 && (obj.msg = message.msg);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseGenericAuthorization();
        message.msg = object.msg ?? "";
        return message;
      }
    };
    function createBaseGrant() {
      return {
        authorization: void 0,
        expiration: void 0
      };
    }
    exports.Grant = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.authorization !== void 0) {
          any_1.Any.encode(message.authorization, writer.uint32(10).fork()).ldelim();
        }
        if (message.expiration !== void 0) {
          timestamp_1.Timestamp.encode(message.expiration, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseGrant();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.authorization = any_1.Any.decode(reader, reader.uint32());
              break;
            case 2:
              message.expiration = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          authorization: (0, helpers_1.isSet)(object.authorization) ? any_1.Any.fromJSON(object.authorization) : void 0,
          expiration: (0, helpers_1.isSet)(object.expiration) ? (0, helpers_1.fromJsonTimestamp)(object.expiration) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.authorization !== void 0 && (obj.authorization = message.authorization ? any_1.Any.toJSON(message.authorization) : void 0);
        message.expiration !== void 0 && (obj.expiration = (0, helpers_1.fromTimestamp)(message.expiration).toISOString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseGrant();
        message.authorization = object.authorization !== void 0 && object.authorization !== null ? any_1.Any.fromPartial(object.authorization) : void 0;
        message.expiration = object.expiration !== void 0 && object.expiration !== null ? timestamp_1.Timestamp.fromPartial(object.expiration) : void 0;
        return message;
      }
    };
    function createBaseGrantAuthorization() {
      return {
        granter: "",
        grantee: "",
        authorization: void 0,
        expiration: void 0
      };
    }
    exports.GrantAuthorization = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.granter !== "") {
          writer.uint32(10).string(message.granter);
        }
        if (message.grantee !== "") {
          writer.uint32(18).string(message.grantee);
        }
        if (message.authorization !== void 0) {
          any_1.Any.encode(message.authorization, writer.uint32(26).fork()).ldelim();
        }
        if (message.expiration !== void 0) {
          timestamp_1.Timestamp.encode(message.expiration, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseGrantAuthorization();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.granter = reader.string();
              break;
            case 2:
              message.grantee = reader.string();
              break;
            case 3:
              message.authorization = any_1.Any.decode(reader, reader.uint32());
              break;
            case 4:
              message.expiration = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          granter: (0, helpers_1.isSet)(object.granter) ? String(object.granter) : "",
          grantee: (0, helpers_1.isSet)(object.grantee) ? String(object.grantee) : "",
          authorization: (0, helpers_1.isSet)(object.authorization) ? any_1.Any.fromJSON(object.authorization) : void 0,
          expiration: (0, helpers_1.isSet)(object.expiration) ? (0, helpers_1.fromJsonTimestamp)(object.expiration) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.granter !== void 0 && (obj.granter = message.granter);
        message.grantee !== void 0 && (obj.grantee = message.grantee);
        message.authorization !== void 0 && (obj.authorization = message.authorization ? any_1.Any.toJSON(message.authorization) : void 0);
        message.expiration !== void 0 && (obj.expiration = (0, helpers_1.fromTimestamp)(message.expiration).toISOString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseGrantAuthorization();
        message.granter = object.granter ?? "";
        message.grantee = object.grantee ?? "";
        message.authorization = object.authorization !== void 0 && object.authorization !== null ? any_1.Any.fromPartial(object.authorization) : void 0;
        message.expiration = object.expiration !== void 0 && object.expiration !== null ? timestamp_1.Timestamp.fromPartial(object.expiration) : void 0;
        return message;
      }
    };
  }
});

// node_modules/cosmjs-types/cosmos/authz/v1beta1/tx.js
var require_tx3 = __commonJS({
  "node_modules/cosmjs-types/cosmos/authz/v1beta1/tx.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MsgClientImpl = exports.MsgRevokeResponse = exports.MsgRevoke = exports.MsgGrantResponse = exports.MsgExec = exports.MsgExecResponse = exports.MsgGrant = exports.protobufPackage = void 0;
    var authz_1 = require_authz();
    var any_1 = require_any();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.authz.v1beta1";
    function createBaseMsgGrant() {
      return {
        granter: "",
        grantee: "",
        grant: void 0
      };
    }
    exports.MsgGrant = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.granter !== "") {
          writer.uint32(10).string(message.granter);
        }
        if (message.grantee !== "") {
          writer.uint32(18).string(message.grantee);
        }
        if (message.grant !== void 0) {
          authz_1.Grant.encode(message.grant, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgGrant();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.granter = reader.string();
              break;
            case 2:
              message.grantee = reader.string();
              break;
            case 3:
              message.grant = authz_1.Grant.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          granter: (0, helpers_1.isSet)(object.granter) ? String(object.granter) : "",
          grantee: (0, helpers_1.isSet)(object.grantee) ? String(object.grantee) : "",
          grant: (0, helpers_1.isSet)(object.grant) ? authz_1.Grant.fromJSON(object.grant) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.granter !== void 0 && (obj.granter = message.granter);
        message.grantee !== void 0 && (obj.grantee = message.grantee);
        message.grant !== void 0 && (obj.grant = message.grant ? authz_1.Grant.toJSON(message.grant) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgGrant();
        message.granter = object.granter ?? "";
        message.grantee = object.grantee ?? "";
        message.grant = object.grant !== void 0 && object.grant !== null ? authz_1.Grant.fromPartial(object.grant) : void 0;
        return message;
      }
    };
    function createBaseMsgExecResponse() {
      return {
        results: []
      };
    }
    exports.MsgExecResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.results) {
          writer.uint32(10).bytes(v);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgExecResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.results.push(reader.bytes());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          results: Array.isArray(object == null ? void 0 : object.results) ? object.results.map((e) => (0, helpers_1.bytesFromBase64)(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.results) {
          obj.results = message.results.map((e) => (0, helpers_1.base64FromBytes)(e !== void 0 ? e : new Uint8Array()));
        } else {
          obj.results = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseMsgExecResponse();
        message.results = ((_a = object.results) == null ? void 0 : _a.map((e) => e)) || [];
        return message;
      }
    };
    function createBaseMsgExec() {
      return {
        grantee: "",
        msgs: []
      };
    }
    exports.MsgExec = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.grantee !== "") {
          writer.uint32(10).string(message.grantee);
        }
        for (const v of message.msgs) {
          any_1.Any.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgExec();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.grantee = reader.string();
              break;
            case 2:
              message.msgs.push(any_1.Any.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          grantee: (0, helpers_1.isSet)(object.grantee) ? String(object.grantee) : "",
          msgs: Array.isArray(object == null ? void 0 : object.msgs) ? object.msgs.map((e) => any_1.Any.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.grantee !== void 0 && (obj.grantee = message.grantee);
        if (message.msgs) {
          obj.msgs = message.msgs.map((e) => e ? any_1.Any.toJSON(e) : void 0);
        } else {
          obj.msgs = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseMsgExec();
        message.grantee = object.grantee ?? "";
        message.msgs = ((_a = object.msgs) == null ? void 0 : _a.map((e) => any_1.Any.fromPartial(e))) || [];
        return message;
      }
    };
    function createBaseMsgGrantResponse() {
      return {};
    }
    exports.MsgGrantResponse = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgGrantResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseMsgGrantResponse();
        return message;
      }
    };
    function createBaseMsgRevoke() {
      return {
        granter: "",
        grantee: "",
        msgTypeUrl: ""
      };
    }
    exports.MsgRevoke = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.granter !== "") {
          writer.uint32(10).string(message.granter);
        }
        if (message.grantee !== "") {
          writer.uint32(18).string(message.grantee);
        }
        if (message.msgTypeUrl !== "") {
          writer.uint32(26).string(message.msgTypeUrl);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgRevoke();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.granter = reader.string();
              break;
            case 2:
              message.grantee = reader.string();
              break;
            case 3:
              message.msgTypeUrl = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          granter: (0, helpers_1.isSet)(object.granter) ? String(object.granter) : "",
          grantee: (0, helpers_1.isSet)(object.grantee) ? String(object.grantee) : "",
          msgTypeUrl: (0, helpers_1.isSet)(object.msgTypeUrl) ? String(object.msgTypeUrl) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.granter !== void 0 && (obj.granter = message.granter);
        message.grantee !== void 0 && (obj.grantee = message.grantee);
        message.msgTypeUrl !== void 0 && (obj.msgTypeUrl = message.msgTypeUrl);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgRevoke();
        message.granter = object.granter ?? "";
        message.grantee = object.grantee ?? "";
        message.msgTypeUrl = object.msgTypeUrl ?? "";
        return message;
      }
    };
    function createBaseMsgRevokeResponse() {
      return {};
    }
    exports.MsgRevokeResponse = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgRevokeResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseMsgRevokeResponse();
        return message;
      }
    };
    var MsgClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.Grant = this.Grant.bind(this);
        this.Exec = this.Exec.bind(this);
        this.Revoke = this.Revoke.bind(this);
      }
      Grant(request) {
        const data = exports.MsgGrant.encode(request).finish();
        const promise = this.rpc.request("cosmos.authz.v1beta1.Msg", "Grant", data);
        return promise.then((data2) => exports.MsgGrantResponse.decode(new _m0.Reader(data2)));
      }
      Exec(request) {
        const data = exports.MsgExec.encode(request).finish();
        const promise = this.rpc.request("cosmos.authz.v1beta1.Msg", "Exec", data);
        return promise.then((data2) => exports.MsgExecResponse.decode(new _m0.Reader(data2)));
      }
      Revoke(request) {
        const data = exports.MsgRevoke.encode(request).finish();
        const promise = this.rpc.request("cosmos.authz.v1beta1.Msg", "Revoke", data);
        return promise.then((data2) => exports.MsgRevokeResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.MsgClientImpl = MsgClientImpl;
  }
});

// node_modules/@cosmjs/stargate/build/modules/authz/messages.js
var require_messages = __commonJS({
  "node_modules/@cosmjs/stargate/build/modules/authz/messages.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.authzTypes = void 0;
    var tx_1 = require_tx3();
    exports.authzTypes = [
      ["/cosmos.authz.v1beta1.MsgExec", tx_1.MsgExec],
      ["/cosmos.authz.v1beta1.MsgGrant", tx_1.MsgGrant],
      ["/cosmos.authz.v1beta1.MsgRevoke", tx_1.MsgRevoke]
    ];
  }
});

// node_modules/cosmjs-types/cosmos/authz/v1beta1/query.js
var require_query2 = __commonJS({
  "node_modules/cosmjs-types/cosmos/authz/v1beta1/query.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.QueryClientImpl = exports.QueryGranteeGrantsResponse = exports.QueryGranteeGrantsRequest = exports.QueryGranterGrantsResponse = exports.QueryGranterGrantsRequest = exports.QueryGrantsResponse = exports.QueryGrantsRequest = exports.protobufPackage = void 0;
    var pagination_1 = require_pagination();
    var authz_1 = require_authz();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.authz.v1beta1";
    function createBaseQueryGrantsRequest() {
      return {
        granter: "",
        grantee: "",
        msgTypeUrl: "",
        pagination: void 0
      };
    }
    exports.QueryGrantsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.granter !== "") {
          writer.uint32(10).string(message.granter);
        }
        if (message.grantee !== "") {
          writer.uint32(18).string(message.grantee);
        }
        if (message.msgTypeUrl !== "") {
          writer.uint32(26).string(message.msgTypeUrl);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryGrantsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.granter = reader.string();
              break;
            case 2:
              message.grantee = reader.string();
              break;
            case 3:
              message.msgTypeUrl = reader.string();
              break;
            case 4:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          granter: (0, helpers_1.isSet)(object.granter) ? String(object.granter) : "",
          grantee: (0, helpers_1.isSet)(object.grantee) ? String(object.grantee) : "",
          msgTypeUrl: (0, helpers_1.isSet)(object.msgTypeUrl) ? String(object.msgTypeUrl) : "",
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.granter !== void 0 && (obj.granter = message.granter);
        message.grantee !== void 0 && (obj.grantee = message.grantee);
        message.msgTypeUrl !== void 0 && (obj.msgTypeUrl = message.msgTypeUrl);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryGrantsRequest();
        message.granter = object.granter ?? "";
        message.grantee = object.grantee ?? "";
        message.msgTypeUrl = object.msgTypeUrl ?? "";
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryGrantsResponse() {
      return {
        grants: [],
        pagination: void 0
      };
    }
    exports.QueryGrantsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.grants) {
          authz_1.Grant.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryGrantsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.grants.push(authz_1.Grant.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          grants: Array.isArray(object == null ? void 0 : object.grants) ? object.grants.map((e) => authz_1.Grant.fromJSON(e)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.grants) {
          obj.grants = message.grants.map((e) => e ? authz_1.Grant.toJSON(e) : void 0);
        } else {
          obj.grants = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryGrantsResponse();
        message.grants = ((_a = object.grants) == null ? void 0 : _a.map((e) => authz_1.Grant.fromPartial(e))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryGranterGrantsRequest() {
      return {
        granter: "",
        pagination: void 0
      };
    }
    exports.QueryGranterGrantsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.granter !== "") {
          writer.uint32(10).string(message.granter);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryGranterGrantsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.granter = reader.string();
              break;
            case 2:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          granter: (0, helpers_1.isSet)(object.granter) ? String(object.granter) : "",
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.granter !== void 0 && (obj.granter = message.granter);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryGranterGrantsRequest();
        message.granter = object.granter ?? "";
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryGranterGrantsResponse() {
      return {
        grants: [],
        pagination: void 0
      };
    }
    exports.QueryGranterGrantsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.grants) {
          authz_1.GrantAuthorization.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryGranterGrantsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.grants.push(authz_1.GrantAuthorization.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          grants: Array.isArray(object == null ? void 0 : object.grants) ? object.grants.map((e) => authz_1.GrantAuthorization.fromJSON(e)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.grants) {
          obj.grants = message.grants.map((e) => e ? authz_1.GrantAuthorization.toJSON(e) : void 0);
        } else {
          obj.grants = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryGranterGrantsResponse();
        message.grants = ((_a = object.grants) == null ? void 0 : _a.map((e) => authz_1.GrantAuthorization.fromPartial(e))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryGranteeGrantsRequest() {
      return {
        grantee: "",
        pagination: void 0
      };
    }
    exports.QueryGranteeGrantsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.grantee !== "") {
          writer.uint32(10).string(message.grantee);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryGranteeGrantsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.grantee = reader.string();
              break;
            case 2:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          grantee: (0, helpers_1.isSet)(object.grantee) ? String(object.grantee) : "",
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.grantee !== void 0 && (obj.grantee = message.grantee);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryGranteeGrantsRequest();
        message.grantee = object.grantee ?? "";
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryGranteeGrantsResponse() {
      return {
        grants: [],
        pagination: void 0
      };
    }
    exports.QueryGranteeGrantsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.grants) {
          authz_1.GrantAuthorization.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryGranteeGrantsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.grants.push(authz_1.GrantAuthorization.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          grants: Array.isArray(object == null ? void 0 : object.grants) ? object.grants.map((e) => authz_1.GrantAuthorization.fromJSON(e)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.grants) {
          obj.grants = message.grants.map((e) => e ? authz_1.GrantAuthorization.toJSON(e) : void 0);
        } else {
          obj.grants = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryGranteeGrantsResponse();
        message.grants = ((_a = object.grants) == null ? void 0 : _a.map((e) => authz_1.GrantAuthorization.fromPartial(e))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    var QueryClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.Grants = this.Grants.bind(this);
        this.GranterGrants = this.GranterGrants.bind(this);
        this.GranteeGrants = this.GranteeGrants.bind(this);
      }
      Grants(request) {
        const data = exports.QueryGrantsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.authz.v1beta1.Query", "Grants", data);
        return promise.then((data2) => exports.QueryGrantsResponse.decode(new _m0.Reader(data2)));
      }
      GranterGrants(request) {
        const data = exports.QueryGranterGrantsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.authz.v1beta1.Query", "GranterGrants", data);
        return promise.then((data2) => exports.QueryGranterGrantsResponse.decode(new _m0.Reader(data2)));
      }
      GranteeGrants(request) {
        const data = exports.QueryGranteeGrantsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.authz.v1beta1.Query", "GranteeGrants", data);
        return promise.then((data2) => exports.QueryGranteeGrantsResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.QueryClientImpl = QueryClientImpl;
  }
});

// node_modules/@cosmjs/stargate/build/modules/authz/queries.js
var require_queries2 = __commonJS({
  "node_modules/@cosmjs/stargate/build/modules/authz/queries.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.setupAuthzExtension = void 0;
    var query_1 = require_query2();
    var queryclient_1 = require_queryclient2();
    function setupAuthzExtension(base) {
      const rpc = (0, queryclient_1.createProtobufRpcClient)(base);
      const queryService = new query_1.QueryClientImpl(rpc);
      return {
        authz: {
          grants: async (granter, grantee, msgTypeUrl, paginationKey) => {
            return await queryService.Grants({
              granter,
              grantee,
              msgTypeUrl,
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            });
          },
          granteeGrants: async (grantee, paginationKey) => {
            return await queryService.GranteeGrants({
              grantee,
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            });
          },
          granterGrants: async (granter, paginationKey) => {
            return await queryService.GranterGrants({
              granter,
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            });
          }
        }
      };
    }
    exports.setupAuthzExtension = setupAuthzExtension;
  }
});

// node_modules/@cosmjs/stargate/build/modules/bank/aminomessages.js
var require_aminomessages2 = __commonJS({
  "node_modules/@cosmjs/stargate/build/modules/bank/aminomessages.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createBankAminoConverters = exports.isAminoMsgMultiSend = exports.isAminoMsgSend = void 0;
    function isAminoMsgSend(msg) {
      return msg.type === "cosmos-sdk/MsgSend";
    }
    exports.isAminoMsgSend = isAminoMsgSend;
    function isAminoMsgMultiSend(msg) {
      return msg.type === "cosmos-sdk/MsgMultiSend";
    }
    exports.isAminoMsgMultiSend = isAminoMsgMultiSend;
    function createBankAminoConverters() {
      return {
        "/cosmos.bank.v1beta1.MsgSend": {
          aminoType: "cosmos-sdk/MsgSend",
          toAmino: ({ fromAddress, toAddress, amount }) => ({
            from_address: fromAddress,
            to_address: toAddress,
            amount: [...amount]
          }),
          fromAmino: ({ from_address, to_address, amount }) => ({
            fromAddress: from_address,
            toAddress: to_address,
            amount: [...amount]
          })
        },
        "/cosmos.bank.v1beta1.MsgMultiSend": {
          aminoType: "cosmos-sdk/MsgMultiSend",
          toAmino: ({ inputs, outputs }) => ({
            inputs: inputs.map((input) => ({
              address: input.address,
              coins: [...input.coins]
            })),
            outputs: outputs.map((output) => ({
              address: output.address,
              coins: [...output.coins]
            }))
          }),
          fromAmino: ({ inputs, outputs }) => ({
            inputs: inputs.map((input) => ({
              address: input.address,
              coins: [...input.coins]
            })),
            outputs: outputs.map((output) => ({
              address: output.address,
              coins: [...output.coins]
            }))
          })
        }
      };
    }
    exports.createBankAminoConverters = createBankAminoConverters;
  }
});

// node_modules/@cosmjs/stargate/build/modules/bank/messages.js
var require_messages2 = __commonJS({
  "node_modules/@cosmjs/stargate/build/modules/bank/messages.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isMsgSendEncodeObject = exports.bankTypes = void 0;
    var tx_1 = require_tx2();
    exports.bankTypes = [
      ["/cosmos.bank.v1beta1.MsgMultiSend", tx_1.MsgMultiSend],
      ["/cosmos.bank.v1beta1.MsgSend", tx_1.MsgSend]
    ];
    function isMsgSendEncodeObject(encodeObject) {
      return encodeObject.typeUrl === "/cosmos.bank.v1beta1.MsgSend";
    }
    exports.isMsgSendEncodeObject = isMsgSendEncodeObject;
  }
});

// node_modules/cosmjs-types/cosmos/bank/v1beta1/query.js
var require_query3 = __commonJS({
  "node_modules/cosmjs-types/cosmos/bank/v1beta1/query.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.QueryClientImpl = exports.QueryDenomMetadataResponse = exports.QueryDenomMetadataRequest = exports.QueryDenomsMetadataResponse = exports.QueryDenomsMetadataRequest = exports.QueryParamsResponse = exports.QueryParamsRequest = exports.QuerySupplyOfResponse = exports.QuerySupplyOfRequest = exports.QueryTotalSupplyResponse = exports.QueryTotalSupplyRequest = exports.QuerySpendableBalancesResponse = exports.QuerySpendableBalancesRequest = exports.QueryAllBalancesResponse = exports.QueryAllBalancesRequest = exports.QueryBalanceResponse = exports.QueryBalanceRequest = exports.protobufPackage = void 0;
    var pagination_1 = require_pagination();
    var coin_1 = require_coin();
    var bank_1 = require_bank();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.bank.v1beta1";
    function createBaseQueryBalanceRequest() {
      return {
        address: "",
        denom: ""
      };
    }
    exports.QueryBalanceRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.address !== "") {
          writer.uint32(10).string(message.address);
        }
        if (message.denom !== "") {
          writer.uint32(18).string(message.denom);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryBalanceRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.address = reader.string();
              break;
            case 2:
              message.denom = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          address: (0, helpers_1.isSet)(object.address) ? String(object.address) : "",
          denom: (0, helpers_1.isSet)(object.denom) ? String(object.denom) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.address !== void 0 && (obj.address = message.address);
        message.denom !== void 0 && (obj.denom = message.denom);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryBalanceRequest();
        message.address = object.address ?? "";
        message.denom = object.denom ?? "";
        return message;
      }
    };
    function createBaseQueryBalanceResponse() {
      return {
        balance: void 0
      };
    }
    exports.QueryBalanceResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.balance !== void 0) {
          coin_1.Coin.encode(message.balance, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryBalanceResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.balance = coin_1.Coin.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          balance: (0, helpers_1.isSet)(object.balance) ? coin_1.Coin.fromJSON(object.balance) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.balance !== void 0 && (obj.balance = message.balance ? coin_1.Coin.toJSON(message.balance) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryBalanceResponse();
        message.balance = object.balance !== void 0 && object.balance !== null ? coin_1.Coin.fromPartial(object.balance) : void 0;
        return message;
      }
    };
    function createBaseQueryAllBalancesRequest() {
      return {
        address: "",
        pagination: void 0
      };
    }
    exports.QueryAllBalancesRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.address !== "") {
          writer.uint32(10).string(message.address);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryAllBalancesRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.address = reader.string();
              break;
            case 2:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          address: (0, helpers_1.isSet)(object.address) ? String(object.address) : "",
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.address !== void 0 && (obj.address = message.address);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryAllBalancesRequest();
        message.address = object.address ?? "";
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryAllBalancesResponse() {
      return {
        balances: [],
        pagination: void 0
      };
    }
    exports.QueryAllBalancesResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.balances) {
          coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryAllBalancesResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.balances.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          balances: Array.isArray(object == null ? void 0 : object.balances) ? object.balances.map((e) => coin_1.Coin.fromJSON(e)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.balances) {
          obj.balances = message.balances.map((e) => e ? coin_1.Coin.toJSON(e) : void 0);
        } else {
          obj.balances = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryAllBalancesResponse();
        message.balances = ((_a = object.balances) == null ? void 0 : _a.map((e) => coin_1.Coin.fromPartial(e))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQuerySpendableBalancesRequest() {
      return {
        address: "",
        pagination: void 0
      };
    }
    exports.QuerySpendableBalancesRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.address !== "") {
          writer.uint32(10).string(message.address);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQuerySpendableBalancesRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.address = reader.string();
              break;
            case 2:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          address: (0, helpers_1.isSet)(object.address) ? String(object.address) : "",
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.address !== void 0 && (obj.address = message.address);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQuerySpendableBalancesRequest();
        message.address = object.address ?? "";
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQuerySpendableBalancesResponse() {
      return {
        balances: [],
        pagination: void 0
      };
    }
    exports.QuerySpendableBalancesResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.balances) {
          coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQuerySpendableBalancesResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.balances.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          balances: Array.isArray(object == null ? void 0 : object.balances) ? object.balances.map((e) => coin_1.Coin.fromJSON(e)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.balances) {
          obj.balances = message.balances.map((e) => e ? coin_1.Coin.toJSON(e) : void 0);
        } else {
          obj.balances = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQuerySpendableBalancesResponse();
        message.balances = ((_a = object.balances) == null ? void 0 : _a.map((e) => coin_1.Coin.fromPartial(e))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryTotalSupplyRequest() {
      return {
        pagination: void 0
      };
    }
    exports.QueryTotalSupplyRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryTotalSupplyRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryTotalSupplyRequest();
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryTotalSupplyResponse() {
      return {
        supply: [],
        pagination: void 0
      };
    }
    exports.QueryTotalSupplyResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.supply) {
          coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryTotalSupplyResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.supply.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          supply: Array.isArray(object == null ? void 0 : object.supply) ? object.supply.map((e) => coin_1.Coin.fromJSON(e)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.supply) {
          obj.supply = message.supply.map((e) => e ? coin_1.Coin.toJSON(e) : void 0);
        } else {
          obj.supply = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryTotalSupplyResponse();
        message.supply = ((_a = object.supply) == null ? void 0 : _a.map((e) => coin_1.Coin.fromPartial(e))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQuerySupplyOfRequest() {
      return {
        denom: ""
      };
    }
    exports.QuerySupplyOfRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.denom !== "") {
          writer.uint32(10).string(message.denom);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQuerySupplyOfRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.denom = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          denom: (0, helpers_1.isSet)(object.denom) ? String(object.denom) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.denom !== void 0 && (obj.denom = message.denom);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQuerySupplyOfRequest();
        message.denom = object.denom ?? "";
        return message;
      }
    };
    function createBaseQuerySupplyOfResponse() {
      return {
        amount: void 0
      };
    }
    exports.QuerySupplyOfResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.amount !== void 0) {
          coin_1.Coin.encode(message.amount, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQuerySupplyOfResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.amount = coin_1.Coin.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          amount: (0, helpers_1.isSet)(object.amount) ? coin_1.Coin.fromJSON(object.amount) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.amount !== void 0 && (obj.amount = message.amount ? coin_1.Coin.toJSON(message.amount) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQuerySupplyOfResponse();
        message.amount = object.amount !== void 0 && object.amount !== null ? coin_1.Coin.fromPartial(object.amount) : void 0;
        return message;
      }
    };
    function createBaseQueryParamsRequest() {
      return {};
    }
    exports.QueryParamsRequest = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryParamsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseQueryParamsRequest();
        return message;
      }
    };
    function createBaseQueryParamsResponse() {
      return {
        params: void 0
      };
    }
    exports.QueryParamsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.params !== void 0) {
          bank_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryParamsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.params = bank_1.Params.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          params: (0, helpers_1.isSet)(object.params) ? bank_1.Params.fromJSON(object.params) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.params !== void 0 && (obj.params = message.params ? bank_1.Params.toJSON(message.params) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryParamsResponse();
        message.params = object.params !== void 0 && object.params !== null ? bank_1.Params.fromPartial(object.params) : void 0;
        return message;
      }
    };
    function createBaseQueryDenomsMetadataRequest() {
      return {
        pagination: void 0
      };
    }
    exports.QueryDenomsMetadataRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDenomsMetadataRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDenomsMetadataRequest();
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryDenomsMetadataResponse() {
      return {
        metadatas: [],
        pagination: void 0
      };
    }
    exports.QueryDenomsMetadataResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.metadatas) {
          bank_1.Metadata.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDenomsMetadataResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.metadatas.push(bank_1.Metadata.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          metadatas: Array.isArray(object == null ? void 0 : object.metadatas) ? object.metadatas.map((e) => bank_1.Metadata.fromJSON(e)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.metadatas) {
          obj.metadatas = message.metadatas.map((e) => e ? bank_1.Metadata.toJSON(e) : void 0);
        } else {
          obj.metadatas = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryDenomsMetadataResponse();
        message.metadatas = ((_a = object.metadatas) == null ? void 0 : _a.map((e) => bank_1.Metadata.fromPartial(e))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryDenomMetadataRequest() {
      return {
        denom: ""
      };
    }
    exports.QueryDenomMetadataRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.denom !== "") {
          writer.uint32(10).string(message.denom);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDenomMetadataRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.denom = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          denom: (0, helpers_1.isSet)(object.denom) ? String(object.denom) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.denom !== void 0 && (obj.denom = message.denom);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDenomMetadataRequest();
        message.denom = object.denom ?? "";
        return message;
      }
    };
    function createBaseQueryDenomMetadataResponse() {
      return {
        metadata: void 0
      };
    }
    exports.QueryDenomMetadataResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.metadata !== void 0) {
          bank_1.Metadata.encode(message.metadata, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDenomMetadataResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.metadata = bank_1.Metadata.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          metadata: (0, helpers_1.isSet)(object.metadata) ? bank_1.Metadata.fromJSON(object.metadata) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.metadata !== void 0 && (obj.metadata = message.metadata ? bank_1.Metadata.toJSON(message.metadata) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDenomMetadataResponse();
        message.metadata = object.metadata !== void 0 && object.metadata !== null ? bank_1.Metadata.fromPartial(object.metadata) : void 0;
        return message;
      }
    };
    var QueryClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.Balance = this.Balance.bind(this);
        this.AllBalances = this.AllBalances.bind(this);
        this.SpendableBalances = this.SpendableBalances.bind(this);
        this.TotalSupply = this.TotalSupply.bind(this);
        this.SupplyOf = this.SupplyOf.bind(this);
        this.Params = this.Params.bind(this);
        this.DenomMetadata = this.DenomMetadata.bind(this);
        this.DenomsMetadata = this.DenomsMetadata.bind(this);
      }
      Balance(request) {
        const data = exports.QueryBalanceRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.bank.v1beta1.Query", "Balance", data);
        return promise.then((data2) => exports.QueryBalanceResponse.decode(new _m0.Reader(data2)));
      }
      AllBalances(request) {
        const data = exports.QueryAllBalancesRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.bank.v1beta1.Query", "AllBalances", data);
        return promise.then((data2) => exports.QueryAllBalancesResponse.decode(new _m0.Reader(data2)));
      }
      SpendableBalances(request) {
        const data = exports.QuerySpendableBalancesRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.bank.v1beta1.Query", "SpendableBalances", data);
        return promise.then((data2) => exports.QuerySpendableBalancesResponse.decode(new _m0.Reader(data2)));
      }
      TotalSupply(request = {
        pagination: void 0
      }) {
        const data = exports.QueryTotalSupplyRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.bank.v1beta1.Query", "TotalSupply", data);
        return promise.then((data2) => exports.QueryTotalSupplyResponse.decode(new _m0.Reader(data2)));
      }
      SupplyOf(request) {
        const data = exports.QuerySupplyOfRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.bank.v1beta1.Query", "SupplyOf", data);
        return promise.then((data2) => exports.QuerySupplyOfResponse.decode(new _m0.Reader(data2)));
      }
      Params(request = {}) {
        const data = exports.QueryParamsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.bank.v1beta1.Query", "Params", data);
        return promise.then((data2) => exports.QueryParamsResponse.decode(new _m0.Reader(data2)));
      }
      DenomMetadata(request) {
        const data = exports.QueryDenomMetadataRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.bank.v1beta1.Query", "DenomMetadata", data);
        return promise.then((data2) => exports.QueryDenomMetadataResponse.decode(new _m0.Reader(data2)));
      }
      DenomsMetadata(request = {
        pagination: void 0
      }) {
        const data = exports.QueryDenomsMetadataRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.bank.v1beta1.Query", "DenomsMetadata", data);
        return promise.then((data2) => exports.QueryDenomsMetadataResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.QueryClientImpl = QueryClientImpl;
  }
});

// node_modules/@cosmjs/stargate/build/modules/bank/queries.js
var require_queries3 = __commonJS({
  "node_modules/@cosmjs/stargate/build/modules/bank/queries.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.setupBankExtension = void 0;
    var utils_1 = require_build3();
    var query_1 = require_query3();
    var queryclient_1 = require_queryclient2();
    function setupBankExtension(base) {
      const rpc = (0, queryclient_1.createProtobufRpcClient)(base);
      const queryService = new query_1.QueryClientImpl(rpc);
      return {
        bank: {
          balance: async (address, denom) => {
            const { balance } = await queryService.Balance({ address, denom });
            (0, utils_1.assert)(balance);
            return balance;
          },
          allBalances: async (address) => {
            const { balances } = await queryService.AllBalances({ address });
            return balances;
          },
          totalSupply: async (paginationKey) => {
            const response = await queryService.TotalSupply({
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            });
            return response;
          },
          supplyOf: async (denom) => {
            const { amount } = await queryService.SupplyOf({ denom });
            (0, utils_1.assert)(amount);
            return amount;
          },
          denomMetadata: async (denom) => {
            const { metadata } = await queryService.DenomMetadata({ denom });
            (0, utils_1.assert)(metadata);
            return metadata;
          },
          denomsMetadata: async () => {
            const { metadatas } = await queryService.DenomsMetadata({
              pagination: void 0
              // Not implemented
            });
            return metadatas;
          }
        }
      };
    }
    exports.setupBankExtension = setupBankExtension;
  }
});

// node_modules/@cosmjs/stargate/build/modules/crisis/aminomessages.js
var require_aminomessages3 = __commonJS({
  "node_modules/@cosmjs/stargate/build/modules/crisis/aminomessages.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createCrysisAminoConverters = exports.isAminoMsgVerifyInvariant = void 0;
    function isAminoMsgVerifyInvariant(msg) {
      return msg.type === "cosmos-sdk/MsgVerifyInvariant";
    }
    exports.isAminoMsgVerifyInvariant = isAminoMsgVerifyInvariant;
    function createCrysisAminoConverters() {
      throw new Error("Not implemented");
    }
    exports.createCrysisAminoConverters = createCrysisAminoConverters;
  }
});

// node_modules/@cosmjs/stargate/build/modules/distribution/aminomessages.js
var require_aminomessages4 = __commonJS({
  "node_modules/@cosmjs/stargate/build/modules/distribution/aminomessages.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createDistributionAminoConverters = exports.isAminoMsgFundCommunityPool = exports.isAminoMsgWithdrawValidatorCommission = exports.isAminoMsgWithdrawDelegatorReward = exports.isAminoMsgSetWithdrawAddress = void 0;
    function isAminoMsgSetWithdrawAddress(msg) {
      return msg.type === "cosmos-sdk/MsgModifyWithdrawAddress";
    }
    exports.isAminoMsgSetWithdrawAddress = isAminoMsgSetWithdrawAddress;
    function isAminoMsgWithdrawDelegatorReward(msg) {
      return msg.type === "cosmos-sdk/MsgWithdrawDelegationReward";
    }
    exports.isAminoMsgWithdrawDelegatorReward = isAminoMsgWithdrawDelegatorReward;
    function isAminoMsgWithdrawValidatorCommission(msg) {
      return msg.type === "cosmos-sdk/MsgWithdrawValidatorCommission";
    }
    exports.isAminoMsgWithdrawValidatorCommission = isAminoMsgWithdrawValidatorCommission;
    function isAminoMsgFundCommunityPool(msg) {
      return msg.type === "cosmos-sdk/MsgFundCommunityPool";
    }
    exports.isAminoMsgFundCommunityPool = isAminoMsgFundCommunityPool;
    function createDistributionAminoConverters() {
      return {
        "/cosmos.distribution.v1beta1.MsgFundCommunityPool": {
          aminoType: "cosmos-sdk/MsgFundCommunityPool",
          toAmino: ({ amount, depositor }) => ({
            amount: [...amount],
            depositor
          }),
          fromAmino: ({ amount, depositor }) => ({
            amount: [...amount],
            depositor
          })
        },
        "/cosmos.distribution.v1beta1.MsgSetWithdrawAddress": {
          aminoType: "cosmos-sdk/MsgModifyWithdrawAddress",
          toAmino: ({ delegatorAddress, withdrawAddress }) => ({
            delegator_address: delegatorAddress,
            withdraw_address: withdrawAddress
          }),
          fromAmino: ({ delegator_address, withdraw_address }) => ({
            delegatorAddress: delegator_address,
            withdrawAddress: withdraw_address
          })
        },
        "/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward": {
          aminoType: "cosmos-sdk/MsgWithdrawDelegationReward",
          toAmino: ({ delegatorAddress, validatorAddress }) => ({
            delegator_address: delegatorAddress,
            validator_address: validatorAddress
          }),
          fromAmino: ({ delegator_address, validator_address }) => ({
            delegatorAddress: delegator_address,
            validatorAddress: validator_address
          })
        },
        "/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission": {
          aminoType: "cosmos-sdk/MsgWithdrawValidatorCommission",
          toAmino: ({ validatorAddress }) => ({
            validator_address: validatorAddress
          }),
          fromAmino: ({ validator_address }) => ({
            validatorAddress: validator_address
          })
        }
      };
    }
    exports.createDistributionAminoConverters = createDistributionAminoConverters;
  }
});

// node_modules/cosmjs-types/cosmos/distribution/v1beta1/tx.js
var require_tx4 = __commonJS({
  "node_modules/cosmjs-types/cosmos/distribution/v1beta1/tx.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MsgClientImpl = exports.MsgFundCommunityPoolResponse = exports.MsgFundCommunityPool = exports.MsgWithdrawValidatorCommissionResponse = exports.MsgWithdrawValidatorCommission = exports.MsgWithdrawDelegatorRewardResponse = exports.MsgWithdrawDelegatorReward = exports.MsgSetWithdrawAddressResponse = exports.MsgSetWithdrawAddress = exports.protobufPackage = void 0;
    var coin_1 = require_coin();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.distribution.v1beta1";
    function createBaseMsgSetWithdrawAddress() {
      return {
        delegatorAddress: "",
        withdrawAddress: ""
      };
    }
    exports.MsgSetWithdrawAddress = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegatorAddress !== "") {
          writer.uint32(10).string(message.delegatorAddress);
        }
        if (message.withdrawAddress !== "") {
          writer.uint32(18).string(message.withdrawAddress);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgSetWithdrawAddress();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegatorAddress = reader.string();
              break;
            case 2:
              message.withdrawAddress = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegatorAddress: (0, helpers_1.isSet)(object.delegatorAddress) ? String(object.delegatorAddress) : "",
          withdrawAddress: (0, helpers_1.isSet)(object.withdrawAddress) ? String(object.withdrawAddress) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegatorAddress !== void 0 && (obj.delegatorAddress = message.delegatorAddress);
        message.withdrawAddress !== void 0 && (obj.withdrawAddress = message.withdrawAddress);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgSetWithdrawAddress();
        message.delegatorAddress = object.delegatorAddress ?? "";
        message.withdrawAddress = object.withdrawAddress ?? "";
        return message;
      }
    };
    function createBaseMsgSetWithdrawAddressResponse() {
      return {};
    }
    exports.MsgSetWithdrawAddressResponse = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgSetWithdrawAddressResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseMsgSetWithdrawAddressResponse();
        return message;
      }
    };
    function createBaseMsgWithdrawDelegatorReward() {
      return {
        delegatorAddress: "",
        validatorAddress: ""
      };
    }
    exports.MsgWithdrawDelegatorReward = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegatorAddress !== "") {
          writer.uint32(10).string(message.delegatorAddress);
        }
        if (message.validatorAddress !== "") {
          writer.uint32(18).string(message.validatorAddress);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgWithdrawDelegatorReward();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegatorAddress = reader.string();
              break;
            case 2:
              message.validatorAddress = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegatorAddress: (0, helpers_1.isSet)(object.delegatorAddress) ? String(object.delegatorAddress) : "",
          validatorAddress: (0, helpers_1.isSet)(object.validatorAddress) ? String(object.validatorAddress) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegatorAddress !== void 0 && (obj.delegatorAddress = message.delegatorAddress);
        message.validatorAddress !== void 0 && (obj.validatorAddress = message.validatorAddress);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgWithdrawDelegatorReward();
        message.delegatorAddress = object.delegatorAddress ?? "";
        message.validatorAddress = object.validatorAddress ?? "";
        return message;
      }
    };
    function createBaseMsgWithdrawDelegatorRewardResponse() {
      return {};
    }
    exports.MsgWithdrawDelegatorRewardResponse = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgWithdrawDelegatorRewardResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseMsgWithdrawDelegatorRewardResponse();
        return message;
      }
    };
    function createBaseMsgWithdrawValidatorCommission() {
      return {
        validatorAddress: ""
      };
    }
    exports.MsgWithdrawValidatorCommission = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.validatorAddress !== "") {
          writer.uint32(10).string(message.validatorAddress);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgWithdrawValidatorCommission();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.validatorAddress = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          validatorAddress: (0, helpers_1.isSet)(object.validatorAddress) ? String(object.validatorAddress) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.validatorAddress !== void 0 && (obj.validatorAddress = message.validatorAddress);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgWithdrawValidatorCommission();
        message.validatorAddress = object.validatorAddress ?? "";
        return message;
      }
    };
    function createBaseMsgWithdrawValidatorCommissionResponse() {
      return {};
    }
    exports.MsgWithdrawValidatorCommissionResponse = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgWithdrawValidatorCommissionResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseMsgWithdrawValidatorCommissionResponse();
        return message;
      }
    };
    function createBaseMsgFundCommunityPool() {
      return {
        amount: [],
        depositor: ""
      };
    }
    exports.MsgFundCommunityPool = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.amount) {
          coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.depositor !== "") {
          writer.uint32(18).string(message.depositor);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgFundCommunityPool();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            case 2:
              message.depositor = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          amount: Array.isArray(object == null ? void 0 : object.amount) ? object.amount.map((e) => coin_1.Coin.fromJSON(e)) : [],
          depositor: (0, helpers_1.isSet)(object.depositor) ? String(object.depositor) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.amount) {
          obj.amount = message.amount.map((e) => e ? coin_1.Coin.toJSON(e) : void 0);
        } else {
          obj.amount = [];
        }
        message.depositor !== void 0 && (obj.depositor = message.depositor);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseMsgFundCommunityPool();
        message.amount = ((_a = object.amount) == null ? void 0 : _a.map((e) => coin_1.Coin.fromPartial(e))) || [];
        message.depositor = object.depositor ?? "";
        return message;
      }
    };
    function createBaseMsgFundCommunityPoolResponse() {
      return {};
    }
    exports.MsgFundCommunityPoolResponse = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgFundCommunityPoolResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseMsgFundCommunityPoolResponse();
        return message;
      }
    };
    var MsgClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.SetWithdrawAddress = this.SetWithdrawAddress.bind(this);
        this.WithdrawDelegatorReward = this.WithdrawDelegatorReward.bind(this);
        this.WithdrawValidatorCommission = this.WithdrawValidatorCommission.bind(this);
        this.FundCommunityPool = this.FundCommunityPool.bind(this);
      }
      SetWithdrawAddress(request) {
        const data = exports.MsgSetWithdrawAddress.encode(request).finish();
        const promise = this.rpc.request("cosmos.distribution.v1beta1.Msg", "SetWithdrawAddress", data);
        return promise.then((data2) => exports.MsgSetWithdrawAddressResponse.decode(new _m0.Reader(data2)));
      }
      WithdrawDelegatorReward(request) {
        const data = exports.MsgWithdrawDelegatorReward.encode(request).finish();
        const promise = this.rpc.request("cosmos.distribution.v1beta1.Msg", "WithdrawDelegatorReward", data);
        return promise.then((data2) => exports.MsgWithdrawDelegatorRewardResponse.decode(new _m0.Reader(data2)));
      }
      WithdrawValidatorCommission(request) {
        const data = exports.MsgWithdrawValidatorCommission.encode(request).finish();
        const promise = this.rpc.request("cosmos.distribution.v1beta1.Msg", "WithdrawValidatorCommission", data);
        return promise.then((data2) => exports.MsgWithdrawValidatorCommissionResponse.decode(new _m0.Reader(data2)));
      }
      FundCommunityPool(request) {
        const data = exports.MsgFundCommunityPool.encode(request).finish();
        const promise = this.rpc.request("cosmos.distribution.v1beta1.Msg", "FundCommunityPool", data);
        return promise.then((data2) => exports.MsgFundCommunityPoolResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.MsgClientImpl = MsgClientImpl;
  }
});

// node_modules/@cosmjs/stargate/build/modules/distribution/messages.js
var require_messages3 = __commonJS({
  "node_modules/@cosmjs/stargate/build/modules/distribution/messages.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isMsgWithdrawDelegatorRewardEncodeObject = exports.distributionTypes = void 0;
    var tx_1 = require_tx4();
    exports.distributionTypes = [
      ["/cosmos.distribution.v1beta1.MsgFundCommunityPool", tx_1.MsgFundCommunityPool],
      ["/cosmos.distribution.v1beta1.MsgSetWithdrawAddress", tx_1.MsgSetWithdrawAddress],
      ["/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward", tx_1.MsgWithdrawDelegatorReward],
      ["/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission", tx_1.MsgWithdrawValidatorCommission]
    ];
    function isMsgWithdrawDelegatorRewardEncodeObject(object) {
      return object.typeUrl === "/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward";
    }
    exports.isMsgWithdrawDelegatorRewardEncodeObject = isMsgWithdrawDelegatorRewardEncodeObject;
  }
});

// node_modules/cosmjs-types/cosmos/distribution/v1beta1/distribution.js
var require_distribution = __commonJS({
  "node_modules/cosmjs-types/cosmos/distribution/v1beta1/distribution.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.CommunityPoolSpendProposalWithDeposit = exports.DelegationDelegatorReward = exports.DelegatorStartingInfo = exports.CommunityPoolSpendProposal = exports.FeePool = exports.ValidatorSlashEvents = exports.ValidatorSlashEvent = exports.ValidatorOutstandingRewards = exports.ValidatorAccumulatedCommission = exports.ValidatorCurrentRewards = exports.ValidatorHistoricalRewards = exports.Params = exports.protobufPackage = void 0;
    var coin_1 = require_coin();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.distribution.v1beta1";
    function createBaseParams() {
      return {
        communityTax: "",
        baseProposerReward: "",
        bonusProposerReward: "",
        withdrawAddrEnabled: false
      };
    }
    exports.Params = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.communityTax !== "") {
          writer.uint32(10).string(message.communityTax);
        }
        if (message.baseProposerReward !== "") {
          writer.uint32(18).string(message.baseProposerReward);
        }
        if (message.bonusProposerReward !== "") {
          writer.uint32(26).string(message.bonusProposerReward);
        }
        if (message.withdrawAddrEnabled === true) {
          writer.uint32(32).bool(message.withdrawAddrEnabled);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseParams();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.communityTax = reader.string();
              break;
            case 2:
              message.baseProposerReward = reader.string();
              break;
            case 3:
              message.bonusProposerReward = reader.string();
              break;
            case 4:
              message.withdrawAddrEnabled = reader.bool();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          communityTax: (0, helpers_1.isSet)(object.communityTax) ? String(object.communityTax) : "",
          baseProposerReward: (0, helpers_1.isSet)(object.baseProposerReward) ? String(object.baseProposerReward) : "",
          bonusProposerReward: (0, helpers_1.isSet)(object.bonusProposerReward) ? String(object.bonusProposerReward) : "",
          withdrawAddrEnabled: (0, helpers_1.isSet)(object.withdrawAddrEnabled) ? Boolean(object.withdrawAddrEnabled) : false
        };
      },
      toJSON(message) {
        const obj = {};
        message.communityTax !== void 0 && (obj.communityTax = message.communityTax);
        message.baseProposerReward !== void 0 && (obj.baseProposerReward = message.baseProposerReward);
        message.bonusProposerReward !== void 0 && (obj.bonusProposerReward = message.bonusProposerReward);
        message.withdrawAddrEnabled !== void 0 && (obj.withdrawAddrEnabled = message.withdrawAddrEnabled);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseParams();
        message.communityTax = object.communityTax ?? "";
        message.baseProposerReward = object.baseProposerReward ?? "";
        message.bonusProposerReward = object.bonusProposerReward ?? "";
        message.withdrawAddrEnabled = object.withdrawAddrEnabled ?? false;
        return message;
      }
    };
    function createBaseValidatorHistoricalRewards() {
      return {
        cumulativeRewardRatio: [],
        referenceCount: 0
      };
    }
    exports.ValidatorHistoricalRewards = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.cumulativeRewardRatio) {
          coin_1.DecCoin.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.referenceCount !== 0) {
          writer.uint32(16).uint32(message.referenceCount);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseValidatorHistoricalRewards();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.cumulativeRewardRatio.push(coin_1.DecCoin.decode(reader, reader.uint32()));
              break;
            case 2:
              message.referenceCount = reader.uint32();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          cumulativeRewardRatio: Array.isArray(object == null ? void 0 : object.cumulativeRewardRatio) ? object.cumulativeRewardRatio.map((e) => coin_1.DecCoin.fromJSON(e)) : [],
          referenceCount: (0, helpers_1.isSet)(object.referenceCount) ? Number(object.referenceCount) : 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.cumulativeRewardRatio) {
          obj.cumulativeRewardRatio = message.cumulativeRewardRatio.map((e) => e ? coin_1.DecCoin.toJSON(e) : void 0);
        } else {
          obj.cumulativeRewardRatio = [];
        }
        message.referenceCount !== void 0 && (obj.referenceCount = Math.round(message.referenceCount));
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseValidatorHistoricalRewards();
        message.cumulativeRewardRatio = ((_a = object.cumulativeRewardRatio) == null ? void 0 : _a.map((e) => coin_1.DecCoin.fromPartial(e))) || [];
        message.referenceCount = object.referenceCount ?? 0;
        return message;
      }
    };
    function createBaseValidatorCurrentRewards() {
      return {
        rewards: [],
        period: helpers_1.Long.UZERO
      };
    }
    exports.ValidatorCurrentRewards = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.rewards) {
          coin_1.DecCoin.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (!message.period.isZero()) {
          writer.uint32(16).uint64(message.period);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseValidatorCurrentRewards();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.rewards.push(coin_1.DecCoin.decode(reader, reader.uint32()));
              break;
            case 2:
              message.period = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          rewards: Array.isArray(object == null ? void 0 : object.rewards) ? object.rewards.map((e) => coin_1.DecCoin.fromJSON(e)) : [],
          period: (0, helpers_1.isSet)(object.period) ? helpers_1.Long.fromValue(object.period) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.rewards) {
          obj.rewards = message.rewards.map((e) => e ? coin_1.DecCoin.toJSON(e) : void 0);
        } else {
          obj.rewards = [];
        }
        message.period !== void 0 && (obj.period = (message.period || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseValidatorCurrentRewards();
        message.rewards = ((_a = object.rewards) == null ? void 0 : _a.map((e) => coin_1.DecCoin.fromPartial(e))) || [];
        message.period = object.period !== void 0 && object.period !== null ? helpers_1.Long.fromValue(object.period) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseValidatorAccumulatedCommission() {
      return {
        commission: []
      };
    }
    exports.ValidatorAccumulatedCommission = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.commission) {
          coin_1.DecCoin.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseValidatorAccumulatedCommission();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.commission.push(coin_1.DecCoin.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          commission: Array.isArray(object == null ? void 0 : object.commission) ? object.commission.map((e) => coin_1.DecCoin.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.commission) {
          obj.commission = message.commission.map((e) => e ? coin_1.DecCoin.toJSON(e) : void 0);
        } else {
          obj.commission = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseValidatorAccumulatedCommission();
        message.commission = ((_a = object.commission) == null ? void 0 : _a.map((e) => coin_1.DecCoin.fromPartial(e))) || [];
        return message;
      }
    };
    function createBaseValidatorOutstandingRewards() {
      return {
        rewards: []
      };
    }
    exports.ValidatorOutstandingRewards = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.rewards) {
          coin_1.DecCoin.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseValidatorOutstandingRewards();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.rewards.push(coin_1.DecCoin.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          rewards: Array.isArray(object == null ? void 0 : object.rewards) ? object.rewards.map((e) => coin_1.DecCoin.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.rewards) {
          obj.rewards = message.rewards.map((e) => e ? coin_1.DecCoin.toJSON(e) : void 0);
        } else {
          obj.rewards = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseValidatorOutstandingRewards();
        message.rewards = ((_a = object.rewards) == null ? void 0 : _a.map((e) => coin_1.DecCoin.fromPartial(e))) || [];
        return message;
      }
    };
    function createBaseValidatorSlashEvent() {
      return {
        validatorPeriod: helpers_1.Long.UZERO,
        fraction: ""
      };
    }
    exports.ValidatorSlashEvent = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.validatorPeriod.isZero()) {
          writer.uint32(8).uint64(message.validatorPeriod);
        }
        if (message.fraction !== "") {
          writer.uint32(18).string(message.fraction);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseValidatorSlashEvent();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.validatorPeriod = reader.uint64();
              break;
            case 2:
              message.fraction = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          validatorPeriod: (0, helpers_1.isSet)(object.validatorPeriod) ? helpers_1.Long.fromValue(object.validatorPeriod) : helpers_1.Long.UZERO,
          fraction: (0, helpers_1.isSet)(object.fraction) ? String(object.fraction) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.validatorPeriod !== void 0 && (obj.validatorPeriod = (message.validatorPeriod || helpers_1.Long.UZERO).toString());
        message.fraction !== void 0 && (obj.fraction = message.fraction);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseValidatorSlashEvent();
        message.validatorPeriod = object.validatorPeriod !== void 0 && object.validatorPeriod !== null ? helpers_1.Long.fromValue(object.validatorPeriod) : helpers_1.Long.UZERO;
        message.fraction = object.fraction ?? "";
        return message;
      }
    };
    function createBaseValidatorSlashEvents() {
      return {
        validatorSlashEvents: []
      };
    }
    exports.ValidatorSlashEvents = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.validatorSlashEvents) {
          exports.ValidatorSlashEvent.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseValidatorSlashEvents();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.validatorSlashEvents.push(exports.ValidatorSlashEvent.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          validatorSlashEvents: Array.isArray(object == null ? void 0 : object.validatorSlashEvents) ? object.validatorSlashEvents.map((e) => exports.ValidatorSlashEvent.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.validatorSlashEvents) {
          obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? exports.ValidatorSlashEvent.toJSON(e) : void 0);
        } else {
          obj.validatorSlashEvents = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseValidatorSlashEvents();
        message.validatorSlashEvents = ((_a = object.validatorSlashEvents) == null ? void 0 : _a.map((e) => exports.ValidatorSlashEvent.fromPartial(e))) || [];
        return message;
      }
    };
    function createBaseFeePool() {
      return {
        communityPool: []
      };
    }
    exports.FeePool = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.communityPool) {
          coin_1.DecCoin.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseFeePool();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.communityPool.push(coin_1.DecCoin.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          communityPool: Array.isArray(object == null ? void 0 : object.communityPool) ? object.communityPool.map((e) => coin_1.DecCoin.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.communityPool) {
          obj.communityPool = message.communityPool.map((e) => e ? coin_1.DecCoin.toJSON(e) : void 0);
        } else {
          obj.communityPool = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseFeePool();
        message.communityPool = ((_a = object.communityPool) == null ? void 0 : _a.map((e) => coin_1.DecCoin.fromPartial(e))) || [];
        return message;
      }
    };
    function createBaseCommunityPoolSpendProposal() {
      return {
        title: "",
        description: "",
        recipient: "",
        amount: []
      };
    }
    exports.CommunityPoolSpendProposal = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.title !== "") {
          writer.uint32(10).string(message.title);
        }
        if (message.description !== "") {
          writer.uint32(18).string(message.description);
        }
        if (message.recipient !== "") {
          writer.uint32(26).string(message.recipient);
        }
        for (const v of message.amount) {
          coin_1.Coin.encode(v, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseCommunityPoolSpendProposal();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.title = reader.string();
              break;
            case 2:
              message.description = reader.string();
              break;
            case 3:
              message.recipient = reader.string();
              break;
            case 4:
              message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          title: (0, helpers_1.isSet)(object.title) ? String(object.title) : "",
          description: (0, helpers_1.isSet)(object.description) ? String(object.description) : "",
          recipient: (0, helpers_1.isSet)(object.recipient) ? String(object.recipient) : "",
          amount: Array.isArray(object == null ? void 0 : object.amount) ? object.amount.map((e) => coin_1.Coin.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.title !== void 0 && (obj.title = message.title);
        message.description !== void 0 && (obj.description = message.description);
        message.recipient !== void 0 && (obj.recipient = message.recipient);
        if (message.amount) {
          obj.amount = message.amount.map((e) => e ? coin_1.Coin.toJSON(e) : void 0);
        } else {
          obj.amount = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseCommunityPoolSpendProposal();
        message.title = object.title ?? "";
        message.description = object.description ?? "";
        message.recipient = object.recipient ?? "";
        message.amount = ((_a = object.amount) == null ? void 0 : _a.map((e) => coin_1.Coin.fromPartial(e))) || [];
        return message;
      }
    };
    function createBaseDelegatorStartingInfo() {
      return {
        previousPeriod: helpers_1.Long.UZERO,
        stake: "",
        height: helpers_1.Long.UZERO
      };
    }
    exports.DelegatorStartingInfo = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.previousPeriod.isZero()) {
          writer.uint32(8).uint64(message.previousPeriod);
        }
        if (message.stake !== "") {
          writer.uint32(18).string(message.stake);
        }
        if (!message.height.isZero()) {
          writer.uint32(24).uint64(message.height);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseDelegatorStartingInfo();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.previousPeriod = reader.uint64();
              break;
            case 2:
              message.stake = reader.string();
              break;
            case 3:
              message.height = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          previousPeriod: (0, helpers_1.isSet)(object.previousPeriod) ? helpers_1.Long.fromValue(object.previousPeriod) : helpers_1.Long.UZERO,
          stake: (0, helpers_1.isSet)(object.stake) ? String(object.stake) : "",
          height: (0, helpers_1.isSet)(object.height) ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.previousPeriod !== void 0 && (obj.previousPeriod = (message.previousPeriod || helpers_1.Long.UZERO).toString());
        message.stake !== void 0 && (obj.stake = message.stake);
        message.height !== void 0 && (obj.height = (message.height || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseDelegatorStartingInfo();
        message.previousPeriod = object.previousPeriod !== void 0 && object.previousPeriod !== null ? helpers_1.Long.fromValue(object.previousPeriod) : helpers_1.Long.UZERO;
        message.stake = object.stake ?? "";
        message.height = object.height !== void 0 && object.height !== null ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseDelegationDelegatorReward() {
      return {
        validatorAddress: "",
        reward: []
      };
    }
    exports.DelegationDelegatorReward = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.validatorAddress !== "") {
          writer.uint32(10).string(message.validatorAddress);
        }
        for (const v of message.reward) {
          coin_1.DecCoin.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseDelegationDelegatorReward();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.validatorAddress = reader.string();
              break;
            case 2:
              message.reward.push(coin_1.DecCoin.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          validatorAddress: (0, helpers_1.isSet)(object.validatorAddress) ? String(object.validatorAddress) : "",
          reward: Array.isArray(object == null ? void 0 : object.reward) ? object.reward.map((e) => coin_1.DecCoin.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.validatorAddress !== void 0 && (obj.validatorAddress = message.validatorAddress);
        if (message.reward) {
          obj.reward = message.reward.map((e) => e ? coin_1.DecCoin.toJSON(e) : void 0);
        } else {
          obj.reward = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseDelegationDelegatorReward();
        message.validatorAddress = object.validatorAddress ?? "";
        message.reward = ((_a = object.reward) == null ? void 0 : _a.map((e) => coin_1.DecCoin.fromPartial(e))) || [];
        return message;
      }
    };
    function createBaseCommunityPoolSpendProposalWithDeposit() {
      return {
        title: "",
        description: "",
        recipient: "",
        amount: "",
        deposit: ""
      };
    }
    exports.CommunityPoolSpendProposalWithDeposit = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.title !== "") {
          writer.uint32(10).string(message.title);
        }
        if (message.description !== "") {
          writer.uint32(18).string(message.description);
        }
        if (message.recipient !== "") {
          writer.uint32(26).string(message.recipient);
        }
        if (message.amount !== "") {
          writer.uint32(34).string(message.amount);
        }
        if (message.deposit !== "") {
          writer.uint32(42).string(message.deposit);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseCommunityPoolSpendProposalWithDeposit();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.title = reader.string();
              break;
            case 2:
              message.description = reader.string();
              break;
            case 3:
              message.recipient = reader.string();
              break;
            case 4:
              message.amount = reader.string();
              break;
            case 5:
              message.deposit = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          title: (0, helpers_1.isSet)(object.title) ? String(object.title) : "",
          description: (0, helpers_1.isSet)(object.description) ? String(object.description) : "",
          recipient: (0, helpers_1.isSet)(object.recipient) ? String(object.recipient) : "",
          amount: (0, helpers_1.isSet)(object.amount) ? String(object.amount) : "",
          deposit: (0, helpers_1.isSet)(object.deposit) ? String(object.deposit) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.title !== void 0 && (obj.title = message.title);
        message.description !== void 0 && (obj.description = message.description);
        message.recipient !== void 0 && (obj.recipient = message.recipient);
        message.amount !== void 0 && (obj.amount = message.amount);
        message.deposit !== void 0 && (obj.deposit = message.deposit);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseCommunityPoolSpendProposalWithDeposit();
        message.title = object.title ?? "";
        message.description = object.description ?? "";
        message.recipient = object.recipient ?? "";
        message.amount = object.amount ?? "";
        message.deposit = object.deposit ?? "";
        return message;
      }
    };
  }
});

// node_modules/cosmjs-types/cosmos/distribution/v1beta1/query.js
var require_query4 = __commonJS({
  "node_modules/cosmjs-types/cosmos/distribution/v1beta1/query.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.QueryClientImpl = exports.QueryCommunityPoolResponse = exports.QueryCommunityPoolRequest = exports.QueryDelegatorWithdrawAddressResponse = exports.QueryDelegatorWithdrawAddressRequest = exports.QueryDelegatorValidatorsResponse = exports.QueryDelegatorValidatorsRequest = exports.QueryDelegationTotalRewardsResponse = exports.QueryDelegationTotalRewardsRequest = exports.QueryDelegationRewardsResponse = exports.QueryDelegationRewardsRequest = exports.QueryValidatorSlashesResponse = exports.QueryValidatorSlashesRequest = exports.QueryValidatorCommissionResponse = exports.QueryValidatorCommissionRequest = exports.QueryValidatorOutstandingRewardsResponse = exports.QueryValidatorOutstandingRewardsRequest = exports.QueryParamsResponse = exports.QueryParamsRequest = exports.protobufPackage = void 0;
    var pagination_1 = require_pagination();
    var distribution_1 = require_distribution();
    var coin_1 = require_coin();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.distribution.v1beta1";
    function createBaseQueryParamsRequest() {
      return {};
    }
    exports.QueryParamsRequest = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryParamsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseQueryParamsRequest();
        return message;
      }
    };
    function createBaseQueryParamsResponse() {
      return {
        params: void 0
      };
    }
    exports.QueryParamsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.params !== void 0) {
          distribution_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryParamsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.params = distribution_1.Params.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          params: (0, helpers_1.isSet)(object.params) ? distribution_1.Params.fromJSON(object.params) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.params !== void 0 && (obj.params = message.params ? distribution_1.Params.toJSON(message.params) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryParamsResponse();
        message.params = object.params !== void 0 && object.params !== null ? distribution_1.Params.fromPartial(object.params) : void 0;
        return message;
      }
    };
    function createBaseQueryValidatorOutstandingRewardsRequest() {
      return {
        validatorAddress: ""
      };
    }
    exports.QueryValidatorOutstandingRewardsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.validatorAddress !== "") {
          writer.uint32(10).string(message.validatorAddress);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryValidatorOutstandingRewardsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.validatorAddress = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          validatorAddress: (0, helpers_1.isSet)(object.validatorAddress) ? String(object.validatorAddress) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.validatorAddress !== void 0 && (obj.validatorAddress = message.validatorAddress);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryValidatorOutstandingRewardsRequest();
        message.validatorAddress = object.validatorAddress ?? "";
        return message;
      }
    };
    function createBaseQueryValidatorOutstandingRewardsResponse() {
      return {
        rewards: void 0
      };
    }
    exports.QueryValidatorOutstandingRewardsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.rewards !== void 0) {
          distribution_1.ValidatorOutstandingRewards.encode(message.rewards, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryValidatorOutstandingRewardsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.rewards = distribution_1.ValidatorOutstandingRewards.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          rewards: (0, helpers_1.isSet)(object.rewards) ? distribution_1.ValidatorOutstandingRewards.fromJSON(object.rewards) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.rewards !== void 0 && (obj.rewards = message.rewards ? distribution_1.ValidatorOutstandingRewards.toJSON(message.rewards) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryValidatorOutstandingRewardsResponse();
        message.rewards = object.rewards !== void 0 && object.rewards !== null ? distribution_1.ValidatorOutstandingRewards.fromPartial(object.rewards) : void 0;
        return message;
      }
    };
    function createBaseQueryValidatorCommissionRequest() {
      return {
        validatorAddress: ""
      };
    }
    exports.QueryValidatorCommissionRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.validatorAddress !== "") {
          writer.uint32(10).string(message.validatorAddress);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryValidatorCommissionRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.validatorAddress = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          validatorAddress: (0, helpers_1.isSet)(object.validatorAddress) ? String(object.validatorAddress) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.validatorAddress !== void 0 && (obj.validatorAddress = message.validatorAddress);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryValidatorCommissionRequest();
        message.validatorAddress = object.validatorAddress ?? "";
        return message;
      }
    };
    function createBaseQueryValidatorCommissionResponse() {
      return {
        commission: void 0
      };
    }
    exports.QueryValidatorCommissionResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.commission !== void 0) {
          distribution_1.ValidatorAccumulatedCommission.encode(message.commission, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryValidatorCommissionResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.commission = distribution_1.ValidatorAccumulatedCommission.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          commission: (0, helpers_1.isSet)(object.commission) ? distribution_1.ValidatorAccumulatedCommission.fromJSON(object.commission) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.commission !== void 0 && (obj.commission = message.commission ? distribution_1.ValidatorAccumulatedCommission.toJSON(message.commission) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryValidatorCommissionResponse();
        message.commission = object.commission !== void 0 && object.commission !== null ? distribution_1.ValidatorAccumulatedCommission.fromPartial(object.commission) : void 0;
        return message;
      }
    };
    function createBaseQueryValidatorSlashesRequest() {
      return {
        validatorAddress: "",
        startingHeight: helpers_1.Long.UZERO,
        endingHeight: helpers_1.Long.UZERO,
        pagination: void 0
      };
    }
    exports.QueryValidatorSlashesRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.validatorAddress !== "") {
          writer.uint32(10).string(message.validatorAddress);
        }
        if (!message.startingHeight.isZero()) {
          writer.uint32(16).uint64(message.startingHeight);
        }
        if (!message.endingHeight.isZero()) {
          writer.uint32(24).uint64(message.endingHeight);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryValidatorSlashesRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.validatorAddress = reader.string();
              break;
            case 2:
              message.startingHeight = reader.uint64();
              break;
            case 3:
              message.endingHeight = reader.uint64();
              break;
            case 4:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          validatorAddress: (0, helpers_1.isSet)(object.validatorAddress) ? String(object.validatorAddress) : "",
          startingHeight: (0, helpers_1.isSet)(object.startingHeight) ? helpers_1.Long.fromValue(object.startingHeight) : helpers_1.Long.UZERO,
          endingHeight: (0, helpers_1.isSet)(object.endingHeight) ? helpers_1.Long.fromValue(object.endingHeight) : helpers_1.Long.UZERO,
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.validatorAddress !== void 0 && (obj.validatorAddress = message.validatorAddress);
        message.startingHeight !== void 0 && (obj.startingHeight = (message.startingHeight || helpers_1.Long.UZERO).toString());
        message.endingHeight !== void 0 && (obj.endingHeight = (message.endingHeight || helpers_1.Long.UZERO).toString());
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryValidatorSlashesRequest();
        message.validatorAddress = object.validatorAddress ?? "";
        message.startingHeight = object.startingHeight !== void 0 && object.startingHeight !== null ? helpers_1.Long.fromValue(object.startingHeight) : helpers_1.Long.UZERO;
        message.endingHeight = object.endingHeight !== void 0 && object.endingHeight !== null ? helpers_1.Long.fromValue(object.endingHeight) : helpers_1.Long.UZERO;
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryValidatorSlashesResponse() {
      return {
        slashes: [],
        pagination: void 0
      };
    }
    exports.QueryValidatorSlashesResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.slashes) {
          distribution_1.ValidatorSlashEvent.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryValidatorSlashesResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.slashes.push(distribution_1.ValidatorSlashEvent.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          slashes: Array.isArray(object == null ? void 0 : object.slashes) ? object.slashes.map((e) => distribution_1.ValidatorSlashEvent.fromJSON(e)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.slashes) {
          obj.slashes = message.slashes.map((e) => e ? distribution_1.ValidatorSlashEvent.toJSON(e) : void 0);
        } else {
          obj.slashes = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryValidatorSlashesResponse();
        message.slashes = ((_a = object.slashes) == null ? void 0 : _a.map((e) => distribution_1.ValidatorSlashEvent.fromPartial(e))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryDelegationRewardsRequest() {
      return {
        delegatorAddress: "",
        validatorAddress: ""
      };
    }
    exports.QueryDelegationRewardsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegatorAddress !== "") {
          writer.uint32(10).string(message.delegatorAddress);
        }
        if (message.validatorAddress !== "") {
          writer.uint32(18).string(message.validatorAddress);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDelegationRewardsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegatorAddress = reader.string();
              break;
            case 2:
              message.validatorAddress = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegatorAddress: (0, helpers_1.isSet)(object.delegatorAddress) ? String(object.delegatorAddress) : "",
          validatorAddress: (0, helpers_1.isSet)(object.validatorAddress) ? String(object.validatorAddress) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegatorAddress !== void 0 && (obj.delegatorAddress = message.delegatorAddress);
        message.validatorAddress !== void 0 && (obj.validatorAddress = message.validatorAddress);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDelegationRewardsRequest();
        message.delegatorAddress = object.delegatorAddress ?? "";
        message.validatorAddress = object.validatorAddress ?? "";
        return message;
      }
    };
    function createBaseQueryDelegationRewardsResponse() {
      return {
        rewards: []
      };
    }
    exports.QueryDelegationRewardsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.rewards) {
          coin_1.DecCoin.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDelegationRewardsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.rewards.push(coin_1.DecCoin.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          rewards: Array.isArray(object == null ? void 0 : object.rewards) ? object.rewards.map((e) => coin_1.DecCoin.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.rewards) {
          obj.rewards = message.rewards.map((e) => e ? coin_1.DecCoin.toJSON(e) : void 0);
        } else {
          obj.rewards = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryDelegationRewardsResponse();
        message.rewards = ((_a = object.rewards) == null ? void 0 : _a.map((e) => coin_1.DecCoin.fromPartial(e))) || [];
        return message;
      }
    };
    function createBaseQueryDelegationTotalRewardsRequest() {
      return {
        delegatorAddress: ""
      };
    }
    exports.QueryDelegationTotalRewardsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegatorAddress !== "") {
          writer.uint32(10).string(message.delegatorAddress);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDelegationTotalRewardsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegatorAddress = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegatorAddress: (0, helpers_1.isSet)(object.delegatorAddress) ? String(object.delegatorAddress) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegatorAddress !== void 0 && (obj.delegatorAddress = message.delegatorAddress);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDelegationTotalRewardsRequest();
        message.delegatorAddress = object.delegatorAddress ?? "";
        return message;
      }
    };
    function createBaseQueryDelegationTotalRewardsResponse() {
      return {
        rewards: [],
        total: []
      };
    }
    exports.QueryDelegationTotalRewardsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.rewards) {
          distribution_1.DelegationDelegatorReward.encode(v, writer.uint32(10).fork()).ldelim();
        }
        for (const v of message.total) {
          coin_1.DecCoin.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDelegationTotalRewardsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.rewards.push(distribution_1.DelegationDelegatorReward.decode(reader, reader.uint32()));
              break;
            case 2:
              message.total.push(coin_1.DecCoin.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          rewards: Array.isArray(object == null ? void 0 : object.rewards) ? object.rewards.map((e) => distribution_1.DelegationDelegatorReward.fromJSON(e)) : [],
          total: Array.isArray(object == null ? void 0 : object.total) ? object.total.map((e) => coin_1.DecCoin.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.rewards) {
          obj.rewards = message.rewards.map((e) => e ? distribution_1.DelegationDelegatorReward.toJSON(e) : void 0);
        } else {
          obj.rewards = [];
        }
        if (message.total) {
          obj.total = message.total.map((e) => e ? coin_1.DecCoin.toJSON(e) : void 0);
        } else {
          obj.total = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a, _b;
        const message = createBaseQueryDelegationTotalRewardsResponse();
        message.rewards = ((_a = object.rewards) == null ? void 0 : _a.map((e) => distribution_1.DelegationDelegatorReward.fromPartial(e))) || [];
        message.total = ((_b = object.total) == null ? void 0 : _b.map((e) => coin_1.DecCoin.fromPartial(e))) || [];
        return message;
      }
    };
    function createBaseQueryDelegatorValidatorsRequest() {
      return {
        delegatorAddress: ""
      };
    }
    exports.QueryDelegatorValidatorsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegatorAddress !== "") {
          writer.uint32(10).string(message.delegatorAddress);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDelegatorValidatorsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegatorAddress = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegatorAddress: (0, helpers_1.isSet)(object.delegatorAddress) ? String(object.delegatorAddress) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegatorAddress !== void 0 && (obj.delegatorAddress = message.delegatorAddress);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDelegatorValidatorsRequest();
        message.delegatorAddress = object.delegatorAddress ?? "";
        return message;
      }
    };
    function createBaseQueryDelegatorValidatorsResponse() {
      return {
        validators: []
      };
    }
    exports.QueryDelegatorValidatorsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.validators) {
          writer.uint32(10).string(v);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDelegatorValidatorsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.validators.push(reader.string());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          validators: Array.isArray(object == null ? void 0 : object.validators) ? object.validators.map((e) => String(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.validators) {
          obj.validators = message.validators.map((e) => e);
        } else {
          obj.validators = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryDelegatorValidatorsResponse();
        message.validators = ((_a = object.validators) == null ? void 0 : _a.map((e) => e)) || [];
        return message;
      }
    };
    function createBaseQueryDelegatorWithdrawAddressRequest() {
      return {
        delegatorAddress: ""
      };
    }
    exports.QueryDelegatorWithdrawAddressRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegatorAddress !== "") {
          writer.uint32(10).string(message.delegatorAddress);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDelegatorWithdrawAddressRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegatorAddress = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegatorAddress: (0, helpers_1.isSet)(object.delegatorAddress) ? String(object.delegatorAddress) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegatorAddress !== void 0 && (obj.delegatorAddress = message.delegatorAddress);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDelegatorWithdrawAddressRequest();
        message.delegatorAddress = object.delegatorAddress ?? "";
        return message;
      }
    };
    function createBaseQueryDelegatorWithdrawAddressResponse() {
      return {
        withdrawAddress: ""
      };
    }
    exports.QueryDelegatorWithdrawAddressResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.withdrawAddress !== "") {
          writer.uint32(10).string(message.withdrawAddress);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDelegatorWithdrawAddressResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.withdrawAddress = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          withdrawAddress: (0, helpers_1.isSet)(object.withdrawAddress) ? String(object.withdrawAddress) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.withdrawAddress !== void 0 && (obj.withdrawAddress = message.withdrawAddress);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDelegatorWithdrawAddressResponse();
        message.withdrawAddress = object.withdrawAddress ?? "";
        return message;
      }
    };
    function createBaseQueryCommunityPoolRequest() {
      return {};
    }
    exports.QueryCommunityPoolRequest = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryCommunityPoolRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseQueryCommunityPoolRequest();
        return message;
      }
    };
    function createBaseQueryCommunityPoolResponse() {
      return {
        pool: []
      };
    }
    exports.QueryCommunityPoolResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.pool) {
          coin_1.DecCoin.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryCommunityPoolResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.pool.push(coin_1.DecCoin.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          pool: Array.isArray(object == null ? void 0 : object.pool) ? object.pool.map((e) => coin_1.DecCoin.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.pool) {
          obj.pool = message.pool.map((e) => e ? coin_1.DecCoin.toJSON(e) : void 0);
        } else {
          obj.pool = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryCommunityPoolResponse();
        message.pool = ((_a = object.pool) == null ? void 0 : _a.map((e) => coin_1.DecCoin.fromPartial(e))) || [];
        return message;
      }
    };
    var QueryClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.Params = this.Params.bind(this);
        this.ValidatorOutstandingRewards = this.ValidatorOutstandingRewards.bind(this);
        this.ValidatorCommission = this.ValidatorCommission.bind(this);
        this.ValidatorSlashes = this.ValidatorSlashes.bind(this);
        this.DelegationRewards = this.DelegationRewards.bind(this);
        this.DelegationTotalRewards = this.DelegationTotalRewards.bind(this);
        this.DelegatorValidators = this.DelegatorValidators.bind(this);
        this.DelegatorWithdrawAddress = this.DelegatorWithdrawAddress.bind(this);
        this.CommunityPool = this.CommunityPool.bind(this);
      }
      Params(request = {}) {
        const data = exports.QueryParamsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.distribution.v1beta1.Query", "Params", data);
        return promise.then((data2) => exports.QueryParamsResponse.decode(new _m0.Reader(data2)));
      }
      ValidatorOutstandingRewards(request) {
        const data = exports.QueryValidatorOutstandingRewardsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.distribution.v1beta1.Query", "ValidatorOutstandingRewards", data);
        return promise.then((data2) => exports.QueryValidatorOutstandingRewardsResponse.decode(new _m0.Reader(data2)));
      }
      ValidatorCommission(request) {
        const data = exports.QueryValidatorCommissionRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.distribution.v1beta1.Query", "ValidatorCommission", data);
        return promise.then((data2) => exports.QueryValidatorCommissionResponse.decode(new _m0.Reader(data2)));
      }
      ValidatorSlashes(request) {
        const data = exports.QueryValidatorSlashesRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.distribution.v1beta1.Query", "ValidatorSlashes", data);
        return promise.then((data2) => exports.QueryValidatorSlashesResponse.decode(new _m0.Reader(data2)));
      }
      DelegationRewards(request) {
        const data = exports.QueryDelegationRewardsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.distribution.v1beta1.Query", "DelegationRewards", data);
        return promise.then((data2) => exports.QueryDelegationRewardsResponse.decode(new _m0.Reader(data2)));
      }
      DelegationTotalRewards(request) {
        const data = exports.QueryDelegationTotalRewardsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.distribution.v1beta1.Query", "DelegationTotalRewards", data);
        return promise.then((data2) => exports.QueryDelegationTotalRewardsResponse.decode(new _m0.Reader(data2)));
      }
      DelegatorValidators(request) {
        const data = exports.QueryDelegatorValidatorsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.distribution.v1beta1.Query", "DelegatorValidators", data);
        return promise.then((data2) => exports.QueryDelegatorValidatorsResponse.decode(new _m0.Reader(data2)));
      }
      DelegatorWithdrawAddress(request) {
        const data = exports.QueryDelegatorWithdrawAddressRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.distribution.v1beta1.Query", "DelegatorWithdrawAddress", data);
        return promise.then((data2) => exports.QueryDelegatorWithdrawAddressResponse.decode(new _m0.Reader(data2)));
      }
      CommunityPool(request = {}) {
        const data = exports.QueryCommunityPoolRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.distribution.v1beta1.Query", "CommunityPool", data);
        return promise.then((data2) => exports.QueryCommunityPoolResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.QueryClientImpl = QueryClientImpl;
  }
});

// node_modules/@cosmjs/stargate/build/modules/distribution/queries.js
var require_queries4 = __commonJS({
  "node_modules/@cosmjs/stargate/build/modules/distribution/queries.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.setupDistributionExtension = void 0;
    var query_1 = require_query4();
    var long_1 = __importDefault(require_long());
    var queryclient_1 = require_queryclient2();
    function setupDistributionExtension(base) {
      const rpc = (0, queryclient_1.createProtobufRpcClient)(base);
      const queryService = new query_1.QueryClientImpl(rpc);
      return {
        distribution: {
          communityPool: async () => {
            const response = await queryService.CommunityPool({});
            return response;
          },
          delegationRewards: async (delegatorAddress, validatorAddress) => {
            const response = await queryService.DelegationRewards({
              delegatorAddress,
              validatorAddress
            });
            return response;
          },
          delegationTotalRewards: async (delegatorAddress) => {
            const response = await queryService.DelegationTotalRewards({
              delegatorAddress
            });
            return response;
          },
          delegatorValidators: async (delegatorAddress) => {
            const response = await queryService.DelegatorValidators({
              delegatorAddress
            });
            return response;
          },
          delegatorWithdrawAddress: async (delegatorAddress) => {
            const response = await queryService.DelegatorWithdrawAddress({
              delegatorAddress
            });
            return response;
          },
          params: async () => {
            const response = await queryService.Params({});
            return response;
          },
          validatorCommission: async (validatorAddress) => {
            const response = await queryService.ValidatorCommission({
              validatorAddress
            });
            return response;
          },
          validatorOutstandingRewards: async (validatorAddress) => {
            const response = await queryService.ValidatorOutstandingRewards({
              validatorAddress
            });
            return response;
          },
          validatorSlashes: async (validatorAddress, startingHeight, endingHeight, paginationKey) => {
            const response = await queryService.ValidatorSlashes({
              validatorAddress,
              startingHeight: long_1.default.fromNumber(startingHeight, true),
              endingHeight: long_1.default.fromNumber(endingHeight, true),
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            });
            return response;
          }
        }
      };
    }
    exports.setupDistributionExtension = setupDistributionExtension;
  }
});

// node_modules/@cosmjs/stargate/build/modules/evidence/aminomessages.js
var require_aminomessages5 = __commonJS({
  "node_modules/@cosmjs/stargate/build/modules/evidence/aminomessages.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createEvidenceAminoConverters = exports.isAminoMsgSubmitEvidence = void 0;
    function isAminoMsgSubmitEvidence(msg) {
      return msg.type === "cosmos-sdk/MsgSubmitEvidence";
    }
    exports.isAminoMsgSubmitEvidence = isAminoMsgSubmitEvidence;
    function createEvidenceAminoConverters() {
      throw new Error("Not implemented");
    }
    exports.createEvidenceAminoConverters = createEvidenceAminoConverters;
  }
});

// node_modules/@cosmjs/stargate/build/modules/feegrant/aminomessages.js
var require_aminomessages6 = __commonJS({
  "node_modules/@cosmjs/stargate/build/modules/feegrant/aminomessages.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createFeegrantAminoConverters = void 0;
    function createFeegrantAminoConverters() {
      return {
        "/cosmos.feegrant.v1beta1.MsgGrantAllowance": "not_supported_by_chain",
        "/cosmos.feegrant.v1beta1.MsgRevokeAllowance": "not_supported_by_chain"
      };
    }
    exports.createFeegrantAminoConverters = createFeegrantAminoConverters;
  }
});

// node_modules/cosmjs-types/cosmos/feegrant/v1beta1/tx.js
var require_tx5 = __commonJS({
  "node_modules/cosmjs-types/cosmos/feegrant/v1beta1/tx.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MsgClientImpl = exports.MsgRevokeAllowanceResponse = exports.MsgRevokeAllowance = exports.MsgGrantAllowanceResponse = exports.MsgGrantAllowance = exports.protobufPackage = void 0;
    var any_1 = require_any();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.feegrant.v1beta1";
    function createBaseMsgGrantAllowance() {
      return {
        granter: "",
        grantee: "",
        allowance: void 0
      };
    }
    exports.MsgGrantAllowance = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.granter !== "") {
          writer.uint32(10).string(message.granter);
        }
        if (message.grantee !== "") {
          writer.uint32(18).string(message.grantee);
        }
        if (message.allowance !== void 0) {
          any_1.Any.encode(message.allowance, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgGrantAllowance();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.granter = reader.string();
              break;
            case 2:
              message.grantee = reader.string();
              break;
            case 3:
              message.allowance = any_1.Any.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          granter: (0, helpers_1.isSet)(object.granter) ? String(object.granter) : "",
          grantee: (0, helpers_1.isSet)(object.grantee) ? String(object.grantee) : "",
          allowance: (0, helpers_1.isSet)(object.allowance) ? any_1.Any.fromJSON(object.allowance) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.granter !== void 0 && (obj.granter = message.granter);
        message.grantee !== void 0 && (obj.grantee = message.grantee);
        message.allowance !== void 0 && (obj.allowance = message.allowance ? any_1.Any.toJSON(message.allowance) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgGrantAllowance();
        message.granter = object.granter ?? "";
        message.grantee = object.grantee ?? "";
        message.allowance = object.allowance !== void 0 && object.allowance !== null ? any_1.Any.fromPartial(object.allowance) : void 0;
        return message;
      }
    };
    function createBaseMsgGrantAllowanceResponse() {
      return {};
    }
    exports.MsgGrantAllowanceResponse = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgGrantAllowanceResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseMsgGrantAllowanceResponse();
        return message;
      }
    };
    function createBaseMsgRevokeAllowance() {
      return {
        granter: "",
        grantee: ""
      };
    }
    exports.MsgRevokeAllowance = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.granter !== "") {
          writer.uint32(10).string(message.granter);
        }
        if (message.grantee !== "") {
          writer.uint32(18).string(message.grantee);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgRevokeAllowance();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.granter = reader.string();
              break;
            case 2:
              message.grantee = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          granter: (0, helpers_1.isSet)(object.granter) ? String(object.granter) : "",
          grantee: (0, helpers_1.isSet)(object.grantee) ? String(object.grantee) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.granter !== void 0 && (obj.granter = message.granter);
        message.grantee !== void 0 && (obj.grantee = message.grantee);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgRevokeAllowance();
        message.granter = object.granter ?? "";
        message.grantee = object.grantee ?? "";
        return message;
      }
    };
    function createBaseMsgRevokeAllowanceResponse() {
      return {};
    }
    exports.MsgRevokeAllowanceResponse = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgRevokeAllowanceResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseMsgRevokeAllowanceResponse();
        return message;
      }
    };
    var MsgClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.GrantAllowance = this.GrantAllowance.bind(this);
        this.RevokeAllowance = this.RevokeAllowance.bind(this);
      }
      GrantAllowance(request) {
        const data = exports.MsgGrantAllowance.encode(request).finish();
        const promise = this.rpc.request("cosmos.feegrant.v1beta1.Msg", "GrantAllowance", data);
        return promise.then((data2) => exports.MsgGrantAllowanceResponse.decode(new _m0.Reader(data2)));
      }
      RevokeAllowance(request) {
        const data = exports.MsgRevokeAllowance.encode(request).finish();
        const promise = this.rpc.request("cosmos.feegrant.v1beta1.Msg", "RevokeAllowance", data);
        return promise.then((data2) => exports.MsgRevokeAllowanceResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.MsgClientImpl = MsgClientImpl;
  }
});

// node_modules/@cosmjs/stargate/build/modules/feegrant/messages.js
var require_messages4 = __commonJS({
  "node_modules/@cosmjs/stargate/build/modules/feegrant/messages.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.feegrantTypes = void 0;
    var tx_1 = require_tx5();
    exports.feegrantTypes = [
      ["/cosmos.feegrant.v1beta1.MsgGrantAllowance", tx_1.MsgGrantAllowance],
      ["/cosmos.feegrant.v1beta1.MsgRevokeAllowance", tx_1.MsgRevokeAllowance]
    ];
  }
});

// node_modules/cosmjs-types/google/protobuf/duration.js
var require_duration = __commonJS({
  "node_modules/cosmjs-types/google/protobuf/duration.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Duration = exports.protobufPackage = void 0;
    var helpers_1 = require_helpers();
    var _m0 = __importStar(require_minimal());
    exports.protobufPackage = "google.protobuf";
    function createBaseDuration() {
      return {
        seconds: helpers_1.Long.ZERO,
        nanos: 0
      };
    }
    exports.Duration = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.seconds.isZero()) {
          writer.uint32(8).int64(message.seconds);
        }
        if (message.nanos !== 0) {
          writer.uint32(16).int32(message.nanos);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseDuration();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.seconds = reader.int64();
              break;
            case 2:
              message.nanos = reader.int32();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          seconds: (0, helpers_1.isSet)(object.seconds) ? helpers_1.Long.fromValue(object.seconds) : helpers_1.Long.ZERO,
          nanos: (0, helpers_1.isSet)(object.nanos) ? Number(object.nanos) : 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.seconds !== void 0 && (obj.seconds = (message.seconds || helpers_1.Long.ZERO).toString());
        message.nanos !== void 0 && (obj.nanos = Math.round(message.nanos));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseDuration();
        message.seconds = object.seconds !== void 0 && object.seconds !== null ? helpers_1.Long.fromValue(object.seconds) : helpers_1.Long.ZERO;
        message.nanos = object.nanos ?? 0;
        return message;
      }
    };
  }
});

// node_modules/cosmjs-types/cosmos/feegrant/v1beta1/feegrant.js
var require_feegrant = __commonJS({
  "node_modules/cosmjs-types/cosmos/feegrant/v1beta1/feegrant.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Grant = exports.AllowedMsgAllowance = exports.PeriodicAllowance = exports.BasicAllowance = exports.protobufPackage = void 0;
    var coin_1 = require_coin();
    var timestamp_1 = require_timestamp();
    var duration_1 = require_duration();
    var any_1 = require_any();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.feegrant.v1beta1";
    function createBaseBasicAllowance() {
      return {
        spendLimit: [],
        expiration: void 0
      };
    }
    exports.BasicAllowance = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.spendLimit) {
          coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.expiration !== void 0) {
          timestamp_1.Timestamp.encode(message.expiration, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseBasicAllowance();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.spendLimit.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            case 2:
              message.expiration = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          spendLimit: Array.isArray(object == null ? void 0 : object.spendLimit) ? object.spendLimit.map((e) => coin_1.Coin.fromJSON(e)) : [],
          expiration: (0, helpers_1.isSet)(object.expiration) ? (0, helpers_1.fromJsonTimestamp)(object.expiration) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.spendLimit) {
          obj.spendLimit = message.spendLimit.map((e) => e ? coin_1.Coin.toJSON(e) : void 0);
        } else {
          obj.spendLimit = [];
        }
        message.expiration !== void 0 && (obj.expiration = (0, helpers_1.fromTimestamp)(message.expiration).toISOString());
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseBasicAllowance();
        message.spendLimit = ((_a = object.spendLimit) == null ? void 0 : _a.map((e) => coin_1.Coin.fromPartial(e))) || [];
        message.expiration = object.expiration !== void 0 && object.expiration !== null ? timestamp_1.Timestamp.fromPartial(object.expiration) : void 0;
        return message;
      }
    };
    function createBasePeriodicAllowance() {
      return {
        basic: void 0,
        period: void 0,
        periodSpendLimit: [],
        periodCanSpend: [],
        periodReset: void 0
      };
    }
    exports.PeriodicAllowance = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.basic !== void 0) {
          exports.BasicAllowance.encode(message.basic, writer.uint32(10).fork()).ldelim();
        }
        if (message.period !== void 0) {
          duration_1.Duration.encode(message.period, writer.uint32(18).fork()).ldelim();
        }
        for (const v of message.periodSpendLimit) {
          coin_1.Coin.encode(v, writer.uint32(26).fork()).ldelim();
        }
        for (const v of message.periodCanSpend) {
          coin_1.Coin.encode(v, writer.uint32(34).fork()).ldelim();
        }
        if (message.periodReset !== void 0) {
          timestamp_1.Timestamp.encode(message.periodReset, writer.uint32(42).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBasePeriodicAllowance();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.basic = exports.BasicAllowance.decode(reader, reader.uint32());
              break;
            case 2:
              message.period = duration_1.Duration.decode(reader, reader.uint32());
              break;
            case 3:
              message.periodSpendLimit.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            case 4:
              message.periodCanSpend.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            case 5:
              message.periodReset = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          basic: (0, helpers_1.isSet)(object.basic) ? exports.BasicAllowance.fromJSON(object.basic) : void 0,
          period: (0, helpers_1.isSet)(object.period) ? duration_1.Duration.fromJSON(object.period) : void 0,
          periodSpendLimit: Array.isArray(object == null ? void 0 : object.periodSpendLimit) ? object.periodSpendLimit.map((e) => coin_1.Coin.fromJSON(e)) : [],
          periodCanSpend: Array.isArray(object == null ? void 0 : object.periodCanSpend) ? object.periodCanSpend.map((e) => coin_1.Coin.fromJSON(e)) : [],
          periodReset: (0, helpers_1.isSet)(object.periodReset) ? (0, helpers_1.fromJsonTimestamp)(object.periodReset) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.basic !== void 0 && (obj.basic = message.basic ? exports.BasicAllowance.toJSON(message.basic) : void 0);
        message.period !== void 0 && (obj.period = message.period ? duration_1.Duration.toJSON(message.period) : void 0);
        if (message.periodSpendLimit) {
          obj.periodSpendLimit = message.periodSpendLimit.map((e) => e ? coin_1.Coin.toJSON(e) : void 0);
        } else {
          obj.periodSpendLimit = [];
        }
        if (message.periodCanSpend) {
          obj.periodCanSpend = message.periodCanSpend.map((e) => e ? coin_1.Coin.toJSON(e) : void 0);
        } else {
          obj.periodCanSpend = [];
        }
        message.periodReset !== void 0 && (obj.periodReset = (0, helpers_1.fromTimestamp)(message.periodReset).toISOString());
        return obj;
      },
      fromPartial(object) {
        var _a, _b;
        const message = createBasePeriodicAllowance();
        message.basic = object.basic !== void 0 && object.basic !== null ? exports.BasicAllowance.fromPartial(object.basic) : void 0;
        message.period = object.period !== void 0 && object.period !== null ? duration_1.Duration.fromPartial(object.period) : void 0;
        message.periodSpendLimit = ((_a = object.periodSpendLimit) == null ? void 0 : _a.map((e) => coin_1.Coin.fromPartial(e))) || [];
        message.periodCanSpend = ((_b = object.periodCanSpend) == null ? void 0 : _b.map((e) => coin_1.Coin.fromPartial(e))) || [];
        message.periodReset = object.periodReset !== void 0 && object.periodReset !== null ? timestamp_1.Timestamp.fromPartial(object.periodReset) : void 0;
        return message;
      }
    };
    function createBaseAllowedMsgAllowance() {
      return {
        allowance: void 0,
        allowedMessages: []
      };
    }
    exports.AllowedMsgAllowance = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.allowance !== void 0) {
          any_1.Any.encode(message.allowance, writer.uint32(10).fork()).ldelim();
        }
        for (const v of message.allowedMessages) {
          writer.uint32(18).string(v);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseAllowedMsgAllowance();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.allowance = any_1.Any.decode(reader, reader.uint32());
              break;
            case 2:
              message.allowedMessages.push(reader.string());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          allowance: (0, helpers_1.isSet)(object.allowance) ? any_1.Any.fromJSON(object.allowance) : void 0,
          allowedMessages: Array.isArray(object == null ? void 0 : object.allowedMessages) ? object.allowedMessages.map((e) => String(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.allowance !== void 0 && (obj.allowance = message.allowance ? any_1.Any.toJSON(message.allowance) : void 0);
        if (message.allowedMessages) {
          obj.allowedMessages = message.allowedMessages.map((e) => e);
        } else {
          obj.allowedMessages = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseAllowedMsgAllowance();
        message.allowance = object.allowance !== void 0 && object.allowance !== null ? any_1.Any.fromPartial(object.allowance) : void 0;
        message.allowedMessages = ((_a = object.allowedMessages) == null ? void 0 : _a.map((e) => e)) || [];
        return message;
      }
    };
    function createBaseGrant() {
      return {
        granter: "",
        grantee: "",
        allowance: void 0
      };
    }
    exports.Grant = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.granter !== "") {
          writer.uint32(10).string(message.granter);
        }
        if (message.grantee !== "") {
          writer.uint32(18).string(message.grantee);
        }
        if (message.allowance !== void 0) {
          any_1.Any.encode(message.allowance, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseGrant();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.granter = reader.string();
              break;
            case 2:
              message.grantee = reader.string();
              break;
            case 3:
              message.allowance = any_1.Any.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          granter: (0, helpers_1.isSet)(object.granter) ? String(object.granter) : "",
          grantee: (0, helpers_1.isSet)(object.grantee) ? String(object.grantee) : "",
          allowance: (0, helpers_1.isSet)(object.allowance) ? any_1.Any.fromJSON(object.allowance) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.granter !== void 0 && (obj.granter = message.granter);
        message.grantee !== void 0 && (obj.grantee = message.grantee);
        message.allowance !== void 0 && (obj.allowance = message.allowance ? any_1.Any.toJSON(message.allowance) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseGrant();
        message.granter = object.granter ?? "";
        message.grantee = object.grantee ?? "";
        message.allowance = object.allowance !== void 0 && object.allowance !== null ? any_1.Any.fromPartial(object.allowance) : void 0;
        return message;
      }
    };
  }
});

// node_modules/cosmjs-types/cosmos/feegrant/v1beta1/query.js
var require_query5 = __commonJS({
  "node_modules/cosmjs-types/cosmos/feegrant/v1beta1/query.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.QueryClientImpl = exports.QueryAllowancesByGranterResponse = exports.QueryAllowancesByGranterRequest = exports.QueryAllowancesResponse = exports.QueryAllowancesRequest = exports.QueryAllowanceResponse = exports.QueryAllowanceRequest = exports.protobufPackage = void 0;
    var pagination_1 = require_pagination();
    var feegrant_1 = require_feegrant();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.feegrant.v1beta1";
    function createBaseQueryAllowanceRequest() {
      return {
        granter: "",
        grantee: ""
      };
    }
    exports.QueryAllowanceRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.granter !== "") {
          writer.uint32(10).string(message.granter);
        }
        if (message.grantee !== "") {
          writer.uint32(18).string(message.grantee);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryAllowanceRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.granter = reader.string();
              break;
            case 2:
              message.grantee = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          granter: (0, helpers_1.isSet)(object.granter) ? String(object.granter) : "",
          grantee: (0, helpers_1.isSet)(object.grantee) ? String(object.grantee) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.granter !== void 0 && (obj.granter = message.granter);
        message.grantee !== void 0 && (obj.grantee = message.grantee);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryAllowanceRequest();
        message.granter = object.granter ?? "";
        message.grantee = object.grantee ?? "";
        return message;
      }
    };
    function createBaseQueryAllowanceResponse() {
      return {
        allowance: void 0
      };
    }
    exports.QueryAllowanceResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.allowance !== void 0) {
          feegrant_1.Grant.encode(message.allowance, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryAllowanceResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.allowance = feegrant_1.Grant.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          allowance: (0, helpers_1.isSet)(object.allowance) ? feegrant_1.Grant.fromJSON(object.allowance) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.allowance !== void 0 && (obj.allowance = message.allowance ? feegrant_1.Grant.toJSON(message.allowance) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryAllowanceResponse();
        message.allowance = object.allowance !== void 0 && object.allowance !== null ? feegrant_1.Grant.fromPartial(object.allowance) : void 0;
        return message;
      }
    };
    function createBaseQueryAllowancesRequest() {
      return {
        grantee: "",
        pagination: void 0
      };
    }
    exports.QueryAllowancesRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.grantee !== "") {
          writer.uint32(10).string(message.grantee);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryAllowancesRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.grantee = reader.string();
              break;
            case 2:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          grantee: (0, helpers_1.isSet)(object.grantee) ? String(object.grantee) : "",
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.grantee !== void 0 && (obj.grantee = message.grantee);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryAllowancesRequest();
        message.grantee = object.grantee ?? "";
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryAllowancesResponse() {
      return {
        allowances: [],
        pagination: void 0
      };
    }
    exports.QueryAllowancesResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.allowances) {
          feegrant_1.Grant.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryAllowancesResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.allowances.push(feegrant_1.Grant.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          allowances: Array.isArray(object == null ? void 0 : object.allowances) ? object.allowances.map((e) => feegrant_1.Grant.fromJSON(e)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.allowances) {
          obj.allowances = message.allowances.map((e) => e ? feegrant_1.Grant.toJSON(e) : void 0);
        } else {
          obj.allowances = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryAllowancesResponse();
        message.allowances = ((_a = object.allowances) == null ? void 0 : _a.map((e) => feegrant_1.Grant.fromPartial(e))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryAllowancesByGranterRequest() {
      return {
        granter: "",
        pagination: void 0
      };
    }
    exports.QueryAllowancesByGranterRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.granter !== "") {
          writer.uint32(10).string(message.granter);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryAllowancesByGranterRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.granter = reader.string();
              break;
            case 2:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          granter: (0, helpers_1.isSet)(object.granter) ? String(object.granter) : "",
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.granter !== void 0 && (obj.granter = message.granter);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryAllowancesByGranterRequest();
        message.granter = object.granter ?? "";
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryAllowancesByGranterResponse() {
      return {
        allowances: [],
        pagination: void 0
      };
    }
    exports.QueryAllowancesByGranterResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.allowances) {
          feegrant_1.Grant.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryAllowancesByGranterResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.allowances.push(feegrant_1.Grant.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          allowances: Array.isArray(object == null ? void 0 : object.allowances) ? object.allowances.map((e) => feegrant_1.Grant.fromJSON(e)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.allowances) {
          obj.allowances = message.allowances.map((e) => e ? feegrant_1.Grant.toJSON(e) : void 0);
        } else {
          obj.allowances = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryAllowancesByGranterResponse();
        message.allowances = ((_a = object.allowances) == null ? void 0 : _a.map((e) => feegrant_1.Grant.fromPartial(e))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    var QueryClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.Allowance = this.Allowance.bind(this);
        this.Allowances = this.Allowances.bind(this);
        this.AllowancesByGranter = this.AllowancesByGranter.bind(this);
      }
      Allowance(request) {
        const data = exports.QueryAllowanceRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.feegrant.v1beta1.Query", "Allowance", data);
        return promise.then((data2) => exports.QueryAllowanceResponse.decode(new _m0.Reader(data2)));
      }
      Allowances(request) {
        const data = exports.QueryAllowancesRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.feegrant.v1beta1.Query", "Allowances", data);
        return promise.then((data2) => exports.QueryAllowancesResponse.decode(new _m0.Reader(data2)));
      }
      AllowancesByGranter(request) {
        const data = exports.QueryAllowancesByGranterRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.feegrant.v1beta1.Query", "AllowancesByGranter", data);
        return promise.then((data2) => exports.QueryAllowancesByGranterResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.QueryClientImpl = QueryClientImpl;
  }
});

// node_modules/@cosmjs/stargate/build/modules/feegrant/queries.js
var require_queries5 = __commonJS({
  "node_modules/@cosmjs/stargate/build/modules/feegrant/queries.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.setupFeegrantExtension = void 0;
    var query_1 = require_query5();
    var queryclient_1 = require_queryclient2();
    function setupFeegrantExtension(base) {
      const rpc = (0, queryclient_1.createProtobufRpcClient)(base);
      const queryService = new query_1.QueryClientImpl(rpc);
      return {
        feegrant: {
          allowance: async (granter, grantee) => {
            const response = await queryService.Allowance({
              granter,
              grantee
            });
            return response;
          },
          allowances: async (grantee, paginationKey) => {
            const response = await queryService.Allowances({
              grantee,
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            });
            return response;
          }
        }
      };
    }
    exports.setupFeegrantExtension = setupFeegrantExtension;
  }
});

// node_modules/cosmjs-types/cosmos/gov/v1beta1/gov.js
var require_gov = __commonJS({
  "node_modules/cosmjs-types/cosmos/gov/v1beta1/gov.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TallyParams = exports.VotingParams = exports.DepositParams = exports.Vote = exports.TallyResult = exports.Proposal = exports.Deposit = exports.TextProposal = exports.WeightedVoteOption = exports.proposalStatusToJSON = exports.proposalStatusFromJSON = exports.ProposalStatus = exports.voteOptionToJSON = exports.voteOptionFromJSON = exports.VoteOption = exports.protobufPackage = void 0;
    var coin_1 = require_coin();
    var any_1 = require_any();
    var timestamp_1 = require_timestamp();
    var duration_1 = require_duration();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.gov.v1beta1";
    var VoteOption;
    (function(VoteOption2) {
      VoteOption2[VoteOption2["VOTE_OPTION_UNSPECIFIED"] = 0] = "VOTE_OPTION_UNSPECIFIED";
      VoteOption2[VoteOption2["VOTE_OPTION_YES"] = 1] = "VOTE_OPTION_YES";
      VoteOption2[VoteOption2["VOTE_OPTION_ABSTAIN"] = 2] = "VOTE_OPTION_ABSTAIN";
      VoteOption2[VoteOption2["VOTE_OPTION_NO"] = 3] = "VOTE_OPTION_NO";
      VoteOption2[VoteOption2["VOTE_OPTION_NO_WITH_VETO"] = 4] = "VOTE_OPTION_NO_WITH_VETO";
      VoteOption2[VoteOption2["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
    })(VoteOption = exports.VoteOption || (exports.VoteOption = {}));
    function voteOptionFromJSON(object) {
      switch (object) {
        case 0:
        case "VOTE_OPTION_UNSPECIFIED":
          return VoteOption.VOTE_OPTION_UNSPECIFIED;
        case 1:
        case "VOTE_OPTION_YES":
          return VoteOption.VOTE_OPTION_YES;
        case 2:
        case "VOTE_OPTION_ABSTAIN":
          return VoteOption.VOTE_OPTION_ABSTAIN;
        case 3:
        case "VOTE_OPTION_NO":
          return VoteOption.VOTE_OPTION_NO;
        case 4:
        case "VOTE_OPTION_NO_WITH_VETO":
          return VoteOption.VOTE_OPTION_NO_WITH_VETO;
        case -1:
        case "UNRECOGNIZED":
        default:
          return VoteOption.UNRECOGNIZED;
      }
    }
    exports.voteOptionFromJSON = voteOptionFromJSON;
    function voteOptionToJSON(object) {
      switch (object) {
        case VoteOption.VOTE_OPTION_UNSPECIFIED:
          return "VOTE_OPTION_UNSPECIFIED";
        case VoteOption.VOTE_OPTION_YES:
          return "VOTE_OPTION_YES";
        case VoteOption.VOTE_OPTION_ABSTAIN:
          return "VOTE_OPTION_ABSTAIN";
        case VoteOption.VOTE_OPTION_NO:
          return "VOTE_OPTION_NO";
        case VoteOption.VOTE_OPTION_NO_WITH_VETO:
          return "VOTE_OPTION_NO_WITH_VETO";
        case VoteOption.UNRECOGNIZED:
        default:
          return "UNRECOGNIZED";
      }
    }
    exports.voteOptionToJSON = voteOptionToJSON;
    var ProposalStatus;
    (function(ProposalStatus2) {
      ProposalStatus2[ProposalStatus2["PROPOSAL_STATUS_UNSPECIFIED"] = 0] = "PROPOSAL_STATUS_UNSPECIFIED";
      ProposalStatus2[ProposalStatus2["PROPOSAL_STATUS_DEPOSIT_PERIOD"] = 1] = "PROPOSAL_STATUS_DEPOSIT_PERIOD";
      ProposalStatus2[ProposalStatus2["PROPOSAL_STATUS_VOTING_PERIOD"] = 2] = "PROPOSAL_STATUS_VOTING_PERIOD";
      ProposalStatus2[ProposalStatus2["PROPOSAL_STATUS_PASSED"] = 3] = "PROPOSAL_STATUS_PASSED";
      ProposalStatus2[ProposalStatus2["PROPOSAL_STATUS_REJECTED"] = 4] = "PROPOSAL_STATUS_REJECTED";
      ProposalStatus2[ProposalStatus2["PROPOSAL_STATUS_FAILED"] = 5] = "PROPOSAL_STATUS_FAILED";
      ProposalStatus2[ProposalStatus2["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
    })(ProposalStatus = exports.ProposalStatus || (exports.ProposalStatus = {}));
    function proposalStatusFromJSON(object) {
      switch (object) {
        case 0:
        case "PROPOSAL_STATUS_UNSPECIFIED":
          return ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED;
        case 1:
        case "PROPOSAL_STATUS_DEPOSIT_PERIOD":
          return ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD;
        case 2:
        case "PROPOSAL_STATUS_VOTING_PERIOD":
          return ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD;
        case 3:
        case "PROPOSAL_STATUS_PASSED":
          return ProposalStatus.PROPOSAL_STATUS_PASSED;
        case 4:
        case "PROPOSAL_STATUS_REJECTED":
          return ProposalStatus.PROPOSAL_STATUS_REJECTED;
        case 5:
        case "PROPOSAL_STATUS_FAILED":
          return ProposalStatus.PROPOSAL_STATUS_FAILED;
        case -1:
        case "UNRECOGNIZED":
        default:
          return ProposalStatus.UNRECOGNIZED;
      }
    }
    exports.proposalStatusFromJSON = proposalStatusFromJSON;
    function proposalStatusToJSON(object) {
      switch (object) {
        case ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED:
          return "PROPOSAL_STATUS_UNSPECIFIED";
        case ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD:
          return "PROPOSAL_STATUS_DEPOSIT_PERIOD";
        case ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD:
          return "PROPOSAL_STATUS_VOTING_PERIOD";
        case ProposalStatus.PROPOSAL_STATUS_PASSED:
          return "PROPOSAL_STATUS_PASSED";
        case ProposalStatus.PROPOSAL_STATUS_REJECTED:
          return "PROPOSAL_STATUS_REJECTED";
        case ProposalStatus.PROPOSAL_STATUS_FAILED:
          return "PROPOSAL_STATUS_FAILED";
        case ProposalStatus.UNRECOGNIZED:
        default:
          return "UNRECOGNIZED";
      }
    }
    exports.proposalStatusToJSON = proposalStatusToJSON;
    function createBaseWeightedVoteOption() {
      return {
        option: 0,
        weight: ""
      };
    }
    exports.WeightedVoteOption = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.option !== 0) {
          writer.uint32(8).int32(message.option);
        }
        if (message.weight !== "") {
          writer.uint32(18).string(message.weight);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseWeightedVoteOption();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.option = reader.int32();
              break;
            case 2:
              message.weight = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          option: (0, helpers_1.isSet)(object.option) ? voteOptionFromJSON(object.option) : 0,
          weight: (0, helpers_1.isSet)(object.weight) ? String(object.weight) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.option !== void 0 && (obj.option = voteOptionToJSON(message.option));
        message.weight !== void 0 && (obj.weight = message.weight);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseWeightedVoteOption();
        message.option = object.option ?? 0;
        message.weight = object.weight ?? "";
        return message;
      }
    };
    function createBaseTextProposal() {
      return {
        title: "",
        description: ""
      };
    }
    exports.TextProposal = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.title !== "") {
          writer.uint32(10).string(message.title);
        }
        if (message.description !== "") {
          writer.uint32(18).string(message.description);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseTextProposal();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.title = reader.string();
              break;
            case 2:
              message.description = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          title: (0, helpers_1.isSet)(object.title) ? String(object.title) : "",
          description: (0, helpers_1.isSet)(object.description) ? String(object.description) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.title !== void 0 && (obj.title = message.title);
        message.description !== void 0 && (obj.description = message.description);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseTextProposal();
        message.title = object.title ?? "";
        message.description = object.description ?? "";
        return message;
      }
    };
    function createBaseDeposit() {
      return {
        proposalId: helpers_1.Long.UZERO,
        depositor: "",
        amount: []
      };
    }
    exports.Deposit = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.proposalId.isZero()) {
          writer.uint32(8).uint64(message.proposalId);
        }
        if (message.depositor !== "") {
          writer.uint32(18).string(message.depositor);
        }
        for (const v of message.amount) {
          coin_1.Coin.encode(v, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseDeposit();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.proposalId = reader.uint64();
              break;
            case 2:
              message.depositor = reader.string();
              break;
            case 3:
              message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          proposalId: (0, helpers_1.isSet)(object.proposalId) ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO,
          depositor: (0, helpers_1.isSet)(object.depositor) ? String(object.depositor) : "",
          amount: Array.isArray(object == null ? void 0 : object.amount) ? object.amount.map((e) => coin_1.Coin.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.proposalId !== void 0 && (obj.proposalId = (message.proposalId || helpers_1.Long.UZERO).toString());
        message.depositor !== void 0 && (obj.depositor = message.depositor);
        if (message.amount) {
          obj.amount = message.amount.map((e) => e ? coin_1.Coin.toJSON(e) : void 0);
        } else {
          obj.amount = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseDeposit();
        message.proposalId = object.proposalId !== void 0 && object.proposalId !== null ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO;
        message.depositor = object.depositor ?? "";
        message.amount = ((_a = object.amount) == null ? void 0 : _a.map((e) => coin_1.Coin.fromPartial(e))) || [];
        return message;
      }
    };
    function createBaseProposal() {
      return {
        proposalId: helpers_1.Long.UZERO,
        content: void 0,
        status: 0,
        finalTallyResult: void 0,
        submitTime: void 0,
        depositEndTime: void 0,
        totalDeposit: [],
        votingStartTime: void 0,
        votingEndTime: void 0
      };
    }
    exports.Proposal = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.proposalId.isZero()) {
          writer.uint32(8).uint64(message.proposalId);
        }
        if (message.content !== void 0) {
          any_1.Any.encode(message.content, writer.uint32(18).fork()).ldelim();
        }
        if (message.status !== 0) {
          writer.uint32(24).int32(message.status);
        }
        if (message.finalTallyResult !== void 0) {
          exports.TallyResult.encode(message.finalTallyResult, writer.uint32(34).fork()).ldelim();
        }
        if (message.submitTime !== void 0) {
          timestamp_1.Timestamp.encode(message.submitTime, writer.uint32(42).fork()).ldelim();
        }
        if (message.depositEndTime !== void 0) {
          timestamp_1.Timestamp.encode(message.depositEndTime, writer.uint32(50).fork()).ldelim();
        }
        for (const v of message.totalDeposit) {
          coin_1.Coin.encode(v, writer.uint32(58).fork()).ldelim();
        }
        if (message.votingStartTime !== void 0) {
          timestamp_1.Timestamp.encode(message.votingStartTime, writer.uint32(66).fork()).ldelim();
        }
        if (message.votingEndTime !== void 0) {
          timestamp_1.Timestamp.encode(message.votingEndTime, writer.uint32(74).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseProposal();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.proposalId = reader.uint64();
              break;
            case 2:
              message.content = any_1.Any.decode(reader, reader.uint32());
              break;
            case 3:
              message.status = reader.int32();
              break;
            case 4:
              message.finalTallyResult = exports.TallyResult.decode(reader, reader.uint32());
              break;
            case 5:
              message.submitTime = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            case 6:
              message.depositEndTime = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            case 7:
              message.totalDeposit.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            case 8:
              message.votingStartTime = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            case 9:
              message.votingEndTime = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          proposalId: (0, helpers_1.isSet)(object.proposalId) ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO,
          content: (0, helpers_1.isSet)(object.content) ? any_1.Any.fromJSON(object.content) : void 0,
          status: (0, helpers_1.isSet)(object.status) ? proposalStatusFromJSON(object.status) : 0,
          finalTallyResult: (0, helpers_1.isSet)(object.finalTallyResult) ? exports.TallyResult.fromJSON(object.finalTallyResult) : void 0,
          submitTime: (0, helpers_1.isSet)(object.submitTime) ? (0, helpers_1.fromJsonTimestamp)(object.submitTime) : void 0,
          depositEndTime: (0, helpers_1.isSet)(object.depositEndTime) ? (0, helpers_1.fromJsonTimestamp)(object.depositEndTime) : void 0,
          totalDeposit: Array.isArray(object == null ? void 0 : object.totalDeposit) ? object.totalDeposit.map((e) => coin_1.Coin.fromJSON(e)) : [],
          votingStartTime: (0, helpers_1.isSet)(object.votingStartTime) ? (0, helpers_1.fromJsonTimestamp)(object.votingStartTime) : void 0,
          votingEndTime: (0, helpers_1.isSet)(object.votingEndTime) ? (0, helpers_1.fromJsonTimestamp)(object.votingEndTime) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.proposalId !== void 0 && (obj.proposalId = (message.proposalId || helpers_1.Long.UZERO).toString());
        message.content !== void 0 && (obj.content = message.content ? any_1.Any.toJSON(message.content) : void 0);
        message.status !== void 0 && (obj.status = proposalStatusToJSON(message.status));
        message.finalTallyResult !== void 0 && (obj.finalTallyResult = message.finalTallyResult ? exports.TallyResult.toJSON(message.finalTallyResult) : void 0);
        message.submitTime !== void 0 && (obj.submitTime = (0, helpers_1.fromTimestamp)(message.submitTime).toISOString());
        message.depositEndTime !== void 0 && (obj.depositEndTime = (0, helpers_1.fromTimestamp)(message.depositEndTime).toISOString());
        if (message.totalDeposit) {
          obj.totalDeposit = message.totalDeposit.map((e) => e ? coin_1.Coin.toJSON(e) : void 0);
        } else {
          obj.totalDeposit = [];
        }
        message.votingStartTime !== void 0 && (obj.votingStartTime = (0, helpers_1.fromTimestamp)(message.votingStartTime).toISOString());
        message.votingEndTime !== void 0 && (obj.votingEndTime = (0, helpers_1.fromTimestamp)(message.votingEndTime).toISOString());
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseProposal();
        message.proposalId = object.proposalId !== void 0 && object.proposalId !== null ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO;
        message.content = object.content !== void 0 && object.content !== null ? any_1.Any.fromPartial(object.content) : void 0;
        message.status = object.status ?? 0;
        message.finalTallyResult = object.finalTallyResult !== void 0 && object.finalTallyResult !== null ? exports.TallyResult.fromPartial(object.finalTallyResult) : void 0;
        message.submitTime = object.submitTime !== void 0 && object.submitTime !== null ? timestamp_1.Timestamp.fromPartial(object.submitTime) : void 0;
        message.depositEndTime = object.depositEndTime !== void 0 && object.depositEndTime !== null ? timestamp_1.Timestamp.fromPartial(object.depositEndTime) : void 0;
        message.totalDeposit = ((_a = object.totalDeposit) == null ? void 0 : _a.map((e) => coin_1.Coin.fromPartial(e))) || [];
        message.votingStartTime = object.votingStartTime !== void 0 && object.votingStartTime !== null ? timestamp_1.Timestamp.fromPartial(object.votingStartTime) : void 0;
        message.votingEndTime = object.votingEndTime !== void 0 && object.votingEndTime !== null ? timestamp_1.Timestamp.fromPartial(object.votingEndTime) : void 0;
        return message;
      }
    };
    function createBaseTallyResult() {
      return {
        yes: "",
        abstain: "",
        no: "",
        noWithVeto: ""
      };
    }
    exports.TallyResult = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.yes !== "") {
          writer.uint32(10).string(message.yes);
        }
        if (message.abstain !== "") {
          writer.uint32(18).string(message.abstain);
        }
        if (message.no !== "") {
          writer.uint32(26).string(message.no);
        }
        if (message.noWithVeto !== "") {
          writer.uint32(34).string(message.noWithVeto);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseTallyResult();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.yes = reader.string();
              break;
            case 2:
              message.abstain = reader.string();
              break;
            case 3:
              message.no = reader.string();
              break;
            case 4:
              message.noWithVeto = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          yes: (0, helpers_1.isSet)(object.yes) ? String(object.yes) : "",
          abstain: (0, helpers_1.isSet)(object.abstain) ? String(object.abstain) : "",
          no: (0, helpers_1.isSet)(object.no) ? String(object.no) : "",
          noWithVeto: (0, helpers_1.isSet)(object.noWithVeto) ? String(object.noWithVeto) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.yes !== void 0 && (obj.yes = message.yes);
        message.abstain !== void 0 && (obj.abstain = message.abstain);
        message.no !== void 0 && (obj.no = message.no);
        message.noWithVeto !== void 0 && (obj.noWithVeto = message.noWithVeto);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseTallyResult();
        message.yes = object.yes ?? "";
        message.abstain = object.abstain ?? "";
        message.no = object.no ?? "";
        message.noWithVeto = object.noWithVeto ?? "";
        return message;
      }
    };
    function createBaseVote() {
      return {
        proposalId: helpers_1.Long.UZERO,
        voter: "",
        option: 0,
        options: []
      };
    }
    exports.Vote = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.proposalId.isZero()) {
          writer.uint32(8).uint64(message.proposalId);
        }
        if (message.voter !== "") {
          writer.uint32(18).string(message.voter);
        }
        if (message.option !== 0) {
          writer.uint32(24).int32(message.option);
        }
        for (const v of message.options) {
          exports.WeightedVoteOption.encode(v, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseVote();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.proposalId = reader.uint64();
              break;
            case 2:
              message.voter = reader.string();
              break;
            case 3:
              message.option = reader.int32();
              break;
            case 4:
              message.options.push(exports.WeightedVoteOption.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          proposalId: (0, helpers_1.isSet)(object.proposalId) ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO,
          voter: (0, helpers_1.isSet)(object.voter) ? String(object.voter) : "",
          option: (0, helpers_1.isSet)(object.option) ? voteOptionFromJSON(object.option) : 0,
          options: Array.isArray(object == null ? void 0 : object.options) ? object.options.map((e) => exports.WeightedVoteOption.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.proposalId !== void 0 && (obj.proposalId = (message.proposalId || helpers_1.Long.UZERO).toString());
        message.voter !== void 0 && (obj.voter = message.voter);
        message.option !== void 0 && (obj.option = voteOptionToJSON(message.option));
        if (message.options) {
          obj.options = message.options.map((e) => e ? exports.WeightedVoteOption.toJSON(e) : void 0);
        } else {
          obj.options = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseVote();
        message.proposalId = object.proposalId !== void 0 && object.proposalId !== null ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO;
        message.voter = object.voter ?? "";
        message.option = object.option ?? 0;
        message.options = ((_a = object.options) == null ? void 0 : _a.map((e) => exports.WeightedVoteOption.fromPartial(e))) || [];
        return message;
      }
    };
    function createBaseDepositParams() {
      return {
        minDeposit: [],
        maxDepositPeriod: void 0
      };
    }
    exports.DepositParams = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.minDeposit) {
          coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.maxDepositPeriod !== void 0) {
          duration_1.Duration.encode(message.maxDepositPeriod, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseDepositParams();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.minDeposit.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            case 2:
              message.maxDepositPeriod = duration_1.Duration.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          minDeposit: Array.isArray(object == null ? void 0 : object.minDeposit) ? object.minDeposit.map((e) => coin_1.Coin.fromJSON(e)) : [],
          maxDepositPeriod: (0, helpers_1.isSet)(object.maxDepositPeriod) ? duration_1.Duration.fromJSON(object.maxDepositPeriod) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.minDeposit) {
          obj.minDeposit = message.minDeposit.map((e) => e ? coin_1.Coin.toJSON(e) : void 0);
        } else {
          obj.minDeposit = [];
        }
        message.maxDepositPeriod !== void 0 && (obj.maxDepositPeriod = message.maxDepositPeriod ? duration_1.Duration.toJSON(message.maxDepositPeriod) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseDepositParams();
        message.minDeposit = ((_a = object.minDeposit) == null ? void 0 : _a.map((e) => coin_1.Coin.fromPartial(e))) || [];
        message.maxDepositPeriod = object.maxDepositPeriod !== void 0 && object.maxDepositPeriod !== null ? duration_1.Duration.fromPartial(object.maxDepositPeriod) : void 0;
        return message;
      }
    };
    function createBaseVotingParams() {
      return {
        votingPeriod: void 0
      };
    }
    exports.VotingParams = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.votingPeriod !== void 0) {
          duration_1.Duration.encode(message.votingPeriod, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseVotingParams();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.votingPeriod = duration_1.Duration.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          votingPeriod: (0, helpers_1.isSet)(object.votingPeriod) ? duration_1.Duration.fromJSON(object.votingPeriod) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.votingPeriod !== void 0 && (obj.votingPeriod = message.votingPeriod ? duration_1.Duration.toJSON(message.votingPeriod) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseVotingParams();
        message.votingPeriod = object.votingPeriod !== void 0 && object.votingPeriod !== null ? duration_1.Duration.fromPartial(object.votingPeriod) : void 0;
        return message;
      }
    };
    function createBaseTallyParams() {
      return {
        quorum: new Uint8Array(),
        threshold: new Uint8Array(),
        vetoThreshold: new Uint8Array()
      };
    }
    exports.TallyParams = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.quorum.length !== 0) {
          writer.uint32(10).bytes(message.quorum);
        }
        if (message.threshold.length !== 0) {
          writer.uint32(18).bytes(message.threshold);
        }
        if (message.vetoThreshold.length !== 0) {
          writer.uint32(26).bytes(message.vetoThreshold);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseTallyParams();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.quorum = reader.bytes();
              break;
            case 2:
              message.threshold = reader.bytes();
              break;
            case 3:
              message.vetoThreshold = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          quorum: (0, helpers_1.isSet)(object.quorum) ? (0, helpers_1.bytesFromBase64)(object.quorum) : new Uint8Array(),
          threshold: (0, helpers_1.isSet)(object.threshold) ? (0, helpers_1.bytesFromBase64)(object.threshold) : new Uint8Array(),
          vetoThreshold: (0, helpers_1.isSet)(object.vetoThreshold) ? (0, helpers_1.bytesFromBase64)(object.vetoThreshold) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.quorum !== void 0 && (obj.quorum = (0, helpers_1.base64FromBytes)(message.quorum !== void 0 ? message.quorum : new Uint8Array()));
        message.threshold !== void 0 && (obj.threshold = (0, helpers_1.base64FromBytes)(message.threshold !== void 0 ? message.threshold : new Uint8Array()));
        message.vetoThreshold !== void 0 && (obj.vetoThreshold = (0, helpers_1.base64FromBytes)(message.vetoThreshold !== void 0 ? message.vetoThreshold : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseTallyParams();
        message.quorum = object.quorum ?? new Uint8Array();
        message.threshold = object.threshold ?? new Uint8Array();
        message.vetoThreshold = object.vetoThreshold ?? new Uint8Array();
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/stargate/build/modules/gov/aminomessages.js
var require_aminomessages7 = __commonJS({
  "node_modules/@cosmjs/stargate/build/modules/gov/aminomessages.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createGovAminoConverters = exports.isAminoMsgDeposit = exports.isAminoMsgVoteWeighted = exports.isAminoMsgVote = exports.isAminoMsgSubmitProposal = void 0;
    var math_1 = require_build();
    var utils_1 = require_build3();
    var gov_1 = require_gov();
    var any_1 = require_any();
    var long_1 = __importDefault(require_long());
    var queryclient_1 = require_queryclient2();
    function isAminoMsgSubmitProposal(msg) {
      return msg.type === "cosmos-sdk/MsgSubmitProposal";
    }
    exports.isAminoMsgSubmitProposal = isAminoMsgSubmitProposal;
    function isAminoMsgVote(msg) {
      return msg.type === "cosmos-sdk/MsgVote";
    }
    exports.isAminoMsgVote = isAminoMsgVote;
    function isAminoMsgVoteWeighted(msg) {
      return msg.type === "cosmos-sdk/MsgVoteWeighted";
    }
    exports.isAminoMsgVoteWeighted = isAminoMsgVoteWeighted;
    function isAminoMsgDeposit(msg) {
      return msg.type === "cosmos-sdk/MsgDeposit";
    }
    exports.isAminoMsgDeposit = isAminoMsgDeposit;
    function createGovAminoConverters() {
      return {
        "/cosmos.gov.v1beta1.MsgDeposit": {
          aminoType: "cosmos-sdk/MsgDeposit",
          toAmino: ({ amount, depositor, proposalId }) => {
            return {
              amount,
              depositor,
              proposal_id: proposalId.toString()
            };
          },
          fromAmino: ({ amount, depositor, proposal_id }) => {
            return {
              amount: Array.from(amount),
              depositor,
              proposalId: long_1.default.fromString(proposal_id)
            };
          }
        },
        "/cosmos.gov.v1beta1.MsgVote": {
          aminoType: "cosmos-sdk/MsgVote",
          toAmino: ({ option, proposalId, voter }) => {
            return {
              option,
              proposal_id: proposalId.toString(),
              voter
            };
          },
          fromAmino: ({ option, proposal_id, voter }) => {
            return {
              option: (0, gov_1.voteOptionFromJSON)(option),
              proposalId: long_1.default.fromString(proposal_id),
              voter
            };
          }
        },
        "/cosmos.gov.v1beta1.MsgVoteWeighted": {
          aminoType: "cosmos-sdk/MsgVoteWeighted",
          toAmino: ({ options, proposalId, voter }) => {
            return {
              options: options.map((o) => ({
                option: o.option,
                // Weight is between 0 and 1, so we always have 20 characters when printing all trailing
                // zeros (e.g. "0.700000000000000000" or "1.000000000000000000")
                weight: (0, queryclient_1.decodeCosmosSdkDecFromProto)(o.weight).toString().padEnd(20, "0")
              })),
              proposal_id: proposalId.toString(),
              voter
            };
          },
          fromAmino: ({ options, proposal_id, voter }) => {
            return {
              proposalId: long_1.default.fromString(proposal_id),
              voter,
              options: options.map((o) => ({
                option: (0, gov_1.voteOptionFromJSON)(o.option),
                weight: math_1.Decimal.fromUserInput(o.weight, 18).atomics
              }))
            };
          }
        },
        "/cosmos.gov.v1beta1.MsgSubmitProposal": {
          aminoType: "cosmos-sdk/MsgSubmitProposal",
          toAmino: ({ initialDeposit, proposer, content }) => {
            (0, utils_1.assertDefinedAndNotNull)(content);
            let proposal;
            switch (content.typeUrl) {
              case "/cosmos.gov.v1beta1.TextProposal": {
                const textProposal = gov_1.TextProposal.decode(content.value);
                proposal = {
                  type: "cosmos-sdk/TextProposal",
                  value: {
                    description: textProposal.description,
                    title: textProposal.title
                  }
                };
                break;
              }
              default:
                throw new Error(`Unsupported proposal type: '${content.typeUrl}'`);
            }
            return {
              initial_deposit: initialDeposit,
              proposer,
              content: proposal
            };
          },
          fromAmino: ({ initial_deposit, proposer, content }) => {
            let any_content;
            switch (content.type) {
              case "cosmos-sdk/TextProposal": {
                const { value } = content;
                (0, utils_1.assert)((0, utils_1.isNonNullObject)(value));
                const { title, description } = value;
                (0, utils_1.assert)(typeof title === "string");
                (0, utils_1.assert)(typeof description === "string");
                any_content = any_1.Any.fromPartial({
                  typeUrl: "/cosmos.gov.v1beta1.TextProposal",
                  value: gov_1.TextProposal.encode(gov_1.TextProposal.fromPartial({
                    title,
                    description
                  })).finish()
                });
                break;
              }
              default:
                throw new Error(`Unsupported proposal type: '${content.type}'`);
            }
            return {
              initialDeposit: Array.from(initial_deposit),
              proposer,
              content: any_content
            };
          }
        }
      };
    }
    exports.createGovAminoConverters = createGovAminoConverters;
  }
});

// node_modules/cosmjs-types/cosmos/gov/v1beta1/tx.js
var require_tx6 = __commonJS({
  "node_modules/cosmjs-types/cosmos/gov/v1beta1/tx.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MsgClientImpl = exports.MsgDepositResponse = exports.MsgDeposit = exports.MsgVoteWeightedResponse = exports.MsgVoteWeighted = exports.MsgVoteResponse = exports.MsgVote = exports.MsgSubmitProposalResponse = exports.MsgSubmitProposal = exports.protobufPackage = void 0;
    var any_1 = require_any();
    var coin_1 = require_coin();
    var gov_1 = require_gov();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.gov.v1beta1";
    function createBaseMsgSubmitProposal() {
      return {
        content: void 0,
        initialDeposit: [],
        proposer: ""
      };
    }
    exports.MsgSubmitProposal = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.content !== void 0) {
          any_1.Any.encode(message.content, writer.uint32(10).fork()).ldelim();
        }
        for (const v of message.initialDeposit) {
          coin_1.Coin.encode(v, writer.uint32(18).fork()).ldelim();
        }
        if (message.proposer !== "") {
          writer.uint32(26).string(message.proposer);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgSubmitProposal();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.content = any_1.Any.decode(reader, reader.uint32());
              break;
            case 2:
              message.initialDeposit.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            case 3:
              message.proposer = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          content: (0, helpers_1.isSet)(object.content) ? any_1.Any.fromJSON(object.content) : void 0,
          initialDeposit: Array.isArray(object == null ? void 0 : object.initialDeposit) ? object.initialDeposit.map((e) => coin_1.Coin.fromJSON(e)) : [],
          proposer: (0, helpers_1.isSet)(object.proposer) ? String(object.proposer) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.content !== void 0 && (obj.content = message.content ? any_1.Any.toJSON(message.content) : void 0);
        if (message.initialDeposit) {
          obj.initialDeposit = message.initialDeposit.map((e) => e ? coin_1.Coin.toJSON(e) : void 0);
        } else {
          obj.initialDeposit = [];
        }
        message.proposer !== void 0 && (obj.proposer = message.proposer);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseMsgSubmitProposal();
        message.content = object.content !== void 0 && object.content !== null ? any_1.Any.fromPartial(object.content) : void 0;
        message.initialDeposit = ((_a = object.initialDeposit) == null ? void 0 : _a.map((e) => coin_1.Coin.fromPartial(e))) || [];
        message.proposer = object.proposer ?? "";
        return message;
      }
    };
    function createBaseMsgSubmitProposalResponse() {
      return {
        proposalId: helpers_1.Long.UZERO
      };
    }
    exports.MsgSubmitProposalResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.proposalId.isZero()) {
          writer.uint32(8).uint64(message.proposalId);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgSubmitProposalResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.proposalId = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          proposalId: (0, helpers_1.isSet)(object.proposalId) ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.proposalId !== void 0 && (obj.proposalId = (message.proposalId || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgSubmitProposalResponse();
        message.proposalId = object.proposalId !== void 0 && object.proposalId !== null ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseMsgVote() {
      return {
        proposalId: helpers_1.Long.UZERO,
        voter: "",
        option: 0
      };
    }
    exports.MsgVote = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.proposalId.isZero()) {
          writer.uint32(8).uint64(message.proposalId);
        }
        if (message.voter !== "") {
          writer.uint32(18).string(message.voter);
        }
        if (message.option !== 0) {
          writer.uint32(24).int32(message.option);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgVote();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.proposalId = reader.uint64();
              break;
            case 2:
              message.voter = reader.string();
              break;
            case 3:
              message.option = reader.int32();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          proposalId: (0, helpers_1.isSet)(object.proposalId) ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO,
          voter: (0, helpers_1.isSet)(object.voter) ? String(object.voter) : "",
          option: (0, helpers_1.isSet)(object.option) ? (0, gov_1.voteOptionFromJSON)(object.option) : 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.proposalId !== void 0 && (obj.proposalId = (message.proposalId || helpers_1.Long.UZERO).toString());
        message.voter !== void 0 && (obj.voter = message.voter);
        message.option !== void 0 && (obj.option = (0, gov_1.voteOptionToJSON)(message.option));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgVote();
        message.proposalId = object.proposalId !== void 0 && object.proposalId !== null ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO;
        message.voter = object.voter ?? "";
        message.option = object.option ?? 0;
        return message;
      }
    };
    function createBaseMsgVoteResponse() {
      return {};
    }
    exports.MsgVoteResponse = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgVoteResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseMsgVoteResponse();
        return message;
      }
    };
    function createBaseMsgVoteWeighted() {
      return {
        proposalId: helpers_1.Long.UZERO,
        voter: "",
        options: []
      };
    }
    exports.MsgVoteWeighted = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.proposalId.isZero()) {
          writer.uint32(8).uint64(message.proposalId);
        }
        if (message.voter !== "") {
          writer.uint32(18).string(message.voter);
        }
        for (const v of message.options) {
          gov_1.WeightedVoteOption.encode(v, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgVoteWeighted();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.proposalId = reader.uint64();
              break;
            case 2:
              message.voter = reader.string();
              break;
            case 3:
              message.options.push(gov_1.WeightedVoteOption.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          proposalId: (0, helpers_1.isSet)(object.proposalId) ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO,
          voter: (0, helpers_1.isSet)(object.voter) ? String(object.voter) : "",
          options: Array.isArray(object == null ? void 0 : object.options) ? object.options.map((e) => gov_1.WeightedVoteOption.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.proposalId !== void 0 && (obj.proposalId = (message.proposalId || helpers_1.Long.UZERO).toString());
        message.voter !== void 0 && (obj.voter = message.voter);
        if (message.options) {
          obj.options = message.options.map((e) => e ? gov_1.WeightedVoteOption.toJSON(e) : void 0);
        } else {
          obj.options = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseMsgVoteWeighted();
        message.proposalId = object.proposalId !== void 0 && object.proposalId !== null ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO;
        message.voter = object.voter ?? "";
        message.options = ((_a = object.options) == null ? void 0 : _a.map((e) => gov_1.WeightedVoteOption.fromPartial(e))) || [];
        return message;
      }
    };
    function createBaseMsgVoteWeightedResponse() {
      return {};
    }
    exports.MsgVoteWeightedResponse = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgVoteWeightedResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseMsgVoteWeightedResponse();
        return message;
      }
    };
    function createBaseMsgDeposit() {
      return {
        proposalId: helpers_1.Long.UZERO,
        depositor: "",
        amount: []
      };
    }
    exports.MsgDeposit = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.proposalId.isZero()) {
          writer.uint32(8).uint64(message.proposalId);
        }
        if (message.depositor !== "") {
          writer.uint32(18).string(message.depositor);
        }
        for (const v of message.amount) {
          coin_1.Coin.encode(v, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgDeposit();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.proposalId = reader.uint64();
              break;
            case 2:
              message.depositor = reader.string();
              break;
            case 3:
              message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          proposalId: (0, helpers_1.isSet)(object.proposalId) ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO,
          depositor: (0, helpers_1.isSet)(object.depositor) ? String(object.depositor) : "",
          amount: Array.isArray(object == null ? void 0 : object.amount) ? object.amount.map((e) => coin_1.Coin.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.proposalId !== void 0 && (obj.proposalId = (message.proposalId || helpers_1.Long.UZERO).toString());
        message.depositor !== void 0 && (obj.depositor = message.depositor);
        if (message.amount) {
          obj.amount = message.amount.map((e) => e ? coin_1.Coin.toJSON(e) : void 0);
        } else {
          obj.amount = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseMsgDeposit();
        message.proposalId = object.proposalId !== void 0 && object.proposalId !== null ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO;
        message.depositor = object.depositor ?? "";
        message.amount = ((_a = object.amount) == null ? void 0 : _a.map((e) => coin_1.Coin.fromPartial(e))) || [];
        return message;
      }
    };
    function createBaseMsgDepositResponse() {
      return {};
    }
    exports.MsgDepositResponse = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgDepositResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseMsgDepositResponse();
        return message;
      }
    };
    var MsgClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.SubmitProposal = this.SubmitProposal.bind(this);
        this.Vote = this.Vote.bind(this);
        this.VoteWeighted = this.VoteWeighted.bind(this);
        this.Deposit = this.Deposit.bind(this);
      }
      SubmitProposal(request) {
        const data = exports.MsgSubmitProposal.encode(request).finish();
        const promise = this.rpc.request("cosmos.gov.v1beta1.Msg", "SubmitProposal", data);
        return promise.then((data2) => exports.MsgSubmitProposalResponse.decode(new _m0.Reader(data2)));
      }
      Vote(request) {
        const data = exports.MsgVote.encode(request).finish();
        const promise = this.rpc.request("cosmos.gov.v1beta1.Msg", "Vote", data);
        return promise.then((data2) => exports.MsgVoteResponse.decode(new _m0.Reader(data2)));
      }
      VoteWeighted(request) {
        const data = exports.MsgVoteWeighted.encode(request).finish();
        const promise = this.rpc.request("cosmos.gov.v1beta1.Msg", "VoteWeighted", data);
        return promise.then((data2) => exports.MsgVoteWeightedResponse.decode(new _m0.Reader(data2)));
      }
      Deposit(request) {
        const data = exports.MsgDeposit.encode(request).finish();
        const promise = this.rpc.request("cosmos.gov.v1beta1.Msg", "Deposit", data);
        return promise.then((data2) => exports.MsgDepositResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.MsgClientImpl = MsgClientImpl;
  }
});

// node_modules/@cosmjs/stargate/build/modules/gov/messages.js
var require_messages5 = __commonJS({
  "node_modules/@cosmjs/stargate/build/modules/gov/messages.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isMsgVoteWeightedEncodeObject = exports.isMsgVoteEncodeObject = exports.isMsgSubmitProposalEncodeObject = exports.isMsgDepositEncodeObject = exports.govTypes = void 0;
    var tx_1 = require_tx6();
    exports.govTypes = [
      ["/cosmos.gov.v1beta1.MsgDeposit", tx_1.MsgDeposit],
      ["/cosmos.gov.v1beta1.MsgSubmitProposal", tx_1.MsgSubmitProposal],
      ["/cosmos.gov.v1beta1.MsgVote", tx_1.MsgVote],
      ["/cosmos.gov.v1beta1.MsgVoteWeighted", tx_1.MsgVoteWeighted]
    ];
    function isMsgDepositEncodeObject(object) {
      return object.typeUrl === "/cosmos.gov.v1beta1.MsgDeposit";
    }
    exports.isMsgDepositEncodeObject = isMsgDepositEncodeObject;
    function isMsgSubmitProposalEncodeObject(object) {
      return object.typeUrl === "/cosmos.gov.v1beta1.MsgSubmitProposal";
    }
    exports.isMsgSubmitProposalEncodeObject = isMsgSubmitProposalEncodeObject;
    function isMsgVoteEncodeObject(object) {
      return object.typeUrl === "/cosmos.gov.v1beta1.MsgVote";
    }
    exports.isMsgVoteEncodeObject = isMsgVoteEncodeObject;
    function isMsgVoteWeightedEncodeObject(object) {
      return object.typeUrl === "/cosmos.gov.v1beta1.MsgVoteWeighted";
    }
    exports.isMsgVoteWeightedEncodeObject = isMsgVoteWeightedEncodeObject;
  }
});

// node_modules/cosmjs-types/cosmos/gov/v1beta1/query.js
var require_query6 = __commonJS({
  "node_modules/cosmjs-types/cosmos/gov/v1beta1/query.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.QueryClientImpl = exports.QueryTallyResultResponse = exports.QueryTallyResultRequest = exports.QueryDepositsResponse = exports.QueryDepositsRequest = exports.QueryDepositResponse = exports.QueryDepositRequest = exports.QueryParamsResponse = exports.QueryParamsRequest = exports.QueryVotesResponse = exports.QueryVotesRequest = exports.QueryVoteResponse = exports.QueryVoteRequest = exports.QueryProposalsResponse = exports.QueryProposalsRequest = exports.QueryProposalResponse = exports.QueryProposalRequest = exports.protobufPackage = void 0;
    var gov_1 = require_gov();
    var pagination_1 = require_pagination();
    var helpers_1 = require_helpers();
    var _m0 = __importStar(require_minimal());
    exports.protobufPackage = "cosmos.gov.v1beta1";
    function createBaseQueryProposalRequest() {
      return {
        proposalId: helpers_1.Long.UZERO
      };
    }
    exports.QueryProposalRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.proposalId.isZero()) {
          writer.uint32(8).uint64(message.proposalId);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryProposalRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.proposalId = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          proposalId: (0, helpers_1.isSet)(object.proposalId) ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.proposalId !== void 0 && (obj.proposalId = (message.proposalId || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryProposalRequest();
        message.proposalId = object.proposalId !== void 0 && object.proposalId !== null ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseQueryProposalResponse() {
      return {
        proposal: void 0
      };
    }
    exports.QueryProposalResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.proposal !== void 0) {
          gov_1.Proposal.encode(message.proposal, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryProposalResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.proposal = gov_1.Proposal.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          proposal: (0, helpers_1.isSet)(object.proposal) ? gov_1.Proposal.fromJSON(object.proposal) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.proposal !== void 0 && (obj.proposal = message.proposal ? gov_1.Proposal.toJSON(message.proposal) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryProposalResponse();
        message.proposal = object.proposal !== void 0 && object.proposal !== null ? gov_1.Proposal.fromPartial(object.proposal) : void 0;
        return message;
      }
    };
    function createBaseQueryProposalsRequest() {
      return {
        proposalStatus: 0,
        voter: "",
        depositor: "",
        pagination: void 0
      };
    }
    exports.QueryProposalsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.proposalStatus !== 0) {
          writer.uint32(8).int32(message.proposalStatus);
        }
        if (message.voter !== "") {
          writer.uint32(18).string(message.voter);
        }
        if (message.depositor !== "") {
          writer.uint32(26).string(message.depositor);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryProposalsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.proposalStatus = reader.int32();
              break;
            case 2:
              message.voter = reader.string();
              break;
            case 3:
              message.depositor = reader.string();
              break;
            case 4:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          proposalStatus: (0, helpers_1.isSet)(object.proposalStatus) ? (0, gov_1.proposalStatusFromJSON)(object.proposalStatus) : 0,
          voter: (0, helpers_1.isSet)(object.voter) ? String(object.voter) : "",
          depositor: (0, helpers_1.isSet)(object.depositor) ? String(object.depositor) : "",
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.proposalStatus !== void 0 && (obj.proposalStatus = (0, gov_1.proposalStatusToJSON)(message.proposalStatus));
        message.voter !== void 0 && (obj.voter = message.voter);
        message.depositor !== void 0 && (obj.depositor = message.depositor);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryProposalsRequest();
        message.proposalStatus = object.proposalStatus ?? 0;
        message.voter = object.voter ?? "";
        message.depositor = object.depositor ?? "";
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryProposalsResponse() {
      return {
        proposals: [],
        pagination: void 0
      };
    }
    exports.QueryProposalsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.proposals) {
          gov_1.Proposal.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryProposalsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.proposals.push(gov_1.Proposal.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          proposals: Array.isArray(object == null ? void 0 : object.proposals) ? object.proposals.map((e) => gov_1.Proposal.fromJSON(e)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.proposals) {
          obj.proposals = message.proposals.map((e) => e ? gov_1.Proposal.toJSON(e) : void 0);
        } else {
          obj.proposals = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryProposalsResponse();
        message.proposals = ((_a = object.proposals) == null ? void 0 : _a.map((e) => gov_1.Proposal.fromPartial(e))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryVoteRequest() {
      return {
        proposalId: helpers_1.Long.UZERO,
        voter: ""
      };
    }
    exports.QueryVoteRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.proposalId.isZero()) {
          writer.uint32(8).uint64(message.proposalId);
        }
        if (message.voter !== "") {
          writer.uint32(18).string(message.voter);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryVoteRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.proposalId = reader.uint64();
              break;
            case 2:
              message.voter = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          proposalId: (0, helpers_1.isSet)(object.proposalId) ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO,
          voter: (0, helpers_1.isSet)(object.voter) ? String(object.voter) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.proposalId !== void 0 && (obj.proposalId = (message.proposalId || helpers_1.Long.UZERO).toString());
        message.voter !== void 0 && (obj.voter = message.voter);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryVoteRequest();
        message.proposalId = object.proposalId !== void 0 && object.proposalId !== null ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO;
        message.voter = object.voter ?? "";
        return message;
      }
    };
    function createBaseQueryVoteResponse() {
      return {
        vote: void 0
      };
    }
    exports.QueryVoteResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.vote !== void 0) {
          gov_1.Vote.encode(message.vote, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryVoteResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.vote = gov_1.Vote.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          vote: (0, helpers_1.isSet)(object.vote) ? gov_1.Vote.fromJSON(object.vote) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.vote !== void 0 && (obj.vote = message.vote ? gov_1.Vote.toJSON(message.vote) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryVoteResponse();
        message.vote = object.vote !== void 0 && object.vote !== null ? gov_1.Vote.fromPartial(object.vote) : void 0;
        return message;
      }
    };
    function createBaseQueryVotesRequest() {
      return {
        proposalId: helpers_1.Long.UZERO,
        pagination: void 0
      };
    }
    exports.QueryVotesRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.proposalId.isZero()) {
          writer.uint32(8).uint64(message.proposalId);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryVotesRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.proposalId = reader.uint64();
              break;
            case 2:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          proposalId: (0, helpers_1.isSet)(object.proposalId) ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO,
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.proposalId !== void 0 && (obj.proposalId = (message.proposalId || helpers_1.Long.UZERO).toString());
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryVotesRequest();
        message.proposalId = object.proposalId !== void 0 && object.proposalId !== null ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO;
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryVotesResponse() {
      return {
        votes: [],
        pagination: void 0
      };
    }
    exports.QueryVotesResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.votes) {
          gov_1.Vote.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryVotesResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.votes.push(gov_1.Vote.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          votes: Array.isArray(object == null ? void 0 : object.votes) ? object.votes.map((e) => gov_1.Vote.fromJSON(e)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.votes) {
          obj.votes = message.votes.map((e) => e ? gov_1.Vote.toJSON(e) : void 0);
        } else {
          obj.votes = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryVotesResponse();
        message.votes = ((_a = object.votes) == null ? void 0 : _a.map((e) => gov_1.Vote.fromPartial(e))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryParamsRequest() {
      return {
        paramsType: ""
      };
    }
    exports.QueryParamsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.paramsType !== "") {
          writer.uint32(10).string(message.paramsType);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryParamsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.paramsType = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          paramsType: (0, helpers_1.isSet)(object.paramsType) ? String(object.paramsType) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.paramsType !== void 0 && (obj.paramsType = message.paramsType);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryParamsRequest();
        message.paramsType = object.paramsType ?? "";
        return message;
      }
    };
    function createBaseQueryParamsResponse() {
      return {
        votingParams: void 0,
        depositParams: void 0,
        tallyParams: void 0
      };
    }
    exports.QueryParamsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.votingParams !== void 0) {
          gov_1.VotingParams.encode(message.votingParams, writer.uint32(10).fork()).ldelim();
        }
        if (message.depositParams !== void 0) {
          gov_1.DepositParams.encode(message.depositParams, writer.uint32(18).fork()).ldelim();
        }
        if (message.tallyParams !== void 0) {
          gov_1.TallyParams.encode(message.tallyParams, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryParamsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.votingParams = gov_1.VotingParams.decode(reader, reader.uint32());
              break;
            case 2:
              message.depositParams = gov_1.DepositParams.decode(reader, reader.uint32());
              break;
            case 3:
              message.tallyParams = gov_1.TallyParams.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          votingParams: (0, helpers_1.isSet)(object.votingParams) ? gov_1.VotingParams.fromJSON(object.votingParams) : void 0,
          depositParams: (0, helpers_1.isSet)(object.depositParams) ? gov_1.DepositParams.fromJSON(object.depositParams) : void 0,
          tallyParams: (0, helpers_1.isSet)(object.tallyParams) ? gov_1.TallyParams.fromJSON(object.tallyParams) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.votingParams !== void 0 && (obj.votingParams = message.votingParams ? gov_1.VotingParams.toJSON(message.votingParams) : void 0);
        message.depositParams !== void 0 && (obj.depositParams = message.depositParams ? gov_1.DepositParams.toJSON(message.depositParams) : void 0);
        message.tallyParams !== void 0 && (obj.tallyParams = message.tallyParams ? gov_1.TallyParams.toJSON(message.tallyParams) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryParamsResponse();
        message.votingParams = object.votingParams !== void 0 && object.votingParams !== null ? gov_1.VotingParams.fromPartial(object.votingParams) : void 0;
        message.depositParams = object.depositParams !== void 0 && object.depositParams !== null ? gov_1.DepositParams.fromPartial(object.depositParams) : void 0;
        message.tallyParams = object.tallyParams !== void 0 && object.tallyParams !== null ? gov_1.TallyParams.fromPartial(object.tallyParams) : void 0;
        return message;
      }
    };
    function createBaseQueryDepositRequest() {
      return {
        proposalId: helpers_1.Long.UZERO,
        depositor: ""
      };
    }
    exports.QueryDepositRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.proposalId.isZero()) {
          writer.uint32(8).uint64(message.proposalId);
        }
        if (message.depositor !== "") {
          writer.uint32(18).string(message.depositor);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDepositRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.proposalId = reader.uint64();
              break;
            case 2:
              message.depositor = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          proposalId: (0, helpers_1.isSet)(object.proposalId) ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO,
          depositor: (0, helpers_1.isSet)(object.depositor) ? String(object.depositor) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.proposalId !== void 0 && (obj.proposalId = (message.proposalId || helpers_1.Long.UZERO).toString());
        message.depositor !== void 0 && (obj.depositor = message.depositor);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDepositRequest();
        message.proposalId = object.proposalId !== void 0 && object.proposalId !== null ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO;
        message.depositor = object.depositor ?? "";
        return message;
      }
    };
    function createBaseQueryDepositResponse() {
      return {
        deposit: void 0
      };
    }
    exports.QueryDepositResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.deposit !== void 0) {
          gov_1.Deposit.encode(message.deposit, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDepositResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.deposit = gov_1.Deposit.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          deposit: (0, helpers_1.isSet)(object.deposit) ? gov_1.Deposit.fromJSON(object.deposit) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.deposit !== void 0 && (obj.deposit = message.deposit ? gov_1.Deposit.toJSON(message.deposit) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDepositResponse();
        message.deposit = object.deposit !== void 0 && object.deposit !== null ? gov_1.Deposit.fromPartial(object.deposit) : void 0;
        return message;
      }
    };
    function createBaseQueryDepositsRequest() {
      return {
        proposalId: helpers_1.Long.UZERO,
        pagination: void 0
      };
    }
    exports.QueryDepositsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.proposalId.isZero()) {
          writer.uint32(8).uint64(message.proposalId);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDepositsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.proposalId = reader.uint64();
              break;
            case 2:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          proposalId: (0, helpers_1.isSet)(object.proposalId) ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO,
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.proposalId !== void 0 && (obj.proposalId = (message.proposalId || helpers_1.Long.UZERO).toString());
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDepositsRequest();
        message.proposalId = object.proposalId !== void 0 && object.proposalId !== null ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO;
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryDepositsResponse() {
      return {
        deposits: [],
        pagination: void 0
      };
    }
    exports.QueryDepositsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.deposits) {
          gov_1.Deposit.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDepositsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.deposits.push(gov_1.Deposit.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          deposits: Array.isArray(object == null ? void 0 : object.deposits) ? object.deposits.map((e) => gov_1.Deposit.fromJSON(e)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.deposits) {
          obj.deposits = message.deposits.map((e) => e ? gov_1.Deposit.toJSON(e) : void 0);
        } else {
          obj.deposits = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryDepositsResponse();
        message.deposits = ((_a = object.deposits) == null ? void 0 : _a.map((e) => gov_1.Deposit.fromPartial(e))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryTallyResultRequest() {
      return {
        proposalId: helpers_1.Long.UZERO
      };
    }
    exports.QueryTallyResultRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.proposalId.isZero()) {
          writer.uint32(8).uint64(message.proposalId);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryTallyResultRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.proposalId = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          proposalId: (0, helpers_1.isSet)(object.proposalId) ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.proposalId !== void 0 && (obj.proposalId = (message.proposalId || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryTallyResultRequest();
        message.proposalId = object.proposalId !== void 0 && object.proposalId !== null ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseQueryTallyResultResponse() {
      return {
        tally: void 0
      };
    }
    exports.QueryTallyResultResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.tally !== void 0) {
          gov_1.TallyResult.encode(message.tally, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryTallyResultResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.tally = gov_1.TallyResult.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          tally: (0, helpers_1.isSet)(object.tally) ? gov_1.TallyResult.fromJSON(object.tally) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.tally !== void 0 && (obj.tally = message.tally ? gov_1.TallyResult.toJSON(message.tally) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryTallyResultResponse();
        message.tally = object.tally !== void 0 && object.tally !== null ? gov_1.TallyResult.fromPartial(object.tally) : void 0;
        return message;
      }
    };
    var QueryClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.Proposal = this.Proposal.bind(this);
        this.Proposals = this.Proposals.bind(this);
        this.Vote = this.Vote.bind(this);
        this.Votes = this.Votes.bind(this);
        this.Params = this.Params.bind(this);
        this.Deposit = this.Deposit.bind(this);
        this.Deposits = this.Deposits.bind(this);
        this.TallyResult = this.TallyResult.bind(this);
      }
      Proposal(request) {
        const data = exports.QueryProposalRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.gov.v1beta1.Query", "Proposal", data);
        return promise.then((data2) => exports.QueryProposalResponse.decode(new _m0.Reader(data2)));
      }
      Proposals(request) {
        const data = exports.QueryProposalsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.gov.v1beta1.Query", "Proposals", data);
        return promise.then((data2) => exports.QueryProposalsResponse.decode(new _m0.Reader(data2)));
      }
      Vote(request) {
        const data = exports.QueryVoteRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.gov.v1beta1.Query", "Vote", data);
        return promise.then((data2) => exports.QueryVoteResponse.decode(new _m0.Reader(data2)));
      }
      Votes(request) {
        const data = exports.QueryVotesRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.gov.v1beta1.Query", "Votes", data);
        return promise.then((data2) => exports.QueryVotesResponse.decode(new _m0.Reader(data2)));
      }
      Params(request) {
        const data = exports.QueryParamsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.gov.v1beta1.Query", "Params", data);
        return promise.then((data2) => exports.QueryParamsResponse.decode(new _m0.Reader(data2)));
      }
      Deposit(request) {
        const data = exports.QueryDepositRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.gov.v1beta1.Query", "Deposit", data);
        return promise.then((data2) => exports.QueryDepositResponse.decode(new _m0.Reader(data2)));
      }
      Deposits(request) {
        const data = exports.QueryDepositsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.gov.v1beta1.Query", "Deposits", data);
        return promise.then((data2) => exports.QueryDepositsResponse.decode(new _m0.Reader(data2)));
      }
      TallyResult(request) {
        const data = exports.QueryTallyResultRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.gov.v1beta1.Query", "TallyResult", data);
        return promise.then((data2) => exports.QueryTallyResultResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.QueryClientImpl = QueryClientImpl;
  }
});

// node_modules/@cosmjs/stargate/build/modules/gov/queries.js
var require_queries6 = __commonJS({
  "node_modules/@cosmjs/stargate/build/modules/gov/queries.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.setupGovExtension = void 0;
    var query_1 = require_query6();
    var queryclient_1 = require_queryclient2();
    function setupGovExtension(base) {
      const rpc = (0, queryclient_1.createProtobufRpcClient)(base);
      const queryService = new query_1.QueryClientImpl(rpc);
      return {
        gov: {
          params: async (parametersType) => {
            const response = await queryService.Params({ paramsType: parametersType });
            return response;
          },
          proposals: async (proposalStatus, depositorAddress, voterAddress, paginationKey) => {
            const response = await queryService.Proposals({
              proposalStatus,
              depositor: depositorAddress,
              voter: voterAddress,
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            });
            return response;
          },
          proposal: async (proposalId) => {
            const response = await queryService.Proposal({ proposalId: (0, queryclient_1.longify)(proposalId) });
            return response;
          },
          deposits: async (proposalId, paginationKey) => {
            const response = await queryService.Deposits({
              proposalId: (0, queryclient_1.longify)(proposalId),
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            });
            return response;
          },
          deposit: async (proposalId, depositorAddress) => {
            const response = await queryService.Deposit({
              proposalId: (0, queryclient_1.longify)(proposalId),
              depositor: depositorAddress
            });
            return response;
          },
          tally: async (proposalId) => {
            const response = await queryService.TallyResult({
              proposalId: (0, queryclient_1.longify)(proposalId)
            });
            return response;
          },
          votes: async (proposalId, paginationKey) => {
            const response = await queryService.Votes({
              proposalId: (0, queryclient_1.longify)(proposalId),
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            });
            return response;
          },
          vote: async (proposalId, voterAddress) => {
            const response = await queryService.Vote({
              proposalId: (0, queryclient_1.longify)(proposalId),
              voter: voterAddress
            });
            return response;
          }
        }
      };
    }
    exports.setupGovExtension = setupGovExtension;
  }
});

// node_modules/cosmjs-types/cosmos/upgrade/v1beta1/upgrade.js
var require_upgrade = __commonJS({
  "node_modules/cosmjs-types/cosmos/upgrade/v1beta1/upgrade.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ModuleVersion = exports.CancelSoftwareUpgradeProposal = exports.SoftwareUpgradeProposal = exports.Plan = exports.protobufPackage = void 0;
    var timestamp_1 = require_timestamp();
    var any_1 = require_any();
    var helpers_1 = require_helpers();
    var _m0 = __importStar(require_minimal());
    exports.protobufPackage = "cosmos.upgrade.v1beta1";
    function createBasePlan() {
      return {
        name: "",
        time: void 0,
        height: helpers_1.Long.ZERO,
        info: "",
        upgradedClientState: void 0
      };
    }
    exports.Plan = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.name !== "") {
          writer.uint32(10).string(message.name);
        }
        if (message.time !== void 0) {
          timestamp_1.Timestamp.encode(message.time, writer.uint32(18).fork()).ldelim();
        }
        if (!message.height.isZero()) {
          writer.uint32(24).int64(message.height);
        }
        if (message.info !== "") {
          writer.uint32(34).string(message.info);
        }
        if (message.upgradedClientState !== void 0) {
          any_1.Any.encode(message.upgradedClientState, writer.uint32(42).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBasePlan();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.name = reader.string();
              break;
            case 2:
              message.time = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            case 3:
              message.height = reader.int64();
              break;
            case 4:
              message.info = reader.string();
              break;
            case 5:
              message.upgradedClientState = any_1.Any.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          name: (0, helpers_1.isSet)(object.name) ? String(object.name) : "",
          time: (0, helpers_1.isSet)(object.time) ? (0, helpers_1.fromJsonTimestamp)(object.time) : void 0,
          height: (0, helpers_1.isSet)(object.height) ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO,
          info: (0, helpers_1.isSet)(object.info) ? String(object.info) : "",
          upgradedClientState: (0, helpers_1.isSet)(object.upgradedClientState) ? any_1.Any.fromJSON(object.upgradedClientState) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.name !== void 0 && (obj.name = message.name);
        message.time !== void 0 && (obj.time = (0, helpers_1.fromTimestamp)(message.time).toISOString());
        message.height !== void 0 && (obj.height = (message.height || helpers_1.Long.ZERO).toString());
        message.info !== void 0 && (obj.info = message.info);
        message.upgradedClientState !== void 0 && (obj.upgradedClientState = message.upgradedClientState ? any_1.Any.toJSON(message.upgradedClientState) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBasePlan();
        message.name = object.name ?? "";
        message.time = object.time !== void 0 && object.time !== null ? timestamp_1.Timestamp.fromPartial(object.time) : void 0;
        message.height = object.height !== void 0 && object.height !== null ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO;
        message.info = object.info ?? "";
        message.upgradedClientState = object.upgradedClientState !== void 0 && object.upgradedClientState !== null ? any_1.Any.fromPartial(object.upgradedClientState) : void 0;
        return message;
      }
    };
    function createBaseSoftwareUpgradeProposal() {
      return {
        title: "",
        description: "",
        plan: void 0
      };
    }
    exports.SoftwareUpgradeProposal = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.title !== "") {
          writer.uint32(10).string(message.title);
        }
        if (message.description !== "") {
          writer.uint32(18).string(message.description);
        }
        if (message.plan !== void 0) {
          exports.Plan.encode(message.plan, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseSoftwareUpgradeProposal();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.title = reader.string();
              break;
            case 2:
              message.description = reader.string();
              break;
            case 3:
              message.plan = exports.Plan.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          title: (0, helpers_1.isSet)(object.title) ? String(object.title) : "",
          description: (0, helpers_1.isSet)(object.description) ? String(object.description) : "",
          plan: (0, helpers_1.isSet)(object.plan) ? exports.Plan.fromJSON(object.plan) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.title !== void 0 && (obj.title = message.title);
        message.description !== void 0 && (obj.description = message.description);
        message.plan !== void 0 && (obj.plan = message.plan ? exports.Plan.toJSON(message.plan) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseSoftwareUpgradeProposal();
        message.title = object.title ?? "";
        message.description = object.description ?? "";
        message.plan = object.plan !== void 0 && object.plan !== null ? exports.Plan.fromPartial(object.plan) : void 0;
        return message;
      }
    };
    function createBaseCancelSoftwareUpgradeProposal() {
      return {
        title: "",
        description: ""
      };
    }
    exports.CancelSoftwareUpgradeProposal = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.title !== "") {
          writer.uint32(10).string(message.title);
        }
        if (message.description !== "") {
          writer.uint32(18).string(message.description);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseCancelSoftwareUpgradeProposal();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.title = reader.string();
              break;
            case 2:
              message.description = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          title: (0, helpers_1.isSet)(object.title) ? String(object.title) : "",
          description: (0, helpers_1.isSet)(object.description) ? String(object.description) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.title !== void 0 && (obj.title = message.title);
        message.description !== void 0 && (obj.description = message.description);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseCancelSoftwareUpgradeProposal();
        message.title = object.title ?? "";
        message.description = object.description ?? "";
        return message;
      }
    };
    function createBaseModuleVersion() {
      return {
        name: "",
        version: helpers_1.Long.UZERO
      };
    }
    exports.ModuleVersion = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.name !== "") {
          writer.uint32(10).string(message.name);
        }
        if (!message.version.isZero()) {
          writer.uint32(16).uint64(message.version);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseModuleVersion();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.name = reader.string();
              break;
            case 2:
              message.version = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          name: (0, helpers_1.isSet)(object.name) ? String(object.name) : "",
          version: (0, helpers_1.isSet)(object.version) ? helpers_1.Long.fromValue(object.version) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.name !== void 0 && (obj.name = message.name);
        message.version !== void 0 && (obj.version = (message.version || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseModuleVersion();
        message.name = object.name ?? "";
        message.version = object.version !== void 0 && object.version !== null ? helpers_1.Long.fromValue(object.version) : helpers_1.Long.UZERO;
        return message;
      }
    };
  }
});

// node_modules/cosmjs-types/ibc/core/client/v1/client.js
var require_client = __commonJS({
  "node_modules/cosmjs-types/ibc/core/client/v1/client.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Params = exports.Height = exports.UpgradeProposal = exports.ClientUpdateProposal = exports.ClientConsensusStates = exports.ConsensusStateWithHeight = exports.IdentifiedClientState = exports.protobufPackage = void 0;
    var any_1 = require_any();
    var upgrade_1 = require_upgrade();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "ibc.core.client.v1";
    function createBaseIdentifiedClientState() {
      return {
        clientId: "",
        clientState: void 0
      };
    }
    exports.IdentifiedClientState = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.clientId !== "") {
          writer.uint32(10).string(message.clientId);
        }
        if (message.clientState !== void 0) {
          any_1.Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseIdentifiedClientState();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.clientId = reader.string();
              break;
            case 2:
              message.clientState = any_1.Any.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          clientId: (0, helpers_1.isSet)(object.clientId) ? String(object.clientId) : "",
          clientState: (0, helpers_1.isSet)(object.clientState) ? any_1.Any.fromJSON(object.clientState) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.clientId !== void 0 && (obj.clientId = message.clientId);
        message.clientState !== void 0 && (obj.clientState = message.clientState ? any_1.Any.toJSON(message.clientState) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseIdentifiedClientState();
        message.clientId = object.clientId ?? "";
        message.clientState = object.clientState !== void 0 && object.clientState !== null ? any_1.Any.fromPartial(object.clientState) : void 0;
        return message;
      }
    };
    function createBaseConsensusStateWithHeight() {
      return {
        height: void 0,
        consensusState: void 0
      };
    }
    exports.ConsensusStateWithHeight = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.height !== void 0) {
          exports.Height.encode(message.height, writer.uint32(10).fork()).ldelim();
        }
        if (message.consensusState !== void 0) {
          any_1.Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseConsensusStateWithHeight();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.height = exports.Height.decode(reader, reader.uint32());
              break;
            case 2:
              message.consensusState = any_1.Any.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          height: (0, helpers_1.isSet)(object.height) ? exports.Height.fromJSON(object.height) : void 0,
          consensusState: (0, helpers_1.isSet)(object.consensusState) ? any_1.Any.fromJSON(object.consensusState) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.height !== void 0 && (obj.height = message.height ? exports.Height.toJSON(message.height) : void 0);
        message.consensusState !== void 0 && (obj.consensusState = message.consensusState ? any_1.Any.toJSON(message.consensusState) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseConsensusStateWithHeight();
        message.height = object.height !== void 0 && object.height !== null ? exports.Height.fromPartial(object.height) : void 0;
        message.consensusState = object.consensusState !== void 0 && object.consensusState !== null ? any_1.Any.fromPartial(object.consensusState) : void 0;
        return message;
      }
    };
    function createBaseClientConsensusStates() {
      return {
        clientId: "",
        consensusStates: []
      };
    }
    exports.ClientConsensusStates = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.clientId !== "") {
          writer.uint32(10).string(message.clientId);
        }
        for (const v of message.consensusStates) {
          exports.ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseClientConsensusStates();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.clientId = reader.string();
              break;
            case 2:
              message.consensusStates.push(exports.ConsensusStateWithHeight.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          clientId: (0, helpers_1.isSet)(object.clientId) ? String(object.clientId) : "",
          consensusStates: Array.isArray(object == null ? void 0 : object.consensusStates) ? object.consensusStates.map((e) => exports.ConsensusStateWithHeight.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.clientId !== void 0 && (obj.clientId = message.clientId);
        if (message.consensusStates) {
          obj.consensusStates = message.consensusStates.map((e) => e ? exports.ConsensusStateWithHeight.toJSON(e) : void 0);
        } else {
          obj.consensusStates = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseClientConsensusStates();
        message.clientId = object.clientId ?? "";
        message.consensusStates = ((_a = object.consensusStates) == null ? void 0 : _a.map((e) => exports.ConsensusStateWithHeight.fromPartial(e))) || [];
        return message;
      }
    };
    function createBaseClientUpdateProposal() {
      return {
        title: "",
        description: "",
        subjectClientId: "",
        substituteClientId: ""
      };
    }
    exports.ClientUpdateProposal = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.title !== "") {
          writer.uint32(10).string(message.title);
        }
        if (message.description !== "") {
          writer.uint32(18).string(message.description);
        }
        if (message.subjectClientId !== "") {
          writer.uint32(26).string(message.subjectClientId);
        }
        if (message.substituteClientId !== "") {
          writer.uint32(34).string(message.substituteClientId);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseClientUpdateProposal();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.title = reader.string();
              break;
            case 2:
              message.description = reader.string();
              break;
            case 3:
              message.subjectClientId = reader.string();
              break;
            case 4:
              message.substituteClientId = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          title: (0, helpers_1.isSet)(object.title) ? String(object.title) : "",
          description: (0, helpers_1.isSet)(object.description) ? String(object.description) : "",
          subjectClientId: (0, helpers_1.isSet)(object.subjectClientId) ? String(object.subjectClientId) : "",
          substituteClientId: (0, helpers_1.isSet)(object.substituteClientId) ? String(object.substituteClientId) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.title !== void 0 && (obj.title = message.title);
        message.description !== void 0 && (obj.description = message.description);
        message.subjectClientId !== void 0 && (obj.subjectClientId = message.subjectClientId);
        message.substituteClientId !== void 0 && (obj.substituteClientId = message.substituteClientId);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseClientUpdateProposal();
        message.title = object.title ?? "";
        message.description = object.description ?? "";
        message.subjectClientId = object.subjectClientId ?? "";
        message.substituteClientId = object.substituteClientId ?? "";
        return message;
      }
    };
    function createBaseUpgradeProposal() {
      return {
        title: "",
        description: "",
        plan: void 0,
        upgradedClientState: void 0
      };
    }
    exports.UpgradeProposal = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.title !== "") {
          writer.uint32(10).string(message.title);
        }
        if (message.description !== "") {
          writer.uint32(18).string(message.description);
        }
        if (message.plan !== void 0) {
          upgrade_1.Plan.encode(message.plan, writer.uint32(26).fork()).ldelim();
        }
        if (message.upgradedClientState !== void 0) {
          any_1.Any.encode(message.upgradedClientState, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseUpgradeProposal();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.title = reader.string();
              break;
            case 2:
              message.description = reader.string();
              break;
            case 3:
              message.plan = upgrade_1.Plan.decode(reader, reader.uint32());
              break;
            case 4:
              message.upgradedClientState = any_1.Any.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          title: (0, helpers_1.isSet)(object.title) ? String(object.title) : "",
          description: (0, helpers_1.isSet)(object.description) ? String(object.description) : "",
          plan: (0, helpers_1.isSet)(object.plan) ? upgrade_1.Plan.fromJSON(object.plan) : void 0,
          upgradedClientState: (0, helpers_1.isSet)(object.upgradedClientState) ? any_1.Any.fromJSON(object.upgradedClientState) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.title !== void 0 && (obj.title = message.title);
        message.description !== void 0 && (obj.description = message.description);
        message.plan !== void 0 && (obj.plan = message.plan ? upgrade_1.Plan.toJSON(message.plan) : void 0);
        message.upgradedClientState !== void 0 && (obj.upgradedClientState = message.upgradedClientState ? any_1.Any.toJSON(message.upgradedClientState) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseUpgradeProposal();
        message.title = object.title ?? "";
        message.description = object.description ?? "";
        message.plan = object.plan !== void 0 && object.plan !== null ? upgrade_1.Plan.fromPartial(object.plan) : void 0;
        message.upgradedClientState = object.upgradedClientState !== void 0 && object.upgradedClientState !== null ? any_1.Any.fromPartial(object.upgradedClientState) : void 0;
        return message;
      }
    };
    function createBaseHeight() {
      return {
        revisionNumber: helpers_1.Long.UZERO,
        revisionHeight: helpers_1.Long.UZERO
      };
    }
    exports.Height = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.revisionNumber.isZero()) {
          writer.uint32(8).uint64(message.revisionNumber);
        }
        if (!message.revisionHeight.isZero()) {
          writer.uint32(16).uint64(message.revisionHeight);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseHeight();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.revisionNumber = reader.uint64();
              break;
            case 2:
              message.revisionHeight = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          revisionNumber: (0, helpers_1.isSet)(object.revisionNumber) ? helpers_1.Long.fromValue(object.revisionNumber) : helpers_1.Long.UZERO,
          revisionHeight: (0, helpers_1.isSet)(object.revisionHeight) ? helpers_1.Long.fromValue(object.revisionHeight) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.revisionNumber !== void 0 && (obj.revisionNumber = (message.revisionNumber || helpers_1.Long.UZERO).toString());
        message.revisionHeight !== void 0 && (obj.revisionHeight = (message.revisionHeight || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseHeight();
        message.revisionNumber = object.revisionNumber !== void 0 && object.revisionNumber !== null ? helpers_1.Long.fromValue(object.revisionNumber) : helpers_1.Long.UZERO;
        message.revisionHeight = object.revisionHeight !== void 0 && object.revisionHeight !== null ? helpers_1.Long.fromValue(object.revisionHeight) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseParams() {
      return {
        allowedClients: []
      };
    }
    exports.Params = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.allowedClients) {
          writer.uint32(10).string(v);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseParams();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.allowedClients.push(reader.string());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          allowedClients: Array.isArray(object == null ? void 0 : object.allowedClients) ? object.allowedClients.map((e) => String(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.allowedClients) {
          obj.allowedClients = message.allowedClients.map((e) => e);
        } else {
          obj.allowedClients = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseParams();
        message.allowedClients = ((_a = object.allowedClients) == null ? void 0 : _a.map((e) => e)) || [];
        return message;
      }
    };
  }
});

// node_modules/cosmjs-types/ibc/applications/transfer/v1/tx.js
var require_tx7 = __commonJS({
  "node_modules/cosmjs-types/ibc/applications/transfer/v1/tx.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MsgClientImpl = exports.MsgTransferResponse = exports.MsgTransfer = exports.protobufPackage = void 0;
    var coin_1 = require_coin();
    var client_1 = require_client();
    var helpers_1 = require_helpers();
    var _m0 = __importStar(require_minimal());
    exports.protobufPackage = "ibc.applications.transfer.v1";
    function createBaseMsgTransfer() {
      return {
        sourcePort: "",
        sourceChannel: "",
        token: void 0,
        sender: "",
        receiver: "",
        timeoutHeight: void 0,
        timeoutTimestamp: helpers_1.Long.UZERO,
        memo: ""
      };
    }
    exports.MsgTransfer = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.sourcePort !== "") {
          writer.uint32(10).string(message.sourcePort);
        }
        if (message.sourceChannel !== "") {
          writer.uint32(18).string(message.sourceChannel);
        }
        if (message.token !== void 0) {
          coin_1.Coin.encode(message.token, writer.uint32(26).fork()).ldelim();
        }
        if (message.sender !== "") {
          writer.uint32(34).string(message.sender);
        }
        if (message.receiver !== "") {
          writer.uint32(42).string(message.receiver);
        }
        if (message.timeoutHeight !== void 0) {
          client_1.Height.encode(message.timeoutHeight, writer.uint32(50).fork()).ldelim();
        }
        if (!message.timeoutTimestamp.isZero()) {
          writer.uint32(56).uint64(message.timeoutTimestamp);
        }
        if (message.memo !== "") {
          writer.uint32(66).string(message.memo);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgTransfer();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.sourcePort = reader.string();
              break;
            case 2:
              message.sourceChannel = reader.string();
              break;
            case 3:
              message.token = coin_1.Coin.decode(reader, reader.uint32());
              break;
            case 4:
              message.sender = reader.string();
              break;
            case 5:
              message.receiver = reader.string();
              break;
            case 6:
              message.timeoutHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            case 7:
              message.timeoutTimestamp = reader.uint64();
              break;
            case 8:
              message.memo = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          sourcePort: (0, helpers_1.isSet)(object.sourcePort) ? String(object.sourcePort) : "",
          sourceChannel: (0, helpers_1.isSet)(object.sourceChannel) ? String(object.sourceChannel) : "",
          token: (0, helpers_1.isSet)(object.token) ? coin_1.Coin.fromJSON(object.token) : void 0,
          sender: (0, helpers_1.isSet)(object.sender) ? String(object.sender) : "",
          receiver: (0, helpers_1.isSet)(object.receiver) ? String(object.receiver) : "",
          timeoutHeight: (0, helpers_1.isSet)(object.timeoutHeight) ? client_1.Height.fromJSON(object.timeoutHeight) : void 0,
          timeoutTimestamp: (0, helpers_1.isSet)(object.timeoutTimestamp) ? helpers_1.Long.fromValue(object.timeoutTimestamp) : helpers_1.Long.UZERO,
          memo: (0, helpers_1.isSet)(object.memo) ? String(object.memo) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.sourcePort !== void 0 && (obj.sourcePort = message.sourcePort);
        message.sourceChannel !== void 0 && (obj.sourceChannel = message.sourceChannel);
        message.token !== void 0 && (obj.token = message.token ? coin_1.Coin.toJSON(message.token) : void 0);
        message.sender !== void 0 && (obj.sender = message.sender);
        message.receiver !== void 0 && (obj.receiver = message.receiver);
        message.timeoutHeight !== void 0 && (obj.timeoutHeight = message.timeoutHeight ? client_1.Height.toJSON(message.timeoutHeight) : void 0);
        message.timeoutTimestamp !== void 0 && (obj.timeoutTimestamp = (message.timeoutTimestamp || helpers_1.Long.UZERO).toString());
        message.memo !== void 0 && (obj.memo = message.memo);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgTransfer();
        message.sourcePort = object.sourcePort ?? "";
        message.sourceChannel = object.sourceChannel ?? "";
        message.token = object.token !== void 0 && object.token !== null ? coin_1.Coin.fromPartial(object.token) : void 0;
        message.sender = object.sender ?? "";
        message.receiver = object.receiver ?? "";
        message.timeoutHeight = object.timeoutHeight !== void 0 && object.timeoutHeight !== null ? client_1.Height.fromPartial(object.timeoutHeight) : void 0;
        message.timeoutTimestamp = object.timeoutTimestamp !== void 0 && object.timeoutTimestamp !== null ? helpers_1.Long.fromValue(object.timeoutTimestamp) : helpers_1.Long.UZERO;
        message.memo = object.memo ?? "";
        return message;
      }
    };
    function createBaseMsgTransferResponse() {
      return {
        sequence: helpers_1.Long.UZERO
      };
    }
    exports.MsgTransferResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.sequence.isZero()) {
          writer.uint32(8).uint64(message.sequence);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgTransferResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.sequence = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          sequence: (0, helpers_1.isSet)(object.sequence) ? helpers_1.Long.fromValue(object.sequence) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.sequence !== void 0 && (obj.sequence = (message.sequence || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgTransferResponse();
        message.sequence = object.sequence !== void 0 && object.sequence !== null ? helpers_1.Long.fromValue(object.sequence) : helpers_1.Long.UZERO;
        return message;
      }
    };
    var MsgClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.Transfer = this.Transfer.bind(this);
      }
      Transfer(request) {
        const data = exports.MsgTransfer.encode(request).finish();
        const promise = this.rpc.request("ibc.applications.transfer.v1.Msg", "Transfer", data);
        return promise.then((data2) => exports.MsgTransferResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.MsgClientImpl = MsgClientImpl;
  }
});

// node_modules/@cosmjs/stargate/build/modules/ibc/aminomessages.js
var require_aminomessages8 = __commonJS({
  "node_modules/@cosmjs/stargate/build/modules/ibc/aminomessages.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createIbcAminoConverters = exports.isAminoMsgTransfer = void 0;
    var tx_1 = require_tx7();
    var long_1 = __importDefault(require_long());
    function isAminoMsgTransfer(msg) {
      return msg.type === "cosmos-sdk/MsgTransfer";
    }
    exports.isAminoMsgTransfer = isAminoMsgTransfer;
    function omitDefault(input) {
      if (typeof input === "string") {
        return input === "" ? void 0 : input;
      }
      if (typeof input === "number") {
        return input === 0 ? void 0 : input;
      }
      if (long_1.default.isLong(input)) {
        return input.isZero() ? void 0 : input;
      }
      throw new Error(`Got unsupported type '${typeof input}'`);
    }
    function createIbcAminoConverters() {
      return {
        "/ibc.applications.transfer.v1.MsgTransfer": {
          aminoType: "cosmos-sdk/MsgTransfer",
          toAmino: ({ sourcePort, sourceChannel, token, sender, receiver, timeoutHeight, timeoutTimestamp }) => {
            var _a, _b, _c;
            return {
              source_port: sourcePort,
              source_channel: sourceChannel,
              token,
              sender,
              receiver,
              timeout_height: timeoutHeight ? {
                revision_height: (_a = omitDefault(timeoutHeight.revisionHeight)) == null ? void 0 : _a.toString(),
                revision_number: (_b = omitDefault(timeoutHeight.revisionNumber)) == null ? void 0 : _b.toString()
              } : {},
              timeout_timestamp: (_c = omitDefault(timeoutTimestamp)) == null ? void 0 : _c.toString()
            };
          },
          fromAmino: ({ source_port, source_channel, token, sender, receiver, timeout_height, timeout_timestamp }) => tx_1.MsgTransfer.fromPartial({
            sourcePort: source_port,
            sourceChannel: source_channel,
            token,
            sender,
            receiver,
            timeoutHeight: timeout_height ? {
              revisionHeight: long_1.default.fromString(timeout_height.revision_height || "0", true),
              revisionNumber: long_1.default.fromString(timeout_height.revision_number || "0", true)
            } : void 0,
            timeoutTimestamp: long_1.default.fromString(timeout_timestamp || "0", true)
          })
        }
      };
    }
    exports.createIbcAminoConverters = createIbcAminoConverters;
  }
});

// node_modules/cosmjs-types/ibc/core/channel/v1/channel.js
var require_channel = __commonJS({
  "node_modules/cosmjs-types/ibc/core/channel/v1/channel.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Acknowledgement = exports.PacketId = exports.PacketState = exports.Packet = exports.Counterparty = exports.IdentifiedChannel = exports.Channel = exports.orderToJSON = exports.orderFromJSON = exports.Order = exports.stateToJSON = exports.stateFromJSON = exports.State = exports.protobufPackage = void 0;
    var client_1 = require_client();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "ibc.core.channel.v1";
    var State;
    (function(State2) {
      State2[State2["STATE_UNINITIALIZED_UNSPECIFIED"] = 0] = "STATE_UNINITIALIZED_UNSPECIFIED";
      State2[State2["STATE_INIT"] = 1] = "STATE_INIT";
      State2[State2["STATE_TRYOPEN"] = 2] = "STATE_TRYOPEN";
      State2[State2["STATE_OPEN"] = 3] = "STATE_OPEN";
      State2[State2["STATE_CLOSED"] = 4] = "STATE_CLOSED";
      State2[State2["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
    })(State = exports.State || (exports.State = {}));
    function stateFromJSON(object) {
      switch (object) {
        case 0:
        case "STATE_UNINITIALIZED_UNSPECIFIED":
          return State.STATE_UNINITIALIZED_UNSPECIFIED;
        case 1:
        case "STATE_INIT":
          return State.STATE_INIT;
        case 2:
        case "STATE_TRYOPEN":
          return State.STATE_TRYOPEN;
        case 3:
        case "STATE_OPEN":
          return State.STATE_OPEN;
        case 4:
        case "STATE_CLOSED":
          return State.STATE_CLOSED;
        case -1:
        case "UNRECOGNIZED":
        default:
          return State.UNRECOGNIZED;
      }
    }
    exports.stateFromJSON = stateFromJSON;
    function stateToJSON(object) {
      switch (object) {
        case State.STATE_UNINITIALIZED_UNSPECIFIED:
          return "STATE_UNINITIALIZED_UNSPECIFIED";
        case State.STATE_INIT:
          return "STATE_INIT";
        case State.STATE_TRYOPEN:
          return "STATE_TRYOPEN";
        case State.STATE_OPEN:
          return "STATE_OPEN";
        case State.STATE_CLOSED:
          return "STATE_CLOSED";
        case State.UNRECOGNIZED:
        default:
          return "UNRECOGNIZED";
      }
    }
    exports.stateToJSON = stateToJSON;
    var Order;
    (function(Order2) {
      Order2[Order2["ORDER_NONE_UNSPECIFIED"] = 0] = "ORDER_NONE_UNSPECIFIED";
      Order2[Order2["ORDER_UNORDERED"] = 1] = "ORDER_UNORDERED";
      Order2[Order2["ORDER_ORDERED"] = 2] = "ORDER_ORDERED";
      Order2[Order2["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
    })(Order = exports.Order || (exports.Order = {}));
    function orderFromJSON(object) {
      switch (object) {
        case 0:
        case "ORDER_NONE_UNSPECIFIED":
          return Order.ORDER_NONE_UNSPECIFIED;
        case 1:
        case "ORDER_UNORDERED":
          return Order.ORDER_UNORDERED;
        case 2:
        case "ORDER_ORDERED":
          return Order.ORDER_ORDERED;
        case -1:
        case "UNRECOGNIZED":
        default:
          return Order.UNRECOGNIZED;
      }
    }
    exports.orderFromJSON = orderFromJSON;
    function orderToJSON(object) {
      switch (object) {
        case Order.ORDER_NONE_UNSPECIFIED:
          return "ORDER_NONE_UNSPECIFIED";
        case Order.ORDER_UNORDERED:
          return "ORDER_UNORDERED";
        case Order.ORDER_ORDERED:
          return "ORDER_ORDERED";
        case Order.UNRECOGNIZED:
        default:
          return "UNRECOGNIZED";
      }
    }
    exports.orderToJSON = orderToJSON;
    function createBaseChannel() {
      return {
        state: 0,
        ordering: 0,
        counterparty: void 0,
        connectionHops: [],
        version: ""
      };
    }
    exports.Channel = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.state !== 0) {
          writer.uint32(8).int32(message.state);
        }
        if (message.ordering !== 0) {
          writer.uint32(16).int32(message.ordering);
        }
        if (message.counterparty !== void 0) {
          exports.Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();
        }
        for (const v of message.connectionHops) {
          writer.uint32(34).string(v);
        }
        if (message.version !== "") {
          writer.uint32(42).string(message.version);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseChannel();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.state = reader.int32();
              break;
            case 2:
              message.ordering = reader.int32();
              break;
            case 3:
              message.counterparty = exports.Counterparty.decode(reader, reader.uint32());
              break;
            case 4:
              message.connectionHops.push(reader.string());
              break;
            case 5:
              message.version = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          state: (0, helpers_1.isSet)(object.state) ? stateFromJSON(object.state) : 0,
          ordering: (0, helpers_1.isSet)(object.ordering) ? orderFromJSON(object.ordering) : 0,
          counterparty: (0, helpers_1.isSet)(object.counterparty) ? exports.Counterparty.fromJSON(object.counterparty) : void 0,
          connectionHops: Array.isArray(object == null ? void 0 : object.connectionHops) ? object.connectionHops.map((e) => String(e)) : [],
          version: (0, helpers_1.isSet)(object.version) ? String(object.version) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.state !== void 0 && (obj.state = stateToJSON(message.state));
        message.ordering !== void 0 && (obj.ordering = orderToJSON(message.ordering));
        message.counterparty !== void 0 && (obj.counterparty = message.counterparty ? exports.Counterparty.toJSON(message.counterparty) : void 0);
        if (message.connectionHops) {
          obj.connectionHops = message.connectionHops.map((e) => e);
        } else {
          obj.connectionHops = [];
        }
        message.version !== void 0 && (obj.version = message.version);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseChannel();
        message.state = object.state ?? 0;
        message.ordering = object.ordering ?? 0;
        message.counterparty = object.counterparty !== void 0 && object.counterparty !== null ? exports.Counterparty.fromPartial(object.counterparty) : void 0;
        message.connectionHops = ((_a = object.connectionHops) == null ? void 0 : _a.map((e) => e)) || [];
        message.version = object.version ?? "";
        return message;
      }
    };
    function createBaseIdentifiedChannel() {
      return {
        state: 0,
        ordering: 0,
        counterparty: void 0,
        connectionHops: [],
        version: "",
        portId: "",
        channelId: ""
      };
    }
    exports.IdentifiedChannel = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.state !== 0) {
          writer.uint32(8).int32(message.state);
        }
        if (message.ordering !== 0) {
          writer.uint32(16).int32(message.ordering);
        }
        if (message.counterparty !== void 0) {
          exports.Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();
        }
        for (const v of message.connectionHops) {
          writer.uint32(34).string(v);
        }
        if (message.version !== "") {
          writer.uint32(42).string(message.version);
        }
        if (message.portId !== "") {
          writer.uint32(50).string(message.portId);
        }
        if (message.channelId !== "") {
          writer.uint32(58).string(message.channelId);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseIdentifiedChannel();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.state = reader.int32();
              break;
            case 2:
              message.ordering = reader.int32();
              break;
            case 3:
              message.counterparty = exports.Counterparty.decode(reader, reader.uint32());
              break;
            case 4:
              message.connectionHops.push(reader.string());
              break;
            case 5:
              message.version = reader.string();
              break;
            case 6:
              message.portId = reader.string();
              break;
            case 7:
              message.channelId = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          state: (0, helpers_1.isSet)(object.state) ? stateFromJSON(object.state) : 0,
          ordering: (0, helpers_1.isSet)(object.ordering) ? orderFromJSON(object.ordering) : 0,
          counterparty: (0, helpers_1.isSet)(object.counterparty) ? exports.Counterparty.fromJSON(object.counterparty) : void 0,
          connectionHops: Array.isArray(object == null ? void 0 : object.connectionHops) ? object.connectionHops.map((e) => String(e)) : [],
          version: (0, helpers_1.isSet)(object.version) ? String(object.version) : "",
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          channelId: (0, helpers_1.isSet)(object.channelId) ? String(object.channelId) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.state !== void 0 && (obj.state = stateToJSON(message.state));
        message.ordering !== void 0 && (obj.ordering = orderToJSON(message.ordering));
        message.counterparty !== void 0 && (obj.counterparty = message.counterparty ? exports.Counterparty.toJSON(message.counterparty) : void 0);
        if (message.connectionHops) {
          obj.connectionHops = message.connectionHops.map((e) => e);
        } else {
          obj.connectionHops = [];
        }
        message.version !== void 0 && (obj.version = message.version);
        message.portId !== void 0 && (obj.portId = message.portId);
        message.channelId !== void 0 && (obj.channelId = message.channelId);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseIdentifiedChannel();
        message.state = object.state ?? 0;
        message.ordering = object.ordering ?? 0;
        message.counterparty = object.counterparty !== void 0 && object.counterparty !== null ? exports.Counterparty.fromPartial(object.counterparty) : void 0;
        message.connectionHops = ((_a = object.connectionHops) == null ? void 0 : _a.map((e) => e)) || [];
        message.version = object.version ?? "";
        message.portId = object.portId ?? "";
        message.channelId = object.channelId ?? "";
        return message;
      }
    };
    function createBaseCounterparty() {
      return {
        portId: "",
        channelId: ""
      };
    }
    exports.Counterparty = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.portId !== "") {
          writer.uint32(10).string(message.portId);
        }
        if (message.channelId !== "") {
          writer.uint32(18).string(message.channelId);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseCounterparty();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.portId = reader.string();
              break;
            case 2:
              message.channelId = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          channelId: (0, helpers_1.isSet)(object.channelId) ? String(object.channelId) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.portId !== void 0 && (obj.portId = message.portId);
        message.channelId !== void 0 && (obj.channelId = message.channelId);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseCounterparty();
        message.portId = object.portId ?? "";
        message.channelId = object.channelId ?? "";
        return message;
      }
    };
    function createBasePacket() {
      return {
        sequence: helpers_1.Long.UZERO,
        sourcePort: "",
        sourceChannel: "",
        destinationPort: "",
        destinationChannel: "",
        data: new Uint8Array(),
        timeoutHeight: void 0,
        timeoutTimestamp: helpers_1.Long.UZERO
      };
    }
    exports.Packet = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.sequence.isZero()) {
          writer.uint32(8).uint64(message.sequence);
        }
        if (message.sourcePort !== "") {
          writer.uint32(18).string(message.sourcePort);
        }
        if (message.sourceChannel !== "") {
          writer.uint32(26).string(message.sourceChannel);
        }
        if (message.destinationPort !== "") {
          writer.uint32(34).string(message.destinationPort);
        }
        if (message.destinationChannel !== "") {
          writer.uint32(42).string(message.destinationChannel);
        }
        if (message.data.length !== 0) {
          writer.uint32(50).bytes(message.data);
        }
        if (message.timeoutHeight !== void 0) {
          client_1.Height.encode(message.timeoutHeight, writer.uint32(58).fork()).ldelim();
        }
        if (!message.timeoutTimestamp.isZero()) {
          writer.uint32(64).uint64(message.timeoutTimestamp);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBasePacket();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.sequence = reader.uint64();
              break;
            case 2:
              message.sourcePort = reader.string();
              break;
            case 3:
              message.sourceChannel = reader.string();
              break;
            case 4:
              message.destinationPort = reader.string();
              break;
            case 5:
              message.destinationChannel = reader.string();
              break;
            case 6:
              message.data = reader.bytes();
              break;
            case 7:
              message.timeoutHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            case 8:
              message.timeoutTimestamp = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          sequence: (0, helpers_1.isSet)(object.sequence) ? helpers_1.Long.fromValue(object.sequence) : helpers_1.Long.UZERO,
          sourcePort: (0, helpers_1.isSet)(object.sourcePort) ? String(object.sourcePort) : "",
          sourceChannel: (0, helpers_1.isSet)(object.sourceChannel) ? String(object.sourceChannel) : "",
          destinationPort: (0, helpers_1.isSet)(object.destinationPort) ? String(object.destinationPort) : "",
          destinationChannel: (0, helpers_1.isSet)(object.destinationChannel) ? String(object.destinationChannel) : "",
          data: (0, helpers_1.isSet)(object.data) ? (0, helpers_1.bytesFromBase64)(object.data) : new Uint8Array(),
          timeoutHeight: (0, helpers_1.isSet)(object.timeoutHeight) ? client_1.Height.fromJSON(object.timeoutHeight) : void 0,
          timeoutTimestamp: (0, helpers_1.isSet)(object.timeoutTimestamp) ? helpers_1.Long.fromValue(object.timeoutTimestamp) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.sequence !== void 0 && (obj.sequence = (message.sequence || helpers_1.Long.UZERO).toString());
        message.sourcePort !== void 0 && (obj.sourcePort = message.sourcePort);
        message.sourceChannel !== void 0 && (obj.sourceChannel = message.sourceChannel);
        message.destinationPort !== void 0 && (obj.destinationPort = message.destinationPort);
        message.destinationChannel !== void 0 && (obj.destinationChannel = message.destinationChannel);
        message.data !== void 0 && (obj.data = (0, helpers_1.base64FromBytes)(message.data !== void 0 ? message.data : new Uint8Array()));
        message.timeoutHeight !== void 0 && (obj.timeoutHeight = message.timeoutHeight ? client_1.Height.toJSON(message.timeoutHeight) : void 0);
        message.timeoutTimestamp !== void 0 && (obj.timeoutTimestamp = (message.timeoutTimestamp || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBasePacket();
        message.sequence = object.sequence !== void 0 && object.sequence !== null ? helpers_1.Long.fromValue(object.sequence) : helpers_1.Long.UZERO;
        message.sourcePort = object.sourcePort ?? "";
        message.sourceChannel = object.sourceChannel ?? "";
        message.destinationPort = object.destinationPort ?? "";
        message.destinationChannel = object.destinationChannel ?? "";
        message.data = object.data ?? new Uint8Array();
        message.timeoutHeight = object.timeoutHeight !== void 0 && object.timeoutHeight !== null ? client_1.Height.fromPartial(object.timeoutHeight) : void 0;
        message.timeoutTimestamp = object.timeoutTimestamp !== void 0 && object.timeoutTimestamp !== null ? helpers_1.Long.fromValue(object.timeoutTimestamp) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBasePacketState() {
      return {
        portId: "",
        channelId: "",
        sequence: helpers_1.Long.UZERO,
        data: new Uint8Array()
      };
    }
    exports.PacketState = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.portId !== "") {
          writer.uint32(10).string(message.portId);
        }
        if (message.channelId !== "") {
          writer.uint32(18).string(message.channelId);
        }
        if (!message.sequence.isZero()) {
          writer.uint32(24).uint64(message.sequence);
        }
        if (message.data.length !== 0) {
          writer.uint32(34).bytes(message.data);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBasePacketState();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.portId = reader.string();
              break;
            case 2:
              message.channelId = reader.string();
              break;
            case 3:
              message.sequence = reader.uint64();
              break;
            case 4:
              message.data = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          channelId: (0, helpers_1.isSet)(object.channelId) ? String(object.channelId) : "",
          sequence: (0, helpers_1.isSet)(object.sequence) ? helpers_1.Long.fromValue(object.sequence) : helpers_1.Long.UZERO,
          data: (0, helpers_1.isSet)(object.data) ? (0, helpers_1.bytesFromBase64)(object.data) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.portId !== void 0 && (obj.portId = message.portId);
        message.channelId !== void 0 && (obj.channelId = message.channelId);
        message.sequence !== void 0 && (obj.sequence = (message.sequence || helpers_1.Long.UZERO).toString());
        message.data !== void 0 && (obj.data = (0, helpers_1.base64FromBytes)(message.data !== void 0 ? message.data : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBasePacketState();
        message.portId = object.portId ?? "";
        message.channelId = object.channelId ?? "";
        message.sequence = object.sequence !== void 0 && object.sequence !== null ? helpers_1.Long.fromValue(object.sequence) : helpers_1.Long.UZERO;
        message.data = object.data ?? new Uint8Array();
        return message;
      }
    };
    function createBasePacketId() {
      return {
        portId: "",
        channelId: "",
        sequence: helpers_1.Long.UZERO
      };
    }
    exports.PacketId = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.portId !== "") {
          writer.uint32(10).string(message.portId);
        }
        if (message.channelId !== "") {
          writer.uint32(18).string(message.channelId);
        }
        if (!message.sequence.isZero()) {
          writer.uint32(24).uint64(message.sequence);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBasePacketId();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.portId = reader.string();
              break;
            case 2:
              message.channelId = reader.string();
              break;
            case 3:
              message.sequence = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          channelId: (0, helpers_1.isSet)(object.channelId) ? String(object.channelId) : "",
          sequence: (0, helpers_1.isSet)(object.sequence) ? helpers_1.Long.fromValue(object.sequence) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.portId !== void 0 && (obj.portId = message.portId);
        message.channelId !== void 0 && (obj.channelId = message.channelId);
        message.sequence !== void 0 && (obj.sequence = (message.sequence || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBasePacketId();
        message.portId = object.portId ?? "";
        message.channelId = object.channelId ?? "";
        message.sequence = object.sequence !== void 0 && object.sequence !== null ? helpers_1.Long.fromValue(object.sequence) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseAcknowledgement() {
      return {
        result: void 0,
        error: void 0
      };
    }
    exports.Acknowledgement = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.result !== void 0) {
          writer.uint32(170).bytes(message.result);
        }
        if (message.error !== void 0) {
          writer.uint32(178).string(message.error);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseAcknowledgement();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 21:
              message.result = reader.bytes();
              break;
            case 22:
              message.error = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          result: (0, helpers_1.isSet)(object.result) ? (0, helpers_1.bytesFromBase64)(object.result) : void 0,
          error: (0, helpers_1.isSet)(object.error) ? String(object.error) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.result !== void 0 && (obj.result = message.result !== void 0 ? (0, helpers_1.base64FromBytes)(message.result) : void 0);
        message.error !== void 0 && (obj.error = message.error);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseAcknowledgement();
        message.result = object.result ?? void 0;
        message.error = object.error ?? void 0;
        return message;
      }
    };
  }
});

// node_modules/cosmjs-types/ibc/core/channel/v1/tx.js
var require_tx8 = __commonJS({
  "node_modules/cosmjs-types/ibc/core/channel/v1/tx.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MsgClientImpl = exports.MsgAcknowledgementResponse = exports.MsgAcknowledgement = exports.MsgTimeoutOnCloseResponse = exports.MsgTimeoutOnClose = exports.MsgTimeoutResponse = exports.MsgTimeout = exports.MsgRecvPacketResponse = exports.MsgRecvPacket = exports.MsgChannelCloseConfirmResponse = exports.MsgChannelCloseConfirm = exports.MsgChannelCloseInitResponse = exports.MsgChannelCloseInit = exports.MsgChannelOpenConfirmResponse = exports.MsgChannelOpenConfirm = exports.MsgChannelOpenAckResponse = exports.MsgChannelOpenAck = exports.MsgChannelOpenTryResponse = exports.MsgChannelOpenTry = exports.MsgChannelOpenInitResponse = exports.MsgChannelOpenInit = exports.responseResultTypeToJSON = exports.responseResultTypeFromJSON = exports.ResponseResultType = exports.protobufPackage = void 0;
    var channel_1 = require_channel();
    var client_1 = require_client();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "ibc.core.channel.v1";
    var ResponseResultType;
    (function(ResponseResultType2) {
      ResponseResultType2[ResponseResultType2["RESPONSE_RESULT_TYPE_UNSPECIFIED"] = 0] = "RESPONSE_RESULT_TYPE_UNSPECIFIED";
      ResponseResultType2[ResponseResultType2["RESPONSE_RESULT_TYPE_NOOP"] = 1] = "RESPONSE_RESULT_TYPE_NOOP";
      ResponseResultType2[ResponseResultType2["RESPONSE_RESULT_TYPE_SUCCESS"] = 2] = "RESPONSE_RESULT_TYPE_SUCCESS";
      ResponseResultType2[ResponseResultType2["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
    })(ResponseResultType = exports.ResponseResultType || (exports.ResponseResultType = {}));
    function responseResultTypeFromJSON(object) {
      switch (object) {
        case 0:
        case "RESPONSE_RESULT_TYPE_UNSPECIFIED":
          return ResponseResultType.RESPONSE_RESULT_TYPE_UNSPECIFIED;
        case 1:
        case "RESPONSE_RESULT_TYPE_NOOP":
          return ResponseResultType.RESPONSE_RESULT_TYPE_NOOP;
        case 2:
        case "RESPONSE_RESULT_TYPE_SUCCESS":
          return ResponseResultType.RESPONSE_RESULT_TYPE_SUCCESS;
        case -1:
        case "UNRECOGNIZED":
        default:
          return ResponseResultType.UNRECOGNIZED;
      }
    }
    exports.responseResultTypeFromJSON = responseResultTypeFromJSON;
    function responseResultTypeToJSON(object) {
      switch (object) {
        case ResponseResultType.RESPONSE_RESULT_TYPE_UNSPECIFIED:
          return "RESPONSE_RESULT_TYPE_UNSPECIFIED";
        case ResponseResultType.RESPONSE_RESULT_TYPE_NOOP:
          return "RESPONSE_RESULT_TYPE_NOOP";
        case ResponseResultType.RESPONSE_RESULT_TYPE_SUCCESS:
          return "RESPONSE_RESULT_TYPE_SUCCESS";
        case ResponseResultType.UNRECOGNIZED:
        default:
          return "UNRECOGNIZED";
      }
    }
    exports.responseResultTypeToJSON = responseResultTypeToJSON;
    function createBaseMsgChannelOpenInit() {
      return {
        portId: "",
        channel: void 0,
        signer: ""
      };
    }
    exports.MsgChannelOpenInit = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.portId !== "") {
          writer.uint32(10).string(message.portId);
        }
        if (message.channel !== void 0) {
          channel_1.Channel.encode(message.channel, writer.uint32(18).fork()).ldelim();
        }
        if (message.signer !== "") {
          writer.uint32(26).string(message.signer);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgChannelOpenInit();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.portId = reader.string();
              break;
            case 2:
              message.channel = channel_1.Channel.decode(reader, reader.uint32());
              break;
            case 3:
              message.signer = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          channel: (0, helpers_1.isSet)(object.channel) ? channel_1.Channel.fromJSON(object.channel) : void 0,
          signer: (0, helpers_1.isSet)(object.signer) ? String(object.signer) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.portId !== void 0 && (obj.portId = message.portId);
        message.channel !== void 0 && (obj.channel = message.channel ? channel_1.Channel.toJSON(message.channel) : void 0);
        message.signer !== void 0 && (obj.signer = message.signer);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgChannelOpenInit();
        message.portId = object.portId ?? "";
        message.channel = object.channel !== void 0 && object.channel !== null ? channel_1.Channel.fromPartial(object.channel) : void 0;
        message.signer = object.signer ?? "";
        return message;
      }
    };
    function createBaseMsgChannelOpenInitResponse() {
      return {
        channelId: "",
        version: ""
      };
    }
    exports.MsgChannelOpenInitResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.channelId !== "") {
          writer.uint32(10).string(message.channelId);
        }
        if (message.version !== "") {
          writer.uint32(18).string(message.version);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgChannelOpenInitResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.channelId = reader.string();
              break;
            case 2:
              message.version = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          channelId: (0, helpers_1.isSet)(object.channelId) ? String(object.channelId) : "",
          version: (0, helpers_1.isSet)(object.version) ? String(object.version) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.channelId !== void 0 && (obj.channelId = message.channelId);
        message.version !== void 0 && (obj.version = message.version);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgChannelOpenInitResponse();
        message.channelId = object.channelId ?? "";
        message.version = object.version ?? "";
        return message;
      }
    };
    function createBaseMsgChannelOpenTry() {
      return {
        portId: "",
        previousChannelId: "",
        channel: void 0,
        counterpartyVersion: "",
        proofInit: new Uint8Array(),
        proofHeight: void 0,
        signer: ""
      };
    }
    exports.MsgChannelOpenTry = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.portId !== "") {
          writer.uint32(10).string(message.portId);
        }
        if (message.previousChannelId !== "") {
          writer.uint32(18).string(message.previousChannelId);
        }
        if (message.channel !== void 0) {
          channel_1.Channel.encode(message.channel, writer.uint32(26).fork()).ldelim();
        }
        if (message.counterpartyVersion !== "") {
          writer.uint32(34).string(message.counterpartyVersion);
        }
        if (message.proofInit.length !== 0) {
          writer.uint32(42).bytes(message.proofInit);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();
        }
        if (message.signer !== "") {
          writer.uint32(58).string(message.signer);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgChannelOpenTry();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.portId = reader.string();
              break;
            case 2:
              message.previousChannelId = reader.string();
              break;
            case 3:
              message.channel = channel_1.Channel.decode(reader, reader.uint32());
              break;
            case 4:
              message.counterpartyVersion = reader.string();
              break;
            case 5:
              message.proofInit = reader.bytes();
              break;
            case 6:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            case 7:
              message.signer = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          previousChannelId: (0, helpers_1.isSet)(object.previousChannelId) ? String(object.previousChannelId) : "",
          channel: (0, helpers_1.isSet)(object.channel) ? channel_1.Channel.fromJSON(object.channel) : void 0,
          counterpartyVersion: (0, helpers_1.isSet)(object.counterpartyVersion) ? String(object.counterpartyVersion) : "",
          proofInit: (0, helpers_1.isSet)(object.proofInit) ? (0, helpers_1.bytesFromBase64)(object.proofInit) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0,
          signer: (0, helpers_1.isSet)(object.signer) ? String(object.signer) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.portId !== void 0 && (obj.portId = message.portId);
        message.previousChannelId !== void 0 && (obj.previousChannelId = message.previousChannelId);
        message.channel !== void 0 && (obj.channel = message.channel ? channel_1.Channel.toJSON(message.channel) : void 0);
        message.counterpartyVersion !== void 0 && (obj.counterpartyVersion = message.counterpartyVersion);
        message.proofInit !== void 0 && (obj.proofInit = (0, helpers_1.base64FromBytes)(message.proofInit !== void 0 ? message.proofInit : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        message.signer !== void 0 && (obj.signer = message.signer);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgChannelOpenTry();
        message.portId = object.portId ?? "";
        message.previousChannelId = object.previousChannelId ?? "";
        message.channel = object.channel !== void 0 && object.channel !== null ? channel_1.Channel.fromPartial(object.channel) : void 0;
        message.counterpartyVersion = object.counterpartyVersion ?? "";
        message.proofInit = object.proofInit ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        message.signer = object.signer ?? "";
        return message;
      }
    };
    function createBaseMsgChannelOpenTryResponse() {
      return {
        version: ""
      };
    }
    exports.MsgChannelOpenTryResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.version !== "") {
          writer.uint32(10).string(message.version);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgChannelOpenTryResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.version = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          version: (0, helpers_1.isSet)(object.version) ? String(object.version) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.version !== void 0 && (obj.version = message.version);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgChannelOpenTryResponse();
        message.version = object.version ?? "";
        return message;
      }
    };
    function createBaseMsgChannelOpenAck() {
      return {
        portId: "",
        channelId: "",
        counterpartyChannelId: "",
        counterpartyVersion: "",
        proofTry: new Uint8Array(),
        proofHeight: void 0,
        signer: ""
      };
    }
    exports.MsgChannelOpenAck = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.portId !== "") {
          writer.uint32(10).string(message.portId);
        }
        if (message.channelId !== "") {
          writer.uint32(18).string(message.channelId);
        }
        if (message.counterpartyChannelId !== "") {
          writer.uint32(26).string(message.counterpartyChannelId);
        }
        if (message.counterpartyVersion !== "") {
          writer.uint32(34).string(message.counterpartyVersion);
        }
        if (message.proofTry.length !== 0) {
          writer.uint32(42).bytes(message.proofTry);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();
        }
        if (message.signer !== "") {
          writer.uint32(58).string(message.signer);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgChannelOpenAck();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.portId = reader.string();
              break;
            case 2:
              message.channelId = reader.string();
              break;
            case 3:
              message.counterpartyChannelId = reader.string();
              break;
            case 4:
              message.counterpartyVersion = reader.string();
              break;
            case 5:
              message.proofTry = reader.bytes();
              break;
            case 6:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            case 7:
              message.signer = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          channelId: (0, helpers_1.isSet)(object.channelId) ? String(object.channelId) : "",
          counterpartyChannelId: (0, helpers_1.isSet)(object.counterpartyChannelId) ? String(object.counterpartyChannelId) : "",
          counterpartyVersion: (0, helpers_1.isSet)(object.counterpartyVersion) ? String(object.counterpartyVersion) : "",
          proofTry: (0, helpers_1.isSet)(object.proofTry) ? (0, helpers_1.bytesFromBase64)(object.proofTry) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0,
          signer: (0, helpers_1.isSet)(object.signer) ? String(object.signer) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.portId !== void 0 && (obj.portId = message.portId);
        message.channelId !== void 0 && (obj.channelId = message.channelId);
        message.counterpartyChannelId !== void 0 && (obj.counterpartyChannelId = message.counterpartyChannelId);
        message.counterpartyVersion !== void 0 && (obj.counterpartyVersion = message.counterpartyVersion);
        message.proofTry !== void 0 && (obj.proofTry = (0, helpers_1.base64FromBytes)(message.proofTry !== void 0 ? message.proofTry : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        message.signer !== void 0 && (obj.signer = message.signer);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgChannelOpenAck();
        message.portId = object.portId ?? "";
        message.channelId = object.channelId ?? "";
        message.counterpartyChannelId = object.counterpartyChannelId ?? "";
        message.counterpartyVersion = object.counterpartyVersion ?? "";
        message.proofTry = object.proofTry ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        message.signer = object.signer ?? "";
        return message;
      }
    };
    function createBaseMsgChannelOpenAckResponse() {
      return {};
    }
    exports.MsgChannelOpenAckResponse = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgChannelOpenAckResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseMsgChannelOpenAckResponse();
        return message;
      }
    };
    function createBaseMsgChannelOpenConfirm() {
      return {
        portId: "",
        channelId: "",
        proofAck: new Uint8Array(),
        proofHeight: void 0,
        signer: ""
      };
    }
    exports.MsgChannelOpenConfirm = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.portId !== "") {
          writer.uint32(10).string(message.portId);
        }
        if (message.channelId !== "") {
          writer.uint32(18).string(message.channelId);
        }
        if (message.proofAck.length !== 0) {
          writer.uint32(26).bytes(message.proofAck);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();
        }
        if (message.signer !== "") {
          writer.uint32(42).string(message.signer);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgChannelOpenConfirm();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.portId = reader.string();
              break;
            case 2:
              message.channelId = reader.string();
              break;
            case 3:
              message.proofAck = reader.bytes();
              break;
            case 4:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            case 5:
              message.signer = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          channelId: (0, helpers_1.isSet)(object.channelId) ? String(object.channelId) : "",
          proofAck: (0, helpers_1.isSet)(object.proofAck) ? (0, helpers_1.bytesFromBase64)(object.proofAck) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0,
          signer: (0, helpers_1.isSet)(object.signer) ? String(object.signer) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.portId !== void 0 && (obj.portId = message.portId);
        message.channelId !== void 0 && (obj.channelId = message.channelId);
        message.proofAck !== void 0 && (obj.proofAck = (0, helpers_1.base64FromBytes)(message.proofAck !== void 0 ? message.proofAck : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        message.signer !== void 0 && (obj.signer = message.signer);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgChannelOpenConfirm();
        message.portId = object.portId ?? "";
        message.channelId = object.channelId ?? "";
        message.proofAck = object.proofAck ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        message.signer = object.signer ?? "";
        return message;
      }
    };
    function createBaseMsgChannelOpenConfirmResponse() {
      return {};
    }
    exports.MsgChannelOpenConfirmResponse = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgChannelOpenConfirmResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseMsgChannelOpenConfirmResponse();
        return message;
      }
    };
    function createBaseMsgChannelCloseInit() {
      return {
        portId: "",
        channelId: "",
        signer: ""
      };
    }
    exports.MsgChannelCloseInit = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.portId !== "") {
          writer.uint32(10).string(message.portId);
        }
        if (message.channelId !== "") {
          writer.uint32(18).string(message.channelId);
        }
        if (message.signer !== "") {
          writer.uint32(26).string(message.signer);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgChannelCloseInit();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.portId = reader.string();
              break;
            case 2:
              message.channelId = reader.string();
              break;
            case 3:
              message.signer = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          channelId: (0, helpers_1.isSet)(object.channelId) ? String(object.channelId) : "",
          signer: (0, helpers_1.isSet)(object.signer) ? String(object.signer) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.portId !== void 0 && (obj.portId = message.portId);
        message.channelId !== void 0 && (obj.channelId = message.channelId);
        message.signer !== void 0 && (obj.signer = message.signer);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgChannelCloseInit();
        message.portId = object.portId ?? "";
        message.channelId = object.channelId ?? "";
        message.signer = object.signer ?? "";
        return message;
      }
    };
    function createBaseMsgChannelCloseInitResponse() {
      return {};
    }
    exports.MsgChannelCloseInitResponse = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgChannelCloseInitResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseMsgChannelCloseInitResponse();
        return message;
      }
    };
    function createBaseMsgChannelCloseConfirm() {
      return {
        portId: "",
        channelId: "",
        proofInit: new Uint8Array(),
        proofHeight: void 0,
        signer: ""
      };
    }
    exports.MsgChannelCloseConfirm = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.portId !== "") {
          writer.uint32(10).string(message.portId);
        }
        if (message.channelId !== "") {
          writer.uint32(18).string(message.channelId);
        }
        if (message.proofInit.length !== 0) {
          writer.uint32(26).bytes(message.proofInit);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();
        }
        if (message.signer !== "") {
          writer.uint32(42).string(message.signer);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgChannelCloseConfirm();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.portId = reader.string();
              break;
            case 2:
              message.channelId = reader.string();
              break;
            case 3:
              message.proofInit = reader.bytes();
              break;
            case 4:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            case 5:
              message.signer = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          channelId: (0, helpers_1.isSet)(object.channelId) ? String(object.channelId) : "",
          proofInit: (0, helpers_1.isSet)(object.proofInit) ? (0, helpers_1.bytesFromBase64)(object.proofInit) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0,
          signer: (0, helpers_1.isSet)(object.signer) ? String(object.signer) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.portId !== void 0 && (obj.portId = message.portId);
        message.channelId !== void 0 && (obj.channelId = message.channelId);
        message.proofInit !== void 0 && (obj.proofInit = (0, helpers_1.base64FromBytes)(message.proofInit !== void 0 ? message.proofInit : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        message.signer !== void 0 && (obj.signer = message.signer);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgChannelCloseConfirm();
        message.portId = object.portId ?? "";
        message.channelId = object.channelId ?? "";
        message.proofInit = object.proofInit ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        message.signer = object.signer ?? "";
        return message;
      }
    };
    function createBaseMsgChannelCloseConfirmResponse() {
      return {};
    }
    exports.MsgChannelCloseConfirmResponse = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgChannelCloseConfirmResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseMsgChannelCloseConfirmResponse();
        return message;
      }
    };
    function createBaseMsgRecvPacket() {
      return {
        packet: void 0,
        proofCommitment: new Uint8Array(),
        proofHeight: void 0,
        signer: ""
      };
    }
    exports.MsgRecvPacket = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.packet !== void 0) {
          channel_1.Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();
        }
        if (message.proofCommitment.length !== 0) {
          writer.uint32(18).bytes(message.proofCommitment);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();
        }
        if (message.signer !== "") {
          writer.uint32(34).string(message.signer);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgRecvPacket();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.packet = channel_1.Packet.decode(reader, reader.uint32());
              break;
            case 2:
              message.proofCommitment = reader.bytes();
              break;
            case 3:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            case 4:
              message.signer = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          packet: (0, helpers_1.isSet)(object.packet) ? channel_1.Packet.fromJSON(object.packet) : void 0,
          proofCommitment: (0, helpers_1.isSet)(object.proofCommitment) ? (0, helpers_1.bytesFromBase64)(object.proofCommitment) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0,
          signer: (0, helpers_1.isSet)(object.signer) ? String(object.signer) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.packet !== void 0 && (obj.packet = message.packet ? channel_1.Packet.toJSON(message.packet) : void 0);
        message.proofCommitment !== void 0 && (obj.proofCommitment = (0, helpers_1.base64FromBytes)(message.proofCommitment !== void 0 ? message.proofCommitment : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        message.signer !== void 0 && (obj.signer = message.signer);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgRecvPacket();
        message.packet = object.packet !== void 0 && object.packet !== null ? channel_1.Packet.fromPartial(object.packet) : void 0;
        message.proofCommitment = object.proofCommitment ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        message.signer = object.signer ?? "";
        return message;
      }
    };
    function createBaseMsgRecvPacketResponse() {
      return {
        result: 0
      };
    }
    exports.MsgRecvPacketResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.result !== 0) {
          writer.uint32(8).int32(message.result);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgRecvPacketResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.result = reader.int32();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          result: (0, helpers_1.isSet)(object.result) ? responseResultTypeFromJSON(object.result) : 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.result !== void 0 && (obj.result = responseResultTypeToJSON(message.result));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgRecvPacketResponse();
        message.result = object.result ?? 0;
        return message;
      }
    };
    function createBaseMsgTimeout() {
      return {
        packet: void 0,
        proofUnreceived: new Uint8Array(),
        proofHeight: void 0,
        nextSequenceRecv: helpers_1.Long.UZERO,
        signer: ""
      };
    }
    exports.MsgTimeout = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.packet !== void 0) {
          channel_1.Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();
        }
        if (message.proofUnreceived.length !== 0) {
          writer.uint32(18).bytes(message.proofUnreceived);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();
        }
        if (!message.nextSequenceRecv.isZero()) {
          writer.uint32(32).uint64(message.nextSequenceRecv);
        }
        if (message.signer !== "") {
          writer.uint32(42).string(message.signer);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgTimeout();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.packet = channel_1.Packet.decode(reader, reader.uint32());
              break;
            case 2:
              message.proofUnreceived = reader.bytes();
              break;
            case 3:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            case 4:
              message.nextSequenceRecv = reader.uint64();
              break;
            case 5:
              message.signer = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          packet: (0, helpers_1.isSet)(object.packet) ? channel_1.Packet.fromJSON(object.packet) : void 0,
          proofUnreceived: (0, helpers_1.isSet)(object.proofUnreceived) ? (0, helpers_1.bytesFromBase64)(object.proofUnreceived) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0,
          nextSequenceRecv: (0, helpers_1.isSet)(object.nextSequenceRecv) ? helpers_1.Long.fromValue(object.nextSequenceRecv) : helpers_1.Long.UZERO,
          signer: (0, helpers_1.isSet)(object.signer) ? String(object.signer) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.packet !== void 0 && (obj.packet = message.packet ? channel_1.Packet.toJSON(message.packet) : void 0);
        message.proofUnreceived !== void 0 && (obj.proofUnreceived = (0, helpers_1.base64FromBytes)(message.proofUnreceived !== void 0 ? message.proofUnreceived : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        message.nextSequenceRecv !== void 0 && (obj.nextSequenceRecv = (message.nextSequenceRecv || helpers_1.Long.UZERO).toString());
        message.signer !== void 0 && (obj.signer = message.signer);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgTimeout();
        message.packet = object.packet !== void 0 && object.packet !== null ? channel_1.Packet.fromPartial(object.packet) : void 0;
        message.proofUnreceived = object.proofUnreceived ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        message.nextSequenceRecv = object.nextSequenceRecv !== void 0 && object.nextSequenceRecv !== null ? helpers_1.Long.fromValue(object.nextSequenceRecv) : helpers_1.Long.UZERO;
        message.signer = object.signer ?? "";
        return message;
      }
    };
    function createBaseMsgTimeoutResponse() {
      return {
        result: 0
      };
    }
    exports.MsgTimeoutResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.result !== 0) {
          writer.uint32(8).int32(message.result);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgTimeoutResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.result = reader.int32();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          result: (0, helpers_1.isSet)(object.result) ? responseResultTypeFromJSON(object.result) : 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.result !== void 0 && (obj.result = responseResultTypeToJSON(message.result));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgTimeoutResponse();
        message.result = object.result ?? 0;
        return message;
      }
    };
    function createBaseMsgTimeoutOnClose() {
      return {
        packet: void 0,
        proofUnreceived: new Uint8Array(),
        proofClose: new Uint8Array(),
        proofHeight: void 0,
        nextSequenceRecv: helpers_1.Long.UZERO,
        signer: ""
      };
    }
    exports.MsgTimeoutOnClose = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.packet !== void 0) {
          channel_1.Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();
        }
        if (message.proofUnreceived.length !== 0) {
          writer.uint32(18).bytes(message.proofUnreceived);
        }
        if (message.proofClose.length !== 0) {
          writer.uint32(26).bytes(message.proofClose);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();
        }
        if (!message.nextSequenceRecv.isZero()) {
          writer.uint32(40).uint64(message.nextSequenceRecv);
        }
        if (message.signer !== "") {
          writer.uint32(50).string(message.signer);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgTimeoutOnClose();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.packet = channel_1.Packet.decode(reader, reader.uint32());
              break;
            case 2:
              message.proofUnreceived = reader.bytes();
              break;
            case 3:
              message.proofClose = reader.bytes();
              break;
            case 4:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            case 5:
              message.nextSequenceRecv = reader.uint64();
              break;
            case 6:
              message.signer = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          packet: (0, helpers_1.isSet)(object.packet) ? channel_1.Packet.fromJSON(object.packet) : void 0,
          proofUnreceived: (0, helpers_1.isSet)(object.proofUnreceived) ? (0, helpers_1.bytesFromBase64)(object.proofUnreceived) : new Uint8Array(),
          proofClose: (0, helpers_1.isSet)(object.proofClose) ? (0, helpers_1.bytesFromBase64)(object.proofClose) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0,
          nextSequenceRecv: (0, helpers_1.isSet)(object.nextSequenceRecv) ? helpers_1.Long.fromValue(object.nextSequenceRecv) : helpers_1.Long.UZERO,
          signer: (0, helpers_1.isSet)(object.signer) ? String(object.signer) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.packet !== void 0 && (obj.packet = message.packet ? channel_1.Packet.toJSON(message.packet) : void 0);
        message.proofUnreceived !== void 0 && (obj.proofUnreceived = (0, helpers_1.base64FromBytes)(message.proofUnreceived !== void 0 ? message.proofUnreceived : new Uint8Array()));
        message.proofClose !== void 0 && (obj.proofClose = (0, helpers_1.base64FromBytes)(message.proofClose !== void 0 ? message.proofClose : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        message.nextSequenceRecv !== void 0 && (obj.nextSequenceRecv = (message.nextSequenceRecv || helpers_1.Long.UZERO).toString());
        message.signer !== void 0 && (obj.signer = message.signer);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgTimeoutOnClose();
        message.packet = object.packet !== void 0 && object.packet !== null ? channel_1.Packet.fromPartial(object.packet) : void 0;
        message.proofUnreceived = object.proofUnreceived ?? new Uint8Array();
        message.proofClose = object.proofClose ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        message.nextSequenceRecv = object.nextSequenceRecv !== void 0 && object.nextSequenceRecv !== null ? helpers_1.Long.fromValue(object.nextSequenceRecv) : helpers_1.Long.UZERO;
        message.signer = object.signer ?? "";
        return message;
      }
    };
    function createBaseMsgTimeoutOnCloseResponse() {
      return {
        result: 0
      };
    }
    exports.MsgTimeoutOnCloseResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.result !== 0) {
          writer.uint32(8).int32(message.result);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgTimeoutOnCloseResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.result = reader.int32();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          result: (0, helpers_1.isSet)(object.result) ? responseResultTypeFromJSON(object.result) : 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.result !== void 0 && (obj.result = responseResultTypeToJSON(message.result));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgTimeoutOnCloseResponse();
        message.result = object.result ?? 0;
        return message;
      }
    };
    function createBaseMsgAcknowledgement() {
      return {
        packet: void 0,
        acknowledgement: new Uint8Array(),
        proofAcked: new Uint8Array(),
        proofHeight: void 0,
        signer: ""
      };
    }
    exports.MsgAcknowledgement = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.packet !== void 0) {
          channel_1.Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();
        }
        if (message.acknowledgement.length !== 0) {
          writer.uint32(18).bytes(message.acknowledgement);
        }
        if (message.proofAcked.length !== 0) {
          writer.uint32(26).bytes(message.proofAcked);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();
        }
        if (message.signer !== "") {
          writer.uint32(42).string(message.signer);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgAcknowledgement();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.packet = channel_1.Packet.decode(reader, reader.uint32());
              break;
            case 2:
              message.acknowledgement = reader.bytes();
              break;
            case 3:
              message.proofAcked = reader.bytes();
              break;
            case 4:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            case 5:
              message.signer = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          packet: (0, helpers_1.isSet)(object.packet) ? channel_1.Packet.fromJSON(object.packet) : void 0,
          acknowledgement: (0, helpers_1.isSet)(object.acknowledgement) ? (0, helpers_1.bytesFromBase64)(object.acknowledgement) : new Uint8Array(),
          proofAcked: (0, helpers_1.isSet)(object.proofAcked) ? (0, helpers_1.bytesFromBase64)(object.proofAcked) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0,
          signer: (0, helpers_1.isSet)(object.signer) ? String(object.signer) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.packet !== void 0 && (obj.packet = message.packet ? channel_1.Packet.toJSON(message.packet) : void 0);
        message.acknowledgement !== void 0 && (obj.acknowledgement = (0, helpers_1.base64FromBytes)(message.acknowledgement !== void 0 ? message.acknowledgement : new Uint8Array()));
        message.proofAcked !== void 0 && (obj.proofAcked = (0, helpers_1.base64FromBytes)(message.proofAcked !== void 0 ? message.proofAcked : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        message.signer !== void 0 && (obj.signer = message.signer);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgAcknowledgement();
        message.packet = object.packet !== void 0 && object.packet !== null ? channel_1.Packet.fromPartial(object.packet) : void 0;
        message.acknowledgement = object.acknowledgement ?? new Uint8Array();
        message.proofAcked = object.proofAcked ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        message.signer = object.signer ?? "";
        return message;
      }
    };
    function createBaseMsgAcknowledgementResponse() {
      return {
        result: 0
      };
    }
    exports.MsgAcknowledgementResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.result !== 0) {
          writer.uint32(8).int32(message.result);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgAcknowledgementResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.result = reader.int32();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          result: (0, helpers_1.isSet)(object.result) ? responseResultTypeFromJSON(object.result) : 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.result !== void 0 && (obj.result = responseResultTypeToJSON(message.result));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgAcknowledgementResponse();
        message.result = object.result ?? 0;
        return message;
      }
    };
    var MsgClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.ChannelOpenInit = this.ChannelOpenInit.bind(this);
        this.ChannelOpenTry = this.ChannelOpenTry.bind(this);
        this.ChannelOpenAck = this.ChannelOpenAck.bind(this);
        this.ChannelOpenConfirm = this.ChannelOpenConfirm.bind(this);
        this.ChannelCloseInit = this.ChannelCloseInit.bind(this);
        this.ChannelCloseConfirm = this.ChannelCloseConfirm.bind(this);
        this.RecvPacket = this.RecvPacket.bind(this);
        this.Timeout = this.Timeout.bind(this);
        this.TimeoutOnClose = this.TimeoutOnClose.bind(this);
        this.Acknowledgement = this.Acknowledgement.bind(this);
      }
      ChannelOpenInit(request) {
        const data = exports.MsgChannelOpenInit.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Msg", "ChannelOpenInit", data);
        return promise.then((data2) => exports.MsgChannelOpenInitResponse.decode(new _m0.Reader(data2)));
      }
      ChannelOpenTry(request) {
        const data = exports.MsgChannelOpenTry.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Msg", "ChannelOpenTry", data);
        return promise.then((data2) => exports.MsgChannelOpenTryResponse.decode(new _m0.Reader(data2)));
      }
      ChannelOpenAck(request) {
        const data = exports.MsgChannelOpenAck.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Msg", "ChannelOpenAck", data);
        return promise.then((data2) => exports.MsgChannelOpenAckResponse.decode(new _m0.Reader(data2)));
      }
      ChannelOpenConfirm(request) {
        const data = exports.MsgChannelOpenConfirm.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Msg", "ChannelOpenConfirm", data);
        return promise.then((data2) => exports.MsgChannelOpenConfirmResponse.decode(new _m0.Reader(data2)));
      }
      ChannelCloseInit(request) {
        const data = exports.MsgChannelCloseInit.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Msg", "ChannelCloseInit", data);
        return promise.then((data2) => exports.MsgChannelCloseInitResponse.decode(new _m0.Reader(data2)));
      }
      ChannelCloseConfirm(request) {
        const data = exports.MsgChannelCloseConfirm.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Msg", "ChannelCloseConfirm", data);
        return promise.then((data2) => exports.MsgChannelCloseConfirmResponse.decode(new _m0.Reader(data2)));
      }
      RecvPacket(request) {
        const data = exports.MsgRecvPacket.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Msg", "RecvPacket", data);
        return promise.then((data2) => exports.MsgRecvPacketResponse.decode(new _m0.Reader(data2)));
      }
      Timeout(request) {
        const data = exports.MsgTimeout.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Msg", "Timeout", data);
        return promise.then((data2) => exports.MsgTimeoutResponse.decode(new _m0.Reader(data2)));
      }
      TimeoutOnClose(request) {
        const data = exports.MsgTimeoutOnClose.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Msg", "TimeoutOnClose", data);
        return promise.then((data2) => exports.MsgTimeoutOnCloseResponse.decode(new _m0.Reader(data2)));
      }
      Acknowledgement(request) {
        const data = exports.MsgAcknowledgement.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Msg", "Acknowledgement", data);
        return promise.then((data2) => exports.MsgAcknowledgementResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.MsgClientImpl = MsgClientImpl;
  }
});

// node_modules/cosmjs-types/ibc/core/client/v1/tx.js
var require_tx9 = __commonJS({
  "node_modules/cosmjs-types/ibc/core/client/v1/tx.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MsgClientImpl = exports.MsgSubmitMisbehaviourResponse = exports.MsgSubmitMisbehaviour = exports.MsgUpgradeClientResponse = exports.MsgUpgradeClient = exports.MsgUpdateClientResponse = exports.MsgUpdateClient = exports.MsgCreateClientResponse = exports.MsgCreateClient = exports.protobufPackage = void 0;
    var any_1 = require_any();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "ibc.core.client.v1";
    function createBaseMsgCreateClient() {
      return {
        clientState: void 0,
        consensusState: void 0,
        signer: ""
      };
    }
    exports.MsgCreateClient = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.clientState !== void 0) {
          any_1.Any.encode(message.clientState, writer.uint32(10).fork()).ldelim();
        }
        if (message.consensusState !== void 0) {
          any_1.Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();
        }
        if (message.signer !== "") {
          writer.uint32(26).string(message.signer);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgCreateClient();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.clientState = any_1.Any.decode(reader, reader.uint32());
              break;
            case 2:
              message.consensusState = any_1.Any.decode(reader, reader.uint32());
              break;
            case 3:
              message.signer = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          clientState: (0, helpers_1.isSet)(object.clientState) ? any_1.Any.fromJSON(object.clientState) : void 0,
          consensusState: (0, helpers_1.isSet)(object.consensusState) ? any_1.Any.fromJSON(object.consensusState) : void 0,
          signer: (0, helpers_1.isSet)(object.signer) ? String(object.signer) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.clientState !== void 0 && (obj.clientState = message.clientState ? any_1.Any.toJSON(message.clientState) : void 0);
        message.consensusState !== void 0 && (obj.consensusState = message.consensusState ? any_1.Any.toJSON(message.consensusState) : void 0);
        message.signer !== void 0 && (obj.signer = message.signer);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgCreateClient();
        message.clientState = object.clientState !== void 0 && object.clientState !== null ? any_1.Any.fromPartial(object.clientState) : void 0;
        message.consensusState = object.consensusState !== void 0 && object.consensusState !== null ? any_1.Any.fromPartial(object.consensusState) : void 0;
        message.signer = object.signer ?? "";
        return message;
      }
    };
    function createBaseMsgCreateClientResponse() {
      return {};
    }
    exports.MsgCreateClientResponse = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgCreateClientResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseMsgCreateClientResponse();
        return message;
      }
    };
    function createBaseMsgUpdateClient() {
      return {
        clientId: "",
        header: void 0,
        signer: ""
      };
    }
    exports.MsgUpdateClient = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.clientId !== "") {
          writer.uint32(10).string(message.clientId);
        }
        if (message.header !== void 0) {
          any_1.Any.encode(message.header, writer.uint32(18).fork()).ldelim();
        }
        if (message.signer !== "") {
          writer.uint32(26).string(message.signer);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgUpdateClient();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.clientId = reader.string();
              break;
            case 2:
              message.header = any_1.Any.decode(reader, reader.uint32());
              break;
            case 3:
              message.signer = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          clientId: (0, helpers_1.isSet)(object.clientId) ? String(object.clientId) : "",
          header: (0, helpers_1.isSet)(object.header) ? any_1.Any.fromJSON(object.header) : void 0,
          signer: (0, helpers_1.isSet)(object.signer) ? String(object.signer) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.clientId !== void 0 && (obj.clientId = message.clientId);
        message.header !== void 0 && (obj.header = message.header ? any_1.Any.toJSON(message.header) : void 0);
        message.signer !== void 0 && (obj.signer = message.signer);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgUpdateClient();
        message.clientId = object.clientId ?? "";
        message.header = object.header !== void 0 && object.header !== null ? any_1.Any.fromPartial(object.header) : void 0;
        message.signer = object.signer ?? "";
        return message;
      }
    };
    function createBaseMsgUpdateClientResponse() {
      return {};
    }
    exports.MsgUpdateClientResponse = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgUpdateClientResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseMsgUpdateClientResponse();
        return message;
      }
    };
    function createBaseMsgUpgradeClient() {
      return {
        clientId: "",
        clientState: void 0,
        consensusState: void 0,
        proofUpgradeClient: new Uint8Array(),
        proofUpgradeConsensusState: new Uint8Array(),
        signer: ""
      };
    }
    exports.MsgUpgradeClient = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.clientId !== "") {
          writer.uint32(10).string(message.clientId);
        }
        if (message.clientState !== void 0) {
          any_1.Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();
        }
        if (message.consensusState !== void 0) {
          any_1.Any.encode(message.consensusState, writer.uint32(26).fork()).ldelim();
        }
        if (message.proofUpgradeClient.length !== 0) {
          writer.uint32(34).bytes(message.proofUpgradeClient);
        }
        if (message.proofUpgradeConsensusState.length !== 0) {
          writer.uint32(42).bytes(message.proofUpgradeConsensusState);
        }
        if (message.signer !== "") {
          writer.uint32(50).string(message.signer);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgUpgradeClient();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.clientId = reader.string();
              break;
            case 2:
              message.clientState = any_1.Any.decode(reader, reader.uint32());
              break;
            case 3:
              message.consensusState = any_1.Any.decode(reader, reader.uint32());
              break;
            case 4:
              message.proofUpgradeClient = reader.bytes();
              break;
            case 5:
              message.proofUpgradeConsensusState = reader.bytes();
              break;
            case 6:
              message.signer = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          clientId: (0, helpers_1.isSet)(object.clientId) ? String(object.clientId) : "",
          clientState: (0, helpers_1.isSet)(object.clientState) ? any_1.Any.fromJSON(object.clientState) : void 0,
          consensusState: (0, helpers_1.isSet)(object.consensusState) ? any_1.Any.fromJSON(object.consensusState) : void 0,
          proofUpgradeClient: (0, helpers_1.isSet)(object.proofUpgradeClient) ? (0, helpers_1.bytesFromBase64)(object.proofUpgradeClient) : new Uint8Array(),
          proofUpgradeConsensusState: (0, helpers_1.isSet)(object.proofUpgradeConsensusState) ? (0, helpers_1.bytesFromBase64)(object.proofUpgradeConsensusState) : new Uint8Array(),
          signer: (0, helpers_1.isSet)(object.signer) ? String(object.signer) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.clientId !== void 0 && (obj.clientId = message.clientId);
        message.clientState !== void 0 && (obj.clientState = message.clientState ? any_1.Any.toJSON(message.clientState) : void 0);
        message.consensusState !== void 0 && (obj.consensusState = message.consensusState ? any_1.Any.toJSON(message.consensusState) : void 0);
        message.proofUpgradeClient !== void 0 && (obj.proofUpgradeClient = (0, helpers_1.base64FromBytes)(message.proofUpgradeClient !== void 0 ? message.proofUpgradeClient : new Uint8Array()));
        message.proofUpgradeConsensusState !== void 0 && (obj.proofUpgradeConsensusState = (0, helpers_1.base64FromBytes)(message.proofUpgradeConsensusState !== void 0 ? message.proofUpgradeConsensusState : new Uint8Array()));
        message.signer !== void 0 && (obj.signer = message.signer);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgUpgradeClient();
        message.clientId = object.clientId ?? "";
        message.clientState = object.clientState !== void 0 && object.clientState !== null ? any_1.Any.fromPartial(object.clientState) : void 0;
        message.consensusState = object.consensusState !== void 0 && object.consensusState !== null ? any_1.Any.fromPartial(object.consensusState) : void 0;
        message.proofUpgradeClient = object.proofUpgradeClient ?? new Uint8Array();
        message.proofUpgradeConsensusState = object.proofUpgradeConsensusState ?? new Uint8Array();
        message.signer = object.signer ?? "";
        return message;
      }
    };
    function createBaseMsgUpgradeClientResponse() {
      return {};
    }
    exports.MsgUpgradeClientResponse = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgUpgradeClientResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseMsgUpgradeClientResponse();
        return message;
      }
    };
    function createBaseMsgSubmitMisbehaviour() {
      return {
        clientId: "",
        misbehaviour: void 0,
        signer: ""
      };
    }
    exports.MsgSubmitMisbehaviour = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.clientId !== "") {
          writer.uint32(10).string(message.clientId);
        }
        if (message.misbehaviour !== void 0) {
          any_1.Any.encode(message.misbehaviour, writer.uint32(18).fork()).ldelim();
        }
        if (message.signer !== "") {
          writer.uint32(26).string(message.signer);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgSubmitMisbehaviour();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.clientId = reader.string();
              break;
            case 2:
              message.misbehaviour = any_1.Any.decode(reader, reader.uint32());
              break;
            case 3:
              message.signer = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          clientId: (0, helpers_1.isSet)(object.clientId) ? String(object.clientId) : "",
          misbehaviour: (0, helpers_1.isSet)(object.misbehaviour) ? any_1.Any.fromJSON(object.misbehaviour) : void 0,
          signer: (0, helpers_1.isSet)(object.signer) ? String(object.signer) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.clientId !== void 0 && (obj.clientId = message.clientId);
        message.misbehaviour !== void 0 && (obj.misbehaviour = message.misbehaviour ? any_1.Any.toJSON(message.misbehaviour) : void 0);
        message.signer !== void 0 && (obj.signer = message.signer);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgSubmitMisbehaviour();
        message.clientId = object.clientId ?? "";
        message.misbehaviour = object.misbehaviour !== void 0 && object.misbehaviour !== null ? any_1.Any.fromPartial(object.misbehaviour) : void 0;
        message.signer = object.signer ?? "";
        return message;
      }
    };
    function createBaseMsgSubmitMisbehaviourResponse() {
      return {};
    }
    exports.MsgSubmitMisbehaviourResponse = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgSubmitMisbehaviourResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseMsgSubmitMisbehaviourResponse();
        return message;
      }
    };
    var MsgClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.CreateClient = this.CreateClient.bind(this);
        this.UpdateClient = this.UpdateClient.bind(this);
        this.UpgradeClient = this.UpgradeClient.bind(this);
        this.SubmitMisbehaviour = this.SubmitMisbehaviour.bind(this);
      }
      CreateClient(request) {
        const data = exports.MsgCreateClient.encode(request).finish();
        const promise = this.rpc.request("ibc.core.client.v1.Msg", "CreateClient", data);
        return promise.then((data2) => exports.MsgCreateClientResponse.decode(new _m0.Reader(data2)));
      }
      UpdateClient(request) {
        const data = exports.MsgUpdateClient.encode(request).finish();
        const promise = this.rpc.request("ibc.core.client.v1.Msg", "UpdateClient", data);
        return promise.then((data2) => exports.MsgUpdateClientResponse.decode(new _m0.Reader(data2)));
      }
      UpgradeClient(request) {
        const data = exports.MsgUpgradeClient.encode(request).finish();
        const promise = this.rpc.request("ibc.core.client.v1.Msg", "UpgradeClient", data);
        return promise.then((data2) => exports.MsgUpgradeClientResponse.decode(new _m0.Reader(data2)));
      }
      SubmitMisbehaviour(request) {
        const data = exports.MsgSubmitMisbehaviour.encode(request).finish();
        const promise = this.rpc.request("ibc.core.client.v1.Msg", "SubmitMisbehaviour", data);
        return promise.then((data2) => exports.MsgSubmitMisbehaviourResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.MsgClientImpl = MsgClientImpl;
  }
});

// node_modules/cosmjs-types/proofs.js
var require_proofs2 = __commonJS({
  "node_modules/cosmjs-types/proofs.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.CompressedNonExistenceProof = exports.CompressedExistenceProof = exports.CompressedBatchEntry = exports.CompressedBatchProof = exports.BatchEntry = exports.BatchProof = exports.InnerSpec = exports.ProofSpec = exports.InnerOp = exports.LeafOp = exports.CommitmentProof = exports.NonExistenceProof = exports.ExistenceProof = exports.lengthOpToJSON = exports.lengthOpFromJSON = exports.LengthOp = exports.hashOpToJSON = exports.hashOpFromJSON = exports.HashOp = exports.protobufPackage = void 0;
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "ics23";
    var HashOp;
    (function(HashOp2) {
      HashOp2[HashOp2["NO_HASH"] = 0] = "NO_HASH";
      HashOp2[HashOp2["SHA256"] = 1] = "SHA256";
      HashOp2[HashOp2["SHA512"] = 2] = "SHA512";
      HashOp2[HashOp2["KECCAK"] = 3] = "KECCAK";
      HashOp2[HashOp2["RIPEMD160"] = 4] = "RIPEMD160";
      HashOp2[HashOp2["BITCOIN"] = 5] = "BITCOIN";
      HashOp2[HashOp2["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
    })(HashOp = exports.HashOp || (exports.HashOp = {}));
    function hashOpFromJSON(object) {
      switch (object) {
        case 0:
        case "NO_HASH":
          return HashOp.NO_HASH;
        case 1:
        case "SHA256":
          return HashOp.SHA256;
        case 2:
        case "SHA512":
          return HashOp.SHA512;
        case 3:
        case "KECCAK":
          return HashOp.KECCAK;
        case 4:
        case "RIPEMD160":
          return HashOp.RIPEMD160;
        case 5:
        case "BITCOIN":
          return HashOp.BITCOIN;
        case -1:
        case "UNRECOGNIZED":
        default:
          return HashOp.UNRECOGNIZED;
      }
    }
    exports.hashOpFromJSON = hashOpFromJSON;
    function hashOpToJSON(object) {
      switch (object) {
        case HashOp.NO_HASH:
          return "NO_HASH";
        case HashOp.SHA256:
          return "SHA256";
        case HashOp.SHA512:
          return "SHA512";
        case HashOp.KECCAK:
          return "KECCAK";
        case HashOp.RIPEMD160:
          return "RIPEMD160";
        case HashOp.BITCOIN:
          return "BITCOIN";
        case HashOp.UNRECOGNIZED:
        default:
          return "UNRECOGNIZED";
      }
    }
    exports.hashOpToJSON = hashOpToJSON;
    var LengthOp;
    (function(LengthOp2) {
      LengthOp2[LengthOp2["NO_PREFIX"] = 0] = "NO_PREFIX";
      LengthOp2[LengthOp2["VAR_PROTO"] = 1] = "VAR_PROTO";
      LengthOp2[LengthOp2["VAR_RLP"] = 2] = "VAR_RLP";
      LengthOp2[LengthOp2["FIXED32_BIG"] = 3] = "FIXED32_BIG";
      LengthOp2[LengthOp2["FIXED32_LITTLE"] = 4] = "FIXED32_LITTLE";
      LengthOp2[LengthOp2["FIXED64_BIG"] = 5] = "FIXED64_BIG";
      LengthOp2[LengthOp2["FIXED64_LITTLE"] = 6] = "FIXED64_LITTLE";
      LengthOp2[LengthOp2["REQUIRE_32_BYTES"] = 7] = "REQUIRE_32_BYTES";
      LengthOp2[LengthOp2["REQUIRE_64_BYTES"] = 8] = "REQUIRE_64_BYTES";
      LengthOp2[LengthOp2["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
    })(LengthOp = exports.LengthOp || (exports.LengthOp = {}));
    function lengthOpFromJSON(object) {
      switch (object) {
        case 0:
        case "NO_PREFIX":
          return LengthOp.NO_PREFIX;
        case 1:
        case "VAR_PROTO":
          return LengthOp.VAR_PROTO;
        case 2:
        case "VAR_RLP":
          return LengthOp.VAR_RLP;
        case 3:
        case "FIXED32_BIG":
          return LengthOp.FIXED32_BIG;
        case 4:
        case "FIXED32_LITTLE":
          return LengthOp.FIXED32_LITTLE;
        case 5:
        case "FIXED64_BIG":
          return LengthOp.FIXED64_BIG;
        case 6:
        case "FIXED64_LITTLE":
          return LengthOp.FIXED64_LITTLE;
        case 7:
        case "REQUIRE_32_BYTES":
          return LengthOp.REQUIRE_32_BYTES;
        case 8:
        case "REQUIRE_64_BYTES":
          return LengthOp.REQUIRE_64_BYTES;
        case -1:
        case "UNRECOGNIZED":
        default:
          return LengthOp.UNRECOGNIZED;
      }
    }
    exports.lengthOpFromJSON = lengthOpFromJSON;
    function lengthOpToJSON(object) {
      switch (object) {
        case LengthOp.NO_PREFIX:
          return "NO_PREFIX";
        case LengthOp.VAR_PROTO:
          return "VAR_PROTO";
        case LengthOp.VAR_RLP:
          return "VAR_RLP";
        case LengthOp.FIXED32_BIG:
          return "FIXED32_BIG";
        case LengthOp.FIXED32_LITTLE:
          return "FIXED32_LITTLE";
        case LengthOp.FIXED64_BIG:
          return "FIXED64_BIG";
        case LengthOp.FIXED64_LITTLE:
          return "FIXED64_LITTLE";
        case LengthOp.REQUIRE_32_BYTES:
          return "REQUIRE_32_BYTES";
        case LengthOp.REQUIRE_64_BYTES:
          return "REQUIRE_64_BYTES";
        case LengthOp.UNRECOGNIZED:
        default:
          return "UNRECOGNIZED";
      }
    }
    exports.lengthOpToJSON = lengthOpToJSON;
    function createBaseExistenceProof() {
      return {
        key: new Uint8Array(),
        value: new Uint8Array(),
        leaf: void 0,
        path: []
      };
    }
    exports.ExistenceProof = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.key.length !== 0) {
          writer.uint32(10).bytes(message.key);
        }
        if (message.value.length !== 0) {
          writer.uint32(18).bytes(message.value);
        }
        if (message.leaf !== void 0) {
          exports.LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();
        }
        for (const v of message.path) {
          exports.InnerOp.encode(v, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseExistenceProof();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.key = reader.bytes();
              break;
            case 2:
              message.value = reader.bytes();
              break;
            case 3:
              message.leaf = exports.LeafOp.decode(reader, reader.uint32());
              break;
            case 4:
              message.path.push(exports.InnerOp.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          key: (0, helpers_1.isSet)(object.key) ? (0, helpers_1.bytesFromBase64)(object.key) : new Uint8Array(),
          value: (0, helpers_1.isSet)(object.value) ? (0, helpers_1.bytesFromBase64)(object.value) : new Uint8Array(),
          leaf: (0, helpers_1.isSet)(object.leaf) ? exports.LeafOp.fromJSON(object.leaf) : void 0,
          path: Array.isArray(object == null ? void 0 : object.path) ? object.path.map((e) => exports.InnerOp.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.key !== void 0 && (obj.key = (0, helpers_1.base64FromBytes)(message.key !== void 0 ? message.key : new Uint8Array()));
        message.value !== void 0 && (obj.value = (0, helpers_1.base64FromBytes)(message.value !== void 0 ? message.value : new Uint8Array()));
        message.leaf !== void 0 && (obj.leaf = message.leaf ? exports.LeafOp.toJSON(message.leaf) : void 0);
        if (message.path) {
          obj.path = message.path.map((e) => e ? exports.InnerOp.toJSON(e) : void 0);
        } else {
          obj.path = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseExistenceProof();
        message.key = object.key ?? new Uint8Array();
        message.value = object.value ?? new Uint8Array();
        message.leaf = object.leaf !== void 0 && object.leaf !== null ? exports.LeafOp.fromPartial(object.leaf) : void 0;
        message.path = ((_a = object.path) == null ? void 0 : _a.map((e) => exports.InnerOp.fromPartial(e))) || [];
        return message;
      }
    };
    function createBaseNonExistenceProof() {
      return {
        key: new Uint8Array(),
        left: void 0,
        right: void 0
      };
    }
    exports.NonExistenceProof = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.key.length !== 0) {
          writer.uint32(10).bytes(message.key);
        }
        if (message.left !== void 0) {
          exports.ExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();
        }
        if (message.right !== void 0) {
          exports.ExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseNonExistenceProof();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.key = reader.bytes();
              break;
            case 2:
              message.left = exports.ExistenceProof.decode(reader, reader.uint32());
              break;
            case 3:
              message.right = exports.ExistenceProof.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          key: (0, helpers_1.isSet)(object.key) ? (0, helpers_1.bytesFromBase64)(object.key) : new Uint8Array(),
          left: (0, helpers_1.isSet)(object.left) ? exports.ExistenceProof.fromJSON(object.left) : void 0,
          right: (0, helpers_1.isSet)(object.right) ? exports.ExistenceProof.fromJSON(object.right) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.key !== void 0 && (obj.key = (0, helpers_1.base64FromBytes)(message.key !== void 0 ? message.key : new Uint8Array()));
        message.left !== void 0 && (obj.left = message.left ? exports.ExistenceProof.toJSON(message.left) : void 0);
        message.right !== void 0 && (obj.right = message.right ? exports.ExistenceProof.toJSON(message.right) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseNonExistenceProof();
        message.key = object.key ?? new Uint8Array();
        message.left = object.left !== void 0 && object.left !== null ? exports.ExistenceProof.fromPartial(object.left) : void 0;
        message.right = object.right !== void 0 && object.right !== null ? exports.ExistenceProof.fromPartial(object.right) : void 0;
        return message;
      }
    };
    function createBaseCommitmentProof() {
      return {
        exist: void 0,
        nonexist: void 0,
        batch: void 0,
        compressed: void 0
      };
    }
    exports.CommitmentProof = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.exist !== void 0) {
          exports.ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();
        }
        if (message.nonexist !== void 0) {
          exports.NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();
        }
        if (message.batch !== void 0) {
          exports.BatchProof.encode(message.batch, writer.uint32(26).fork()).ldelim();
        }
        if (message.compressed !== void 0) {
          exports.CompressedBatchProof.encode(message.compressed, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseCommitmentProof();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.exist = exports.ExistenceProof.decode(reader, reader.uint32());
              break;
            case 2:
              message.nonexist = exports.NonExistenceProof.decode(reader, reader.uint32());
              break;
            case 3:
              message.batch = exports.BatchProof.decode(reader, reader.uint32());
              break;
            case 4:
              message.compressed = exports.CompressedBatchProof.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          exist: (0, helpers_1.isSet)(object.exist) ? exports.ExistenceProof.fromJSON(object.exist) : void 0,
          nonexist: (0, helpers_1.isSet)(object.nonexist) ? exports.NonExistenceProof.fromJSON(object.nonexist) : void 0,
          batch: (0, helpers_1.isSet)(object.batch) ? exports.BatchProof.fromJSON(object.batch) : void 0,
          compressed: (0, helpers_1.isSet)(object.compressed) ? exports.CompressedBatchProof.fromJSON(object.compressed) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.exist !== void 0 && (obj.exist = message.exist ? exports.ExistenceProof.toJSON(message.exist) : void 0);
        message.nonexist !== void 0 && (obj.nonexist = message.nonexist ? exports.NonExistenceProof.toJSON(message.nonexist) : void 0);
        message.batch !== void 0 && (obj.batch = message.batch ? exports.BatchProof.toJSON(message.batch) : void 0);
        message.compressed !== void 0 && (obj.compressed = message.compressed ? exports.CompressedBatchProof.toJSON(message.compressed) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseCommitmentProof();
        message.exist = object.exist !== void 0 && object.exist !== null ? exports.ExistenceProof.fromPartial(object.exist) : void 0;
        message.nonexist = object.nonexist !== void 0 && object.nonexist !== null ? exports.NonExistenceProof.fromPartial(object.nonexist) : void 0;
        message.batch = object.batch !== void 0 && object.batch !== null ? exports.BatchProof.fromPartial(object.batch) : void 0;
        message.compressed = object.compressed !== void 0 && object.compressed !== null ? exports.CompressedBatchProof.fromPartial(object.compressed) : void 0;
        return message;
      }
    };
    function createBaseLeafOp() {
      return {
        hash: 0,
        prehashKey: 0,
        prehashValue: 0,
        length: 0,
        prefix: new Uint8Array()
      };
    }
    exports.LeafOp = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.hash !== 0) {
          writer.uint32(8).int32(message.hash);
        }
        if (message.prehashKey !== 0) {
          writer.uint32(16).int32(message.prehashKey);
        }
        if (message.prehashValue !== 0) {
          writer.uint32(24).int32(message.prehashValue);
        }
        if (message.length !== 0) {
          writer.uint32(32).int32(message.length);
        }
        if (message.prefix.length !== 0) {
          writer.uint32(42).bytes(message.prefix);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseLeafOp();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.hash = reader.int32();
              break;
            case 2:
              message.prehashKey = reader.int32();
              break;
            case 3:
              message.prehashValue = reader.int32();
              break;
            case 4:
              message.length = reader.int32();
              break;
            case 5:
              message.prefix = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          hash: (0, helpers_1.isSet)(object.hash) ? hashOpFromJSON(object.hash) : 0,
          prehashKey: (0, helpers_1.isSet)(object.prehashKey) ? hashOpFromJSON(object.prehashKey) : 0,
          prehashValue: (0, helpers_1.isSet)(object.prehashValue) ? hashOpFromJSON(object.prehashValue) : 0,
          length: (0, helpers_1.isSet)(object.length) ? lengthOpFromJSON(object.length) : 0,
          prefix: (0, helpers_1.isSet)(object.prefix) ? (0, helpers_1.bytesFromBase64)(object.prefix) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.hash !== void 0 && (obj.hash = hashOpToJSON(message.hash));
        message.prehashKey !== void 0 && (obj.prehashKey = hashOpToJSON(message.prehashKey));
        message.prehashValue !== void 0 && (obj.prehashValue = hashOpToJSON(message.prehashValue));
        message.length !== void 0 && (obj.length = lengthOpToJSON(message.length));
        message.prefix !== void 0 && (obj.prefix = (0, helpers_1.base64FromBytes)(message.prefix !== void 0 ? message.prefix : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseLeafOp();
        message.hash = object.hash ?? 0;
        message.prehashKey = object.prehashKey ?? 0;
        message.prehashValue = object.prehashValue ?? 0;
        message.length = object.length ?? 0;
        message.prefix = object.prefix ?? new Uint8Array();
        return message;
      }
    };
    function createBaseInnerOp() {
      return {
        hash: 0,
        prefix: new Uint8Array(),
        suffix: new Uint8Array()
      };
    }
    exports.InnerOp = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.hash !== 0) {
          writer.uint32(8).int32(message.hash);
        }
        if (message.prefix.length !== 0) {
          writer.uint32(18).bytes(message.prefix);
        }
        if (message.suffix.length !== 0) {
          writer.uint32(26).bytes(message.suffix);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseInnerOp();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.hash = reader.int32();
              break;
            case 2:
              message.prefix = reader.bytes();
              break;
            case 3:
              message.suffix = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          hash: (0, helpers_1.isSet)(object.hash) ? hashOpFromJSON(object.hash) : 0,
          prefix: (0, helpers_1.isSet)(object.prefix) ? (0, helpers_1.bytesFromBase64)(object.prefix) : new Uint8Array(),
          suffix: (0, helpers_1.isSet)(object.suffix) ? (0, helpers_1.bytesFromBase64)(object.suffix) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.hash !== void 0 && (obj.hash = hashOpToJSON(message.hash));
        message.prefix !== void 0 && (obj.prefix = (0, helpers_1.base64FromBytes)(message.prefix !== void 0 ? message.prefix : new Uint8Array()));
        message.suffix !== void 0 && (obj.suffix = (0, helpers_1.base64FromBytes)(message.suffix !== void 0 ? message.suffix : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseInnerOp();
        message.hash = object.hash ?? 0;
        message.prefix = object.prefix ?? new Uint8Array();
        message.suffix = object.suffix ?? new Uint8Array();
        return message;
      }
    };
    function createBaseProofSpec() {
      return {
        leafSpec: void 0,
        innerSpec: void 0,
        maxDepth: 0,
        minDepth: 0
      };
    }
    exports.ProofSpec = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.leafSpec !== void 0) {
          exports.LeafOp.encode(message.leafSpec, writer.uint32(10).fork()).ldelim();
        }
        if (message.innerSpec !== void 0) {
          exports.InnerSpec.encode(message.innerSpec, writer.uint32(18).fork()).ldelim();
        }
        if (message.maxDepth !== 0) {
          writer.uint32(24).int32(message.maxDepth);
        }
        if (message.minDepth !== 0) {
          writer.uint32(32).int32(message.minDepth);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseProofSpec();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.leafSpec = exports.LeafOp.decode(reader, reader.uint32());
              break;
            case 2:
              message.innerSpec = exports.InnerSpec.decode(reader, reader.uint32());
              break;
            case 3:
              message.maxDepth = reader.int32();
              break;
            case 4:
              message.minDepth = reader.int32();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          leafSpec: (0, helpers_1.isSet)(object.leafSpec) ? exports.LeafOp.fromJSON(object.leafSpec) : void 0,
          innerSpec: (0, helpers_1.isSet)(object.innerSpec) ? exports.InnerSpec.fromJSON(object.innerSpec) : void 0,
          maxDepth: (0, helpers_1.isSet)(object.maxDepth) ? Number(object.maxDepth) : 0,
          minDepth: (0, helpers_1.isSet)(object.minDepth) ? Number(object.minDepth) : 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.leafSpec !== void 0 && (obj.leafSpec = message.leafSpec ? exports.LeafOp.toJSON(message.leafSpec) : void 0);
        message.innerSpec !== void 0 && (obj.innerSpec = message.innerSpec ? exports.InnerSpec.toJSON(message.innerSpec) : void 0);
        message.maxDepth !== void 0 && (obj.maxDepth = Math.round(message.maxDepth));
        message.minDepth !== void 0 && (obj.minDepth = Math.round(message.minDepth));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseProofSpec();
        message.leafSpec = object.leafSpec !== void 0 && object.leafSpec !== null ? exports.LeafOp.fromPartial(object.leafSpec) : void 0;
        message.innerSpec = object.innerSpec !== void 0 && object.innerSpec !== null ? exports.InnerSpec.fromPartial(object.innerSpec) : void 0;
        message.maxDepth = object.maxDepth ?? 0;
        message.minDepth = object.minDepth ?? 0;
        return message;
      }
    };
    function createBaseInnerSpec() {
      return {
        childOrder: [],
        childSize: 0,
        minPrefixLength: 0,
        maxPrefixLength: 0,
        emptyChild: new Uint8Array(),
        hash: 0
      };
    }
    exports.InnerSpec = {
      encode(message, writer = _m0.Writer.create()) {
        writer.uint32(10).fork();
        for (const v of message.childOrder) {
          writer.int32(v);
        }
        writer.ldelim();
        if (message.childSize !== 0) {
          writer.uint32(16).int32(message.childSize);
        }
        if (message.minPrefixLength !== 0) {
          writer.uint32(24).int32(message.minPrefixLength);
        }
        if (message.maxPrefixLength !== 0) {
          writer.uint32(32).int32(message.maxPrefixLength);
        }
        if (message.emptyChild.length !== 0) {
          writer.uint32(42).bytes(message.emptyChild);
        }
        if (message.hash !== 0) {
          writer.uint32(48).int32(message.hash);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseInnerSpec();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              if ((tag & 7) === 2) {
                const end2 = reader.uint32() + reader.pos;
                while (reader.pos < end2) {
                  message.childOrder.push(reader.int32());
                }
              } else {
                message.childOrder.push(reader.int32());
              }
              break;
            case 2:
              message.childSize = reader.int32();
              break;
            case 3:
              message.minPrefixLength = reader.int32();
              break;
            case 4:
              message.maxPrefixLength = reader.int32();
              break;
            case 5:
              message.emptyChild = reader.bytes();
              break;
            case 6:
              message.hash = reader.int32();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          childOrder: Array.isArray(object == null ? void 0 : object.childOrder) ? object.childOrder.map((e) => Number(e)) : [],
          childSize: (0, helpers_1.isSet)(object.childSize) ? Number(object.childSize) : 0,
          minPrefixLength: (0, helpers_1.isSet)(object.minPrefixLength) ? Number(object.minPrefixLength) : 0,
          maxPrefixLength: (0, helpers_1.isSet)(object.maxPrefixLength) ? Number(object.maxPrefixLength) : 0,
          emptyChild: (0, helpers_1.isSet)(object.emptyChild) ? (0, helpers_1.bytesFromBase64)(object.emptyChild) : new Uint8Array(),
          hash: (0, helpers_1.isSet)(object.hash) ? hashOpFromJSON(object.hash) : 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.childOrder) {
          obj.childOrder = message.childOrder.map((e) => Math.round(e));
        } else {
          obj.childOrder = [];
        }
        message.childSize !== void 0 && (obj.childSize = Math.round(message.childSize));
        message.minPrefixLength !== void 0 && (obj.minPrefixLength = Math.round(message.minPrefixLength));
        message.maxPrefixLength !== void 0 && (obj.maxPrefixLength = Math.round(message.maxPrefixLength));
        message.emptyChild !== void 0 && (obj.emptyChild = (0, helpers_1.base64FromBytes)(message.emptyChild !== void 0 ? message.emptyChild : new Uint8Array()));
        message.hash !== void 0 && (obj.hash = hashOpToJSON(message.hash));
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseInnerSpec();
        message.childOrder = ((_a = object.childOrder) == null ? void 0 : _a.map((e) => e)) || [];
        message.childSize = object.childSize ?? 0;
        message.minPrefixLength = object.minPrefixLength ?? 0;
        message.maxPrefixLength = object.maxPrefixLength ?? 0;
        message.emptyChild = object.emptyChild ?? new Uint8Array();
        message.hash = object.hash ?? 0;
        return message;
      }
    };
    function createBaseBatchProof() {
      return {
        entries: []
      };
    }
    exports.BatchProof = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.entries) {
          exports.BatchEntry.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseBatchProof();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.entries.push(exports.BatchEntry.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          entries: Array.isArray(object == null ? void 0 : object.entries) ? object.entries.map((e) => exports.BatchEntry.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.entries) {
          obj.entries = message.entries.map((e) => e ? exports.BatchEntry.toJSON(e) : void 0);
        } else {
          obj.entries = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseBatchProof();
        message.entries = ((_a = object.entries) == null ? void 0 : _a.map((e) => exports.BatchEntry.fromPartial(e))) || [];
        return message;
      }
    };
    function createBaseBatchEntry() {
      return {
        exist: void 0,
        nonexist: void 0
      };
    }
    exports.BatchEntry = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.exist !== void 0) {
          exports.ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();
        }
        if (message.nonexist !== void 0) {
          exports.NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseBatchEntry();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.exist = exports.ExistenceProof.decode(reader, reader.uint32());
              break;
            case 2:
              message.nonexist = exports.NonExistenceProof.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          exist: (0, helpers_1.isSet)(object.exist) ? exports.ExistenceProof.fromJSON(object.exist) : void 0,
          nonexist: (0, helpers_1.isSet)(object.nonexist) ? exports.NonExistenceProof.fromJSON(object.nonexist) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.exist !== void 0 && (obj.exist = message.exist ? exports.ExistenceProof.toJSON(message.exist) : void 0);
        message.nonexist !== void 0 && (obj.nonexist = message.nonexist ? exports.NonExistenceProof.toJSON(message.nonexist) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseBatchEntry();
        message.exist = object.exist !== void 0 && object.exist !== null ? exports.ExistenceProof.fromPartial(object.exist) : void 0;
        message.nonexist = object.nonexist !== void 0 && object.nonexist !== null ? exports.NonExistenceProof.fromPartial(object.nonexist) : void 0;
        return message;
      }
    };
    function createBaseCompressedBatchProof() {
      return {
        entries: [],
        lookupInners: []
      };
    }
    exports.CompressedBatchProof = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.entries) {
          exports.CompressedBatchEntry.encode(v, writer.uint32(10).fork()).ldelim();
        }
        for (const v of message.lookupInners) {
          exports.InnerOp.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseCompressedBatchProof();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.entries.push(exports.CompressedBatchEntry.decode(reader, reader.uint32()));
              break;
            case 2:
              message.lookupInners.push(exports.InnerOp.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          entries: Array.isArray(object == null ? void 0 : object.entries) ? object.entries.map((e) => exports.CompressedBatchEntry.fromJSON(e)) : [],
          lookupInners: Array.isArray(object == null ? void 0 : object.lookupInners) ? object.lookupInners.map((e) => exports.InnerOp.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.entries) {
          obj.entries = message.entries.map((e) => e ? exports.CompressedBatchEntry.toJSON(e) : void 0);
        } else {
          obj.entries = [];
        }
        if (message.lookupInners) {
          obj.lookupInners = message.lookupInners.map((e) => e ? exports.InnerOp.toJSON(e) : void 0);
        } else {
          obj.lookupInners = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a, _b;
        const message = createBaseCompressedBatchProof();
        message.entries = ((_a = object.entries) == null ? void 0 : _a.map((e) => exports.CompressedBatchEntry.fromPartial(e))) || [];
        message.lookupInners = ((_b = object.lookupInners) == null ? void 0 : _b.map((e) => exports.InnerOp.fromPartial(e))) || [];
        return message;
      }
    };
    function createBaseCompressedBatchEntry() {
      return {
        exist: void 0,
        nonexist: void 0
      };
    }
    exports.CompressedBatchEntry = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.exist !== void 0) {
          exports.CompressedExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();
        }
        if (message.nonexist !== void 0) {
          exports.CompressedNonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseCompressedBatchEntry();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.exist = exports.CompressedExistenceProof.decode(reader, reader.uint32());
              break;
            case 2:
              message.nonexist = exports.CompressedNonExistenceProof.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          exist: (0, helpers_1.isSet)(object.exist) ? exports.CompressedExistenceProof.fromJSON(object.exist) : void 0,
          nonexist: (0, helpers_1.isSet)(object.nonexist) ? exports.CompressedNonExistenceProof.fromJSON(object.nonexist) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.exist !== void 0 && (obj.exist = message.exist ? exports.CompressedExistenceProof.toJSON(message.exist) : void 0);
        message.nonexist !== void 0 && (obj.nonexist = message.nonexist ? exports.CompressedNonExistenceProof.toJSON(message.nonexist) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseCompressedBatchEntry();
        message.exist = object.exist !== void 0 && object.exist !== null ? exports.CompressedExistenceProof.fromPartial(object.exist) : void 0;
        message.nonexist = object.nonexist !== void 0 && object.nonexist !== null ? exports.CompressedNonExistenceProof.fromPartial(object.nonexist) : void 0;
        return message;
      }
    };
    function createBaseCompressedExistenceProof() {
      return {
        key: new Uint8Array(),
        value: new Uint8Array(),
        leaf: void 0,
        path: []
      };
    }
    exports.CompressedExistenceProof = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.key.length !== 0) {
          writer.uint32(10).bytes(message.key);
        }
        if (message.value.length !== 0) {
          writer.uint32(18).bytes(message.value);
        }
        if (message.leaf !== void 0) {
          exports.LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();
        }
        writer.uint32(34).fork();
        for (const v of message.path) {
          writer.int32(v);
        }
        writer.ldelim();
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseCompressedExistenceProof();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.key = reader.bytes();
              break;
            case 2:
              message.value = reader.bytes();
              break;
            case 3:
              message.leaf = exports.LeafOp.decode(reader, reader.uint32());
              break;
            case 4:
              if ((tag & 7) === 2) {
                const end2 = reader.uint32() + reader.pos;
                while (reader.pos < end2) {
                  message.path.push(reader.int32());
                }
              } else {
                message.path.push(reader.int32());
              }
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          key: (0, helpers_1.isSet)(object.key) ? (0, helpers_1.bytesFromBase64)(object.key) : new Uint8Array(),
          value: (0, helpers_1.isSet)(object.value) ? (0, helpers_1.bytesFromBase64)(object.value) : new Uint8Array(),
          leaf: (0, helpers_1.isSet)(object.leaf) ? exports.LeafOp.fromJSON(object.leaf) : void 0,
          path: Array.isArray(object == null ? void 0 : object.path) ? object.path.map((e) => Number(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.key !== void 0 && (obj.key = (0, helpers_1.base64FromBytes)(message.key !== void 0 ? message.key : new Uint8Array()));
        message.value !== void 0 && (obj.value = (0, helpers_1.base64FromBytes)(message.value !== void 0 ? message.value : new Uint8Array()));
        message.leaf !== void 0 && (obj.leaf = message.leaf ? exports.LeafOp.toJSON(message.leaf) : void 0);
        if (message.path) {
          obj.path = message.path.map((e) => Math.round(e));
        } else {
          obj.path = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseCompressedExistenceProof();
        message.key = object.key ?? new Uint8Array();
        message.value = object.value ?? new Uint8Array();
        message.leaf = object.leaf !== void 0 && object.leaf !== null ? exports.LeafOp.fromPartial(object.leaf) : void 0;
        message.path = ((_a = object.path) == null ? void 0 : _a.map((e) => e)) || [];
        return message;
      }
    };
    function createBaseCompressedNonExistenceProof() {
      return {
        key: new Uint8Array(),
        left: void 0,
        right: void 0
      };
    }
    exports.CompressedNonExistenceProof = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.key.length !== 0) {
          writer.uint32(10).bytes(message.key);
        }
        if (message.left !== void 0) {
          exports.CompressedExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();
        }
        if (message.right !== void 0) {
          exports.CompressedExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseCompressedNonExistenceProof();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.key = reader.bytes();
              break;
            case 2:
              message.left = exports.CompressedExistenceProof.decode(reader, reader.uint32());
              break;
            case 3:
              message.right = exports.CompressedExistenceProof.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          key: (0, helpers_1.isSet)(object.key) ? (0, helpers_1.bytesFromBase64)(object.key) : new Uint8Array(),
          left: (0, helpers_1.isSet)(object.left) ? exports.CompressedExistenceProof.fromJSON(object.left) : void 0,
          right: (0, helpers_1.isSet)(object.right) ? exports.CompressedExistenceProof.fromJSON(object.right) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.key !== void 0 && (obj.key = (0, helpers_1.base64FromBytes)(message.key !== void 0 ? message.key : new Uint8Array()));
        message.left !== void 0 && (obj.left = message.left ? exports.CompressedExistenceProof.toJSON(message.left) : void 0);
        message.right !== void 0 && (obj.right = message.right ? exports.CompressedExistenceProof.toJSON(message.right) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseCompressedNonExistenceProof();
        message.key = object.key ?? new Uint8Array();
        message.left = object.left !== void 0 && object.left !== null ? exports.CompressedExistenceProof.fromPartial(object.left) : void 0;
        message.right = object.right !== void 0 && object.right !== null ? exports.CompressedExistenceProof.fromPartial(object.right) : void 0;
        return message;
      }
    };
  }
});

// node_modules/cosmjs-types/ibc/core/commitment/v1/commitment.js
var require_commitment = __commonJS({
  "node_modules/cosmjs-types/ibc/core/commitment/v1/commitment.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MerkleProof = exports.MerklePath = exports.MerklePrefix = exports.MerkleRoot = exports.protobufPackage = void 0;
    var proofs_1 = require_proofs2();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "ibc.core.commitment.v1";
    function createBaseMerkleRoot() {
      return {
        hash: new Uint8Array()
      };
    }
    exports.MerkleRoot = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.hash.length !== 0) {
          writer.uint32(10).bytes(message.hash);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMerkleRoot();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.hash = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          hash: (0, helpers_1.isSet)(object.hash) ? (0, helpers_1.bytesFromBase64)(object.hash) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.hash !== void 0 && (obj.hash = (0, helpers_1.base64FromBytes)(message.hash !== void 0 ? message.hash : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMerkleRoot();
        message.hash = object.hash ?? new Uint8Array();
        return message;
      }
    };
    function createBaseMerklePrefix() {
      return {
        keyPrefix: new Uint8Array()
      };
    }
    exports.MerklePrefix = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.keyPrefix.length !== 0) {
          writer.uint32(10).bytes(message.keyPrefix);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMerklePrefix();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.keyPrefix = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          keyPrefix: (0, helpers_1.isSet)(object.keyPrefix) ? (0, helpers_1.bytesFromBase64)(object.keyPrefix) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.keyPrefix !== void 0 && (obj.keyPrefix = (0, helpers_1.base64FromBytes)(message.keyPrefix !== void 0 ? message.keyPrefix : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMerklePrefix();
        message.keyPrefix = object.keyPrefix ?? new Uint8Array();
        return message;
      }
    };
    function createBaseMerklePath() {
      return {
        keyPath: []
      };
    }
    exports.MerklePath = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.keyPath) {
          writer.uint32(10).string(v);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMerklePath();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.keyPath.push(reader.string());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          keyPath: Array.isArray(object == null ? void 0 : object.keyPath) ? object.keyPath.map((e) => String(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.keyPath) {
          obj.keyPath = message.keyPath.map((e) => e);
        } else {
          obj.keyPath = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseMerklePath();
        message.keyPath = ((_a = object.keyPath) == null ? void 0 : _a.map((e) => e)) || [];
        return message;
      }
    };
    function createBaseMerkleProof() {
      return {
        proofs: []
      };
    }
    exports.MerkleProof = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.proofs) {
          proofs_1.CommitmentProof.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMerkleProof();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.proofs.push(proofs_1.CommitmentProof.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          proofs: Array.isArray(object == null ? void 0 : object.proofs) ? object.proofs.map((e) => proofs_1.CommitmentProof.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.proofs) {
          obj.proofs = message.proofs.map((e) => e ? proofs_1.CommitmentProof.toJSON(e) : void 0);
        } else {
          obj.proofs = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseMerkleProof();
        message.proofs = ((_a = object.proofs) == null ? void 0 : _a.map((e) => proofs_1.CommitmentProof.fromPartial(e))) || [];
        return message;
      }
    };
  }
});

// node_modules/cosmjs-types/ibc/core/connection/v1/connection.js
var require_connection = __commonJS({
  "node_modules/cosmjs-types/ibc/core/connection/v1/connection.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Params = exports.Version = exports.ConnectionPaths = exports.ClientPaths = exports.Counterparty = exports.IdentifiedConnection = exports.ConnectionEnd = exports.stateToJSON = exports.stateFromJSON = exports.State = exports.protobufPackage = void 0;
    var commitment_1 = require_commitment();
    var helpers_1 = require_helpers();
    var _m0 = __importStar(require_minimal());
    exports.protobufPackage = "ibc.core.connection.v1";
    var State;
    (function(State2) {
      State2[State2["STATE_UNINITIALIZED_UNSPECIFIED"] = 0] = "STATE_UNINITIALIZED_UNSPECIFIED";
      State2[State2["STATE_INIT"] = 1] = "STATE_INIT";
      State2[State2["STATE_TRYOPEN"] = 2] = "STATE_TRYOPEN";
      State2[State2["STATE_OPEN"] = 3] = "STATE_OPEN";
      State2[State2["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
    })(State = exports.State || (exports.State = {}));
    function stateFromJSON(object) {
      switch (object) {
        case 0:
        case "STATE_UNINITIALIZED_UNSPECIFIED":
          return State.STATE_UNINITIALIZED_UNSPECIFIED;
        case 1:
        case "STATE_INIT":
          return State.STATE_INIT;
        case 2:
        case "STATE_TRYOPEN":
          return State.STATE_TRYOPEN;
        case 3:
        case "STATE_OPEN":
          return State.STATE_OPEN;
        case -1:
        case "UNRECOGNIZED":
        default:
          return State.UNRECOGNIZED;
      }
    }
    exports.stateFromJSON = stateFromJSON;
    function stateToJSON(object) {
      switch (object) {
        case State.STATE_UNINITIALIZED_UNSPECIFIED:
          return "STATE_UNINITIALIZED_UNSPECIFIED";
        case State.STATE_INIT:
          return "STATE_INIT";
        case State.STATE_TRYOPEN:
          return "STATE_TRYOPEN";
        case State.STATE_OPEN:
          return "STATE_OPEN";
        case State.UNRECOGNIZED:
        default:
          return "UNRECOGNIZED";
      }
    }
    exports.stateToJSON = stateToJSON;
    function createBaseConnectionEnd() {
      return {
        clientId: "",
        versions: [],
        state: 0,
        counterparty: void 0,
        delayPeriod: helpers_1.Long.UZERO
      };
    }
    exports.ConnectionEnd = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.clientId !== "") {
          writer.uint32(10).string(message.clientId);
        }
        for (const v of message.versions) {
          exports.Version.encode(v, writer.uint32(18).fork()).ldelim();
        }
        if (message.state !== 0) {
          writer.uint32(24).int32(message.state);
        }
        if (message.counterparty !== void 0) {
          exports.Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();
        }
        if (!message.delayPeriod.isZero()) {
          writer.uint32(40).uint64(message.delayPeriod);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseConnectionEnd();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.clientId = reader.string();
              break;
            case 2:
              message.versions.push(exports.Version.decode(reader, reader.uint32()));
              break;
            case 3:
              message.state = reader.int32();
              break;
            case 4:
              message.counterparty = exports.Counterparty.decode(reader, reader.uint32());
              break;
            case 5:
              message.delayPeriod = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          clientId: (0, helpers_1.isSet)(object.clientId) ? String(object.clientId) : "",
          versions: Array.isArray(object == null ? void 0 : object.versions) ? object.versions.map((e) => exports.Version.fromJSON(e)) : [],
          state: (0, helpers_1.isSet)(object.state) ? stateFromJSON(object.state) : 0,
          counterparty: (0, helpers_1.isSet)(object.counterparty) ? exports.Counterparty.fromJSON(object.counterparty) : void 0,
          delayPeriod: (0, helpers_1.isSet)(object.delayPeriod) ? helpers_1.Long.fromValue(object.delayPeriod) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.clientId !== void 0 && (obj.clientId = message.clientId);
        if (message.versions) {
          obj.versions = message.versions.map((e) => e ? exports.Version.toJSON(e) : void 0);
        } else {
          obj.versions = [];
        }
        message.state !== void 0 && (obj.state = stateToJSON(message.state));
        message.counterparty !== void 0 && (obj.counterparty = message.counterparty ? exports.Counterparty.toJSON(message.counterparty) : void 0);
        message.delayPeriod !== void 0 && (obj.delayPeriod = (message.delayPeriod || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseConnectionEnd();
        message.clientId = object.clientId ?? "";
        message.versions = ((_a = object.versions) == null ? void 0 : _a.map((e) => exports.Version.fromPartial(e))) || [];
        message.state = object.state ?? 0;
        message.counterparty = object.counterparty !== void 0 && object.counterparty !== null ? exports.Counterparty.fromPartial(object.counterparty) : void 0;
        message.delayPeriod = object.delayPeriod !== void 0 && object.delayPeriod !== null ? helpers_1.Long.fromValue(object.delayPeriod) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseIdentifiedConnection() {
      return {
        id: "",
        clientId: "",
        versions: [],
        state: 0,
        counterparty: void 0,
        delayPeriod: helpers_1.Long.UZERO
      };
    }
    exports.IdentifiedConnection = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.id !== "") {
          writer.uint32(10).string(message.id);
        }
        if (message.clientId !== "") {
          writer.uint32(18).string(message.clientId);
        }
        for (const v of message.versions) {
          exports.Version.encode(v, writer.uint32(26).fork()).ldelim();
        }
        if (message.state !== 0) {
          writer.uint32(32).int32(message.state);
        }
        if (message.counterparty !== void 0) {
          exports.Counterparty.encode(message.counterparty, writer.uint32(42).fork()).ldelim();
        }
        if (!message.delayPeriod.isZero()) {
          writer.uint32(48).uint64(message.delayPeriod);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseIdentifiedConnection();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.id = reader.string();
              break;
            case 2:
              message.clientId = reader.string();
              break;
            case 3:
              message.versions.push(exports.Version.decode(reader, reader.uint32()));
              break;
            case 4:
              message.state = reader.int32();
              break;
            case 5:
              message.counterparty = exports.Counterparty.decode(reader, reader.uint32());
              break;
            case 6:
              message.delayPeriod = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          id: (0, helpers_1.isSet)(object.id) ? String(object.id) : "",
          clientId: (0, helpers_1.isSet)(object.clientId) ? String(object.clientId) : "",
          versions: Array.isArray(object == null ? void 0 : object.versions) ? object.versions.map((e) => exports.Version.fromJSON(e)) : [],
          state: (0, helpers_1.isSet)(object.state) ? stateFromJSON(object.state) : 0,
          counterparty: (0, helpers_1.isSet)(object.counterparty) ? exports.Counterparty.fromJSON(object.counterparty) : void 0,
          delayPeriod: (0, helpers_1.isSet)(object.delayPeriod) ? helpers_1.Long.fromValue(object.delayPeriod) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.id !== void 0 && (obj.id = message.id);
        message.clientId !== void 0 && (obj.clientId = message.clientId);
        if (message.versions) {
          obj.versions = message.versions.map((e) => e ? exports.Version.toJSON(e) : void 0);
        } else {
          obj.versions = [];
        }
        message.state !== void 0 && (obj.state = stateToJSON(message.state));
        message.counterparty !== void 0 && (obj.counterparty = message.counterparty ? exports.Counterparty.toJSON(message.counterparty) : void 0);
        message.delayPeriod !== void 0 && (obj.delayPeriod = (message.delayPeriod || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseIdentifiedConnection();
        message.id = object.id ?? "";
        message.clientId = object.clientId ?? "";
        message.versions = ((_a = object.versions) == null ? void 0 : _a.map((e) => exports.Version.fromPartial(e))) || [];
        message.state = object.state ?? 0;
        message.counterparty = object.counterparty !== void 0 && object.counterparty !== null ? exports.Counterparty.fromPartial(object.counterparty) : void 0;
        message.delayPeriod = object.delayPeriod !== void 0 && object.delayPeriod !== null ? helpers_1.Long.fromValue(object.delayPeriod) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseCounterparty() {
      return {
        clientId: "",
        connectionId: "",
        prefix: void 0
      };
    }
    exports.Counterparty = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.clientId !== "") {
          writer.uint32(10).string(message.clientId);
        }
        if (message.connectionId !== "") {
          writer.uint32(18).string(message.connectionId);
        }
        if (message.prefix !== void 0) {
          commitment_1.MerklePrefix.encode(message.prefix, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseCounterparty();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.clientId = reader.string();
              break;
            case 2:
              message.connectionId = reader.string();
              break;
            case 3:
              message.prefix = commitment_1.MerklePrefix.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          clientId: (0, helpers_1.isSet)(object.clientId) ? String(object.clientId) : "",
          connectionId: (0, helpers_1.isSet)(object.connectionId) ? String(object.connectionId) : "",
          prefix: (0, helpers_1.isSet)(object.prefix) ? commitment_1.MerklePrefix.fromJSON(object.prefix) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.clientId !== void 0 && (obj.clientId = message.clientId);
        message.connectionId !== void 0 && (obj.connectionId = message.connectionId);
        message.prefix !== void 0 && (obj.prefix = message.prefix ? commitment_1.MerklePrefix.toJSON(message.prefix) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseCounterparty();
        message.clientId = object.clientId ?? "";
        message.connectionId = object.connectionId ?? "";
        message.prefix = object.prefix !== void 0 && object.prefix !== null ? commitment_1.MerklePrefix.fromPartial(object.prefix) : void 0;
        return message;
      }
    };
    function createBaseClientPaths() {
      return {
        paths: []
      };
    }
    exports.ClientPaths = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.paths) {
          writer.uint32(10).string(v);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseClientPaths();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.paths.push(reader.string());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          paths: Array.isArray(object == null ? void 0 : object.paths) ? object.paths.map((e) => String(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.paths) {
          obj.paths = message.paths.map((e) => e);
        } else {
          obj.paths = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseClientPaths();
        message.paths = ((_a = object.paths) == null ? void 0 : _a.map((e) => e)) || [];
        return message;
      }
    };
    function createBaseConnectionPaths() {
      return {
        clientId: "",
        paths: []
      };
    }
    exports.ConnectionPaths = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.clientId !== "") {
          writer.uint32(10).string(message.clientId);
        }
        for (const v of message.paths) {
          writer.uint32(18).string(v);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseConnectionPaths();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.clientId = reader.string();
              break;
            case 2:
              message.paths.push(reader.string());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          clientId: (0, helpers_1.isSet)(object.clientId) ? String(object.clientId) : "",
          paths: Array.isArray(object == null ? void 0 : object.paths) ? object.paths.map((e) => String(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.clientId !== void 0 && (obj.clientId = message.clientId);
        if (message.paths) {
          obj.paths = message.paths.map((e) => e);
        } else {
          obj.paths = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseConnectionPaths();
        message.clientId = object.clientId ?? "";
        message.paths = ((_a = object.paths) == null ? void 0 : _a.map((e) => e)) || [];
        return message;
      }
    };
    function createBaseVersion() {
      return {
        identifier: "",
        features: []
      };
    }
    exports.Version = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.identifier !== "") {
          writer.uint32(10).string(message.identifier);
        }
        for (const v of message.features) {
          writer.uint32(18).string(v);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseVersion();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.identifier = reader.string();
              break;
            case 2:
              message.features.push(reader.string());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          identifier: (0, helpers_1.isSet)(object.identifier) ? String(object.identifier) : "",
          features: Array.isArray(object == null ? void 0 : object.features) ? object.features.map((e) => String(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.identifier !== void 0 && (obj.identifier = message.identifier);
        if (message.features) {
          obj.features = message.features.map((e) => e);
        } else {
          obj.features = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseVersion();
        message.identifier = object.identifier ?? "";
        message.features = ((_a = object.features) == null ? void 0 : _a.map((e) => e)) || [];
        return message;
      }
    };
    function createBaseParams() {
      return {
        maxExpectedTimePerBlock: helpers_1.Long.UZERO
      };
    }
    exports.Params = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.maxExpectedTimePerBlock.isZero()) {
          writer.uint32(8).uint64(message.maxExpectedTimePerBlock);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseParams();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.maxExpectedTimePerBlock = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          maxExpectedTimePerBlock: (0, helpers_1.isSet)(object.maxExpectedTimePerBlock) ? helpers_1.Long.fromValue(object.maxExpectedTimePerBlock) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.maxExpectedTimePerBlock !== void 0 && (obj.maxExpectedTimePerBlock = (message.maxExpectedTimePerBlock || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseParams();
        message.maxExpectedTimePerBlock = object.maxExpectedTimePerBlock !== void 0 && object.maxExpectedTimePerBlock !== null ? helpers_1.Long.fromValue(object.maxExpectedTimePerBlock) : helpers_1.Long.UZERO;
        return message;
      }
    };
  }
});

// node_modules/cosmjs-types/ibc/core/connection/v1/tx.js
var require_tx10 = __commonJS({
  "node_modules/cosmjs-types/ibc/core/connection/v1/tx.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MsgClientImpl = exports.MsgConnectionOpenConfirmResponse = exports.MsgConnectionOpenConfirm = exports.MsgConnectionOpenAckResponse = exports.MsgConnectionOpenAck = exports.MsgConnectionOpenTryResponse = exports.MsgConnectionOpenTry = exports.MsgConnectionOpenInitResponse = exports.MsgConnectionOpenInit = exports.protobufPackage = void 0;
    var connection_1 = require_connection();
    var any_1 = require_any();
    var client_1 = require_client();
    var helpers_1 = require_helpers();
    var _m0 = __importStar(require_minimal());
    exports.protobufPackage = "ibc.core.connection.v1";
    function createBaseMsgConnectionOpenInit() {
      return {
        clientId: "",
        counterparty: void 0,
        version: void 0,
        delayPeriod: helpers_1.Long.UZERO,
        signer: ""
      };
    }
    exports.MsgConnectionOpenInit = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.clientId !== "") {
          writer.uint32(10).string(message.clientId);
        }
        if (message.counterparty !== void 0) {
          connection_1.Counterparty.encode(message.counterparty, writer.uint32(18).fork()).ldelim();
        }
        if (message.version !== void 0) {
          connection_1.Version.encode(message.version, writer.uint32(26).fork()).ldelim();
        }
        if (!message.delayPeriod.isZero()) {
          writer.uint32(32).uint64(message.delayPeriod);
        }
        if (message.signer !== "") {
          writer.uint32(42).string(message.signer);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgConnectionOpenInit();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.clientId = reader.string();
              break;
            case 2:
              message.counterparty = connection_1.Counterparty.decode(reader, reader.uint32());
              break;
            case 3:
              message.version = connection_1.Version.decode(reader, reader.uint32());
              break;
            case 4:
              message.delayPeriod = reader.uint64();
              break;
            case 5:
              message.signer = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          clientId: (0, helpers_1.isSet)(object.clientId) ? String(object.clientId) : "",
          counterparty: (0, helpers_1.isSet)(object.counterparty) ? connection_1.Counterparty.fromJSON(object.counterparty) : void 0,
          version: (0, helpers_1.isSet)(object.version) ? connection_1.Version.fromJSON(object.version) : void 0,
          delayPeriod: (0, helpers_1.isSet)(object.delayPeriod) ? helpers_1.Long.fromValue(object.delayPeriod) : helpers_1.Long.UZERO,
          signer: (0, helpers_1.isSet)(object.signer) ? String(object.signer) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.clientId !== void 0 && (obj.clientId = message.clientId);
        message.counterparty !== void 0 && (obj.counterparty = message.counterparty ? connection_1.Counterparty.toJSON(message.counterparty) : void 0);
        message.version !== void 0 && (obj.version = message.version ? connection_1.Version.toJSON(message.version) : void 0);
        message.delayPeriod !== void 0 && (obj.delayPeriod = (message.delayPeriod || helpers_1.Long.UZERO).toString());
        message.signer !== void 0 && (obj.signer = message.signer);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgConnectionOpenInit();
        message.clientId = object.clientId ?? "";
        message.counterparty = object.counterparty !== void 0 && object.counterparty !== null ? connection_1.Counterparty.fromPartial(object.counterparty) : void 0;
        message.version = object.version !== void 0 && object.version !== null ? connection_1.Version.fromPartial(object.version) : void 0;
        message.delayPeriod = object.delayPeriod !== void 0 && object.delayPeriod !== null ? helpers_1.Long.fromValue(object.delayPeriod) : helpers_1.Long.UZERO;
        message.signer = object.signer ?? "";
        return message;
      }
    };
    function createBaseMsgConnectionOpenInitResponse() {
      return {};
    }
    exports.MsgConnectionOpenInitResponse = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgConnectionOpenInitResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseMsgConnectionOpenInitResponse();
        return message;
      }
    };
    function createBaseMsgConnectionOpenTry() {
      return {
        clientId: "",
        previousConnectionId: "",
        clientState: void 0,
        counterparty: void 0,
        delayPeriod: helpers_1.Long.UZERO,
        counterpartyVersions: [],
        proofHeight: void 0,
        proofInit: new Uint8Array(),
        proofClient: new Uint8Array(),
        proofConsensus: new Uint8Array(),
        consensusHeight: void 0,
        signer: ""
      };
    }
    exports.MsgConnectionOpenTry = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.clientId !== "") {
          writer.uint32(10).string(message.clientId);
        }
        if (message.previousConnectionId !== "") {
          writer.uint32(18).string(message.previousConnectionId);
        }
        if (message.clientState !== void 0) {
          any_1.Any.encode(message.clientState, writer.uint32(26).fork()).ldelim();
        }
        if (message.counterparty !== void 0) {
          connection_1.Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();
        }
        if (!message.delayPeriod.isZero()) {
          writer.uint32(40).uint64(message.delayPeriod);
        }
        for (const v of message.counterpartyVersions) {
          connection_1.Version.encode(v, writer.uint32(50).fork()).ldelim();
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(58).fork()).ldelim();
        }
        if (message.proofInit.length !== 0) {
          writer.uint32(66).bytes(message.proofInit);
        }
        if (message.proofClient.length !== 0) {
          writer.uint32(74).bytes(message.proofClient);
        }
        if (message.proofConsensus.length !== 0) {
          writer.uint32(82).bytes(message.proofConsensus);
        }
        if (message.consensusHeight !== void 0) {
          client_1.Height.encode(message.consensusHeight, writer.uint32(90).fork()).ldelim();
        }
        if (message.signer !== "") {
          writer.uint32(98).string(message.signer);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgConnectionOpenTry();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.clientId = reader.string();
              break;
            case 2:
              message.previousConnectionId = reader.string();
              break;
            case 3:
              message.clientState = any_1.Any.decode(reader, reader.uint32());
              break;
            case 4:
              message.counterparty = connection_1.Counterparty.decode(reader, reader.uint32());
              break;
            case 5:
              message.delayPeriod = reader.uint64();
              break;
            case 6:
              message.counterpartyVersions.push(connection_1.Version.decode(reader, reader.uint32()));
              break;
            case 7:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            case 8:
              message.proofInit = reader.bytes();
              break;
            case 9:
              message.proofClient = reader.bytes();
              break;
            case 10:
              message.proofConsensus = reader.bytes();
              break;
            case 11:
              message.consensusHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            case 12:
              message.signer = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          clientId: (0, helpers_1.isSet)(object.clientId) ? String(object.clientId) : "",
          previousConnectionId: (0, helpers_1.isSet)(object.previousConnectionId) ? String(object.previousConnectionId) : "",
          clientState: (0, helpers_1.isSet)(object.clientState) ? any_1.Any.fromJSON(object.clientState) : void 0,
          counterparty: (0, helpers_1.isSet)(object.counterparty) ? connection_1.Counterparty.fromJSON(object.counterparty) : void 0,
          delayPeriod: (0, helpers_1.isSet)(object.delayPeriod) ? helpers_1.Long.fromValue(object.delayPeriod) : helpers_1.Long.UZERO,
          counterpartyVersions: Array.isArray(object == null ? void 0 : object.counterpartyVersions) ? object.counterpartyVersions.map((e) => connection_1.Version.fromJSON(e)) : [],
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0,
          proofInit: (0, helpers_1.isSet)(object.proofInit) ? (0, helpers_1.bytesFromBase64)(object.proofInit) : new Uint8Array(),
          proofClient: (0, helpers_1.isSet)(object.proofClient) ? (0, helpers_1.bytesFromBase64)(object.proofClient) : new Uint8Array(),
          proofConsensus: (0, helpers_1.isSet)(object.proofConsensus) ? (0, helpers_1.bytesFromBase64)(object.proofConsensus) : new Uint8Array(),
          consensusHeight: (0, helpers_1.isSet)(object.consensusHeight) ? client_1.Height.fromJSON(object.consensusHeight) : void 0,
          signer: (0, helpers_1.isSet)(object.signer) ? String(object.signer) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.clientId !== void 0 && (obj.clientId = message.clientId);
        message.previousConnectionId !== void 0 && (obj.previousConnectionId = message.previousConnectionId);
        message.clientState !== void 0 && (obj.clientState = message.clientState ? any_1.Any.toJSON(message.clientState) : void 0);
        message.counterparty !== void 0 && (obj.counterparty = message.counterparty ? connection_1.Counterparty.toJSON(message.counterparty) : void 0);
        message.delayPeriod !== void 0 && (obj.delayPeriod = (message.delayPeriod || helpers_1.Long.UZERO).toString());
        if (message.counterpartyVersions) {
          obj.counterpartyVersions = message.counterpartyVersions.map((e) => e ? connection_1.Version.toJSON(e) : void 0);
        } else {
          obj.counterpartyVersions = [];
        }
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        message.proofInit !== void 0 && (obj.proofInit = (0, helpers_1.base64FromBytes)(message.proofInit !== void 0 ? message.proofInit : new Uint8Array()));
        message.proofClient !== void 0 && (obj.proofClient = (0, helpers_1.base64FromBytes)(message.proofClient !== void 0 ? message.proofClient : new Uint8Array()));
        message.proofConsensus !== void 0 && (obj.proofConsensus = (0, helpers_1.base64FromBytes)(message.proofConsensus !== void 0 ? message.proofConsensus : new Uint8Array()));
        message.consensusHeight !== void 0 && (obj.consensusHeight = message.consensusHeight ? client_1.Height.toJSON(message.consensusHeight) : void 0);
        message.signer !== void 0 && (obj.signer = message.signer);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseMsgConnectionOpenTry();
        message.clientId = object.clientId ?? "";
        message.previousConnectionId = object.previousConnectionId ?? "";
        message.clientState = object.clientState !== void 0 && object.clientState !== null ? any_1.Any.fromPartial(object.clientState) : void 0;
        message.counterparty = object.counterparty !== void 0 && object.counterparty !== null ? connection_1.Counterparty.fromPartial(object.counterparty) : void 0;
        message.delayPeriod = object.delayPeriod !== void 0 && object.delayPeriod !== null ? helpers_1.Long.fromValue(object.delayPeriod) : helpers_1.Long.UZERO;
        message.counterpartyVersions = ((_a = object.counterpartyVersions) == null ? void 0 : _a.map((e) => connection_1.Version.fromPartial(e))) || [];
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        message.proofInit = object.proofInit ?? new Uint8Array();
        message.proofClient = object.proofClient ?? new Uint8Array();
        message.proofConsensus = object.proofConsensus ?? new Uint8Array();
        message.consensusHeight = object.consensusHeight !== void 0 && object.consensusHeight !== null ? client_1.Height.fromPartial(object.consensusHeight) : void 0;
        message.signer = object.signer ?? "";
        return message;
      }
    };
    function createBaseMsgConnectionOpenTryResponse() {
      return {};
    }
    exports.MsgConnectionOpenTryResponse = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgConnectionOpenTryResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseMsgConnectionOpenTryResponse();
        return message;
      }
    };
    function createBaseMsgConnectionOpenAck() {
      return {
        connectionId: "",
        counterpartyConnectionId: "",
        version: void 0,
        clientState: void 0,
        proofHeight: void 0,
        proofTry: new Uint8Array(),
        proofClient: new Uint8Array(),
        proofConsensus: new Uint8Array(),
        consensusHeight: void 0,
        signer: ""
      };
    }
    exports.MsgConnectionOpenAck = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.connectionId !== "") {
          writer.uint32(10).string(message.connectionId);
        }
        if (message.counterpartyConnectionId !== "") {
          writer.uint32(18).string(message.counterpartyConnectionId);
        }
        if (message.version !== void 0) {
          connection_1.Version.encode(message.version, writer.uint32(26).fork()).ldelim();
        }
        if (message.clientState !== void 0) {
          any_1.Any.encode(message.clientState, writer.uint32(34).fork()).ldelim();
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(42).fork()).ldelim();
        }
        if (message.proofTry.length !== 0) {
          writer.uint32(50).bytes(message.proofTry);
        }
        if (message.proofClient.length !== 0) {
          writer.uint32(58).bytes(message.proofClient);
        }
        if (message.proofConsensus.length !== 0) {
          writer.uint32(66).bytes(message.proofConsensus);
        }
        if (message.consensusHeight !== void 0) {
          client_1.Height.encode(message.consensusHeight, writer.uint32(74).fork()).ldelim();
        }
        if (message.signer !== "") {
          writer.uint32(82).string(message.signer);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgConnectionOpenAck();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.connectionId = reader.string();
              break;
            case 2:
              message.counterpartyConnectionId = reader.string();
              break;
            case 3:
              message.version = connection_1.Version.decode(reader, reader.uint32());
              break;
            case 4:
              message.clientState = any_1.Any.decode(reader, reader.uint32());
              break;
            case 5:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            case 6:
              message.proofTry = reader.bytes();
              break;
            case 7:
              message.proofClient = reader.bytes();
              break;
            case 8:
              message.proofConsensus = reader.bytes();
              break;
            case 9:
              message.consensusHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            case 10:
              message.signer = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          connectionId: (0, helpers_1.isSet)(object.connectionId) ? String(object.connectionId) : "",
          counterpartyConnectionId: (0, helpers_1.isSet)(object.counterpartyConnectionId) ? String(object.counterpartyConnectionId) : "",
          version: (0, helpers_1.isSet)(object.version) ? connection_1.Version.fromJSON(object.version) : void 0,
          clientState: (0, helpers_1.isSet)(object.clientState) ? any_1.Any.fromJSON(object.clientState) : void 0,
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0,
          proofTry: (0, helpers_1.isSet)(object.proofTry) ? (0, helpers_1.bytesFromBase64)(object.proofTry) : new Uint8Array(),
          proofClient: (0, helpers_1.isSet)(object.proofClient) ? (0, helpers_1.bytesFromBase64)(object.proofClient) : new Uint8Array(),
          proofConsensus: (0, helpers_1.isSet)(object.proofConsensus) ? (0, helpers_1.bytesFromBase64)(object.proofConsensus) : new Uint8Array(),
          consensusHeight: (0, helpers_1.isSet)(object.consensusHeight) ? client_1.Height.fromJSON(object.consensusHeight) : void 0,
          signer: (0, helpers_1.isSet)(object.signer) ? String(object.signer) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.connectionId !== void 0 && (obj.connectionId = message.connectionId);
        message.counterpartyConnectionId !== void 0 && (obj.counterpartyConnectionId = message.counterpartyConnectionId);
        message.version !== void 0 && (obj.version = message.version ? connection_1.Version.toJSON(message.version) : void 0);
        message.clientState !== void 0 && (obj.clientState = message.clientState ? any_1.Any.toJSON(message.clientState) : void 0);
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        message.proofTry !== void 0 && (obj.proofTry = (0, helpers_1.base64FromBytes)(message.proofTry !== void 0 ? message.proofTry : new Uint8Array()));
        message.proofClient !== void 0 && (obj.proofClient = (0, helpers_1.base64FromBytes)(message.proofClient !== void 0 ? message.proofClient : new Uint8Array()));
        message.proofConsensus !== void 0 && (obj.proofConsensus = (0, helpers_1.base64FromBytes)(message.proofConsensus !== void 0 ? message.proofConsensus : new Uint8Array()));
        message.consensusHeight !== void 0 && (obj.consensusHeight = message.consensusHeight ? client_1.Height.toJSON(message.consensusHeight) : void 0);
        message.signer !== void 0 && (obj.signer = message.signer);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgConnectionOpenAck();
        message.connectionId = object.connectionId ?? "";
        message.counterpartyConnectionId = object.counterpartyConnectionId ?? "";
        message.version = object.version !== void 0 && object.version !== null ? connection_1.Version.fromPartial(object.version) : void 0;
        message.clientState = object.clientState !== void 0 && object.clientState !== null ? any_1.Any.fromPartial(object.clientState) : void 0;
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        message.proofTry = object.proofTry ?? new Uint8Array();
        message.proofClient = object.proofClient ?? new Uint8Array();
        message.proofConsensus = object.proofConsensus ?? new Uint8Array();
        message.consensusHeight = object.consensusHeight !== void 0 && object.consensusHeight !== null ? client_1.Height.fromPartial(object.consensusHeight) : void 0;
        message.signer = object.signer ?? "";
        return message;
      }
    };
    function createBaseMsgConnectionOpenAckResponse() {
      return {};
    }
    exports.MsgConnectionOpenAckResponse = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgConnectionOpenAckResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseMsgConnectionOpenAckResponse();
        return message;
      }
    };
    function createBaseMsgConnectionOpenConfirm() {
      return {
        connectionId: "",
        proofAck: new Uint8Array(),
        proofHeight: void 0,
        signer: ""
      };
    }
    exports.MsgConnectionOpenConfirm = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.connectionId !== "") {
          writer.uint32(10).string(message.connectionId);
        }
        if (message.proofAck.length !== 0) {
          writer.uint32(18).bytes(message.proofAck);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();
        }
        if (message.signer !== "") {
          writer.uint32(34).string(message.signer);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgConnectionOpenConfirm();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.connectionId = reader.string();
              break;
            case 2:
              message.proofAck = reader.bytes();
              break;
            case 3:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            case 4:
              message.signer = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          connectionId: (0, helpers_1.isSet)(object.connectionId) ? String(object.connectionId) : "",
          proofAck: (0, helpers_1.isSet)(object.proofAck) ? (0, helpers_1.bytesFromBase64)(object.proofAck) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0,
          signer: (0, helpers_1.isSet)(object.signer) ? String(object.signer) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.connectionId !== void 0 && (obj.connectionId = message.connectionId);
        message.proofAck !== void 0 && (obj.proofAck = (0, helpers_1.base64FromBytes)(message.proofAck !== void 0 ? message.proofAck : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        message.signer !== void 0 && (obj.signer = message.signer);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgConnectionOpenConfirm();
        message.connectionId = object.connectionId ?? "";
        message.proofAck = object.proofAck ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        message.signer = object.signer ?? "";
        return message;
      }
    };
    function createBaseMsgConnectionOpenConfirmResponse() {
      return {};
    }
    exports.MsgConnectionOpenConfirmResponse = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgConnectionOpenConfirmResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseMsgConnectionOpenConfirmResponse();
        return message;
      }
    };
    var MsgClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.ConnectionOpenInit = this.ConnectionOpenInit.bind(this);
        this.ConnectionOpenTry = this.ConnectionOpenTry.bind(this);
        this.ConnectionOpenAck = this.ConnectionOpenAck.bind(this);
        this.ConnectionOpenConfirm = this.ConnectionOpenConfirm.bind(this);
      }
      ConnectionOpenInit(request) {
        const data = exports.MsgConnectionOpenInit.encode(request).finish();
        const promise = this.rpc.request("ibc.core.connection.v1.Msg", "ConnectionOpenInit", data);
        return promise.then((data2) => exports.MsgConnectionOpenInitResponse.decode(new _m0.Reader(data2)));
      }
      ConnectionOpenTry(request) {
        const data = exports.MsgConnectionOpenTry.encode(request).finish();
        const promise = this.rpc.request("ibc.core.connection.v1.Msg", "ConnectionOpenTry", data);
        return promise.then((data2) => exports.MsgConnectionOpenTryResponse.decode(new _m0.Reader(data2)));
      }
      ConnectionOpenAck(request) {
        const data = exports.MsgConnectionOpenAck.encode(request).finish();
        const promise = this.rpc.request("ibc.core.connection.v1.Msg", "ConnectionOpenAck", data);
        return promise.then((data2) => exports.MsgConnectionOpenAckResponse.decode(new _m0.Reader(data2)));
      }
      ConnectionOpenConfirm(request) {
        const data = exports.MsgConnectionOpenConfirm.encode(request).finish();
        const promise = this.rpc.request("ibc.core.connection.v1.Msg", "ConnectionOpenConfirm", data);
        return promise.then((data2) => exports.MsgConnectionOpenConfirmResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.MsgClientImpl = MsgClientImpl;
  }
});

// node_modules/@cosmjs/stargate/build/modules/ibc/messages.js
var require_messages6 = __commonJS({
  "node_modules/@cosmjs/stargate/build/modules/ibc/messages.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isMsgTransferEncodeObject = exports.ibcTypes = void 0;
    var tx_1 = require_tx7();
    var tx_2 = require_tx8();
    var tx_3 = require_tx9();
    var tx_4 = require_tx10();
    exports.ibcTypes = [
      ["/ibc.applications.transfer.v1.MsgTransfer", tx_1.MsgTransfer],
      ["/ibc.core.channel.v1.MsgAcknowledgement", tx_2.MsgAcknowledgement],
      ["/ibc.core.channel.v1.MsgChannelCloseConfirm", tx_2.MsgChannelCloseConfirm],
      ["/ibc.core.channel.v1.MsgChannelCloseInit", tx_2.MsgChannelCloseInit],
      ["/ibc.core.channel.v1.MsgChannelOpenAck", tx_2.MsgChannelOpenAck],
      ["/ibc.core.channel.v1.MsgChannelOpenConfirm", tx_2.MsgChannelOpenConfirm],
      ["/ibc.core.channel.v1.MsgChannelOpenInit", tx_2.MsgChannelOpenInit],
      ["/ibc.core.channel.v1.MsgChannelOpenTry", tx_2.MsgChannelOpenTry],
      ["/ibc.core.channel.v1.MsgRecvPacket", tx_2.MsgRecvPacket],
      ["/ibc.core.channel.v1.MsgTimeout", tx_2.MsgTimeout],
      ["/ibc.core.channel.v1.MsgTimeoutOnClose", tx_2.MsgTimeoutOnClose],
      ["/ibc.core.client.v1.MsgCreateClient", tx_3.MsgCreateClient],
      ["/ibc.core.client.v1.MsgSubmitMisbehaviour", tx_3.MsgSubmitMisbehaviour],
      ["/ibc.core.client.v1.MsgUpdateClient", tx_3.MsgUpdateClient],
      ["/ibc.core.client.v1.MsgUpgradeClient", tx_3.MsgUpgradeClient],
      ["/ibc.core.connection.v1.MsgConnectionOpenAck", tx_4.MsgConnectionOpenAck],
      ["/ibc.core.connection.v1.MsgConnectionOpenConfirm", tx_4.MsgConnectionOpenConfirm],
      ["/ibc.core.connection.v1.MsgConnectionOpenInit", tx_4.MsgConnectionOpenInit],
      ["/ibc.core.connection.v1.MsgConnectionOpenTry", tx_4.MsgConnectionOpenTry]
    ];
    function isMsgTransferEncodeObject(object) {
      return object.typeUrl === "/ibc.applications.transfer.v1.MsgTransfer";
    }
    exports.isMsgTransferEncodeObject = isMsgTransferEncodeObject;
  }
});

// node_modules/cosmjs-types/ibc/applications/transfer/v1/transfer.js
var require_transfer = __commonJS({
  "node_modules/cosmjs-types/ibc/applications/transfer/v1/transfer.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Params = exports.DenomTrace = exports.protobufPackage = void 0;
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "ibc.applications.transfer.v1";
    function createBaseDenomTrace() {
      return {
        path: "",
        baseDenom: ""
      };
    }
    exports.DenomTrace = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.path !== "") {
          writer.uint32(10).string(message.path);
        }
        if (message.baseDenom !== "") {
          writer.uint32(18).string(message.baseDenom);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseDenomTrace();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.path = reader.string();
              break;
            case 2:
              message.baseDenom = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          path: (0, helpers_1.isSet)(object.path) ? String(object.path) : "",
          baseDenom: (0, helpers_1.isSet)(object.baseDenom) ? String(object.baseDenom) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.path !== void 0 && (obj.path = message.path);
        message.baseDenom !== void 0 && (obj.baseDenom = message.baseDenom);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseDenomTrace();
        message.path = object.path ?? "";
        message.baseDenom = object.baseDenom ?? "";
        return message;
      }
    };
    function createBaseParams() {
      return {
        sendEnabled: false,
        receiveEnabled: false
      };
    }
    exports.Params = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.sendEnabled === true) {
          writer.uint32(8).bool(message.sendEnabled);
        }
        if (message.receiveEnabled === true) {
          writer.uint32(16).bool(message.receiveEnabled);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseParams();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.sendEnabled = reader.bool();
              break;
            case 2:
              message.receiveEnabled = reader.bool();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          sendEnabled: (0, helpers_1.isSet)(object.sendEnabled) ? Boolean(object.sendEnabled) : false,
          receiveEnabled: (0, helpers_1.isSet)(object.receiveEnabled) ? Boolean(object.receiveEnabled) : false
        };
      },
      toJSON(message) {
        const obj = {};
        message.sendEnabled !== void 0 && (obj.sendEnabled = message.sendEnabled);
        message.receiveEnabled !== void 0 && (obj.receiveEnabled = message.receiveEnabled);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseParams();
        message.sendEnabled = object.sendEnabled ?? false;
        message.receiveEnabled = object.receiveEnabled ?? false;
        return message;
      }
    };
  }
});

// node_modules/cosmjs-types/ibc/applications/transfer/v1/query.js
var require_query7 = __commonJS({
  "node_modules/cosmjs-types/ibc/applications/transfer/v1/query.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.QueryClientImpl = exports.QueryEscrowAddressResponse = exports.QueryEscrowAddressRequest = exports.QueryDenomHashResponse = exports.QueryDenomHashRequest = exports.QueryParamsResponse = exports.QueryParamsRequest = exports.QueryDenomTracesResponse = exports.QueryDenomTracesRequest = exports.QueryDenomTraceResponse = exports.QueryDenomTraceRequest = exports.protobufPackage = void 0;
    var pagination_1 = require_pagination();
    var transfer_1 = require_transfer();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "ibc.applications.transfer.v1";
    function createBaseQueryDenomTraceRequest() {
      return {
        hash: ""
      };
    }
    exports.QueryDenomTraceRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.hash !== "") {
          writer.uint32(10).string(message.hash);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDenomTraceRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.hash = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          hash: (0, helpers_1.isSet)(object.hash) ? String(object.hash) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.hash !== void 0 && (obj.hash = message.hash);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDenomTraceRequest();
        message.hash = object.hash ?? "";
        return message;
      }
    };
    function createBaseQueryDenomTraceResponse() {
      return {
        denomTrace: void 0
      };
    }
    exports.QueryDenomTraceResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.denomTrace !== void 0) {
          transfer_1.DenomTrace.encode(message.denomTrace, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDenomTraceResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.denomTrace = transfer_1.DenomTrace.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          denomTrace: (0, helpers_1.isSet)(object.denomTrace) ? transfer_1.DenomTrace.fromJSON(object.denomTrace) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.denomTrace !== void 0 && (obj.denomTrace = message.denomTrace ? transfer_1.DenomTrace.toJSON(message.denomTrace) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDenomTraceResponse();
        message.denomTrace = object.denomTrace !== void 0 && object.denomTrace !== null ? transfer_1.DenomTrace.fromPartial(object.denomTrace) : void 0;
        return message;
      }
    };
    function createBaseQueryDenomTracesRequest() {
      return {
        pagination: void 0
      };
    }
    exports.QueryDenomTracesRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDenomTracesRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDenomTracesRequest();
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryDenomTracesResponse() {
      return {
        denomTraces: [],
        pagination: void 0
      };
    }
    exports.QueryDenomTracesResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.denomTraces) {
          transfer_1.DenomTrace.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDenomTracesResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.denomTraces.push(transfer_1.DenomTrace.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          denomTraces: Array.isArray(object == null ? void 0 : object.denomTraces) ? object.denomTraces.map((e) => transfer_1.DenomTrace.fromJSON(e)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.denomTraces) {
          obj.denomTraces = message.denomTraces.map((e) => e ? transfer_1.DenomTrace.toJSON(e) : void 0);
        } else {
          obj.denomTraces = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryDenomTracesResponse();
        message.denomTraces = ((_a = object.denomTraces) == null ? void 0 : _a.map((e) => transfer_1.DenomTrace.fromPartial(e))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryParamsRequest() {
      return {};
    }
    exports.QueryParamsRequest = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryParamsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseQueryParamsRequest();
        return message;
      }
    };
    function createBaseQueryParamsResponse() {
      return {
        params: void 0
      };
    }
    exports.QueryParamsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.params !== void 0) {
          transfer_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryParamsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.params = transfer_1.Params.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          params: (0, helpers_1.isSet)(object.params) ? transfer_1.Params.fromJSON(object.params) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.params !== void 0 && (obj.params = message.params ? transfer_1.Params.toJSON(message.params) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryParamsResponse();
        message.params = object.params !== void 0 && object.params !== null ? transfer_1.Params.fromPartial(object.params) : void 0;
        return message;
      }
    };
    function createBaseQueryDenomHashRequest() {
      return {
        trace: ""
      };
    }
    exports.QueryDenomHashRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.trace !== "") {
          writer.uint32(10).string(message.trace);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDenomHashRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.trace = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          trace: (0, helpers_1.isSet)(object.trace) ? String(object.trace) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.trace !== void 0 && (obj.trace = message.trace);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDenomHashRequest();
        message.trace = object.trace ?? "";
        return message;
      }
    };
    function createBaseQueryDenomHashResponse() {
      return {
        hash: ""
      };
    }
    exports.QueryDenomHashResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.hash !== "") {
          writer.uint32(10).string(message.hash);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDenomHashResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.hash = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          hash: (0, helpers_1.isSet)(object.hash) ? String(object.hash) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.hash !== void 0 && (obj.hash = message.hash);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDenomHashResponse();
        message.hash = object.hash ?? "";
        return message;
      }
    };
    function createBaseQueryEscrowAddressRequest() {
      return {
        portId: "",
        channelId: ""
      };
    }
    exports.QueryEscrowAddressRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.portId !== "") {
          writer.uint32(10).string(message.portId);
        }
        if (message.channelId !== "") {
          writer.uint32(18).string(message.channelId);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryEscrowAddressRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.portId = reader.string();
              break;
            case 2:
              message.channelId = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          channelId: (0, helpers_1.isSet)(object.channelId) ? String(object.channelId) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.portId !== void 0 && (obj.portId = message.portId);
        message.channelId !== void 0 && (obj.channelId = message.channelId);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryEscrowAddressRequest();
        message.portId = object.portId ?? "";
        message.channelId = object.channelId ?? "";
        return message;
      }
    };
    function createBaseQueryEscrowAddressResponse() {
      return {
        escrowAddress: ""
      };
    }
    exports.QueryEscrowAddressResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.escrowAddress !== "") {
          writer.uint32(10).string(message.escrowAddress);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryEscrowAddressResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.escrowAddress = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          escrowAddress: (0, helpers_1.isSet)(object.escrowAddress) ? String(object.escrowAddress) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.escrowAddress !== void 0 && (obj.escrowAddress = message.escrowAddress);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryEscrowAddressResponse();
        message.escrowAddress = object.escrowAddress ?? "";
        return message;
      }
    };
    var QueryClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.DenomTrace = this.DenomTrace.bind(this);
        this.DenomTraces = this.DenomTraces.bind(this);
        this.Params = this.Params.bind(this);
        this.DenomHash = this.DenomHash.bind(this);
        this.EscrowAddress = this.EscrowAddress.bind(this);
      }
      DenomTrace(request) {
        const data = exports.QueryDenomTraceRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.applications.transfer.v1.Query", "DenomTrace", data);
        return promise.then((data2) => exports.QueryDenomTraceResponse.decode(new _m0.Reader(data2)));
      }
      DenomTraces(request = {
        pagination: void 0
      }) {
        const data = exports.QueryDenomTracesRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.applications.transfer.v1.Query", "DenomTraces", data);
        return promise.then((data2) => exports.QueryDenomTracesResponse.decode(new _m0.Reader(data2)));
      }
      Params(request = {}) {
        const data = exports.QueryParamsRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.applications.transfer.v1.Query", "Params", data);
        return promise.then((data2) => exports.QueryParamsResponse.decode(new _m0.Reader(data2)));
      }
      DenomHash(request) {
        const data = exports.QueryDenomHashRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.applications.transfer.v1.Query", "DenomHash", data);
        return promise.then((data2) => exports.QueryDenomHashResponse.decode(new _m0.Reader(data2)));
      }
      EscrowAddress(request) {
        const data = exports.QueryEscrowAddressRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.applications.transfer.v1.Query", "EscrowAddress", data);
        return promise.then((data2) => exports.QueryEscrowAddressResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.QueryClientImpl = QueryClientImpl;
  }
});

// node_modules/cosmjs-types/ibc/core/channel/v1/query.js
var require_query8 = __commonJS({
  "node_modules/cosmjs-types/ibc/core/channel/v1/query.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.QueryClientImpl = exports.QueryNextSequenceReceiveResponse = exports.QueryNextSequenceReceiveRequest = exports.QueryUnreceivedAcksResponse = exports.QueryUnreceivedAcksRequest = exports.QueryUnreceivedPacketsResponse = exports.QueryUnreceivedPacketsRequest = exports.QueryPacketAcknowledgementsResponse = exports.QueryPacketAcknowledgementsRequest = exports.QueryPacketAcknowledgementResponse = exports.QueryPacketAcknowledgementRequest = exports.QueryPacketReceiptResponse = exports.QueryPacketReceiptRequest = exports.QueryPacketCommitmentsResponse = exports.QueryPacketCommitmentsRequest = exports.QueryPacketCommitmentResponse = exports.QueryPacketCommitmentRequest = exports.QueryChannelConsensusStateResponse = exports.QueryChannelConsensusStateRequest = exports.QueryChannelClientStateResponse = exports.QueryChannelClientStateRequest = exports.QueryConnectionChannelsResponse = exports.QueryConnectionChannelsRequest = exports.QueryChannelsResponse = exports.QueryChannelsRequest = exports.QueryChannelResponse = exports.QueryChannelRequest = exports.protobufPackage = void 0;
    var pagination_1 = require_pagination();
    var channel_1 = require_channel();
    var client_1 = require_client();
    var any_1 = require_any();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "ibc.core.channel.v1";
    function createBaseQueryChannelRequest() {
      return {
        portId: "",
        channelId: ""
      };
    }
    exports.QueryChannelRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.portId !== "") {
          writer.uint32(10).string(message.portId);
        }
        if (message.channelId !== "") {
          writer.uint32(18).string(message.channelId);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryChannelRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.portId = reader.string();
              break;
            case 2:
              message.channelId = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          channelId: (0, helpers_1.isSet)(object.channelId) ? String(object.channelId) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.portId !== void 0 && (obj.portId = message.portId);
        message.channelId !== void 0 && (obj.channelId = message.channelId);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryChannelRequest();
        message.portId = object.portId ?? "";
        message.channelId = object.channelId ?? "";
        return message;
      }
    };
    function createBaseQueryChannelResponse() {
      return {
        channel: void 0,
        proof: new Uint8Array(),
        proofHeight: void 0
      };
    }
    exports.QueryChannelResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.channel !== void 0) {
          channel_1.Channel.encode(message.channel, writer.uint32(10).fork()).ldelim();
        }
        if (message.proof.length !== 0) {
          writer.uint32(18).bytes(message.proof);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryChannelResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.channel = channel_1.Channel.decode(reader, reader.uint32());
              break;
            case 2:
              message.proof = reader.bytes();
              break;
            case 3:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          channel: (0, helpers_1.isSet)(object.channel) ? channel_1.Channel.fromJSON(object.channel) : void 0,
          proof: (0, helpers_1.isSet)(object.proof) ? (0, helpers_1.bytesFromBase64)(object.proof) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.channel !== void 0 && (obj.channel = message.channel ? channel_1.Channel.toJSON(message.channel) : void 0);
        message.proof !== void 0 && (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== void 0 ? message.proof : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryChannelResponse();
        message.channel = object.channel !== void 0 && object.channel !== null ? channel_1.Channel.fromPartial(object.channel) : void 0;
        message.proof = object.proof ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        return message;
      }
    };
    function createBaseQueryChannelsRequest() {
      return {
        pagination: void 0
      };
    }
    exports.QueryChannelsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryChannelsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryChannelsRequest();
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryChannelsResponse() {
      return {
        channels: [],
        pagination: void 0,
        height: void 0
      };
    }
    exports.QueryChannelsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.channels) {
          channel_1.IdentifiedChannel.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        if (message.height !== void 0) {
          client_1.Height.encode(message.height, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryChannelsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.channels.push(channel_1.IdentifiedChannel.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            case 3:
              message.height = client_1.Height.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          channels: Array.isArray(object == null ? void 0 : object.channels) ? object.channels.map((e) => channel_1.IdentifiedChannel.fromJSON(e)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0,
          height: (0, helpers_1.isSet)(object.height) ? client_1.Height.fromJSON(object.height) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.channels) {
          obj.channels = message.channels.map((e) => e ? channel_1.IdentifiedChannel.toJSON(e) : void 0);
        } else {
          obj.channels = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        message.height !== void 0 && (obj.height = message.height ? client_1.Height.toJSON(message.height) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryChannelsResponse();
        message.channels = ((_a = object.channels) == null ? void 0 : _a.map((e) => channel_1.IdentifiedChannel.fromPartial(e))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        message.height = object.height !== void 0 && object.height !== null ? client_1.Height.fromPartial(object.height) : void 0;
        return message;
      }
    };
    function createBaseQueryConnectionChannelsRequest() {
      return {
        connection: "",
        pagination: void 0
      };
    }
    exports.QueryConnectionChannelsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.connection !== "") {
          writer.uint32(10).string(message.connection);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryConnectionChannelsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.connection = reader.string();
              break;
            case 2:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          connection: (0, helpers_1.isSet)(object.connection) ? String(object.connection) : "",
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.connection !== void 0 && (obj.connection = message.connection);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryConnectionChannelsRequest();
        message.connection = object.connection ?? "";
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryConnectionChannelsResponse() {
      return {
        channels: [],
        pagination: void 0,
        height: void 0
      };
    }
    exports.QueryConnectionChannelsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.channels) {
          channel_1.IdentifiedChannel.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        if (message.height !== void 0) {
          client_1.Height.encode(message.height, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryConnectionChannelsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.channels.push(channel_1.IdentifiedChannel.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            case 3:
              message.height = client_1.Height.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          channels: Array.isArray(object == null ? void 0 : object.channels) ? object.channels.map((e) => channel_1.IdentifiedChannel.fromJSON(e)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0,
          height: (0, helpers_1.isSet)(object.height) ? client_1.Height.fromJSON(object.height) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.channels) {
          obj.channels = message.channels.map((e) => e ? channel_1.IdentifiedChannel.toJSON(e) : void 0);
        } else {
          obj.channels = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        message.height !== void 0 && (obj.height = message.height ? client_1.Height.toJSON(message.height) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryConnectionChannelsResponse();
        message.channels = ((_a = object.channels) == null ? void 0 : _a.map((e) => channel_1.IdentifiedChannel.fromPartial(e))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        message.height = object.height !== void 0 && object.height !== null ? client_1.Height.fromPartial(object.height) : void 0;
        return message;
      }
    };
    function createBaseQueryChannelClientStateRequest() {
      return {
        portId: "",
        channelId: ""
      };
    }
    exports.QueryChannelClientStateRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.portId !== "") {
          writer.uint32(10).string(message.portId);
        }
        if (message.channelId !== "") {
          writer.uint32(18).string(message.channelId);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryChannelClientStateRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.portId = reader.string();
              break;
            case 2:
              message.channelId = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          channelId: (0, helpers_1.isSet)(object.channelId) ? String(object.channelId) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.portId !== void 0 && (obj.portId = message.portId);
        message.channelId !== void 0 && (obj.channelId = message.channelId);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryChannelClientStateRequest();
        message.portId = object.portId ?? "";
        message.channelId = object.channelId ?? "";
        return message;
      }
    };
    function createBaseQueryChannelClientStateResponse() {
      return {
        identifiedClientState: void 0,
        proof: new Uint8Array(),
        proofHeight: void 0
      };
    }
    exports.QueryChannelClientStateResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.identifiedClientState !== void 0) {
          client_1.IdentifiedClientState.encode(message.identifiedClientState, writer.uint32(10).fork()).ldelim();
        }
        if (message.proof.length !== 0) {
          writer.uint32(18).bytes(message.proof);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryChannelClientStateResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.identifiedClientState = client_1.IdentifiedClientState.decode(reader, reader.uint32());
              break;
            case 2:
              message.proof = reader.bytes();
              break;
            case 3:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          identifiedClientState: (0, helpers_1.isSet)(object.identifiedClientState) ? client_1.IdentifiedClientState.fromJSON(object.identifiedClientState) : void 0,
          proof: (0, helpers_1.isSet)(object.proof) ? (0, helpers_1.bytesFromBase64)(object.proof) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.identifiedClientState !== void 0 && (obj.identifiedClientState = message.identifiedClientState ? client_1.IdentifiedClientState.toJSON(message.identifiedClientState) : void 0);
        message.proof !== void 0 && (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== void 0 ? message.proof : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryChannelClientStateResponse();
        message.identifiedClientState = object.identifiedClientState !== void 0 && object.identifiedClientState !== null ? client_1.IdentifiedClientState.fromPartial(object.identifiedClientState) : void 0;
        message.proof = object.proof ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        return message;
      }
    };
    function createBaseQueryChannelConsensusStateRequest() {
      return {
        portId: "",
        channelId: "",
        revisionNumber: helpers_1.Long.UZERO,
        revisionHeight: helpers_1.Long.UZERO
      };
    }
    exports.QueryChannelConsensusStateRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.portId !== "") {
          writer.uint32(10).string(message.portId);
        }
        if (message.channelId !== "") {
          writer.uint32(18).string(message.channelId);
        }
        if (!message.revisionNumber.isZero()) {
          writer.uint32(24).uint64(message.revisionNumber);
        }
        if (!message.revisionHeight.isZero()) {
          writer.uint32(32).uint64(message.revisionHeight);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryChannelConsensusStateRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.portId = reader.string();
              break;
            case 2:
              message.channelId = reader.string();
              break;
            case 3:
              message.revisionNumber = reader.uint64();
              break;
            case 4:
              message.revisionHeight = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          channelId: (0, helpers_1.isSet)(object.channelId) ? String(object.channelId) : "",
          revisionNumber: (0, helpers_1.isSet)(object.revisionNumber) ? helpers_1.Long.fromValue(object.revisionNumber) : helpers_1.Long.UZERO,
          revisionHeight: (0, helpers_1.isSet)(object.revisionHeight) ? helpers_1.Long.fromValue(object.revisionHeight) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.portId !== void 0 && (obj.portId = message.portId);
        message.channelId !== void 0 && (obj.channelId = message.channelId);
        message.revisionNumber !== void 0 && (obj.revisionNumber = (message.revisionNumber || helpers_1.Long.UZERO).toString());
        message.revisionHeight !== void 0 && (obj.revisionHeight = (message.revisionHeight || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryChannelConsensusStateRequest();
        message.portId = object.portId ?? "";
        message.channelId = object.channelId ?? "";
        message.revisionNumber = object.revisionNumber !== void 0 && object.revisionNumber !== null ? helpers_1.Long.fromValue(object.revisionNumber) : helpers_1.Long.UZERO;
        message.revisionHeight = object.revisionHeight !== void 0 && object.revisionHeight !== null ? helpers_1.Long.fromValue(object.revisionHeight) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseQueryChannelConsensusStateResponse() {
      return {
        consensusState: void 0,
        clientId: "",
        proof: new Uint8Array(),
        proofHeight: void 0
      };
    }
    exports.QueryChannelConsensusStateResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.consensusState !== void 0) {
          any_1.Any.encode(message.consensusState, writer.uint32(10).fork()).ldelim();
        }
        if (message.clientId !== "") {
          writer.uint32(18).string(message.clientId);
        }
        if (message.proof.length !== 0) {
          writer.uint32(26).bytes(message.proof);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryChannelConsensusStateResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.consensusState = any_1.Any.decode(reader, reader.uint32());
              break;
            case 2:
              message.clientId = reader.string();
              break;
            case 3:
              message.proof = reader.bytes();
              break;
            case 4:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          consensusState: (0, helpers_1.isSet)(object.consensusState) ? any_1.Any.fromJSON(object.consensusState) : void 0,
          clientId: (0, helpers_1.isSet)(object.clientId) ? String(object.clientId) : "",
          proof: (0, helpers_1.isSet)(object.proof) ? (0, helpers_1.bytesFromBase64)(object.proof) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.consensusState !== void 0 && (obj.consensusState = message.consensusState ? any_1.Any.toJSON(message.consensusState) : void 0);
        message.clientId !== void 0 && (obj.clientId = message.clientId);
        message.proof !== void 0 && (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== void 0 ? message.proof : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryChannelConsensusStateResponse();
        message.consensusState = object.consensusState !== void 0 && object.consensusState !== null ? any_1.Any.fromPartial(object.consensusState) : void 0;
        message.clientId = object.clientId ?? "";
        message.proof = object.proof ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        return message;
      }
    };
    function createBaseQueryPacketCommitmentRequest() {
      return {
        portId: "",
        channelId: "",
        sequence: helpers_1.Long.UZERO
      };
    }
    exports.QueryPacketCommitmentRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.portId !== "") {
          writer.uint32(10).string(message.portId);
        }
        if (message.channelId !== "") {
          writer.uint32(18).string(message.channelId);
        }
        if (!message.sequence.isZero()) {
          writer.uint32(24).uint64(message.sequence);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryPacketCommitmentRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.portId = reader.string();
              break;
            case 2:
              message.channelId = reader.string();
              break;
            case 3:
              message.sequence = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          channelId: (0, helpers_1.isSet)(object.channelId) ? String(object.channelId) : "",
          sequence: (0, helpers_1.isSet)(object.sequence) ? helpers_1.Long.fromValue(object.sequence) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.portId !== void 0 && (obj.portId = message.portId);
        message.channelId !== void 0 && (obj.channelId = message.channelId);
        message.sequence !== void 0 && (obj.sequence = (message.sequence || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryPacketCommitmentRequest();
        message.portId = object.portId ?? "";
        message.channelId = object.channelId ?? "";
        message.sequence = object.sequence !== void 0 && object.sequence !== null ? helpers_1.Long.fromValue(object.sequence) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseQueryPacketCommitmentResponse() {
      return {
        commitment: new Uint8Array(),
        proof: new Uint8Array(),
        proofHeight: void 0
      };
    }
    exports.QueryPacketCommitmentResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.commitment.length !== 0) {
          writer.uint32(10).bytes(message.commitment);
        }
        if (message.proof.length !== 0) {
          writer.uint32(18).bytes(message.proof);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryPacketCommitmentResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.commitment = reader.bytes();
              break;
            case 2:
              message.proof = reader.bytes();
              break;
            case 3:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          commitment: (0, helpers_1.isSet)(object.commitment) ? (0, helpers_1.bytesFromBase64)(object.commitment) : new Uint8Array(),
          proof: (0, helpers_1.isSet)(object.proof) ? (0, helpers_1.bytesFromBase64)(object.proof) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.commitment !== void 0 && (obj.commitment = (0, helpers_1.base64FromBytes)(message.commitment !== void 0 ? message.commitment : new Uint8Array()));
        message.proof !== void 0 && (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== void 0 ? message.proof : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryPacketCommitmentResponse();
        message.commitment = object.commitment ?? new Uint8Array();
        message.proof = object.proof ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        return message;
      }
    };
    function createBaseQueryPacketCommitmentsRequest() {
      return {
        portId: "",
        channelId: "",
        pagination: void 0
      };
    }
    exports.QueryPacketCommitmentsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.portId !== "") {
          writer.uint32(10).string(message.portId);
        }
        if (message.channelId !== "") {
          writer.uint32(18).string(message.channelId);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryPacketCommitmentsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.portId = reader.string();
              break;
            case 2:
              message.channelId = reader.string();
              break;
            case 3:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          channelId: (0, helpers_1.isSet)(object.channelId) ? String(object.channelId) : "",
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.portId !== void 0 && (obj.portId = message.portId);
        message.channelId !== void 0 && (obj.channelId = message.channelId);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryPacketCommitmentsRequest();
        message.portId = object.portId ?? "";
        message.channelId = object.channelId ?? "";
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryPacketCommitmentsResponse() {
      return {
        commitments: [],
        pagination: void 0,
        height: void 0
      };
    }
    exports.QueryPacketCommitmentsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.commitments) {
          channel_1.PacketState.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        if (message.height !== void 0) {
          client_1.Height.encode(message.height, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryPacketCommitmentsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.commitments.push(channel_1.PacketState.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            case 3:
              message.height = client_1.Height.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          commitments: Array.isArray(object == null ? void 0 : object.commitments) ? object.commitments.map((e) => channel_1.PacketState.fromJSON(e)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0,
          height: (0, helpers_1.isSet)(object.height) ? client_1.Height.fromJSON(object.height) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.commitments) {
          obj.commitments = message.commitments.map((e) => e ? channel_1.PacketState.toJSON(e) : void 0);
        } else {
          obj.commitments = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        message.height !== void 0 && (obj.height = message.height ? client_1.Height.toJSON(message.height) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryPacketCommitmentsResponse();
        message.commitments = ((_a = object.commitments) == null ? void 0 : _a.map((e) => channel_1.PacketState.fromPartial(e))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        message.height = object.height !== void 0 && object.height !== null ? client_1.Height.fromPartial(object.height) : void 0;
        return message;
      }
    };
    function createBaseQueryPacketReceiptRequest() {
      return {
        portId: "",
        channelId: "",
        sequence: helpers_1.Long.UZERO
      };
    }
    exports.QueryPacketReceiptRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.portId !== "") {
          writer.uint32(10).string(message.portId);
        }
        if (message.channelId !== "") {
          writer.uint32(18).string(message.channelId);
        }
        if (!message.sequence.isZero()) {
          writer.uint32(24).uint64(message.sequence);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryPacketReceiptRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.portId = reader.string();
              break;
            case 2:
              message.channelId = reader.string();
              break;
            case 3:
              message.sequence = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          channelId: (0, helpers_1.isSet)(object.channelId) ? String(object.channelId) : "",
          sequence: (0, helpers_1.isSet)(object.sequence) ? helpers_1.Long.fromValue(object.sequence) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.portId !== void 0 && (obj.portId = message.portId);
        message.channelId !== void 0 && (obj.channelId = message.channelId);
        message.sequence !== void 0 && (obj.sequence = (message.sequence || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryPacketReceiptRequest();
        message.portId = object.portId ?? "";
        message.channelId = object.channelId ?? "";
        message.sequence = object.sequence !== void 0 && object.sequence !== null ? helpers_1.Long.fromValue(object.sequence) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseQueryPacketReceiptResponse() {
      return {
        received: false,
        proof: new Uint8Array(),
        proofHeight: void 0
      };
    }
    exports.QueryPacketReceiptResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.received === true) {
          writer.uint32(16).bool(message.received);
        }
        if (message.proof.length !== 0) {
          writer.uint32(26).bytes(message.proof);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryPacketReceiptResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 2:
              message.received = reader.bool();
              break;
            case 3:
              message.proof = reader.bytes();
              break;
            case 4:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          received: (0, helpers_1.isSet)(object.received) ? Boolean(object.received) : false,
          proof: (0, helpers_1.isSet)(object.proof) ? (0, helpers_1.bytesFromBase64)(object.proof) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.received !== void 0 && (obj.received = message.received);
        message.proof !== void 0 && (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== void 0 ? message.proof : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryPacketReceiptResponse();
        message.received = object.received ?? false;
        message.proof = object.proof ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        return message;
      }
    };
    function createBaseQueryPacketAcknowledgementRequest() {
      return {
        portId: "",
        channelId: "",
        sequence: helpers_1.Long.UZERO
      };
    }
    exports.QueryPacketAcknowledgementRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.portId !== "") {
          writer.uint32(10).string(message.portId);
        }
        if (message.channelId !== "") {
          writer.uint32(18).string(message.channelId);
        }
        if (!message.sequence.isZero()) {
          writer.uint32(24).uint64(message.sequence);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryPacketAcknowledgementRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.portId = reader.string();
              break;
            case 2:
              message.channelId = reader.string();
              break;
            case 3:
              message.sequence = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          channelId: (0, helpers_1.isSet)(object.channelId) ? String(object.channelId) : "",
          sequence: (0, helpers_1.isSet)(object.sequence) ? helpers_1.Long.fromValue(object.sequence) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.portId !== void 0 && (obj.portId = message.portId);
        message.channelId !== void 0 && (obj.channelId = message.channelId);
        message.sequence !== void 0 && (obj.sequence = (message.sequence || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryPacketAcknowledgementRequest();
        message.portId = object.portId ?? "";
        message.channelId = object.channelId ?? "";
        message.sequence = object.sequence !== void 0 && object.sequence !== null ? helpers_1.Long.fromValue(object.sequence) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseQueryPacketAcknowledgementResponse() {
      return {
        acknowledgement: new Uint8Array(),
        proof: new Uint8Array(),
        proofHeight: void 0
      };
    }
    exports.QueryPacketAcknowledgementResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.acknowledgement.length !== 0) {
          writer.uint32(10).bytes(message.acknowledgement);
        }
        if (message.proof.length !== 0) {
          writer.uint32(18).bytes(message.proof);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryPacketAcknowledgementResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.acknowledgement = reader.bytes();
              break;
            case 2:
              message.proof = reader.bytes();
              break;
            case 3:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          acknowledgement: (0, helpers_1.isSet)(object.acknowledgement) ? (0, helpers_1.bytesFromBase64)(object.acknowledgement) : new Uint8Array(),
          proof: (0, helpers_1.isSet)(object.proof) ? (0, helpers_1.bytesFromBase64)(object.proof) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.acknowledgement !== void 0 && (obj.acknowledgement = (0, helpers_1.base64FromBytes)(message.acknowledgement !== void 0 ? message.acknowledgement : new Uint8Array()));
        message.proof !== void 0 && (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== void 0 ? message.proof : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryPacketAcknowledgementResponse();
        message.acknowledgement = object.acknowledgement ?? new Uint8Array();
        message.proof = object.proof ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        return message;
      }
    };
    function createBaseQueryPacketAcknowledgementsRequest() {
      return {
        portId: "",
        channelId: "",
        pagination: void 0,
        packetCommitmentSequences: []
      };
    }
    exports.QueryPacketAcknowledgementsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.portId !== "") {
          writer.uint32(10).string(message.portId);
        }
        if (message.channelId !== "") {
          writer.uint32(18).string(message.channelId);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(26).fork()).ldelim();
        }
        writer.uint32(34).fork();
        for (const v of message.packetCommitmentSequences) {
          writer.uint64(v);
        }
        writer.ldelim();
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryPacketAcknowledgementsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.portId = reader.string();
              break;
            case 2:
              message.channelId = reader.string();
              break;
            case 3:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            case 4:
              if ((tag & 7) === 2) {
                const end2 = reader.uint32() + reader.pos;
                while (reader.pos < end2) {
                  message.packetCommitmentSequences.push(reader.uint64());
                }
              } else {
                message.packetCommitmentSequences.push(reader.uint64());
              }
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          channelId: (0, helpers_1.isSet)(object.channelId) ? String(object.channelId) : "",
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0,
          packetCommitmentSequences: Array.isArray(object == null ? void 0 : object.packetCommitmentSequences) ? object.packetCommitmentSequences.map((e) => helpers_1.Long.fromValue(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.portId !== void 0 && (obj.portId = message.portId);
        message.channelId !== void 0 && (obj.channelId = message.channelId);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        if (message.packetCommitmentSequences) {
          obj.packetCommitmentSequences = message.packetCommitmentSequences.map((e) => (e || helpers_1.Long.UZERO).toString());
        } else {
          obj.packetCommitmentSequences = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryPacketAcknowledgementsRequest();
        message.portId = object.portId ?? "";
        message.channelId = object.channelId ?? "";
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        message.packetCommitmentSequences = ((_a = object.packetCommitmentSequences) == null ? void 0 : _a.map((e) => helpers_1.Long.fromValue(e))) || [];
        return message;
      }
    };
    function createBaseQueryPacketAcknowledgementsResponse() {
      return {
        acknowledgements: [],
        pagination: void 0,
        height: void 0
      };
    }
    exports.QueryPacketAcknowledgementsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.acknowledgements) {
          channel_1.PacketState.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        if (message.height !== void 0) {
          client_1.Height.encode(message.height, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryPacketAcknowledgementsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.acknowledgements.push(channel_1.PacketState.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            case 3:
              message.height = client_1.Height.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          acknowledgements: Array.isArray(object == null ? void 0 : object.acknowledgements) ? object.acknowledgements.map((e) => channel_1.PacketState.fromJSON(e)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0,
          height: (0, helpers_1.isSet)(object.height) ? client_1.Height.fromJSON(object.height) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.acknowledgements) {
          obj.acknowledgements = message.acknowledgements.map((e) => e ? channel_1.PacketState.toJSON(e) : void 0);
        } else {
          obj.acknowledgements = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        message.height !== void 0 && (obj.height = message.height ? client_1.Height.toJSON(message.height) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryPacketAcknowledgementsResponse();
        message.acknowledgements = ((_a = object.acknowledgements) == null ? void 0 : _a.map((e) => channel_1.PacketState.fromPartial(e))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        message.height = object.height !== void 0 && object.height !== null ? client_1.Height.fromPartial(object.height) : void 0;
        return message;
      }
    };
    function createBaseQueryUnreceivedPacketsRequest() {
      return {
        portId: "",
        channelId: "",
        packetCommitmentSequences: []
      };
    }
    exports.QueryUnreceivedPacketsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.portId !== "") {
          writer.uint32(10).string(message.portId);
        }
        if (message.channelId !== "") {
          writer.uint32(18).string(message.channelId);
        }
        writer.uint32(26).fork();
        for (const v of message.packetCommitmentSequences) {
          writer.uint64(v);
        }
        writer.ldelim();
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryUnreceivedPacketsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.portId = reader.string();
              break;
            case 2:
              message.channelId = reader.string();
              break;
            case 3:
              if ((tag & 7) === 2) {
                const end2 = reader.uint32() + reader.pos;
                while (reader.pos < end2) {
                  message.packetCommitmentSequences.push(reader.uint64());
                }
              } else {
                message.packetCommitmentSequences.push(reader.uint64());
              }
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          channelId: (0, helpers_1.isSet)(object.channelId) ? String(object.channelId) : "",
          packetCommitmentSequences: Array.isArray(object == null ? void 0 : object.packetCommitmentSequences) ? object.packetCommitmentSequences.map((e) => helpers_1.Long.fromValue(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.portId !== void 0 && (obj.portId = message.portId);
        message.channelId !== void 0 && (obj.channelId = message.channelId);
        if (message.packetCommitmentSequences) {
          obj.packetCommitmentSequences = message.packetCommitmentSequences.map((e) => (e || helpers_1.Long.UZERO).toString());
        } else {
          obj.packetCommitmentSequences = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryUnreceivedPacketsRequest();
        message.portId = object.portId ?? "";
        message.channelId = object.channelId ?? "";
        message.packetCommitmentSequences = ((_a = object.packetCommitmentSequences) == null ? void 0 : _a.map((e) => helpers_1.Long.fromValue(e))) || [];
        return message;
      }
    };
    function createBaseQueryUnreceivedPacketsResponse() {
      return {
        sequences: [],
        height: void 0
      };
    }
    exports.QueryUnreceivedPacketsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        writer.uint32(10).fork();
        for (const v of message.sequences) {
          writer.uint64(v);
        }
        writer.ldelim();
        if (message.height !== void 0) {
          client_1.Height.encode(message.height, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryUnreceivedPacketsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              if ((tag & 7) === 2) {
                const end2 = reader.uint32() + reader.pos;
                while (reader.pos < end2) {
                  message.sequences.push(reader.uint64());
                }
              } else {
                message.sequences.push(reader.uint64());
              }
              break;
            case 2:
              message.height = client_1.Height.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          sequences: Array.isArray(object == null ? void 0 : object.sequences) ? object.sequences.map((e) => helpers_1.Long.fromValue(e)) : [],
          height: (0, helpers_1.isSet)(object.height) ? client_1.Height.fromJSON(object.height) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.sequences) {
          obj.sequences = message.sequences.map((e) => (e || helpers_1.Long.UZERO).toString());
        } else {
          obj.sequences = [];
        }
        message.height !== void 0 && (obj.height = message.height ? client_1.Height.toJSON(message.height) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryUnreceivedPacketsResponse();
        message.sequences = ((_a = object.sequences) == null ? void 0 : _a.map((e) => helpers_1.Long.fromValue(e))) || [];
        message.height = object.height !== void 0 && object.height !== null ? client_1.Height.fromPartial(object.height) : void 0;
        return message;
      }
    };
    function createBaseQueryUnreceivedAcksRequest() {
      return {
        portId: "",
        channelId: "",
        packetAckSequences: []
      };
    }
    exports.QueryUnreceivedAcksRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.portId !== "") {
          writer.uint32(10).string(message.portId);
        }
        if (message.channelId !== "") {
          writer.uint32(18).string(message.channelId);
        }
        writer.uint32(26).fork();
        for (const v of message.packetAckSequences) {
          writer.uint64(v);
        }
        writer.ldelim();
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryUnreceivedAcksRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.portId = reader.string();
              break;
            case 2:
              message.channelId = reader.string();
              break;
            case 3:
              if ((tag & 7) === 2) {
                const end2 = reader.uint32() + reader.pos;
                while (reader.pos < end2) {
                  message.packetAckSequences.push(reader.uint64());
                }
              } else {
                message.packetAckSequences.push(reader.uint64());
              }
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          channelId: (0, helpers_1.isSet)(object.channelId) ? String(object.channelId) : "",
          packetAckSequences: Array.isArray(object == null ? void 0 : object.packetAckSequences) ? object.packetAckSequences.map((e) => helpers_1.Long.fromValue(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.portId !== void 0 && (obj.portId = message.portId);
        message.channelId !== void 0 && (obj.channelId = message.channelId);
        if (message.packetAckSequences) {
          obj.packetAckSequences = message.packetAckSequences.map((e) => (e || helpers_1.Long.UZERO).toString());
        } else {
          obj.packetAckSequences = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryUnreceivedAcksRequest();
        message.portId = object.portId ?? "";
        message.channelId = object.channelId ?? "";
        message.packetAckSequences = ((_a = object.packetAckSequences) == null ? void 0 : _a.map((e) => helpers_1.Long.fromValue(e))) || [];
        return message;
      }
    };
    function createBaseQueryUnreceivedAcksResponse() {
      return {
        sequences: [],
        height: void 0
      };
    }
    exports.QueryUnreceivedAcksResponse = {
      encode(message, writer = _m0.Writer.create()) {
        writer.uint32(10).fork();
        for (const v of message.sequences) {
          writer.uint64(v);
        }
        writer.ldelim();
        if (message.height !== void 0) {
          client_1.Height.encode(message.height, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryUnreceivedAcksResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              if ((tag & 7) === 2) {
                const end2 = reader.uint32() + reader.pos;
                while (reader.pos < end2) {
                  message.sequences.push(reader.uint64());
                }
              } else {
                message.sequences.push(reader.uint64());
              }
              break;
            case 2:
              message.height = client_1.Height.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          sequences: Array.isArray(object == null ? void 0 : object.sequences) ? object.sequences.map((e) => helpers_1.Long.fromValue(e)) : [],
          height: (0, helpers_1.isSet)(object.height) ? client_1.Height.fromJSON(object.height) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.sequences) {
          obj.sequences = message.sequences.map((e) => (e || helpers_1.Long.UZERO).toString());
        } else {
          obj.sequences = [];
        }
        message.height !== void 0 && (obj.height = message.height ? client_1.Height.toJSON(message.height) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryUnreceivedAcksResponse();
        message.sequences = ((_a = object.sequences) == null ? void 0 : _a.map((e) => helpers_1.Long.fromValue(e))) || [];
        message.height = object.height !== void 0 && object.height !== null ? client_1.Height.fromPartial(object.height) : void 0;
        return message;
      }
    };
    function createBaseQueryNextSequenceReceiveRequest() {
      return {
        portId: "",
        channelId: ""
      };
    }
    exports.QueryNextSequenceReceiveRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.portId !== "") {
          writer.uint32(10).string(message.portId);
        }
        if (message.channelId !== "") {
          writer.uint32(18).string(message.channelId);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryNextSequenceReceiveRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.portId = reader.string();
              break;
            case 2:
              message.channelId = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          channelId: (0, helpers_1.isSet)(object.channelId) ? String(object.channelId) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.portId !== void 0 && (obj.portId = message.portId);
        message.channelId !== void 0 && (obj.channelId = message.channelId);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryNextSequenceReceiveRequest();
        message.portId = object.portId ?? "";
        message.channelId = object.channelId ?? "";
        return message;
      }
    };
    function createBaseQueryNextSequenceReceiveResponse() {
      return {
        nextSequenceReceive: helpers_1.Long.UZERO,
        proof: new Uint8Array(),
        proofHeight: void 0
      };
    }
    exports.QueryNextSequenceReceiveResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.nextSequenceReceive.isZero()) {
          writer.uint32(8).uint64(message.nextSequenceReceive);
        }
        if (message.proof.length !== 0) {
          writer.uint32(18).bytes(message.proof);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryNextSequenceReceiveResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.nextSequenceReceive = reader.uint64();
              break;
            case 2:
              message.proof = reader.bytes();
              break;
            case 3:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          nextSequenceReceive: (0, helpers_1.isSet)(object.nextSequenceReceive) ? helpers_1.Long.fromValue(object.nextSequenceReceive) : helpers_1.Long.UZERO,
          proof: (0, helpers_1.isSet)(object.proof) ? (0, helpers_1.bytesFromBase64)(object.proof) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.nextSequenceReceive !== void 0 && (obj.nextSequenceReceive = (message.nextSequenceReceive || helpers_1.Long.UZERO).toString());
        message.proof !== void 0 && (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== void 0 ? message.proof : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryNextSequenceReceiveResponse();
        message.nextSequenceReceive = object.nextSequenceReceive !== void 0 && object.nextSequenceReceive !== null ? helpers_1.Long.fromValue(object.nextSequenceReceive) : helpers_1.Long.UZERO;
        message.proof = object.proof ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        return message;
      }
    };
    var QueryClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.Channel = this.Channel.bind(this);
        this.Channels = this.Channels.bind(this);
        this.ConnectionChannels = this.ConnectionChannels.bind(this);
        this.ChannelClientState = this.ChannelClientState.bind(this);
        this.ChannelConsensusState = this.ChannelConsensusState.bind(this);
        this.PacketCommitment = this.PacketCommitment.bind(this);
        this.PacketCommitments = this.PacketCommitments.bind(this);
        this.PacketReceipt = this.PacketReceipt.bind(this);
        this.PacketAcknowledgement = this.PacketAcknowledgement.bind(this);
        this.PacketAcknowledgements = this.PacketAcknowledgements.bind(this);
        this.UnreceivedPackets = this.UnreceivedPackets.bind(this);
        this.UnreceivedAcks = this.UnreceivedAcks.bind(this);
        this.NextSequenceReceive = this.NextSequenceReceive.bind(this);
      }
      Channel(request) {
        const data = exports.QueryChannelRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Query", "Channel", data);
        return promise.then((data2) => exports.QueryChannelResponse.decode(new _m0.Reader(data2)));
      }
      Channels(request = {
        pagination: void 0
      }) {
        const data = exports.QueryChannelsRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Query", "Channels", data);
        return promise.then((data2) => exports.QueryChannelsResponse.decode(new _m0.Reader(data2)));
      }
      ConnectionChannels(request) {
        const data = exports.QueryConnectionChannelsRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Query", "ConnectionChannels", data);
        return promise.then((data2) => exports.QueryConnectionChannelsResponse.decode(new _m0.Reader(data2)));
      }
      ChannelClientState(request) {
        const data = exports.QueryChannelClientStateRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Query", "ChannelClientState", data);
        return promise.then((data2) => exports.QueryChannelClientStateResponse.decode(new _m0.Reader(data2)));
      }
      ChannelConsensusState(request) {
        const data = exports.QueryChannelConsensusStateRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Query", "ChannelConsensusState", data);
        return promise.then((data2) => exports.QueryChannelConsensusStateResponse.decode(new _m0.Reader(data2)));
      }
      PacketCommitment(request) {
        const data = exports.QueryPacketCommitmentRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Query", "PacketCommitment", data);
        return promise.then((data2) => exports.QueryPacketCommitmentResponse.decode(new _m0.Reader(data2)));
      }
      PacketCommitments(request) {
        const data = exports.QueryPacketCommitmentsRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Query", "PacketCommitments", data);
        return promise.then((data2) => exports.QueryPacketCommitmentsResponse.decode(new _m0.Reader(data2)));
      }
      PacketReceipt(request) {
        const data = exports.QueryPacketReceiptRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Query", "PacketReceipt", data);
        return promise.then((data2) => exports.QueryPacketReceiptResponse.decode(new _m0.Reader(data2)));
      }
      PacketAcknowledgement(request) {
        const data = exports.QueryPacketAcknowledgementRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Query", "PacketAcknowledgement", data);
        return promise.then((data2) => exports.QueryPacketAcknowledgementResponse.decode(new _m0.Reader(data2)));
      }
      PacketAcknowledgements(request) {
        const data = exports.QueryPacketAcknowledgementsRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Query", "PacketAcknowledgements", data);
        return promise.then((data2) => exports.QueryPacketAcknowledgementsResponse.decode(new _m0.Reader(data2)));
      }
      UnreceivedPackets(request) {
        const data = exports.QueryUnreceivedPacketsRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Query", "UnreceivedPackets", data);
        return promise.then((data2) => exports.QueryUnreceivedPacketsResponse.decode(new _m0.Reader(data2)));
      }
      UnreceivedAcks(request) {
        const data = exports.QueryUnreceivedAcksRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Query", "UnreceivedAcks", data);
        return promise.then((data2) => exports.QueryUnreceivedAcksResponse.decode(new _m0.Reader(data2)));
      }
      NextSequenceReceive(request) {
        const data = exports.QueryNextSequenceReceiveRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Query", "NextSequenceReceive", data);
        return promise.then((data2) => exports.QueryNextSequenceReceiveResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.QueryClientImpl = QueryClientImpl;
  }
});

// node_modules/cosmjs-types/ibc/core/client/v1/query.js
var require_query9 = __commonJS({
  "node_modules/cosmjs-types/ibc/core/client/v1/query.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.QueryClientImpl = exports.QueryUpgradedConsensusStateResponse = exports.QueryUpgradedConsensusStateRequest = exports.QueryUpgradedClientStateResponse = exports.QueryUpgradedClientStateRequest = exports.QueryClientParamsResponse = exports.QueryClientParamsRequest = exports.QueryClientStatusResponse = exports.QueryClientStatusRequest = exports.QueryConsensusStateHeightsResponse = exports.QueryConsensusStateHeightsRequest = exports.QueryConsensusStatesResponse = exports.QueryConsensusStatesRequest = exports.QueryConsensusStateResponse = exports.QueryConsensusStateRequest = exports.QueryClientStatesResponse = exports.QueryClientStatesRequest = exports.QueryClientStateResponse = exports.QueryClientStateRequest = exports.protobufPackage = void 0;
    var pagination_1 = require_pagination();
    var any_1 = require_any();
    var client_1 = require_client();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "ibc.core.client.v1";
    function createBaseQueryClientStateRequest() {
      return {
        clientId: ""
      };
    }
    exports.QueryClientStateRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.clientId !== "") {
          writer.uint32(10).string(message.clientId);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryClientStateRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.clientId = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          clientId: (0, helpers_1.isSet)(object.clientId) ? String(object.clientId) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.clientId !== void 0 && (obj.clientId = message.clientId);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryClientStateRequest();
        message.clientId = object.clientId ?? "";
        return message;
      }
    };
    function createBaseQueryClientStateResponse() {
      return {
        clientState: void 0,
        proof: new Uint8Array(),
        proofHeight: void 0
      };
    }
    exports.QueryClientStateResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.clientState !== void 0) {
          any_1.Any.encode(message.clientState, writer.uint32(10).fork()).ldelim();
        }
        if (message.proof.length !== 0) {
          writer.uint32(18).bytes(message.proof);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryClientStateResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.clientState = any_1.Any.decode(reader, reader.uint32());
              break;
            case 2:
              message.proof = reader.bytes();
              break;
            case 3:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          clientState: (0, helpers_1.isSet)(object.clientState) ? any_1.Any.fromJSON(object.clientState) : void 0,
          proof: (0, helpers_1.isSet)(object.proof) ? (0, helpers_1.bytesFromBase64)(object.proof) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.clientState !== void 0 && (obj.clientState = message.clientState ? any_1.Any.toJSON(message.clientState) : void 0);
        message.proof !== void 0 && (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== void 0 ? message.proof : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryClientStateResponse();
        message.clientState = object.clientState !== void 0 && object.clientState !== null ? any_1.Any.fromPartial(object.clientState) : void 0;
        message.proof = object.proof ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        return message;
      }
    };
    function createBaseQueryClientStatesRequest() {
      return {
        pagination: void 0
      };
    }
    exports.QueryClientStatesRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryClientStatesRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryClientStatesRequest();
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryClientStatesResponse() {
      return {
        clientStates: [],
        pagination: void 0
      };
    }
    exports.QueryClientStatesResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.clientStates) {
          client_1.IdentifiedClientState.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryClientStatesResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.clientStates.push(client_1.IdentifiedClientState.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          clientStates: Array.isArray(object == null ? void 0 : object.clientStates) ? object.clientStates.map((e) => client_1.IdentifiedClientState.fromJSON(e)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.clientStates) {
          obj.clientStates = message.clientStates.map((e) => e ? client_1.IdentifiedClientState.toJSON(e) : void 0);
        } else {
          obj.clientStates = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryClientStatesResponse();
        message.clientStates = ((_a = object.clientStates) == null ? void 0 : _a.map((e) => client_1.IdentifiedClientState.fromPartial(e))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryConsensusStateRequest() {
      return {
        clientId: "",
        revisionNumber: helpers_1.Long.UZERO,
        revisionHeight: helpers_1.Long.UZERO,
        latestHeight: false
      };
    }
    exports.QueryConsensusStateRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.clientId !== "") {
          writer.uint32(10).string(message.clientId);
        }
        if (!message.revisionNumber.isZero()) {
          writer.uint32(16).uint64(message.revisionNumber);
        }
        if (!message.revisionHeight.isZero()) {
          writer.uint32(24).uint64(message.revisionHeight);
        }
        if (message.latestHeight === true) {
          writer.uint32(32).bool(message.latestHeight);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryConsensusStateRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.clientId = reader.string();
              break;
            case 2:
              message.revisionNumber = reader.uint64();
              break;
            case 3:
              message.revisionHeight = reader.uint64();
              break;
            case 4:
              message.latestHeight = reader.bool();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          clientId: (0, helpers_1.isSet)(object.clientId) ? String(object.clientId) : "",
          revisionNumber: (0, helpers_1.isSet)(object.revisionNumber) ? helpers_1.Long.fromValue(object.revisionNumber) : helpers_1.Long.UZERO,
          revisionHeight: (0, helpers_1.isSet)(object.revisionHeight) ? helpers_1.Long.fromValue(object.revisionHeight) : helpers_1.Long.UZERO,
          latestHeight: (0, helpers_1.isSet)(object.latestHeight) ? Boolean(object.latestHeight) : false
        };
      },
      toJSON(message) {
        const obj = {};
        message.clientId !== void 0 && (obj.clientId = message.clientId);
        message.revisionNumber !== void 0 && (obj.revisionNumber = (message.revisionNumber || helpers_1.Long.UZERO).toString());
        message.revisionHeight !== void 0 && (obj.revisionHeight = (message.revisionHeight || helpers_1.Long.UZERO).toString());
        message.latestHeight !== void 0 && (obj.latestHeight = message.latestHeight);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryConsensusStateRequest();
        message.clientId = object.clientId ?? "";
        message.revisionNumber = object.revisionNumber !== void 0 && object.revisionNumber !== null ? helpers_1.Long.fromValue(object.revisionNumber) : helpers_1.Long.UZERO;
        message.revisionHeight = object.revisionHeight !== void 0 && object.revisionHeight !== null ? helpers_1.Long.fromValue(object.revisionHeight) : helpers_1.Long.UZERO;
        message.latestHeight = object.latestHeight ?? false;
        return message;
      }
    };
    function createBaseQueryConsensusStateResponse() {
      return {
        consensusState: void 0,
        proof: new Uint8Array(),
        proofHeight: void 0
      };
    }
    exports.QueryConsensusStateResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.consensusState !== void 0) {
          any_1.Any.encode(message.consensusState, writer.uint32(10).fork()).ldelim();
        }
        if (message.proof.length !== 0) {
          writer.uint32(18).bytes(message.proof);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryConsensusStateResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.consensusState = any_1.Any.decode(reader, reader.uint32());
              break;
            case 2:
              message.proof = reader.bytes();
              break;
            case 3:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          consensusState: (0, helpers_1.isSet)(object.consensusState) ? any_1.Any.fromJSON(object.consensusState) : void 0,
          proof: (0, helpers_1.isSet)(object.proof) ? (0, helpers_1.bytesFromBase64)(object.proof) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.consensusState !== void 0 && (obj.consensusState = message.consensusState ? any_1.Any.toJSON(message.consensusState) : void 0);
        message.proof !== void 0 && (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== void 0 ? message.proof : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryConsensusStateResponse();
        message.consensusState = object.consensusState !== void 0 && object.consensusState !== null ? any_1.Any.fromPartial(object.consensusState) : void 0;
        message.proof = object.proof ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        return message;
      }
    };
    function createBaseQueryConsensusStatesRequest() {
      return {
        clientId: "",
        pagination: void 0
      };
    }
    exports.QueryConsensusStatesRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.clientId !== "") {
          writer.uint32(10).string(message.clientId);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryConsensusStatesRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.clientId = reader.string();
              break;
            case 2:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          clientId: (0, helpers_1.isSet)(object.clientId) ? String(object.clientId) : "",
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.clientId !== void 0 && (obj.clientId = message.clientId);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryConsensusStatesRequest();
        message.clientId = object.clientId ?? "";
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryConsensusStatesResponse() {
      return {
        consensusStates: [],
        pagination: void 0
      };
    }
    exports.QueryConsensusStatesResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.consensusStates) {
          client_1.ConsensusStateWithHeight.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryConsensusStatesResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.consensusStates.push(client_1.ConsensusStateWithHeight.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          consensusStates: Array.isArray(object == null ? void 0 : object.consensusStates) ? object.consensusStates.map((e) => client_1.ConsensusStateWithHeight.fromJSON(e)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.consensusStates) {
          obj.consensusStates = message.consensusStates.map((e) => e ? client_1.ConsensusStateWithHeight.toJSON(e) : void 0);
        } else {
          obj.consensusStates = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryConsensusStatesResponse();
        message.consensusStates = ((_a = object.consensusStates) == null ? void 0 : _a.map((e) => client_1.ConsensusStateWithHeight.fromPartial(e))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryConsensusStateHeightsRequest() {
      return {
        clientId: "",
        pagination: void 0
      };
    }
    exports.QueryConsensusStateHeightsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.clientId !== "") {
          writer.uint32(10).string(message.clientId);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryConsensusStateHeightsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.clientId = reader.string();
              break;
            case 2:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          clientId: (0, helpers_1.isSet)(object.clientId) ? String(object.clientId) : "",
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.clientId !== void 0 && (obj.clientId = message.clientId);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryConsensusStateHeightsRequest();
        message.clientId = object.clientId ?? "";
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryConsensusStateHeightsResponse() {
      return {
        consensusStateHeights: [],
        pagination: void 0
      };
    }
    exports.QueryConsensusStateHeightsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.consensusStateHeights) {
          client_1.Height.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryConsensusStateHeightsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.consensusStateHeights.push(client_1.Height.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          consensusStateHeights: Array.isArray(object == null ? void 0 : object.consensusStateHeights) ? object.consensusStateHeights.map((e) => client_1.Height.fromJSON(e)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.consensusStateHeights) {
          obj.consensusStateHeights = message.consensusStateHeights.map((e) => e ? client_1.Height.toJSON(e) : void 0);
        } else {
          obj.consensusStateHeights = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryConsensusStateHeightsResponse();
        message.consensusStateHeights = ((_a = object.consensusStateHeights) == null ? void 0 : _a.map((e) => client_1.Height.fromPartial(e))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryClientStatusRequest() {
      return {
        clientId: ""
      };
    }
    exports.QueryClientStatusRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.clientId !== "") {
          writer.uint32(10).string(message.clientId);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryClientStatusRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.clientId = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          clientId: (0, helpers_1.isSet)(object.clientId) ? String(object.clientId) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.clientId !== void 0 && (obj.clientId = message.clientId);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryClientStatusRequest();
        message.clientId = object.clientId ?? "";
        return message;
      }
    };
    function createBaseQueryClientStatusResponse() {
      return {
        status: ""
      };
    }
    exports.QueryClientStatusResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.status !== "") {
          writer.uint32(10).string(message.status);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryClientStatusResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.status = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          status: (0, helpers_1.isSet)(object.status) ? String(object.status) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.status !== void 0 && (obj.status = message.status);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryClientStatusResponse();
        message.status = object.status ?? "";
        return message;
      }
    };
    function createBaseQueryClientParamsRequest() {
      return {};
    }
    exports.QueryClientParamsRequest = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryClientParamsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseQueryClientParamsRequest();
        return message;
      }
    };
    function createBaseQueryClientParamsResponse() {
      return {
        params: void 0
      };
    }
    exports.QueryClientParamsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.params !== void 0) {
          client_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryClientParamsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.params = client_1.Params.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          params: (0, helpers_1.isSet)(object.params) ? client_1.Params.fromJSON(object.params) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.params !== void 0 && (obj.params = message.params ? client_1.Params.toJSON(message.params) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryClientParamsResponse();
        message.params = object.params !== void 0 && object.params !== null ? client_1.Params.fromPartial(object.params) : void 0;
        return message;
      }
    };
    function createBaseQueryUpgradedClientStateRequest() {
      return {};
    }
    exports.QueryUpgradedClientStateRequest = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryUpgradedClientStateRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseQueryUpgradedClientStateRequest();
        return message;
      }
    };
    function createBaseQueryUpgradedClientStateResponse() {
      return {
        upgradedClientState: void 0
      };
    }
    exports.QueryUpgradedClientStateResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.upgradedClientState !== void 0) {
          any_1.Any.encode(message.upgradedClientState, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryUpgradedClientStateResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.upgradedClientState = any_1.Any.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          upgradedClientState: (0, helpers_1.isSet)(object.upgradedClientState) ? any_1.Any.fromJSON(object.upgradedClientState) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.upgradedClientState !== void 0 && (obj.upgradedClientState = message.upgradedClientState ? any_1.Any.toJSON(message.upgradedClientState) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryUpgradedClientStateResponse();
        message.upgradedClientState = object.upgradedClientState !== void 0 && object.upgradedClientState !== null ? any_1.Any.fromPartial(object.upgradedClientState) : void 0;
        return message;
      }
    };
    function createBaseQueryUpgradedConsensusStateRequest() {
      return {};
    }
    exports.QueryUpgradedConsensusStateRequest = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryUpgradedConsensusStateRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseQueryUpgradedConsensusStateRequest();
        return message;
      }
    };
    function createBaseQueryUpgradedConsensusStateResponse() {
      return {
        upgradedConsensusState: void 0
      };
    }
    exports.QueryUpgradedConsensusStateResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.upgradedConsensusState !== void 0) {
          any_1.Any.encode(message.upgradedConsensusState, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryUpgradedConsensusStateResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.upgradedConsensusState = any_1.Any.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          upgradedConsensusState: (0, helpers_1.isSet)(object.upgradedConsensusState) ? any_1.Any.fromJSON(object.upgradedConsensusState) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.upgradedConsensusState !== void 0 && (obj.upgradedConsensusState = message.upgradedConsensusState ? any_1.Any.toJSON(message.upgradedConsensusState) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryUpgradedConsensusStateResponse();
        message.upgradedConsensusState = object.upgradedConsensusState !== void 0 && object.upgradedConsensusState !== null ? any_1.Any.fromPartial(object.upgradedConsensusState) : void 0;
        return message;
      }
    };
    var QueryClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.ClientState = this.ClientState.bind(this);
        this.ClientStates = this.ClientStates.bind(this);
        this.ConsensusState = this.ConsensusState.bind(this);
        this.ConsensusStates = this.ConsensusStates.bind(this);
        this.ConsensusStateHeights = this.ConsensusStateHeights.bind(this);
        this.ClientStatus = this.ClientStatus.bind(this);
        this.ClientParams = this.ClientParams.bind(this);
        this.UpgradedClientState = this.UpgradedClientState.bind(this);
        this.UpgradedConsensusState = this.UpgradedConsensusState.bind(this);
      }
      ClientState(request) {
        const data = exports.QueryClientStateRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.client.v1.Query", "ClientState", data);
        return promise.then((data2) => exports.QueryClientStateResponse.decode(new _m0.Reader(data2)));
      }
      ClientStates(request = {
        pagination: void 0
      }) {
        const data = exports.QueryClientStatesRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.client.v1.Query", "ClientStates", data);
        return promise.then((data2) => exports.QueryClientStatesResponse.decode(new _m0.Reader(data2)));
      }
      ConsensusState(request) {
        const data = exports.QueryConsensusStateRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.client.v1.Query", "ConsensusState", data);
        return promise.then((data2) => exports.QueryConsensusStateResponse.decode(new _m0.Reader(data2)));
      }
      ConsensusStates(request) {
        const data = exports.QueryConsensusStatesRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.client.v1.Query", "ConsensusStates", data);
        return promise.then((data2) => exports.QueryConsensusStatesResponse.decode(new _m0.Reader(data2)));
      }
      ConsensusStateHeights(request) {
        const data = exports.QueryConsensusStateHeightsRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.client.v1.Query", "ConsensusStateHeights", data);
        return promise.then((data2) => exports.QueryConsensusStateHeightsResponse.decode(new _m0.Reader(data2)));
      }
      ClientStatus(request) {
        const data = exports.QueryClientStatusRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.client.v1.Query", "ClientStatus", data);
        return promise.then((data2) => exports.QueryClientStatusResponse.decode(new _m0.Reader(data2)));
      }
      ClientParams(request = {}) {
        const data = exports.QueryClientParamsRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.client.v1.Query", "ClientParams", data);
        return promise.then((data2) => exports.QueryClientParamsResponse.decode(new _m0.Reader(data2)));
      }
      UpgradedClientState(request = {}) {
        const data = exports.QueryUpgradedClientStateRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.client.v1.Query", "UpgradedClientState", data);
        return promise.then((data2) => exports.QueryUpgradedClientStateResponse.decode(new _m0.Reader(data2)));
      }
      UpgradedConsensusState(request = {}) {
        const data = exports.QueryUpgradedConsensusStateRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.client.v1.Query", "UpgradedConsensusState", data);
        return promise.then((data2) => exports.QueryUpgradedConsensusStateResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.QueryClientImpl = QueryClientImpl;
  }
});

// node_modules/cosmjs-types/ibc/core/connection/v1/query.js
var require_query10 = __commonJS({
  "node_modules/cosmjs-types/ibc/core/connection/v1/query.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.QueryClientImpl = exports.QueryConnectionConsensusStateResponse = exports.QueryConnectionConsensusStateRequest = exports.QueryConnectionClientStateResponse = exports.QueryConnectionClientStateRequest = exports.QueryClientConnectionsResponse = exports.QueryClientConnectionsRequest = exports.QueryConnectionsResponse = exports.QueryConnectionsRequest = exports.QueryConnectionResponse = exports.QueryConnectionRequest = exports.protobufPackage = void 0;
    var pagination_1 = require_pagination();
    var connection_1 = require_connection();
    var client_1 = require_client();
    var any_1 = require_any();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "ibc.core.connection.v1";
    function createBaseQueryConnectionRequest() {
      return {
        connectionId: ""
      };
    }
    exports.QueryConnectionRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.connectionId !== "") {
          writer.uint32(10).string(message.connectionId);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryConnectionRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.connectionId = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          connectionId: (0, helpers_1.isSet)(object.connectionId) ? String(object.connectionId) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.connectionId !== void 0 && (obj.connectionId = message.connectionId);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryConnectionRequest();
        message.connectionId = object.connectionId ?? "";
        return message;
      }
    };
    function createBaseQueryConnectionResponse() {
      return {
        connection: void 0,
        proof: new Uint8Array(),
        proofHeight: void 0
      };
    }
    exports.QueryConnectionResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.connection !== void 0) {
          connection_1.ConnectionEnd.encode(message.connection, writer.uint32(10).fork()).ldelim();
        }
        if (message.proof.length !== 0) {
          writer.uint32(18).bytes(message.proof);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryConnectionResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.connection = connection_1.ConnectionEnd.decode(reader, reader.uint32());
              break;
            case 2:
              message.proof = reader.bytes();
              break;
            case 3:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          connection: (0, helpers_1.isSet)(object.connection) ? connection_1.ConnectionEnd.fromJSON(object.connection) : void 0,
          proof: (0, helpers_1.isSet)(object.proof) ? (0, helpers_1.bytesFromBase64)(object.proof) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.connection !== void 0 && (obj.connection = message.connection ? connection_1.ConnectionEnd.toJSON(message.connection) : void 0);
        message.proof !== void 0 && (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== void 0 ? message.proof : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryConnectionResponse();
        message.connection = object.connection !== void 0 && object.connection !== null ? connection_1.ConnectionEnd.fromPartial(object.connection) : void 0;
        message.proof = object.proof ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        return message;
      }
    };
    function createBaseQueryConnectionsRequest() {
      return {
        pagination: void 0
      };
    }
    exports.QueryConnectionsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryConnectionsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryConnectionsRequest();
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryConnectionsResponse() {
      return {
        connections: [],
        pagination: void 0,
        height: void 0
      };
    }
    exports.QueryConnectionsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.connections) {
          connection_1.IdentifiedConnection.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        if (message.height !== void 0) {
          client_1.Height.encode(message.height, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryConnectionsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.connections.push(connection_1.IdentifiedConnection.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            case 3:
              message.height = client_1.Height.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          connections: Array.isArray(object == null ? void 0 : object.connections) ? object.connections.map((e) => connection_1.IdentifiedConnection.fromJSON(e)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0,
          height: (0, helpers_1.isSet)(object.height) ? client_1.Height.fromJSON(object.height) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.connections) {
          obj.connections = message.connections.map((e) => e ? connection_1.IdentifiedConnection.toJSON(e) : void 0);
        } else {
          obj.connections = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        message.height !== void 0 && (obj.height = message.height ? client_1.Height.toJSON(message.height) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryConnectionsResponse();
        message.connections = ((_a = object.connections) == null ? void 0 : _a.map((e) => connection_1.IdentifiedConnection.fromPartial(e))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        message.height = object.height !== void 0 && object.height !== null ? client_1.Height.fromPartial(object.height) : void 0;
        return message;
      }
    };
    function createBaseQueryClientConnectionsRequest() {
      return {
        clientId: ""
      };
    }
    exports.QueryClientConnectionsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.clientId !== "") {
          writer.uint32(10).string(message.clientId);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryClientConnectionsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.clientId = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          clientId: (0, helpers_1.isSet)(object.clientId) ? String(object.clientId) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.clientId !== void 0 && (obj.clientId = message.clientId);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryClientConnectionsRequest();
        message.clientId = object.clientId ?? "";
        return message;
      }
    };
    function createBaseQueryClientConnectionsResponse() {
      return {
        connectionPaths: [],
        proof: new Uint8Array(),
        proofHeight: void 0
      };
    }
    exports.QueryClientConnectionsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.connectionPaths) {
          writer.uint32(10).string(v);
        }
        if (message.proof.length !== 0) {
          writer.uint32(18).bytes(message.proof);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryClientConnectionsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.connectionPaths.push(reader.string());
              break;
            case 2:
              message.proof = reader.bytes();
              break;
            case 3:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          connectionPaths: Array.isArray(object == null ? void 0 : object.connectionPaths) ? object.connectionPaths.map((e) => String(e)) : [],
          proof: (0, helpers_1.isSet)(object.proof) ? (0, helpers_1.bytesFromBase64)(object.proof) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.connectionPaths) {
          obj.connectionPaths = message.connectionPaths.map((e) => e);
        } else {
          obj.connectionPaths = [];
        }
        message.proof !== void 0 && (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== void 0 ? message.proof : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryClientConnectionsResponse();
        message.connectionPaths = ((_a = object.connectionPaths) == null ? void 0 : _a.map((e) => e)) || [];
        message.proof = object.proof ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        return message;
      }
    };
    function createBaseQueryConnectionClientStateRequest() {
      return {
        connectionId: ""
      };
    }
    exports.QueryConnectionClientStateRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.connectionId !== "") {
          writer.uint32(10).string(message.connectionId);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryConnectionClientStateRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.connectionId = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          connectionId: (0, helpers_1.isSet)(object.connectionId) ? String(object.connectionId) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.connectionId !== void 0 && (obj.connectionId = message.connectionId);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryConnectionClientStateRequest();
        message.connectionId = object.connectionId ?? "";
        return message;
      }
    };
    function createBaseQueryConnectionClientStateResponse() {
      return {
        identifiedClientState: void 0,
        proof: new Uint8Array(),
        proofHeight: void 0
      };
    }
    exports.QueryConnectionClientStateResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.identifiedClientState !== void 0) {
          client_1.IdentifiedClientState.encode(message.identifiedClientState, writer.uint32(10).fork()).ldelim();
        }
        if (message.proof.length !== 0) {
          writer.uint32(18).bytes(message.proof);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryConnectionClientStateResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.identifiedClientState = client_1.IdentifiedClientState.decode(reader, reader.uint32());
              break;
            case 2:
              message.proof = reader.bytes();
              break;
            case 3:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          identifiedClientState: (0, helpers_1.isSet)(object.identifiedClientState) ? client_1.IdentifiedClientState.fromJSON(object.identifiedClientState) : void 0,
          proof: (0, helpers_1.isSet)(object.proof) ? (0, helpers_1.bytesFromBase64)(object.proof) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.identifiedClientState !== void 0 && (obj.identifiedClientState = message.identifiedClientState ? client_1.IdentifiedClientState.toJSON(message.identifiedClientState) : void 0);
        message.proof !== void 0 && (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== void 0 ? message.proof : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryConnectionClientStateResponse();
        message.identifiedClientState = object.identifiedClientState !== void 0 && object.identifiedClientState !== null ? client_1.IdentifiedClientState.fromPartial(object.identifiedClientState) : void 0;
        message.proof = object.proof ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        return message;
      }
    };
    function createBaseQueryConnectionConsensusStateRequest() {
      return {
        connectionId: "",
        revisionNumber: helpers_1.Long.UZERO,
        revisionHeight: helpers_1.Long.UZERO
      };
    }
    exports.QueryConnectionConsensusStateRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.connectionId !== "") {
          writer.uint32(10).string(message.connectionId);
        }
        if (!message.revisionNumber.isZero()) {
          writer.uint32(16).uint64(message.revisionNumber);
        }
        if (!message.revisionHeight.isZero()) {
          writer.uint32(24).uint64(message.revisionHeight);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryConnectionConsensusStateRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.connectionId = reader.string();
              break;
            case 2:
              message.revisionNumber = reader.uint64();
              break;
            case 3:
              message.revisionHeight = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          connectionId: (0, helpers_1.isSet)(object.connectionId) ? String(object.connectionId) : "",
          revisionNumber: (0, helpers_1.isSet)(object.revisionNumber) ? helpers_1.Long.fromValue(object.revisionNumber) : helpers_1.Long.UZERO,
          revisionHeight: (0, helpers_1.isSet)(object.revisionHeight) ? helpers_1.Long.fromValue(object.revisionHeight) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.connectionId !== void 0 && (obj.connectionId = message.connectionId);
        message.revisionNumber !== void 0 && (obj.revisionNumber = (message.revisionNumber || helpers_1.Long.UZERO).toString());
        message.revisionHeight !== void 0 && (obj.revisionHeight = (message.revisionHeight || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryConnectionConsensusStateRequest();
        message.connectionId = object.connectionId ?? "";
        message.revisionNumber = object.revisionNumber !== void 0 && object.revisionNumber !== null ? helpers_1.Long.fromValue(object.revisionNumber) : helpers_1.Long.UZERO;
        message.revisionHeight = object.revisionHeight !== void 0 && object.revisionHeight !== null ? helpers_1.Long.fromValue(object.revisionHeight) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseQueryConnectionConsensusStateResponse() {
      return {
        consensusState: void 0,
        clientId: "",
        proof: new Uint8Array(),
        proofHeight: void 0
      };
    }
    exports.QueryConnectionConsensusStateResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.consensusState !== void 0) {
          any_1.Any.encode(message.consensusState, writer.uint32(10).fork()).ldelim();
        }
        if (message.clientId !== "") {
          writer.uint32(18).string(message.clientId);
        }
        if (message.proof.length !== 0) {
          writer.uint32(26).bytes(message.proof);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryConnectionConsensusStateResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.consensusState = any_1.Any.decode(reader, reader.uint32());
              break;
            case 2:
              message.clientId = reader.string();
              break;
            case 3:
              message.proof = reader.bytes();
              break;
            case 4:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          consensusState: (0, helpers_1.isSet)(object.consensusState) ? any_1.Any.fromJSON(object.consensusState) : void 0,
          clientId: (0, helpers_1.isSet)(object.clientId) ? String(object.clientId) : "",
          proof: (0, helpers_1.isSet)(object.proof) ? (0, helpers_1.bytesFromBase64)(object.proof) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.consensusState !== void 0 && (obj.consensusState = message.consensusState ? any_1.Any.toJSON(message.consensusState) : void 0);
        message.clientId !== void 0 && (obj.clientId = message.clientId);
        message.proof !== void 0 && (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== void 0 ? message.proof : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryConnectionConsensusStateResponse();
        message.consensusState = object.consensusState !== void 0 && object.consensusState !== null ? any_1.Any.fromPartial(object.consensusState) : void 0;
        message.clientId = object.clientId ?? "";
        message.proof = object.proof ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        return message;
      }
    };
    var QueryClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.Connection = this.Connection.bind(this);
        this.Connections = this.Connections.bind(this);
        this.ClientConnections = this.ClientConnections.bind(this);
        this.ConnectionClientState = this.ConnectionClientState.bind(this);
        this.ConnectionConsensusState = this.ConnectionConsensusState.bind(this);
      }
      Connection(request) {
        const data = exports.QueryConnectionRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.connection.v1.Query", "Connection", data);
        return promise.then((data2) => exports.QueryConnectionResponse.decode(new _m0.Reader(data2)));
      }
      Connections(request = {
        pagination: void 0
      }) {
        const data = exports.QueryConnectionsRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.connection.v1.Query", "Connections", data);
        return promise.then((data2) => exports.QueryConnectionsResponse.decode(new _m0.Reader(data2)));
      }
      ClientConnections(request) {
        const data = exports.QueryClientConnectionsRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.connection.v1.Query", "ClientConnections", data);
        return promise.then((data2) => exports.QueryClientConnectionsResponse.decode(new _m0.Reader(data2)));
      }
      ConnectionClientState(request) {
        const data = exports.QueryConnectionClientStateRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.connection.v1.Query", "ConnectionClientState", data);
        return promise.then((data2) => exports.QueryConnectionClientStateResponse.decode(new _m0.Reader(data2)));
      }
      ConnectionConsensusState(request) {
        const data = exports.QueryConnectionConsensusStateRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.connection.v1.Query", "ConnectionConsensusState", data);
        return promise.then((data2) => exports.QueryConnectionConsensusStateResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.QueryClientImpl = QueryClientImpl;
  }
});

// node_modules/cosmjs-types/tendermint/crypto/proof.js
var require_proof = __commonJS({
  "node_modules/cosmjs-types/tendermint/crypto/proof.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ProofOps = exports.ProofOp = exports.DominoOp = exports.ValueOp = exports.Proof = exports.protobufPackage = void 0;
    var helpers_1 = require_helpers();
    var _m0 = __importStar(require_minimal());
    exports.protobufPackage = "tendermint.crypto";
    function createBaseProof() {
      return {
        total: helpers_1.Long.ZERO,
        index: helpers_1.Long.ZERO,
        leafHash: new Uint8Array(),
        aunts: []
      };
    }
    exports.Proof = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.total.isZero()) {
          writer.uint32(8).int64(message.total);
        }
        if (!message.index.isZero()) {
          writer.uint32(16).int64(message.index);
        }
        if (message.leafHash.length !== 0) {
          writer.uint32(26).bytes(message.leafHash);
        }
        for (const v of message.aunts) {
          writer.uint32(34).bytes(v);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseProof();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.total = reader.int64();
              break;
            case 2:
              message.index = reader.int64();
              break;
            case 3:
              message.leafHash = reader.bytes();
              break;
            case 4:
              message.aunts.push(reader.bytes());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          total: (0, helpers_1.isSet)(object.total) ? helpers_1.Long.fromValue(object.total) : helpers_1.Long.ZERO,
          index: (0, helpers_1.isSet)(object.index) ? helpers_1.Long.fromValue(object.index) : helpers_1.Long.ZERO,
          leafHash: (0, helpers_1.isSet)(object.leafHash) ? (0, helpers_1.bytesFromBase64)(object.leafHash) : new Uint8Array(),
          aunts: Array.isArray(object == null ? void 0 : object.aunts) ? object.aunts.map((e) => (0, helpers_1.bytesFromBase64)(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.total !== void 0 && (obj.total = (message.total || helpers_1.Long.ZERO).toString());
        message.index !== void 0 && (obj.index = (message.index || helpers_1.Long.ZERO).toString());
        message.leafHash !== void 0 && (obj.leafHash = (0, helpers_1.base64FromBytes)(message.leafHash !== void 0 ? message.leafHash : new Uint8Array()));
        if (message.aunts) {
          obj.aunts = message.aunts.map((e) => (0, helpers_1.base64FromBytes)(e !== void 0 ? e : new Uint8Array()));
        } else {
          obj.aunts = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseProof();
        message.total = object.total !== void 0 && object.total !== null ? helpers_1.Long.fromValue(object.total) : helpers_1.Long.ZERO;
        message.index = object.index !== void 0 && object.index !== null ? helpers_1.Long.fromValue(object.index) : helpers_1.Long.ZERO;
        message.leafHash = object.leafHash ?? new Uint8Array();
        message.aunts = ((_a = object.aunts) == null ? void 0 : _a.map((e) => e)) || [];
        return message;
      }
    };
    function createBaseValueOp() {
      return {
        key: new Uint8Array(),
        proof: void 0
      };
    }
    exports.ValueOp = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.key.length !== 0) {
          writer.uint32(10).bytes(message.key);
        }
        if (message.proof !== void 0) {
          exports.Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseValueOp();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.key = reader.bytes();
              break;
            case 2:
              message.proof = exports.Proof.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          key: (0, helpers_1.isSet)(object.key) ? (0, helpers_1.bytesFromBase64)(object.key) : new Uint8Array(),
          proof: (0, helpers_1.isSet)(object.proof) ? exports.Proof.fromJSON(object.proof) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.key !== void 0 && (obj.key = (0, helpers_1.base64FromBytes)(message.key !== void 0 ? message.key : new Uint8Array()));
        message.proof !== void 0 && (obj.proof = message.proof ? exports.Proof.toJSON(message.proof) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseValueOp();
        message.key = object.key ?? new Uint8Array();
        message.proof = object.proof !== void 0 && object.proof !== null ? exports.Proof.fromPartial(object.proof) : void 0;
        return message;
      }
    };
    function createBaseDominoOp() {
      return {
        key: "",
        input: "",
        output: ""
      };
    }
    exports.DominoOp = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.key !== "") {
          writer.uint32(10).string(message.key);
        }
        if (message.input !== "") {
          writer.uint32(18).string(message.input);
        }
        if (message.output !== "") {
          writer.uint32(26).string(message.output);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseDominoOp();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.key = reader.string();
              break;
            case 2:
              message.input = reader.string();
              break;
            case 3:
              message.output = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          key: (0, helpers_1.isSet)(object.key) ? String(object.key) : "",
          input: (0, helpers_1.isSet)(object.input) ? String(object.input) : "",
          output: (0, helpers_1.isSet)(object.output) ? String(object.output) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.key !== void 0 && (obj.key = message.key);
        message.input !== void 0 && (obj.input = message.input);
        message.output !== void 0 && (obj.output = message.output);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseDominoOp();
        message.key = object.key ?? "";
        message.input = object.input ?? "";
        message.output = object.output ?? "";
        return message;
      }
    };
    function createBaseProofOp() {
      return {
        type: "",
        key: new Uint8Array(),
        data: new Uint8Array()
      };
    }
    exports.ProofOp = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.type !== "") {
          writer.uint32(10).string(message.type);
        }
        if (message.key.length !== 0) {
          writer.uint32(18).bytes(message.key);
        }
        if (message.data.length !== 0) {
          writer.uint32(26).bytes(message.data);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseProofOp();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.type = reader.string();
              break;
            case 2:
              message.key = reader.bytes();
              break;
            case 3:
              message.data = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          type: (0, helpers_1.isSet)(object.type) ? String(object.type) : "",
          key: (0, helpers_1.isSet)(object.key) ? (0, helpers_1.bytesFromBase64)(object.key) : new Uint8Array(),
          data: (0, helpers_1.isSet)(object.data) ? (0, helpers_1.bytesFromBase64)(object.data) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.type !== void 0 && (obj.type = message.type);
        message.key !== void 0 && (obj.key = (0, helpers_1.base64FromBytes)(message.key !== void 0 ? message.key : new Uint8Array()));
        message.data !== void 0 && (obj.data = (0, helpers_1.base64FromBytes)(message.data !== void 0 ? message.data : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseProofOp();
        message.type = object.type ?? "";
        message.key = object.key ?? new Uint8Array();
        message.data = object.data ?? new Uint8Array();
        return message;
      }
    };
    function createBaseProofOps() {
      return {
        ops: []
      };
    }
    exports.ProofOps = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.ops) {
          exports.ProofOp.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseProofOps();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.ops.push(exports.ProofOp.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          ops: Array.isArray(object == null ? void 0 : object.ops) ? object.ops.map((e) => exports.ProofOp.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.ops) {
          obj.ops = message.ops.map((e) => e ? exports.ProofOp.toJSON(e) : void 0);
        } else {
          obj.ops = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseProofOps();
        message.ops = ((_a = object.ops) == null ? void 0 : _a.map((e) => exports.ProofOp.fromPartial(e))) || [];
        return message;
      }
    };
  }
});

// node_modules/cosmjs-types/tendermint/version/types.js
var require_types = __commonJS({
  "node_modules/cosmjs-types/tendermint/version/types.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Consensus = exports.App = exports.protobufPackage = void 0;
    var helpers_1 = require_helpers();
    var _m0 = __importStar(require_minimal());
    exports.protobufPackage = "tendermint.version";
    function createBaseApp() {
      return {
        protocol: helpers_1.Long.UZERO,
        software: ""
      };
    }
    exports.App = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.protocol.isZero()) {
          writer.uint32(8).uint64(message.protocol);
        }
        if (message.software !== "") {
          writer.uint32(18).string(message.software);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseApp();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.protocol = reader.uint64();
              break;
            case 2:
              message.software = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          protocol: (0, helpers_1.isSet)(object.protocol) ? helpers_1.Long.fromValue(object.protocol) : helpers_1.Long.UZERO,
          software: (0, helpers_1.isSet)(object.software) ? String(object.software) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.protocol !== void 0 && (obj.protocol = (message.protocol || helpers_1.Long.UZERO).toString());
        message.software !== void 0 && (obj.software = message.software);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseApp();
        message.protocol = object.protocol !== void 0 && object.protocol !== null ? helpers_1.Long.fromValue(object.protocol) : helpers_1.Long.UZERO;
        message.software = object.software ?? "";
        return message;
      }
    };
    function createBaseConsensus() {
      return {
        block: helpers_1.Long.UZERO,
        app: helpers_1.Long.UZERO
      };
    }
    exports.Consensus = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.block.isZero()) {
          writer.uint32(8).uint64(message.block);
        }
        if (!message.app.isZero()) {
          writer.uint32(16).uint64(message.app);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseConsensus();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.block = reader.uint64();
              break;
            case 2:
              message.app = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          block: (0, helpers_1.isSet)(object.block) ? helpers_1.Long.fromValue(object.block) : helpers_1.Long.UZERO,
          app: (0, helpers_1.isSet)(object.app) ? helpers_1.Long.fromValue(object.app) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.block !== void 0 && (obj.block = (message.block || helpers_1.Long.UZERO).toString());
        message.app !== void 0 && (obj.app = (message.app || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseConsensus();
        message.block = object.block !== void 0 && object.block !== null ? helpers_1.Long.fromValue(object.block) : helpers_1.Long.UZERO;
        message.app = object.app !== void 0 && object.app !== null ? helpers_1.Long.fromValue(object.app) : helpers_1.Long.UZERO;
        return message;
      }
    };
  }
});

// node_modules/cosmjs-types/tendermint/crypto/keys.js
var require_keys4 = __commonJS({
  "node_modules/cosmjs-types/tendermint/crypto/keys.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PublicKey = exports.protobufPackage = void 0;
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "tendermint.crypto";
    function createBasePublicKey() {
      return {
        ed25519: void 0,
        secp256k1: void 0
      };
    }
    exports.PublicKey = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.ed25519 !== void 0) {
          writer.uint32(10).bytes(message.ed25519);
        }
        if (message.secp256k1 !== void 0) {
          writer.uint32(18).bytes(message.secp256k1);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBasePublicKey();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.ed25519 = reader.bytes();
              break;
            case 2:
              message.secp256k1 = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          ed25519: (0, helpers_1.isSet)(object.ed25519) ? (0, helpers_1.bytesFromBase64)(object.ed25519) : void 0,
          secp256k1: (0, helpers_1.isSet)(object.secp256k1) ? (0, helpers_1.bytesFromBase64)(object.secp256k1) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.ed25519 !== void 0 && (obj.ed25519 = message.ed25519 !== void 0 ? (0, helpers_1.base64FromBytes)(message.ed25519) : void 0);
        message.secp256k1 !== void 0 && (obj.secp256k1 = message.secp256k1 !== void 0 ? (0, helpers_1.base64FromBytes)(message.secp256k1) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBasePublicKey();
        message.ed25519 = object.ed25519 ?? void 0;
        message.secp256k1 = object.secp256k1 ?? void 0;
        return message;
      }
    };
  }
});

// node_modules/cosmjs-types/tendermint/types/validator.js
var require_validator = __commonJS({
  "node_modules/cosmjs-types/tendermint/types/validator.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SimpleValidator = exports.Validator = exports.ValidatorSet = exports.protobufPackage = void 0;
    var keys_1 = require_keys4();
    var helpers_1 = require_helpers();
    var _m0 = __importStar(require_minimal());
    exports.protobufPackage = "tendermint.types";
    function createBaseValidatorSet() {
      return {
        validators: [],
        proposer: void 0,
        totalVotingPower: helpers_1.Long.ZERO
      };
    }
    exports.ValidatorSet = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.validators) {
          exports.Validator.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.proposer !== void 0) {
          exports.Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();
        }
        if (!message.totalVotingPower.isZero()) {
          writer.uint32(24).int64(message.totalVotingPower);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseValidatorSet();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.validators.push(exports.Validator.decode(reader, reader.uint32()));
              break;
            case 2:
              message.proposer = exports.Validator.decode(reader, reader.uint32());
              break;
            case 3:
              message.totalVotingPower = reader.int64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          validators: Array.isArray(object == null ? void 0 : object.validators) ? object.validators.map((e) => exports.Validator.fromJSON(e)) : [],
          proposer: (0, helpers_1.isSet)(object.proposer) ? exports.Validator.fromJSON(object.proposer) : void 0,
          totalVotingPower: (0, helpers_1.isSet)(object.totalVotingPower) ? helpers_1.Long.fromValue(object.totalVotingPower) : helpers_1.Long.ZERO
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.validators) {
          obj.validators = message.validators.map((e) => e ? exports.Validator.toJSON(e) : void 0);
        } else {
          obj.validators = [];
        }
        message.proposer !== void 0 && (obj.proposer = message.proposer ? exports.Validator.toJSON(message.proposer) : void 0);
        message.totalVotingPower !== void 0 && (obj.totalVotingPower = (message.totalVotingPower || helpers_1.Long.ZERO).toString());
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseValidatorSet();
        message.validators = ((_a = object.validators) == null ? void 0 : _a.map((e) => exports.Validator.fromPartial(e))) || [];
        message.proposer = object.proposer !== void 0 && object.proposer !== null ? exports.Validator.fromPartial(object.proposer) : void 0;
        message.totalVotingPower = object.totalVotingPower !== void 0 && object.totalVotingPower !== null ? helpers_1.Long.fromValue(object.totalVotingPower) : helpers_1.Long.ZERO;
        return message;
      }
    };
    function createBaseValidator() {
      return {
        address: new Uint8Array(),
        pubKey: void 0,
        votingPower: helpers_1.Long.ZERO,
        proposerPriority: helpers_1.Long.ZERO
      };
    }
    exports.Validator = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.address.length !== 0) {
          writer.uint32(10).bytes(message.address);
        }
        if (message.pubKey !== void 0) {
          keys_1.PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();
        }
        if (!message.votingPower.isZero()) {
          writer.uint32(24).int64(message.votingPower);
        }
        if (!message.proposerPriority.isZero()) {
          writer.uint32(32).int64(message.proposerPriority);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseValidator();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.address = reader.bytes();
              break;
            case 2:
              message.pubKey = keys_1.PublicKey.decode(reader, reader.uint32());
              break;
            case 3:
              message.votingPower = reader.int64();
              break;
            case 4:
              message.proposerPriority = reader.int64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          address: (0, helpers_1.isSet)(object.address) ? (0, helpers_1.bytesFromBase64)(object.address) : new Uint8Array(),
          pubKey: (0, helpers_1.isSet)(object.pubKey) ? keys_1.PublicKey.fromJSON(object.pubKey) : void 0,
          votingPower: (0, helpers_1.isSet)(object.votingPower) ? helpers_1.Long.fromValue(object.votingPower) : helpers_1.Long.ZERO,
          proposerPriority: (0, helpers_1.isSet)(object.proposerPriority) ? helpers_1.Long.fromValue(object.proposerPriority) : helpers_1.Long.ZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.address !== void 0 && (obj.address = (0, helpers_1.base64FromBytes)(message.address !== void 0 ? message.address : new Uint8Array()));
        message.pubKey !== void 0 && (obj.pubKey = message.pubKey ? keys_1.PublicKey.toJSON(message.pubKey) : void 0);
        message.votingPower !== void 0 && (obj.votingPower = (message.votingPower || helpers_1.Long.ZERO).toString());
        message.proposerPriority !== void 0 && (obj.proposerPriority = (message.proposerPriority || helpers_1.Long.ZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseValidator();
        message.address = object.address ?? new Uint8Array();
        message.pubKey = object.pubKey !== void 0 && object.pubKey !== null ? keys_1.PublicKey.fromPartial(object.pubKey) : void 0;
        message.votingPower = object.votingPower !== void 0 && object.votingPower !== null ? helpers_1.Long.fromValue(object.votingPower) : helpers_1.Long.ZERO;
        message.proposerPriority = object.proposerPriority !== void 0 && object.proposerPriority !== null ? helpers_1.Long.fromValue(object.proposerPriority) : helpers_1.Long.ZERO;
        return message;
      }
    };
    function createBaseSimpleValidator() {
      return {
        pubKey: void 0,
        votingPower: helpers_1.Long.ZERO
      };
    }
    exports.SimpleValidator = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.pubKey !== void 0) {
          keys_1.PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();
        }
        if (!message.votingPower.isZero()) {
          writer.uint32(16).int64(message.votingPower);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseSimpleValidator();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.pubKey = keys_1.PublicKey.decode(reader, reader.uint32());
              break;
            case 2:
              message.votingPower = reader.int64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          pubKey: (0, helpers_1.isSet)(object.pubKey) ? keys_1.PublicKey.fromJSON(object.pubKey) : void 0,
          votingPower: (0, helpers_1.isSet)(object.votingPower) ? helpers_1.Long.fromValue(object.votingPower) : helpers_1.Long.ZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.pubKey !== void 0 && (obj.pubKey = message.pubKey ? keys_1.PublicKey.toJSON(message.pubKey) : void 0);
        message.votingPower !== void 0 && (obj.votingPower = (message.votingPower || helpers_1.Long.ZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseSimpleValidator();
        message.pubKey = object.pubKey !== void 0 && object.pubKey !== null ? keys_1.PublicKey.fromPartial(object.pubKey) : void 0;
        message.votingPower = object.votingPower !== void 0 && object.votingPower !== null ? helpers_1.Long.fromValue(object.votingPower) : helpers_1.Long.ZERO;
        return message;
      }
    };
  }
});

// node_modules/cosmjs-types/tendermint/types/types.js
var require_types2 = __commonJS({
  "node_modules/cosmjs-types/tendermint/types/types.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TxProof = exports.BlockMeta = exports.LightBlock = exports.SignedHeader = exports.Proposal = exports.CommitSig = exports.Commit = exports.Vote = exports.Data = exports.Header = exports.BlockID = exports.Part = exports.PartSetHeader = exports.signedMsgTypeToJSON = exports.signedMsgTypeFromJSON = exports.SignedMsgType = exports.blockIDFlagToJSON = exports.blockIDFlagFromJSON = exports.BlockIDFlag = exports.protobufPackage = void 0;
    var proof_1 = require_proof();
    var types_1 = require_types();
    var timestamp_1 = require_timestamp();
    var validator_1 = require_validator();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "tendermint.types";
    var BlockIDFlag;
    (function(BlockIDFlag2) {
      BlockIDFlag2[BlockIDFlag2["BLOCK_ID_FLAG_UNKNOWN"] = 0] = "BLOCK_ID_FLAG_UNKNOWN";
      BlockIDFlag2[BlockIDFlag2["BLOCK_ID_FLAG_ABSENT"] = 1] = "BLOCK_ID_FLAG_ABSENT";
      BlockIDFlag2[BlockIDFlag2["BLOCK_ID_FLAG_COMMIT"] = 2] = "BLOCK_ID_FLAG_COMMIT";
      BlockIDFlag2[BlockIDFlag2["BLOCK_ID_FLAG_NIL"] = 3] = "BLOCK_ID_FLAG_NIL";
      BlockIDFlag2[BlockIDFlag2["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
    })(BlockIDFlag = exports.BlockIDFlag || (exports.BlockIDFlag = {}));
    function blockIDFlagFromJSON(object) {
      switch (object) {
        case 0:
        case "BLOCK_ID_FLAG_UNKNOWN":
          return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;
        case 1:
        case "BLOCK_ID_FLAG_ABSENT":
          return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;
        case 2:
        case "BLOCK_ID_FLAG_COMMIT":
          return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;
        case 3:
        case "BLOCK_ID_FLAG_NIL":
          return BlockIDFlag.BLOCK_ID_FLAG_NIL;
        case -1:
        case "UNRECOGNIZED":
        default:
          return BlockIDFlag.UNRECOGNIZED;
      }
    }
    exports.blockIDFlagFromJSON = blockIDFlagFromJSON;
    function blockIDFlagToJSON(object) {
      switch (object) {
        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:
          return "BLOCK_ID_FLAG_UNKNOWN";
        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:
          return "BLOCK_ID_FLAG_ABSENT";
        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:
          return "BLOCK_ID_FLAG_COMMIT";
        case BlockIDFlag.BLOCK_ID_FLAG_NIL:
          return "BLOCK_ID_FLAG_NIL";
        case BlockIDFlag.UNRECOGNIZED:
        default:
          return "UNRECOGNIZED";
      }
    }
    exports.blockIDFlagToJSON = blockIDFlagToJSON;
    var SignedMsgType;
    (function(SignedMsgType2) {
      SignedMsgType2[SignedMsgType2["SIGNED_MSG_TYPE_UNKNOWN"] = 0] = "SIGNED_MSG_TYPE_UNKNOWN";
      SignedMsgType2[SignedMsgType2["SIGNED_MSG_TYPE_PREVOTE"] = 1] = "SIGNED_MSG_TYPE_PREVOTE";
      SignedMsgType2[SignedMsgType2["SIGNED_MSG_TYPE_PRECOMMIT"] = 2] = "SIGNED_MSG_TYPE_PRECOMMIT";
      SignedMsgType2[SignedMsgType2["SIGNED_MSG_TYPE_PROPOSAL"] = 32] = "SIGNED_MSG_TYPE_PROPOSAL";
      SignedMsgType2[SignedMsgType2["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
    })(SignedMsgType = exports.SignedMsgType || (exports.SignedMsgType = {}));
    function signedMsgTypeFromJSON(object) {
      switch (object) {
        case 0:
        case "SIGNED_MSG_TYPE_UNKNOWN":
          return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;
        case 1:
        case "SIGNED_MSG_TYPE_PREVOTE":
          return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;
        case 2:
        case "SIGNED_MSG_TYPE_PRECOMMIT":
          return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;
        case 32:
        case "SIGNED_MSG_TYPE_PROPOSAL":
          return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;
        case -1:
        case "UNRECOGNIZED":
        default:
          return SignedMsgType.UNRECOGNIZED;
      }
    }
    exports.signedMsgTypeFromJSON = signedMsgTypeFromJSON;
    function signedMsgTypeToJSON(object) {
      switch (object) {
        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:
          return "SIGNED_MSG_TYPE_UNKNOWN";
        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:
          return "SIGNED_MSG_TYPE_PREVOTE";
        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:
          return "SIGNED_MSG_TYPE_PRECOMMIT";
        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:
          return "SIGNED_MSG_TYPE_PROPOSAL";
        case SignedMsgType.UNRECOGNIZED:
        default:
          return "UNRECOGNIZED";
      }
    }
    exports.signedMsgTypeToJSON = signedMsgTypeToJSON;
    function createBasePartSetHeader() {
      return {
        total: 0,
        hash: new Uint8Array()
      };
    }
    exports.PartSetHeader = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.total !== 0) {
          writer.uint32(8).uint32(message.total);
        }
        if (message.hash.length !== 0) {
          writer.uint32(18).bytes(message.hash);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBasePartSetHeader();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.total = reader.uint32();
              break;
            case 2:
              message.hash = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          total: (0, helpers_1.isSet)(object.total) ? Number(object.total) : 0,
          hash: (0, helpers_1.isSet)(object.hash) ? (0, helpers_1.bytesFromBase64)(object.hash) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.total !== void 0 && (obj.total = Math.round(message.total));
        message.hash !== void 0 && (obj.hash = (0, helpers_1.base64FromBytes)(message.hash !== void 0 ? message.hash : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBasePartSetHeader();
        message.total = object.total ?? 0;
        message.hash = object.hash ?? new Uint8Array();
        return message;
      }
    };
    function createBasePart() {
      return {
        index: 0,
        bytes: new Uint8Array(),
        proof: void 0
      };
    }
    exports.Part = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.index !== 0) {
          writer.uint32(8).uint32(message.index);
        }
        if (message.bytes.length !== 0) {
          writer.uint32(18).bytes(message.bytes);
        }
        if (message.proof !== void 0) {
          proof_1.Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBasePart();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.index = reader.uint32();
              break;
            case 2:
              message.bytes = reader.bytes();
              break;
            case 3:
              message.proof = proof_1.Proof.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          index: (0, helpers_1.isSet)(object.index) ? Number(object.index) : 0,
          bytes: (0, helpers_1.isSet)(object.bytes) ? (0, helpers_1.bytesFromBase64)(object.bytes) : new Uint8Array(),
          proof: (0, helpers_1.isSet)(object.proof) ? proof_1.Proof.fromJSON(object.proof) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.index !== void 0 && (obj.index = Math.round(message.index));
        message.bytes !== void 0 && (obj.bytes = (0, helpers_1.base64FromBytes)(message.bytes !== void 0 ? message.bytes : new Uint8Array()));
        message.proof !== void 0 && (obj.proof = message.proof ? proof_1.Proof.toJSON(message.proof) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBasePart();
        message.index = object.index ?? 0;
        message.bytes = object.bytes ?? new Uint8Array();
        message.proof = object.proof !== void 0 && object.proof !== null ? proof_1.Proof.fromPartial(object.proof) : void 0;
        return message;
      }
    };
    function createBaseBlockID() {
      return {
        hash: new Uint8Array(),
        partSetHeader: void 0
      };
    }
    exports.BlockID = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.hash.length !== 0) {
          writer.uint32(10).bytes(message.hash);
        }
        if (message.partSetHeader !== void 0) {
          exports.PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseBlockID();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.hash = reader.bytes();
              break;
            case 2:
              message.partSetHeader = exports.PartSetHeader.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          hash: (0, helpers_1.isSet)(object.hash) ? (0, helpers_1.bytesFromBase64)(object.hash) : new Uint8Array(),
          partSetHeader: (0, helpers_1.isSet)(object.partSetHeader) ? exports.PartSetHeader.fromJSON(object.partSetHeader) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.hash !== void 0 && (obj.hash = (0, helpers_1.base64FromBytes)(message.hash !== void 0 ? message.hash : new Uint8Array()));
        message.partSetHeader !== void 0 && (obj.partSetHeader = message.partSetHeader ? exports.PartSetHeader.toJSON(message.partSetHeader) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseBlockID();
        message.hash = object.hash ?? new Uint8Array();
        message.partSetHeader = object.partSetHeader !== void 0 && object.partSetHeader !== null ? exports.PartSetHeader.fromPartial(object.partSetHeader) : void 0;
        return message;
      }
    };
    function createBaseHeader() {
      return {
        version: void 0,
        chainId: "",
        height: helpers_1.Long.ZERO,
        time: void 0,
        lastBlockId: void 0,
        lastCommitHash: new Uint8Array(),
        dataHash: new Uint8Array(),
        validatorsHash: new Uint8Array(),
        nextValidatorsHash: new Uint8Array(),
        consensusHash: new Uint8Array(),
        appHash: new Uint8Array(),
        lastResultsHash: new Uint8Array(),
        evidenceHash: new Uint8Array(),
        proposerAddress: new Uint8Array()
      };
    }
    exports.Header = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.version !== void 0) {
          types_1.Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();
        }
        if (message.chainId !== "") {
          writer.uint32(18).string(message.chainId);
        }
        if (!message.height.isZero()) {
          writer.uint32(24).int64(message.height);
        }
        if (message.time !== void 0) {
          timestamp_1.Timestamp.encode(message.time, writer.uint32(34).fork()).ldelim();
        }
        if (message.lastBlockId !== void 0) {
          exports.BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();
        }
        if (message.lastCommitHash.length !== 0) {
          writer.uint32(50).bytes(message.lastCommitHash);
        }
        if (message.dataHash.length !== 0) {
          writer.uint32(58).bytes(message.dataHash);
        }
        if (message.validatorsHash.length !== 0) {
          writer.uint32(66).bytes(message.validatorsHash);
        }
        if (message.nextValidatorsHash.length !== 0) {
          writer.uint32(74).bytes(message.nextValidatorsHash);
        }
        if (message.consensusHash.length !== 0) {
          writer.uint32(82).bytes(message.consensusHash);
        }
        if (message.appHash.length !== 0) {
          writer.uint32(90).bytes(message.appHash);
        }
        if (message.lastResultsHash.length !== 0) {
          writer.uint32(98).bytes(message.lastResultsHash);
        }
        if (message.evidenceHash.length !== 0) {
          writer.uint32(106).bytes(message.evidenceHash);
        }
        if (message.proposerAddress.length !== 0) {
          writer.uint32(114).bytes(message.proposerAddress);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseHeader();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.version = types_1.Consensus.decode(reader, reader.uint32());
              break;
            case 2:
              message.chainId = reader.string();
              break;
            case 3:
              message.height = reader.int64();
              break;
            case 4:
              message.time = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            case 5:
              message.lastBlockId = exports.BlockID.decode(reader, reader.uint32());
              break;
            case 6:
              message.lastCommitHash = reader.bytes();
              break;
            case 7:
              message.dataHash = reader.bytes();
              break;
            case 8:
              message.validatorsHash = reader.bytes();
              break;
            case 9:
              message.nextValidatorsHash = reader.bytes();
              break;
            case 10:
              message.consensusHash = reader.bytes();
              break;
            case 11:
              message.appHash = reader.bytes();
              break;
            case 12:
              message.lastResultsHash = reader.bytes();
              break;
            case 13:
              message.evidenceHash = reader.bytes();
              break;
            case 14:
              message.proposerAddress = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          version: (0, helpers_1.isSet)(object.version) ? types_1.Consensus.fromJSON(object.version) : void 0,
          chainId: (0, helpers_1.isSet)(object.chainId) ? String(object.chainId) : "",
          height: (0, helpers_1.isSet)(object.height) ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO,
          time: (0, helpers_1.isSet)(object.time) ? (0, helpers_1.fromJsonTimestamp)(object.time) : void 0,
          lastBlockId: (0, helpers_1.isSet)(object.lastBlockId) ? exports.BlockID.fromJSON(object.lastBlockId) : void 0,
          lastCommitHash: (0, helpers_1.isSet)(object.lastCommitHash) ? (0, helpers_1.bytesFromBase64)(object.lastCommitHash) : new Uint8Array(),
          dataHash: (0, helpers_1.isSet)(object.dataHash) ? (0, helpers_1.bytesFromBase64)(object.dataHash) : new Uint8Array(),
          validatorsHash: (0, helpers_1.isSet)(object.validatorsHash) ? (0, helpers_1.bytesFromBase64)(object.validatorsHash) : new Uint8Array(),
          nextValidatorsHash: (0, helpers_1.isSet)(object.nextValidatorsHash) ? (0, helpers_1.bytesFromBase64)(object.nextValidatorsHash) : new Uint8Array(),
          consensusHash: (0, helpers_1.isSet)(object.consensusHash) ? (0, helpers_1.bytesFromBase64)(object.consensusHash) : new Uint8Array(),
          appHash: (0, helpers_1.isSet)(object.appHash) ? (0, helpers_1.bytesFromBase64)(object.appHash) : new Uint8Array(),
          lastResultsHash: (0, helpers_1.isSet)(object.lastResultsHash) ? (0, helpers_1.bytesFromBase64)(object.lastResultsHash) : new Uint8Array(),
          evidenceHash: (0, helpers_1.isSet)(object.evidenceHash) ? (0, helpers_1.bytesFromBase64)(object.evidenceHash) : new Uint8Array(),
          proposerAddress: (0, helpers_1.isSet)(object.proposerAddress) ? (0, helpers_1.bytesFromBase64)(object.proposerAddress) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.version !== void 0 && (obj.version = message.version ? types_1.Consensus.toJSON(message.version) : void 0);
        message.chainId !== void 0 && (obj.chainId = message.chainId);
        message.height !== void 0 && (obj.height = (message.height || helpers_1.Long.ZERO).toString());
        message.time !== void 0 && (obj.time = (0, helpers_1.fromTimestamp)(message.time).toISOString());
        message.lastBlockId !== void 0 && (obj.lastBlockId = message.lastBlockId ? exports.BlockID.toJSON(message.lastBlockId) : void 0);
        message.lastCommitHash !== void 0 && (obj.lastCommitHash = (0, helpers_1.base64FromBytes)(message.lastCommitHash !== void 0 ? message.lastCommitHash : new Uint8Array()));
        message.dataHash !== void 0 && (obj.dataHash = (0, helpers_1.base64FromBytes)(message.dataHash !== void 0 ? message.dataHash : new Uint8Array()));
        message.validatorsHash !== void 0 && (obj.validatorsHash = (0, helpers_1.base64FromBytes)(message.validatorsHash !== void 0 ? message.validatorsHash : new Uint8Array()));
        message.nextValidatorsHash !== void 0 && (obj.nextValidatorsHash = (0, helpers_1.base64FromBytes)(message.nextValidatorsHash !== void 0 ? message.nextValidatorsHash : new Uint8Array()));
        message.consensusHash !== void 0 && (obj.consensusHash = (0, helpers_1.base64FromBytes)(message.consensusHash !== void 0 ? message.consensusHash : new Uint8Array()));
        message.appHash !== void 0 && (obj.appHash = (0, helpers_1.base64FromBytes)(message.appHash !== void 0 ? message.appHash : new Uint8Array()));
        message.lastResultsHash !== void 0 && (obj.lastResultsHash = (0, helpers_1.base64FromBytes)(message.lastResultsHash !== void 0 ? message.lastResultsHash : new Uint8Array()));
        message.evidenceHash !== void 0 && (obj.evidenceHash = (0, helpers_1.base64FromBytes)(message.evidenceHash !== void 0 ? message.evidenceHash : new Uint8Array()));
        message.proposerAddress !== void 0 && (obj.proposerAddress = (0, helpers_1.base64FromBytes)(message.proposerAddress !== void 0 ? message.proposerAddress : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseHeader();
        message.version = object.version !== void 0 && object.version !== null ? types_1.Consensus.fromPartial(object.version) : void 0;
        message.chainId = object.chainId ?? "";
        message.height = object.height !== void 0 && object.height !== null ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO;
        message.time = object.time !== void 0 && object.time !== null ? timestamp_1.Timestamp.fromPartial(object.time) : void 0;
        message.lastBlockId = object.lastBlockId !== void 0 && object.lastBlockId !== null ? exports.BlockID.fromPartial(object.lastBlockId) : void 0;
        message.lastCommitHash = object.lastCommitHash ?? new Uint8Array();
        message.dataHash = object.dataHash ?? new Uint8Array();
        message.validatorsHash = object.validatorsHash ?? new Uint8Array();
        message.nextValidatorsHash = object.nextValidatorsHash ?? new Uint8Array();
        message.consensusHash = object.consensusHash ?? new Uint8Array();
        message.appHash = object.appHash ?? new Uint8Array();
        message.lastResultsHash = object.lastResultsHash ?? new Uint8Array();
        message.evidenceHash = object.evidenceHash ?? new Uint8Array();
        message.proposerAddress = object.proposerAddress ?? new Uint8Array();
        return message;
      }
    };
    function createBaseData() {
      return {
        txs: []
      };
    }
    exports.Data = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.txs) {
          writer.uint32(10).bytes(v);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseData();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.txs.push(reader.bytes());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          txs: Array.isArray(object == null ? void 0 : object.txs) ? object.txs.map((e) => (0, helpers_1.bytesFromBase64)(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.txs) {
          obj.txs = message.txs.map((e) => (0, helpers_1.base64FromBytes)(e !== void 0 ? e : new Uint8Array()));
        } else {
          obj.txs = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseData();
        message.txs = ((_a = object.txs) == null ? void 0 : _a.map((e) => e)) || [];
        return message;
      }
    };
    function createBaseVote() {
      return {
        type: 0,
        height: helpers_1.Long.ZERO,
        round: 0,
        blockId: void 0,
        timestamp: void 0,
        validatorAddress: new Uint8Array(),
        validatorIndex: 0,
        signature: new Uint8Array()
      };
    }
    exports.Vote = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.type !== 0) {
          writer.uint32(8).int32(message.type);
        }
        if (!message.height.isZero()) {
          writer.uint32(16).int64(message.height);
        }
        if (message.round !== 0) {
          writer.uint32(24).int32(message.round);
        }
        if (message.blockId !== void 0) {
          exports.BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();
        }
        if (message.timestamp !== void 0) {
          timestamp_1.Timestamp.encode(message.timestamp, writer.uint32(42).fork()).ldelim();
        }
        if (message.validatorAddress.length !== 0) {
          writer.uint32(50).bytes(message.validatorAddress);
        }
        if (message.validatorIndex !== 0) {
          writer.uint32(56).int32(message.validatorIndex);
        }
        if (message.signature.length !== 0) {
          writer.uint32(66).bytes(message.signature);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseVote();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.type = reader.int32();
              break;
            case 2:
              message.height = reader.int64();
              break;
            case 3:
              message.round = reader.int32();
              break;
            case 4:
              message.blockId = exports.BlockID.decode(reader, reader.uint32());
              break;
            case 5:
              message.timestamp = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            case 6:
              message.validatorAddress = reader.bytes();
              break;
            case 7:
              message.validatorIndex = reader.int32();
              break;
            case 8:
              message.signature = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          type: (0, helpers_1.isSet)(object.type) ? signedMsgTypeFromJSON(object.type) : 0,
          height: (0, helpers_1.isSet)(object.height) ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO,
          round: (0, helpers_1.isSet)(object.round) ? Number(object.round) : 0,
          blockId: (0, helpers_1.isSet)(object.blockId) ? exports.BlockID.fromJSON(object.blockId) : void 0,
          timestamp: (0, helpers_1.isSet)(object.timestamp) ? (0, helpers_1.fromJsonTimestamp)(object.timestamp) : void 0,
          validatorAddress: (0, helpers_1.isSet)(object.validatorAddress) ? (0, helpers_1.bytesFromBase64)(object.validatorAddress) : new Uint8Array(),
          validatorIndex: (0, helpers_1.isSet)(object.validatorIndex) ? Number(object.validatorIndex) : 0,
          signature: (0, helpers_1.isSet)(object.signature) ? (0, helpers_1.bytesFromBase64)(object.signature) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.type !== void 0 && (obj.type = signedMsgTypeToJSON(message.type));
        message.height !== void 0 && (obj.height = (message.height || helpers_1.Long.ZERO).toString());
        message.round !== void 0 && (obj.round = Math.round(message.round));
        message.blockId !== void 0 && (obj.blockId = message.blockId ? exports.BlockID.toJSON(message.blockId) : void 0);
        message.timestamp !== void 0 && (obj.timestamp = (0, helpers_1.fromTimestamp)(message.timestamp).toISOString());
        message.validatorAddress !== void 0 && (obj.validatorAddress = (0, helpers_1.base64FromBytes)(message.validatorAddress !== void 0 ? message.validatorAddress : new Uint8Array()));
        message.validatorIndex !== void 0 && (obj.validatorIndex = Math.round(message.validatorIndex));
        message.signature !== void 0 && (obj.signature = (0, helpers_1.base64FromBytes)(message.signature !== void 0 ? message.signature : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseVote();
        message.type = object.type ?? 0;
        message.height = object.height !== void 0 && object.height !== null ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO;
        message.round = object.round ?? 0;
        message.blockId = object.blockId !== void 0 && object.blockId !== null ? exports.BlockID.fromPartial(object.blockId) : void 0;
        message.timestamp = object.timestamp !== void 0 && object.timestamp !== null ? timestamp_1.Timestamp.fromPartial(object.timestamp) : void 0;
        message.validatorAddress = object.validatorAddress ?? new Uint8Array();
        message.validatorIndex = object.validatorIndex ?? 0;
        message.signature = object.signature ?? new Uint8Array();
        return message;
      }
    };
    function createBaseCommit() {
      return {
        height: helpers_1.Long.ZERO,
        round: 0,
        blockId: void 0,
        signatures: []
      };
    }
    exports.Commit = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.height.isZero()) {
          writer.uint32(8).int64(message.height);
        }
        if (message.round !== 0) {
          writer.uint32(16).int32(message.round);
        }
        if (message.blockId !== void 0) {
          exports.BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();
        }
        for (const v of message.signatures) {
          exports.CommitSig.encode(v, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseCommit();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.height = reader.int64();
              break;
            case 2:
              message.round = reader.int32();
              break;
            case 3:
              message.blockId = exports.BlockID.decode(reader, reader.uint32());
              break;
            case 4:
              message.signatures.push(exports.CommitSig.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          height: (0, helpers_1.isSet)(object.height) ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO,
          round: (0, helpers_1.isSet)(object.round) ? Number(object.round) : 0,
          blockId: (0, helpers_1.isSet)(object.blockId) ? exports.BlockID.fromJSON(object.blockId) : void 0,
          signatures: Array.isArray(object == null ? void 0 : object.signatures) ? object.signatures.map((e) => exports.CommitSig.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.height !== void 0 && (obj.height = (message.height || helpers_1.Long.ZERO).toString());
        message.round !== void 0 && (obj.round = Math.round(message.round));
        message.blockId !== void 0 && (obj.blockId = message.blockId ? exports.BlockID.toJSON(message.blockId) : void 0);
        if (message.signatures) {
          obj.signatures = message.signatures.map((e) => e ? exports.CommitSig.toJSON(e) : void 0);
        } else {
          obj.signatures = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseCommit();
        message.height = object.height !== void 0 && object.height !== null ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO;
        message.round = object.round ?? 0;
        message.blockId = object.blockId !== void 0 && object.blockId !== null ? exports.BlockID.fromPartial(object.blockId) : void 0;
        message.signatures = ((_a = object.signatures) == null ? void 0 : _a.map((e) => exports.CommitSig.fromPartial(e))) || [];
        return message;
      }
    };
    function createBaseCommitSig() {
      return {
        blockIdFlag: 0,
        validatorAddress: new Uint8Array(),
        timestamp: void 0,
        signature: new Uint8Array()
      };
    }
    exports.CommitSig = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.blockIdFlag !== 0) {
          writer.uint32(8).int32(message.blockIdFlag);
        }
        if (message.validatorAddress.length !== 0) {
          writer.uint32(18).bytes(message.validatorAddress);
        }
        if (message.timestamp !== void 0) {
          timestamp_1.Timestamp.encode(message.timestamp, writer.uint32(26).fork()).ldelim();
        }
        if (message.signature.length !== 0) {
          writer.uint32(34).bytes(message.signature);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseCommitSig();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.blockIdFlag = reader.int32();
              break;
            case 2:
              message.validatorAddress = reader.bytes();
              break;
            case 3:
              message.timestamp = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            case 4:
              message.signature = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          blockIdFlag: (0, helpers_1.isSet)(object.blockIdFlag) ? blockIDFlagFromJSON(object.blockIdFlag) : 0,
          validatorAddress: (0, helpers_1.isSet)(object.validatorAddress) ? (0, helpers_1.bytesFromBase64)(object.validatorAddress) : new Uint8Array(),
          timestamp: (0, helpers_1.isSet)(object.timestamp) ? (0, helpers_1.fromJsonTimestamp)(object.timestamp) : void 0,
          signature: (0, helpers_1.isSet)(object.signature) ? (0, helpers_1.bytesFromBase64)(object.signature) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.blockIdFlag !== void 0 && (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));
        message.validatorAddress !== void 0 && (obj.validatorAddress = (0, helpers_1.base64FromBytes)(message.validatorAddress !== void 0 ? message.validatorAddress : new Uint8Array()));
        message.timestamp !== void 0 && (obj.timestamp = (0, helpers_1.fromTimestamp)(message.timestamp).toISOString());
        message.signature !== void 0 && (obj.signature = (0, helpers_1.base64FromBytes)(message.signature !== void 0 ? message.signature : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseCommitSig();
        message.blockIdFlag = object.blockIdFlag ?? 0;
        message.validatorAddress = object.validatorAddress ?? new Uint8Array();
        message.timestamp = object.timestamp !== void 0 && object.timestamp !== null ? timestamp_1.Timestamp.fromPartial(object.timestamp) : void 0;
        message.signature = object.signature ?? new Uint8Array();
        return message;
      }
    };
    function createBaseProposal() {
      return {
        type: 0,
        height: helpers_1.Long.ZERO,
        round: 0,
        polRound: 0,
        blockId: void 0,
        timestamp: void 0,
        signature: new Uint8Array()
      };
    }
    exports.Proposal = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.type !== 0) {
          writer.uint32(8).int32(message.type);
        }
        if (!message.height.isZero()) {
          writer.uint32(16).int64(message.height);
        }
        if (message.round !== 0) {
          writer.uint32(24).int32(message.round);
        }
        if (message.polRound !== 0) {
          writer.uint32(32).int32(message.polRound);
        }
        if (message.blockId !== void 0) {
          exports.BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();
        }
        if (message.timestamp !== void 0) {
          timestamp_1.Timestamp.encode(message.timestamp, writer.uint32(50).fork()).ldelim();
        }
        if (message.signature.length !== 0) {
          writer.uint32(58).bytes(message.signature);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseProposal();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.type = reader.int32();
              break;
            case 2:
              message.height = reader.int64();
              break;
            case 3:
              message.round = reader.int32();
              break;
            case 4:
              message.polRound = reader.int32();
              break;
            case 5:
              message.blockId = exports.BlockID.decode(reader, reader.uint32());
              break;
            case 6:
              message.timestamp = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            case 7:
              message.signature = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          type: (0, helpers_1.isSet)(object.type) ? signedMsgTypeFromJSON(object.type) : 0,
          height: (0, helpers_1.isSet)(object.height) ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO,
          round: (0, helpers_1.isSet)(object.round) ? Number(object.round) : 0,
          polRound: (0, helpers_1.isSet)(object.polRound) ? Number(object.polRound) : 0,
          blockId: (0, helpers_1.isSet)(object.blockId) ? exports.BlockID.fromJSON(object.blockId) : void 0,
          timestamp: (0, helpers_1.isSet)(object.timestamp) ? (0, helpers_1.fromJsonTimestamp)(object.timestamp) : void 0,
          signature: (0, helpers_1.isSet)(object.signature) ? (0, helpers_1.bytesFromBase64)(object.signature) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.type !== void 0 && (obj.type = signedMsgTypeToJSON(message.type));
        message.height !== void 0 && (obj.height = (message.height || helpers_1.Long.ZERO).toString());
        message.round !== void 0 && (obj.round = Math.round(message.round));
        message.polRound !== void 0 && (obj.polRound = Math.round(message.polRound));
        message.blockId !== void 0 && (obj.blockId = message.blockId ? exports.BlockID.toJSON(message.blockId) : void 0);
        message.timestamp !== void 0 && (obj.timestamp = (0, helpers_1.fromTimestamp)(message.timestamp).toISOString());
        message.signature !== void 0 && (obj.signature = (0, helpers_1.base64FromBytes)(message.signature !== void 0 ? message.signature : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseProposal();
        message.type = object.type ?? 0;
        message.height = object.height !== void 0 && object.height !== null ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO;
        message.round = object.round ?? 0;
        message.polRound = object.polRound ?? 0;
        message.blockId = object.blockId !== void 0 && object.blockId !== null ? exports.BlockID.fromPartial(object.blockId) : void 0;
        message.timestamp = object.timestamp !== void 0 && object.timestamp !== null ? timestamp_1.Timestamp.fromPartial(object.timestamp) : void 0;
        message.signature = object.signature ?? new Uint8Array();
        return message;
      }
    };
    function createBaseSignedHeader() {
      return {
        header: void 0,
        commit: void 0
      };
    }
    exports.SignedHeader = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.header !== void 0) {
          exports.Header.encode(message.header, writer.uint32(10).fork()).ldelim();
        }
        if (message.commit !== void 0) {
          exports.Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseSignedHeader();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.header = exports.Header.decode(reader, reader.uint32());
              break;
            case 2:
              message.commit = exports.Commit.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          header: (0, helpers_1.isSet)(object.header) ? exports.Header.fromJSON(object.header) : void 0,
          commit: (0, helpers_1.isSet)(object.commit) ? exports.Commit.fromJSON(object.commit) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.header !== void 0 && (obj.header = message.header ? exports.Header.toJSON(message.header) : void 0);
        message.commit !== void 0 && (obj.commit = message.commit ? exports.Commit.toJSON(message.commit) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseSignedHeader();
        message.header = object.header !== void 0 && object.header !== null ? exports.Header.fromPartial(object.header) : void 0;
        message.commit = object.commit !== void 0 && object.commit !== null ? exports.Commit.fromPartial(object.commit) : void 0;
        return message;
      }
    };
    function createBaseLightBlock() {
      return {
        signedHeader: void 0,
        validatorSet: void 0
      };
    }
    exports.LightBlock = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.signedHeader !== void 0) {
          exports.SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();
        }
        if (message.validatorSet !== void 0) {
          validator_1.ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseLightBlock();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.signedHeader = exports.SignedHeader.decode(reader, reader.uint32());
              break;
            case 2:
              message.validatorSet = validator_1.ValidatorSet.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          signedHeader: (0, helpers_1.isSet)(object.signedHeader) ? exports.SignedHeader.fromJSON(object.signedHeader) : void 0,
          validatorSet: (0, helpers_1.isSet)(object.validatorSet) ? validator_1.ValidatorSet.fromJSON(object.validatorSet) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.signedHeader !== void 0 && (obj.signedHeader = message.signedHeader ? exports.SignedHeader.toJSON(message.signedHeader) : void 0);
        message.validatorSet !== void 0 && (obj.validatorSet = message.validatorSet ? validator_1.ValidatorSet.toJSON(message.validatorSet) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseLightBlock();
        message.signedHeader = object.signedHeader !== void 0 && object.signedHeader !== null ? exports.SignedHeader.fromPartial(object.signedHeader) : void 0;
        message.validatorSet = object.validatorSet !== void 0 && object.validatorSet !== null ? validator_1.ValidatorSet.fromPartial(object.validatorSet) : void 0;
        return message;
      }
    };
    function createBaseBlockMeta() {
      return {
        blockId: void 0,
        blockSize: helpers_1.Long.ZERO,
        header: void 0,
        numTxs: helpers_1.Long.ZERO
      };
    }
    exports.BlockMeta = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.blockId !== void 0) {
          exports.BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();
        }
        if (!message.blockSize.isZero()) {
          writer.uint32(16).int64(message.blockSize);
        }
        if (message.header !== void 0) {
          exports.Header.encode(message.header, writer.uint32(26).fork()).ldelim();
        }
        if (!message.numTxs.isZero()) {
          writer.uint32(32).int64(message.numTxs);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseBlockMeta();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.blockId = exports.BlockID.decode(reader, reader.uint32());
              break;
            case 2:
              message.blockSize = reader.int64();
              break;
            case 3:
              message.header = exports.Header.decode(reader, reader.uint32());
              break;
            case 4:
              message.numTxs = reader.int64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          blockId: (0, helpers_1.isSet)(object.blockId) ? exports.BlockID.fromJSON(object.blockId) : void 0,
          blockSize: (0, helpers_1.isSet)(object.blockSize) ? helpers_1.Long.fromValue(object.blockSize) : helpers_1.Long.ZERO,
          header: (0, helpers_1.isSet)(object.header) ? exports.Header.fromJSON(object.header) : void 0,
          numTxs: (0, helpers_1.isSet)(object.numTxs) ? helpers_1.Long.fromValue(object.numTxs) : helpers_1.Long.ZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.blockId !== void 0 && (obj.blockId = message.blockId ? exports.BlockID.toJSON(message.blockId) : void 0);
        message.blockSize !== void 0 && (obj.blockSize = (message.blockSize || helpers_1.Long.ZERO).toString());
        message.header !== void 0 && (obj.header = message.header ? exports.Header.toJSON(message.header) : void 0);
        message.numTxs !== void 0 && (obj.numTxs = (message.numTxs || helpers_1.Long.ZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseBlockMeta();
        message.blockId = object.blockId !== void 0 && object.blockId !== null ? exports.BlockID.fromPartial(object.blockId) : void 0;
        message.blockSize = object.blockSize !== void 0 && object.blockSize !== null ? helpers_1.Long.fromValue(object.blockSize) : helpers_1.Long.ZERO;
        message.header = object.header !== void 0 && object.header !== null ? exports.Header.fromPartial(object.header) : void 0;
        message.numTxs = object.numTxs !== void 0 && object.numTxs !== null ? helpers_1.Long.fromValue(object.numTxs) : helpers_1.Long.ZERO;
        return message;
      }
    };
    function createBaseTxProof() {
      return {
        rootHash: new Uint8Array(),
        data: new Uint8Array(),
        proof: void 0
      };
    }
    exports.TxProof = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.rootHash.length !== 0) {
          writer.uint32(10).bytes(message.rootHash);
        }
        if (message.data.length !== 0) {
          writer.uint32(18).bytes(message.data);
        }
        if (message.proof !== void 0) {
          proof_1.Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseTxProof();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.rootHash = reader.bytes();
              break;
            case 2:
              message.data = reader.bytes();
              break;
            case 3:
              message.proof = proof_1.Proof.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          rootHash: (0, helpers_1.isSet)(object.rootHash) ? (0, helpers_1.bytesFromBase64)(object.rootHash) : new Uint8Array(),
          data: (0, helpers_1.isSet)(object.data) ? (0, helpers_1.bytesFromBase64)(object.data) : new Uint8Array(),
          proof: (0, helpers_1.isSet)(object.proof) ? proof_1.Proof.fromJSON(object.proof) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.rootHash !== void 0 && (obj.rootHash = (0, helpers_1.base64FromBytes)(message.rootHash !== void 0 ? message.rootHash : new Uint8Array()));
        message.data !== void 0 && (obj.data = (0, helpers_1.base64FromBytes)(message.data !== void 0 ? message.data : new Uint8Array()));
        message.proof !== void 0 && (obj.proof = message.proof ? proof_1.Proof.toJSON(message.proof) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseTxProof();
        message.rootHash = object.rootHash ?? new Uint8Array();
        message.data = object.data ?? new Uint8Array();
        message.proof = object.proof !== void 0 && object.proof !== null ? proof_1.Proof.fromPartial(object.proof) : void 0;
        return message;
      }
    };
  }
});

// node_modules/cosmjs-types/ibc/lightclients/tendermint/v1/tendermint.js
var require_tendermint = __commonJS({
  "node_modules/cosmjs-types/ibc/lightclients/tendermint/v1/tendermint.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Fraction = exports.Header = exports.Misbehaviour = exports.ConsensusState = exports.ClientState = exports.protobufPackage = void 0;
    var duration_1 = require_duration();
    var client_1 = require_client();
    var proofs_1 = require_proofs2();
    var timestamp_1 = require_timestamp();
    var commitment_1 = require_commitment();
    var types_1 = require_types2();
    var validator_1 = require_validator();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "ibc.lightclients.tendermint.v1";
    function createBaseClientState() {
      return {
        chainId: "",
        trustLevel: void 0,
        trustingPeriod: void 0,
        unbondingPeriod: void 0,
        maxClockDrift: void 0,
        frozenHeight: void 0,
        latestHeight: void 0,
        proofSpecs: [],
        upgradePath: [],
        allowUpdateAfterExpiry: false,
        allowUpdateAfterMisbehaviour: false
      };
    }
    exports.ClientState = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.chainId !== "") {
          writer.uint32(10).string(message.chainId);
        }
        if (message.trustLevel !== void 0) {
          exports.Fraction.encode(message.trustLevel, writer.uint32(18).fork()).ldelim();
        }
        if (message.trustingPeriod !== void 0) {
          duration_1.Duration.encode(message.trustingPeriod, writer.uint32(26).fork()).ldelim();
        }
        if (message.unbondingPeriod !== void 0) {
          duration_1.Duration.encode(message.unbondingPeriod, writer.uint32(34).fork()).ldelim();
        }
        if (message.maxClockDrift !== void 0) {
          duration_1.Duration.encode(message.maxClockDrift, writer.uint32(42).fork()).ldelim();
        }
        if (message.frozenHeight !== void 0) {
          client_1.Height.encode(message.frozenHeight, writer.uint32(50).fork()).ldelim();
        }
        if (message.latestHeight !== void 0) {
          client_1.Height.encode(message.latestHeight, writer.uint32(58).fork()).ldelim();
        }
        for (const v of message.proofSpecs) {
          proofs_1.ProofSpec.encode(v, writer.uint32(66).fork()).ldelim();
        }
        for (const v of message.upgradePath) {
          writer.uint32(74).string(v);
        }
        if (message.allowUpdateAfterExpiry === true) {
          writer.uint32(80).bool(message.allowUpdateAfterExpiry);
        }
        if (message.allowUpdateAfterMisbehaviour === true) {
          writer.uint32(88).bool(message.allowUpdateAfterMisbehaviour);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseClientState();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.chainId = reader.string();
              break;
            case 2:
              message.trustLevel = exports.Fraction.decode(reader, reader.uint32());
              break;
            case 3:
              message.trustingPeriod = duration_1.Duration.decode(reader, reader.uint32());
              break;
            case 4:
              message.unbondingPeriod = duration_1.Duration.decode(reader, reader.uint32());
              break;
            case 5:
              message.maxClockDrift = duration_1.Duration.decode(reader, reader.uint32());
              break;
            case 6:
              message.frozenHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            case 7:
              message.latestHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            case 8:
              message.proofSpecs.push(proofs_1.ProofSpec.decode(reader, reader.uint32()));
              break;
            case 9:
              message.upgradePath.push(reader.string());
              break;
            case 10:
              message.allowUpdateAfterExpiry = reader.bool();
              break;
            case 11:
              message.allowUpdateAfterMisbehaviour = reader.bool();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          chainId: (0, helpers_1.isSet)(object.chainId) ? String(object.chainId) : "",
          trustLevel: (0, helpers_1.isSet)(object.trustLevel) ? exports.Fraction.fromJSON(object.trustLevel) : void 0,
          trustingPeriod: (0, helpers_1.isSet)(object.trustingPeriod) ? duration_1.Duration.fromJSON(object.trustingPeriod) : void 0,
          unbondingPeriod: (0, helpers_1.isSet)(object.unbondingPeriod) ? duration_1.Duration.fromJSON(object.unbondingPeriod) : void 0,
          maxClockDrift: (0, helpers_1.isSet)(object.maxClockDrift) ? duration_1.Duration.fromJSON(object.maxClockDrift) : void 0,
          frozenHeight: (0, helpers_1.isSet)(object.frozenHeight) ? client_1.Height.fromJSON(object.frozenHeight) : void 0,
          latestHeight: (0, helpers_1.isSet)(object.latestHeight) ? client_1.Height.fromJSON(object.latestHeight) : void 0,
          proofSpecs: Array.isArray(object == null ? void 0 : object.proofSpecs) ? object.proofSpecs.map((e) => proofs_1.ProofSpec.fromJSON(e)) : [],
          upgradePath: Array.isArray(object == null ? void 0 : object.upgradePath) ? object.upgradePath.map((e) => String(e)) : [],
          allowUpdateAfterExpiry: (0, helpers_1.isSet)(object.allowUpdateAfterExpiry) ? Boolean(object.allowUpdateAfterExpiry) : false,
          allowUpdateAfterMisbehaviour: (0, helpers_1.isSet)(object.allowUpdateAfterMisbehaviour) ? Boolean(object.allowUpdateAfterMisbehaviour) : false
        };
      },
      toJSON(message) {
        const obj = {};
        message.chainId !== void 0 && (obj.chainId = message.chainId);
        message.trustLevel !== void 0 && (obj.trustLevel = message.trustLevel ? exports.Fraction.toJSON(message.trustLevel) : void 0);
        message.trustingPeriod !== void 0 && (obj.trustingPeriod = message.trustingPeriod ? duration_1.Duration.toJSON(message.trustingPeriod) : void 0);
        message.unbondingPeriod !== void 0 && (obj.unbondingPeriod = message.unbondingPeriod ? duration_1.Duration.toJSON(message.unbondingPeriod) : void 0);
        message.maxClockDrift !== void 0 && (obj.maxClockDrift = message.maxClockDrift ? duration_1.Duration.toJSON(message.maxClockDrift) : void 0);
        message.frozenHeight !== void 0 && (obj.frozenHeight = message.frozenHeight ? client_1.Height.toJSON(message.frozenHeight) : void 0);
        message.latestHeight !== void 0 && (obj.latestHeight = message.latestHeight ? client_1.Height.toJSON(message.latestHeight) : void 0);
        if (message.proofSpecs) {
          obj.proofSpecs = message.proofSpecs.map((e) => e ? proofs_1.ProofSpec.toJSON(e) : void 0);
        } else {
          obj.proofSpecs = [];
        }
        if (message.upgradePath) {
          obj.upgradePath = message.upgradePath.map((e) => e);
        } else {
          obj.upgradePath = [];
        }
        message.allowUpdateAfterExpiry !== void 0 && (obj.allowUpdateAfterExpiry = message.allowUpdateAfterExpiry);
        message.allowUpdateAfterMisbehaviour !== void 0 && (obj.allowUpdateAfterMisbehaviour = message.allowUpdateAfterMisbehaviour);
        return obj;
      },
      fromPartial(object) {
        var _a, _b;
        const message = createBaseClientState();
        message.chainId = object.chainId ?? "";
        message.trustLevel = object.trustLevel !== void 0 && object.trustLevel !== null ? exports.Fraction.fromPartial(object.trustLevel) : void 0;
        message.trustingPeriod = object.trustingPeriod !== void 0 && object.trustingPeriod !== null ? duration_1.Duration.fromPartial(object.trustingPeriod) : void 0;
        message.unbondingPeriod = object.unbondingPeriod !== void 0 && object.unbondingPeriod !== null ? duration_1.Duration.fromPartial(object.unbondingPeriod) : void 0;
        message.maxClockDrift = object.maxClockDrift !== void 0 && object.maxClockDrift !== null ? duration_1.Duration.fromPartial(object.maxClockDrift) : void 0;
        message.frozenHeight = object.frozenHeight !== void 0 && object.frozenHeight !== null ? client_1.Height.fromPartial(object.frozenHeight) : void 0;
        message.latestHeight = object.latestHeight !== void 0 && object.latestHeight !== null ? client_1.Height.fromPartial(object.latestHeight) : void 0;
        message.proofSpecs = ((_a = object.proofSpecs) == null ? void 0 : _a.map((e) => proofs_1.ProofSpec.fromPartial(e))) || [];
        message.upgradePath = ((_b = object.upgradePath) == null ? void 0 : _b.map((e) => e)) || [];
        message.allowUpdateAfterExpiry = object.allowUpdateAfterExpiry ?? false;
        message.allowUpdateAfterMisbehaviour = object.allowUpdateAfterMisbehaviour ?? false;
        return message;
      }
    };
    function createBaseConsensusState() {
      return {
        timestamp: void 0,
        root: void 0,
        nextValidatorsHash: new Uint8Array()
      };
    }
    exports.ConsensusState = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.timestamp !== void 0) {
          timestamp_1.Timestamp.encode(message.timestamp, writer.uint32(10).fork()).ldelim();
        }
        if (message.root !== void 0) {
          commitment_1.MerkleRoot.encode(message.root, writer.uint32(18).fork()).ldelim();
        }
        if (message.nextValidatorsHash.length !== 0) {
          writer.uint32(26).bytes(message.nextValidatorsHash);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseConsensusState();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.timestamp = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            case 2:
              message.root = commitment_1.MerkleRoot.decode(reader, reader.uint32());
              break;
            case 3:
              message.nextValidatorsHash = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          timestamp: (0, helpers_1.isSet)(object.timestamp) ? (0, helpers_1.fromJsonTimestamp)(object.timestamp) : void 0,
          root: (0, helpers_1.isSet)(object.root) ? commitment_1.MerkleRoot.fromJSON(object.root) : void 0,
          nextValidatorsHash: (0, helpers_1.isSet)(object.nextValidatorsHash) ? (0, helpers_1.bytesFromBase64)(object.nextValidatorsHash) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.timestamp !== void 0 && (obj.timestamp = (0, helpers_1.fromTimestamp)(message.timestamp).toISOString());
        message.root !== void 0 && (obj.root = message.root ? commitment_1.MerkleRoot.toJSON(message.root) : void 0);
        message.nextValidatorsHash !== void 0 && (obj.nextValidatorsHash = (0, helpers_1.base64FromBytes)(message.nextValidatorsHash !== void 0 ? message.nextValidatorsHash : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseConsensusState();
        message.timestamp = object.timestamp !== void 0 && object.timestamp !== null ? timestamp_1.Timestamp.fromPartial(object.timestamp) : void 0;
        message.root = object.root !== void 0 && object.root !== null ? commitment_1.MerkleRoot.fromPartial(object.root) : void 0;
        message.nextValidatorsHash = object.nextValidatorsHash ?? new Uint8Array();
        return message;
      }
    };
    function createBaseMisbehaviour() {
      return {
        clientId: "",
        header1: void 0,
        header2: void 0
      };
    }
    exports.Misbehaviour = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.clientId !== "") {
          writer.uint32(10).string(message.clientId);
        }
        if (message.header1 !== void 0) {
          exports.Header.encode(message.header1, writer.uint32(18).fork()).ldelim();
        }
        if (message.header2 !== void 0) {
          exports.Header.encode(message.header2, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMisbehaviour();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.clientId = reader.string();
              break;
            case 2:
              message.header1 = exports.Header.decode(reader, reader.uint32());
              break;
            case 3:
              message.header2 = exports.Header.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          clientId: (0, helpers_1.isSet)(object.clientId) ? String(object.clientId) : "",
          header1: (0, helpers_1.isSet)(object.header1) ? exports.Header.fromJSON(object.header1) : void 0,
          header2: (0, helpers_1.isSet)(object.header2) ? exports.Header.fromJSON(object.header2) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.clientId !== void 0 && (obj.clientId = message.clientId);
        message.header1 !== void 0 && (obj.header1 = message.header1 ? exports.Header.toJSON(message.header1) : void 0);
        message.header2 !== void 0 && (obj.header2 = message.header2 ? exports.Header.toJSON(message.header2) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMisbehaviour();
        message.clientId = object.clientId ?? "";
        message.header1 = object.header1 !== void 0 && object.header1 !== null ? exports.Header.fromPartial(object.header1) : void 0;
        message.header2 = object.header2 !== void 0 && object.header2 !== null ? exports.Header.fromPartial(object.header2) : void 0;
        return message;
      }
    };
    function createBaseHeader() {
      return {
        signedHeader: void 0,
        validatorSet: void 0,
        trustedHeight: void 0,
        trustedValidators: void 0
      };
    }
    exports.Header = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.signedHeader !== void 0) {
          types_1.SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();
        }
        if (message.validatorSet !== void 0) {
          validator_1.ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();
        }
        if (message.trustedHeight !== void 0) {
          client_1.Height.encode(message.trustedHeight, writer.uint32(26).fork()).ldelim();
        }
        if (message.trustedValidators !== void 0) {
          validator_1.ValidatorSet.encode(message.trustedValidators, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseHeader();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.signedHeader = types_1.SignedHeader.decode(reader, reader.uint32());
              break;
            case 2:
              message.validatorSet = validator_1.ValidatorSet.decode(reader, reader.uint32());
              break;
            case 3:
              message.trustedHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            case 4:
              message.trustedValidators = validator_1.ValidatorSet.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          signedHeader: (0, helpers_1.isSet)(object.signedHeader) ? types_1.SignedHeader.fromJSON(object.signedHeader) : void 0,
          validatorSet: (0, helpers_1.isSet)(object.validatorSet) ? validator_1.ValidatorSet.fromJSON(object.validatorSet) : void 0,
          trustedHeight: (0, helpers_1.isSet)(object.trustedHeight) ? client_1.Height.fromJSON(object.trustedHeight) : void 0,
          trustedValidators: (0, helpers_1.isSet)(object.trustedValidators) ? validator_1.ValidatorSet.fromJSON(object.trustedValidators) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.signedHeader !== void 0 && (obj.signedHeader = message.signedHeader ? types_1.SignedHeader.toJSON(message.signedHeader) : void 0);
        message.validatorSet !== void 0 && (obj.validatorSet = message.validatorSet ? validator_1.ValidatorSet.toJSON(message.validatorSet) : void 0);
        message.trustedHeight !== void 0 && (obj.trustedHeight = message.trustedHeight ? client_1.Height.toJSON(message.trustedHeight) : void 0);
        message.trustedValidators !== void 0 && (obj.trustedValidators = message.trustedValidators ? validator_1.ValidatorSet.toJSON(message.trustedValidators) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseHeader();
        message.signedHeader = object.signedHeader !== void 0 && object.signedHeader !== null ? types_1.SignedHeader.fromPartial(object.signedHeader) : void 0;
        message.validatorSet = object.validatorSet !== void 0 && object.validatorSet !== null ? validator_1.ValidatorSet.fromPartial(object.validatorSet) : void 0;
        message.trustedHeight = object.trustedHeight !== void 0 && object.trustedHeight !== null ? client_1.Height.fromPartial(object.trustedHeight) : void 0;
        message.trustedValidators = object.trustedValidators !== void 0 && object.trustedValidators !== null ? validator_1.ValidatorSet.fromPartial(object.trustedValidators) : void 0;
        return message;
      }
    };
    function createBaseFraction() {
      return {
        numerator: helpers_1.Long.UZERO,
        denominator: helpers_1.Long.UZERO
      };
    }
    exports.Fraction = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.numerator.isZero()) {
          writer.uint32(8).uint64(message.numerator);
        }
        if (!message.denominator.isZero()) {
          writer.uint32(16).uint64(message.denominator);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseFraction();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.numerator = reader.uint64();
              break;
            case 2:
              message.denominator = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          numerator: (0, helpers_1.isSet)(object.numerator) ? helpers_1.Long.fromValue(object.numerator) : helpers_1.Long.UZERO,
          denominator: (0, helpers_1.isSet)(object.denominator) ? helpers_1.Long.fromValue(object.denominator) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.numerator !== void 0 && (obj.numerator = (message.numerator || helpers_1.Long.UZERO).toString());
        message.denominator !== void 0 && (obj.denominator = (message.denominator || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseFraction();
        message.numerator = object.numerator !== void 0 && object.numerator !== null ? helpers_1.Long.fromValue(object.numerator) : helpers_1.Long.UZERO;
        message.denominator = object.denominator !== void 0 && object.denominator !== null ? helpers_1.Long.fromValue(object.denominator) : helpers_1.Long.UZERO;
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/stargate/build/modules/ibc/queries.js
var require_queries7 = __commonJS({
  "node_modules/@cosmjs/stargate/build/modules/ibc/queries.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.setupIbcExtension = void 0;
    var encoding_1 = require_build2();
    var math_1 = require_build();
    var query_1 = require_query7();
    var channel_1 = require_channel();
    var query_2 = require_query8();
    var query_3 = require_query9();
    var query_4 = require_query10();
    var tendermint_1 = require_tendermint();
    var long_1 = __importDefault(require_long());
    var queryclient_1 = require_queryclient2();
    function decodeTendermintClientStateAny(clientState) {
      if ((clientState == null ? void 0 : clientState.typeUrl) !== "/ibc.lightclients.tendermint.v1.ClientState") {
        throw new Error(`Unexpected client state type: ${clientState == null ? void 0 : clientState.typeUrl}`);
      }
      return tendermint_1.ClientState.decode(clientState.value);
    }
    function decodeTendermintConsensusStateAny(clientState) {
      if ((clientState == null ? void 0 : clientState.typeUrl) !== "/ibc.lightclients.tendermint.v1.ConsensusState") {
        throw new Error(`Unexpected client state type: ${clientState == null ? void 0 : clientState.typeUrl}`);
      }
      return tendermint_1.ConsensusState.decode(clientState.value);
    }
    function setupIbcExtension(base) {
      const rpc = (0, queryclient_1.createProtobufRpcClient)(base);
      const channelQueryService = new query_2.QueryClientImpl(rpc);
      const clientQueryService = new query_3.QueryClientImpl(rpc);
      const connectionQueryService = new query_4.QueryClientImpl(rpc);
      const transferQueryService = new query_1.QueryClientImpl(rpc);
      return {
        ibc: {
          channel: {
            channel: async (portId, channelId) => channelQueryService.Channel({
              portId,
              channelId
            }),
            channels: async (paginationKey) => channelQueryService.Channels({
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            }),
            allChannels: async () => {
              var _a;
              const channels = [];
              let response;
              let key;
              do {
                response = await channelQueryService.Channels({
                  pagination: (0, queryclient_1.createPagination)(key)
                });
                channels.push(...response.channels);
                key = (_a = response.pagination) == null ? void 0 : _a.nextKey;
              } while (key && key.length);
              return {
                channels,
                height: response.height
              };
            },
            connectionChannels: async (connection, paginationKey) => channelQueryService.ConnectionChannels({
              connection,
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            }),
            allConnectionChannels: async (connection) => {
              var _a;
              const channels = [];
              let response;
              let key;
              do {
                response = await channelQueryService.ConnectionChannels({
                  connection,
                  pagination: (0, queryclient_1.createPagination)(key)
                });
                channels.push(...response.channels);
                key = (_a = response.pagination) == null ? void 0 : _a.nextKey;
              } while (key && key.length);
              return {
                channels,
                height: response.height
              };
            },
            clientState: async (portId, channelId) => channelQueryService.ChannelClientState({
              portId,
              channelId
            }),
            consensusState: async (portId, channelId, revisionNumber, revisionHeight) => channelQueryService.ChannelConsensusState({
              portId,
              channelId,
              revisionNumber: long_1.default.fromNumber(revisionNumber, true),
              revisionHeight: long_1.default.fromNumber(revisionHeight, true)
            }),
            packetCommitment: async (portId, channelId, sequence) => channelQueryService.PacketCommitment({
              portId,
              channelId,
              sequence: long_1.default.fromNumber(sequence, true)
            }),
            packetCommitments: async (portId, channelId, paginationKey) => channelQueryService.PacketCommitments({
              channelId,
              portId,
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            }),
            allPacketCommitments: async (portId, channelId) => {
              var _a;
              const commitments = [];
              let response;
              let key;
              do {
                response = await channelQueryService.PacketCommitments({
                  channelId,
                  portId,
                  pagination: (0, queryclient_1.createPagination)(key)
                });
                commitments.push(...response.commitments);
                key = (_a = response.pagination) == null ? void 0 : _a.nextKey;
              } while (key && key.length);
              return {
                commitments,
                height: response.height
              };
            },
            packetReceipt: async (portId, channelId, sequence) => channelQueryService.PacketReceipt({
              portId,
              channelId,
              sequence: long_1.default.fromNumber(sequence, true)
            }),
            packetAcknowledgement: async (portId, channelId, sequence) => channelQueryService.PacketAcknowledgement({
              portId,
              channelId,
              sequence: long_1.default.fromNumber(sequence, true)
            }),
            packetAcknowledgements: async (portId, channelId, paginationKey) => {
              const request = query_2.QueryPacketAcknowledgementsRequest.fromPartial({
                portId,
                channelId,
                pagination: (0, queryclient_1.createPagination)(paginationKey)
              });
              return channelQueryService.PacketAcknowledgements(request);
            },
            allPacketAcknowledgements: async (portId, channelId) => {
              var _a;
              const acknowledgements = [];
              let response;
              let key;
              do {
                const request = query_2.QueryPacketAcknowledgementsRequest.fromPartial({
                  channelId,
                  portId,
                  pagination: (0, queryclient_1.createPagination)(key)
                });
                response = await channelQueryService.PacketAcknowledgements(request);
                acknowledgements.push(...response.acknowledgements);
                key = (_a = response.pagination) == null ? void 0 : _a.nextKey;
              } while (key && key.length);
              return {
                acknowledgements,
                height: response.height
              };
            },
            unreceivedPackets: async (portId, channelId, packetCommitmentSequences) => channelQueryService.UnreceivedPackets({
              portId,
              channelId,
              packetCommitmentSequences: packetCommitmentSequences.map((s) => long_1.default.fromNumber(s, true))
            }),
            unreceivedAcks: async (portId, channelId, packetAckSequences) => channelQueryService.UnreceivedAcks({
              portId,
              channelId,
              packetAckSequences: packetAckSequences.map((s) => long_1.default.fromNumber(s, true))
            }),
            nextSequenceReceive: async (portId, channelId) => channelQueryService.NextSequenceReceive({
              portId,
              channelId
            })
          },
          client: {
            state: async (clientId) => clientQueryService.ClientState({ clientId }),
            states: async (paginationKey) => clientQueryService.ClientStates({
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            }),
            allStates: async () => {
              var _a;
              const clientStates = [];
              let response;
              let key;
              do {
                response = await clientQueryService.ClientStates({
                  pagination: (0, queryclient_1.createPagination)(key)
                });
                clientStates.push(...response.clientStates);
                key = (_a = response.pagination) == null ? void 0 : _a.nextKey;
              } while (key && key.length);
              return {
                clientStates
              };
            },
            consensusState: async (clientId, consensusHeight) => clientQueryService.ConsensusState(query_3.QueryConsensusStateRequest.fromPartial({
              clientId,
              revisionHeight: consensusHeight !== void 0 ? long_1.default.fromNumber(consensusHeight, true) : void 0,
              latestHeight: consensusHeight === void 0
            })),
            consensusStates: async (clientId, paginationKey) => clientQueryService.ConsensusStates({
              clientId,
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            }),
            allConsensusStates: async (clientId) => {
              var _a;
              const consensusStates = [];
              let response;
              let key;
              do {
                response = await clientQueryService.ConsensusStates({
                  clientId,
                  pagination: (0, queryclient_1.createPagination)(key)
                });
                consensusStates.push(...response.consensusStates);
                key = (_a = response.pagination) == null ? void 0 : _a.nextKey;
              } while (key && key.length);
              return {
                consensusStates
              };
            },
            params: async () => clientQueryService.ClientParams({}),
            stateTm: async (clientId) => {
              const response = await clientQueryService.ClientState({ clientId });
              return decodeTendermintClientStateAny(response.clientState);
            },
            statesTm: async (paginationKey) => {
              const { clientStates } = await clientQueryService.ClientStates({
                pagination: (0, queryclient_1.createPagination)(paginationKey)
              });
              return clientStates.map(({ clientState }) => decodeTendermintClientStateAny(clientState));
            },
            allStatesTm: async () => {
              var _a;
              const clientStates = [];
              let response;
              let key;
              do {
                response = await clientQueryService.ClientStates({
                  pagination: (0, queryclient_1.createPagination)(key)
                });
                clientStates.push(...response.clientStates);
                key = (_a = response.pagination) == null ? void 0 : _a.nextKey;
              } while (key && key.length);
              return clientStates.map(({ clientState }) => decodeTendermintClientStateAny(clientState));
            },
            consensusStateTm: async (clientId, consensusHeight) => {
              const response = await clientQueryService.ConsensusState(query_3.QueryConsensusStateRequest.fromPartial({
                clientId,
                revisionHeight: consensusHeight == null ? void 0 : consensusHeight.revisionHeight,
                revisionNumber: consensusHeight == null ? void 0 : consensusHeight.revisionNumber,
                latestHeight: consensusHeight === void 0
              }));
              return decodeTendermintConsensusStateAny(response.consensusState);
            }
          },
          connection: {
            connection: async (connectionId) => connectionQueryService.Connection({
              connectionId
            }),
            connections: async (paginationKey) => connectionQueryService.Connections({
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            }),
            allConnections: async () => {
              var _a;
              const connections = [];
              let response;
              let key;
              do {
                response = await connectionQueryService.Connections({
                  pagination: (0, queryclient_1.createPagination)(key)
                });
                connections.push(...response.connections);
                key = (_a = response.pagination) == null ? void 0 : _a.nextKey;
              } while (key && key.length);
              return {
                connections,
                height: response.height
              };
            },
            clientConnections: async (clientId) => connectionQueryService.ClientConnections({
              clientId
            }),
            clientState: async (connectionId) => connectionQueryService.ConnectionClientState({
              connectionId
            }),
            consensusState: async (connectionId, revisionHeight) => connectionQueryService.ConnectionConsensusState(query_4.QueryConnectionConsensusStateRequest.fromPartial({
              connectionId,
              revisionHeight: long_1.default.fromNumber(revisionHeight, true)
            }))
          },
          transfer: {
            denomTrace: async (hash) => transferQueryService.DenomTrace({ hash }),
            denomTraces: async (paginationKey) => transferQueryService.DenomTraces({
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            }),
            allDenomTraces: async () => {
              var _a;
              const denomTraces = [];
              let response;
              let key;
              do {
                response = await transferQueryService.DenomTraces({
                  pagination: (0, queryclient_1.createPagination)(key)
                });
                denomTraces.push(...response.denomTraces);
                key = (_a = response.pagination) == null ? void 0 : _a.nextKey;
              } while (key && key.length);
              return {
                denomTraces
              };
            },
            params: async () => transferQueryService.Params({})
          },
          verified: {
            channel: {
              channel: async (portId, channelId) => {
                const key = (0, encoding_1.toAscii)(`channelEnds/ports/${portId}/channels/${channelId}`);
                const { value } = await base.queryStoreVerified("ibc", key);
                return value.length ? channel_1.Channel.decode(value) : null;
              },
              packetCommitment: async (portId, channelId, sequence) => {
                const key = (0, encoding_1.toAscii)(`commitments/ports/${portId}/channels/${channelId}/packets/${sequence}`);
                const { value } = await base.queryStoreVerified("ibc", key);
                return value;
              },
              packetAcknowledgement: async (portId, channelId, sequence) => {
                const key = (0, encoding_1.toAscii)(`acks/ports/${portId}/channels/${channelId}/acknowledgements/${sequence}`);
                const { value } = await base.queryStoreVerified("ibc", key);
                return value;
              },
              nextSequenceReceive: async (portId, channelId) => {
                const key = (0, encoding_1.toAscii)(`seqAcks/ports/${portId}/channels/${channelId}/nextSequenceAck`);
                const { value } = await base.queryStoreVerified("ibc", key);
                return value.length ? math_1.Uint64.fromBytes(value).toNumber() : null;
              }
            }
          }
        }
      };
    }
    exports.setupIbcExtension = setupIbcExtension;
  }
});

// node_modules/cosmjs-types/cosmos/mint/v1beta1/mint.js
var require_mint = __commonJS({
  "node_modules/cosmjs-types/cosmos/mint/v1beta1/mint.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Params = exports.Minter = exports.protobufPackage = void 0;
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.mint.v1beta1";
    function createBaseMinter() {
      return {
        inflation: "",
        annualProvisions: ""
      };
    }
    exports.Minter = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.inflation !== "") {
          writer.uint32(10).string(message.inflation);
        }
        if (message.annualProvisions !== "") {
          writer.uint32(18).string(message.annualProvisions);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMinter();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.inflation = reader.string();
              break;
            case 2:
              message.annualProvisions = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          inflation: (0, helpers_1.isSet)(object.inflation) ? String(object.inflation) : "",
          annualProvisions: (0, helpers_1.isSet)(object.annualProvisions) ? String(object.annualProvisions) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.inflation !== void 0 && (obj.inflation = message.inflation);
        message.annualProvisions !== void 0 && (obj.annualProvisions = message.annualProvisions);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMinter();
        message.inflation = object.inflation ?? "";
        message.annualProvisions = object.annualProvisions ?? "";
        return message;
      }
    };
    function createBaseParams() {
      return {
        mintDenom: "",
        inflationRateChange: "",
        inflationMax: "",
        inflationMin: "",
        goalBonded: "",
        blocksPerYear: helpers_1.Long.UZERO
      };
    }
    exports.Params = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.mintDenom !== "") {
          writer.uint32(10).string(message.mintDenom);
        }
        if (message.inflationRateChange !== "") {
          writer.uint32(18).string(message.inflationRateChange);
        }
        if (message.inflationMax !== "") {
          writer.uint32(26).string(message.inflationMax);
        }
        if (message.inflationMin !== "") {
          writer.uint32(34).string(message.inflationMin);
        }
        if (message.goalBonded !== "") {
          writer.uint32(42).string(message.goalBonded);
        }
        if (!message.blocksPerYear.isZero()) {
          writer.uint32(48).uint64(message.blocksPerYear);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseParams();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.mintDenom = reader.string();
              break;
            case 2:
              message.inflationRateChange = reader.string();
              break;
            case 3:
              message.inflationMax = reader.string();
              break;
            case 4:
              message.inflationMin = reader.string();
              break;
            case 5:
              message.goalBonded = reader.string();
              break;
            case 6:
              message.blocksPerYear = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          mintDenom: (0, helpers_1.isSet)(object.mintDenom) ? String(object.mintDenom) : "",
          inflationRateChange: (0, helpers_1.isSet)(object.inflationRateChange) ? String(object.inflationRateChange) : "",
          inflationMax: (0, helpers_1.isSet)(object.inflationMax) ? String(object.inflationMax) : "",
          inflationMin: (0, helpers_1.isSet)(object.inflationMin) ? String(object.inflationMin) : "",
          goalBonded: (0, helpers_1.isSet)(object.goalBonded) ? String(object.goalBonded) : "",
          blocksPerYear: (0, helpers_1.isSet)(object.blocksPerYear) ? helpers_1.Long.fromValue(object.blocksPerYear) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.mintDenom !== void 0 && (obj.mintDenom = message.mintDenom);
        message.inflationRateChange !== void 0 && (obj.inflationRateChange = message.inflationRateChange);
        message.inflationMax !== void 0 && (obj.inflationMax = message.inflationMax);
        message.inflationMin !== void 0 && (obj.inflationMin = message.inflationMin);
        message.goalBonded !== void 0 && (obj.goalBonded = message.goalBonded);
        message.blocksPerYear !== void 0 && (obj.blocksPerYear = (message.blocksPerYear || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseParams();
        message.mintDenom = object.mintDenom ?? "";
        message.inflationRateChange = object.inflationRateChange ?? "";
        message.inflationMax = object.inflationMax ?? "";
        message.inflationMin = object.inflationMin ?? "";
        message.goalBonded = object.goalBonded ?? "";
        message.blocksPerYear = object.blocksPerYear !== void 0 && object.blocksPerYear !== null ? helpers_1.Long.fromValue(object.blocksPerYear) : helpers_1.Long.UZERO;
        return message;
      }
    };
  }
});

// node_modules/cosmjs-types/cosmos/mint/v1beta1/query.js
var require_query11 = __commonJS({
  "node_modules/cosmjs-types/cosmos/mint/v1beta1/query.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.QueryClientImpl = exports.QueryAnnualProvisionsResponse = exports.QueryAnnualProvisionsRequest = exports.QueryInflationResponse = exports.QueryInflationRequest = exports.QueryParamsResponse = exports.QueryParamsRequest = exports.protobufPackage = void 0;
    var mint_1 = require_mint();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.mint.v1beta1";
    function createBaseQueryParamsRequest() {
      return {};
    }
    exports.QueryParamsRequest = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryParamsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseQueryParamsRequest();
        return message;
      }
    };
    function createBaseQueryParamsResponse() {
      return {
        params: void 0
      };
    }
    exports.QueryParamsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.params !== void 0) {
          mint_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryParamsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.params = mint_1.Params.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          params: (0, helpers_1.isSet)(object.params) ? mint_1.Params.fromJSON(object.params) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.params !== void 0 && (obj.params = message.params ? mint_1.Params.toJSON(message.params) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryParamsResponse();
        message.params = object.params !== void 0 && object.params !== null ? mint_1.Params.fromPartial(object.params) : void 0;
        return message;
      }
    };
    function createBaseQueryInflationRequest() {
      return {};
    }
    exports.QueryInflationRequest = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryInflationRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseQueryInflationRequest();
        return message;
      }
    };
    function createBaseQueryInflationResponse() {
      return {
        inflation: new Uint8Array()
      };
    }
    exports.QueryInflationResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.inflation.length !== 0) {
          writer.uint32(10).bytes(message.inflation);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryInflationResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.inflation = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          inflation: (0, helpers_1.isSet)(object.inflation) ? (0, helpers_1.bytesFromBase64)(object.inflation) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.inflation !== void 0 && (obj.inflation = (0, helpers_1.base64FromBytes)(message.inflation !== void 0 ? message.inflation : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryInflationResponse();
        message.inflation = object.inflation ?? new Uint8Array();
        return message;
      }
    };
    function createBaseQueryAnnualProvisionsRequest() {
      return {};
    }
    exports.QueryAnnualProvisionsRequest = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryAnnualProvisionsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseQueryAnnualProvisionsRequest();
        return message;
      }
    };
    function createBaseQueryAnnualProvisionsResponse() {
      return {
        annualProvisions: new Uint8Array()
      };
    }
    exports.QueryAnnualProvisionsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.annualProvisions.length !== 0) {
          writer.uint32(10).bytes(message.annualProvisions);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryAnnualProvisionsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.annualProvisions = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          annualProvisions: (0, helpers_1.isSet)(object.annualProvisions) ? (0, helpers_1.bytesFromBase64)(object.annualProvisions) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.annualProvisions !== void 0 && (obj.annualProvisions = (0, helpers_1.base64FromBytes)(message.annualProvisions !== void 0 ? message.annualProvisions : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryAnnualProvisionsResponse();
        message.annualProvisions = object.annualProvisions ?? new Uint8Array();
        return message;
      }
    };
    var QueryClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.Params = this.Params.bind(this);
        this.Inflation = this.Inflation.bind(this);
        this.AnnualProvisions = this.AnnualProvisions.bind(this);
      }
      Params(request = {}) {
        const data = exports.QueryParamsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.mint.v1beta1.Query", "Params", data);
        return promise.then((data2) => exports.QueryParamsResponse.decode(new _m0.Reader(data2)));
      }
      Inflation(request = {}) {
        const data = exports.QueryInflationRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.mint.v1beta1.Query", "Inflation", data);
        return promise.then((data2) => exports.QueryInflationResponse.decode(new _m0.Reader(data2)));
      }
      AnnualProvisions(request = {}) {
        const data = exports.QueryAnnualProvisionsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.mint.v1beta1.Query", "AnnualProvisions", data);
        return promise.then((data2) => exports.QueryAnnualProvisionsResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.QueryClientImpl = QueryClientImpl;
  }
});

// node_modules/@cosmjs/stargate/build/modules/mint/queries.js
var require_queries8 = __commonJS({
  "node_modules/@cosmjs/stargate/build/modules/mint/queries.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.setupMintExtension = void 0;
    var utils_1 = require_build3();
    var query_1 = require_query11();
    var queryclient_1 = require_queryclient2();
    function setupMintExtension(base) {
      const rpc = (0, queryclient_1.createProtobufRpcClient)(base);
      const queryService = new query_1.QueryClientImpl(rpc);
      return {
        mint: {
          params: async () => {
            const { params } = await queryService.Params({});
            (0, utils_1.assert)(params);
            return {
              blocksPerYear: params.blocksPerYear,
              goalBonded: (0, queryclient_1.decodeCosmosSdkDecFromProto)(params.goalBonded),
              inflationMin: (0, queryclient_1.decodeCosmosSdkDecFromProto)(params.inflationMin),
              inflationMax: (0, queryclient_1.decodeCosmosSdkDecFromProto)(params.inflationMax),
              inflationRateChange: (0, queryclient_1.decodeCosmosSdkDecFromProto)(params.inflationRateChange),
              mintDenom: params.mintDenom
            };
          },
          inflation: async () => {
            const { inflation } = await queryService.Inflation({});
            return (0, queryclient_1.decodeCosmosSdkDecFromProto)(inflation);
          },
          annualProvisions: async () => {
            const { annualProvisions } = await queryService.AnnualProvisions({});
            return (0, queryclient_1.decodeCosmosSdkDecFromProto)(annualProvisions);
          }
        }
      };
    }
    exports.setupMintExtension = setupMintExtension;
  }
});

// node_modules/@cosmjs/stargate/build/modules/slashing/aminomessages.js
var require_aminomessages9 = __commonJS({
  "node_modules/@cosmjs/stargate/build/modules/slashing/aminomessages.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createSlashingAminoConverters = exports.isAminoMsgUnjail = void 0;
    function isAminoMsgUnjail(msg) {
      return msg.type === "cosmos-sdk/MsgUnjail";
    }
    exports.isAminoMsgUnjail = isAminoMsgUnjail;
    function createSlashingAminoConverters() {
      throw new Error("Not implemented");
    }
    exports.createSlashingAminoConverters = createSlashingAminoConverters;
  }
});

// node_modules/cosmjs-types/cosmos/slashing/v1beta1/slashing.js
var require_slashing = __commonJS({
  "node_modules/cosmjs-types/cosmos/slashing/v1beta1/slashing.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Params = exports.ValidatorSigningInfo = exports.protobufPackage = void 0;
    var timestamp_1 = require_timestamp();
    var duration_1 = require_duration();
    var helpers_1 = require_helpers();
    var _m0 = __importStar(require_minimal());
    exports.protobufPackage = "cosmos.slashing.v1beta1";
    function createBaseValidatorSigningInfo() {
      return {
        address: "",
        startHeight: helpers_1.Long.ZERO,
        indexOffset: helpers_1.Long.ZERO,
        jailedUntil: void 0,
        tombstoned: false,
        missedBlocksCounter: helpers_1.Long.ZERO
      };
    }
    exports.ValidatorSigningInfo = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.address !== "") {
          writer.uint32(10).string(message.address);
        }
        if (!message.startHeight.isZero()) {
          writer.uint32(16).int64(message.startHeight);
        }
        if (!message.indexOffset.isZero()) {
          writer.uint32(24).int64(message.indexOffset);
        }
        if (message.jailedUntil !== void 0) {
          timestamp_1.Timestamp.encode(message.jailedUntil, writer.uint32(34).fork()).ldelim();
        }
        if (message.tombstoned === true) {
          writer.uint32(40).bool(message.tombstoned);
        }
        if (!message.missedBlocksCounter.isZero()) {
          writer.uint32(48).int64(message.missedBlocksCounter);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseValidatorSigningInfo();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.address = reader.string();
              break;
            case 2:
              message.startHeight = reader.int64();
              break;
            case 3:
              message.indexOffset = reader.int64();
              break;
            case 4:
              message.jailedUntil = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            case 5:
              message.tombstoned = reader.bool();
              break;
            case 6:
              message.missedBlocksCounter = reader.int64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          address: (0, helpers_1.isSet)(object.address) ? String(object.address) : "",
          startHeight: (0, helpers_1.isSet)(object.startHeight) ? helpers_1.Long.fromValue(object.startHeight) : helpers_1.Long.ZERO,
          indexOffset: (0, helpers_1.isSet)(object.indexOffset) ? helpers_1.Long.fromValue(object.indexOffset) : helpers_1.Long.ZERO,
          jailedUntil: (0, helpers_1.isSet)(object.jailedUntil) ? (0, helpers_1.fromJsonTimestamp)(object.jailedUntil) : void 0,
          tombstoned: (0, helpers_1.isSet)(object.tombstoned) ? Boolean(object.tombstoned) : false,
          missedBlocksCounter: (0, helpers_1.isSet)(object.missedBlocksCounter) ? helpers_1.Long.fromValue(object.missedBlocksCounter) : helpers_1.Long.ZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.address !== void 0 && (obj.address = message.address);
        message.startHeight !== void 0 && (obj.startHeight = (message.startHeight || helpers_1.Long.ZERO).toString());
        message.indexOffset !== void 0 && (obj.indexOffset = (message.indexOffset || helpers_1.Long.ZERO).toString());
        message.jailedUntil !== void 0 && (obj.jailedUntil = (0, helpers_1.fromTimestamp)(message.jailedUntil).toISOString());
        message.tombstoned !== void 0 && (obj.tombstoned = message.tombstoned);
        message.missedBlocksCounter !== void 0 && (obj.missedBlocksCounter = (message.missedBlocksCounter || helpers_1.Long.ZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseValidatorSigningInfo();
        message.address = object.address ?? "";
        message.startHeight = object.startHeight !== void 0 && object.startHeight !== null ? helpers_1.Long.fromValue(object.startHeight) : helpers_1.Long.ZERO;
        message.indexOffset = object.indexOffset !== void 0 && object.indexOffset !== null ? helpers_1.Long.fromValue(object.indexOffset) : helpers_1.Long.ZERO;
        message.jailedUntil = object.jailedUntil !== void 0 && object.jailedUntil !== null ? timestamp_1.Timestamp.fromPartial(object.jailedUntil) : void 0;
        message.tombstoned = object.tombstoned ?? false;
        message.missedBlocksCounter = object.missedBlocksCounter !== void 0 && object.missedBlocksCounter !== null ? helpers_1.Long.fromValue(object.missedBlocksCounter) : helpers_1.Long.ZERO;
        return message;
      }
    };
    function createBaseParams() {
      return {
        signedBlocksWindow: helpers_1.Long.ZERO,
        minSignedPerWindow: new Uint8Array(),
        downtimeJailDuration: void 0,
        slashFractionDoubleSign: new Uint8Array(),
        slashFractionDowntime: new Uint8Array()
      };
    }
    exports.Params = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.signedBlocksWindow.isZero()) {
          writer.uint32(8).int64(message.signedBlocksWindow);
        }
        if (message.minSignedPerWindow.length !== 0) {
          writer.uint32(18).bytes(message.minSignedPerWindow);
        }
        if (message.downtimeJailDuration !== void 0) {
          duration_1.Duration.encode(message.downtimeJailDuration, writer.uint32(26).fork()).ldelim();
        }
        if (message.slashFractionDoubleSign.length !== 0) {
          writer.uint32(34).bytes(message.slashFractionDoubleSign);
        }
        if (message.slashFractionDowntime.length !== 0) {
          writer.uint32(42).bytes(message.slashFractionDowntime);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseParams();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.signedBlocksWindow = reader.int64();
              break;
            case 2:
              message.minSignedPerWindow = reader.bytes();
              break;
            case 3:
              message.downtimeJailDuration = duration_1.Duration.decode(reader, reader.uint32());
              break;
            case 4:
              message.slashFractionDoubleSign = reader.bytes();
              break;
            case 5:
              message.slashFractionDowntime = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          signedBlocksWindow: (0, helpers_1.isSet)(object.signedBlocksWindow) ? helpers_1.Long.fromValue(object.signedBlocksWindow) : helpers_1.Long.ZERO,
          minSignedPerWindow: (0, helpers_1.isSet)(object.minSignedPerWindow) ? (0, helpers_1.bytesFromBase64)(object.minSignedPerWindow) : new Uint8Array(),
          downtimeJailDuration: (0, helpers_1.isSet)(object.downtimeJailDuration) ? duration_1.Duration.fromJSON(object.downtimeJailDuration) : void 0,
          slashFractionDoubleSign: (0, helpers_1.isSet)(object.slashFractionDoubleSign) ? (0, helpers_1.bytesFromBase64)(object.slashFractionDoubleSign) : new Uint8Array(),
          slashFractionDowntime: (0, helpers_1.isSet)(object.slashFractionDowntime) ? (0, helpers_1.bytesFromBase64)(object.slashFractionDowntime) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.signedBlocksWindow !== void 0 && (obj.signedBlocksWindow = (message.signedBlocksWindow || helpers_1.Long.ZERO).toString());
        message.minSignedPerWindow !== void 0 && (obj.minSignedPerWindow = (0, helpers_1.base64FromBytes)(message.minSignedPerWindow !== void 0 ? message.minSignedPerWindow : new Uint8Array()));
        message.downtimeJailDuration !== void 0 && (obj.downtimeJailDuration = message.downtimeJailDuration ? duration_1.Duration.toJSON(message.downtimeJailDuration) : void 0);
        message.slashFractionDoubleSign !== void 0 && (obj.slashFractionDoubleSign = (0, helpers_1.base64FromBytes)(message.slashFractionDoubleSign !== void 0 ? message.slashFractionDoubleSign : new Uint8Array()));
        message.slashFractionDowntime !== void 0 && (obj.slashFractionDowntime = (0, helpers_1.base64FromBytes)(message.slashFractionDowntime !== void 0 ? message.slashFractionDowntime : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseParams();
        message.signedBlocksWindow = object.signedBlocksWindow !== void 0 && object.signedBlocksWindow !== null ? helpers_1.Long.fromValue(object.signedBlocksWindow) : helpers_1.Long.ZERO;
        message.minSignedPerWindow = object.minSignedPerWindow ?? new Uint8Array();
        message.downtimeJailDuration = object.downtimeJailDuration !== void 0 && object.downtimeJailDuration !== null ? duration_1.Duration.fromPartial(object.downtimeJailDuration) : void 0;
        message.slashFractionDoubleSign = object.slashFractionDoubleSign ?? new Uint8Array();
        message.slashFractionDowntime = object.slashFractionDowntime ?? new Uint8Array();
        return message;
      }
    };
  }
});

// node_modules/cosmjs-types/cosmos/slashing/v1beta1/query.js
var require_query12 = __commonJS({
  "node_modules/cosmjs-types/cosmos/slashing/v1beta1/query.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.QueryClientImpl = exports.QuerySigningInfosResponse = exports.QuerySigningInfosRequest = exports.QuerySigningInfoResponse = exports.QuerySigningInfoRequest = exports.QueryParamsResponse = exports.QueryParamsRequest = exports.protobufPackage = void 0;
    var pagination_1 = require_pagination();
    var slashing_1 = require_slashing();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.slashing.v1beta1";
    function createBaseQueryParamsRequest() {
      return {};
    }
    exports.QueryParamsRequest = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryParamsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseQueryParamsRequest();
        return message;
      }
    };
    function createBaseQueryParamsResponse() {
      return {
        params: void 0
      };
    }
    exports.QueryParamsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.params !== void 0) {
          slashing_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryParamsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.params = slashing_1.Params.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          params: (0, helpers_1.isSet)(object.params) ? slashing_1.Params.fromJSON(object.params) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.params !== void 0 && (obj.params = message.params ? slashing_1.Params.toJSON(message.params) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryParamsResponse();
        message.params = object.params !== void 0 && object.params !== null ? slashing_1.Params.fromPartial(object.params) : void 0;
        return message;
      }
    };
    function createBaseQuerySigningInfoRequest() {
      return {
        consAddress: ""
      };
    }
    exports.QuerySigningInfoRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.consAddress !== "") {
          writer.uint32(10).string(message.consAddress);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQuerySigningInfoRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.consAddress = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          consAddress: (0, helpers_1.isSet)(object.consAddress) ? String(object.consAddress) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.consAddress !== void 0 && (obj.consAddress = message.consAddress);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQuerySigningInfoRequest();
        message.consAddress = object.consAddress ?? "";
        return message;
      }
    };
    function createBaseQuerySigningInfoResponse() {
      return {
        valSigningInfo: void 0
      };
    }
    exports.QuerySigningInfoResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.valSigningInfo !== void 0) {
          slashing_1.ValidatorSigningInfo.encode(message.valSigningInfo, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQuerySigningInfoResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.valSigningInfo = slashing_1.ValidatorSigningInfo.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          valSigningInfo: (0, helpers_1.isSet)(object.valSigningInfo) ? slashing_1.ValidatorSigningInfo.fromJSON(object.valSigningInfo) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.valSigningInfo !== void 0 && (obj.valSigningInfo = message.valSigningInfo ? slashing_1.ValidatorSigningInfo.toJSON(message.valSigningInfo) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQuerySigningInfoResponse();
        message.valSigningInfo = object.valSigningInfo !== void 0 && object.valSigningInfo !== null ? slashing_1.ValidatorSigningInfo.fromPartial(object.valSigningInfo) : void 0;
        return message;
      }
    };
    function createBaseQuerySigningInfosRequest() {
      return {
        pagination: void 0
      };
    }
    exports.QuerySigningInfosRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQuerySigningInfosRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQuerySigningInfosRequest();
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQuerySigningInfosResponse() {
      return {
        info: [],
        pagination: void 0
      };
    }
    exports.QuerySigningInfosResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.info) {
          slashing_1.ValidatorSigningInfo.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQuerySigningInfosResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.info.push(slashing_1.ValidatorSigningInfo.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          info: Array.isArray(object == null ? void 0 : object.info) ? object.info.map((e) => slashing_1.ValidatorSigningInfo.fromJSON(e)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.info) {
          obj.info = message.info.map((e) => e ? slashing_1.ValidatorSigningInfo.toJSON(e) : void 0);
        } else {
          obj.info = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQuerySigningInfosResponse();
        message.info = ((_a = object.info) == null ? void 0 : _a.map((e) => slashing_1.ValidatorSigningInfo.fromPartial(e))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    var QueryClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.Params = this.Params.bind(this);
        this.SigningInfo = this.SigningInfo.bind(this);
        this.SigningInfos = this.SigningInfos.bind(this);
      }
      Params(request = {}) {
        const data = exports.QueryParamsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.slashing.v1beta1.Query", "Params", data);
        return promise.then((data2) => exports.QueryParamsResponse.decode(new _m0.Reader(data2)));
      }
      SigningInfo(request) {
        const data = exports.QuerySigningInfoRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.slashing.v1beta1.Query", "SigningInfo", data);
        return promise.then((data2) => exports.QuerySigningInfoResponse.decode(new _m0.Reader(data2)));
      }
      SigningInfos(request = {
        pagination: void 0
      }) {
        const data = exports.QuerySigningInfosRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.slashing.v1beta1.Query", "SigningInfos", data);
        return promise.then((data2) => exports.QuerySigningInfosResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.QueryClientImpl = QueryClientImpl;
  }
});

// node_modules/@cosmjs/stargate/build/modules/slashing/queries.js
var require_queries9 = __commonJS({
  "node_modules/@cosmjs/stargate/build/modules/slashing/queries.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.setupSlashingExtension = void 0;
    var query_1 = require_query12();
    var queryclient_1 = require_queryclient2();
    function setupSlashingExtension(base) {
      const rpc = (0, queryclient_1.createProtobufRpcClient)(base);
      const queryService = new query_1.QueryClientImpl(rpc);
      return {
        slashing: {
          signingInfo: async (consAddress) => {
            const response = await queryService.SigningInfo({
              consAddress
            });
            return response;
          },
          signingInfos: async (paginationKey) => {
            const response = await queryService.SigningInfos({
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            });
            return response;
          },
          params: async () => {
            const response = await queryService.Params({});
            return response;
          }
        }
      };
    }
    exports.setupSlashingExtension = setupSlashingExtension;
  }
});

// node_modules/@cosmjs/stargate/build/modules/staking/aminomessages.js
var require_aminomessages10 = __commonJS({
  "node_modules/@cosmjs/stargate/build/modules/staking/aminomessages.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createStakingAminoConverters = exports.isAminoMsgUndelegate = exports.isAminoMsgBeginRedelegate = exports.isAminoMsgDelegate = exports.isAminoMsgEditValidator = exports.isAminoMsgCreateValidator = exports.protoDecimalToJson = void 0;
    var math_1 = require_build();
    var proto_signing_1 = require_build6();
    var utils_1 = require_build3();
    function protoDecimalToJson(decimal) {
      const parsed = math_1.Decimal.fromAtomics(decimal, 18);
      const [whole, fractional] = parsed.toString().split(".");
      return `${whole}.${(fractional ?? "").padEnd(18, "0")}`;
    }
    exports.protoDecimalToJson = protoDecimalToJson;
    function jsonDecimalToProto(decimal) {
      const parsed = math_1.Decimal.fromUserInput(decimal, 18);
      return parsed.atomics;
    }
    function isAminoMsgCreateValidator(msg) {
      return msg.type === "cosmos-sdk/MsgCreateValidator";
    }
    exports.isAminoMsgCreateValidator = isAminoMsgCreateValidator;
    function isAminoMsgEditValidator(msg) {
      return msg.type === "cosmos-sdk/MsgEditValidator";
    }
    exports.isAminoMsgEditValidator = isAminoMsgEditValidator;
    function isAminoMsgDelegate(msg) {
      return msg.type === "cosmos-sdk/MsgDelegate";
    }
    exports.isAminoMsgDelegate = isAminoMsgDelegate;
    function isAminoMsgBeginRedelegate(msg) {
      return msg.type === "cosmos-sdk/MsgBeginRedelegate";
    }
    exports.isAminoMsgBeginRedelegate = isAminoMsgBeginRedelegate;
    function isAminoMsgUndelegate(msg) {
      return msg.type === "cosmos-sdk/MsgUndelegate";
    }
    exports.isAminoMsgUndelegate = isAminoMsgUndelegate;
    function createStakingAminoConverters() {
      return {
        "/cosmos.staking.v1beta1.MsgBeginRedelegate": {
          aminoType: "cosmos-sdk/MsgBeginRedelegate",
          toAmino: ({ delegatorAddress, validatorSrcAddress, validatorDstAddress, amount }) => {
            (0, utils_1.assertDefinedAndNotNull)(amount, "missing amount");
            return {
              delegator_address: delegatorAddress,
              validator_src_address: validatorSrcAddress,
              validator_dst_address: validatorDstAddress,
              amount
            };
          },
          fromAmino: ({ delegator_address, validator_src_address, validator_dst_address, amount }) => ({
            delegatorAddress: delegator_address,
            validatorSrcAddress: validator_src_address,
            validatorDstAddress: validator_dst_address,
            amount
          })
        },
        "/cosmos.staking.v1beta1.MsgCreateValidator": {
          aminoType: "cosmos-sdk/MsgCreateValidator",
          toAmino: ({ description, commission, minSelfDelegation, delegatorAddress, validatorAddress, pubkey, value }) => {
            (0, utils_1.assertDefinedAndNotNull)(description, "missing description");
            (0, utils_1.assertDefinedAndNotNull)(commission, "missing commission");
            (0, utils_1.assertDefinedAndNotNull)(pubkey, "missing pubkey");
            (0, utils_1.assertDefinedAndNotNull)(value, "missing value");
            return {
              description: {
                moniker: description.moniker,
                identity: description.identity,
                website: description.website,
                security_contact: description.securityContact,
                details: description.details
              },
              commission: {
                rate: protoDecimalToJson(commission.rate),
                max_rate: protoDecimalToJson(commission.maxRate),
                max_change_rate: protoDecimalToJson(commission.maxChangeRate)
              },
              min_self_delegation: minSelfDelegation,
              delegator_address: delegatorAddress,
              validator_address: validatorAddress,
              pubkey: (0, proto_signing_1.decodePubkey)(pubkey),
              value
            };
          },
          fromAmino: ({ description, commission, min_self_delegation, delegator_address, validator_address, pubkey, value }) => {
            return {
              description: {
                moniker: description.moniker,
                identity: description.identity,
                website: description.website,
                securityContact: description.security_contact,
                details: description.details
              },
              commission: {
                rate: jsonDecimalToProto(commission.rate),
                maxRate: jsonDecimalToProto(commission.max_rate),
                maxChangeRate: jsonDecimalToProto(commission.max_change_rate)
              },
              minSelfDelegation: min_self_delegation,
              delegatorAddress: delegator_address,
              validatorAddress: validator_address,
              pubkey: (0, proto_signing_1.encodePubkey)(pubkey),
              value
            };
          }
        },
        "/cosmos.staking.v1beta1.MsgDelegate": {
          aminoType: "cosmos-sdk/MsgDelegate",
          toAmino: ({ delegatorAddress, validatorAddress, amount }) => {
            (0, utils_1.assertDefinedAndNotNull)(amount, "missing amount");
            return {
              delegator_address: delegatorAddress,
              validator_address: validatorAddress,
              amount
            };
          },
          fromAmino: ({ delegator_address, validator_address, amount }) => ({
            delegatorAddress: delegator_address,
            validatorAddress: validator_address,
            amount
          })
        },
        "/cosmos.staking.v1beta1.MsgEditValidator": {
          aminoType: "cosmos-sdk/MsgEditValidator",
          toAmino: ({ description, commissionRate, minSelfDelegation, validatorAddress }) => {
            (0, utils_1.assertDefinedAndNotNull)(description, "missing description");
            return {
              description: {
                moniker: description.moniker,
                identity: description.identity,
                website: description.website,
                security_contact: description.securityContact,
                details: description.details
              },
              // empty string in the protobuf document means "do not change"
              commission_rate: commissionRate ? protoDecimalToJson(commissionRate) : void 0,
              // empty string in the protobuf document means "do not change"
              min_self_delegation: minSelfDelegation ? minSelfDelegation : void 0,
              validator_address: validatorAddress
            };
          },
          fromAmino: ({ description, commission_rate, min_self_delegation, validator_address }) => ({
            description: {
              moniker: description.moniker,
              identity: description.identity,
              website: description.website,
              securityContact: description.security_contact,
              details: description.details
            },
            // empty string in the protobuf document means "do not change"
            commissionRate: commission_rate ? jsonDecimalToProto(commission_rate) : "",
            // empty string in the protobuf document means "do not change"
            minSelfDelegation: min_self_delegation ?? "",
            validatorAddress: validator_address
          })
        },
        "/cosmos.staking.v1beta1.MsgUndelegate": {
          aminoType: "cosmos-sdk/MsgUndelegate",
          toAmino: ({ delegatorAddress, validatorAddress, amount }) => {
            (0, utils_1.assertDefinedAndNotNull)(amount, "missing amount");
            return {
              delegator_address: delegatorAddress,
              validator_address: validatorAddress,
              amount
            };
          },
          fromAmino: ({ delegator_address, validator_address, amount }) => ({
            delegatorAddress: delegator_address,
            validatorAddress: validator_address,
            amount
          })
        }
      };
    }
    exports.createStakingAminoConverters = createStakingAminoConverters;
  }
});

// node_modules/cosmjs-types/cosmos/staking/v1beta1/staking.js
var require_staking = __commonJS({
  "node_modules/cosmjs-types/cosmos/staking/v1beta1/staking.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Pool = exports.RedelegationResponse = exports.RedelegationEntryResponse = exports.DelegationResponse = exports.Params = exports.Redelegation = exports.RedelegationEntry = exports.UnbondingDelegationEntry = exports.UnbondingDelegation = exports.Delegation = exports.DVVTriplets = exports.DVVTriplet = exports.DVPairs = exports.DVPair = exports.ValAddresses = exports.Validator = exports.Description = exports.Commission = exports.CommissionRates = exports.HistoricalInfo = exports.bondStatusToJSON = exports.bondStatusFromJSON = exports.BondStatus = exports.protobufPackage = void 0;
    var types_1 = require_types2();
    var timestamp_1 = require_timestamp();
    var any_1 = require_any();
    var duration_1 = require_duration();
    var coin_1 = require_coin();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.staking.v1beta1";
    var BondStatus;
    (function(BondStatus2) {
      BondStatus2[BondStatus2["BOND_STATUS_UNSPECIFIED"] = 0] = "BOND_STATUS_UNSPECIFIED";
      BondStatus2[BondStatus2["BOND_STATUS_UNBONDED"] = 1] = "BOND_STATUS_UNBONDED";
      BondStatus2[BondStatus2["BOND_STATUS_UNBONDING"] = 2] = "BOND_STATUS_UNBONDING";
      BondStatus2[BondStatus2["BOND_STATUS_BONDED"] = 3] = "BOND_STATUS_BONDED";
      BondStatus2[BondStatus2["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
    })(BondStatus = exports.BondStatus || (exports.BondStatus = {}));
    function bondStatusFromJSON(object) {
      switch (object) {
        case 0:
        case "BOND_STATUS_UNSPECIFIED":
          return BondStatus.BOND_STATUS_UNSPECIFIED;
        case 1:
        case "BOND_STATUS_UNBONDED":
          return BondStatus.BOND_STATUS_UNBONDED;
        case 2:
        case "BOND_STATUS_UNBONDING":
          return BondStatus.BOND_STATUS_UNBONDING;
        case 3:
        case "BOND_STATUS_BONDED":
          return BondStatus.BOND_STATUS_BONDED;
        case -1:
        case "UNRECOGNIZED":
        default:
          return BondStatus.UNRECOGNIZED;
      }
    }
    exports.bondStatusFromJSON = bondStatusFromJSON;
    function bondStatusToJSON(object) {
      switch (object) {
        case BondStatus.BOND_STATUS_UNSPECIFIED:
          return "BOND_STATUS_UNSPECIFIED";
        case BondStatus.BOND_STATUS_UNBONDED:
          return "BOND_STATUS_UNBONDED";
        case BondStatus.BOND_STATUS_UNBONDING:
          return "BOND_STATUS_UNBONDING";
        case BondStatus.BOND_STATUS_BONDED:
          return "BOND_STATUS_BONDED";
        case BondStatus.UNRECOGNIZED:
        default:
          return "UNRECOGNIZED";
      }
    }
    exports.bondStatusToJSON = bondStatusToJSON;
    function createBaseHistoricalInfo() {
      return {
        header: void 0,
        valset: []
      };
    }
    exports.HistoricalInfo = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.header !== void 0) {
          types_1.Header.encode(message.header, writer.uint32(10).fork()).ldelim();
        }
        for (const v of message.valset) {
          exports.Validator.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseHistoricalInfo();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.header = types_1.Header.decode(reader, reader.uint32());
              break;
            case 2:
              message.valset.push(exports.Validator.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          header: (0, helpers_1.isSet)(object.header) ? types_1.Header.fromJSON(object.header) : void 0,
          valset: Array.isArray(object == null ? void 0 : object.valset) ? object.valset.map((e) => exports.Validator.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.header !== void 0 && (obj.header = message.header ? types_1.Header.toJSON(message.header) : void 0);
        if (message.valset) {
          obj.valset = message.valset.map((e) => e ? exports.Validator.toJSON(e) : void 0);
        } else {
          obj.valset = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseHistoricalInfo();
        message.header = object.header !== void 0 && object.header !== null ? types_1.Header.fromPartial(object.header) : void 0;
        message.valset = ((_a = object.valset) == null ? void 0 : _a.map((e) => exports.Validator.fromPartial(e))) || [];
        return message;
      }
    };
    function createBaseCommissionRates() {
      return {
        rate: "",
        maxRate: "",
        maxChangeRate: ""
      };
    }
    exports.CommissionRates = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.rate !== "") {
          writer.uint32(10).string(message.rate);
        }
        if (message.maxRate !== "") {
          writer.uint32(18).string(message.maxRate);
        }
        if (message.maxChangeRate !== "") {
          writer.uint32(26).string(message.maxChangeRate);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseCommissionRates();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.rate = reader.string();
              break;
            case 2:
              message.maxRate = reader.string();
              break;
            case 3:
              message.maxChangeRate = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          rate: (0, helpers_1.isSet)(object.rate) ? String(object.rate) : "",
          maxRate: (0, helpers_1.isSet)(object.maxRate) ? String(object.maxRate) : "",
          maxChangeRate: (0, helpers_1.isSet)(object.maxChangeRate) ? String(object.maxChangeRate) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.rate !== void 0 && (obj.rate = message.rate);
        message.maxRate !== void 0 && (obj.maxRate = message.maxRate);
        message.maxChangeRate !== void 0 && (obj.maxChangeRate = message.maxChangeRate);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseCommissionRates();
        message.rate = object.rate ?? "";
        message.maxRate = object.maxRate ?? "";
        message.maxChangeRate = object.maxChangeRate ?? "";
        return message;
      }
    };
    function createBaseCommission() {
      return {
        commissionRates: void 0,
        updateTime: void 0
      };
    }
    exports.Commission = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.commissionRates !== void 0) {
          exports.CommissionRates.encode(message.commissionRates, writer.uint32(10).fork()).ldelim();
        }
        if (message.updateTime !== void 0) {
          timestamp_1.Timestamp.encode(message.updateTime, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseCommission();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.commissionRates = exports.CommissionRates.decode(reader, reader.uint32());
              break;
            case 2:
              message.updateTime = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          commissionRates: (0, helpers_1.isSet)(object.commissionRates) ? exports.CommissionRates.fromJSON(object.commissionRates) : void 0,
          updateTime: (0, helpers_1.isSet)(object.updateTime) ? (0, helpers_1.fromJsonTimestamp)(object.updateTime) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.commissionRates !== void 0 && (obj.commissionRates = message.commissionRates ? exports.CommissionRates.toJSON(message.commissionRates) : void 0);
        message.updateTime !== void 0 && (obj.updateTime = (0, helpers_1.fromTimestamp)(message.updateTime).toISOString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseCommission();
        message.commissionRates = object.commissionRates !== void 0 && object.commissionRates !== null ? exports.CommissionRates.fromPartial(object.commissionRates) : void 0;
        message.updateTime = object.updateTime !== void 0 && object.updateTime !== null ? timestamp_1.Timestamp.fromPartial(object.updateTime) : void 0;
        return message;
      }
    };
    function createBaseDescription() {
      return {
        moniker: "",
        identity: "",
        website: "",
        securityContact: "",
        details: ""
      };
    }
    exports.Description = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.moniker !== "") {
          writer.uint32(10).string(message.moniker);
        }
        if (message.identity !== "") {
          writer.uint32(18).string(message.identity);
        }
        if (message.website !== "") {
          writer.uint32(26).string(message.website);
        }
        if (message.securityContact !== "") {
          writer.uint32(34).string(message.securityContact);
        }
        if (message.details !== "") {
          writer.uint32(42).string(message.details);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseDescription();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.moniker = reader.string();
              break;
            case 2:
              message.identity = reader.string();
              break;
            case 3:
              message.website = reader.string();
              break;
            case 4:
              message.securityContact = reader.string();
              break;
            case 5:
              message.details = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          moniker: (0, helpers_1.isSet)(object.moniker) ? String(object.moniker) : "",
          identity: (0, helpers_1.isSet)(object.identity) ? String(object.identity) : "",
          website: (0, helpers_1.isSet)(object.website) ? String(object.website) : "",
          securityContact: (0, helpers_1.isSet)(object.securityContact) ? String(object.securityContact) : "",
          details: (0, helpers_1.isSet)(object.details) ? String(object.details) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.moniker !== void 0 && (obj.moniker = message.moniker);
        message.identity !== void 0 && (obj.identity = message.identity);
        message.website !== void 0 && (obj.website = message.website);
        message.securityContact !== void 0 && (obj.securityContact = message.securityContact);
        message.details !== void 0 && (obj.details = message.details);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseDescription();
        message.moniker = object.moniker ?? "";
        message.identity = object.identity ?? "";
        message.website = object.website ?? "";
        message.securityContact = object.securityContact ?? "";
        message.details = object.details ?? "";
        return message;
      }
    };
    function createBaseValidator() {
      return {
        operatorAddress: "",
        consensusPubkey: void 0,
        jailed: false,
        status: 0,
        tokens: "",
        delegatorShares: "",
        description: void 0,
        unbondingHeight: helpers_1.Long.ZERO,
        unbondingTime: void 0,
        commission: void 0,
        minSelfDelegation: ""
      };
    }
    exports.Validator = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.operatorAddress !== "") {
          writer.uint32(10).string(message.operatorAddress);
        }
        if (message.consensusPubkey !== void 0) {
          any_1.Any.encode(message.consensusPubkey, writer.uint32(18).fork()).ldelim();
        }
        if (message.jailed === true) {
          writer.uint32(24).bool(message.jailed);
        }
        if (message.status !== 0) {
          writer.uint32(32).int32(message.status);
        }
        if (message.tokens !== "") {
          writer.uint32(42).string(message.tokens);
        }
        if (message.delegatorShares !== "") {
          writer.uint32(50).string(message.delegatorShares);
        }
        if (message.description !== void 0) {
          exports.Description.encode(message.description, writer.uint32(58).fork()).ldelim();
        }
        if (!message.unbondingHeight.isZero()) {
          writer.uint32(64).int64(message.unbondingHeight);
        }
        if (message.unbondingTime !== void 0) {
          timestamp_1.Timestamp.encode(message.unbondingTime, writer.uint32(74).fork()).ldelim();
        }
        if (message.commission !== void 0) {
          exports.Commission.encode(message.commission, writer.uint32(82).fork()).ldelim();
        }
        if (message.minSelfDelegation !== "") {
          writer.uint32(90).string(message.minSelfDelegation);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseValidator();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.operatorAddress = reader.string();
              break;
            case 2:
              message.consensusPubkey = any_1.Any.decode(reader, reader.uint32());
              break;
            case 3:
              message.jailed = reader.bool();
              break;
            case 4:
              message.status = reader.int32();
              break;
            case 5:
              message.tokens = reader.string();
              break;
            case 6:
              message.delegatorShares = reader.string();
              break;
            case 7:
              message.description = exports.Description.decode(reader, reader.uint32());
              break;
            case 8:
              message.unbondingHeight = reader.int64();
              break;
            case 9:
              message.unbondingTime = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            case 10:
              message.commission = exports.Commission.decode(reader, reader.uint32());
              break;
            case 11:
              message.minSelfDelegation = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          operatorAddress: (0, helpers_1.isSet)(object.operatorAddress) ? String(object.operatorAddress) : "",
          consensusPubkey: (0, helpers_1.isSet)(object.consensusPubkey) ? any_1.Any.fromJSON(object.consensusPubkey) : void 0,
          jailed: (0, helpers_1.isSet)(object.jailed) ? Boolean(object.jailed) : false,
          status: (0, helpers_1.isSet)(object.status) ? bondStatusFromJSON(object.status) : 0,
          tokens: (0, helpers_1.isSet)(object.tokens) ? String(object.tokens) : "",
          delegatorShares: (0, helpers_1.isSet)(object.delegatorShares) ? String(object.delegatorShares) : "",
          description: (0, helpers_1.isSet)(object.description) ? exports.Description.fromJSON(object.description) : void 0,
          unbondingHeight: (0, helpers_1.isSet)(object.unbondingHeight) ? helpers_1.Long.fromValue(object.unbondingHeight) : helpers_1.Long.ZERO,
          unbondingTime: (0, helpers_1.isSet)(object.unbondingTime) ? (0, helpers_1.fromJsonTimestamp)(object.unbondingTime) : void 0,
          commission: (0, helpers_1.isSet)(object.commission) ? exports.Commission.fromJSON(object.commission) : void 0,
          minSelfDelegation: (0, helpers_1.isSet)(object.minSelfDelegation) ? String(object.minSelfDelegation) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.operatorAddress !== void 0 && (obj.operatorAddress = message.operatorAddress);
        message.consensusPubkey !== void 0 && (obj.consensusPubkey = message.consensusPubkey ? any_1.Any.toJSON(message.consensusPubkey) : void 0);
        message.jailed !== void 0 && (obj.jailed = message.jailed);
        message.status !== void 0 && (obj.status = bondStatusToJSON(message.status));
        message.tokens !== void 0 && (obj.tokens = message.tokens);
        message.delegatorShares !== void 0 && (obj.delegatorShares = message.delegatorShares);
        message.description !== void 0 && (obj.description = message.description ? exports.Description.toJSON(message.description) : void 0);
        message.unbondingHeight !== void 0 && (obj.unbondingHeight = (message.unbondingHeight || helpers_1.Long.ZERO).toString());
        message.unbondingTime !== void 0 && (obj.unbondingTime = (0, helpers_1.fromTimestamp)(message.unbondingTime).toISOString());
        message.commission !== void 0 && (obj.commission = message.commission ? exports.Commission.toJSON(message.commission) : void 0);
        message.minSelfDelegation !== void 0 && (obj.minSelfDelegation = message.minSelfDelegation);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseValidator();
        message.operatorAddress = object.operatorAddress ?? "";
        message.consensusPubkey = object.consensusPubkey !== void 0 && object.consensusPubkey !== null ? any_1.Any.fromPartial(object.consensusPubkey) : void 0;
        message.jailed = object.jailed ?? false;
        message.status = object.status ?? 0;
        message.tokens = object.tokens ?? "";
        message.delegatorShares = object.delegatorShares ?? "";
        message.description = object.description !== void 0 && object.description !== null ? exports.Description.fromPartial(object.description) : void 0;
        message.unbondingHeight = object.unbondingHeight !== void 0 && object.unbondingHeight !== null ? helpers_1.Long.fromValue(object.unbondingHeight) : helpers_1.Long.ZERO;
        message.unbondingTime = object.unbondingTime !== void 0 && object.unbondingTime !== null ? timestamp_1.Timestamp.fromPartial(object.unbondingTime) : void 0;
        message.commission = object.commission !== void 0 && object.commission !== null ? exports.Commission.fromPartial(object.commission) : void 0;
        message.minSelfDelegation = object.minSelfDelegation ?? "";
        return message;
      }
    };
    function createBaseValAddresses() {
      return {
        addresses: []
      };
    }
    exports.ValAddresses = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.addresses) {
          writer.uint32(10).string(v);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseValAddresses();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.addresses.push(reader.string());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          addresses: Array.isArray(object == null ? void 0 : object.addresses) ? object.addresses.map((e) => String(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.addresses) {
          obj.addresses = message.addresses.map((e) => e);
        } else {
          obj.addresses = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseValAddresses();
        message.addresses = ((_a = object.addresses) == null ? void 0 : _a.map((e) => e)) || [];
        return message;
      }
    };
    function createBaseDVPair() {
      return {
        delegatorAddress: "",
        validatorAddress: ""
      };
    }
    exports.DVPair = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegatorAddress !== "") {
          writer.uint32(10).string(message.delegatorAddress);
        }
        if (message.validatorAddress !== "") {
          writer.uint32(18).string(message.validatorAddress);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseDVPair();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegatorAddress = reader.string();
              break;
            case 2:
              message.validatorAddress = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegatorAddress: (0, helpers_1.isSet)(object.delegatorAddress) ? String(object.delegatorAddress) : "",
          validatorAddress: (0, helpers_1.isSet)(object.validatorAddress) ? String(object.validatorAddress) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegatorAddress !== void 0 && (obj.delegatorAddress = message.delegatorAddress);
        message.validatorAddress !== void 0 && (obj.validatorAddress = message.validatorAddress);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseDVPair();
        message.delegatorAddress = object.delegatorAddress ?? "";
        message.validatorAddress = object.validatorAddress ?? "";
        return message;
      }
    };
    function createBaseDVPairs() {
      return {
        pairs: []
      };
    }
    exports.DVPairs = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.pairs) {
          exports.DVPair.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseDVPairs();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.pairs.push(exports.DVPair.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          pairs: Array.isArray(object == null ? void 0 : object.pairs) ? object.pairs.map((e) => exports.DVPair.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.pairs) {
          obj.pairs = message.pairs.map((e) => e ? exports.DVPair.toJSON(e) : void 0);
        } else {
          obj.pairs = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseDVPairs();
        message.pairs = ((_a = object.pairs) == null ? void 0 : _a.map((e) => exports.DVPair.fromPartial(e))) || [];
        return message;
      }
    };
    function createBaseDVVTriplet() {
      return {
        delegatorAddress: "",
        validatorSrcAddress: "",
        validatorDstAddress: ""
      };
    }
    exports.DVVTriplet = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegatorAddress !== "") {
          writer.uint32(10).string(message.delegatorAddress);
        }
        if (message.validatorSrcAddress !== "") {
          writer.uint32(18).string(message.validatorSrcAddress);
        }
        if (message.validatorDstAddress !== "") {
          writer.uint32(26).string(message.validatorDstAddress);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseDVVTriplet();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegatorAddress = reader.string();
              break;
            case 2:
              message.validatorSrcAddress = reader.string();
              break;
            case 3:
              message.validatorDstAddress = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegatorAddress: (0, helpers_1.isSet)(object.delegatorAddress) ? String(object.delegatorAddress) : "",
          validatorSrcAddress: (0, helpers_1.isSet)(object.validatorSrcAddress) ? String(object.validatorSrcAddress) : "",
          validatorDstAddress: (0, helpers_1.isSet)(object.validatorDstAddress) ? String(object.validatorDstAddress) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegatorAddress !== void 0 && (obj.delegatorAddress = message.delegatorAddress);
        message.validatorSrcAddress !== void 0 && (obj.validatorSrcAddress = message.validatorSrcAddress);
        message.validatorDstAddress !== void 0 && (obj.validatorDstAddress = message.validatorDstAddress);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseDVVTriplet();
        message.delegatorAddress = object.delegatorAddress ?? "";
        message.validatorSrcAddress = object.validatorSrcAddress ?? "";
        message.validatorDstAddress = object.validatorDstAddress ?? "";
        return message;
      }
    };
    function createBaseDVVTriplets() {
      return {
        triplets: []
      };
    }
    exports.DVVTriplets = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.triplets) {
          exports.DVVTriplet.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseDVVTriplets();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.triplets.push(exports.DVVTriplet.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          triplets: Array.isArray(object == null ? void 0 : object.triplets) ? object.triplets.map((e) => exports.DVVTriplet.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.triplets) {
          obj.triplets = message.triplets.map((e) => e ? exports.DVVTriplet.toJSON(e) : void 0);
        } else {
          obj.triplets = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseDVVTriplets();
        message.triplets = ((_a = object.triplets) == null ? void 0 : _a.map((e) => exports.DVVTriplet.fromPartial(e))) || [];
        return message;
      }
    };
    function createBaseDelegation() {
      return {
        delegatorAddress: "",
        validatorAddress: "",
        shares: ""
      };
    }
    exports.Delegation = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegatorAddress !== "") {
          writer.uint32(10).string(message.delegatorAddress);
        }
        if (message.validatorAddress !== "") {
          writer.uint32(18).string(message.validatorAddress);
        }
        if (message.shares !== "") {
          writer.uint32(26).string(message.shares);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseDelegation();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegatorAddress = reader.string();
              break;
            case 2:
              message.validatorAddress = reader.string();
              break;
            case 3:
              message.shares = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegatorAddress: (0, helpers_1.isSet)(object.delegatorAddress) ? String(object.delegatorAddress) : "",
          validatorAddress: (0, helpers_1.isSet)(object.validatorAddress) ? String(object.validatorAddress) : "",
          shares: (0, helpers_1.isSet)(object.shares) ? String(object.shares) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegatorAddress !== void 0 && (obj.delegatorAddress = message.delegatorAddress);
        message.validatorAddress !== void 0 && (obj.validatorAddress = message.validatorAddress);
        message.shares !== void 0 && (obj.shares = message.shares);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseDelegation();
        message.delegatorAddress = object.delegatorAddress ?? "";
        message.validatorAddress = object.validatorAddress ?? "";
        message.shares = object.shares ?? "";
        return message;
      }
    };
    function createBaseUnbondingDelegation() {
      return {
        delegatorAddress: "",
        validatorAddress: "",
        entries: []
      };
    }
    exports.UnbondingDelegation = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegatorAddress !== "") {
          writer.uint32(10).string(message.delegatorAddress);
        }
        if (message.validatorAddress !== "") {
          writer.uint32(18).string(message.validatorAddress);
        }
        for (const v of message.entries) {
          exports.UnbondingDelegationEntry.encode(v, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseUnbondingDelegation();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegatorAddress = reader.string();
              break;
            case 2:
              message.validatorAddress = reader.string();
              break;
            case 3:
              message.entries.push(exports.UnbondingDelegationEntry.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegatorAddress: (0, helpers_1.isSet)(object.delegatorAddress) ? String(object.delegatorAddress) : "",
          validatorAddress: (0, helpers_1.isSet)(object.validatorAddress) ? String(object.validatorAddress) : "",
          entries: Array.isArray(object == null ? void 0 : object.entries) ? object.entries.map((e) => exports.UnbondingDelegationEntry.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegatorAddress !== void 0 && (obj.delegatorAddress = message.delegatorAddress);
        message.validatorAddress !== void 0 && (obj.validatorAddress = message.validatorAddress);
        if (message.entries) {
          obj.entries = message.entries.map((e) => e ? exports.UnbondingDelegationEntry.toJSON(e) : void 0);
        } else {
          obj.entries = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseUnbondingDelegation();
        message.delegatorAddress = object.delegatorAddress ?? "";
        message.validatorAddress = object.validatorAddress ?? "";
        message.entries = ((_a = object.entries) == null ? void 0 : _a.map((e) => exports.UnbondingDelegationEntry.fromPartial(e))) || [];
        return message;
      }
    };
    function createBaseUnbondingDelegationEntry() {
      return {
        creationHeight: helpers_1.Long.ZERO,
        completionTime: void 0,
        initialBalance: "",
        balance: ""
      };
    }
    exports.UnbondingDelegationEntry = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.creationHeight.isZero()) {
          writer.uint32(8).int64(message.creationHeight);
        }
        if (message.completionTime !== void 0) {
          timestamp_1.Timestamp.encode(message.completionTime, writer.uint32(18).fork()).ldelim();
        }
        if (message.initialBalance !== "") {
          writer.uint32(26).string(message.initialBalance);
        }
        if (message.balance !== "") {
          writer.uint32(34).string(message.balance);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseUnbondingDelegationEntry();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.creationHeight = reader.int64();
              break;
            case 2:
              message.completionTime = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            case 3:
              message.initialBalance = reader.string();
              break;
            case 4:
              message.balance = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          creationHeight: (0, helpers_1.isSet)(object.creationHeight) ? helpers_1.Long.fromValue(object.creationHeight) : helpers_1.Long.ZERO,
          completionTime: (0, helpers_1.isSet)(object.completionTime) ? (0, helpers_1.fromJsonTimestamp)(object.completionTime) : void 0,
          initialBalance: (0, helpers_1.isSet)(object.initialBalance) ? String(object.initialBalance) : "",
          balance: (0, helpers_1.isSet)(object.balance) ? String(object.balance) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.creationHeight !== void 0 && (obj.creationHeight = (message.creationHeight || helpers_1.Long.ZERO).toString());
        message.completionTime !== void 0 && (obj.completionTime = (0, helpers_1.fromTimestamp)(message.completionTime).toISOString());
        message.initialBalance !== void 0 && (obj.initialBalance = message.initialBalance);
        message.balance !== void 0 && (obj.balance = message.balance);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseUnbondingDelegationEntry();
        message.creationHeight = object.creationHeight !== void 0 && object.creationHeight !== null ? helpers_1.Long.fromValue(object.creationHeight) : helpers_1.Long.ZERO;
        message.completionTime = object.completionTime !== void 0 && object.completionTime !== null ? timestamp_1.Timestamp.fromPartial(object.completionTime) : void 0;
        message.initialBalance = object.initialBalance ?? "";
        message.balance = object.balance ?? "";
        return message;
      }
    };
    function createBaseRedelegationEntry() {
      return {
        creationHeight: helpers_1.Long.ZERO,
        completionTime: void 0,
        initialBalance: "",
        sharesDst: ""
      };
    }
    exports.RedelegationEntry = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.creationHeight.isZero()) {
          writer.uint32(8).int64(message.creationHeight);
        }
        if (message.completionTime !== void 0) {
          timestamp_1.Timestamp.encode(message.completionTime, writer.uint32(18).fork()).ldelim();
        }
        if (message.initialBalance !== "") {
          writer.uint32(26).string(message.initialBalance);
        }
        if (message.sharesDst !== "") {
          writer.uint32(34).string(message.sharesDst);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseRedelegationEntry();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.creationHeight = reader.int64();
              break;
            case 2:
              message.completionTime = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            case 3:
              message.initialBalance = reader.string();
              break;
            case 4:
              message.sharesDst = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          creationHeight: (0, helpers_1.isSet)(object.creationHeight) ? helpers_1.Long.fromValue(object.creationHeight) : helpers_1.Long.ZERO,
          completionTime: (0, helpers_1.isSet)(object.completionTime) ? (0, helpers_1.fromJsonTimestamp)(object.completionTime) : void 0,
          initialBalance: (0, helpers_1.isSet)(object.initialBalance) ? String(object.initialBalance) : "",
          sharesDst: (0, helpers_1.isSet)(object.sharesDst) ? String(object.sharesDst) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.creationHeight !== void 0 && (obj.creationHeight = (message.creationHeight || helpers_1.Long.ZERO).toString());
        message.completionTime !== void 0 && (obj.completionTime = (0, helpers_1.fromTimestamp)(message.completionTime).toISOString());
        message.initialBalance !== void 0 && (obj.initialBalance = message.initialBalance);
        message.sharesDst !== void 0 && (obj.sharesDst = message.sharesDst);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseRedelegationEntry();
        message.creationHeight = object.creationHeight !== void 0 && object.creationHeight !== null ? helpers_1.Long.fromValue(object.creationHeight) : helpers_1.Long.ZERO;
        message.completionTime = object.completionTime !== void 0 && object.completionTime !== null ? timestamp_1.Timestamp.fromPartial(object.completionTime) : void 0;
        message.initialBalance = object.initialBalance ?? "";
        message.sharesDst = object.sharesDst ?? "";
        return message;
      }
    };
    function createBaseRedelegation() {
      return {
        delegatorAddress: "",
        validatorSrcAddress: "",
        validatorDstAddress: "",
        entries: []
      };
    }
    exports.Redelegation = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegatorAddress !== "") {
          writer.uint32(10).string(message.delegatorAddress);
        }
        if (message.validatorSrcAddress !== "") {
          writer.uint32(18).string(message.validatorSrcAddress);
        }
        if (message.validatorDstAddress !== "") {
          writer.uint32(26).string(message.validatorDstAddress);
        }
        for (const v of message.entries) {
          exports.RedelegationEntry.encode(v, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseRedelegation();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegatorAddress = reader.string();
              break;
            case 2:
              message.validatorSrcAddress = reader.string();
              break;
            case 3:
              message.validatorDstAddress = reader.string();
              break;
            case 4:
              message.entries.push(exports.RedelegationEntry.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegatorAddress: (0, helpers_1.isSet)(object.delegatorAddress) ? String(object.delegatorAddress) : "",
          validatorSrcAddress: (0, helpers_1.isSet)(object.validatorSrcAddress) ? String(object.validatorSrcAddress) : "",
          validatorDstAddress: (0, helpers_1.isSet)(object.validatorDstAddress) ? String(object.validatorDstAddress) : "",
          entries: Array.isArray(object == null ? void 0 : object.entries) ? object.entries.map((e) => exports.RedelegationEntry.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegatorAddress !== void 0 && (obj.delegatorAddress = message.delegatorAddress);
        message.validatorSrcAddress !== void 0 && (obj.validatorSrcAddress = message.validatorSrcAddress);
        message.validatorDstAddress !== void 0 && (obj.validatorDstAddress = message.validatorDstAddress);
        if (message.entries) {
          obj.entries = message.entries.map((e) => e ? exports.RedelegationEntry.toJSON(e) : void 0);
        } else {
          obj.entries = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseRedelegation();
        message.delegatorAddress = object.delegatorAddress ?? "";
        message.validatorSrcAddress = object.validatorSrcAddress ?? "";
        message.validatorDstAddress = object.validatorDstAddress ?? "";
        message.entries = ((_a = object.entries) == null ? void 0 : _a.map((e) => exports.RedelegationEntry.fromPartial(e))) || [];
        return message;
      }
    };
    function createBaseParams() {
      return {
        unbondingTime: void 0,
        maxValidators: 0,
        maxEntries: 0,
        historicalEntries: 0,
        bondDenom: ""
      };
    }
    exports.Params = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.unbondingTime !== void 0) {
          duration_1.Duration.encode(message.unbondingTime, writer.uint32(10).fork()).ldelim();
        }
        if (message.maxValidators !== 0) {
          writer.uint32(16).uint32(message.maxValidators);
        }
        if (message.maxEntries !== 0) {
          writer.uint32(24).uint32(message.maxEntries);
        }
        if (message.historicalEntries !== 0) {
          writer.uint32(32).uint32(message.historicalEntries);
        }
        if (message.bondDenom !== "") {
          writer.uint32(42).string(message.bondDenom);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseParams();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.unbondingTime = duration_1.Duration.decode(reader, reader.uint32());
              break;
            case 2:
              message.maxValidators = reader.uint32();
              break;
            case 3:
              message.maxEntries = reader.uint32();
              break;
            case 4:
              message.historicalEntries = reader.uint32();
              break;
            case 5:
              message.bondDenom = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          unbondingTime: (0, helpers_1.isSet)(object.unbondingTime) ? duration_1.Duration.fromJSON(object.unbondingTime) : void 0,
          maxValidators: (0, helpers_1.isSet)(object.maxValidators) ? Number(object.maxValidators) : 0,
          maxEntries: (0, helpers_1.isSet)(object.maxEntries) ? Number(object.maxEntries) : 0,
          historicalEntries: (0, helpers_1.isSet)(object.historicalEntries) ? Number(object.historicalEntries) : 0,
          bondDenom: (0, helpers_1.isSet)(object.bondDenom) ? String(object.bondDenom) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.unbondingTime !== void 0 && (obj.unbondingTime = message.unbondingTime ? duration_1.Duration.toJSON(message.unbondingTime) : void 0);
        message.maxValidators !== void 0 && (obj.maxValidators = Math.round(message.maxValidators));
        message.maxEntries !== void 0 && (obj.maxEntries = Math.round(message.maxEntries));
        message.historicalEntries !== void 0 && (obj.historicalEntries = Math.round(message.historicalEntries));
        message.bondDenom !== void 0 && (obj.bondDenom = message.bondDenom);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseParams();
        message.unbondingTime = object.unbondingTime !== void 0 && object.unbondingTime !== null ? duration_1.Duration.fromPartial(object.unbondingTime) : void 0;
        message.maxValidators = object.maxValidators ?? 0;
        message.maxEntries = object.maxEntries ?? 0;
        message.historicalEntries = object.historicalEntries ?? 0;
        message.bondDenom = object.bondDenom ?? "";
        return message;
      }
    };
    function createBaseDelegationResponse() {
      return {
        delegation: void 0,
        balance: void 0
      };
    }
    exports.DelegationResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegation !== void 0) {
          exports.Delegation.encode(message.delegation, writer.uint32(10).fork()).ldelim();
        }
        if (message.balance !== void 0) {
          coin_1.Coin.encode(message.balance, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseDelegationResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegation = exports.Delegation.decode(reader, reader.uint32());
              break;
            case 2:
              message.balance = coin_1.Coin.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegation: (0, helpers_1.isSet)(object.delegation) ? exports.Delegation.fromJSON(object.delegation) : void 0,
          balance: (0, helpers_1.isSet)(object.balance) ? coin_1.Coin.fromJSON(object.balance) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegation !== void 0 && (obj.delegation = message.delegation ? exports.Delegation.toJSON(message.delegation) : void 0);
        message.balance !== void 0 && (obj.balance = message.balance ? coin_1.Coin.toJSON(message.balance) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseDelegationResponse();
        message.delegation = object.delegation !== void 0 && object.delegation !== null ? exports.Delegation.fromPartial(object.delegation) : void 0;
        message.balance = object.balance !== void 0 && object.balance !== null ? coin_1.Coin.fromPartial(object.balance) : void 0;
        return message;
      }
    };
    function createBaseRedelegationEntryResponse() {
      return {
        redelegationEntry: void 0,
        balance: ""
      };
    }
    exports.RedelegationEntryResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.redelegationEntry !== void 0) {
          exports.RedelegationEntry.encode(message.redelegationEntry, writer.uint32(10).fork()).ldelim();
        }
        if (message.balance !== "") {
          writer.uint32(34).string(message.balance);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseRedelegationEntryResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.redelegationEntry = exports.RedelegationEntry.decode(reader, reader.uint32());
              break;
            case 4:
              message.balance = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          redelegationEntry: (0, helpers_1.isSet)(object.redelegationEntry) ? exports.RedelegationEntry.fromJSON(object.redelegationEntry) : void 0,
          balance: (0, helpers_1.isSet)(object.balance) ? String(object.balance) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.redelegationEntry !== void 0 && (obj.redelegationEntry = message.redelegationEntry ? exports.RedelegationEntry.toJSON(message.redelegationEntry) : void 0);
        message.balance !== void 0 && (obj.balance = message.balance);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseRedelegationEntryResponse();
        message.redelegationEntry = object.redelegationEntry !== void 0 && object.redelegationEntry !== null ? exports.RedelegationEntry.fromPartial(object.redelegationEntry) : void 0;
        message.balance = object.balance ?? "";
        return message;
      }
    };
    function createBaseRedelegationResponse() {
      return {
        redelegation: void 0,
        entries: []
      };
    }
    exports.RedelegationResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.redelegation !== void 0) {
          exports.Redelegation.encode(message.redelegation, writer.uint32(10).fork()).ldelim();
        }
        for (const v of message.entries) {
          exports.RedelegationEntryResponse.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseRedelegationResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.redelegation = exports.Redelegation.decode(reader, reader.uint32());
              break;
            case 2:
              message.entries.push(exports.RedelegationEntryResponse.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          redelegation: (0, helpers_1.isSet)(object.redelegation) ? exports.Redelegation.fromJSON(object.redelegation) : void 0,
          entries: Array.isArray(object == null ? void 0 : object.entries) ? object.entries.map((e) => exports.RedelegationEntryResponse.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.redelegation !== void 0 && (obj.redelegation = message.redelegation ? exports.Redelegation.toJSON(message.redelegation) : void 0);
        if (message.entries) {
          obj.entries = message.entries.map((e) => e ? exports.RedelegationEntryResponse.toJSON(e) : void 0);
        } else {
          obj.entries = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseRedelegationResponse();
        message.redelegation = object.redelegation !== void 0 && object.redelegation !== null ? exports.Redelegation.fromPartial(object.redelegation) : void 0;
        message.entries = ((_a = object.entries) == null ? void 0 : _a.map((e) => exports.RedelegationEntryResponse.fromPartial(e))) || [];
        return message;
      }
    };
    function createBasePool() {
      return {
        notBondedTokens: "",
        bondedTokens: ""
      };
    }
    exports.Pool = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.notBondedTokens !== "") {
          writer.uint32(10).string(message.notBondedTokens);
        }
        if (message.bondedTokens !== "") {
          writer.uint32(18).string(message.bondedTokens);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBasePool();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.notBondedTokens = reader.string();
              break;
            case 2:
              message.bondedTokens = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          notBondedTokens: (0, helpers_1.isSet)(object.notBondedTokens) ? String(object.notBondedTokens) : "",
          bondedTokens: (0, helpers_1.isSet)(object.bondedTokens) ? String(object.bondedTokens) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.notBondedTokens !== void 0 && (obj.notBondedTokens = message.notBondedTokens);
        message.bondedTokens !== void 0 && (obj.bondedTokens = message.bondedTokens);
        return obj;
      },
      fromPartial(object) {
        const message = createBasePool();
        message.notBondedTokens = object.notBondedTokens ?? "";
        message.bondedTokens = object.bondedTokens ?? "";
        return message;
      }
    };
  }
});

// node_modules/cosmjs-types/cosmos/staking/v1beta1/tx.js
var require_tx11 = __commonJS({
  "node_modules/cosmjs-types/cosmos/staking/v1beta1/tx.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MsgClientImpl = exports.MsgUndelegateResponse = exports.MsgUndelegate = exports.MsgBeginRedelegateResponse = exports.MsgBeginRedelegate = exports.MsgDelegateResponse = exports.MsgDelegate = exports.MsgEditValidatorResponse = exports.MsgEditValidator = exports.MsgCreateValidatorResponse = exports.MsgCreateValidator = exports.protobufPackage = void 0;
    var staking_1 = require_staking();
    var any_1 = require_any();
    var coin_1 = require_coin();
    var timestamp_1 = require_timestamp();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.staking.v1beta1";
    function createBaseMsgCreateValidator() {
      return {
        description: void 0,
        commission: void 0,
        minSelfDelegation: "",
        delegatorAddress: "",
        validatorAddress: "",
        pubkey: void 0,
        value: void 0
      };
    }
    exports.MsgCreateValidator = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.description !== void 0) {
          staking_1.Description.encode(message.description, writer.uint32(10).fork()).ldelim();
        }
        if (message.commission !== void 0) {
          staking_1.CommissionRates.encode(message.commission, writer.uint32(18).fork()).ldelim();
        }
        if (message.minSelfDelegation !== "") {
          writer.uint32(26).string(message.minSelfDelegation);
        }
        if (message.delegatorAddress !== "") {
          writer.uint32(34).string(message.delegatorAddress);
        }
        if (message.validatorAddress !== "") {
          writer.uint32(42).string(message.validatorAddress);
        }
        if (message.pubkey !== void 0) {
          any_1.Any.encode(message.pubkey, writer.uint32(50).fork()).ldelim();
        }
        if (message.value !== void 0) {
          coin_1.Coin.encode(message.value, writer.uint32(58).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgCreateValidator();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.description = staking_1.Description.decode(reader, reader.uint32());
              break;
            case 2:
              message.commission = staking_1.CommissionRates.decode(reader, reader.uint32());
              break;
            case 3:
              message.minSelfDelegation = reader.string();
              break;
            case 4:
              message.delegatorAddress = reader.string();
              break;
            case 5:
              message.validatorAddress = reader.string();
              break;
            case 6:
              message.pubkey = any_1.Any.decode(reader, reader.uint32());
              break;
            case 7:
              message.value = coin_1.Coin.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          description: (0, helpers_1.isSet)(object.description) ? staking_1.Description.fromJSON(object.description) : void 0,
          commission: (0, helpers_1.isSet)(object.commission) ? staking_1.CommissionRates.fromJSON(object.commission) : void 0,
          minSelfDelegation: (0, helpers_1.isSet)(object.minSelfDelegation) ? String(object.minSelfDelegation) : "",
          delegatorAddress: (0, helpers_1.isSet)(object.delegatorAddress) ? String(object.delegatorAddress) : "",
          validatorAddress: (0, helpers_1.isSet)(object.validatorAddress) ? String(object.validatorAddress) : "",
          pubkey: (0, helpers_1.isSet)(object.pubkey) ? any_1.Any.fromJSON(object.pubkey) : void 0,
          value: (0, helpers_1.isSet)(object.value) ? coin_1.Coin.fromJSON(object.value) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.description !== void 0 && (obj.description = message.description ? staking_1.Description.toJSON(message.description) : void 0);
        message.commission !== void 0 && (obj.commission = message.commission ? staking_1.CommissionRates.toJSON(message.commission) : void 0);
        message.minSelfDelegation !== void 0 && (obj.minSelfDelegation = message.minSelfDelegation);
        message.delegatorAddress !== void 0 && (obj.delegatorAddress = message.delegatorAddress);
        message.validatorAddress !== void 0 && (obj.validatorAddress = message.validatorAddress);
        message.pubkey !== void 0 && (obj.pubkey = message.pubkey ? any_1.Any.toJSON(message.pubkey) : void 0);
        message.value !== void 0 && (obj.value = message.value ? coin_1.Coin.toJSON(message.value) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgCreateValidator();
        message.description = object.description !== void 0 && object.description !== null ? staking_1.Description.fromPartial(object.description) : void 0;
        message.commission = object.commission !== void 0 && object.commission !== null ? staking_1.CommissionRates.fromPartial(object.commission) : void 0;
        message.minSelfDelegation = object.minSelfDelegation ?? "";
        message.delegatorAddress = object.delegatorAddress ?? "";
        message.validatorAddress = object.validatorAddress ?? "";
        message.pubkey = object.pubkey !== void 0 && object.pubkey !== null ? any_1.Any.fromPartial(object.pubkey) : void 0;
        message.value = object.value !== void 0 && object.value !== null ? coin_1.Coin.fromPartial(object.value) : void 0;
        return message;
      }
    };
    function createBaseMsgCreateValidatorResponse() {
      return {};
    }
    exports.MsgCreateValidatorResponse = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgCreateValidatorResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseMsgCreateValidatorResponse();
        return message;
      }
    };
    function createBaseMsgEditValidator() {
      return {
        description: void 0,
        validatorAddress: "",
        commissionRate: "",
        minSelfDelegation: ""
      };
    }
    exports.MsgEditValidator = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.description !== void 0) {
          staking_1.Description.encode(message.description, writer.uint32(10).fork()).ldelim();
        }
        if (message.validatorAddress !== "") {
          writer.uint32(18).string(message.validatorAddress);
        }
        if (message.commissionRate !== "") {
          writer.uint32(26).string(message.commissionRate);
        }
        if (message.minSelfDelegation !== "") {
          writer.uint32(34).string(message.minSelfDelegation);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgEditValidator();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.description = staking_1.Description.decode(reader, reader.uint32());
              break;
            case 2:
              message.validatorAddress = reader.string();
              break;
            case 3:
              message.commissionRate = reader.string();
              break;
            case 4:
              message.minSelfDelegation = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          description: (0, helpers_1.isSet)(object.description) ? staking_1.Description.fromJSON(object.description) : void 0,
          validatorAddress: (0, helpers_1.isSet)(object.validatorAddress) ? String(object.validatorAddress) : "",
          commissionRate: (0, helpers_1.isSet)(object.commissionRate) ? String(object.commissionRate) : "",
          minSelfDelegation: (0, helpers_1.isSet)(object.minSelfDelegation) ? String(object.minSelfDelegation) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.description !== void 0 && (obj.description = message.description ? staking_1.Description.toJSON(message.description) : void 0);
        message.validatorAddress !== void 0 && (obj.validatorAddress = message.validatorAddress);
        message.commissionRate !== void 0 && (obj.commissionRate = message.commissionRate);
        message.minSelfDelegation !== void 0 && (obj.minSelfDelegation = message.minSelfDelegation);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgEditValidator();
        message.description = object.description !== void 0 && object.description !== null ? staking_1.Description.fromPartial(object.description) : void 0;
        message.validatorAddress = object.validatorAddress ?? "";
        message.commissionRate = object.commissionRate ?? "";
        message.minSelfDelegation = object.minSelfDelegation ?? "";
        return message;
      }
    };
    function createBaseMsgEditValidatorResponse() {
      return {};
    }
    exports.MsgEditValidatorResponse = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgEditValidatorResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseMsgEditValidatorResponse();
        return message;
      }
    };
    function createBaseMsgDelegate() {
      return {
        delegatorAddress: "",
        validatorAddress: "",
        amount: void 0
      };
    }
    exports.MsgDelegate = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegatorAddress !== "") {
          writer.uint32(10).string(message.delegatorAddress);
        }
        if (message.validatorAddress !== "") {
          writer.uint32(18).string(message.validatorAddress);
        }
        if (message.amount !== void 0) {
          coin_1.Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgDelegate();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegatorAddress = reader.string();
              break;
            case 2:
              message.validatorAddress = reader.string();
              break;
            case 3:
              message.amount = coin_1.Coin.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegatorAddress: (0, helpers_1.isSet)(object.delegatorAddress) ? String(object.delegatorAddress) : "",
          validatorAddress: (0, helpers_1.isSet)(object.validatorAddress) ? String(object.validatorAddress) : "",
          amount: (0, helpers_1.isSet)(object.amount) ? coin_1.Coin.fromJSON(object.amount) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegatorAddress !== void 0 && (obj.delegatorAddress = message.delegatorAddress);
        message.validatorAddress !== void 0 && (obj.validatorAddress = message.validatorAddress);
        message.amount !== void 0 && (obj.amount = message.amount ? coin_1.Coin.toJSON(message.amount) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgDelegate();
        message.delegatorAddress = object.delegatorAddress ?? "";
        message.validatorAddress = object.validatorAddress ?? "";
        message.amount = object.amount !== void 0 && object.amount !== null ? coin_1.Coin.fromPartial(object.amount) : void 0;
        return message;
      }
    };
    function createBaseMsgDelegateResponse() {
      return {};
    }
    exports.MsgDelegateResponse = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgDelegateResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseMsgDelegateResponse();
        return message;
      }
    };
    function createBaseMsgBeginRedelegate() {
      return {
        delegatorAddress: "",
        validatorSrcAddress: "",
        validatorDstAddress: "",
        amount: void 0
      };
    }
    exports.MsgBeginRedelegate = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegatorAddress !== "") {
          writer.uint32(10).string(message.delegatorAddress);
        }
        if (message.validatorSrcAddress !== "") {
          writer.uint32(18).string(message.validatorSrcAddress);
        }
        if (message.validatorDstAddress !== "") {
          writer.uint32(26).string(message.validatorDstAddress);
        }
        if (message.amount !== void 0) {
          coin_1.Coin.encode(message.amount, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgBeginRedelegate();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegatorAddress = reader.string();
              break;
            case 2:
              message.validatorSrcAddress = reader.string();
              break;
            case 3:
              message.validatorDstAddress = reader.string();
              break;
            case 4:
              message.amount = coin_1.Coin.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegatorAddress: (0, helpers_1.isSet)(object.delegatorAddress) ? String(object.delegatorAddress) : "",
          validatorSrcAddress: (0, helpers_1.isSet)(object.validatorSrcAddress) ? String(object.validatorSrcAddress) : "",
          validatorDstAddress: (0, helpers_1.isSet)(object.validatorDstAddress) ? String(object.validatorDstAddress) : "",
          amount: (0, helpers_1.isSet)(object.amount) ? coin_1.Coin.fromJSON(object.amount) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegatorAddress !== void 0 && (obj.delegatorAddress = message.delegatorAddress);
        message.validatorSrcAddress !== void 0 && (obj.validatorSrcAddress = message.validatorSrcAddress);
        message.validatorDstAddress !== void 0 && (obj.validatorDstAddress = message.validatorDstAddress);
        message.amount !== void 0 && (obj.amount = message.amount ? coin_1.Coin.toJSON(message.amount) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgBeginRedelegate();
        message.delegatorAddress = object.delegatorAddress ?? "";
        message.validatorSrcAddress = object.validatorSrcAddress ?? "";
        message.validatorDstAddress = object.validatorDstAddress ?? "";
        message.amount = object.amount !== void 0 && object.amount !== null ? coin_1.Coin.fromPartial(object.amount) : void 0;
        return message;
      }
    };
    function createBaseMsgBeginRedelegateResponse() {
      return {
        completionTime: void 0
      };
    }
    exports.MsgBeginRedelegateResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.completionTime !== void 0) {
          timestamp_1.Timestamp.encode(message.completionTime, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgBeginRedelegateResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.completionTime = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          completionTime: (0, helpers_1.isSet)(object.completionTime) ? (0, helpers_1.fromJsonTimestamp)(object.completionTime) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.completionTime !== void 0 && (obj.completionTime = (0, helpers_1.fromTimestamp)(message.completionTime).toISOString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgBeginRedelegateResponse();
        message.completionTime = object.completionTime !== void 0 && object.completionTime !== null ? timestamp_1.Timestamp.fromPartial(object.completionTime) : void 0;
        return message;
      }
    };
    function createBaseMsgUndelegate() {
      return {
        delegatorAddress: "",
        validatorAddress: "",
        amount: void 0
      };
    }
    exports.MsgUndelegate = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegatorAddress !== "") {
          writer.uint32(10).string(message.delegatorAddress);
        }
        if (message.validatorAddress !== "") {
          writer.uint32(18).string(message.validatorAddress);
        }
        if (message.amount !== void 0) {
          coin_1.Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgUndelegate();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegatorAddress = reader.string();
              break;
            case 2:
              message.validatorAddress = reader.string();
              break;
            case 3:
              message.amount = coin_1.Coin.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegatorAddress: (0, helpers_1.isSet)(object.delegatorAddress) ? String(object.delegatorAddress) : "",
          validatorAddress: (0, helpers_1.isSet)(object.validatorAddress) ? String(object.validatorAddress) : "",
          amount: (0, helpers_1.isSet)(object.amount) ? coin_1.Coin.fromJSON(object.amount) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegatorAddress !== void 0 && (obj.delegatorAddress = message.delegatorAddress);
        message.validatorAddress !== void 0 && (obj.validatorAddress = message.validatorAddress);
        message.amount !== void 0 && (obj.amount = message.amount ? coin_1.Coin.toJSON(message.amount) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgUndelegate();
        message.delegatorAddress = object.delegatorAddress ?? "";
        message.validatorAddress = object.validatorAddress ?? "";
        message.amount = object.amount !== void 0 && object.amount !== null ? coin_1.Coin.fromPartial(object.amount) : void 0;
        return message;
      }
    };
    function createBaseMsgUndelegateResponse() {
      return {
        completionTime: void 0
      };
    }
    exports.MsgUndelegateResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.completionTime !== void 0) {
          timestamp_1.Timestamp.encode(message.completionTime, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgUndelegateResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.completionTime = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          completionTime: (0, helpers_1.isSet)(object.completionTime) ? (0, helpers_1.fromJsonTimestamp)(object.completionTime) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.completionTime !== void 0 && (obj.completionTime = (0, helpers_1.fromTimestamp)(message.completionTime).toISOString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgUndelegateResponse();
        message.completionTime = object.completionTime !== void 0 && object.completionTime !== null ? timestamp_1.Timestamp.fromPartial(object.completionTime) : void 0;
        return message;
      }
    };
    var MsgClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.CreateValidator = this.CreateValidator.bind(this);
        this.EditValidator = this.EditValidator.bind(this);
        this.Delegate = this.Delegate.bind(this);
        this.BeginRedelegate = this.BeginRedelegate.bind(this);
        this.Undelegate = this.Undelegate.bind(this);
      }
      CreateValidator(request) {
        const data = exports.MsgCreateValidator.encode(request).finish();
        const promise = this.rpc.request("cosmos.staking.v1beta1.Msg", "CreateValidator", data);
        return promise.then((data2) => exports.MsgCreateValidatorResponse.decode(new _m0.Reader(data2)));
      }
      EditValidator(request) {
        const data = exports.MsgEditValidator.encode(request).finish();
        const promise = this.rpc.request("cosmos.staking.v1beta1.Msg", "EditValidator", data);
        return promise.then((data2) => exports.MsgEditValidatorResponse.decode(new _m0.Reader(data2)));
      }
      Delegate(request) {
        const data = exports.MsgDelegate.encode(request).finish();
        const promise = this.rpc.request("cosmos.staking.v1beta1.Msg", "Delegate", data);
        return promise.then((data2) => exports.MsgDelegateResponse.decode(new _m0.Reader(data2)));
      }
      BeginRedelegate(request) {
        const data = exports.MsgBeginRedelegate.encode(request).finish();
        const promise = this.rpc.request("cosmos.staking.v1beta1.Msg", "BeginRedelegate", data);
        return promise.then((data2) => exports.MsgBeginRedelegateResponse.decode(new _m0.Reader(data2)));
      }
      Undelegate(request) {
        const data = exports.MsgUndelegate.encode(request).finish();
        const promise = this.rpc.request("cosmos.staking.v1beta1.Msg", "Undelegate", data);
        return promise.then((data2) => exports.MsgUndelegateResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.MsgClientImpl = MsgClientImpl;
  }
});

// node_modules/@cosmjs/stargate/build/modules/staking/messages.js
var require_messages7 = __commonJS({
  "node_modules/@cosmjs/stargate/build/modules/staking/messages.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isMsgUndelegateEncodeObject = exports.isMsgEditValidatorEncodeObject = exports.isMsgDelegateEncodeObject = exports.isMsgCreateValidatorEncodeObject = exports.isMsgBeginRedelegateEncodeObject = exports.stakingTypes = void 0;
    var tx_1 = require_tx11();
    exports.stakingTypes = [
      ["/cosmos.staking.v1beta1.MsgBeginRedelegate", tx_1.MsgBeginRedelegate],
      ["/cosmos.staking.v1beta1.MsgCreateValidator", tx_1.MsgCreateValidator],
      ["/cosmos.staking.v1beta1.MsgDelegate", tx_1.MsgDelegate],
      ["/cosmos.staking.v1beta1.MsgEditValidator", tx_1.MsgEditValidator],
      ["/cosmos.staking.v1beta1.MsgUndelegate", tx_1.MsgUndelegate]
    ];
    function isMsgBeginRedelegateEncodeObject(o) {
      return o.typeUrl === "/cosmos.staking.v1beta1.MsgBeginRedelegate";
    }
    exports.isMsgBeginRedelegateEncodeObject = isMsgBeginRedelegateEncodeObject;
    function isMsgCreateValidatorEncodeObject(o) {
      return o.typeUrl === "/cosmos.staking.v1beta1.MsgCreateValidator";
    }
    exports.isMsgCreateValidatorEncodeObject = isMsgCreateValidatorEncodeObject;
    function isMsgDelegateEncodeObject(object) {
      return object.typeUrl === "/cosmos.staking.v1beta1.MsgDelegate";
    }
    exports.isMsgDelegateEncodeObject = isMsgDelegateEncodeObject;
    function isMsgEditValidatorEncodeObject(o) {
      return o.typeUrl === "/cosmos.staking.v1beta1.MsgEditValidator";
    }
    exports.isMsgEditValidatorEncodeObject = isMsgEditValidatorEncodeObject;
    function isMsgUndelegateEncodeObject(object) {
      return object.typeUrl === "/cosmos.staking.v1beta1.MsgUndelegate";
    }
    exports.isMsgUndelegateEncodeObject = isMsgUndelegateEncodeObject;
  }
});

// node_modules/cosmjs-types/cosmos/staking/v1beta1/query.js
var require_query13 = __commonJS({
  "node_modules/cosmjs-types/cosmos/staking/v1beta1/query.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.QueryClientImpl = exports.QueryParamsResponse = exports.QueryParamsRequest = exports.QueryPoolResponse = exports.QueryPoolRequest = exports.QueryHistoricalInfoResponse = exports.QueryHistoricalInfoRequest = exports.QueryDelegatorValidatorResponse = exports.QueryDelegatorValidatorRequest = exports.QueryDelegatorValidatorsResponse = exports.QueryDelegatorValidatorsRequest = exports.QueryRedelegationsResponse = exports.QueryRedelegationsRequest = exports.QueryDelegatorUnbondingDelegationsResponse = exports.QueryDelegatorUnbondingDelegationsRequest = exports.QueryDelegatorDelegationsResponse = exports.QueryDelegatorDelegationsRequest = exports.QueryUnbondingDelegationResponse = exports.QueryUnbondingDelegationRequest = exports.QueryDelegationResponse = exports.QueryDelegationRequest = exports.QueryValidatorUnbondingDelegationsResponse = exports.QueryValidatorUnbondingDelegationsRequest = exports.QueryValidatorDelegationsResponse = exports.QueryValidatorDelegationsRequest = exports.QueryValidatorResponse = exports.QueryValidatorRequest = exports.QueryValidatorsResponse = exports.QueryValidatorsRequest = exports.protobufPackage = void 0;
    var pagination_1 = require_pagination();
    var staking_1 = require_staking();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.staking.v1beta1";
    function createBaseQueryValidatorsRequest() {
      return {
        status: "",
        pagination: void 0
      };
    }
    exports.QueryValidatorsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.status !== "") {
          writer.uint32(10).string(message.status);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryValidatorsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.status = reader.string();
              break;
            case 2:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          status: (0, helpers_1.isSet)(object.status) ? String(object.status) : "",
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.status !== void 0 && (obj.status = message.status);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryValidatorsRequest();
        message.status = object.status ?? "";
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryValidatorsResponse() {
      return {
        validators: [],
        pagination: void 0
      };
    }
    exports.QueryValidatorsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.validators) {
          staking_1.Validator.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryValidatorsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.validators.push(staking_1.Validator.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          validators: Array.isArray(object == null ? void 0 : object.validators) ? object.validators.map((e) => staking_1.Validator.fromJSON(e)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.validators) {
          obj.validators = message.validators.map((e) => e ? staking_1.Validator.toJSON(e) : void 0);
        } else {
          obj.validators = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryValidatorsResponse();
        message.validators = ((_a = object.validators) == null ? void 0 : _a.map((e) => staking_1.Validator.fromPartial(e))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryValidatorRequest() {
      return {
        validatorAddr: ""
      };
    }
    exports.QueryValidatorRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.validatorAddr !== "") {
          writer.uint32(10).string(message.validatorAddr);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryValidatorRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.validatorAddr = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          validatorAddr: (0, helpers_1.isSet)(object.validatorAddr) ? String(object.validatorAddr) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.validatorAddr !== void 0 && (obj.validatorAddr = message.validatorAddr);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryValidatorRequest();
        message.validatorAddr = object.validatorAddr ?? "";
        return message;
      }
    };
    function createBaseQueryValidatorResponse() {
      return {
        validator: void 0
      };
    }
    exports.QueryValidatorResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.validator !== void 0) {
          staking_1.Validator.encode(message.validator, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryValidatorResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.validator = staking_1.Validator.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          validator: (0, helpers_1.isSet)(object.validator) ? staking_1.Validator.fromJSON(object.validator) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.validator !== void 0 && (obj.validator = message.validator ? staking_1.Validator.toJSON(message.validator) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryValidatorResponse();
        message.validator = object.validator !== void 0 && object.validator !== null ? staking_1.Validator.fromPartial(object.validator) : void 0;
        return message;
      }
    };
    function createBaseQueryValidatorDelegationsRequest() {
      return {
        validatorAddr: "",
        pagination: void 0
      };
    }
    exports.QueryValidatorDelegationsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.validatorAddr !== "") {
          writer.uint32(10).string(message.validatorAddr);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryValidatorDelegationsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.validatorAddr = reader.string();
              break;
            case 2:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          validatorAddr: (0, helpers_1.isSet)(object.validatorAddr) ? String(object.validatorAddr) : "",
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.validatorAddr !== void 0 && (obj.validatorAddr = message.validatorAddr);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryValidatorDelegationsRequest();
        message.validatorAddr = object.validatorAddr ?? "";
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryValidatorDelegationsResponse() {
      return {
        delegationResponses: [],
        pagination: void 0
      };
    }
    exports.QueryValidatorDelegationsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.delegationResponses) {
          staking_1.DelegationResponse.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryValidatorDelegationsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegationResponses.push(staking_1.DelegationResponse.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegationResponses: Array.isArray(object == null ? void 0 : object.delegationResponses) ? object.delegationResponses.map((e) => staking_1.DelegationResponse.fromJSON(e)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.delegationResponses) {
          obj.delegationResponses = message.delegationResponses.map((e) => e ? staking_1.DelegationResponse.toJSON(e) : void 0);
        } else {
          obj.delegationResponses = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryValidatorDelegationsResponse();
        message.delegationResponses = ((_a = object.delegationResponses) == null ? void 0 : _a.map((e) => staking_1.DelegationResponse.fromPartial(e))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryValidatorUnbondingDelegationsRequest() {
      return {
        validatorAddr: "",
        pagination: void 0
      };
    }
    exports.QueryValidatorUnbondingDelegationsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.validatorAddr !== "") {
          writer.uint32(10).string(message.validatorAddr);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryValidatorUnbondingDelegationsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.validatorAddr = reader.string();
              break;
            case 2:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          validatorAddr: (0, helpers_1.isSet)(object.validatorAddr) ? String(object.validatorAddr) : "",
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.validatorAddr !== void 0 && (obj.validatorAddr = message.validatorAddr);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryValidatorUnbondingDelegationsRequest();
        message.validatorAddr = object.validatorAddr ?? "";
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryValidatorUnbondingDelegationsResponse() {
      return {
        unbondingResponses: [],
        pagination: void 0
      };
    }
    exports.QueryValidatorUnbondingDelegationsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.unbondingResponses) {
          staking_1.UnbondingDelegation.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryValidatorUnbondingDelegationsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.unbondingResponses.push(staking_1.UnbondingDelegation.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          unbondingResponses: Array.isArray(object == null ? void 0 : object.unbondingResponses) ? object.unbondingResponses.map((e) => staking_1.UnbondingDelegation.fromJSON(e)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.unbondingResponses) {
          obj.unbondingResponses = message.unbondingResponses.map((e) => e ? staking_1.UnbondingDelegation.toJSON(e) : void 0);
        } else {
          obj.unbondingResponses = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryValidatorUnbondingDelegationsResponse();
        message.unbondingResponses = ((_a = object.unbondingResponses) == null ? void 0 : _a.map((e) => staking_1.UnbondingDelegation.fromPartial(e))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryDelegationRequest() {
      return {
        delegatorAddr: "",
        validatorAddr: ""
      };
    }
    exports.QueryDelegationRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegatorAddr !== "") {
          writer.uint32(10).string(message.delegatorAddr);
        }
        if (message.validatorAddr !== "") {
          writer.uint32(18).string(message.validatorAddr);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDelegationRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegatorAddr = reader.string();
              break;
            case 2:
              message.validatorAddr = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegatorAddr: (0, helpers_1.isSet)(object.delegatorAddr) ? String(object.delegatorAddr) : "",
          validatorAddr: (0, helpers_1.isSet)(object.validatorAddr) ? String(object.validatorAddr) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegatorAddr !== void 0 && (obj.delegatorAddr = message.delegatorAddr);
        message.validatorAddr !== void 0 && (obj.validatorAddr = message.validatorAddr);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDelegationRequest();
        message.delegatorAddr = object.delegatorAddr ?? "";
        message.validatorAddr = object.validatorAddr ?? "";
        return message;
      }
    };
    function createBaseQueryDelegationResponse() {
      return {
        delegationResponse: void 0
      };
    }
    exports.QueryDelegationResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegationResponse !== void 0) {
          staking_1.DelegationResponse.encode(message.delegationResponse, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDelegationResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegationResponse = staking_1.DelegationResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegationResponse: (0, helpers_1.isSet)(object.delegationResponse) ? staking_1.DelegationResponse.fromJSON(object.delegationResponse) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegationResponse !== void 0 && (obj.delegationResponse = message.delegationResponse ? staking_1.DelegationResponse.toJSON(message.delegationResponse) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDelegationResponse();
        message.delegationResponse = object.delegationResponse !== void 0 && object.delegationResponse !== null ? staking_1.DelegationResponse.fromPartial(object.delegationResponse) : void 0;
        return message;
      }
    };
    function createBaseQueryUnbondingDelegationRequest() {
      return {
        delegatorAddr: "",
        validatorAddr: ""
      };
    }
    exports.QueryUnbondingDelegationRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegatorAddr !== "") {
          writer.uint32(10).string(message.delegatorAddr);
        }
        if (message.validatorAddr !== "") {
          writer.uint32(18).string(message.validatorAddr);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryUnbondingDelegationRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegatorAddr = reader.string();
              break;
            case 2:
              message.validatorAddr = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegatorAddr: (0, helpers_1.isSet)(object.delegatorAddr) ? String(object.delegatorAddr) : "",
          validatorAddr: (0, helpers_1.isSet)(object.validatorAddr) ? String(object.validatorAddr) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegatorAddr !== void 0 && (obj.delegatorAddr = message.delegatorAddr);
        message.validatorAddr !== void 0 && (obj.validatorAddr = message.validatorAddr);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryUnbondingDelegationRequest();
        message.delegatorAddr = object.delegatorAddr ?? "";
        message.validatorAddr = object.validatorAddr ?? "";
        return message;
      }
    };
    function createBaseQueryUnbondingDelegationResponse() {
      return {
        unbond: void 0
      };
    }
    exports.QueryUnbondingDelegationResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.unbond !== void 0) {
          staking_1.UnbondingDelegation.encode(message.unbond, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryUnbondingDelegationResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.unbond = staking_1.UnbondingDelegation.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          unbond: (0, helpers_1.isSet)(object.unbond) ? staking_1.UnbondingDelegation.fromJSON(object.unbond) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.unbond !== void 0 && (obj.unbond = message.unbond ? staking_1.UnbondingDelegation.toJSON(message.unbond) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryUnbondingDelegationResponse();
        message.unbond = object.unbond !== void 0 && object.unbond !== null ? staking_1.UnbondingDelegation.fromPartial(object.unbond) : void 0;
        return message;
      }
    };
    function createBaseQueryDelegatorDelegationsRequest() {
      return {
        delegatorAddr: "",
        pagination: void 0
      };
    }
    exports.QueryDelegatorDelegationsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegatorAddr !== "") {
          writer.uint32(10).string(message.delegatorAddr);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDelegatorDelegationsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegatorAddr = reader.string();
              break;
            case 2:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegatorAddr: (0, helpers_1.isSet)(object.delegatorAddr) ? String(object.delegatorAddr) : "",
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegatorAddr !== void 0 && (obj.delegatorAddr = message.delegatorAddr);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDelegatorDelegationsRequest();
        message.delegatorAddr = object.delegatorAddr ?? "";
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryDelegatorDelegationsResponse() {
      return {
        delegationResponses: [],
        pagination: void 0
      };
    }
    exports.QueryDelegatorDelegationsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.delegationResponses) {
          staking_1.DelegationResponse.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDelegatorDelegationsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegationResponses.push(staking_1.DelegationResponse.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegationResponses: Array.isArray(object == null ? void 0 : object.delegationResponses) ? object.delegationResponses.map((e) => staking_1.DelegationResponse.fromJSON(e)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.delegationResponses) {
          obj.delegationResponses = message.delegationResponses.map((e) => e ? staking_1.DelegationResponse.toJSON(e) : void 0);
        } else {
          obj.delegationResponses = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryDelegatorDelegationsResponse();
        message.delegationResponses = ((_a = object.delegationResponses) == null ? void 0 : _a.map((e) => staking_1.DelegationResponse.fromPartial(e))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryDelegatorUnbondingDelegationsRequest() {
      return {
        delegatorAddr: "",
        pagination: void 0
      };
    }
    exports.QueryDelegatorUnbondingDelegationsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegatorAddr !== "") {
          writer.uint32(10).string(message.delegatorAddr);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDelegatorUnbondingDelegationsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegatorAddr = reader.string();
              break;
            case 2:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegatorAddr: (0, helpers_1.isSet)(object.delegatorAddr) ? String(object.delegatorAddr) : "",
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegatorAddr !== void 0 && (obj.delegatorAddr = message.delegatorAddr);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDelegatorUnbondingDelegationsRequest();
        message.delegatorAddr = object.delegatorAddr ?? "";
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryDelegatorUnbondingDelegationsResponse() {
      return {
        unbondingResponses: [],
        pagination: void 0
      };
    }
    exports.QueryDelegatorUnbondingDelegationsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.unbondingResponses) {
          staking_1.UnbondingDelegation.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDelegatorUnbondingDelegationsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.unbondingResponses.push(staking_1.UnbondingDelegation.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          unbondingResponses: Array.isArray(object == null ? void 0 : object.unbondingResponses) ? object.unbondingResponses.map((e) => staking_1.UnbondingDelegation.fromJSON(e)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.unbondingResponses) {
          obj.unbondingResponses = message.unbondingResponses.map((e) => e ? staking_1.UnbondingDelegation.toJSON(e) : void 0);
        } else {
          obj.unbondingResponses = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryDelegatorUnbondingDelegationsResponse();
        message.unbondingResponses = ((_a = object.unbondingResponses) == null ? void 0 : _a.map((e) => staking_1.UnbondingDelegation.fromPartial(e))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryRedelegationsRequest() {
      return {
        delegatorAddr: "",
        srcValidatorAddr: "",
        dstValidatorAddr: "",
        pagination: void 0
      };
    }
    exports.QueryRedelegationsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegatorAddr !== "") {
          writer.uint32(10).string(message.delegatorAddr);
        }
        if (message.srcValidatorAddr !== "") {
          writer.uint32(18).string(message.srcValidatorAddr);
        }
        if (message.dstValidatorAddr !== "") {
          writer.uint32(26).string(message.dstValidatorAddr);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryRedelegationsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegatorAddr = reader.string();
              break;
            case 2:
              message.srcValidatorAddr = reader.string();
              break;
            case 3:
              message.dstValidatorAddr = reader.string();
              break;
            case 4:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegatorAddr: (0, helpers_1.isSet)(object.delegatorAddr) ? String(object.delegatorAddr) : "",
          srcValidatorAddr: (0, helpers_1.isSet)(object.srcValidatorAddr) ? String(object.srcValidatorAddr) : "",
          dstValidatorAddr: (0, helpers_1.isSet)(object.dstValidatorAddr) ? String(object.dstValidatorAddr) : "",
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegatorAddr !== void 0 && (obj.delegatorAddr = message.delegatorAddr);
        message.srcValidatorAddr !== void 0 && (obj.srcValidatorAddr = message.srcValidatorAddr);
        message.dstValidatorAddr !== void 0 && (obj.dstValidatorAddr = message.dstValidatorAddr);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryRedelegationsRequest();
        message.delegatorAddr = object.delegatorAddr ?? "";
        message.srcValidatorAddr = object.srcValidatorAddr ?? "";
        message.dstValidatorAddr = object.dstValidatorAddr ?? "";
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryRedelegationsResponse() {
      return {
        redelegationResponses: [],
        pagination: void 0
      };
    }
    exports.QueryRedelegationsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.redelegationResponses) {
          staking_1.RedelegationResponse.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryRedelegationsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.redelegationResponses.push(staking_1.RedelegationResponse.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          redelegationResponses: Array.isArray(object == null ? void 0 : object.redelegationResponses) ? object.redelegationResponses.map((e) => staking_1.RedelegationResponse.fromJSON(e)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.redelegationResponses) {
          obj.redelegationResponses = message.redelegationResponses.map((e) => e ? staking_1.RedelegationResponse.toJSON(e) : void 0);
        } else {
          obj.redelegationResponses = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryRedelegationsResponse();
        message.redelegationResponses = ((_a = object.redelegationResponses) == null ? void 0 : _a.map((e) => staking_1.RedelegationResponse.fromPartial(e))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryDelegatorValidatorsRequest() {
      return {
        delegatorAddr: "",
        pagination: void 0
      };
    }
    exports.QueryDelegatorValidatorsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegatorAddr !== "") {
          writer.uint32(10).string(message.delegatorAddr);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDelegatorValidatorsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegatorAddr = reader.string();
              break;
            case 2:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegatorAddr: (0, helpers_1.isSet)(object.delegatorAddr) ? String(object.delegatorAddr) : "",
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegatorAddr !== void 0 && (obj.delegatorAddr = message.delegatorAddr);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDelegatorValidatorsRequest();
        message.delegatorAddr = object.delegatorAddr ?? "";
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryDelegatorValidatorsResponse() {
      return {
        validators: [],
        pagination: void 0
      };
    }
    exports.QueryDelegatorValidatorsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.validators) {
          staking_1.Validator.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDelegatorValidatorsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.validators.push(staking_1.Validator.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          validators: Array.isArray(object == null ? void 0 : object.validators) ? object.validators.map((e) => staking_1.Validator.fromJSON(e)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.validators) {
          obj.validators = message.validators.map((e) => e ? staking_1.Validator.toJSON(e) : void 0);
        } else {
          obj.validators = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryDelegatorValidatorsResponse();
        message.validators = ((_a = object.validators) == null ? void 0 : _a.map((e) => staking_1.Validator.fromPartial(e))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryDelegatorValidatorRequest() {
      return {
        delegatorAddr: "",
        validatorAddr: ""
      };
    }
    exports.QueryDelegatorValidatorRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegatorAddr !== "") {
          writer.uint32(10).string(message.delegatorAddr);
        }
        if (message.validatorAddr !== "") {
          writer.uint32(18).string(message.validatorAddr);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDelegatorValidatorRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegatorAddr = reader.string();
              break;
            case 2:
              message.validatorAddr = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegatorAddr: (0, helpers_1.isSet)(object.delegatorAddr) ? String(object.delegatorAddr) : "",
          validatorAddr: (0, helpers_1.isSet)(object.validatorAddr) ? String(object.validatorAddr) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegatorAddr !== void 0 && (obj.delegatorAddr = message.delegatorAddr);
        message.validatorAddr !== void 0 && (obj.validatorAddr = message.validatorAddr);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDelegatorValidatorRequest();
        message.delegatorAddr = object.delegatorAddr ?? "";
        message.validatorAddr = object.validatorAddr ?? "";
        return message;
      }
    };
    function createBaseQueryDelegatorValidatorResponse() {
      return {
        validator: void 0
      };
    }
    exports.QueryDelegatorValidatorResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.validator !== void 0) {
          staking_1.Validator.encode(message.validator, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDelegatorValidatorResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.validator = staking_1.Validator.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          validator: (0, helpers_1.isSet)(object.validator) ? staking_1.Validator.fromJSON(object.validator) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.validator !== void 0 && (obj.validator = message.validator ? staking_1.Validator.toJSON(message.validator) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDelegatorValidatorResponse();
        message.validator = object.validator !== void 0 && object.validator !== null ? staking_1.Validator.fromPartial(object.validator) : void 0;
        return message;
      }
    };
    function createBaseQueryHistoricalInfoRequest() {
      return {
        height: helpers_1.Long.ZERO
      };
    }
    exports.QueryHistoricalInfoRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.height.isZero()) {
          writer.uint32(8).int64(message.height);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryHistoricalInfoRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.height = reader.int64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          height: (0, helpers_1.isSet)(object.height) ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.height !== void 0 && (obj.height = (message.height || helpers_1.Long.ZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryHistoricalInfoRequest();
        message.height = object.height !== void 0 && object.height !== null ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO;
        return message;
      }
    };
    function createBaseQueryHistoricalInfoResponse() {
      return {
        hist: void 0
      };
    }
    exports.QueryHistoricalInfoResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.hist !== void 0) {
          staking_1.HistoricalInfo.encode(message.hist, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryHistoricalInfoResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.hist = staking_1.HistoricalInfo.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          hist: (0, helpers_1.isSet)(object.hist) ? staking_1.HistoricalInfo.fromJSON(object.hist) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.hist !== void 0 && (obj.hist = message.hist ? staking_1.HistoricalInfo.toJSON(message.hist) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryHistoricalInfoResponse();
        message.hist = object.hist !== void 0 && object.hist !== null ? staking_1.HistoricalInfo.fromPartial(object.hist) : void 0;
        return message;
      }
    };
    function createBaseQueryPoolRequest() {
      return {};
    }
    exports.QueryPoolRequest = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryPoolRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseQueryPoolRequest();
        return message;
      }
    };
    function createBaseQueryPoolResponse() {
      return {
        pool: void 0
      };
    }
    exports.QueryPoolResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.pool !== void 0) {
          staking_1.Pool.encode(message.pool, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryPoolResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.pool = staking_1.Pool.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          pool: (0, helpers_1.isSet)(object.pool) ? staking_1.Pool.fromJSON(object.pool) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.pool !== void 0 && (obj.pool = message.pool ? staking_1.Pool.toJSON(message.pool) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryPoolResponse();
        message.pool = object.pool !== void 0 && object.pool !== null ? staking_1.Pool.fromPartial(object.pool) : void 0;
        return message;
      }
    };
    function createBaseQueryParamsRequest() {
      return {};
    }
    exports.QueryParamsRequest = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryParamsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseQueryParamsRequest();
        return message;
      }
    };
    function createBaseQueryParamsResponse() {
      return {
        params: void 0
      };
    }
    exports.QueryParamsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.params !== void 0) {
          staking_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryParamsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.params = staking_1.Params.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          params: (0, helpers_1.isSet)(object.params) ? staking_1.Params.fromJSON(object.params) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.params !== void 0 && (obj.params = message.params ? staking_1.Params.toJSON(message.params) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryParamsResponse();
        message.params = object.params !== void 0 && object.params !== null ? staking_1.Params.fromPartial(object.params) : void 0;
        return message;
      }
    };
    var QueryClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.Validators = this.Validators.bind(this);
        this.Validator = this.Validator.bind(this);
        this.ValidatorDelegations = this.ValidatorDelegations.bind(this);
        this.ValidatorUnbondingDelegations = this.ValidatorUnbondingDelegations.bind(this);
        this.Delegation = this.Delegation.bind(this);
        this.UnbondingDelegation = this.UnbondingDelegation.bind(this);
        this.DelegatorDelegations = this.DelegatorDelegations.bind(this);
        this.DelegatorUnbondingDelegations = this.DelegatorUnbondingDelegations.bind(this);
        this.Redelegations = this.Redelegations.bind(this);
        this.DelegatorValidators = this.DelegatorValidators.bind(this);
        this.DelegatorValidator = this.DelegatorValidator.bind(this);
        this.HistoricalInfo = this.HistoricalInfo.bind(this);
        this.Pool = this.Pool.bind(this);
        this.Params = this.Params.bind(this);
      }
      Validators(request) {
        const data = exports.QueryValidatorsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.staking.v1beta1.Query", "Validators", data);
        return promise.then((data2) => exports.QueryValidatorsResponse.decode(new _m0.Reader(data2)));
      }
      Validator(request) {
        const data = exports.QueryValidatorRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.staking.v1beta1.Query", "Validator", data);
        return promise.then((data2) => exports.QueryValidatorResponse.decode(new _m0.Reader(data2)));
      }
      ValidatorDelegations(request) {
        const data = exports.QueryValidatorDelegationsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.staking.v1beta1.Query", "ValidatorDelegations", data);
        return promise.then((data2) => exports.QueryValidatorDelegationsResponse.decode(new _m0.Reader(data2)));
      }
      ValidatorUnbondingDelegations(request) {
        const data = exports.QueryValidatorUnbondingDelegationsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.staking.v1beta1.Query", "ValidatorUnbondingDelegations", data);
        return promise.then((data2) => exports.QueryValidatorUnbondingDelegationsResponse.decode(new _m0.Reader(data2)));
      }
      Delegation(request) {
        const data = exports.QueryDelegationRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.staking.v1beta1.Query", "Delegation", data);
        return promise.then((data2) => exports.QueryDelegationResponse.decode(new _m0.Reader(data2)));
      }
      UnbondingDelegation(request) {
        const data = exports.QueryUnbondingDelegationRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.staking.v1beta1.Query", "UnbondingDelegation", data);
        return promise.then((data2) => exports.QueryUnbondingDelegationResponse.decode(new _m0.Reader(data2)));
      }
      DelegatorDelegations(request) {
        const data = exports.QueryDelegatorDelegationsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.staking.v1beta1.Query", "DelegatorDelegations", data);
        return promise.then((data2) => exports.QueryDelegatorDelegationsResponse.decode(new _m0.Reader(data2)));
      }
      DelegatorUnbondingDelegations(request) {
        const data = exports.QueryDelegatorUnbondingDelegationsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.staking.v1beta1.Query", "DelegatorUnbondingDelegations", data);
        return promise.then((data2) => exports.QueryDelegatorUnbondingDelegationsResponse.decode(new _m0.Reader(data2)));
      }
      Redelegations(request) {
        const data = exports.QueryRedelegationsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.staking.v1beta1.Query", "Redelegations", data);
        return promise.then((data2) => exports.QueryRedelegationsResponse.decode(new _m0.Reader(data2)));
      }
      DelegatorValidators(request) {
        const data = exports.QueryDelegatorValidatorsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.staking.v1beta1.Query", "DelegatorValidators", data);
        return promise.then((data2) => exports.QueryDelegatorValidatorsResponse.decode(new _m0.Reader(data2)));
      }
      DelegatorValidator(request) {
        const data = exports.QueryDelegatorValidatorRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.staking.v1beta1.Query", "DelegatorValidator", data);
        return promise.then((data2) => exports.QueryDelegatorValidatorResponse.decode(new _m0.Reader(data2)));
      }
      HistoricalInfo(request) {
        const data = exports.QueryHistoricalInfoRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.staking.v1beta1.Query", "HistoricalInfo", data);
        return promise.then((data2) => exports.QueryHistoricalInfoResponse.decode(new _m0.Reader(data2)));
      }
      Pool(request = {}) {
        const data = exports.QueryPoolRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.staking.v1beta1.Query", "Pool", data);
        return promise.then((data2) => exports.QueryPoolResponse.decode(new _m0.Reader(data2)));
      }
      Params(request = {}) {
        const data = exports.QueryParamsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.staking.v1beta1.Query", "Params", data);
        return promise.then((data2) => exports.QueryParamsResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.QueryClientImpl = QueryClientImpl;
  }
});

// node_modules/@cosmjs/stargate/build/modules/staking/queries.js
var require_queries10 = __commonJS({
  "node_modules/@cosmjs/stargate/build/modules/staking/queries.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.setupStakingExtension = void 0;
    var query_1 = require_query13();
    var long_1 = __importDefault(require_long());
    var queryclient_1 = require_queryclient2();
    function setupStakingExtension(base) {
      const rpc = (0, queryclient_1.createProtobufRpcClient)(base);
      const queryService = new query_1.QueryClientImpl(rpc);
      return {
        staking: {
          delegation: async (delegatorAddress, validatorAddress) => {
            const response = await queryService.Delegation({
              delegatorAddr: delegatorAddress,
              validatorAddr: validatorAddress
            });
            return response;
          },
          delegatorDelegations: async (delegatorAddress, paginationKey) => {
            const response = await queryService.DelegatorDelegations({
              delegatorAddr: delegatorAddress,
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            });
            return response;
          },
          delegatorUnbondingDelegations: async (delegatorAddress, paginationKey) => {
            const response = await queryService.DelegatorUnbondingDelegations({
              delegatorAddr: delegatorAddress,
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            });
            return response;
          },
          delegatorValidator: async (delegatorAddress, validatorAddress) => {
            const response = await queryService.DelegatorValidator({
              delegatorAddr: delegatorAddress,
              validatorAddr: validatorAddress
            });
            return response;
          },
          delegatorValidators: async (delegatorAddress, paginationKey) => {
            const response = await queryService.DelegatorValidators({
              delegatorAddr: delegatorAddress,
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            });
            return response;
          },
          historicalInfo: async (height) => {
            const response = await queryService.HistoricalInfo({
              height: long_1.default.fromNumber(height, true)
            });
            return response;
          },
          params: async () => {
            const response = await queryService.Params({});
            return response;
          },
          pool: async () => {
            const response = await queryService.Pool({});
            return response;
          },
          redelegations: async (delegatorAddress, sourceValidatorAddress, destinationValidatorAddress, paginationKey) => {
            const response = await queryService.Redelegations({
              delegatorAddr: delegatorAddress,
              srcValidatorAddr: sourceValidatorAddress,
              dstValidatorAddr: destinationValidatorAddress,
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            });
            return response;
          },
          unbondingDelegation: async (delegatorAddress, validatorAddress) => {
            const response = await queryService.UnbondingDelegation({
              delegatorAddr: delegatorAddress,
              validatorAddr: validatorAddress
            });
            return response;
          },
          validator: async (validatorAddress) => {
            const response = await queryService.Validator({ validatorAddr: validatorAddress });
            return response;
          },
          validatorDelegations: async (validatorAddress, paginationKey) => {
            const response = await queryService.ValidatorDelegations({
              validatorAddr: validatorAddress,
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            });
            return response;
          },
          validators: async (status, paginationKey) => {
            const response = await queryService.Validators({
              status,
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            });
            return response;
          },
          validatorUnbondingDelegations: async (validatorAddress, paginationKey) => {
            const response = await queryService.ValidatorUnbondingDelegations({
              validatorAddr: validatorAddress,
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            });
            return response;
          }
        }
      };
    }
    exports.setupStakingExtension = setupStakingExtension;
  }
});

// node_modules/cosmjs-types/tendermint/types/params.js
var require_params = __commonJS({
  "node_modules/cosmjs-types/tendermint/types/params.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.HashedParams = exports.VersionParams = exports.ValidatorParams = exports.EvidenceParams = exports.BlockParams = exports.ConsensusParams = exports.protobufPackage = void 0;
    var duration_1 = require_duration();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "tendermint.types";
    function createBaseConsensusParams() {
      return {
        block: void 0,
        evidence: void 0,
        validator: void 0,
        version: void 0
      };
    }
    exports.ConsensusParams = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.block !== void 0) {
          exports.BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();
        }
        if (message.evidence !== void 0) {
          exports.EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();
        }
        if (message.validator !== void 0) {
          exports.ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();
        }
        if (message.version !== void 0) {
          exports.VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseConsensusParams();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.block = exports.BlockParams.decode(reader, reader.uint32());
              break;
            case 2:
              message.evidence = exports.EvidenceParams.decode(reader, reader.uint32());
              break;
            case 3:
              message.validator = exports.ValidatorParams.decode(reader, reader.uint32());
              break;
            case 4:
              message.version = exports.VersionParams.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          block: (0, helpers_1.isSet)(object.block) ? exports.BlockParams.fromJSON(object.block) : void 0,
          evidence: (0, helpers_1.isSet)(object.evidence) ? exports.EvidenceParams.fromJSON(object.evidence) : void 0,
          validator: (0, helpers_1.isSet)(object.validator) ? exports.ValidatorParams.fromJSON(object.validator) : void 0,
          version: (0, helpers_1.isSet)(object.version) ? exports.VersionParams.fromJSON(object.version) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.block !== void 0 && (obj.block = message.block ? exports.BlockParams.toJSON(message.block) : void 0);
        message.evidence !== void 0 && (obj.evidence = message.evidence ? exports.EvidenceParams.toJSON(message.evidence) : void 0);
        message.validator !== void 0 && (obj.validator = message.validator ? exports.ValidatorParams.toJSON(message.validator) : void 0);
        message.version !== void 0 && (obj.version = message.version ? exports.VersionParams.toJSON(message.version) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseConsensusParams();
        message.block = object.block !== void 0 && object.block !== null ? exports.BlockParams.fromPartial(object.block) : void 0;
        message.evidence = object.evidence !== void 0 && object.evidence !== null ? exports.EvidenceParams.fromPartial(object.evidence) : void 0;
        message.validator = object.validator !== void 0 && object.validator !== null ? exports.ValidatorParams.fromPartial(object.validator) : void 0;
        message.version = object.version !== void 0 && object.version !== null ? exports.VersionParams.fromPartial(object.version) : void 0;
        return message;
      }
    };
    function createBaseBlockParams() {
      return {
        maxBytes: helpers_1.Long.ZERO,
        maxGas: helpers_1.Long.ZERO,
        timeIotaMs: helpers_1.Long.ZERO
      };
    }
    exports.BlockParams = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.maxBytes.isZero()) {
          writer.uint32(8).int64(message.maxBytes);
        }
        if (!message.maxGas.isZero()) {
          writer.uint32(16).int64(message.maxGas);
        }
        if (!message.timeIotaMs.isZero()) {
          writer.uint32(24).int64(message.timeIotaMs);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseBlockParams();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.maxBytes = reader.int64();
              break;
            case 2:
              message.maxGas = reader.int64();
              break;
            case 3:
              message.timeIotaMs = reader.int64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          maxBytes: (0, helpers_1.isSet)(object.maxBytes) ? helpers_1.Long.fromValue(object.maxBytes) : helpers_1.Long.ZERO,
          maxGas: (0, helpers_1.isSet)(object.maxGas) ? helpers_1.Long.fromValue(object.maxGas) : helpers_1.Long.ZERO,
          timeIotaMs: (0, helpers_1.isSet)(object.timeIotaMs) ? helpers_1.Long.fromValue(object.timeIotaMs) : helpers_1.Long.ZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.maxBytes !== void 0 && (obj.maxBytes = (message.maxBytes || helpers_1.Long.ZERO).toString());
        message.maxGas !== void 0 && (obj.maxGas = (message.maxGas || helpers_1.Long.ZERO).toString());
        message.timeIotaMs !== void 0 && (obj.timeIotaMs = (message.timeIotaMs || helpers_1.Long.ZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseBlockParams();
        message.maxBytes = object.maxBytes !== void 0 && object.maxBytes !== null ? helpers_1.Long.fromValue(object.maxBytes) : helpers_1.Long.ZERO;
        message.maxGas = object.maxGas !== void 0 && object.maxGas !== null ? helpers_1.Long.fromValue(object.maxGas) : helpers_1.Long.ZERO;
        message.timeIotaMs = object.timeIotaMs !== void 0 && object.timeIotaMs !== null ? helpers_1.Long.fromValue(object.timeIotaMs) : helpers_1.Long.ZERO;
        return message;
      }
    };
    function createBaseEvidenceParams() {
      return {
        maxAgeNumBlocks: helpers_1.Long.ZERO,
        maxAgeDuration: void 0,
        maxBytes: helpers_1.Long.ZERO
      };
    }
    exports.EvidenceParams = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.maxAgeNumBlocks.isZero()) {
          writer.uint32(8).int64(message.maxAgeNumBlocks);
        }
        if (message.maxAgeDuration !== void 0) {
          duration_1.Duration.encode(message.maxAgeDuration, writer.uint32(18).fork()).ldelim();
        }
        if (!message.maxBytes.isZero()) {
          writer.uint32(24).int64(message.maxBytes);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseEvidenceParams();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.maxAgeNumBlocks = reader.int64();
              break;
            case 2:
              message.maxAgeDuration = duration_1.Duration.decode(reader, reader.uint32());
              break;
            case 3:
              message.maxBytes = reader.int64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          maxAgeNumBlocks: (0, helpers_1.isSet)(object.maxAgeNumBlocks) ? helpers_1.Long.fromValue(object.maxAgeNumBlocks) : helpers_1.Long.ZERO,
          maxAgeDuration: (0, helpers_1.isSet)(object.maxAgeDuration) ? duration_1.Duration.fromJSON(object.maxAgeDuration) : void 0,
          maxBytes: (0, helpers_1.isSet)(object.maxBytes) ? helpers_1.Long.fromValue(object.maxBytes) : helpers_1.Long.ZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.maxAgeNumBlocks !== void 0 && (obj.maxAgeNumBlocks = (message.maxAgeNumBlocks || helpers_1.Long.ZERO).toString());
        message.maxAgeDuration !== void 0 && (obj.maxAgeDuration = message.maxAgeDuration ? duration_1.Duration.toJSON(message.maxAgeDuration) : void 0);
        message.maxBytes !== void 0 && (obj.maxBytes = (message.maxBytes || helpers_1.Long.ZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseEvidenceParams();
        message.maxAgeNumBlocks = object.maxAgeNumBlocks !== void 0 && object.maxAgeNumBlocks !== null ? helpers_1.Long.fromValue(object.maxAgeNumBlocks) : helpers_1.Long.ZERO;
        message.maxAgeDuration = object.maxAgeDuration !== void 0 && object.maxAgeDuration !== null ? duration_1.Duration.fromPartial(object.maxAgeDuration) : void 0;
        message.maxBytes = object.maxBytes !== void 0 && object.maxBytes !== null ? helpers_1.Long.fromValue(object.maxBytes) : helpers_1.Long.ZERO;
        return message;
      }
    };
    function createBaseValidatorParams() {
      return {
        pubKeyTypes: []
      };
    }
    exports.ValidatorParams = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.pubKeyTypes) {
          writer.uint32(10).string(v);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseValidatorParams();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.pubKeyTypes.push(reader.string());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          pubKeyTypes: Array.isArray(object == null ? void 0 : object.pubKeyTypes) ? object.pubKeyTypes.map((e) => String(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.pubKeyTypes) {
          obj.pubKeyTypes = message.pubKeyTypes.map((e) => e);
        } else {
          obj.pubKeyTypes = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseValidatorParams();
        message.pubKeyTypes = ((_a = object.pubKeyTypes) == null ? void 0 : _a.map((e) => e)) || [];
        return message;
      }
    };
    function createBaseVersionParams() {
      return {
        appVersion: helpers_1.Long.UZERO
      };
    }
    exports.VersionParams = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.appVersion.isZero()) {
          writer.uint32(8).uint64(message.appVersion);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseVersionParams();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.appVersion = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          appVersion: (0, helpers_1.isSet)(object.appVersion) ? helpers_1.Long.fromValue(object.appVersion) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.appVersion !== void 0 && (obj.appVersion = (message.appVersion || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseVersionParams();
        message.appVersion = object.appVersion !== void 0 && object.appVersion !== null ? helpers_1.Long.fromValue(object.appVersion) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseHashedParams() {
      return {
        blockMaxBytes: helpers_1.Long.ZERO,
        blockMaxGas: helpers_1.Long.ZERO
      };
    }
    exports.HashedParams = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.blockMaxBytes.isZero()) {
          writer.uint32(8).int64(message.blockMaxBytes);
        }
        if (!message.blockMaxGas.isZero()) {
          writer.uint32(16).int64(message.blockMaxGas);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseHashedParams();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.blockMaxBytes = reader.int64();
              break;
            case 2:
              message.blockMaxGas = reader.int64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          blockMaxBytes: (0, helpers_1.isSet)(object.blockMaxBytes) ? helpers_1.Long.fromValue(object.blockMaxBytes) : helpers_1.Long.ZERO,
          blockMaxGas: (0, helpers_1.isSet)(object.blockMaxGas) ? helpers_1.Long.fromValue(object.blockMaxGas) : helpers_1.Long.ZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.blockMaxBytes !== void 0 && (obj.blockMaxBytes = (message.blockMaxBytes || helpers_1.Long.ZERO).toString());
        message.blockMaxGas !== void 0 && (obj.blockMaxGas = (message.blockMaxGas || helpers_1.Long.ZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseHashedParams();
        message.blockMaxBytes = object.blockMaxBytes !== void 0 && object.blockMaxBytes !== null ? helpers_1.Long.fromValue(object.blockMaxBytes) : helpers_1.Long.ZERO;
        message.blockMaxGas = object.blockMaxGas !== void 0 && object.blockMaxGas !== null ? helpers_1.Long.fromValue(object.blockMaxGas) : helpers_1.Long.ZERO;
        return message;
      }
    };
  }
});

// node_modules/cosmjs-types/tendermint/abci/types.js
var require_types3 = __commonJS({
  "node_modules/cosmjs-types/tendermint/abci/types.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Event = exports.LastCommitInfo = exports.BlockParams = exports.ConsensusParams = exports.ResponseApplySnapshotChunk = exports.ResponseLoadSnapshotChunk = exports.ResponseOfferSnapshot = exports.ResponseListSnapshots = exports.ResponseCommit = exports.ResponseEndBlock = exports.ResponseDeliverTx = exports.ResponseCheckTx = exports.ResponseBeginBlock = exports.ResponseQuery = exports.ResponseInitChain = exports.ResponseSetOption = exports.ResponseInfo = exports.ResponseFlush = exports.ResponseEcho = exports.ResponseException = exports.Response = exports.RequestApplySnapshotChunk = exports.RequestLoadSnapshotChunk = exports.RequestOfferSnapshot = exports.RequestListSnapshots = exports.RequestCommit = exports.RequestEndBlock = exports.RequestDeliverTx = exports.RequestCheckTx = exports.RequestBeginBlock = exports.RequestQuery = exports.RequestInitChain = exports.RequestSetOption = exports.RequestInfo = exports.RequestFlush = exports.RequestEcho = exports.Request = exports.evidenceTypeToJSON = exports.evidenceTypeFromJSON = exports.EvidenceType = exports.responseApplySnapshotChunk_ResultToJSON = exports.responseApplySnapshotChunk_ResultFromJSON = exports.ResponseApplySnapshotChunk_Result = exports.responseOfferSnapshot_ResultToJSON = exports.responseOfferSnapshot_ResultFromJSON = exports.ResponseOfferSnapshot_Result = exports.checkTxTypeToJSON = exports.checkTxTypeFromJSON = exports.CheckTxType = exports.protobufPackage = void 0;
    exports.ABCIApplicationClientImpl = exports.Snapshot = exports.Evidence = exports.VoteInfo = exports.ValidatorUpdate = exports.Validator = exports.TxResult = exports.EventAttribute = void 0;
    var timestamp_1 = require_timestamp();
    var types_1 = require_types2();
    var proof_1 = require_proof();
    var params_1 = require_params();
    var keys_1 = require_keys4();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "tendermint.abci";
    var CheckTxType;
    (function(CheckTxType2) {
      CheckTxType2[CheckTxType2["NEW"] = 0] = "NEW";
      CheckTxType2[CheckTxType2["RECHECK"] = 1] = "RECHECK";
      CheckTxType2[CheckTxType2["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
    })(CheckTxType = exports.CheckTxType || (exports.CheckTxType = {}));
    function checkTxTypeFromJSON(object) {
      switch (object) {
        case 0:
        case "NEW":
          return CheckTxType.NEW;
        case 1:
        case "RECHECK":
          return CheckTxType.RECHECK;
        case -1:
        case "UNRECOGNIZED":
        default:
          return CheckTxType.UNRECOGNIZED;
      }
    }
    exports.checkTxTypeFromJSON = checkTxTypeFromJSON;
    function checkTxTypeToJSON(object) {
      switch (object) {
        case CheckTxType.NEW:
          return "NEW";
        case CheckTxType.RECHECK:
          return "RECHECK";
        case CheckTxType.UNRECOGNIZED:
        default:
          return "UNRECOGNIZED";
      }
    }
    exports.checkTxTypeToJSON = checkTxTypeToJSON;
    var ResponseOfferSnapshot_Result;
    (function(ResponseOfferSnapshot_Result2) {
      ResponseOfferSnapshot_Result2[ResponseOfferSnapshot_Result2["UNKNOWN"] = 0] = "UNKNOWN";
      ResponseOfferSnapshot_Result2[ResponseOfferSnapshot_Result2["ACCEPT"] = 1] = "ACCEPT";
      ResponseOfferSnapshot_Result2[ResponseOfferSnapshot_Result2["ABORT"] = 2] = "ABORT";
      ResponseOfferSnapshot_Result2[ResponseOfferSnapshot_Result2["REJECT"] = 3] = "REJECT";
      ResponseOfferSnapshot_Result2[ResponseOfferSnapshot_Result2["REJECT_FORMAT"] = 4] = "REJECT_FORMAT";
      ResponseOfferSnapshot_Result2[ResponseOfferSnapshot_Result2["REJECT_SENDER"] = 5] = "REJECT_SENDER";
      ResponseOfferSnapshot_Result2[ResponseOfferSnapshot_Result2["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
    })(ResponseOfferSnapshot_Result = exports.ResponseOfferSnapshot_Result || (exports.ResponseOfferSnapshot_Result = {}));
    function responseOfferSnapshot_ResultFromJSON(object) {
      switch (object) {
        case 0:
        case "UNKNOWN":
          return ResponseOfferSnapshot_Result.UNKNOWN;
        case 1:
        case "ACCEPT":
          return ResponseOfferSnapshot_Result.ACCEPT;
        case 2:
        case "ABORT":
          return ResponseOfferSnapshot_Result.ABORT;
        case 3:
        case "REJECT":
          return ResponseOfferSnapshot_Result.REJECT;
        case 4:
        case "REJECT_FORMAT":
          return ResponseOfferSnapshot_Result.REJECT_FORMAT;
        case 5:
        case "REJECT_SENDER":
          return ResponseOfferSnapshot_Result.REJECT_SENDER;
        case -1:
        case "UNRECOGNIZED":
        default:
          return ResponseOfferSnapshot_Result.UNRECOGNIZED;
      }
    }
    exports.responseOfferSnapshot_ResultFromJSON = responseOfferSnapshot_ResultFromJSON;
    function responseOfferSnapshot_ResultToJSON(object) {
      switch (object) {
        case ResponseOfferSnapshot_Result.UNKNOWN:
          return "UNKNOWN";
        case ResponseOfferSnapshot_Result.ACCEPT:
          return "ACCEPT";
        case ResponseOfferSnapshot_Result.ABORT:
          return "ABORT";
        case ResponseOfferSnapshot_Result.REJECT:
          return "REJECT";
        case ResponseOfferSnapshot_Result.REJECT_FORMAT:
          return "REJECT_FORMAT";
        case ResponseOfferSnapshot_Result.REJECT_SENDER:
          return "REJECT_SENDER";
        case ResponseOfferSnapshot_Result.UNRECOGNIZED:
        default:
          return "UNRECOGNIZED";
      }
    }
    exports.responseOfferSnapshot_ResultToJSON = responseOfferSnapshot_ResultToJSON;
    var ResponseApplySnapshotChunk_Result;
    (function(ResponseApplySnapshotChunk_Result2) {
      ResponseApplySnapshotChunk_Result2[ResponseApplySnapshotChunk_Result2["UNKNOWN"] = 0] = "UNKNOWN";
      ResponseApplySnapshotChunk_Result2[ResponseApplySnapshotChunk_Result2["ACCEPT"] = 1] = "ACCEPT";
      ResponseApplySnapshotChunk_Result2[ResponseApplySnapshotChunk_Result2["ABORT"] = 2] = "ABORT";
      ResponseApplySnapshotChunk_Result2[ResponseApplySnapshotChunk_Result2["RETRY"] = 3] = "RETRY";
      ResponseApplySnapshotChunk_Result2[ResponseApplySnapshotChunk_Result2["RETRY_SNAPSHOT"] = 4] = "RETRY_SNAPSHOT";
      ResponseApplySnapshotChunk_Result2[ResponseApplySnapshotChunk_Result2["REJECT_SNAPSHOT"] = 5] = "REJECT_SNAPSHOT";
      ResponseApplySnapshotChunk_Result2[ResponseApplySnapshotChunk_Result2["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
    })(ResponseApplySnapshotChunk_Result = exports.ResponseApplySnapshotChunk_Result || (exports.ResponseApplySnapshotChunk_Result = {}));
    function responseApplySnapshotChunk_ResultFromJSON(object) {
      switch (object) {
        case 0:
        case "UNKNOWN":
          return ResponseApplySnapshotChunk_Result.UNKNOWN;
        case 1:
        case "ACCEPT":
          return ResponseApplySnapshotChunk_Result.ACCEPT;
        case 2:
        case "ABORT":
          return ResponseApplySnapshotChunk_Result.ABORT;
        case 3:
        case "RETRY":
          return ResponseApplySnapshotChunk_Result.RETRY;
        case 4:
        case "RETRY_SNAPSHOT":
          return ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT;
        case 5:
        case "REJECT_SNAPSHOT":
          return ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT;
        case -1:
        case "UNRECOGNIZED":
        default:
          return ResponseApplySnapshotChunk_Result.UNRECOGNIZED;
      }
    }
    exports.responseApplySnapshotChunk_ResultFromJSON = responseApplySnapshotChunk_ResultFromJSON;
    function responseApplySnapshotChunk_ResultToJSON(object) {
      switch (object) {
        case ResponseApplySnapshotChunk_Result.UNKNOWN:
          return "UNKNOWN";
        case ResponseApplySnapshotChunk_Result.ACCEPT:
          return "ACCEPT";
        case ResponseApplySnapshotChunk_Result.ABORT:
          return "ABORT";
        case ResponseApplySnapshotChunk_Result.RETRY:
          return "RETRY";
        case ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT:
          return "RETRY_SNAPSHOT";
        case ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT:
          return "REJECT_SNAPSHOT";
        case ResponseApplySnapshotChunk_Result.UNRECOGNIZED:
        default:
          return "UNRECOGNIZED";
      }
    }
    exports.responseApplySnapshotChunk_ResultToJSON = responseApplySnapshotChunk_ResultToJSON;
    var EvidenceType;
    (function(EvidenceType2) {
      EvidenceType2[EvidenceType2["UNKNOWN"] = 0] = "UNKNOWN";
      EvidenceType2[EvidenceType2["DUPLICATE_VOTE"] = 1] = "DUPLICATE_VOTE";
      EvidenceType2[EvidenceType2["LIGHT_CLIENT_ATTACK"] = 2] = "LIGHT_CLIENT_ATTACK";
      EvidenceType2[EvidenceType2["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
    })(EvidenceType = exports.EvidenceType || (exports.EvidenceType = {}));
    function evidenceTypeFromJSON(object) {
      switch (object) {
        case 0:
        case "UNKNOWN":
          return EvidenceType.UNKNOWN;
        case 1:
        case "DUPLICATE_VOTE":
          return EvidenceType.DUPLICATE_VOTE;
        case 2:
        case "LIGHT_CLIENT_ATTACK":
          return EvidenceType.LIGHT_CLIENT_ATTACK;
        case -1:
        case "UNRECOGNIZED":
        default:
          return EvidenceType.UNRECOGNIZED;
      }
    }
    exports.evidenceTypeFromJSON = evidenceTypeFromJSON;
    function evidenceTypeToJSON(object) {
      switch (object) {
        case EvidenceType.UNKNOWN:
          return "UNKNOWN";
        case EvidenceType.DUPLICATE_VOTE:
          return "DUPLICATE_VOTE";
        case EvidenceType.LIGHT_CLIENT_ATTACK:
          return "LIGHT_CLIENT_ATTACK";
        case EvidenceType.UNRECOGNIZED:
        default:
          return "UNRECOGNIZED";
      }
    }
    exports.evidenceTypeToJSON = evidenceTypeToJSON;
    function createBaseRequest() {
      return {
        echo: void 0,
        flush: void 0,
        info: void 0,
        setOption: void 0,
        initChain: void 0,
        query: void 0,
        beginBlock: void 0,
        checkTx: void 0,
        deliverTx: void 0,
        endBlock: void 0,
        commit: void 0,
        listSnapshots: void 0,
        offerSnapshot: void 0,
        loadSnapshotChunk: void 0,
        applySnapshotChunk: void 0
      };
    }
    exports.Request = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.echo !== void 0) {
          exports.RequestEcho.encode(message.echo, writer.uint32(10).fork()).ldelim();
        }
        if (message.flush !== void 0) {
          exports.RequestFlush.encode(message.flush, writer.uint32(18).fork()).ldelim();
        }
        if (message.info !== void 0) {
          exports.RequestInfo.encode(message.info, writer.uint32(26).fork()).ldelim();
        }
        if (message.setOption !== void 0) {
          exports.RequestSetOption.encode(message.setOption, writer.uint32(34).fork()).ldelim();
        }
        if (message.initChain !== void 0) {
          exports.RequestInitChain.encode(message.initChain, writer.uint32(42).fork()).ldelim();
        }
        if (message.query !== void 0) {
          exports.RequestQuery.encode(message.query, writer.uint32(50).fork()).ldelim();
        }
        if (message.beginBlock !== void 0) {
          exports.RequestBeginBlock.encode(message.beginBlock, writer.uint32(58).fork()).ldelim();
        }
        if (message.checkTx !== void 0) {
          exports.RequestCheckTx.encode(message.checkTx, writer.uint32(66).fork()).ldelim();
        }
        if (message.deliverTx !== void 0) {
          exports.RequestDeliverTx.encode(message.deliverTx, writer.uint32(74).fork()).ldelim();
        }
        if (message.endBlock !== void 0) {
          exports.RequestEndBlock.encode(message.endBlock, writer.uint32(82).fork()).ldelim();
        }
        if (message.commit !== void 0) {
          exports.RequestCommit.encode(message.commit, writer.uint32(90).fork()).ldelim();
        }
        if (message.listSnapshots !== void 0) {
          exports.RequestListSnapshots.encode(message.listSnapshots, writer.uint32(98).fork()).ldelim();
        }
        if (message.offerSnapshot !== void 0) {
          exports.RequestOfferSnapshot.encode(message.offerSnapshot, writer.uint32(106).fork()).ldelim();
        }
        if (message.loadSnapshotChunk !== void 0) {
          exports.RequestLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(114).fork()).ldelim();
        }
        if (message.applySnapshotChunk !== void 0) {
          exports.RequestApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(122).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.echo = exports.RequestEcho.decode(reader, reader.uint32());
              break;
            case 2:
              message.flush = exports.RequestFlush.decode(reader, reader.uint32());
              break;
            case 3:
              message.info = exports.RequestInfo.decode(reader, reader.uint32());
              break;
            case 4:
              message.setOption = exports.RequestSetOption.decode(reader, reader.uint32());
              break;
            case 5:
              message.initChain = exports.RequestInitChain.decode(reader, reader.uint32());
              break;
            case 6:
              message.query = exports.RequestQuery.decode(reader, reader.uint32());
              break;
            case 7:
              message.beginBlock = exports.RequestBeginBlock.decode(reader, reader.uint32());
              break;
            case 8:
              message.checkTx = exports.RequestCheckTx.decode(reader, reader.uint32());
              break;
            case 9:
              message.deliverTx = exports.RequestDeliverTx.decode(reader, reader.uint32());
              break;
            case 10:
              message.endBlock = exports.RequestEndBlock.decode(reader, reader.uint32());
              break;
            case 11:
              message.commit = exports.RequestCommit.decode(reader, reader.uint32());
              break;
            case 12:
              message.listSnapshots = exports.RequestListSnapshots.decode(reader, reader.uint32());
              break;
            case 13:
              message.offerSnapshot = exports.RequestOfferSnapshot.decode(reader, reader.uint32());
              break;
            case 14:
              message.loadSnapshotChunk = exports.RequestLoadSnapshotChunk.decode(reader, reader.uint32());
              break;
            case 15:
              message.applySnapshotChunk = exports.RequestApplySnapshotChunk.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          echo: (0, helpers_1.isSet)(object.echo) ? exports.RequestEcho.fromJSON(object.echo) : void 0,
          flush: (0, helpers_1.isSet)(object.flush) ? exports.RequestFlush.fromJSON(object.flush) : void 0,
          info: (0, helpers_1.isSet)(object.info) ? exports.RequestInfo.fromJSON(object.info) : void 0,
          setOption: (0, helpers_1.isSet)(object.setOption) ? exports.RequestSetOption.fromJSON(object.setOption) : void 0,
          initChain: (0, helpers_1.isSet)(object.initChain) ? exports.RequestInitChain.fromJSON(object.initChain) : void 0,
          query: (0, helpers_1.isSet)(object.query) ? exports.RequestQuery.fromJSON(object.query) : void 0,
          beginBlock: (0, helpers_1.isSet)(object.beginBlock) ? exports.RequestBeginBlock.fromJSON(object.beginBlock) : void 0,
          checkTx: (0, helpers_1.isSet)(object.checkTx) ? exports.RequestCheckTx.fromJSON(object.checkTx) : void 0,
          deliverTx: (0, helpers_1.isSet)(object.deliverTx) ? exports.RequestDeliverTx.fromJSON(object.deliverTx) : void 0,
          endBlock: (0, helpers_1.isSet)(object.endBlock) ? exports.RequestEndBlock.fromJSON(object.endBlock) : void 0,
          commit: (0, helpers_1.isSet)(object.commit) ? exports.RequestCommit.fromJSON(object.commit) : void 0,
          listSnapshots: (0, helpers_1.isSet)(object.listSnapshots) ? exports.RequestListSnapshots.fromJSON(object.listSnapshots) : void 0,
          offerSnapshot: (0, helpers_1.isSet)(object.offerSnapshot) ? exports.RequestOfferSnapshot.fromJSON(object.offerSnapshot) : void 0,
          loadSnapshotChunk: (0, helpers_1.isSet)(object.loadSnapshotChunk) ? exports.RequestLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk) : void 0,
          applySnapshotChunk: (0, helpers_1.isSet)(object.applySnapshotChunk) ? exports.RequestApplySnapshotChunk.fromJSON(object.applySnapshotChunk) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.echo !== void 0 && (obj.echo = message.echo ? exports.RequestEcho.toJSON(message.echo) : void 0);
        message.flush !== void 0 && (obj.flush = message.flush ? exports.RequestFlush.toJSON(message.flush) : void 0);
        message.info !== void 0 && (obj.info = message.info ? exports.RequestInfo.toJSON(message.info) : void 0);
        message.setOption !== void 0 && (obj.setOption = message.setOption ? exports.RequestSetOption.toJSON(message.setOption) : void 0);
        message.initChain !== void 0 && (obj.initChain = message.initChain ? exports.RequestInitChain.toJSON(message.initChain) : void 0);
        message.query !== void 0 && (obj.query = message.query ? exports.RequestQuery.toJSON(message.query) : void 0);
        message.beginBlock !== void 0 && (obj.beginBlock = message.beginBlock ? exports.RequestBeginBlock.toJSON(message.beginBlock) : void 0);
        message.checkTx !== void 0 && (obj.checkTx = message.checkTx ? exports.RequestCheckTx.toJSON(message.checkTx) : void 0);
        message.deliverTx !== void 0 && (obj.deliverTx = message.deliverTx ? exports.RequestDeliverTx.toJSON(message.deliverTx) : void 0);
        message.endBlock !== void 0 && (obj.endBlock = message.endBlock ? exports.RequestEndBlock.toJSON(message.endBlock) : void 0);
        message.commit !== void 0 && (obj.commit = message.commit ? exports.RequestCommit.toJSON(message.commit) : void 0);
        message.listSnapshots !== void 0 && (obj.listSnapshots = message.listSnapshots ? exports.RequestListSnapshots.toJSON(message.listSnapshots) : void 0);
        message.offerSnapshot !== void 0 && (obj.offerSnapshot = message.offerSnapshot ? exports.RequestOfferSnapshot.toJSON(message.offerSnapshot) : void 0);
        message.loadSnapshotChunk !== void 0 && (obj.loadSnapshotChunk = message.loadSnapshotChunk ? exports.RequestLoadSnapshotChunk.toJSON(message.loadSnapshotChunk) : void 0);
        message.applySnapshotChunk !== void 0 && (obj.applySnapshotChunk = message.applySnapshotChunk ? exports.RequestApplySnapshotChunk.toJSON(message.applySnapshotChunk) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseRequest();
        message.echo = object.echo !== void 0 && object.echo !== null ? exports.RequestEcho.fromPartial(object.echo) : void 0;
        message.flush = object.flush !== void 0 && object.flush !== null ? exports.RequestFlush.fromPartial(object.flush) : void 0;
        message.info = object.info !== void 0 && object.info !== null ? exports.RequestInfo.fromPartial(object.info) : void 0;
        message.setOption = object.setOption !== void 0 && object.setOption !== null ? exports.RequestSetOption.fromPartial(object.setOption) : void 0;
        message.initChain = object.initChain !== void 0 && object.initChain !== null ? exports.RequestInitChain.fromPartial(object.initChain) : void 0;
        message.query = object.query !== void 0 && object.query !== null ? exports.RequestQuery.fromPartial(object.query) : void 0;
        message.beginBlock = object.beginBlock !== void 0 && object.beginBlock !== null ? exports.RequestBeginBlock.fromPartial(object.beginBlock) : void 0;
        message.checkTx = object.checkTx !== void 0 && object.checkTx !== null ? exports.RequestCheckTx.fromPartial(object.checkTx) : void 0;
        message.deliverTx = object.deliverTx !== void 0 && object.deliverTx !== null ? exports.RequestDeliverTx.fromPartial(object.deliverTx) : void 0;
        message.endBlock = object.endBlock !== void 0 && object.endBlock !== null ? exports.RequestEndBlock.fromPartial(object.endBlock) : void 0;
        message.commit = object.commit !== void 0 && object.commit !== null ? exports.RequestCommit.fromPartial(object.commit) : void 0;
        message.listSnapshots = object.listSnapshots !== void 0 && object.listSnapshots !== null ? exports.RequestListSnapshots.fromPartial(object.listSnapshots) : void 0;
        message.offerSnapshot = object.offerSnapshot !== void 0 && object.offerSnapshot !== null ? exports.RequestOfferSnapshot.fromPartial(object.offerSnapshot) : void 0;
        message.loadSnapshotChunk = object.loadSnapshotChunk !== void 0 && object.loadSnapshotChunk !== null ? exports.RequestLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk) : void 0;
        message.applySnapshotChunk = object.applySnapshotChunk !== void 0 && object.applySnapshotChunk !== null ? exports.RequestApplySnapshotChunk.fromPartial(object.applySnapshotChunk) : void 0;
        return message;
      }
    };
    function createBaseRequestEcho() {
      return {
        message: ""
      };
    }
    exports.RequestEcho = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.message !== "") {
          writer.uint32(10).string(message.message);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseRequestEcho();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.message = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          message: (0, helpers_1.isSet)(object.message) ? String(object.message) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.message !== void 0 && (obj.message = message.message);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseRequestEcho();
        message.message = object.message ?? "";
        return message;
      }
    };
    function createBaseRequestFlush() {
      return {};
    }
    exports.RequestFlush = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseRequestFlush();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseRequestFlush();
        return message;
      }
    };
    function createBaseRequestInfo() {
      return {
        version: "",
        blockVersion: helpers_1.Long.UZERO,
        p2pVersion: helpers_1.Long.UZERO
      };
    }
    exports.RequestInfo = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.version !== "") {
          writer.uint32(10).string(message.version);
        }
        if (!message.blockVersion.isZero()) {
          writer.uint32(16).uint64(message.blockVersion);
        }
        if (!message.p2pVersion.isZero()) {
          writer.uint32(24).uint64(message.p2pVersion);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseRequestInfo();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.version = reader.string();
              break;
            case 2:
              message.blockVersion = reader.uint64();
              break;
            case 3:
              message.p2pVersion = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          version: (0, helpers_1.isSet)(object.version) ? String(object.version) : "",
          blockVersion: (0, helpers_1.isSet)(object.blockVersion) ? helpers_1.Long.fromValue(object.blockVersion) : helpers_1.Long.UZERO,
          p2pVersion: (0, helpers_1.isSet)(object.p2pVersion) ? helpers_1.Long.fromValue(object.p2pVersion) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.version !== void 0 && (obj.version = message.version);
        message.blockVersion !== void 0 && (obj.blockVersion = (message.blockVersion || helpers_1.Long.UZERO).toString());
        message.p2pVersion !== void 0 && (obj.p2pVersion = (message.p2pVersion || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseRequestInfo();
        message.version = object.version ?? "";
        message.blockVersion = object.blockVersion !== void 0 && object.blockVersion !== null ? helpers_1.Long.fromValue(object.blockVersion) : helpers_1.Long.UZERO;
        message.p2pVersion = object.p2pVersion !== void 0 && object.p2pVersion !== null ? helpers_1.Long.fromValue(object.p2pVersion) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseRequestSetOption() {
      return {
        key: "",
        value: ""
      };
    }
    exports.RequestSetOption = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.key !== "") {
          writer.uint32(10).string(message.key);
        }
        if (message.value !== "") {
          writer.uint32(18).string(message.value);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseRequestSetOption();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.key = reader.string();
              break;
            case 2:
              message.value = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          key: (0, helpers_1.isSet)(object.key) ? String(object.key) : "",
          value: (0, helpers_1.isSet)(object.value) ? String(object.value) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.key !== void 0 && (obj.key = message.key);
        message.value !== void 0 && (obj.value = message.value);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseRequestSetOption();
        message.key = object.key ?? "";
        message.value = object.value ?? "";
        return message;
      }
    };
    function createBaseRequestInitChain() {
      return {
        time: void 0,
        chainId: "",
        consensusParams: void 0,
        validators: [],
        appStateBytes: new Uint8Array(),
        initialHeight: helpers_1.Long.ZERO
      };
    }
    exports.RequestInitChain = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.time !== void 0) {
          timestamp_1.Timestamp.encode(message.time, writer.uint32(10).fork()).ldelim();
        }
        if (message.chainId !== "") {
          writer.uint32(18).string(message.chainId);
        }
        if (message.consensusParams !== void 0) {
          exports.ConsensusParams.encode(message.consensusParams, writer.uint32(26).fork()).ldelim();
        }
        for (const v of message.validators) {
          exports.ValidatorUpdate.encode(v, writer.uint32(34).fork()).ldelim();
        }
        if (message.appStateBytes.length !== 0) {
          writer.uint32(42).bytes(message.appStateBytes);
        }
        if (!message.initialHeight.isZero()) {
          writer.uint32(48).int64(message.initialHeight);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseRequestInitChain();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.time = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            case 2:
              message.chainId = reader.string();
              break;
            case 3:
              message.consensusParams = exports.ConsensusParams.decode(reader, reader.uint32());
              break;
            case 4:
              message.validators.push(exports.ValidatorUpdate.decode(reader, reader.uint32()));
              break;
            case 5:
              message.appStateBytes = reader.bytes();
              break;
            case 6:
              message.initialHeight = reader.int64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          time: (0, helpers_1.isSet)(object.time) ? (0, helpers_1.fromJsonTimestamp)(object.time) : void 0,
          chainId: (0, helpers_1.isSet)(object.chainId) ? String(object.chainId) : "",
          consensusParams: (0, helpers_1.isSet)(object.consensusParams) ? exports.ConsensusParams.fromJSON(object.consensusParams) : void 0,
          validators: Array.isArray(object == null ? void 0 : object.validators) ? object.validators.map((e) => exports.ValidatorUpdate.fromJSON(e)) : [],
          appStateBytes: (0, helpers_1.isSet)(object.appStateBytes) ? (0, helpers_1.bytesFromBase64)(object.appStateBytes) : new Uint8Array(),
          initialHeight: (0, helpers_1.isSet)(object.initialHeight) ? helpers_1.Long.fromValue(object.initialHeight) : helpers_1.Long.ZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.time !== void 0 && (obj.time = (0, helpers_1.fromTimestamp)(message.time).toISOString());
        message.chainId !== void 0 && (obj.chainId = message.chainId);
        message.consensusParams !== void 0 && (obj.consensusParams = message.consensusParams ? exports.ConsensusParams.toJSON(message.consensusParams) : void 0);
        if (message.validators) {
          obj.validators = message.validators.map((e) => e ? exports.ValidatorUpdate.toJSON(e) : void 0);
        } else {
          obj.validators = [];
        }
        message.appStateBytes !== void 0 && (obj.appStateBytes = (0, helpers_1.base64FromBytes)(message.appStateBytes !== void 0 ? message.appStateBytes : new Uint8Array()));
        message.initialHeight !== void 0 && (obj.initialHeight = (message.initialHeight || helpers_1.Long.ZERO).toString());
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseRequestInitChain();
        message.time = object.time !== void 0 && object.time !== null ? timestamp_1.Timestamp.fromPartial(object.time) : void 0;
        message.chainId = object.chainId ?? "";
        message.consensusParams = object.consensusParams !== void 0 && object.consensusParams !== null ? exports.ConsensusParams.fromPartial(object.consensusParams) : void 0;
        message.validators = ((_a = object.validators) == null ? void 0 : _a.map((e) => exports.ValidatorUpdate.fromPartial(e))) || [];
        message.appStateBytes = object.appStateBytes ?? new Uint8Array();
        message.initialHeight = object.initialHeight !== void 0 && object.initialHeight !== null ? helpers_1.Long.fromValue(object.initialHeight) : helpers_1.Long.ZERO;
        return message;
      }
    };
    function createBaseRequestQuery() {
      return {
        data: new Uint8Array(),
        path: "",
        height: helpers_1.Long.ZERO,
        prove: false
      };
    }
    exports.RequestQuery = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.data.length !== 0) {
          writer.uint32(10).bytes(message.data);
        }
        if (message.path !== "") {
          writer.uint32(18).string(message.path);
        }
        if (!message.height.isZero()) {
          writer.uint32(24).int64(message.height);
        }
        if (message.prove === true) {
          writer.uint32(32).bool(message.prove);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseRequestQuery();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.data = reader.bytes();
              break;
            case 2:
              message.path = reader.string();
              break;
            case 3:
              message.height = reader.int64();
              break;
            case 4:
              message.prove = reader.bool();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          data: (0, helpers_1.isSet)(object.data) ? (0, helpers_1.bytesFromBase64)(object.data) : new Uint8Array(),
          path: (0, helpers_1.isSet)(object.path) ? String(object.path) : "",
          height: (0, helpers_1.isSet)(object.height) ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO,
          prove: (0, helpers_1.isSet)(object.prove) ? Boolean(object.prove) : false
        };
      },
      toJSON(message) {
        const obj = {};
        message.data !== void 0 && (obj.data = (0, helpers_1.base64FromBytes)(message.data !== void 0 ? message.data : new Uint8Array()));
        message.path !== void 0 && (obj.path = message.path);
        message.height !== void 0 && (obj.height = (message.height || helpers_1.Long.ZERO).toString());
        message.prove !== void 0 && (obj.prove = message.prove);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseRequestQuery();
        message.data = object.data ?? new Uint8Array();
        message.path = object.path ?? "";
        message.height = object.height !== void 0 && object.height !== null ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO;
        message.prove = object.prove ?? false;
        return message;
      }
    };
    function createBaseRequestBeginBlock() {
      return {
        hash: new Uint8Array(),
        header: void 0,
        lastCommitInfo: void 0,
        byzantineValidators: []
      };
    }
    exports.RequestBeginBlock = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.hash.length !== 0) {
          writer.uint32(10).bytes(message.hash);
        }
        if (message.header !== void 0) {
          types_1.Header.encode(message.header, writer.uint32(18).fork()).ldelim();
        }
        if (message.lastCommitInfo !== void 0) {
          exports.LastCommitInfo.encode(message.lastCommitInfo, writer.uint32(26).fork()).ldelim();
        }
        for (const v of message.byzantineValidators) {
          exports.Evidence.encode(v, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseRequestBeginBlock();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.hash = reader.bytes();
              break;
            case 2:
              message.header = types_1.Header.decode(reader, reader.uint32());
              break;
            case 3:
              message.lastCommitInfo = exports.LastCommitInfo.decode(reader, reader.uint32());
              break;
            case 4:
              message.byzantineValidators.push(exports.Evidence.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          hash: (0, helpers_1.isSet)(object.hash) ? (0, helpers_1.bytesFromBase64)(object.hash) : new Uint8Array(),
          header: (0, helpers_1.isSet)(object.header) ? types_1.Header.fromJSON(object.header) : void 0,
          lastCommitInfo: (0, helpers_1.isSet)(object.lastCommitInfo) ? exports.LastCommitInfo.fromJSON(object.lastCommitInfo) : void 0,
          byzantineValidators: Array.isArray(object == null ? void 0 : object.byzantineValidators) ? object.byzantineValidators.map((e) => exports.Evidence.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.hash !== void 0 && (obj.hash = (0, helpers_1.base64FromBytes)(message.hash !== void 0 ? message.hash : new Uint8Array()));
        message.header !== void 0 && (obj.header = message.header ? types_1.Header.toJSON(message.header) : void 0);
        message.lastCommitInfo !== void 0 && (obj.lastCommitInfo = message.lastCommitInfo ? exports.LastCommitInfo.toJSON(message.lastCommitInfo) : void 0);
        if (message.byzantineValidators) {
          obj.byzantineValidators = message.byzantineValidators.map((e) => e ? exports.Evidence.toJSON(e) : void 0);
        } else {
          obj.byzantineValidators = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseRequestBeginBlock();
        message.hash = object.hash ?? new Uint8Array();
        message.header = object.header !== void 0 && object.header !== null ? types_1.Header.fromPartial(object.header) : void 0;
        message.lastCommitInfo = object.lastCommitInfo !== void 0 && object.lastCommitInfo !== null ? exports.LastCommitInfo.fromPartial(object.lastCommitInfo) : void 0;
        message.byzantineValidators = ((_a = object.byzantineValidators) == null ? void 0 : _a.map((e) => exports.Evidence.fromPartial(e))) || [];
        return message;
      }
    };
    function createBaseRequestCheckTx() {
      return {
        tx: new Uint8Array(),
        type: 0
      };
    }
    exports.RequestCheckTx = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.tx.length !== 0) {
          writer.uint32(10).bytes(message.tx);
        }
        if (message.type !== 0) {
          writer.uint32(16).int32(message.type);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseRequestCheckTx();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.tx = reader.bytes();
              break;
            case 2:
              message.type = reader.int32();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          tx: (0, helpers_1.isSet)(object.tx) ? (0, helpers_1.bytesFromBase64)(object.tx) : new Uint8Array(),
          type: (0, helpers_1.isSet)(object.type) ? checkTxTypeFromJSON(object.type) : 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.tx !== void 0 && (obj.tx = (0, helpers_1.base64FromBytes)(message.tx !== void 0 ? message.tx : new Uint8Array()));
        message.type !== void 0 && (obj.type = checkTxTypeToJSON(message.type));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseRequestCheckTx();
        message.tx = object.tx ?? new Uint8Array();
        message.type = object.type ?? 0;
        return message;
      }
    };
    function createBaseRequestDeliverTx() {
      return {
        tx: new Uint8Array()
      };
    }
    exports.RequestDeliverTx = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.tx.length !== 0) {
          writer.uint32(10).bytes(message.tx);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseRequestDeliverTx();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.tx = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          tx: (0, helpers_1.isSet)(object.tx) ? (0, helpers_1.bytesFromBase64)(object.tx) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.tx !== void 0 && (obj.tx = (0, helpers_1.base64FromBytes)(message.tx !== void 0 ? message.tx : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseRequestDeliverTx();
        message.tx = object.tx ?? new Uint8Array();
        return message;
      }
    };
    function createBaseRequestEndBlock() {
      return {
        height: helpers_1.Long.ZERO
      };
    }
    exports.RequestEndBlock = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.height.isZero()) {
          writer.uint32(8).int64(message.height);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseRequestEndBlock();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.height = reader.int64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          height: (0, helpers_1.isSet)(object.height) ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.height !== void 0 && (obj.height = (message.height || helpers_1.Long.ZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseRequestEndBlock();
        message.height = object.height !== void 0 && object.height !== null ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO;
        return message;
      }
    };
    function createBaseRequestCommit() {
      return {};
    }
    exports.RequestCommit = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseRequestCommit();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseRequestCommit();
        return message;
      }
    };
    function createBaseRequestListSnapshots() {
      return {};
    }
    exports.RequestListSnapshots = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseRequestListSnapshots();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseRequestListSnapshots();
        return message;
      }
    };
    function createBaseRequestOfferSnapshot() {
      return {
        snapshot: void 0,
        appHash: new Uint8Array()
      };
    }
    exports.RequestOfferSnapshot = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.snapshot !== void 0) {
          exports.Snapshot.encode(message.snapshot, writer.uint32(10).fork()).ldelim();
        }
        if (message.appHash.length !== 0) {
          writer.uint32(18).bytes(message.appHash);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseRequestOfferSnapshot();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.snapshot = exports.Snapshot.decode(reader, reader.uint32());
              break;
            case 2:
              message.appHash = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          snapshot: (0, helpers_1.isSet)(object.snapshot) ? exports.Snapshot.fromJSON(object.snapshot) : void 0,
          appHash: (0, helpers_1.isSet)(object.appHash) ? (0, helpers_1.bytesFromBase64)(object.appHash) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.snapshot !== void 0 && (obj.snapshot = message.snapshot ? exports.Snapshot.toJSON(message.snapshot) : void 0);
        message.appHash !== void 0 && (obj.appHash = (0, helpers_1.base64FromBytes)(message.appHash !== void 0 ? message.appHash : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseRequestOfferSnapshot();
        message.snapshot = object.snapshot !== void 0 && object.snapshot !== null ? exports.Snapshot.fromPartial(object.snapshot) : void 0;
        message.appHash = object.appHash ?? new Uint8Array();
        return message;
      }
    };
    function createBaseRequestLoadSnapshotChunk() {
      return {
        height: helpers_1.Long.UZERO,
        format: 0,
        chunk: 0
      };
    }
    exports.RequestLoadSnapshotChunk = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.height.isZero()) {
          writer.uint32(8).uint64(message.height);
        }
        if (message.format !== 0) {
          writer.uint32(16).uint32(message.format);
        }
        if (message.chunk !== 0) {
          writer.uint32(24).uint32(message.chunk);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseRequestLoadSnapshotChunk();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.height = reader.uint64();
              break;
            case 2:
              message.format = reader.uint32();
              break;
            case 3:
              message.chunk = reader.uint32();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          height: (0, helpers_1.isSet)(object.height) ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.UZERO,
          format: (0, helpers_1.isSet)(object.format) ? Number(object.format) : 0,
          chunk: (0, helpers_1.isSet)(object.chunk) ? Number(object.chunk) : 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.height !== void 0 && (obj.height = (message.height || helpers_1.Long.UZERO).toString());
        message.format !== void 0 && (obj.format = Math.round(message.format));
        message.chunk !== void 0 && (obj.chunk = Math.round(message.chunk));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseRequestLoadSnapshotChunk();
        message.height = object.height !== void 0 && object.height !== null ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.UZERO;
        message.format = object.format ?? 0;
        message.chunk = object.chunk ?? 0;
        return message;
      }
    };
    function createBaseRequestApplySnapshotChunk() {
      return {
        index: 0,
        chunk: new Uint8Array(),
        sender: ""
      };
    }
    exports.RequestApplySnapshotChunk = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.index !== 0) {
          writer.uint32(8).uint32(message.index);
        }
        if (message.chunk.length !== 0) {
          writer.uint32(18).bytes(message.chunk);
        }
        if (message.sender !== "") {
          writer.uint32(26).string(message.sender);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseRequestApplySnapshotChunk();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.index = reader.uint32();
              break;
            case 2:
              message.chunk = reader.bytes();
              break;
            case 3:
              message.sender = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          index: (0, helpers_1.isSet)(object.index) ? Number(object.index) : 0,
          chunk: (0, helpers_1.isSet)(object.chunk) ? (0, helpers_1.bytesFromBase64)(object.chunk) : new Uint8Array(),
          sender: (0, helpers_1.isSet)(object.sender) ? String(object.sender) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.index !== void 0 && (obj.index = Math.round(message.index));
        message.chunk !== void 0 && (obj.chunk = (0, helpers_1.base64FromBytes)(message.chunk !== void 0 ? message.chunk : new Uint8Array()));
        message.sender !== void 0 && (obj.sender = message.sender);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseRequestApplySnapshotChunk();
        message.index = object.index ?? 0;
        message.chunk = object.chunk ?? new Uint8Array();
        message.sender = object.sender ?? "";
        return message;
      }
    };
    function createBaseResponse() {
      return {
        exception: void 0,
        echo: void 0,
        flush: void 0,
        info: void 0,
        setOption: void 0,
        initChain: void 0,
        query: void 0,
        beginBlock: void 0,
        checkTx: void 0,
        deliverTx: void 0,
        endBlock: void 0,
        commit: void 0,
        listSnapshots: void 0,
        offerSnapshot: void 0,
        loadSnapshotChunk: void 0,
        applySnapshotChunk: void 0
      };
    }
    exports.Response = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.exception !== void 0) {
          exports.ResponseException.encode(message.exception, writer.uint32(10).fork()).ldelim();
        }
        if (message.echo !== void 0) {
          exports.ResponseEcho.encode(message.echo, writer.uint32(18).fork()).ldelim();
        }
        if (message.flush !== void 0) {
          exports.ResponseFlush.encode(message.flush, writer.uint32(26).fork()).ldelim();
        }
        if (message.info !== void 0) {
          exports.ResponseInfo.encode(message.info, writer.uint32(34).fork()).ldelim();
        }
        if (message.setOption !== void 0) {
          exports.ResponseSetOption.encode(message.setOption, writer.uint32(42).fork()).ldelim();
        }
        if (message.initChain !== void 0) {
          exports.ResponseInitChain.encode(message.initChain, writer.uint32(50).fork()).ldelim();
        }
        if (message.query !== void 0) {
          exports.ResponseQuery.encode(message.query, writer.uint32(58).fork()).ldelim();
        }
        if (message.beginBlock !== void 0) {
          exports.ResponseBeginBlock.encode(message.beginBlock, writer.uint32(66).fork()).ldelim();
        }
        if (message.checkTx !== void 0) {
          exports.ResponseCheckTx.encode(message.checkTx, writer.uint32(74).fork()).ldelim();
        }
        if (message.deliverTx !== void 0) {
          exports.ResponseDeliverTx.encode(message.deliverTx, writer.uint32(82).fork()).ldelim();
        }
        if (message.endBlock !== void 0) {
          exports.ResponseEndBlock.encode(message.endBlock, writer.uint32(90).fork()).ldelim();
        }
        if (message.commit !== void 0) {
          exports.ResponseCommit.encode(message.commit, writer.uint32(98).fork()).ldelim();
        }
        if (message.listSnapshots !== void 0) {
          exports.ResponseListSnapshots.encode(message.listSnapshots, writer.uint32(106).fork()).ldelim();
        }
        if (message.offerSnapshot !== void 0) {
          exports.ResponseOfferSnapshot.encode(message.offerSnapshot, writer.uint32(114).fork()).ldelim();
        }
        if (message.loadSnapshotChunk !== void 0) {
          exports.ResponseLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(122).fork()).ldelim();
        }
        if (message.applySnapshotChunk !== void 0) {
          exports.ResponseApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(130).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.exception = exports.ResponseException.decode(reader, reader.uint32());
              break;
            case 2:
              message.echo = exports.ResponseEcho.decode(reader, reader.uint32());
              break;
            case 3:
              message.flush = exports.ResponseFlush.decode(reader, reader.uint32());
              break;
            case 4:
              message.info = exports.ResponseInfo.decode(reader, reader.uint32());
              break;
            case 5:
              message.setOption = exports.ResponseSetOption.decode(reader, reader.uint32());
              break;
            case 6:
              message.initChain = exports.ResponseInitChain.decode(reader, reader.uint32());
              break;
            case 7:
              message.query = exports.ResponseQuery.decode(reader, reader.uint32());
              break;
            case 8:
              message.beginBlock = exports.ResponseBeginBlock.decode(reader, reader.uint32());
              break;
            case 9:
              message.checkTx = exports.ResponseCheckTx.decode(reader, reader.uint32());
              break;
            case 10:
              message.deliverTx = exports.ResponseDeliverTx.decode(reader, reader.uint32());
              break;
            case 11:
              message.endBlock = exports.ResponseEndBlock.decode(reader, reader.uint32());
              break;
            case 12:
              message.commit = exports.ResponseCommit.decode(reader, reader.uint32());
              break;
            case 13:
              message.listSnapshots = exports.ResponseListSnapshots.decode(reader, reader.uint32());
              break;
            case 14:
              message.offerSnapshot = exports.ResponseOfferSnapshot.decode(reader, reader.uint32());
              break;
            case 15:
              message.loadSnapshotChunk = exports.ResponseLoadSnapshotChunk.decode(reader, reader.uint32());
              break;
            case 16:
              message.applySnapshotChunk = exports.ResponseApplySnapshotChunk.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          exception: (0, helpers_1.isSet)(object.exception) ? exports.ResponseException.fromJSON(object.exception) : void 0,
          echo: (0, helpers_1.isSet)(object.echo) ? exports.ResponseEcho.fromJSON(object.echo) : void 0,
          flush: (0, helpers_1.isSet)(object.flush) ? exports.ResponseFlush.fromJSON(object.flush) : void 0,
          info: (0, helpers_1.isSet)(object.info) ? exports.ResponseInfo.fromJSON(object.info) : void 0,
          setOption: (0, helpers_1.isSet)(object.setOption) ? exports.ResponseSetOption.fromJSON(object.setOption) : void 0,
          initChain: (0, helpers_1.isSet)(object.initChain) ? exports.ResponseInitChain.fromJSON(object.initChain) : void 0,
          query: (0, helpers_1.isSet)(object.query) ? exports.ResponseQuery.fromJSON(object.query) : void 0,
          beginBlock: (0, helpers_1.isSet)(object.beginBlock) ? exports.ResponseBeginBlock.fromJSON(object.beginBlock) : void 0,
          checkTx: (0, helpers_1.isSet)(object.checkTx) ? exports.ResponseCheckTx.fromJSON(object.checkTx) : void 0,
          deliverTx: (0, helpers_1.isSet)(object.deliverTx) ? exports.ResponseDeliverTx.fromJSON(object.deliverTx) : void 0,
          endBlock: (0, helpers_1.isSet)(object.endBlock) ? exports.ResponseEndBlock.fromJSON(object.endBlock) : void 0,
          commit: (0, helpers_1.isSet)(object.commit) ? exports.ResponseCommit.fromJSON(object.commit) : void 0,
          listSnapshots: (0, helpers_1.isSet)(object.listSnapshots) ? exports.ResponseListSnapshots.fromJSON(object.listSnapshots) : void 0,
          offerSnapshot: (0, helpers_1.isSet)(object.offerSnapshot) ? exports.ResponseOfferSnapshot.fromJSON(object.offerSnapshot) : void 0,
          loadSnapshotChunk: (0, helpers_1.isSet)(object.loadSnapshotChunk) ? exports.ResponseLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk) : void 0,
          applySnapshotChunk: (0, helpers_1.isSet)(object.applySnapshotChunk) ? exports.ResponseApplySnapshotChunk.fromJSON(object.applySnapshotChunk) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.exception !== void 0 && (obj.exception = message.exception ? exports.ResponseException.toJSON(message.exception) : void 0);
        message.echo !== void 0 && (obj.echo = message.echo ? exports.ResponseEcho.toJSON(message.echo) : void 0);
        message.flush !== void 0 && (obj.flush = message.flush ? exports.ResponseFlush.toJSON(message.flush) : void 0);
        message.info !== void 0 && (obj.info = message.info ? exports.ResponseInfo.toJSON(message.info) : void 0);
        message.setOption !== void 0 && (obj.setOption = message.setOption ? exports.ResponseSetOption.toJSON(message.setOption) : void 0);
        message.initChain !== void 0 && (obj.initChain = message.initChain ? exports.ResponseInitChain.toJSON(message.initChain) : void 0);
        message.query !== void 0 && (obj.query = message.query ? exports.ResponseQuery.toJSON(message.query) : void 0);
        message.beginBlock !== void 0 && (obj.beginBlock = message.beginBlock ? exports.ResponseBeginBlock.toJSON(message.beginBlock) : void 0);
        message.checkTx !== void 0 && (obj.checkTx = message.checkTx ? exports.ResponseCheckTx.toJSON(message.checkTx) : void 0);
        message.deliverTx !== void 0 && (obj.deliverTx = message.deliverTx ? exports.ResponseDeliverTx.toJSON(message.deliverTx) : void 0);
        message.endBlock !== void 0 && (obj.endBlock = message.endBlock ? exports.ResponseEndBlock.toJSON(message.endBlock) : void 0);
        message.commit !== void 0 && (obj.commit = message.commit ? exports.ResponseCommit.toJSON(message.commit) : void 0);
        message.listSnapshots !== void 0 && (obj.listSnapshots = message.listSnapshots ? exports.ResponseListSnapshots.toJSON(message.listSnapshots) : void 0);
        message.offerSnapshot !== void 0 && (obj.offerSnapshot = message.offerSnapshot ? exports.ResponseOfferSnapshot.toJSON(message.offerSnapshot) : void 0);
        message.loadSnapshotChunk !== void 0 && (obj.loadSnapshotChunk = message.loadSnapshotChunk ? exports.ResponseLoadSnapshotChunk.toJSON(message.loadSnapshotChunk) : void 0);
        message.applySnapshotChunk !== void 0 && (obj.applySnapshotChunk = message.applySnapshotChunk ? exports.ResponseApplySnapshotChunk.toJSON(message.applySnapshotChunk) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseResponse();
        message.exception = object.exception !== void 0 && object.exception !== null ? exports.ResponseException.fromPartial(object.exception) : void 0;
        message.echo = object.echo !== void 0 && object.echo !== null ? exports.ResponseEcho.fromPartial(object.echo) : void 0;
        message.flush = object.flush !== void 0 && object.flush !== null ? exports.ResponseFlush.fromPartial(object.flush) : void 0;
        message.info = object.info !== void 0 && object.info !== null ? exports.ResponseInfo.fromPartial(object.info) : void 0;
        message.setOption = object.setOption !== void 0 && object.setOption !== null ? exports.ResponseSetOption.fromPartial(object.setOption) : void 0;
        message.initChain = object.initChain !== void 0 && object.initChain !== null ? exports.ResponseInitChain.fromPartial(object.initChain) : void 0;
        message.query = object.query !== void 0 && object.query !== null ? exports.ResponseQuery.fromPartial(object.query) : void 0;
        message.beginBlock = object.beginBlock !== void 0 && object.beginBlock !== null ? exports.ResponseBeginBlock.fromPartial(object.beginBlock) : void 0;
        message.checkTx = object.checkTx !== void 0 && object.checkTx !== null ? exports.ResponseCheckTx.fromPartial(object.checkTx) : void 0;
        message.deliverTx = object.deliverTx !== void 0 && object.deliverTx !== null ? exports.ResponseDeliverTx.fromPartial(object.deliverTx) : void 0;
        message.endBlock = object.endBlock !== void 0 && object.endBlock !== null ? exports.ResponseEndBlock.fromPartial(object.endBlock) : void 0;
        message.commit = object.commit !== void 0 && object.commit !== null ? exports.ResponseCommit.fromPartial(object.commit) : void 0;
        message.listSnapshots = object.listSnapshots !== void 0 && object.listSnapshots !== null ? exports.ResponseListSnapshots.fromPartial(object.listSnapshots) : void 0;
        message.offerSnapshot = object.offerSnapshot !== void 0 && object.offerSnapshot !== null ? exports.ResponseOfferSnapshot.fromPartial(object.offerSnapshot) : void 0;
        message.loadSnapshotChunk = object.loadSnapshotChunk !== void 0 && object.loadSnapshotChunk !== null ? exports.ResponseLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk) : void 0;
        message.applySnapshotChunk = object.applySnapshotChunk !== void 0 && object.applySnapshotChunk !== null ? exports.ResponseApplySnapshotChunk.fromPartial(object.applySnapshotChunk) : void 0;
        return message;
      }
    };
    function createBaseResponseException() {
      return {
        error: ""
      };
    }
    exports.ResponseException = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.error !== "") {
          writer.uint32(10).string(message.error);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseResponseException();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.error = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          error: (0, helpers_1.isSet)(object.error) ? String(object.error) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.error !== void 0 && (obj.error = message.error);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseResponseException();
        message.error = object.error ?? "";
        return message;
      }
    };
    function createBaseResponseEcho() {
      return {
        message: ""
      };
    }
    exports.ResponseEcho = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.message !== "") {
          writer.uint32(10).string(message.message);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseResponseEcho();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.message = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          message: (0, helpers_1.isSet)(object.message) ? String(object.message) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.message !== void 0 && (obj.message = message.message);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseResponseEcho();
        message.message = object.message ?? "";
        return message;
      }
    };
    function createBaseResponseFlush() {
      return {};
    }
    exports.ResponseFlush = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseResponseFlush();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseResponseFlush();
        return message;
      }
    };
    function createBaseResponseInfo() {
      return {
        data: "",
        version: "",
        appVersion: helpers_1.Long.UZERO,
        lastBlockHeight: helpers_1.Long.ZERO,
        lastBlockAppHash: new Uint8Array()
      };
    }
    exports.ResponseInfo = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.data !== "") {
          writer.uint32(10).string(message.data);
        }
        if (message.version !== "") {
          writer.uint32(18).string(message.version);
        }
        if (!message.appVersion.isZero()) {
          writer.uint32(24).uint64(message.appVersion);
        }
        if (!message.lastBlockHeight.isZero()) {
          writer.uint32(32).int64(message.lastBlockHeight);
        }
        if (message.lastBlockAppHash.length !== 0) {
          writer.uint32(42).bytes(message.lastBlockAppHash);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseResponseInfo();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.data = reader.string();
              break;
            case 2:
              message.version = reader.string();
              break;
            case 3:
              message.appVersion = reader.uint64();
              break;
            case 4:
              message.lastBlockHeight = reader.int64();
              break;
            case 5:
              message.lastBlockAppHash = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          data: (0, helpers_1.isSet)(object.data) ? String(object.data) : "",
          version: (0, helpers_1.isSet)(object.version) ? String(object.version) : "",
          appVersion: (0, helpers_1.isSet)(object.appVersion) ? helpers_1.Long.fromValue(object.appVersion) : helpers_1.Long.UZERO,
          lastBlockHeight: (0, helpers_1.isSet)(object.lastBlockHeight) ? helpers_1.Long.fromValue(object.lastBlockHeight) : helpers_1.Long.ZERO,
          lastBlockAppHash: (0, helpers_1.isSet)(object.lastBlockAppHash) ? (0, helpers_1.bytesFromBase64)(object.lastBlockAppHash) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.data !== void 0 && (obj.data = message.data);
        message.version !== void 0 && (obj.version = message.version);
        message.appVersion !== void 0 && (obj.appVersion = (message.appVersion || helpers_1.Long.UZERO).toString());
        message.lastBlockHeight !== void 0 && (obj.lastBlockHeight = (message.lastBlockHeight || helpers_1.Long.ZERO).toString());
        message.lastBlockAppHash !== void 0 && (obj.lastBlockAppHash = (0, helpers_1.base64FromBytes)(message.lastBlockAppHash !== void 0 ? message.lastBlockAppHash : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseResponseInfo();
        message.data = object.data ?? "";
        message.version = object.version ?? "";
        message.appVersion = object.appVersion !== void 0 && object.appVersion !== null ? helpers_1.Long.fromValue(object.appVersion) : helpers_1.Long.UZERO;
        message.lastBlockHeight = object.lastBlockHeight !== void 0 && object.lastBlockHeight !== null ? helpers_1.Long.fromValue(object.lastBlockHeight) : helpers_1.Long.ZERO;
        message.lastBlockAppHash = object.lastBlockAppHash ?? new Uint8Array();
        return message;
      }
    };
    function createBaseResponseSetOption() {
      return {
        code: 0,
        log: "",
        info: ""
      };
    }
    exports.ResponseSetOption = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.code !== 0) {
          writer.uint32(8).uint32(message.code);
        }
        if (message.log !== "") {
          writer.uint32(26).string(message.log);
        }
        if (message.info !== "") {
          writer.uint32(34).string(message.info);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseResponseSetOption();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.code = reader.uint32();
              break;
            case 3:
              message.log = reader.string();
              break;
            case 4:
              message.info = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          code: (0, helpers_1.isSet)(object.code) ? Number(object.code) : 0,
          log: (0, helpers_1.isSet)(object.log) ? String(object.log) : "",
          info: (0, helpers_1.isSet)(object.info) ? String(object.info) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.code !== void 0 && (obj.code = Math.round(message.code));
        message.log !== void 0 && (obj.log = message.log);
        message.info !== void 0 && (obj.info = message.info);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseResponseSetOption();
        message.code = object.code ?? 0;
        message.log = object.log ?? "";
        message.info = object.info ?? "";
        return message;
      }
    };
    function createBaseResponseInitChain() {
      return {
        consensusParams: void 0,
        validators: [],
        appHash: new Uint8Array()
      };
    }
    exports.ResponseInitChain = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.consensusParams !== void 0) {
          exports.ConsensusParams.encode(message.consensusParams, writer.uint32(10).fork()).ldelim();
        }
        for (const v of message.validators) {
          exports.ValidatorUpdate.encode(v, writer.uint32(18).fork()).ldelim();
        }
        if (message.appHash.length !== 0) {
          writer.uint32(26).bytes(message.appHash);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseResponseInitChain();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.consensusParams = exports.ConsensusParams.decode(reader, reader.uint32());
              break;
            case 2:
              message.validators.push(exports.ValidatorUpdate.decode(reader, reader.uint32()));
              break;
            case 3:
              message.appHash = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          consensusParams: (0, helpers_1.isSet)(object.consensusParams) ? exports.ConsensusParams.fromJSON(object.consensusParams) : void 0,
          validators: Array.isArray(object == null ? void 0 : object.validators) ? object.validators.map((e) => exports.ValidatorUpdate.fromJSON(e)) : [],
          appHash: (0, helpers_1.isSet)(object.appHash) ? (0, helpers_1.bytesFromBase64)(object.appHash) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.consensusParams !== void 0 && (obj.consensusParams = message.consensusParams ? exports.ConsensusParams.toJSON(message.consensusParams) : void 0);
        if (message.validators) {
          obj.validators = message.validators.map((e) => e ? exports.ValidatorUpdate.toJSON(e) : void 0);
        } else {
          obj.validators = [];
        }
        message.appHash !== void 0 && (obj.appHash = (0, helpers_1.base64FromBytes)(message.appHash !== void 0 ? message.appHash : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseResponseInitChain();
        message.consensusParams = object.consensusParams !== void 0 && object.consensusParams !== null ? exports.ConsensusParams.fromPartial(object.consensusParams) : void 0;
        message.validators = ((_a = object.validators) == null ? void 0 : _a.map((e) => exports.ValidatorUpdate.fromPartial(e))) || [];
        message.appHash = object.appHash ?? new Uint8Array();
        return message;
      }
    };
    function createBaseResponseQuery() {
      return {
        code: 0,
        log: "",
        info: "",
        index: helpers_1.Long.ZERO,
        key: new Uint8Array(),
        value: new Uint8Array(),
        proofOps: void 0,
        height: helpers_1.Long.ZERO,
        codespace: ""
      };
    }
    exports.ResponseQuery = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.code !== 0) {
          writer.uint32(8).uint32(message.code);
        }
        if (message.log !== "") {
          writer.uint32(26).string(message.log);
        }
        if (message.info !== "") {
          writer.uint32(34).string(message.info);
        }
        if (!message.index.isZero()) {
          writer.uint32(40).int64(message.index);
        }
        if (message.key.length !== 0) {
          writer.uint32(50).bytes(message.key);
        }
        if (message.value.length !== 0) {
          writer.uint32(58).bytes(message.value);
        }
        if (message.proofOps !== void 0) {
          proof_1.ProofOps.encode(message.proofOps, writer.uint32(66).fork()).ldelim();
        }
        if (!message.height.isZero()) {
          writer.uint32(72).int64(message.height);
        }
        if (message.codespace !== "") {
          writer.uint32(82).string(message.codespace);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseResponseQuery();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.code = reader.uint32();
              break;
            case 3:
              message.log = reader.string();
              break;
            case 4:
              message.info = reader.string();
              break;
            case 5:
              message.index = reader.int64();
              break;
            case 6:
              message.key = reader.bytes();
              break;
            case 7:
              message.value = reader.bytes();
              break;
            case 8:
              message.proofOps = proof_1.ProofOps.decode(reader, reader.uint32());
              break;
            case 9:
              message.height = reader.int64();
              break;
            case 10:
              message.codespace = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          code: (0, helpers_1.isSet)(object.code) ? Number(object.code) : 0,
          log: (0, helpers_1.isSet)(object.log) ? String(object.log) : "",
          info: (0, helpers_1.isSet)(object.info) ? String(object.info) : "",
          index: (0, helpers_1.isSet)(object.index) ? helpers_1.Long.fromValue(object.index) : helpers_1.Long.ZERO,
          key: (0, helpers_1.isSet)(object.key) ? (0, helpers_1.bytesFromBase64)(object.key) : new Uint8Array(),
          value: (0, helpers_1.isSet)(object.value) ? (0, helpers_1.bytesFromBase64)(object.value) : new Uint8Array(),
          proofOps: (0, helpers_1.isSet)(object.proofOps) ? proof_1.ProofOps.fromJSON(object.proofOps) : void 0,
          height: (0, helpers_1.isSet)(object.height) ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO,
          codespace: (0, helpers_1.isSet)(object.codespace) ? String(object.codespace) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.code !== void 0 && (obj.code = Math.round(message.code));
        message.log !== void 0 && (obj.log = message.log);
        message.info !== void 0 && (obj.info = message.info);
        message.index !== void 0 && (obj.index = (message.index || helpers_1.Long.ZERO).toString());
        message.key !== void 0 && (obj.key = (0, helpers_1.base64FromBytes)(message.key !== void 0 ? message.key : new Uint8Array()));
        message.value !== void 0 && (obj.value = (0, helpers_1.base64FromBytes)(message.value !== void 0 ? message.value : new Uint8Array()));
        message.proofOps !== void 0 && (obj.proofOps = message.proofOps ? proof_1.ProofOps.toJSON(message.proofOps) : void 0);
        message.height !== void 0 && (obj.height = (message.height || helpers_1.Long.ZERO).toString());
        message.codespace !== void 0 && (obj.codespace = message.codespace);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseResponseQuery();
        message.code = object.code ?? 0;
        message.log = object.log ?? "";
        message.info = object.info ?? "";
        message.index = object.index !== void 0 && object.index !== null ? helpers_1.Long.fromValue(object.index) : helpers_1.Long.ZERO;
        message.key = object.key ?? new Uint8Array();
        message.value = object.value ?? new Uint8Array();
        message.proofOps = object.proofOps !== void 0 && object.proofOps !== null ? proof_1.ProofOps.fromPartial(object.proofOps) : void 0;
        message.height = object.height !== void 0 && object.height !== null ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO;
        message.codespace = object.codespace ?? "";
        return message;
      }
    };
    function createBaseResponseBeginBlock() {
      return {
        events: []
      };
    }
    exports.ResponseBeginBlock = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.events) {
          exports.Event.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseResponseBeginBlock();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.events.push(exports.Event.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          events: Array.isArray(object == null ? void 0 : object.events) ? object.events.map((e) => exports.Event.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.events) {
          obj.events = message.events.map((e) => e ? exports.Event.toJSON(e) : void 0);
        } else {
          obj.events = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseResponseBeginBlock();
        message.events = ((_a = object.events) == null ? void 0 : _a.map((e) => exports.Event.fromPartial(e))) || [];
        return message;
      }
    };
    function createBaseResponseCheckTx() {
      return {
        code: 0,
        data: new Uint8Array(),
        log: "",
        info: "",
        gasWanted: helpers_1.Long.ZERO,
        gasUsed: helpers_1.Long.ZERO,
        events: [],
        codespace: "",
        sender: "",
        priority: helpers_1.Long.ZERO,
        mempoolError: ""
      };
    }
    exports.ResponseCheckTx = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.code !== 0) {
          writer.uint32(8).uint32(message.code);
        }
        if (message.data.length !== 0) {
          writer.uint32(18).bytes(message.data);
        }
        if (message.log !== "") {
          writer.uint32(26).string(message.log);
        }
        if (message.info !== "") {
          writer.uint32(34).string(message.info);
        }
        if (!message.gasWanted.isZero()) {
          writer.uint32(40).int64(message.gasWanted);
        }
        if (!message.gasUsed.isZero()) {
          writer.uint32(48).int64(message.gasUsed);
        }
        for (const v of message.events) {
          exports.Event.encode(v, writer.uint32(58).fork()).ldelim();
        }
        if (message.codespace !== "") {
          writer.uint32(66).string(message.codespace);
        }
        if (message.sender !== "") {
          writer.uint32(74).string(message.sender);
        }
        if (!message.priority.isZero()) {
          writer.uint32(80).int64(message.priority);
        }
        if (message.mempoolError !== "") {
          writer.uint32(90).string(message.mempoolError);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseResponseCheckTx();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.code = reader.uint32();
              break;
            case 2:
              message.data = reader.bytes();
              break;
            case 3:
              message.log = reader.string();
              break;
            case 4:
              message.info = reader.string();
              break;
            case 5:
              message.gasWanted = reader.int64();
              break;
            case 6:
              message.gasUsed = reader.int64();
              break;
            case 7:
              message.events.push(exports.Event.decode(reader, reader.uint32()));
              break;
            case 8:
              message.codespace = reader.string();
              break;
            case 9:
              message.sender = reader.string();
              break;
            case 10:
              message.priority = reader.int64();
              break;
            case 11:
              message.mempoolError = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          code: (0, helpers_1.isSet)(object.code) ? Number(object.code) : 0,
          data: (0, helpers_1.isSet)(object.data) ? (0, helpers_1.bytesFromBase64)(object.data) : new Uint8Array(),
          log: (0, helpers_1.isSet)(object.log) ? String(object.log) : "",
          info: (0, helpers_1.isSet)(object.info) ? String(object.info) : "",
          gasWanted: (0, helpers_1.isSet)(object.gas_wanted) ? helpers_1.Long.fromValue(object.gas_wanted) : helpers_1.Long.ZERO,
          gasUsed: (0, helpers_1.isSet)(object.gas_used) ? helpers_1.Long.fromValue(object.gas_used) : helpers_1.Long.ZERO,
          events: Array.isArray(object == null ? void 0 : object.events) ? object.events.map((e) => exports.Event.fromJSON(e)) : [],
          codespace: (0, helpers_1.isSet)(object.codespace) ? String(object.codespace) : "",
          sender: (0, helpers_1.isSet)(object.sender) ? String(object.sender) : "",
          priority: (0, helpers_1.isSet)(object.priority) ? helpers_1.Long.fromValue(object.priority) : helpers_1.Long.ZERO,
          mempoolError: (0, helpers_1.isSet)(object.mempoolError) ? String(object.mempoolError) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.code !== void 0 && (obj.code = Math.round(message.code));
        message.data !== void 0 && (obj.data = (0, helpers_1.base64FromBytes)(message.data !== void 0 ? message.data : new Uint8Array()));
        message.log !== void 0 && (obj.log = message.log);
        message.info !== void 0 && (obj.info = message.info);
        message.gasWanted !== void 0 && (obj.gas_wanted = (message.gasWanted || helpers_1.Long.ZERO).toString());
        message.gasUsed !== void 0 && (obj.gas_used = (message.gasUsed || helpers_1.Long.ZERO).toString());
        if (message.events) {
          obj.events = message.events.map((e) => e ? exports.Event.toJSON(e) : void 0);
        } else {
          obj.events = [];
        }
        message.codespace !== void 0 && (obj.codespace = message.codespace);
        message.sender !== void 0 && (obj.sender = message.sender);
        message.priority !== void 0 && (obj.priority = (message.priority || helpers_1.Long.ZERO).toString());
        message.mempoolError !== void 0 && (obj.mempoolError = message.mempoolError);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseResponseCheckTx();
        message.code = object.code ?? 0;
        message.data = object.data ?? new Uint8Array();
        message.log = object.log ?? "";
        message.info = object.info ?? "";
        message.gasWanted = object.gasWanted !== void 0 && object.gasWanted !== null ? helpers_1.Long.fromValue(object.gasWanted) : helpers_1.Long.ZERO;
        message.gasUsed = object.gasUsed !== void 0 && object.gasUsed !== null ? helpers_1.Long.fromValue(object.gasUsed) : helpers_1.Long.ZERO;
        message.events = ((_a = object.events) == null ? void 0 : _a.map((e) => exports.Event.fromPartial(e))) || [];
        message.codespace = object.codespace ?? "";
        message.sender = object.sender ?? "";
        message.priority = object.priority !== void 0 && object.priority !== null ? helpers_1.Long.fromValue(object.priority) : helpers_1.Long.ZERO;
        message.mempoolError = object.mempoolError ?? "";
        return message;
      }
    };
    function createBaseResponseDeliverTx() {
      return {
        code: 0,
        data: new Uint8Array(),
        log: "",
        info: "",
        gasWanted: helpers_1.Long.ZERO,
        gasUsed: helpers_1.Long.ZERO,
        events: [],
        codespace: ""
      };
    }
    exports.ResponseDeliverTx = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.code !== 0) {
          writer.uint32(8).uint32(message.code);
        }
        if (message.data.length !== 0) {
          writer.uint32(18).bytes(message.data);
        }
        if (message.log !== "") {
          writer.uint32(26).string(message.log);
        }
        if (message.info !== "") {
          writer.uint32(34).string(message.info);
        }
        if (!message.gasWanted.isZero()) {
          writer.uint32(40).int64(message.gasWanted);
        }
        if (!message.gasUsed.isZero()) {
          writer.uint32(48).int64(message.gasUsed);
        }
        for (const v of message.events) {
          exports.Event.encode(v, writer.uint32(58).fork()).ldelim();
        }
        if (message.codespace !== "") {
          writer.uint32(66).string(message.codespace);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseResponseDeliverTx();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.code = reader.uint32();
              break;
            case 2:
              message.data = reader.bytes();
              break;
            case 3:
              message.log = reader.string();
              break;
            case 4:
              message.info = reader.string();
              break;
            case 5:
              message.gasWanted = reader.int64();
              break;
            case 6:
              message.gasUsed = reader.int64();
              break;
            case 7:
              message.events.push(exports.Event.decode(reader, reader.uint32()));
              break;
            case 8:
              message.codespace = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          code: (0, helpers_1.isSet)(object.code) ? Number(object.code) : 0,
          data: (0, helpers_1.isSet)(object.data) ? (0, helpers_1.bytesFromBase64)(object.data) : new Uint8Array(),
          log: (0, helpers_1.isSet)(object.log) ? String(object.log) : "",
          info: (0, helpers_1.isSet)(object.info) ? String(object.info) : "",
          gasWanted: (0, helpers_1.isSet)(object.gas_wanted) ? helpers_1.Long.fromValue(object.gas_wanted) : helpers_1.Long.ZERO,
          gasUsed: (0, helpers_1.isSet)(object.gas_used) ? helpers_1.Long.fromValue(object.gas_used) : helpers_1.Long.ZERO,
          events: Array.isArray(object == null ? void 0 : object.events) ? object.events.map((e) => exports.Event.fromJSON(e)) : [],
          codespace: (0, helpers_1.isSet)(object.codespace) ? String(object.codespace) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.code !== void 0 && (obj.code = Math.round(message.code));
        message.data !== void 0 && (obj.data = (0, helpers_1.base64FromBytes)(message.data !== void 0 ? message.data : new Uint8Array()));
        message.log !== void 0 && (obj.log = message.log);
        message.info !== void 0 && (obj.info = message.info);
        message.gasWanted !== void 0 && (obj.gas_wanted = (message.gasWanted || helpers_1.Long.ZERO).toString());
        message.gasUsed !== void 0 && (obj.gas_used = (message.gasUsed || helpers_1.Long.ZERO).toString());
        if (message.events) {
          obj.events = message.events.map((e) => e ? exports.Event.toJSON(e) : void 0);
        } else {
          obj.events = [];
        }
        message.codespace !== void 0 && (obj.codespace = message.codespace);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseResponseDeliverTx();
        message.code = object.code ?? 0;
        message.data = object.data ?? new Uint8Array();
        message.log = object.log ?? "";
        message.info = object.info ?? "";
        message.gasWanted = object.gasWanted !== void 0 && object.gasWanted !== null ? helpers_1.Long.fromValue(object.gasWanted) : helpers_1.Long.ZERO;
        message.gasUsed = object.gasUsed !== void 0 && object.gasUsed !== null ? helpers_1.Long.fromValue(object.gasUsed) : helpers_1.Long.ZERO;
        message.events = ((_a = object.events) == null ? void 0 : _a.map((e) => exports.Event.fromPartial(e))) || [];
        message.codespace = object.codespace ?? "";
        return message;
      }
    };
    function createBaseResponseEndBlock() {
      return {
        validatorUpdates: [],
        consensusParamUpdates: void 0,
        events: []
      };
    }
    exports.ResponseEndBlock = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.validatorUpdates) {
          exports.ValidatorUpdate.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.consensusParamUpdates !== void 0) {
          exports.ConsensusParams.encode(message.consensusParamUpdates, writer.uint32(18).fork()).ldelim();
        }
        for (const v of message.events) {
          exports.Event.encode(v, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseResponseEndBlock();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.validatorUpdates.push(exports.ValidatorUpdate.decode(reader, reader.uint32()));
              break;
            case 2:
              message.consensusParamUpdates = exports.ConsensusParams.decode(reader, reader.uint32());
              break;
            case 3:
              message.events.push(exports.Event.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          validatorUpdates: Array.isArray(object == null ? void 0 : object.validatorUpdates) ? object.validatorUpdates.map((e) => exports.ValidatorUpdate.fromJSON(e)) : [],
          consensusParamUpdates: (0, helpers_1.isSet)(object.consensusParamUpdates) ? exports.ConsensusParams.fromJSON(object.consensusParamUpdates) : void 0,
          events: Array.isArray(object == null ? void 0 : object.events) ? object.events.map((e) => exports.Event.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.validatorUpdates) {
          obj.validatorUpdates = message.validatorUpdates.map((e) => e ? exports.ValidatorUpdate.toJSON(e) : void 0);
        } else {
          obj.validatorUpdates = [];
        }
        message.consensusParamUpdates !== void 0 && (obj.consensusParamUpdates = message.consensusParamUpdates ? exports.ConsensusParams.toJSON(message.consensusParamUpdates) : void 0);
        if (message.events) {
          obj.events = message.events.map((e) => e ? exports.Event.toJSON(e) : void 0);
        } else {
          obj.events = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a, _b;
        const message = createBaseResponseEndBlock();
        message.validatorUpdates = ((_a = object.validatorUpdates) == null ? void 0 : _a.map((e) => exports.ValidatorUpdate.fromPartial(e))) || [];
        message.consensusParamUpdates = object.consensusParamUpdates !== void 0 && object.consensusParamUpdates !== null ? exports.ConsensusParams.fromPartial(object.consensusParamUpdates) : void 0;
        message.events = ((_b = object.events) == null ? void 0 : _b.map((e) => exports.Event.fromPartial(e))) || [];
        return message;
      }
    };
    function createBaseResponseCommit() {
      return {
        data: new Uint8Array(),
        retainHeight: helpers_1.Long.ZERO
      };
    }
    exports.ResponseCommit = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.data.length !== 0) {
          writer.uint32(18).bytes(message.data);
        }
        if (!message.retainHeight.isZero()) {
          writer.uint32(24).int64(message.retainHeight);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseResponseCommit();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 2:
              message.data = reader.bytes();
              break;
            case 3:
              message.retainHeight = reader.int64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          data: (0, helpers_1.isSet)(object.data) ? (0, helpers_1.bytesFromBase64)(object.data) : new Uint8Array(),
          retainHeight: (0, helpers_1.isSet)(object.retainHeight) ? helpers_1.Long.fromValue(object.retainHeight) : helpers_1.Long.ZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.data !== void 0 && (obj.data = (0, helpers_1.base64FromBytes)(message.data !== void 0 ? message.data : new Uint8Array()));
        message.retainHeight !== void 0 && (obj.retainHeight = (message.retainHeight || helpers_1.Long.ZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseResponseCommit();
        message.data = object.data ?? new Uint8Array();
        message.retainHeight = object.retainHeight !== void 0 && object.retainHeight !== null ? helpers_1.Long.fromValue(object.retainHeight) : helpers_1.Long.ZERO;
        return message;
      }
    };
    function createBaseResponseListSnapshots() {
      return {
        snapshots: []
      };
    }
    exports.ResponseListSnapshots = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.snapshots) {
          exports.Snapshot.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseResponseListSnapshots();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.snapshots.push(exports.Snapshot.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          snapshots: Array.isArray(object == null ? void 0 : object.snapshots) ? object.snapshots.map((e) => exports.Snapshot.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.snapshots) {
          obj.snapshots = message.snapshots.map((e) => e ? exports.Snapshot.toJSON(e) : void 0);
        } else {
          obj.snapshots = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseResponseListSnapshots();
        message.snapshots = ((_a = object.snapshots) == null ? void 0 : _a.map((e) => exports.Snapshot.fromPartial(e))) || [];
        return message;
      }
    };
    function createBaseResponseOfferSnapshot() {
      return {
        result: 0
      };
    }
    exports.ResponseOfferSnapshot = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.result !== 0) {
          writer.uint32(8).int32(message.result);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseResponseOfferSnapshot();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.result = reader.int32();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          result: (0, helpers_1.isSet)(object.result) ? responseOfferSnapshot_ResultFromJSON(object.result) : 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.result !== void 0 && (obj.result = responseOfferSnapshot_ResultToJSON(message.result));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseResponseOfferSnapshot();
        message.result = object.result ?? 0;
        return message;
      }
    };
    function createBaseResponseLoadSnapshotChunk() {
      return {
        chunk: new Uint8Array()
      };
    }
    exports.ResponseLoadSnapshotChunk = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.chunk.length !== 0) {
          writer.uint32(10).bytes(message.chunk);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseResponseLoadSnapshotChunk();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.chunk = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          chunk: (0, helpers_1.isSet)(object.chunk) ? (0, helpers_1.bytesFromBase64)(object.chunk) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.chunk !== void 0 && (obj.chunk = (0, helpers_1.base64FromBytes)(message.chunk !== void 0 ? message.chunk : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseResponseLoadSnapshotChunk();
        message.chunk = object.chunk ?? new Uint8Array();
        return message;
      }
    };
    function createBaseResponseApplySnapshotChunk() {
      return {
        result: 0,
        refetchChunks: [],
        rejectSenders: []
      };
    }
    exports.ResponseApplySnapshotChunk = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.result !== 0) {
          writer.uint32(8).int32(message.result);
        }
        writer.uint32(18).fork();
        for (const v of message.refetchChunks) {
          writer.uint32(v);
        }
        writer.ldelim();
        for (const v of message.rejectSenders) {
          writer.uint32(26).string(v);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseResponseApplySnapshotChunk();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.result = reader.int32();
              break;
            case 2:
              if ((tag & 7) === 2) {
                const end2 = reader.uint32() + reader.pos;
                while (reader.pos < end2) {
                  message.refetchChunks.push(reader.uint32());
                }
              } else {
                message.refetchChunks.push(reader.uint32());
              }
              break;
            case 3:
              message.rejectSenders.push(reader.string());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          result: (0, helpers_1.isSet)(object.result) ? responseApplySnapshotChunk_ResultFromJSON(object.result) : 0,
          refetchChunks: Array.isArray(object == null ? void 0 : object.refetchChunks) ? object.refetchChunks.map((e) => Number(e)) : [],
          rejectSenders: Array.isArray(object == null ? void 0 : object.rejectSenders) ? object.rejectSenders.map((e) => String(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.result !== void 0 && (obj.result = responseApplySnapshotChunk_ResultToJSON(message.result));
        if (message.refetchChunks) {
          obj.refetchChunks = message.refetchChunks.map((e) => Math.round(e));
        } else {
          obj.refetchChunks = [];
        }
        if (message.rejectSenders) {
          obj.rejectSenders = message.rejectSenders.map((e) => e);
        } else {
          obj.rejectSenders = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a, _b;
        const message = createBaseResponseApplySnapshotChunk();
        message.result = object.result ?? 0;
        message.refetchChunks = ((_a = object.refetchChunks) == null ? void 0 : _a.map((e) => e)) || [];
        message.rejectSenders = ((_b = object.rejectSenders) == null ? void 0 : _b.map((e) => e)) || [];
        return message;
      }
    };
    function createBaseConsensusParams() {
      return {
        block: void 0,
        evidence: void 0,
        validator: void 0,
        version: void 0
      };
    }
    exports.ConsensusParams = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.block !== void 0) {
          exports.BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();
        }
        if (message.evidence !== void 0) {
          params_1.EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();
        }
        if (message.validator !== void 0) {
          params_1.ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();
        }
        if (message.version !== void 0) {
          params_1.VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseConsensusParams();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.block = exports.BlockParams.decode(reader, reader.uint32());
              break;
            case 2:
              message.evidence = params_1.EvidenceParams.decode(reader, reader.uint32());
              break;
            case 3:
              message.validator = params_1.ValidatorParams.decode(reader, reader.uint32());
              break;
            case 4:
              message.version = params_1.VersionParams.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          block: (0, helpers_1.isSet)(object.block) ? exports.BlockParams.fromJSON(object.block) : void 0,
          evidence: (0, helpers_1.isSet)(object.evidence) ? params_1.EvidenceParams.fromJSON(object.evidence) : void 0,
          validator: (0, helpers_1.isSet)(object.validator) ? params_1.ValidatorParams.fromJSON(object.validator) : void 0,
          version: (0, helpers_1.isSet)(object.version) ? params_1.VersionParams.fromJSON(object.version) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.block !== void 0 && (obj.block = message.block ? exports.BlockParams.toJSON(message.block) : void 0);
        message.evidence !== void 0 && (obj.evidence = message.evidence ? params_1.EvidenceParams.toJSON(message.evidence) : void 0);
        message.validator !== void 0 && (obj.validator = message.validator ? params_1.ValidatorParams.toJSON(message.validator) : void 0);
        message.version !== void 0 && (obj.version = message.version ? params_1.VersionParams.toJSON(message.version) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseConsensusParams();
        message.block = object.block !== void 0 && object.block !== null ? exports.BlockParams.fromPartial(object.block) : void 0;
        message.evidence = object.evidence !== void 0 && object.evidence !== null ? params_1.EvidenceParams.fromPartial(object.evidence) : void 0;
        message.validator = object.validator !== void 0 && object.validator !== null ? params_1.ValidatorParams.fromPartial(object.validator) : void 0;
        message.version = object.version !== void 0 && object.version !== null ? params_1.VersionParams.fromPartial(object.version) : void 0;
        return message;
      }
    };
    function createBaseBlockParams() {
      return {
        maxBytes: helpers_1.Long.ZERO,
        maxGas: helpers_1.Long.ZERO
      };
    }
    exports.BlockParams = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.maxBytes.isZero()) {
          writer.uint32(8).int64(message.maxBytes);
        }
        if (!message.maxGas.isZero()) {
          writer.uint32(16).int64(message.maxGas);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseBlockParams();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.maxBytes = reader.int64();
              break;
            case 2:
              message.maxGas = reader.int64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          maxBytes: (0, helpers_1.isSet)(object.maxBytes) ? helpers_1.Long.fromValue(object.maxBytes) : helpers_1.Long.ZERO,
          maxGas: (0, helpers_1.isSet)(object.maxGas) ? helpers_1.Long.fromValue(object.maxGas) : helpers_1.Long.ZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.maxBytes !== void 0 && (obj.maxBytes = (message.maxBytes || helpers_1.Long.ZERO).toString());
        message.maxGas !== void 0 && (obj.maxGas = (message.maxGas || helpers_1.Long.ZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseBlockParams();
        message.maxBytes = object.maxBytes !== void 0 && object.maxBytes !== null ? helpers_1.Long.fromValue(object.maxBytes) : helpers_1.Long.ZERO;
        message.maxGas = object.maxGas !== void 0 && object.maxGas !== null ? helpers_1.Long.fromValue(object.maxGas) : helpers_1.Long.ZERO;
        return message;
      }
    };
    function createBaseLastCommitInfo() {
      return {
        round: 0,
        votes: []
      };
    }
    exports.LastCommitInfo = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.round !== 0) {
          writer.uint32(8).int32(message.round);
        }
        for (const v of message.votes) {
          exports.VoteInfo.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseLastCommitInfo();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.round = reader.int32();
              break;
            case 2:
              message.votes.push(exports.VoteInfo.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          round: (0, helpers_1.isSet)(object.round) ? Number(object.round) : 0,
          votes: Array.isArray(object == null ? void 0 : object.votes) ? object.votes.map((e) => exports.VoteInfo.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.round !== void 0 && (obj.round = Math.round(message.round));
        if (message.votes) {
          obj.votes = message.votes.map((e) => e ? exports.VoteInfo.toJSON(e) : void 0);
        } else {
          obj.votes = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseLastCommitInfo();
        message.round = object.round ?? 0;
        message.votes = ((_a = object.votes) == null ? void 0 : _a.map((e) => exports.VoteInfo.fromPartial(e))) || [];
        return message;
      }
    };
    function createBaseEvent() {
      return {
        type: "",
        attributes: []
      };
    }
    exports.Event = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.type !== "") {
          writer.uint32(10).string(message.type);
        }
        for (const v of message.attributes) {
          exports.EventAttribute.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseEvent();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.type = reader.string();
              break;
            case 2:
              message.attributes.push(exports.EventAttribute.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          type: (0, helpers_1.isSet)(object.type) ? String(object.type) : "",
          attributes: Array.isArray(object == null ? void 0 : object.attributes) ? object.attributes.map((e) => exports.EventAttribute.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.type !== void 0 && (obj.type = message.type);
        if (message.attributes) {
          obj.attributes = message.attributes.map((e) => e ? exports.EventAttribute.toJSON(e) : void 0);
        } else {
          obj.attributes = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseEvent();
        message.type = object.type ?? "";
        message.attributes = ((_a = object.attributes) == null ? void 0 : _a.map((e) => exports.EventAttribute.fromPartial(e))) || [];
        return message;
      }
    };
    function createBaseEventAttribute() {
      return {
        key: new Uint8Array(),
        value: new Uint8Array(),
        index: false
      };
    }
    exports.EventAttribute = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.key.length !== 0) {
          writer.uint32(10).bytes(message.key);
        }
        if (message.value.length !== 0) {
          writer.uint32(18).bytes(message.value);
        }
        if (message.index === true) {
          writer.uint32(24).bool(message.index);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseEventAttribute();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.key = reader.bytes();
              break;
            case 2:
              message.value = reader.bytes();
              break;
            case 3:
              message.index = reader.bool();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          key: (0, helpers_1.isSet)(object.key) ? (0, helpers_1.bytesFromBase64)(object.key) : new Uint8Array(),
          value: (0, helpers_1.isSet)(object.value) ? (0, helpers_1.bytesFromBase64)(object.value) : new Uint8Array(),
          index: (0, helpers_1.isSet)(object.index) ? Boolean(object.index) : false
        };
      },
      toJSON(message) {
        const obj = {};
        message.key !== void 0 && (obj.key = (0, helpers_1.base64FromBytes)(message.key !== void 0 ? message.key : new Uint8Array()));
        message.value !== void 0 && (obj.value = (0, helpers_1.base64FromBytes)(message.value !== void 0 ? message.value : new Uint8Array()));
        message.index !== void 0 && (obj.index = message.index);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseEventAttribute();
        message.key = object.key ?? new Uint8Array();
        message.value = object.value ?? new Uint8Array();
        message.index = object.index ?? false;
        return message;
      }
    };
    function createBaseTxResult() {
      return {
        height: helpers_1.Long.ZERO,
        index: 0,
        tx: new Uint8Array(),
        result: void 0
      };
    }
    exports.TxResult = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.height.isZero()) {
          writer.uint32(8).int64(message.height);
        }
        if (message.index !== 0) {
          writer.uint32(16).uint32(message.index);
        }
        if (message.tx.length !== 0) {
          writer.uint32(26).bytes(message.tx);
        }
        if (message.result !== void 0) {
          exports.ResponseDeliverTx.encode(message.result, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseTxResult();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.height = reader.int64();
              break;
            case 2:
              message.index = reader.uint32();
              break;
            case 3:
              message.tx = reader.bytes();
              break;
            case 4:
              message.result = exports.ResponseDeliverTx.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          height: (0, helpers_1.isSet)(object.height) ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO,
          index: (0, helpers_1.isSet)(object.index) ? Number(object.index) : 0,
          tx: (0, helpers_1.isSet)(object.tx) ? (0, helpers_1.bytesFromBase64)(object.tx) : new Uint8Array(),
          result: (0, helpers_1.isSet)(object.result) ? exports.ResponseDeliverTx.fromJSON(object.result) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.height !== void 0 && (obj.height = (message.height || helpers_1.Long.ZERO).toString());
        message.index !== void 0 && (obj.index = Math.round(message.index));
        message.tx !== void 0 && (obj.tx = (0, helpers_1.base64FromBytes)(message.tx !== void 0 ? message.tx : new Uint8Array()));
        message.result !== void 0 && (obj.result = message.result ? exports.ResponseDeliverTx.toJSON(message.result) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseTxResult();
        message.height = object.height !== void 0 && object.height !== null ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO;
        message.index = object.index ?? 0;
        message.tx = object.tx ?? new Uint8Array();
        message.result = object.result !== void 0 && object.result !== null ? exports.ResponseDeliverTx.fromPartial(object.result) : void 0;
        return message;
      }
    };
    function createBaseValidator() {
      return {
        address: new Uint8Array(),
        power: helpers_1.Long.ZERO
      };
    }
    exports.Validator = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.address.length !== 0) {
          writer.uint32(10).bytes(message.address);
        }
        if (!message.power.isZero()) {
          writer.uint32(24).int64(message.power);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseValidator();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.address = reader.bytes();
              break;
            case 3:
              message.power = reader.int64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          address: (0, helpers_1.isSet)(object.address) ? (0, helpers_1.bytesFromBase64)(object.address) : new Uint8Array(),
          power: (0, helpers_1.isSet)(object.power) ? helpers_1.Long.fromValue(object.power) : helpers_1.Long.ZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.address !== void 0 && (obj.address = (0, helpers_1.base64FromBytes)(message.address !== void 0 ? message.address : new Uint8Array()));
        message.power !== void 0 && (obj.power = (message.power || helpers_1.Long.ZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseValidator();
        message.address = object.address ?? new Uint8Array();
        message.power = object.power !== void 0 && object.power !== null ? helpers_1.Long.fromValue(object.power) : helpers_1.Long.ZERO;
        return message;
      }
    };
    function createBaseValidatorUpdate() {
      return {
        pubKey: void 0,
        power: helpers_1.Long.ZERO
      };
    }
    exports.ValidatorUpdate = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.pubKey !== void 0) {
          keys_1.PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();
        }
        if (!message.power.isZero()) {
          writer.uint32(16).int64(message.power);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseValidatorUpdate();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.pubKey = keys_1.PublicKey.decode(reader, reader.uint32());
              break;
            case 2:
              message.power = reader.int64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          pubKey: (0, helpers_1.isSet)(object.pubKey) ? keys_1.PublicKey.fromJSON(object.pubKey) : void 0,
          power: (0, helpers_1.isSet)(object.power) ? helpers_1.Long.fromValue(object.power) : helpers_1.Long.ZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.pubKey !== void 0 && (obj.pubKey = message.pubKey ? keys_1.PublicKey.toJSON(message.pubKey) : void 0);
        message.power !== void 0 && (obj.power = (message.power || helpers_1.Long.ZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseValidatorUpdate();
        message.pubKey = object.pubKey !== void 0 && object.pubKey !== null ? keys_1.PublicKey.fromPartial(object.pubKey) : void 0;
        message.power = object.power !== void 0 && object.power !== null ? helpers_1.Long.fromValue(object.power) : helpers_1.Long.ZERO;
        return message;
      }
    };
    function createBaseVoteInfo() {
      return {
        validator: void 0,
        signedLastBlock: false
      };
    }
    exports.VoteInfo = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.validator !== void 0) {
          exports.Validator.encode(message.validator, writer.uint32(10).fork()).ldelim();
        }
        if (message.signedLastBlock === true) {
          writer.uint32(16).bool(message.signedLastBlock);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseVoteInfo();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.validator = exports.Validator.decode(reader, reader.uint32());
              break;
            case 2:
              message.signedLastBlock = reader.bool();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          validator: (0, helpers_1.isSet)(object.validator) ? exports.Validator.fromJSON(object.validator) : void 0,
          signedLastBlock: (0, helpers_1.isSet)(object.signedLastBlock) ? Boolean(object.signedLastBlock) : false
        };
      },
      toJSON(message) {
        const obj = {};
        message.validator !== void 0 && (obj.validator = message.validator ? exports.Validator.toJSON(message.validator) : void 0);
        message.signedLastBlock !== void 0 && (obj.signedLastBlock = message.signedLastBlock);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseVoteInfo();
        message.validator = object.validator !== void 0 && object.validator !== null ? exports.Validator.fromPartial(object.validator) : void 0;
        message.signedLastBlock = object.signedLastBlock ?? false;
        return message;
      }
    };
    function createBaseEvidence() {
      return {
        type: 0,
        validator: void 0,
        height: helpers_1.Long.ZERO,
        time: void 0,
        totalVotingPower: helpers_1.Long.ZERO
      };
    }
    exports.Evidence = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.type !== 0) {
          writer.uint32(8).int32(message.type);
        }
        if (message.validator !== void 0) {
          exports.Validator.encode(message.validator, writer.uint32(18).fork()).ldelim();
        }
        if (!message.height.isZero()) {
          writer.uint32(24).int64(message.height);
        }
        if (message.time !== void 0) {
          timestamp_1.Timestamp.encode(message.time, writer.uint32(34).fork()).ldelim();
        }
        if (!message.totalVotingPower.isZero()) {
          writer.uint32(40).int64(message.totalVotingPower);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseEvidence();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.type = reader.int32();
              break;
            case 2:
              message.validator = exports.Validator.decode(reader, reader.uint32());
              break;
            case 3:
              message.height = reader.int64();
              break;
            case 4:
              message.time = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            case 5:
              message.totalVotingPower = reader.int64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          type: (0, helpers_1.isSet)(object.type) ? evidenceTypeFromJSON(object.type) : 0,
          validator: (0, helpers_1.isSet)(object.validator) ? exports.Validator.fromJSON(object.validator) : void 0,
          height: (0, helpers_1.isSet)(object.height) ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO,
          time: (0, helpers_1.isSet)(object.time) ? (0, helpers_1.fromJsonTimestamp)(object.time) : void 0,
          totalVotingPower: (0, helpers_1.isSet)(object.totalVotingPower) ? helpers_1.Long.fromValue(object.totalVotingPower) : helpers_1.Long.ZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.type !== void 0 && (obj.type = evidenceTypeToJSON(message.type));
        message.validator !== void 0 && (obj.validator = message.validator ? exports.Validator.toJSON(message.validator) : void 0);
        message.height !== void 0 && (obj.height = (message.height || helpers_1.Long.ZERO).toString());
        message.time !== void 0 && (obj.time = (0, helpers_1.fromTimestamp)(message.time).toISOString());
        message.totalVotingPower !== void 0 && (obj.totalVotingPower = (message.totalVotingPower || helpers_1.Long.ZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseEvidence();
        message.type = object.type ?? 0;
        message.validator = object.validator !== void 0 && object.validator !== null ? exports.Validator.fromPartial(object.validator) : void 0;
        message.height = object.height !== void 0 && object.height !== null ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO;
        message.time = object.time !== void 0 && object.time !== null ? timestamp_1.Timestamp.fromPartial(object.time) : void 0;
        message.totalVotingPower = object.totalVotingPower !== void 0 && object.totalVotingPower !== null ? helpers_1.Long.fromValue(object.totalVotingPower) : helpers_1.Long.ZERO;
        return message;
      }
    };
    function createBaseSnapshot() {
      return {
        height: helpers_1.Long.UZERO,
        format: 0,
        chunks: 0,
        hash: new Uint8Array(),
        metadata: new Uint8Array()
      };
    }
    exports.Snapshot = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.height.isZero()) {
          writer.uint32(8).uint64(message.height);
        }
        if (message.format !== 0) {
          writer.uint32(16).uint32(message.format);
        }
        if (message.chunks !== 0) {
          writer.uint32(24).uint32(message.chunks);
        }
        if (message.hash.length !== 0) {
          writer.uint32(34).bytes(message.hash);
        }
        if (message.metadata.length !== 0) {
          writer.uint32(42).bytes(message.metadata);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseSnapshot();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.height = reader.uint64();
              break;
            case 2:
              message.format = reader.uint32();
              break;
            case 3:
              message.chunks = reader.uint32();
              break;
            case 4:
              message.hash = reader.bytes();
              break;
            case 5:
              message.metadata = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          height: (0, helpers_1.isSet)(object.height) ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.UZERO,
          format: (0, helpers_1.isSet)(object.format) ? Number(object.format) : 0,
          chunks: (0, helpers_1.isSet)(object.chunks) ? Number(object.chunks) : 0,
          hash: (0, helpers_1.isSet)(object.hash) ? (0, helpers_1.bytesFromBase64)(object.hash) : new Uint8Array(),
          metadata: (0, helpers_1.isSet)(object.metadata) ? (0, helpers_1.bytesFromBase64)(object.metadata) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.height !== void 0 && (obj.height = (message.height || helpers_1.Long.UZERO).toString());
        message.format !== void 0 && (obj.format = Math.round(message.format));
        message.chunks !== void 0 && (obj.chunks = Math.round(message.chunks));
        message.hash !== void 0 && (obj.hash = (0, helpers_1.base64FromBytes)(message.hash !== void 0 ? message.hash : new Uint8Array()));
        message.metadata !== void 0 && (obj.metadata = (0, helpers_1.base64FromBytes)(message.metadata !== void 0 ? message.metadata : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseSnapshot();
        message.height = object.height !== void 0 && object.height !== null ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.UZERO;
        message.format = object.format ?? 0;
        message.chunks = object.chunks ?? 0;
        message.hash = object.hash ?? new Uint8Array();
        message.metadata = object.metadata ?? new Uint8Array();
        return message;
      }
    };
    var ABCIApplicationClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.Echo = this.Echo.bind(this);
        this.Flush = this.Flush.bind(this);
        this.Info = this.Info.bind(this);
        this.SetOption = this.SetOption.bind(this);
        this.DeliverTx = this.DeliverTx.bind(this);
        this.CheckTx = this.CheckTx.bind(this);
        this.Query = this.Query.bind(this);
        this.Commit = this.Commit.bind(this);
        this.InitChain = this.InitChain.bind(this);
        this.BeginBlock = this.BeginBlock.bind(this);
        this.EndBlock = this.EndBlock.bind(this);
        this.ListSnapshots = this.ListSnapshots.bind(this);
        this.OfferSnapshot = this.OfferSnapshot.bind(this);
        this.LoadSnapshotChunk = this.LoadSnapshotChunk.bind(this);
        this.ApplySnapshotChunk = this.ApplySnapshotChunk.bind(this);
      }
      Echo(request) {
        const data = exports.RequestEcho.encode(request).finish();
        const promise = this.rpc.request("tendermint.abci.ABCIApplication", "Echo", data);
        return promise.then((data2) => exports.ResponseEcho.decode(new _m0.Reader(data2)));
      }
      Flush(request = {}) {
        const data = exports.RequestFlush.encode(request).finish();
        const promise = this.rpc.request("tendermint.abci.ABCIApplication", "Flush", data);
        return promise.then((data2) => exports.ResponseFlush.decode(new _m0.Reader(data2)));
      }
      Info(request) {
        const data = exports.RequestInfo.encode(request).finish();
        const promise = this.rpc.request("tendermint.abci.ABCIApplication", "Info", data);
        return promise.then((data2) => exports.ResponseInfo.decode(new _m0.Reader(data2)));
      }
      SetOption(request) {
        const data = exports.RequestSetOption.encode(request).finish();
        const promise = this.rpc.request("tendermint.abci.ABCIApplication", "SetOption", data);
        return promise.then((data2) => exports.ResponseSetOption.decode(new _m0.Reader(data2)));
      }
      DeliverTx(request) {
        const data = exports.RequestDeliverTx.encode(request).finish();
        const promise = this.rpc.request("tendermint.abci.ABCIApplication", "DeliverTx", data);
        return promise.then((data2) => exports.ResponseDeliverTx.decode(new _m0.Reader(data2)));
      }
      CheckTx(request) {
        const data = exports.RequestCheckTx.encode(request).finish();
        const promise = this.rpc.request("tendermint.abci.ABCIApplication", "CheckTx", data);
        return promise.then((data2) => exports.ResponseCheckTx.decode(new _m0.Reader(data2)));
      }
      Query(request) {
        const data = exports.RequestQuery.encode(request).finish();
        const promise = this.rpc.request("tendermint.abci.ABCIApplication", "Query", data);
        return promise.then((data2) => exports.ResponseQuery.decode(new _m0.Reader(data2)));
      }
      Commit(request = {}) {
        const data = exports.RequestCommit.encode(request).finish();
        const promise = this.rpc.request("tendermint.abci.ABCIApplication", "Commit", data);
        return promise.then((data2) => exports.ResponseCommit.decode(new _m0.Reader(data2)));
      }
      InitChain(request) {
        const data = exports.RequestInitChain.encode(request).finish();
        const promise = this.rpc.request("tendermint.abci.ABCIApplication", "InitChain", data);
        return promise.then((data2) => exports.ResponseInitChain.decode(new _m0.Reader(data2)));
      }
      BeginBlock(request) {
        const data = exports.RequestBeginBlock.encode(request).finish();
        const promise = this.rpc.request("tendermint.abci.ABCIApplication", "BeginBlock", data);
        return promise.then((data2) => exports.ResponseBeginBlock.decode(new _m0.Reader(data2)));
      }
      EndBlock(request) {
        const data = exports.RequestEndBlock.encode(request).finish();
        const promise = this.rpc.request("tendermint.abci.ABCIApplication", "EndBlock", data);
        return promise.then((data2) => exports.ResponseEndBlock.decode(new _m0.Reader(data2)));
      }
      ListSnapshots(request = {}) {
        const data = exports.RequestListSnapshots.encode(request).finish();
        const promise = this.rpc.request("tendermint.abci.ABCIApplication", "ListSnapshots", data);
        return promise.then((data2) => exports.ResponseListSnapshots.decode(new _m0.Reader(data2)));
      }
      OfferSnapshot(request) {
        const data = exports.RequestOfferSnapshot.encode(request).finish();
        const promise = this.rpc.request("tendermint.abci.ABCIApplication", "OfferSnapshot", data);
        return promise.then((data2) => exports.ResponseOfferSnapshot.decode(new _m0.Reader(data2)));
      }
      LoadSnapshotChunk(request) {
        const data = exports.RequestLoadSnapshotChunk.encode(request).finish();
        const promise = this.rpc.request("tendermint.abci.ABCIApplication", "LoadSnapshotChunk", data);
        return promise.then((data2) => exports.ResponseLoadSnapshotChunk.decode(new _m0.Reader(data2)));
      }
      ApplySnapshotChunk(request) {
        const data = exports.RequestApplySnapshotChunk.encode(request).finish();
        const promise = this.rpc.request("tendermint.abci.ABCIApplication", "ApplySnapshotChunk", data);
        return promise.then((data2) => exports.ResponseApplySnapshotChunk.decode(new _m0.Reader(data2)));
      }
    };
    exports.ABCIApplicationClientImpl = ABCIApplicationClientImpl;
  }
});

// node_modules/cosmjs-types/cosmos/base/abci/v1beta1/abci.js
var require_abci = __commonJS({
  "node_modules/cosmjs-types/cosmos/base/abci/v1beta1/abci.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SearchTxsResult = exports.TxMsgData = exports.MsgData = exports.SimulationResponse = exports.Result = exports.GasInfo = exports.Attribute = exports.StringEvent = exports.ABCIMessageLog = exports.TxResponse = exports.protobufPackage = void 0;
    var any_1 = require_any();
    var types_1 = require_types3();
    var helpers_1 = require_helpers();
    var _m0 = __importStar(require_minimal());
    exports.protobufPackage = "cosmos.base.abci.v1beta1";
    function createBaseTxResponse() {
      return {
        height: helpers_1.Long.ZERO,
        txhash: "",
        codespace: "",
        code: 0,
        data: "",
        rawLog: "",
        logs: [],
        info: "",
        gasWanted: helpers_1.Long.ZERO,
        gasUsed: helpers_1.Long.ZERO,
        tx: void 0,
        timestamp: "",
        events: []
      };
    }
    exports.TxResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.height.isZero()) {
          writer.uint32(8).int64(message.height);
        }
        if (message.txhash !== "") {
          writer.uint32(18).string(message.txhash);
        }
        if (message.codespace !== "") {
          writer.uint32(26).string(message.codespace);
        }
        if (message.code !== 0) {
          writer.uint32(32).uint32(message.code);
        }
        if (message.data !== "") {
          writer.uint32(42).string(message.data);
        }
        if (message.rawLog !== "") {
          writer.uint32(50).string(message.rawLog);
        }
        for (const v of message.logs) {
          exports.ABCIMessageLog.encode(v, writer.uint32(58).fork()).ldelim();
        }
        if (message.info !== "") {
          writer.uint32(66).string(message.info);
        }
        if (!message.gasWanted.isZero()) {
          writer.uint32(72).int64(message.gasWanted);
        }
        if (!message.gasUsed.isZero()) {
          writer.uint32(80).int64(message.gasUsed);
        }
        if (message.tx !== void 0) {
          any_1.Any.encode(message.tx, writer.uint32(90).fork()).ldelim();
        }
        if (message.timestamp !== "") {
          writer.uint32(98).string(message.timestamp);
        }
        for (const v of message.events) {
          types_1.Event.encode(v, writer.uint32(106).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseTxResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.height = reader.int64();
              break;
            case 2:
              message.txhash = reader.string();
              break;
            case 3:
              message.codespace = reader.string();
              break;
            case 4:
              message.code = reader.uint32();
              break;
            case 5:
              message.data = reader.string();
              break;
            case 6:
              message.rawLog = reader.string();
              break;
            case 7:
              message.logs.push(exports.ABCIMessageLog.decode(reader, reader.uint32()));
              break;
            case 8:
              message.info = reader.string();
              break;
            case 9:
              message.gasWanted = reader.int64();
              break;
            case 10:
              message.gasUsed = reader.int64();
              break;
            case 11:
              message.tx = any_1.Any.decode(reader, reader.uint32());
              break;
            case 12:
              message.timestamp = reader.string();
              break;
            case 13:
              message.events.push(types_1.Event.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          height: (0, helpers_1.isSet)(object.height) ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO,
          txhash: (0, helpers_1.isSet)(object.txhash) ? String(object.txhash) : "",
          codespace: (0, helpers_1.isSet)(object.codespace) ? String(object.codespace) : "",
          code: (0, helpers_1.isSet)(object.code) ? Number(object.code) : 0,
          data: (0, helpers_1.isSet)(object.data) ? String(object.data) : "",
          rawLog: (0, helpers_1.isSet)(object.rawLog) ? String(object.rawLog) : "",
          logs: Array.isArray(object == null ? void 0 : object.logs) ? object.logs.map((e) => exports.ABCIMessageLog.fromJSON(e)) : [],
          info: (0, helpers_1.isSet)(object.info) ? String(object.info) : "",
          gasWanted: (0, helpers_1.isSet)(object.gasWanted) ? helpers_1.Long.fromValue(object.gasWanted) : helpers_1.Long.ZERO,
          gasUsed: (0, helpers_1.isSet)(object.gasUsed) ? helpers_1.Long.fromValue(object.gasUsed) : helpers_1.Long.ZERO,
          tx: (0, helpers_1.isSet)(object.tx) ? any_1.Any.fromJSON(object.tx) : void 0,
          timestamp: (0, helpers_1.isSet)(object.timestamp) ? String(object.timestamp) : "",
          events: Array.isArray(object == null ? void 0 : object.events) ? object.events.map((e) => types_1.Event.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.height !== void 0 && (obj.height = (message.height || helpers_1.Long.ZERO).toString());
        message.txhash !== void 0 && (obj.txhash = message.txhash);
        message.codespace !== void 0 && (obj.codespace = message.codespace);
        message.code !== void 0 && (obj.code = Math.round(message.code));
        message.data !== void 0 && (obj.data = message.data);
        message.rawLog !== void 0 && (obj.rawLog = message.rawLog);
        if (message.logs) {
          obj.logs = message.logs.map((e) => e ? exports.ABCIMessageLog.toJSON(e) : void 0);
        } else {
          obj.logs = [];
        }
        message.info !== void 0 && (obj.info = message.info);
        message.gasWanted !== void 0 && (obj.gasWanted = (message.gasWanted || helpers_1.Long.ZERO).toString());
        message.gasUsed !== void 0 && (obj.gasUsed = (message.gasUsed || helpers_1.Long.ZERO).toString());
        message.tx !== void 0 && (obj.tx = message.tx ? any_1.Any.toJSON(message.tx) : void 0);
        message.timestamp !== void 0 && (obj.timestamp = message.timestamp);
        if (message.events) {
          obj.events = message.events.map((e) => e ? types_1.Event.toJSON(e) : void 0);
        } else {
          obj.events = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a, _b;
        const message = createBaseTxResponse();
        message.height = object.height !== void 0 && object.height !== null ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO;
        message.txhash = object.txhash ?? "";
        message.codespace = object.codespace ?? "";
        message.code = object.code ?? 0;
        message.data = object.data ?? "";
        message.rawLog = object.rawLog ?? "";
        message.logs = ((_a = object.logs) == null ? void 0 : _a.map((e) => exports.ABCIMessageLog.fromPartial(e))) || [];
        message.info = object.info ?? "";
        message.gasWanted = object.gasWanted !== void 0 && object.gasWanted !== null ? helpers_1.Long.fromValue(object.gasWanted) : helpers_1.Long.ZERO;
        message.gasUsed = object.gasUsed !== void 0 && object.gasUsed !== null ? helpers_1.Long.fromValue(object.gasUsed) : helpers_1.Long.ZERO;
        message.tx = object.tx !== void 0 && object.tx !== null ? any_1.Any.fromPartial(object.tx) : void 0;
        message.timestamp = object.timestamp ?? "";
        message.events = ((_b = object.events) == null ? void 0 : _b.map((e) => types_1.Event.fromPartial(e))) || [];
        return message;
      }
    };
    function createBaseABCIMessageLog() {
      return {
        msgIndex: 0,
        log: "",
        events: []
      };
    }
    exports.ABCIMessageLog = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.msgIndex !== 0) {
          writer.uint32(8).uint32(message.msgIndex);
        }
        if (message.log !== "") {
          writer.uint32(18).string(message.log);
        }
        for (const v of message.events) {
          exports.StringEvent.encode(v, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseABCIMessageLog();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.msgIndex = reader.uint32();
              break;
            case 2:
              message.log = reader.string();
              break;
            case 3:
              message.events.push(exports.StringEvent.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          msgIndex: (0, helpers_1.isSet)(object.msgIndex) ? Number(object.msgIndex) : 0,
          log: (0, helpers_1.isSet)(object.log) ? String(object.log) : "",
          events: Array.isArray(object == null ? void 0 : object.events) ? object.events.map((e) => exports.StringEvent.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.msgIndex !== void 0 && (obj.msgIndex = Math.round(message.msgIndex));
        message.log !== void 0 && (obj.log = message.log);
        if (message.events) {
          obj.events = message.events.map((e) => e ? exports.StringEvent.toJSON(e) : void 0);
        } else {
          obj.events = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseABCIMessageLog();
        message.msgIndex = object.msgIndex ?? 0;
        message.log = object.log ?? "";
        message.events = ((_a = object.events) == null ? void 0 : _a.map((e) => exports.StringEvent.fromPartial(e))) || [];
        return message;
      }
    };
    function createBaseStringEvent() {
      return {
        type: "",
        attributes: []
      };
    }
    exports.StringEvent = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.type !== "") {
          writer.uint32(10).string(message.type);
        }
        for (const v of message.attributes) {
          exports.Attribute.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseStringEvent();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.type = reader.string();
              break;
            case 2:
              message.attributes.push(exports.Attribute.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          type: (0, helpers_1.isSet)(object.type) ? String(object.type) : "",
          attributes: Array.isArray(object == null ? void 0 : object.attributes) ? object.attributes.map((e) => exports.Attribute.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.type !== void 0 && (obj.type = message.type);
        if (message.attributes) {
          obj.attributes = message.attributes.map((e) => e ? exports.Attribute.toJSON(e) : void 0);
        } else {
          obj.attributes = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseStringEvent();
        message.type = object.type ?? "";
        message.attributes = ((_a = object.attributes) == null ? void 0 : _a.map((e) => exports.Attribute.fromPartial(e))) || [];
        return message;
      }
    };
    function createBaseAttribute() {
      return {
        key: "",
        value: ""
      };
    }
    exports.Attribute = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.key !== "") {
          writer.uint32(10).string(message.key);
        }
        if (message.value !== "") {
          writer.uint32(18).string(message.value);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseAttribute();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.key = reader.string();
              break;
            case 2:
              message.value = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          key: (0, helpers_1.isSet)(object.key) ? String(object.key) : "",
          value: (0, helpers_1.isSet)(object.value) ? String(object.value) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.key !== void 0 && (obj.key = message.key);
        message.value !== void 0 && (obj.value = message.value);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseAttribute();
        message.key = object.key ?? "";
        message.value = object.value ?? "";
        return message;
      }
    };
    function createBaseGasInfo() {
      return {
        gasWanted: helpers_1.Long.UZERO,
        gasUsed: helpers_1.Long.UZERO
      };
    }
    exports.GasInfo = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.gasWanted.isZero()) {
          writer.uint32(8).uint64(message.gasWanted);
        }
        if (!message.gasUsed.isZero()) {
          writer.uint32(16).uint64(message.gasUsed);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseGasInfo();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.gasWanted = reader.uint64();
              break;
            case 2:
              message.gasUsed = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          gasWanted: (0, helpers_1.isSet)(object.gasWanted) ? helpers_1.Long.fromValue(object.gasWanted) : helpers_1.Long.UZERO,
          gasUsed: (0, helpers_1.isSet)(object.gasUsed) ? helpers_1.Long.fromValue(object.gasUsed) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.gasWanted !== void 0 && (obj.gasWanted = (message.gasWanted || helpers_1.Long.UZERO).toString());
        message.gasUsed !== void 0 && (obj.gasUsed = (message.gasUsed || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseGasInfo();
        message.gasWanted = object.gasWanted !== void 0 && object.gasWanted !== null ? helpers_1.Long.fromValue(object.gasWanted) : helpers_1.Long.UZERO;
        message.gasUsed = object.gasUsed !== void 0 && object.gasUsed !== null ? helpers_1.Long.fromValue(object.gasUsed) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseResult() {
      return {
        data: new Uint8Array(),
        log: "",
        events: []
      };
    }
    exports.Result = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.data.length !== 0) {
          writer.uint32(10).bytes(message.data);
        }
        if (message.log !== "") {
          writer.uint32(18).string(message.log);
        }
        for (const v of message.events) {
          types_1.Event.encode(v, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseResult();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.data = reader.bytes();
              break;
            case 2:
              message.log = reader.string();
              break;
            case 3:
              message.events.push(types_1.Event.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          data: (0, helpers_1.isSet)(object.data) ? (0, helpers_1.bytesFromBase64)(object.data) : new Uint8Array(),
          log: (0, helpers_1.isSet)(object.log) ? String(object.log) : "",
          events: Array.isArray(object == null ? void 0 : object.events) ? object.events.map((e) => types_1.Event.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.data !== void 0 && (obj.data = (0, helpers_1.base64FromBytes)(message.data !== void 0 ? message.data : new Uint8Array()));
        message.log !== void 0 && (obj.log = message.log);
        if (message.events) {
          obj.events = message.events.map((e) => e ? types_1.Event.toJSON(e) : void 0);
        } else {
          obj.events = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseResult();
        message.data = object.data ?? new Uint8Array();
        message.log = object.log ?? "";
        message.events = ((_a = object.events) == null ? void 0 : _a.map((e) => types_1.Event.fromPartial(e))) || [];
        return message;
      }
    };
    function createBaseSimulationResponse() {
      return {
        gasInfo: void 0,
        result: void 0
      };
    }
    exports.SimulationResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.gasInfo !== void 0) {
          exports.GasInfo.encode(message.gasInfo, writer.uint32(10).fork()).ldelim();
        }
        if (message.result !== void 0) {
          exports.Result.encode(message.result, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseSimulationResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.gasInfo = exports.GasInfo.decode(reader, reader.uint32());
              break;
            case 2:
              message.result = exports.Result.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          gasInfo: (0, helpers_1.isSet)(object.gasInfo) ? exports.GasInfo.fromJSON(object.gasInfo) : void 0,
          result: (0, helpers_1.isSet)(object.result) ? exports.Result.fromJSON(object.result) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.gasInfo !== void 0 && (obj.gasInfo = message.gasInfo ? exports.GasInfo.toJSON(message.gasInfo) : void 0);
        message.result !== void 0 && (obj.result = message.result ? exports.Result.toJSON(message.result) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseSimulationResponse();
        message.gasInfo = object.gasInfo !== void 0 && object.gasInfo !== null ? exports.GasInfo.fromPartial(object.gasInfo) : void 0;
        message.result = object.result !== void 0 && object.result !== null ? exports.Result.fromPartial(object.result) : void 0;
        return message;
      }
    };
    function createBaseMsgData() {
      return {
        msgType: "",
        data: new Uint8Array()
      };
    }
    exports.MsgData = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.msgType !== "") {
          writer.uint32(10).string(message.msgType);
        }
        if (message.data.length !== 0) {
          writer.uint32(18).bytes(message.data);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgData();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.msgType = reader.string();
              break;
            case 2:
              message.data = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          msgType: (0, helpers_1.isSet)(object.msgType) ? String(object.msgType) : "",
          data: (0, helpers_1.isSet)(object.data) ? (0, helpers_1.bytesFromBase64)(object.data) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.msgType !== void 0 && (obj.msgType = message.msgType);
        message.data !== void 0 && (obj.data = (0, helpers_1.base64FromBytes)(message.data !== void 0 ? message.data : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgData();
        message.msgType = object.msgType ?? "";
        message.data = object.data ?? new Uint8Array();
        return message;
      }
    };
    function createBaseTxMsgData() {
      return {
        data: []
      };
    }
    exports.TxMsgData = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.data) {
          exports.MsgData.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseTxMsgData();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.data.push(exports.MsgData.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          data: Array.isArray(object == null ? void 0 : object.data) ? object.data.map((e) => exports.MsgData.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.data) {
          obj.data = message.data.map((e) => e ? exports.MsgData.toJSON(e) : void 0);
        } else {
          obj.data = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseTxMsgData();
        message.data = ((_a = object.data) == null ? void 0 : _a.map((e) => exports.MsgData.fromPartial(e))) || [];
        return message;
      }
    };
    function createBaseSearchTxsResult() {
      return {
        totalCount: helpers_1.Long.UZERO,
        count: helpers_1.Long.UZERO,
        pageNumber: helpers_1.Long.UZERO,
        pageTotal: helpers_1.Long.UZERO,
        limit: helpers_1.Long.UZERO,
        txs: []
      };
    }
    exports.SearchTxsResult = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.totalCount.isZero()) {
          writer.uint32(8).uint64(message.totalCount);
        }
        if (!message.count.isZero()) {
          writer.uint32(16).uint64(message.count);
        }
        if (!message.pageNumber.isZero()) {
          writer.uint32(24).uint64(message.pageNumber);
        }
        if (!message.pageTotal.isZero()) {
          writer.uint32(32).uint64(message.pageTotal);
        }
        if (!message.limit.isZero()) {
          writer.uint32(40).uint64(message.limit);
        }
        for (const v of message.txs) {
          exports.TxResponse.encode(v, writer.uint32(50).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseSearchTxsResult();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.totalCount = reader.uint64();
              break;
            case 2:
              message.count = reader.uint64();
              break;
            case 3:
              message.pageNumber = reader.uint64();
              break;
            case 4:
              message.pageTotal = reader.uint64();
              break;
            case 5:
              message.limit = reader.uint64();
              break;
            case 6:
              message.txs.push(exports.TxResponse.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          totalCount: (0, helpers_1.isSet)(object.totalCount) ? helpers_1.Long.fromValue(object.totalCount) : helpers_1.Long.UZERO,
          count: (0, helpers_1.isSet)(object.count) ? helpers_1.Long.fromValue(object.count) : helpers_1.Long.UZERO,
          pageNumber: (0, helpers_1.isSet)(object.pageNumber) ? helpers_1.Long.fromValue(object.pageNumber) : helpers_1.Long.UZERO,
          pageTotal: (0, helpers_1.isSet)(object.pageTotal) ? helpers_1.Long.fromValue(object.pageTotal) : helpers_1.Long.UZERO,
          limit: (0, helpers_1.isSet)(object.limit) ? helpers_1.Long.fromValue(object.limit) : helpers_1.Long.UZERO,
          txs: Array.isArray(object == null ? void 0 : object.txs) ? object.txs.map((e) => exports.TxResponse.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.totalCount !== void 0 && (obj.totalCount = (message.totalCount || helpers_1.Long.UZERO).toString());
        message.count !== void 0 && (obj.count = (message.count || helpers_1.Long.UZERO).toString());
        message.pageNumber !== void 0 && (obj.pageNumber = (message.pageNumber || helpers_1.Long.UZERO).toString());
        message.pageTotal !== void 0 && (obj.pageTotal = (message.pageTotal || helpers_1.Long.UZERO).toString());
        message.limit !== void 0 && (obj.limit = (message.limit || helpers_1.Long.UZERO).toString());
        if (message.txs) {
          obj.txs = message.txs.map((e) => e ? exports.TxResponse.toJSON(e) : void 0);
        } else {
          obj.txs = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseSearchTxsResult();
        message.totalCount = object.totalCount !== void 0 && object.totalCount !== null ? helpers_1.Long.fromValue(object.totalCount) : helpers_1.Long.UZERO;
        message.count = object.count !== void 0 && object.count !== null ? helpers_1.Long.fromValue(object.count) : helpers_1.Long.UZERO;
        message.pageNumber = object.pageNumber !== void 0 && object.pageNumber !== null ? helpers_1.Long.fromValue(object.pageNumber) : helpers_1.Long.UZERO;
        message.pageTotal = object.pageTotal !== void 0 && object.pageTotal !== null ? helpers_1.Long.fromValue(object.pageTotal) : helpers_1.Long.UZERO;
        message.limit = object.limit !== void 0 && object.limit !== null ? helpers_1.Long.fromValue(object.limit) : helpers_1.Long.UZERO;
        message.txs = ((_a = object.txs) == null ? void 0 : _a.map((e) => exports.TxResponse.fromPartial(e))) || [];
        return message;
      }
    };
  }
});

// node_modules/cosmjs-types/tendermint/types/evidence.js
var require_evidence = __commonJS({
  "node_modules/cosmjs-types/tendermint/types/evidence.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.EvidenceList = exports.LightClientAttackEvidence = exports.DuplicateVoteEvidence = exports.Evidence = exports.protobufPackage = void 0;
    var types_1 = require_types2();
    var timestamp_1 = require_timestamp();
    var validator_1 = require_validator();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "tendermint.types";
    function createBaseEvidence() {
      return {
        duplicateVoteEvidence: void 0,
        lightClientAttackEvidence: void 0
      };
    }
    exports.Evidence = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.duplicateVoteEvidence !== void 0) {
          exports.DuplicateVoteEvidence.encode(message.duplicateVoteEvidence, writer.uint32(10).fork()).ldelim();
        }
        if (message.lightClientAttackEvidence !== void 0) {
          exports.LightClientAttackEvidence.encode(message.lightClientAttackEvidence, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseEvidence();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.duplicateVoteEvidence = exports.DuplicateVoteEvidence.decode(reader, reader.uint32());
              break;
            case 2:
              message.lightClientAttackEvidence = exports.LightClientAttackEvidence.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          duplicateVoteEvidence: (0, helpers_1.isSet)(object.duplicateVoteEvidence) ? exports.DuplicateVoteEvidence.fromJSON(object.duplicateVoteEvidence) : void 0,
          lightClientAttackEvidence: (0, helpers_1.isSet)(object.lightClientAttackEvidence) ? exports.LightClientAttackEvidence.fromJSON(object.lightClientAttackEvidence) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.duplicateVoteEvidence !== void 0 && (obj.duplicateVoteEvidence = message.duplicateVoteEvidence ? exports.DuplicateVoteEvidence.toJSON(message.duplicateVoteEvidence) : void 0);
        message.lightClientAttackEvidence !== void 0 && (obj.lightClientAttackEvidence = message.lightClientAttackEvidence ? exports.LightClientAttackEvidence.toJSON(message.lightClientAttackEvidence) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseEvidence();
        message.duplicateVoteEvidence = object.duplicateVoteEvidence !== void 0 && object.duplicateVoteEvidence !== null ? exports.DuplicateVoteEvidence.fromPartial(object.duplicateVoteEvidence) : void 0;
        message.lightClientAttackEvidence = object.lightClientAttackEvidence !== void 0 && object.lightClientAttackEvidence !== null ? exports.LightClientAttackEvidence.fromPartial(object.lightClientAttackEvidence) : void 0;
        return message;
      }
    };
    function createBaseDuplicateVoteEvidence() {
      return {
        voteA: void 0,
        voteB: void 0,
        totalVotingPower: helpers_1.Long.ZERO,
        validatorPower: helpers_1.Long.ZERO,
        timestamp: void 0
      };
    }
    exports.DuplicateVoteEvidence = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.voteA !== void 0) {
          types_1.Vote.encode(message.voteA, writer.uint32(10).fork()).ldelim();
        }
        if (message.voteB !== void 0) {
          types_1.Vote.encode(message.voteB, writer.uint32(18).fork()).ldelim();
        }
        if (!message.totalVotingPower.isZero()) {
          writer.uint32(24).int64(message.totalVotingPower);
        }
        if (!message.validatorPower.isZero()) {
          writer.uint32(32).int64(message.validatorPower);
        }
        if (message.timestamp !== void 0) {
          timestamp_1.Timestamp.encode(message.timestamp, writer.uint32(42).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseDuplicateVoteEvidence();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.voteA = types_1.Vote.decode(reader, reader.uint32());
              break;
            case 2:
              message.voteB = types_1.Vote.decode(reader, reader.uint32());
              break;
            case 3:
              message.totalVotingPower = reader.int64();
              break;
            case 4:
              message.validatorPower = reader.int64();
              break;
            case 5:
              message.timestamp = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          voteA: (0, helpers_1.isSet)(object.voteA) ? types_1.Vote.fromJSON(object.voteA) : void 0,
          voteB: (0, helpers_1.isSet)(object.voteB) ? types_1.Vote.fromJSON(object.voteB) : void 0,
          totalVotingPower: (0, helpers_1.isSet)(object.totalVotingPower) ? helpers_1.Long.fromValue(object.totalVotingPower) : helpers_1.Long.ZERO,
          validatorPower: (0, helpers_1.isSet)(object.validatorPower) ? helpers_1.Long.fromValue(object.validatorPower) : helpers_1.Long.ZERO,
          timestamp: (0, helpers_1.isSet)(object.timestamp) ? (0, helpers_1.fromJsonTimestamp)(object.timestamp) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.voteA !== void 0 && (obj.voteA = message.voteA ? types_1.Vote.toJSON(message.voteA) : void 0);
        message.voteB !== void 0 && (obj.voteB = message.voteB ? types_1.Vote.toJSON(message.voteB) : void 0);
        message.totalVotingPower !== void 0 && (obj.totalVotingPower = (message.totalVotingPower || helpers_1.Long.ZERO).toString());
        message.validatorPower !== void 0 && (obj.validatorPower = (message.validatorPower || helpers_1.Long.ZERO).toString());
        message.timestamp !== void 0 && (obj.timestamp = (0, helpers_1.fromTimestamp)(message.timestamp).toISOString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseDuplicateVoteEvidence();
        message.voteA = object.voteA !== void 0 && object.voteA !== null ? types_1.Vote.fromPartial(object.voteA) : void 0;
        message.voteB = object.voteB !== void 0 && object.voteB !== null ? types_1.Vote.fromPartial(object.voteB) : void 0;
        message.totalVotingPower = object.totalVotingPower !== void 0 && object.totalVotingPower !== null ? helpers_1.Long.fromValue(object.totalVotingPower) : helpers_1.Long.ZERO;
        message.validatorPower = object.validatorPower !== void 0 && object.validatorPower !== null ? helpers_1.Long.fromValue(object.validatorPower) : helpers_1.Long.ZERO;
        message.timestamp = object.timestamp !== void 0 && object.timestamp !== null ? timestamp_1.Timestamp.fromPartial(object.timestamp) : void 0;
        return message;
      }
    };
    function createBaseLightClientAttackEvidence() {
      return {
        conflictingBlock: void 0,
        commonHeight: helpers_1.Long.ZERO,
        byzantineValidators: [],
        totalVotingPower: helpers_1.Long.ZERO,
        timestamp: void 0
      };
    }
    exports.LightClientAttackEvidence = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.conflictingBlock !== void 0) {
          types_1.LightBlock.encode(message.conflictingBlock, writer.uint32(10).fork()).ldelim();
        }
        if (!message.commonHeight.isZero()) {
          writer.uint32(16).int64(message.commonHeight);
        }
        for (const v of message.byzantineValidators) {
          validator_1.Validator.encode(v, writer.uint32(26).fork()).ldelim();
        }
        if (!message.totalVotingPower.isZero()) {
          writer.uint32(32).int64(message.totalVotingPower);
        }
        if (message.timestamp !== void 0) {
          timestamp_1.Timestamp.encode(message.timestamp, writer.uint32(42).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseLightClientAttackEvidence();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.conflictingBlock = types_1.LightBlock.decode(reader, reader.uint32());
              break;
            case 2:
              message.commonHeight = reader.int64();
              break;
            case 3:
              message.byzantineValidators.push(validator_1.Validator.decode(reader, reader.uint32()));
              break;
            case 4:
              message.totalVotingPower = reader.int64();
              break;
            case 5:
              message.timestamp = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          conflictingBlock: (0, helpers_1.isSet)(object.conflictingBlock) ? types_1.LightBlock.fromJSON(object.conflictingBlock) : void 0,
          commonHeight: (0, helpers_1.isSet)(object.commonHeight) ? helpers_1.Long.fromValue(object.commonHeight) : helpers_1.Long.ZERO,
          byzantineValidators: Array.isArray(object == null ? void 0 : object.byzantineValidators) ? object.byzantineValidators.map((e) => validator_1.Validator.fromJSON(e)) : [],
          totalVotingPower: (0, helpers_1.isSet)(object.totalVotingPower) ? helpers_1.Long.fromValue(object.totalVotingPower) : helpers_1.Long.ZERO,
          timestamp: (0, helpers_1.isSet)(object.timestamp) ? (0, helpers_1.fromJsonTimestamp)(object.timestamp) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.conflictingBlock !== void 0 && (obj.conflictingBlock = message.conflictingBlock ? types_1.LightBlock.toJSON(message.conflictingBlock) : void 0);
        message.commonHeight !== void 0 && (obj.commonHeight = (message.commonHeight || helpers_1.Long.ZERO).toString());
        if (message.byzantineValidators) {
          obj.byzantineValidators = message.byzantineValidators.map((e) => e ? validator_1.Validator.toJSON(e) : void 0);
        } else {
          obj.byzantineValidators = [];
        }
        message.totalVotingPower !== void 0 && (obj.totalVotingPower = (message.totalVotingPower || helpers_1.Long.ZERO).toString());
        message.timestamp !== void 0 && (obj.timestamp = (0, helpers_1.fromTimestamp)(message.timestamp).toISOString());
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseLightClientAttackEvidence();
        message.conflictingBlock = object.conflictingBlock !== void 0 && object.conflictingBlock !== null ? types_1.LightBlock.fromPartial(object.conflictingBlock) : void 0;
        message.commonHeight = object.commonHeight !== void 0 && object.commonHeight !== null ? helpers_1.Long.fromValue(object.commonHeight) : helpers_1.Long.ZERO;
        message.byzantineValidators = ((_a = object.byzantineValidators) == null ? void 0 : _a.map((e) => validator_1.Validator.fromPartial(e))) || [];
        message.totalVotingPower = object.totalVotingPower !== void 0 && object.totalVotingPower !== null ? helpers_1.Long.fromValue(object.totalVotingPower) : helpers_1.Long.ZERO;
        message.timestamp = object.timestamp !== void 0 && object.timestamp !== null ? timestamp_1.Timestamp.fromPartial(object.timestamp) : void 0;
        return message;
      }
    };
    function createBaseEvidenceList() {
      return {
        evidence: []
      };
    }
    exports.EvidenceList = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.evidence) {
          exports.Evidence.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseEvidenceList();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.evidence.push(exports.Evidence.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          evidence: Array.isArray(object == null ? void 0 : object.evidence) ? object.evidence.map((e) => exports.Evidence.fromJSON(e)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.evidence) {
          obj.evidence = message.evidence.map((e) => e ? exports.Evidence.toJSON(e) : void 0);
        } else {
          obj.evidence = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseEvidenceList();
        message.evidence = ((_a = object.evidence) == null ? void 0 : _a.map((e) => exports.Evidence.fromPartial(e))) || [];
        return message;
      }
    };
  }
});

// node_modules/cosmjs-types/tendermint/types/block.js
var require_block = __commonJS({
  "node_modules/cosmjs-types/tendermint/types/block.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Block = exports.protobufPackage = void 0;
    var types_1 = require_types2();
    var evidence_1 = require_evidence();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "tendermint.types";
    function createBaseBlock() {
      return {
        header: void 0,
        data: void 0,
        evidence: void 0,
        lastCommit: void 0
      };
    }
    exports.Block = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.header !== void 0) {
          types_1.Header.encode(message.header, writer.uint32(10).fork()).ldelim();
        }
        if (message.data !== void 0) {
          types_1.Data.encode(message.data, writer.uint32(18).fork()).ldelim();
        }
        if (message.evidence !== void 0) {
          evidence_1.EvidenceList.encode(message.evidence, writer.uint32(26).fork()).ldelim();
        }
        if (message.lastCommit !== void 0) {
          types_1.Commit.encode(message.lastCommit, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseBlock();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.header = types_1.Header.decode(reader, reader.uint32());
              break;
            case 2:
              message.data = types_1.Data.decode(reader, reader.uint32());
              break;
            case 3:
              message.evidence = evidence_1.EvidenceList.decode(reader, reader.uint32());
              break;
            case 4:
              message.lastCommit = types_1.Commit.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          header: (0, helpers_1.isSet)(object.header) ? types_1.Header.fromJSON(object.header) : void 0,
          data: (0, helpers_1.isSet)(object.data) ? types_1.Data.fromJSON(object.data) : void 0,
          evidence: (0, helpers_1.isSet)(object.evidence) ? evidence_1.EvidenceList.fromJSON(object.evidence) : void 0,
          lastCommit: (0, helpers_1.isSet)(object.lastCommit) ? types_1.Commit.fromJSON(object.lastCommit) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.header !== void 0 && (obj.header = message.header ? types_1.Header.toJSON(message.header) : void 0);
        message.data !== void 0 && (obj.data = message.data ? types_1.Data.toJSON(message.data) : void 0);
        message.evidence !== void 0 && (obj.evidence = message.evidence ? evidence_1.EvidenceList.toJSON(message.evidence) : void 0);
        message.lastCommit !== void 0 && (obj.lastCommit = message.lastCommit ? types_1.Commit.toJSON(message.lastCommit) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseBlock();
        message.header = object.header !== void 0 && object.header !== null ? types_1.Header.fromPartial(object.header) : void 0;
        message.data = object.data !== void 0 && object.data !== null ? types_1.Data.fromPartial(object.data) : void 0;
        message.evidence = object.evidence !== void 0 && object.evidence !== null ? evidence_1.EvidenceList.fromPartial(object.evidence) : void 0;
        message.lastCommit = object.lastCommit !== void 0 && object.lastCommit !== null ? types_1.Commit.fromPartial(object.lastCommit) : void 0;
        return message;
      }
    };
  }
});

// node_modules/cosmjs-types/cosmos/tx/v1beta1/service.js
var require_service = __commonJS({
  "node_modules/cosmjs-types/cosmos/tx/v1beta1/service.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ServiceClientImpl = exports.GetBlockWithTxsResponse = exports.GetBlockWithTxsRequest = exports.GetTxResponse = exports.GetTxRequest = exports.SimulateResponse = exports.SimulateRequest = exports.BroadcastTxResponse = exports.BroadcastTxRequest = exports.GetTxsEventResponse = exports.GetTxsEventRequest = exports.broadcastModeToJSON = exports.broadcastModeFromJSON = exports.BroadcastMode = exports.orderByToJSON = exports.orderByFromJSON = exports.OrderBy = exports.protobufPackage = void 0;
    var tx_1 = require_tx();
    var pagination_1 = require_pagination();
    var abci_1 = require_abci();
    var types_1 = require_types2();
    var block_1 = require_block();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.tx.v1beta1";
    var OrderBy;
    (function(OrderBy2) {
      OrderBy2[OrderBy2["ORDER_BY_UNSPECIFIED"] = 0] = "ORDER_BY_UNSPECIFIED";
      OrderBy2[OrderBy2["ORDER_BY_ASC"] = 1] = "ORDER_BY_ASC";
      OrderBy2[OrderBy2["ORDER_BY_DESC"] = 2] = "ORDER_BY_DESC";
      OrderBy2[OrderBy2["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
    })(OrderBy = exports.OrderBy || (exports.OrderBy = {}));
    function orderByFromJSON(object) {
      switch (object) {
        case 0:
        case "ORDER_BY_UNSPECIFIED":
          return OrderBy.ORDER_BY_UNSPECIFIED;
        case 1:
        case "ORDER_BY_ASC":
          return OrderBy.ORDER_BY_ASC;
        case 2:
        case "ORDER_BY_DESC":
          return OrderBy.ORDER_BY_DESC;
        case -1:
        case "UNRECOGNIZED":
        default:
          return OrderBy.UNRECOGNIZED;
      }
    }
    exports.orderByFromJSON = orderByFromJSON;
    function orderByToJSON(object) {
      switch (object) {
        case OrderBy.ORDER_BY_UNSPECIFIED:
          return "ORDER_BY_UNSPECIFIED";
        case OrderBy.ORDER_BY_ASC:
          return "ORDER_BY_ASC";
        case OrderBy.ORDER_BY_DESC:
          return "ORDER_BY_DESC";
        case OrderBy.UNRECOGNIZED:
        default:
          return "UNRECOGNIZED";
      }
    }
    exports.orderByToJSON = orderByToJSON;
    var BroadcastMode;
    (function(BroadcastMode2) {
      BroadcastMode2[BroadcastMode2["BROADCAST_MODE_UNSPECIFIED"] = 0] = "BROADCAST_MODE_UNSPECIFIED";
      BroadcastMode2[BroadcastMode2["BROADCAST_MODE_BLOCK"] = 1] = "BROADCAST_MODE_BLOCK";
      BroadcastMode2[BroadcastMode2["BROADCAST_MODE_SYNC"] = 2] = "BROADCAST_MODE_SYNC";
      BroadcastMode2[BroadcastMode2["BROADCAST_MODE_ASYNC"] = 3] = "BROADCAST_MODE_ASYNC";
      BroadcastMode2[BroadcastMode2["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
    })(BroadcastMode = exports.BroadcastMode || (exports.BroadcastMode = {}));
    function broadcastModeFromJSON(object) {
      switch (object) {
        case 0:
        case "BROADCAST_MODE_UNSPECIFIED":
          return BroadcastMode.BROADCAST_MODE_UNSPECIFIED;
        case 1:
        case "BROADCAST_MODE_BLOCK":
          return BroadcastMode.BROADCAST_MODE_BLOCK;
        case 2:
        case "BROADCAST_MODE_SYNC":
          return BroadcastMode.BROADCAST_MODE_SYNC;
        case 3:
        case "BROADCAST_MODE_ASYNC":
          return BroadcastMode.BROADCAST_MODE_ASYNC;
        case -1:
        case "UNRECOGNIZED":
        default:
          return BroadcastMode.UNRECOGNIZED;
      }
    }
    exports.broadcastModeFromJSON = broadcastModeFromJSON;
    function broadcastModeToJSON(object) {
      switch (object) {
        case BroadcastMode.BROADCAST_MODE_UNSPECIFIED:
          return "BROADCAST_MODE_UNSPECIFIED";
        case BroadcastMode.BROADCAST_MODE_BLOCK:
          return "BROADCAST_MODE_BLOCK";
        case BroadcastMode.BROADCAST_MODE_SYNC:
          return "BROADCAST_MODE_SYNC";
        case BroadcastMode.BROADCAST_MODE_ASYNC:
          return "BROADCAST_MODE_ASYNC";
        case BroadcastMode.UNRECOGNIZED:
        default:
          return "UNRECOGNIZED";
      }
    }
    exports.broadcastModeToJSON = broadcastModeToJSON;
    function createBaseGetTxsEventRequest() {
      return {
        events: [],
        pagination: void 0,
        orderBy: 0
      };
    }
    exports.GetTxsEventRequest = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.events) {
          writer.uint32(10).string(v);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        if (message.orderBy !== 0) {
          writer.uint32(24).int32(message.orderBy);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseGetTxsEventRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.events.push(reader.string());
              break;
            case 2:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            case 3:
              message.orderBy = reader.int32();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          events: Array.isArray(object == null ? void 0 : object.events) ? object.events.map((e) => String(e)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0,
          orderBy: (0, helpers_1.isSet)(object.orderBy) ? orderByFromJSON(object.orderBy) : 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.events) {
          obj.events = message.events.map((e) => e);
        } else {
          obj.events = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        message.orderBy !== void 0 && (obj.orderBy = orderByToJSON(message.orderBy));
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseGetTxsEventRequest();
        message.events = ((_a = object.events) == null ? void 0 : _a.map((e) => e)) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        message.orderBy = object.orderBy ?? 0;
        return message;
      }
    };
    function createBaseGetTxsEventResponse() {
      return {
        txs: [],
        txResponses: [],
        pagination: void 0
      };
    }
    exports.GetTxsEventResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.txs) {
          tx_1.Tx.encode(v, writer.uint32(10).fork()).ldelim();
        }
        for (const v of message.txResponses) {
          abci_1.TxResponse.encode(v, writer.uint32(18).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseGetTxsEventResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.txs.push(tx_1.Tx.decode(reader, reader.uint32()));
              break;
            case 2:
              message.txResponses.push(abci_1.TxResponse.decode(reader, reader.uint32()));
              break;
            case 3:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          txs: Array.isArray(object == null ? void 0 : object.txs) ? object.txs.map((e) => tx_1.Tx.fromJSON(e)) : [],
          txResponses: Array.isArray(object == null ? void 0 : object.txResponses) ? object.txResponses.map((e) => abci_1.TxResponse.fromJSON(e)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.txs) {
          obj.txs = message.txs.map((e) => e ? tx_1.Tx.toJSON(e) : void 0);
        } else {
          obj.txs = [];
        }
        if (message.txResponses) {
          obj.txResponses = message.txResponses.map((e) => e ? abci_1.TxResponse.toJSON(e) : void 0);
        } else {
          obj.txResponses = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a, _b;
        const message = createBaseGetTxsEventResponse();
        message.txs = ((_a = object.txs) == null ? void 0 : _a.map((e) => tx_1.Tx.fromPartial(e))) || [];
        message.txResponses = ((_b = object.txResponses) == null ? void 0 : _b.map((e) => abci_1.TxResponse.fromPartial(e))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseBroadcastTxRequest() {
      return {
        txBytes: new Uint8Array(),
        mode: 0
      };
    }
    exports.BroadcastTxRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.txBytes.length !== 0) {
          writer.uint32(10).bytes(message.txBytes);
        }
        if (message.mode !== 0) {
          writer.uint32(16).int32(message.mode);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseBroadcastTxRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.txBytes = reader.bytes();
              break;
            case 2:
              message.mode = reader.int32();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          txBytes: (0, helpers_1.isSet)(object.txBytes) ? (0, helpers_1.bytesFromBase64)(object.txBytes) : new Uint8Array(),
          mode: (0, helpers_1.isSet)(object.mode) ? broadcastModeFromJSON(object.mode) : 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.txBytes !== void 0 && (obj.txBytes = (0, helpers_1.base64FromBytes)(message.txBytes !== void 0 ? message.txBytes : new Uint8Array()));
        message.mode !== void 0 && (obj.mode = broadcastModeToJSON(message.mode));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseBroadcastTxRequest();
        message.txBytes = object.txBytes ?? new Uint8Array();
        message.mode = object.mode ?? 0;
        return message;
      }
    };
    function createBaseBroadcastTxResponse() {
      return {
        txResponse: void 0
      };
    }
    exports.BroadcastTxResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.txResponse !== void 0) {
          abci_1.TxResponse.encode(message.txResponse, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseBroadcastTxResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.txResponse = abci_1.TxResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          txResponse: (0, helpers_1.isSet)(object.txResponse) ? abci_1.TxResponse.fromJSON(object.txResponse) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.txResponse !== void 0 && (obj.txResponse = message.txResponse ? abci_1.TxResponse.toJSON(message.txResponse) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseBroadcastTxResponse();
        message.txResponse = object.txResponse !== void 0 && object.txResponse !== null ? abci_1.TxResponse.fromPartial(object.txResponse) : void 0;
        return message;
      }
    };
    function createBaseSimulateRequest() {
      return {
        tx: void 0,
        txBytes: new Uint8Array()
      };
    }
    exports.SimulateRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.tx !== void 0) {
          tx_1.Tx.encode(message.tx, writer.uint32(10).fork()).ldelim();
        }
        if (message.txBytes.length !== 0) {
          writer.uint32(18).bytes(message.txBytes);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseSimulateRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.tx = tx_1.Tx.decode(reader, reader.uint32());
              break;
            case 2:
              message.txBytes = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          tx: (0, helpers_1.isSet)(object.tx) ? tx_1.Tx.fromJSON(object.tx) : void 0,
          txBytes: (0, helpers_1.isSet)(object.txBytes) ? (0, helpers_1.bytesFromBase64)(object.txBytes) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.tx !== void 0 && (obj.tx = message.tx ? tx_1.Tx.toJSON(message.tx) : void 0);
        message.txBytes !== void 0 && (obj.txBytes = (0, helpers_1.base64FromBytes)(message.txBytes !== void 0 ? message.txBytes : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseSimulateRequest();
        message.tx = object.tx !== void 0 && object.tx !== null ? tx_1.Tx.fromPartial(object.tx) : void 0;
        message.txBytes = object.txBytes ?? new Uint8Array();
        return message;
      }
    };
    function createBaseSimulateResponse() {
      return {
        gasInfo: void 0,
        result: void 0
      };
    }
    exports.SimulateResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.gasInfo !== void 0) {
          abci_1.GasInfo.encode(message.gasInfo, writer.uint32(10).fork()).ldelim();
        }
        if (message.result !== void 0) {
          abci_1.Result.encode(message.result, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseSimulateResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.gasInfo = abci_1.GasInfo.decode(reader, reader.uint32());
              break;
            case 2:
              message.result = abci_1.Result.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          gasInfo: (0, helpers_1.isSet)(object.gasInfo) ? abci_1.GasInfo.fromJSON(object.gasInfo) : void 0,
          result: (0, helpers_1.isSet)(object.result) ? abci_1.Result.fromJSON(object.result) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.gasInfo !== void 0 && (obj.gasInfo = message.gasInfo ? abci_1.GasInfo.toJSON(message.gasInfo) : void 0);
        message.result !== void 0 && (obj.result = message.result ? abci_1.Result.toJSON(message.result) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseSimulateResponse();
        message.gasInfo = object.gasInfo !== void 0 && object.gasInfo !== null ? abci_1.GasInfo.fromPartial(object.gasInfo) : void 0;
        message.result = object.result !== void 0 && object.result !== null ? abci_1.Result.fromPartial(object.result) : void 0;
        return message;
      }
    };
    function createBaseGetTxRequest() {
      return {
        hash: ""
      };
    }
    exports.GetTxRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.hash !== "") {
          writer.uint32(10).string(message.hash);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseGetTxRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.hash = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          hash: (0, helpers_1.isSet)(object.hash) ? String(object.hash) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.hash !== void 0 && (obj.hash = message.hash);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseGetTxRequest();
        message.hash = object.hash ?? "";
        return message;
      }
    };
    function createBaseGetTxResponse() {
      return {
        tx: void 0,
        txResponse: void 0
      };
    }
    exports.GetTxResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.tx !== void 0) {
          tx_1.Tx.encode(message.tx, writer.uint32(10).fork()).ldelim();
        }
        if (message.txResponse !== void 0) {
          abci_1.TxResponse.encode(message.txResponse, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseGetTxResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.tx = tx_1.Tx.decode(reader, reader.uint32());
              break;
            case 2:
              message.txResponse = abci_1.TxResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          tx: (0, helpers_1.isSet)(object.tx) ? tx_1.Tx.fromJSON(object.tx) : void 0,
          txResponse: (0, helpers_1.isSet)(object.txResponse) ? abci_1.TxResponse.fromJSON(object.txResponse) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.tx !== void 0 && (obj.tx = message.tx ? tx_1.Tx.toJSON(message.tx) : void 0);
        message.txResponse !== void 0 && (obj.txResponse = message.txResponse ? abci_1.TxResponse.toJSON(message.txResponse) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseGetTxResponse();
        message.tx = object.tx !== void 0 && object.tx !== null ? tx_1.Tx.fromPartial(object.tx) : void 0;
        message.txResponse = object.txResponse !== void 0 && object.txResponse !== null ? abci_1.TxResponse.fromPartial(object.txResponse) : void 0;
        return message;
      }
    };
    function createBaseGetBlockWithTxsRequest() {
      return {
        height: helpers_1.Long.ZERO,
        pagination: void 0
      };
    }
    exports.GetBlockWithTxsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.height.isZero()) {
          writer.uint32(8).int64(message.height);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseGetBlockWithTxsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.height = reader.int64();
              break;
            case 2:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          height: (0, helpers_1.isSet)(object.height) ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO,
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.height !== void 0 && (obj.height = (message.height || helpers_1.Long.ZERO).toString());
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseGetBlockWithTxsRequest();
        message.height = object.height !== void 0 && object.height !== null ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO;
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseGetBlockWithTxsResponse() {
      return {
        txs: [],
        blockId: void 0,
        block: void 0,
        pagination: void 0
      };
    }
    exports.GetBlockWithTxsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v of message.txs) {
          tx_1.Tx.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.blockId !== void 0) {
          types_1.BlockID.encode(message.blockId, writer.uint32(18).fork()).ldelim();
        }
        if (message.block !== void 0) {
          block_1.Block.encode(message.block, writer.uint32(26).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseGetBlockWithTxsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.txs.push(tx_1.Tx.decode(reader, reader.uint32()));
              break;
            case 2:
              message.blockId = types_1.BlockID.decode(reader, reader.uint32());
              break;
            case 3:
              message.block = block_1.Block.decode(reader, reader.uint32());
              break;
            case 4:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          txs: Array.isArray(object == null ? void 0 : object.txs) ? object.txs.map((e) => tx_1.Tx.fromJSON(e)) : [],
          blockId: (0, helpers_1.isSet)(object.blockId) ? types_1.BlockID.fromJSON(object.blockId) : void 0,
          block: (0, helpers_1.isSet)(object.block) ? block_1.Block.fromJSON(object.block) : void 0,
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.txs) {
          obj.txs = message.txs.map((e) => e ? tx_1.Tx.toJSON(e) : void 0);
        } else {
          obj.txs = [];
        }
        message.blockId !== void 0 && (obj.blockId = message.blockId ? types_1.BlockID.toJSON(message.blockId) : void 0);
        message.block !== void 0 && (obj.block = message.block ? block_1.Block.toJSON(message.block) : void 0);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseGetBlockWithTxsResponse();
        message.txs = ((_a = object.txs) == null ? void 0 : _a.map((e) => tx_1.Tx.fromPartial(e))) || [];
        message.blockId = object.blockId !== void 0 && object.blockId !== null ? types_1.BlockID.fromPartial(object.blockId) : void 0;
        message.block = object.block !== void 0 && object.block !== null ? block_1.Block.fromPartial(object.block) : void 0;
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    var ServiceClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.Simulate = this.Simulate.bind(this);
        this.GetTx = this.GetTx.bind(this);
        this.BroadcastTx = this.BroadcastTx.bind(this);
        this.GetTxsEvent = this.GetTxsEvent.bind(this);
        this.GetBlockWithTxs = this.GetBlockWithTxs.bind(this);
      }
      Simulate(request) {
        const data = exports.SimulateRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.tx.v1beta1.Service", "Simulate", data);
        return promise.then((data2) => exports.SimulateResponse.decode(new _m0.Reader(data2)));
      }
      GetTx(request) {
        const data = exports.GetTxRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.tx.v1beta1.Service", "GetTx", data);
        return promise.then((data2) => exports.GetTxResponse.decode(new _m0.Reader(data2)));
      }
      BroadcastTx(request) {
        const data = exports.BroadcastTxRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.tx.v1beta1.Service", "BroadcastTx", data);
        return promise.then((data2) => exports.BroadcastTxResponse.decode(new _m0.Reader(data2)));
      }
      GetTxsEvent(request) {
        const data = exports.GetTxsEventRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.tx.v1beta1.Service", "GetTxsEvent", data);
        return promise.then((data2) => exports.GetTxsEventResponse.decode(new _m0.Reader(data2)));
      }
      GetBlockWithTxs(request) {
        const data = exports.GetBlockWithTxsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.tx.v1beta1.Service", "GetBlockWithTxs", data);
        return promise.then((data2) => exports.GetBlockWithTxsResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.ServiceClientImpl = ServiceClientImpl;
  }
});

// node_modules/@cosmjs/stargate/build/modules/tx/queries.js
var require_queries11 = __commonJS({
  "node_modules/@cosmjs/stargate/build/modules/tx/queries.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.setupTxExtension = void 0;
    var proto_signing_1 = require_build6();
    var signing_1 = require_signing();
    var service_1 = require_service();
    var tx_1 = require_tx();
    var long_1 = __importDefault(require_long());
    var queryclient_1 = require_queryclient2();
    function setupTxExtension(base) {
      const rpc = (0, queryclient_1.createProtobufRpcClient)(base);
      const queryService = new service_1.ServiceClientImpl(rpc);
      return {
        tx: {
          getTx: async (txId) => {
            const request = {
              hash: txId
            };
            const response = await queryService.GetTx(request);
            return response;
          },
          simulate: async (messages, memo, signer, sequence) => {
            const tx = tx_1.Tx.fromPartial({
              authInfo: tx_1.AuthInfo.fromPartial({
                fee: tx_1.Fee.fromPartial({}),
                signerInfos: [
                  {
                    publicKey: (0, proto_signing_1.encodePubkey)(signer),
                    sequence: long_1.default.fromNumber(sequence, true),
                    modeInfo: { single: { mode: signing_1.SignMode.SIGN_MODE_UNSPECIFIED } }
                  }
                ]
              }),
              body: tx_1.TxBody.fromPartial({
                messages: Array.from(messages),
                memo
              }),
              signatures: [new Uint8Array()]
            });
            const request = service_1.SimulateRequest.fromPartial({
              txBytes: tx_1.Tx.encode(tx).finish()
            });
            const response = await queryService.Simulate(request);
            return response;
          }
        }
      };
    }
    exports.setupTxExtension = setupTxExtension;
  }
});

// node_modules/@cosmjs/stargate/build/modules/vesting/aminomessages.js
var require_aminomessages11 = __commonJS({
  "node_modules/@cosmjs/stargate/build/modules/vesting/aminomessages.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createVestingAminoConverters = exports.isAminoMsgCreateVestingAccount = void 0;
    var long_1 = __importDefault(require_long());
    function isAminoMsgCreateVestingAccount(msg) {
      return msg.type === "cosmos-sdk/MsgCreateVestingAccount";
    }
    exports.isAminoMsgCreateVestingAccount = isAminoMsgCreateVestingAccount;
    function createVestingAminoConverters() {
      return {
        "/cosmos.vesting.v1beta1.MsgCreateVestingAccount": {
          aminoType: "cosmos-sdk/MsgCreateVestingAccount",
          toAmino: ({ fromAddress, toAddress, amount, endTime, delayed }) => ({
            from_address: fromAddress,
            to_address: toAddress,
            amount: [...amount],
            end_time: endTime.toString(),
            delayed
          }),
          fromAmino: ({ from_address, to_address, amount, end_time, delayed }) => ({
            fromAddress: from_address,
            toAddress: to_address,
            amount: [...amount],
            endTime: long_1.default.fromString(end_time),
            delayed
          })
        }
      };
    }
    exports.createVestingAminoConverters = createVestingAminoConverters;
  }
});

// node_modules/cosmjs-types/cosmos/vesting/v1beta1/tx.js
var require_tx12 = __commonJS({
  "node_modules/cosmjs-types/cosmos/vesting/v1beta1/tx.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MsgClientImpl = exports.MsgCreateVestingAccountResponse = exports.MsgCreateVestingAccount = exports.protobufPackage = void 0;
    var coin_1 = require_coin();
    var helpers_1 = require_helpers();
    var _m0 = __importStar(require_minimal());
    exports.protobufPackage = "cosmos.vesting.v1beta1";
    function createBaseMsgCreateVestingAccount() {
      return {
        fromAddress: "",
        toAddress: "",
        amount: [],
        endTime: helpers_1.Long.ZERO,
        delayed: false
      };
    }
    exports.MsgCreateVestingAccount = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.fromAddress !== "") {
          writer.uint32(10).string(message.fromAddress);
        }
        if (message.toAddress !== "") {
          writer.uint32(18).string(message.toAddress);
        }
        for (const v of message.amount) {
          coin_1.Coin.encode(v, writer.uint32(26).fork()).ldelim();
        }
        if (!message.endTime.isZero()) {
          writer.uint32(32).int64(message.endTime);
        }
        if (message.delayed === true) {
          writer.uint32(40).bool(message.delayed);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgCreateVestingAccount();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.fromAddress = reader.string();
              break;
            case 2:
              message.toAddress = reader.string();
              break;
            case 3:
              message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            case 4:
              message.endTime = reader.int64();
              break;
            case 5:
              message.delayed = reader.bool();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          fromAddress: (0, helpers_1.isSet)(object.fromAddress) ? String(object.fromAddress) : "",
          toAddress: (0, helpers_1.isSet)(object.toAddress) ? String(object.toAddress) : "",
          amount: Array.isArray(object == null ? void 0 : object.amount) ? object.amount.map((e) => coin_1.Coin.fromJSON(e)) : [],
          endTime: (0, helpers_1.isSet)(object.endTime) ? helpers_1.Long.fromValue(object.endTime) : helpers_1.Long.ZERO,
          delayed: (0, helpers_1.isSet)(object.delayed) ? Boolean(object.delayed) : false
        };
      },
      toJSON(message) {
        const obj = {};
        message.fromAddress !== void 0 && (obj.fromAddress = message.fromAddress);
        message.toAddress !== void 0 && (obj.toAddress = message.toAddress);
        if (message.amount) {
          obj.amount = message.amount.map((e) => e ? coin_1.Coin.toJSON(e) : void 0);
        } else {
          obj.amount = [];
        }
        message.endTime !== void 0 && (obj.endTime = (message.endTime || helpers_1.Long.ZERO).toString());
        message.delayed !== void 0 && (obj.delayed = message.delayed);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseMsgCreateVestingAccount();
        message.fromAddress = object.fromAddress ?? "";
        message.toAddress = object.toAddress ?? "";
        message.amount = ((_a = object.amount) == null ? void 0 : _a.map((e) => coin_1.Coin.fromPartial(e))) || [];
        message.endTime = object.endTime !== void 0 && object.endTime !== null ? helpers_1.Long.fromValue(object.endTime) : helpers_1.Long.ZERO;
        message.delayed = object.delayed ?? false;
        return message;
      }
    };
    function createBaseMsgCreateVestingAccountResponse() {
      return {};
    }
    exports.MsgCreateVestingAccountResponse = {
      encode(_, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgCreateVestingAccountResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_) {
        return {};
      },
      toJSON(_) {
        const obj = {};
        return obj;
      },
      fromPartial(_) {
        const message = createBaseMsgCreateVestingAccountResponse();
        return message;
      }
    };
    var MsgClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.CreateVestingAccount = this.CreateVestingAccount.bind(this);
      }
      CreateVestingAccount(request) {
        const data = exports.MsgCreateVestingAccount.encode(request).finish();
        const promise = this.rpc.request("cosmos.vesting.v1beta1.Msg", "CreateVestingAccount", data);
        return promise.then((data2) => exports.MsgCreateVestingAccountResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.MsgClientImpl = MsgClientImpl;
  }
});

// node_modules/@cosmjs/stargate/build/modules/vesting/messages.js
var require_messages8 = __commonJS({
  "node_modules/@cosmjs/stargate/build/modules/vesting/messages.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.vestingTypes = void 0;
    var tx_1 = require_tx12();
    exports.vestingTypes = [
      ["/cosmos.vesting.v1beta1.MsgCreateVestingAccount", tx_1.MsgCreateVestingAccount]
    ];
  }
});

// node_modules/@cosmjs/stargate/build/modules/index.js
var require_modules = __commonJS({
  "node_modules/@cosmjs/stargate/build/modules/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isAminoMsgEditValidator = exports.isAminoMsgDelegate = exports.isAminoMsgCreateValidator = exports.isAminoMsgBeginRedelegate = exports.createStakingAminoConverters = exports.setupSlashingExtension = exports.isAminoMsgUnjail = exports.createSlashingAminoConverters = exports.setupMintExtension = exports.setupIbcExtension = exports.isMsgTransferEncodeObject = exports.ibcTypes = exports.isAminoMsgTransfer = exports.createIbcAminoConverters = exports.setupGovExtension = exports.isMsgVoteWeightedEncodeObject = exports.isMsgVoteEncodeObject = exports.isMsgSubmitProposalEncodeObject = exports.isMsgDepositEncodeObject = exports.govTypes = exports.isAminoMsgVoteWeighted = exports.isAminoMsgVote = exports.isAminoMsgSubmitProposal = exports.isAminoMsgDeposit = exports.createGovAminoConverters = exports.setupFeegrantExtension = exports.feegrantTypes = exports.createFeegrantAminoConverters = exports.isAminoMsgSubmitEvidence = exports.createEvidenceAminoConverters = exports.setupDistributionExtension = exports.isMsgWithdrawDelegatorRewardEncodeObject = exports.distributionTypes = exports.isAminoMsgWithdrawValidatorCommission = exports.isAminoMsgWithdrawDelegatorReward = exports.isAminoMsgSetWithdrawAddress = exports.isAminoMsgFundCommunityPool = exports.createDistributionAminoConverters = exports.isAminoMsgVerifyInvariant = exports.createCrysisAminoConverters = exports.setupBankExtension = exports.isMsgSendEncodeObject = exports.bankTypes = exports.isAminoMsgSend = exports.isAminoMsgMultiSend = exports.createBankAminoConverters = exports.setupAuthzExtension = exports.authzTypes = exports.createAuthzAminoConverters = exports.setupAuthExtension = void 0;
    exports.vestingTypes = exports.isAminoMsgCreateVestingAccount = exports.createVestingAminoConverters = exports.setupTxExtension = exports.setupStakingExtension = exports.stakingTypes = exports.isMsgUndelegateEncodeObject = exports.isMsgEditValidatorEncodeObject = exports.isMsgDelegateEncodeObject = exports.isMsgCreateValidatorEncodeObject = exports.isMsgBeginRedelegateEncodeObject = exports.isAminoMsgUndelegate = void 0;
    var queries_1 = require_queries();
    Object.defineProperty(exports, "setupAuthExtension", { enumerable: true, get: function() {
      return queries_1.setupAuthExtension;
    } });
    var aminomessages_1 = require_aminomessages();
    Object.defineProperty(exports, "createAuthzAminoConverters", { enumerable: true, get: function() {
      return aminomessages_1.createAuthzAminoConverters;
    } });
    var messages_1 = require_messages();
    Object.defineProperty(exports, "authzTypes", { enumerable: true, get: function() {
      return messages_1.authzTypes;
    } });
    var queries_2 = require_queries2();
    Object.defineProperty(exports, "setupAuthzExtension", { enumerable: true, get: function() {
      return queries_2.setupAuthzExtension;
    } });
    var aminomessages_2 = require_aminomessages2();
    Object.defineProperty(exports, "createBankAminoConverters", { enumerable: true, get: function() {
      return aminomessages_2.createBankAminoConverters;
    } });
    Object.defineProperty(exports, "isAminoMsgMultiSend", { enumerable: true, get: function() {
      return aminomessages_2.isAminoMsgMultiSend;
    } });
    Object.defineProperty(exports, "isAminoMsgSend", { enumerable: true, get: function() {
      return aminomessages_2.isAminoMsgSend;
    } });
    var messages_2 = require_messages2();
    Object.defineProperty(exports, "bankTypes", { enumerable: true, get: function() {
      return messages_2.bankTypes;
    } });
    Object.defineProperty(exports, "isMsgSendEncodeObject", { enumerable: true, get: function() {
      return messages_2.isMsgSendEncodeObject;
    } });
    var queries_3 = require_queries3();
    Object.defineProperty(exports, "setupBankExtension", { enumerable: true, get: function() {
      return queries_3.setupBankExtension;
    } });
    var aminomessages_3 = require_aminomessages3();
    Object.defineProperty(exports, "createCrysisAminoConverters", { enumerable: true, get: function() {
      return aminomessages_3.createCrysisAminoConverters;
    } });
    Object.defineProperty(exports, "isAminoMsgVerifyInvariant", { enumerable: true, get: function() {
      return aminomessages_3.isAminoMsgVerifyInvariant;
    } });
    var aminomessages_4 = require_aminomessages4();
    Object.defineProperty(exports, "createDistributionAminoConverters", { enumerable: true, get: function() {
      return aminomessages_4.createDistributionAminoConverters;
    } });
    Object.defineProperty(exports, "isAminoMsgFundCommunityPool", { enumerable: true, get: function() {
      return aminomessages_4.isAminoMsgFundCommunityPool;
    } });
    Object.defineProperty(exports, "isAminoMsgSetWithdrawAddress", { enumerable: true, get: function() {
      return aminomessages_4.isAminoMsgSetWithdrawAddress;
    } });
    Object.defineProperty(exports, "isAminoMsgWithdrawDelegatorReward", { enumerable: true, get: function() {
      return aminomessages_4.isAminoMsgWithdrawDelegatorReward;
    } });
    Object.defineProperty(exports, "isAminoMsgWithdrawValidatorCommission", { enumerable: true, get: function() {
      return aminomessages_4.isAminoMsgWithdrawValidatorCommission;
    } });
    var messages_3 = require_messages3();
    Object.defineProperty(exports, "distributionTypes", { enumerable: true, get: function() {
      return messages_3.distributionTypes;
    } });
    Object.defineProperty(exports, "isMsgWithdrawDelegatorRewardEncodeObject", { enumerable: true, get: function() {
      return messages_3.isMsgWithdrawDelegatorRewardEncodeObject;
    } });
    var queries_4 = require_queries4();
    Object.defineProperty(exports, "setupDistributionExtension", { enumerable: true, get: function() {
      return queries_4.setupDistributionExtension;
    } });
    var aminomessages_5 = require_aminomessages5();
    Object.defineProperty(exports, "createEvidenceAminoConverters", { enumerable: true, get: function() {
      return aminomessages_5.createEvidenceAminoConverters;
    } });
    Object.defineProperty(exports, "isAminoMsgSubmitEvidence", { enumerable: true, get: function() {
      return aminomessages_5.isAminoMsgSubmitEvidence;
    } });
    var aminomessages_6 = require_aminomessages6();
    Object.defineProperty(exports, "createFeegrantAminoConverters", { enumerable: true, get: function() {
      return aminomessages_6.createFeegrantAminoConverters;
    } });
    var messages_4 = require_messages4();
    Object.defineProperty(exports, "feegrantTypes", { enumerable: true, get: function() {
      return messages_4.feegrantTypes;
    } });
    var queries_5 = require_queries5();
    Object.defineProperty(exports, "setupFeegrantExtension", { enumerable: true, get: function() {
      return queries_5.setupFeegrantExtension;
    } });
    var aminomessages_7 = require_aminomessages7();
    Object.defineProperty(exports, "createGovAminoConverters", { enumerable: true, get: function() {
      return aminomessages_7.createGovAminoConverters;
    } });
    Object.defineProperty(exports, "isAminoMsgDeposit", { enumerable: true, get: function() {
      return aminomessages_7.isAminoMsgDeposit;
    } });
    Object.defineProperty(exports, "isAminoMsgSubmitProposal", { enumerable: true, get: function() {
      return aminomessages_7.isAminoMsgSubmitProposal;
    } });
    Object.defineProperty(exports, "isAminoMsgVote", { enumerable: true, get: function() {
      return aminomessages_7.isAminoMsgVote;
    } });
    Object.defineProperty(exports, "isAminoMsgVoteWeighted", { enumerable: true, get: function() {
      return aminomessages_7.isAminoMsgVoteWeighted;
    } });
    var messages_5 = require_messages5();
    Object.defineProperty(exports, "govTypes", { enumerable: true, get: function() {
      return messages_5.govTypes;
    } });
    Object.defineProperty(exports, "isMsgDepositEncodeObject", { enumerable: true, get: function() {
      return messages_5.isMsgDepositEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgSubmitProposalEncodeObject", { enumerable: true, get: function() {
      return messages_5.isMsgSubmitProposalEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgVoteEncodeObject", { enumerable: true, get: function() {
      return messages_5.isMsgVoteEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgVoteWeightedEncodeObject", { enumerable: true, get: function() {
      return messages_5.isMsgVoteWeightedEncodeObject;
    } });
    var queries_6 = require_queries6();
    Object.defineProperty(exports, "setupGovExtension", { enumerable: true, get: function() {
      return queries_6.setupGovExtension;
    } });
    var aminomessages_8 = require_aminomessages8();
    Object.defineProperty(exports, "createIbcAminoConverters", { enumerable: true, get: function() {
      return aminomessages_8.createIbcAminoConverters;
    } });
    Object.defineProperty(exports, "isAminoMsgTransfer", { enumerable: true, get: function() {
      return aminomessages_8.isAminoMsgTransfer;
    } });
    var messages_6 = require_messages6();
    Object.defineProperty(exports, "ibcTypes", { enumerable: true, get: function() {
      return messages_6.ibcTypes;
    } });
    Object.defineProperty(exports, "isMsgTransferEncodeObject", { enumerable: true, get: function() {
      return messages_6.isMsgTransferEncodeObject;
    } });
    var queries_7 = require_queries7();
    Object.defineProperty(exports, "setupIbcExtension", { enumerable: true, get: function() {
      return queries_7.setupIbcExtension;
    } });
    var queries_8 = require_queries8();
    Object.defineProperty(exports, "setupMintExtension", { enumerable: true, get: function() {
      return queries_8.setupMintExtension;
    } });
    var aminomessages_9 = require_aminomessages9();
    Object.defineProperty(exports, "createSlashingAminoConverters", { enumerable: true, get: function() {
      return aminomessages_9.createSlashingAminoConverters;
    } });
    Object.defineProperty(exports, "isAminoMsgUnjail", { enumerable: true, get: function() {
      return aminomessages_9.isAminoMsgUnjail;
    } });
    var queries_9 = require_queries9();
    Object.defineProperty(exports, "setupSlashingExtension", { enumerable: true, get: function() {
      return queries_9.setupSlashingExtension;
    } });
    var aminomessages_10 = require_aminomessages10();
    Object.defineProperty(exports, "createStakingAminoConverters", { enumerable: true, get: function() {
      return aminomessages_10.createStakingAminoConverters;
    } });
    Object.defineProperty(exports, "isAminoMsgBeginRedelegate", { enumerable: true, get: function() {
      return aminomessages_10.isAminoMsgBeginRedelegate;
    } });
    Object.defineProperty(exports, "isAminoMsgCreateValidator", { enumerable: true, get: function() {
      return aminomessages_10.isAminoMsgCreateValidator;
    } });
    Object.defineProperty(exports, "isAminoMsgDelegate", { enumerable: true, get: function() {
      return aminomessages_10.isAminoMsgDelegate;
    } });
    Object.defineProperty(exports, "isAminoMsgEditValidator", { enumerable: true, get: function() {
      return aminomessages_10.isAminoMsgEditValidator;
    } });
    Object.defineProperty(exports, "isAminoMsgUndelegate", { enumerable: true, get: function() {
      return aminomessages_10.isAminoMsgUndelegate;
    } });
    var messages_7 = require_messages7();
    Object.defineProperty(exports, "isMsgBeginRedelegateEncodeObject", { enumerable: true, get: function() {
      return messages_7.isMsgBeginRedelegateEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgCreateValidatorEncodeObject", { enumerable: true, get: function() {
      return messages_7.isMsgCreateValidatorEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgDelegateEncodeObject", { enumerable: true, get: function() {
      return messages_7.isMsgDelegateEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgEditValidatorEncodeObject", { enumerable: true, get: function() {
      return messages_7.isMsgEditValidatorEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgUndelegateEncodeObject", { enumerable: true, get: function() {
      return messages_7.isMsgUndelegateEncodeObject;
    } });
    Object.defineProperty(exports, "stakingTypes", { enumerable: true, get: function() {
      return messages_7.stakingTypes;
    } });
    var queries_10 = require_queries10();
    Object.defineProperty(exports, "setupStakingExtension", { enumerable: true, get: function() {
      return queries_10.setupStakingExtension;
    } });
    var queries_11 = require_queries11();
    Object.defineProperty(exports, "setupTxExtension", { enumerable: true, get: function() {
      return queries_11.setupTxExtension;
    } });
    var aminomessages_11 = require_aminomessages11();
    Object.defineProperty(exports, "createVestingAminoConverters", { enumerable: true, get: function() {
      return aminomessages_11.createVestingAminoConverters;
    } });
    Object.defineProperty(exports, "isAminoMsgCreateVestingAccount", { enumerable: true, get: function() {
      return aminomessages_11.isAminoMsgCreateVestingAccount;
    } });
    var messages_8 = require_messages8();
    Object.defineProperty(exports, "vestingTypes", { enumerable: true, get: function() {
      return messages_8.vestingTypes;
    } });
  }
});

// node_modules/@cosmjs/stargate/build/multisignature.js
var require_multisignature = __commonJS({
  "node_modules/@cosmjs/stargate/build/multisignature.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.makeMultisignedTxBytes = exports.makeMultisignedTx = exports.makeCompactBitArray = void 0;
    var amino_1 = require_build5();
    var encoding_1 = require_build2();
    var proto_signing_1 = require_build6();
    var multisig_1 = require_multisig();
    var signing_1 = require_signing();
    var tx_1 = require_tx();
    var tx_2 = require_tx();
    var long_1 = __importDefault(require_long());
    function makeCompactBitArray(bits) {
      const byteCount = Math.ceil(bits.length / 8);
      const extraBits = bits.length - Math.floor(bits.length / 8) * 8;
      const bytes = new Uint8Array(byteCount);
      bits.forEach((value, index) => {
        const bytePos = Math.floor(index / 8);
        const bitPos = index % 8;
        if (value)
          bytes[bytePos] |= 1 << 8 - 1 - bitPos;
      });
      return multisig_1.CompactBitArray.fromPartial({ elems: bytes, extraBitsStored: extraBits });
    }
    exports.makeCompactBitArray = makeCompactBitArray;
    function makeMultisignedTx(multisigPubkey, sequence, fee, bodyBytes, signatures) {
      const addresses = Array.from(signatures.keys());
      const prefix = (0, encoding_1.fromBech32)(addresses[0]).prefix;
      const signers = Array(multisigPubkey.value.pubkeys.length).fill(false);
      const signaturesList = new Array();
      for (let i = 0; i < multisigPubkey.value.pubkeys.length; i++) {
        const signerAddress = (0, amino_1.pubkeyToAddress)(multisigPubkey.value.pubkeys[i], prefix);
        const signature = signatures.get(signerAddress);
        if (signature) {
          signers[i] = true;
          signaturesList.push(signature);
        }
      }
      const signerInfo = {
        publicKey: (0, proto_signing_1.encodePubkey)(multisigPubkey),
        modeInfo: {
          multi: {
            bitarray: makeCompactBitArray(signers),
            modeInfos: signaturesList.map((_) => ({ single: { mode: signing_1.SignMode.SIGN_MODE_LEGACY_AMINO_JSON } }))
          }
        },
        sequence: long_1.default.fromNumber(sequence)
      };
      const authInfo = tx_1.AuthInfo.fromPartial({
        signerInfos: [signerInfo],
        fee: {
          amount: [...fee.amount],
          gasLimit: long_1.default.fromString(fee.gas)
        }
      });
      const authInfoBytes = tx_1.AuthInfo.encode(authInfo).finish();
      const signedTx = tx_2.TxRaw.fromPartial({
        bodyBytes,
        authInfoBytes,
        signatures: [multisig_1.MultiSignature.encode(multisig_1.MultiSignature.fromPartial({ signatures: signaturesList })).finish()]
      });
      return signedTx;
    }
    exports.makeMultisignedTx = makeMultisignedTx;
    function makeMultisignedTxBytes(multisigPubkey, sequence, fee, bodyBytes, signatures) {
      const signedTx = makeMultisignedTx(multisigPubkey, sequence, fee, bodyBytes, signatures);
      return Uint8Array.from(tx_2.TxRaw.encode(signedTx).finish());
    }
    exports.makeMultisignedTxBytes = makeMultisignedTxBytes;
  }
});

// node_modules/@cosmjs/stargate/build/search.js
var require_search = __commonJS({
  "node_modules/@cosmjs/stargate/build/search.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isSearchByTagsQuery = exports.isSearchBySentFromOrToQuery = exports.isSearchByHeightQuery = void 0;
    function isSearchByHeightQuery(query) {
      return query.height !== void 0;
    }
    exports.isSearchByHeightQuery = isSearchByHeightQuery;
    function isSearchBySentFromOrToQuery(query) {
      return query.sentFromOrTo !== void 0;
    }
    exports.isSearchBySentFromOrToQuery = isSearchBySentFromOrToQuery;
    function isSearchByTagsQuery(query) {
      return query.tags !== void 0;
    }
    exports.isSearchByTagsQuery = isSearchByTagsQuery;
  }
});

// node_modules/@cosmjs/tendermint-rpc/build/addresses.js
var require_addresses2 = __commonJS({
  "node_modules/@cosmjs/tendermint-rpc/build/addresses.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.pubkeyToAddress = exports.pubkeyToRawAddress = exports.rawSecp256k1PubkeyToRawAddress = exports.rawEd25519PubkeyToRawAddress = void 0;
    var crypto_1 = require_build4();
    var encoding_1 = require_build2();
    function rawEd25519PubkeyToRawAddress(pubkeyData) {
      if (pubkeyData.length !== 32) {
        throw new Error(`Invalid Ed25519 pubkey length: ${pubkeyData.length}`);
      }
      return (0, crypto_1.sha256)(pubkeyData).slice(0, 20);
    }
    exports.rawEd25519PubkeyToRawAddress = rawEd25519PubkeyToRawAddress;
    function rawSecp256k1PubkeyToRawAddress(pubkeyData) {
      if (pubkeyData.length !== 33) {
        throw new Error(`Invalid Secp256k1 pubkey length (compressed): ${pubkeyData.length}`);
      }
      return (0, crypto_1.ripemd160)((0, crypto_1.sha256)(pubkeyData));
    }
    exports.rawSecp256k1PubkeyToRawAddress = rawSecp256k1PubkeyToRawAddress;
    function pubkeyToRawAddress(type, data) {
      switch (type) {
        case "ed25519":
          return rawEd25519PubkeyToRawAddress(data);
        case "secp256k1":
          return rawSecp256k1PubkeyToRawAddress(data);
        default:
          throw new Error(`Pubkey type ${type} not supported`);
      }
    }
    exports.pubkeyToRawAddress = pubkeyToRawAddress;
    function pubkeyToAddress(type, data) {
      return (0, encoding_1.toHex)(pubkeyToRawAddress(type, data)).toUpperCase();
    }
    exports.pubkeyToAddress = pubkeyToAddress;
  }
});

// node_modules/@cosmjs/tendermint-rpc/build/dates.js
var require_dates = __commonJS({
  "node_modules/@cosmjs/tendermint-rpc/build/dates.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.DateTime = exports.toSeconds = exports.fromSeconds = exports.toRfc3339WithNanoseconds = exports.fromRfc3339WithNanoseconds = void 0;
    var encoding_1 = require_build2();
    var math_1 = require_build();
    function fromRfc3339WithNanoseconds(dateTimeString) {
      const out = (0, encoding_1.fromRfc3339)(dateTimeString);
      const nanosecondsMatch = dateTimeString.match(/\.(\d+)Z$/);
      const nanoseconds = nanosecondsMatch ? nanosecondsMatch[1].slice(3) : "";
      out.nanoseconds = parseInt(nanoseconds.padEnd(6, "0"), 10);
      return out;
    }
    exports.fromRfc3339WithNanoseconds = fromRfc3339WithNanoseconds;
    function toRfc3339WithNanoseconds(dateTime) {
      var _a;
      const millisecondIso = dateTime.toISOString();
      const nanoseconds = ((_a = dateTime.nanoseconds) == null ? void 0 : _a.toString()) ?? "";
      return `${millisecondIso.slice(0, -1)}${nanoseconds.padStart(6, "0")}Z`;
    }
    exports.toRfc3339WithNanoseconds = toRfc3339WithNanoseconds;
    function fromSeconds(seconds, nanos = 0) {
      const checkedNanos = new math_1.Uint32(nanos).toNumber();
      if (checkedNanos > 999999999) {
        throw new Error("Nano seconds must not exceed 999999999");
      }
      const out = new Date(seconds * 1e3 + Math.floor(checkedNanos / 1e6));
      out.nanoseconds = checkedNanos % 1e6;
      return out;
    }
    exports.fromSeconds = fromSeconds;
    function toSeconds(date) {
      return {
        seconds: Math.floor(date.getTime() / 1e3),
        nanos: date.getTime() % 1e3 * 1e6 + (date.nanoseconds ?? 0)
      };
    }
    exports.toSeconds = toSeconds;
    var DateTime = class {
      /** @deprecated Use fromRfc3339WithNanoseconds instead */
      static decode(dateTimeString) {
        return fromRfc3339WithNanoseconds(dateTimeString);
      }
      /** @deprecated Use toRfc3339WithNanoseconds instead */
      static encode(dateTime) {
        return toRfc3339WithNanoseconds(dateTime);
      }
    };
    exports.DateTime = DateTime;
  }
});

// node_modules/@cosmjs/json-rpc/build/id.js
var require_id = __commonJS({
  "node_modules/@cosmjs/json-rpc/build/id.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.makeJsonRpcId = void 0;
    var counter = 1e4;
    function makeJsonRpcId() {
      return counter += 1;
    }
    exports.makeJsonRpcId = makeJsonRpcId;
  }
});

// node_modules/@cosmjs/json-rpc/build/types.js
var require_types4 = __commonJS({
  "node_modules/@cosmjs/json-rpc/build/types.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.jsonRpcCode = exports.isJsonRpcSuccessResponse = exports.isJsonRpcErrorResponse = void 0;
    function isJsonRpcErrorResponse(response) {
      return typeof response.error === "object";
    }
    exports.isJsonRpcErrorResponse = isJsonRpcErrorResponse;
    function isJsonRpcSuccessResponse(response) {
      return !isJsonRpcErrorResponse(response);
    }
    exports.isJsonRpcSuccessResponse = isJsonRpcSuccessResponse;
    exports.jsonRpcCode = {
      parseError: -32700,
      invalidRequest: -32600,
      methodNotFound: -32601,
      invalidParams: -32602,
      internalError: -32603,
      // server error (Reserved for implementation-defined server-errors.):
      // -32000 to -32099
      serverError: {
        default: -32e3
      }
    };
  }
});

// node_modules/@cosmjs/json-rpc/build/jsonrpcclient.js
var require_jsonrpcclient = __commonJS({
  "node_modules/@cosmjs/json-rpc/build/jsonrpcclient.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.JsonRpcClient = void 0;
    var stream_1 = require_build8();
    var types_1 = require_types4();
    var JsonRpcClient = class {
      constructor(connection) {
        this.connection = connection;
      }
      async run(request) {
        const filteredStream = this.connection.responseStream.filter((r) => r.id === request.id);
        const pendingResponses = (0, stream_1.firstEvent)(filteredStream);
        this.connection.sendRequest(request);
        const response = await pendingResponses;
        if ((0, types_1.isJsonRpcErrorResponse)(response)) {
          const error = response.error;
          throw new Error(`JSON RPC error: code=${error.code}; message='${error.message}'`);
        }
        return response;
      }
    };
    exports.JsonRpcClient = JsonRpcClient;
  }
});

// node_modules/@cosmjs/json-rpc/build/compatibility.js
var require_compatibility = __commonJS({
  "node_modules/@cosmjs/json-rpc/build/compatibility.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isJsonCompatibleDictionary = exports.isJsonCompatibleArray = exports.isJsonCompatibleValue = void 0;
    function isJsonCompatibleValue(value) {
      if (typeof value === "string" || typeof value === "number" || typeof value === "boolean" || value === null || // eslint-disable-next-line @typescript-eslint/no-use-before-define
      isJsonCompatibleArray(value) || // eslint-disable-next-line @typescript-eslint/no-use-before-define
      isJsonCompatibleDictionary(value)) {
        return true;
      } else {
        return false;
      }
    }
    exports.isJsonCompatibleValue = isJsonCompatibleValue;
    function isJsonCompatibleArray(value) {
      if (!Array.isArray(value)) {
        return false;
      }
      for (const item of value) {
        if (!isJsonCompatibleValue(item)) {
          return false;
        }
      }
      return true;
    }
    exports.isJsonCompatibleArray = isJsonCompatibleArray;
    function isJsonCompatibleDictionary(data) {
      if (typeof data !== "object" || data === null) {
        return false;
      }
      if (Object.prototype.toString.call(data) !== "[object Object]") {
        return false;
      }
      return Object.values(data).every(isJsonCompatibleValue);
    }
    exports.isJsonCompatibleDictionary = isJsonCompatibleDictionary;
  }
});

// node_modules/@cosmjs/json-rpc/build/parse.js
var require_parse = __commonJS({
  "node_modules/@cosmjs/json-rpc/build/parse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.parseJsonRpcResponse = exports.parseJsonRpcSuccessResponse = exports.parseJsonRpcErrorResponse = exports.parseJsonRpcRequest = exports.parseJsonRpcId = void 0;
    var compatibility_1 = require_compatibility();
    function parseJsonRpcId(data) {
      if (!(0, compatibility_1.isJsonCompatibleDictionary)(data)) {
        throw new Error("Data must be JSON compatible dictionary");
      }
      const id = data.id;
      if (typeof id !== "number" && typeof id !== "string") {
        return null;
      }
      return id;
    }
    exports.parseJsonRpcId = parseJsonRpcId;
    function parseJsonRpcRequest(data) {
      if (!(0, compatibility_1.isJsonCompatibleDictionary)(data)) {
        throw new Error("Data must be JSON compatible dictionary");
      }
      if (data.jsonrpc !== "2.0") {
        throw new Error(`Got unexpected jsonrpc version: ${data.jsonrpc}`);
      }
      const id = parseJsonRpcId(data);
      if (id === null) {
        throw new Error("Invalid id field");
      }
      const method = data.method;
      if (typeof method !== "string") {
        throw new Error("Invalid method field");
      }
      if (!(0, compatibility_1.isJsonCompatibleArray)(data.params) && !(0, compatibility_1.isJsonCompatibleDictionary)(data.params)) {
        throw new Error("Invalid params field");
      }
      return {
        jsonrpc: "2.0",
        id,
        method,
        params: data.params
      };
    }
    exports.parseJsonRpcRequest = parseJsonRpcRequest;
    function parseError(error) {
      if (typeof error.code !== "number") {
        throw new Error("Error property 'code' is not a number");
      }
      if (typeof error.message !== "string") {
        throw new Error("Error property 'message' is not a string");
      }
      let maybeUndefinedData;
      if (error.data === void 0) {
        maybeUndefinedData = void 0;
      } else if ((0, compatibility_1.isJsonCompatibleValue)(error.data)) {
        maybeUndefinedData = error.data;
      } else {
        throw new Error("Error property 'data' is defined but not a JSON compatible value.");
      }
      return {
        code: error.code,
        message: error.message,
        ...maybeUndefinedData !== void 0 ? { data: maybeUndefinedData } : {}
      };
    }
    function parseJsonRpcErrorResponse(data) {
      if (!(0, compatibility_1.isJsonCompatibleDictionary)(data)) {
        throw new Error("Data must be JSON compatible dictionary");
      }
      if (data.jsonrpc !== "2.0") {
        throw new Error(`Got unexpected jsonrpc version: ${JSON.stringify(data)}`);
      }
      const id = data.id;
      if (typeof id !== "number" && typeof id !== "string" && id !== null) {
        throw new Error("Invalid id field");
      }
      if (typeof data.error === "undefined" || !(0, compatibility_1.isJsonCompatibleDictionary)(data.error)) {
        throw new Error("Invalid error field");
      }
      return {
        jsonrpc: "2.0",
        id,
        error: parseError(data.error)
      };
    }
    exports.parseJsonRpcErrorResponse = parseJsonRpcErrorResponse;
    function parseJsonRpcSuccessResponse(data) {
      if (!(0, compatibility_1.isJsonCompatibleDictionary)(data)) {
        throw new Error("Data must be JSON compatible dictionary");
      }
      if (data.jsonrpc !== "2.0") {
        throw new Error(`Got unexpected jsonrpc version: ${JSON.stringify(data)}`);
      }
      const id = data.id;
      if (typeof id !== "number" && typeof id !== "string") {
        throw new Error("Invalid id field");
      }
      if (typeof data.result === "undefined") {
        throw new Error("Invalid result field");
      }
      const result = data.result;
      return {
        jsonrpc: "2.0",
        id,
        result
      };
    }
    exports.parseJsonRpcSuccessResponse = parseJsonRpcSuccessResponse;
    function parseJsonRpcResponse(data) {
      let response;
      try {
        response = parseJsonRpcErrorResponse(data);
      } catch (_) {
        response = parseJsonRpcSuccessResponse(data);
      }
      return response;
    }
    exports.parseJsonRpcResponse = parseJsonRpcResponse;
  }
});

// node_modules/@cosmjs/json-rpc/build/index.js
var require_build9 = __commonJS({
  "node_modules/@cosmjs/json-rpc/build/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.jsonRpcCode = exports.isJsonRpcSuccessResponse = exports.isJsonRpcErrorResponse = exports.parseJsonRpcSuccessResponse = exports.parseJsonRpcResponse = exports.parseJsonRpcRequest = exports.parseJsonRpcId = exports.parseJsonRpcErrorResponse = exports.JsonRpcClient = exports.makeJsonRpcId = void 0;
    var id_1 = require_id();
    Object.defineProperty(exports, "makeJsonRpcId", { enumerable: true, get: function() {
      return id_1.makeJsonRpcId;
    } });
    var jsonrpcclient_1 = require_jsonrpcclient();
    Object.defineProperty(exports, "JsonRpcClient", { enumerable: true, get: function() {
      return jsonrpcclient_1.JsonRpcClient;
    } });
    var parse_1 = require_parse();
    Object.defineProperty(exports, "parseJsonRpcErrorResponse", { enumerable: true, get: function() {
      return parse_1.parseJsonRpcErrorResponse;
    } });
    Object.defineProperty(exports, "parseJsonRpcId", { enumerable: true, get: function() {
      return parse_1.parseJsonRpcId;
    } });
    Object.defineProperty(exports, "parseJsonRpcRequest", { enumerable: true, get: function() {
      return parse_1.parseJsonRpcRequest;
    } });
    Object.defineProperty(exports, "parseJsonRpcResponse", { enumerable: true, get: function() {
      return parse_1.parseJsonRpcResponse;
    } });
    Object.defineProperty(exports, "parseJsonRpcSuccessResponse", { enumerable: true, get: function() {
      return parse_1.parseJsonRpcSuccessResponse;
    } });
    var types_1 = require_types4();
    Object.defineProperty(exports, "isJsonRpcErrorResponse", { enumerable: true, get: function() {
      return types_1.isJsonRpcErrorResponse;
    } });
    Object.defineProperty(exports, "isJsonRpcSuccessResponse", { enumerable: true, get: function() {
      return types_1.isJsonRpcSuccessResponse;
    } });
    Object.defineProperty(exports, "jsonRpcCode", { enumerable: true, get: function() {
      return types_1.jsonRpcCode;
    } });
  }
});

// node_modules/axios/lib/helpers/bind.js
var require_bind = __commonJS({
  "node_modules/axios/lib/helpers/bind.js"(exports, module) {
    "use strict";
    module.exports = function bind(fn, thisArg) {
      return function wrap() {
        var args = new Array(arguments.length);
        for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i];
        }
        return fn.apply(thisArg, args);
      };
    };
  }
});

// node_modules/axios/lib/utils.js
var require_utils7 = __commonJS({
  "node_modules/axios/lib/utils.js"(exports, module) {
    "use strict";
    var bind = require_bind();
    var toString = Object.prototype.toString;
    function isArray(val) {
      return toString.call(val) === "[object Array]";
    }
    function isUndefined(val) {
      return typeof val === "undefined";
    }
    function isBuffer(val) {
      return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor) && typeof val.constructor.isBuffer === "function" && val.constructor.isBuffer(val);
    }
    function isArrayBuffer(val) {
      return toString.call(val) === "[object ArrayBuffer]";
    }
    function isFormData(val) {
      return typeof FormData !== "undefined" && val instanceof FormData;
    }
    function isArrayBufferView(val) {
      var result;
      if (typeof ArrayBuffer !== "undefined" && ArrayBuffer.isView) {
        result = ArrayBuffer.isView(val);
      } else {
        result = val && val.buffer && val.buffer instanceof ArrayBuffer;
      }
      return result;
    }
    function isString(val) {
      return typeof val === "string";
    }
    function isNumber(val) {
      return typeof val === "number";
    }
    function isObject(val) {
      return val !== null && typeof val === "object";
    }
    function isPlainObject(val) {
      if (toString.call(val) !== "[object Object]") {
        return false;
      }
      var prototype = Object.getPrototypeOf(val);
      return prototype === null || prototype === Object.prototype;
    }
    function isDate(val) {
      return toString.call(val) === "[object Date]";
    }
    function isFile(val) {
      return toString.call(val) === "[object File]";
    }
    function isBlob(val) {
      return toString.call(val) === "[object Blob]";
    }
    function isFunction(val) {
      return toString.call(val) === "[object Function]";
    }
    function isStream(val) {
      return isObject(val) && isFunction(val.pipe);
    }
    function isURLSearchParams(val) {
      return typeof URLSearchParams !== "undefined" && val instanceof URLSearchParams;
    }
    function trim(str) {
      return str.trim ? str.trim() : str.replace(/^\s+|\s+$/g, "");
    }
    function isStandardBrowserEnv() {
      if (typeof navigator !== "undefined" && (navigator.product === "ReactNative" || navigator.product === "NativeScript" || navigator.product === "NS")) {
        return false;
      }
      return typeof window !== "undefined" && typeof document !== "undefined";
    }
    function forEach(obj, fn) {
      if (obj === null || typeof obj === "undefined") {
        return;
      }
      if (typeof obj !== "object") {
        obj = [obj];
      }
      if (isArray(obj)) {
        for (var i = 0, l = obj.length; i < l; i++) {
          fn.call(null, obj[i], i, obj);
        }
      } else {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) {
            fn.call(null, obj[key], key, obj);
          }
        }
      }
    }
    function merge() {
      var result = {};
      function assignValue(val, key) {
        if (isPlainObject(result[key]) && isPlainObject(val)) {
          result[key] = merge(result[key], val);
        } else if (isPlainObject(val)) {
          result[key] = merge({}, val);
        } else if (isArray(val)) {
          result[key] = val.slice();
        } else {
          result[key] = val;
        }
      }
      for (var i = 0, l = arguments.length; i < l; i++) {
        forEach(arguments[i], assignValue);
      }
      return result;
    }
    function extend(a, b, thisArg) {
      forEach(b, function assignValue(val, key) {
        if (thisArg && typeof val === "function") {
          a[key] = bind(val, thisArg);
        } else {
          a[key] = val;
        }
      });
      return a;
    }
    function stripBOM(content) {
      if (content.charCodeAt(0) === 65279) {
        content = content.slice(1);
      }
      return content;
    }
    module.exports = {
      isArray,
      isArrayBuffer,
      isBuffer,
      isFormData,
      isArrayBufferView,
      isString,
      isNumber,
      isObject,
      isPlainObject,
      isUndefined,
      isDate,
      isFile,
      isBlob,
      isFunction,
      isStream,
      isURLSearchParams,
      isStandardBrowserEnv,
      forEach,
      merge,
      extend,
      trim,
      stripBOM
    };
  }
});

// node_modules/axios/lib/helpers/buildURL.js
var require_buildURL = __commonJS({
  "node_modules/axios/lib/helpers/buildURL.js"(exports, module) {
    "use strict";
    var utils = require_utils7();
    function encode(val) {
      return encodeURIComponent(val).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
    }
    module.exports = function buildURL(url, params, paramsSerializer) {
      if (!params) {
        return url;
      }
      var serializedParams;
      if (paramsSerializer) {
        serializedParams = paramsSerializer(params);
      } else if (utils.isURLSearchParams(params)) {
        serializedParams = params.toString();
      } else {
        var parts = [];
        utils.forEach(params, function serialize(val, key) {
          if (val === null || typeof val === "undefined") {
            return;
          }
          if (utils.isArray(val)) {
            key = key + "[]";
          } else {
            val = [val];
          }
          utils.forEach(val, function parseValue(v) {
            if (utils.isDate(v)) {
              v = v.toISOString();
            } else if (utils.isObject(v)) {
              v = JSON.stringify(v);
            }
            parts.push(encode(key) + "=" + encode(v));
          });
        });
        serializedParams = parts.join("&");
      }
      if (serializedParams) {
        var hashmarkIndex = url.indexOf("#");
        if (hashmarkIndex !== -1) {
          url = url.slice(0, hashmarkIndex);
        }
        url += (url.indexOf("?") === -1 ? "?" : "&") + serializedParams;
      }
      return url;
    };
  }
});

// node_modules/axios/lib/core/InterceptorManager.js
var require_InterceptorManager = __commonJS({
  "node_modules/axios/lib/core/InterceptorManager.js"(exports, module) {
    "use strict";
    var utils = require_utils7();
    function InterceptorManager() {
      this.handlers = [];
    }
    InterceptorManager.prototype.use = function use(fulfilled, rejected, options) {
      this.handlers.push({
        fulfilled,
        rejected,
        synchronous: options ? options.synchronous : false,
        runWhen: options ? options.runWhen : null
      });
      return this.handlers.length - 1;
    };
    InterceptorManager.prototype.eject = function eject(id) {
      if (this.handlers[id]) {
        this.handlers[id] = null;
      }
    };
    InterceptorManager.prototype.forEach = function forEach(fn) {
      utils.forEach(this.handlers, function forEachHandler(h) {
        if (h !== null) {
          fn(h);
        }
      });
    };
    module.exports = InterceptorManager;
  }
});

// node_modules/axios/lib/helpers/normalizeHeaderName.js
var require_normalizeHeaderName = __commonJS({
  "node_modules/axios/lib/helpers/normalizeHeaderName.js"(exports, module) {
    "use strict";
    var utils = require_utils7();
    module.exports = function normalizeHeaderName(headers, normalizedName) {
      utils.forEach(headers, function processHeader(value, name) {
        if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
          headers[normalizedName] = value;
          delete headers[name];
        }
      });
    };
  }
});

// node_modules/axios/lib/core/enhanceError.js
var require_enhanceError = __commonJS({
  "node_modules/axios/lib/core/enhanceError.js"(exports, module) {
    "use strict";
    module.exports = function enhanceError(error, config, code, request, response) {
      error.config = config;
      if (code) {
        error.code = code;
      }
      error.request = request;
      error.response = response;
      error.isAxiosError = true;
      error.toJSON = function toJSON() {
        return {
          // Standard
          message: this.message,
          name: this.name,
          // Microsoft
          description: this.description,
          number: this.number,
          // Mozilla
          fileName: this.fileName,
          lineNumber: this.lineNumber,
          columnNumber: this.columnNumber,
          stack: this.stack,
          // Axios
          config: this.config,
          code: this.code
        };
      };
      return error;
    };
  }
});

// node_modules/axios/lib/core/createError.js
var require_createError = __commonJS({
  "node_modules/axios/lib/core/createError.js"(exports, module) {
    "use strict";
    var enhanceError = require_enhanceError();
    module.exports = function createError(message, config, code, request, response) {
      var error = new Error(message);
      return enhanceError(error, config, code, request, response);
    };
  }
});

// node_modules/axios/lib/core/settle.js
var require_settle = __commonJS({
  "node_modules/axios/lib/core/settle.js"(exports, module) {
    "use strict";
    var createError = require_createError();
    module.exports = function settle(resolve, reject, response) {
      var validateStatus = response.config.validateStatus;
      if (!response.status || !validateStatus || validateStatus(response.status)) {
        resolve(response);
      } else {
        reject(createError(
          "Request failed with status code " + response.status,
          response.config,
          null,
          response.request,
          response
        ));
      }
    };
  }
});

// node_modules/axios/lib/helpers/cookies.js
var require_cookies = __commonJS({
  "node_modules/axios/lib/helpers/cookies.js"(exports, module) {
    "use strict";
    var utils = require_utils7();
    module.exports = utils.isStandardBrowserEnv() ? (
      // Standard browser envs support document.cookie
      /* @__PURE__ */ function standardBrowserEnv() {
        return {
          write: function write(name, value, expires, path, domain, secure) {
            var cookie = [];
            cookie.push(name + "=" + encodeURIComponent(value));
            if (utils.isNumber(expires)) {
              cookie.push("expires=" + new Date(expires).toGMTString());
            }
            if (utils.isString(path)) {
              cookie.push("path=" + path);
            }
            if (utils.isString(domain)) {
              cookie.push("domain=" + domain);
            }
            if (secure === true) {
              cookie.push("secure");
            }
            document.cookie = cookie.join("; ");
          },
          read: function read(name) {
            var match = document.cookie.match(new RegExp("(^|;\\s*)(" + name + ")=([^;]*)"));
            return match ? decodeURIComponent(match[3]) : null;
          },
          remove: function remove(name) {
            this.write(name, "", Date.now() - 864e5);
          }
        };
      }()
    ) : (
      // Non standard browser env (web workers, react-native) lack needed support.
      /* @__PURE__ */ function nonStandardBrowserEnv() {
        return {
          write: function write() {
          },
          read: function read() {
            return null;
          },
          remove: function remove() {
          }
        };
      }()
    );
  }
});

// node_modules/axios/lib/helpers/isAbsoluteURL.js
var require_isAbsoluteURL = __commonJS({
  "node_modules/axios/lib/helpers/isAbsoluteURL.js"(exports, module) {
    "use strict";
    module.exports = function isAbsoluteURL(url) {
      return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
    };
  }
});

// node_modules/axios/lib/helpers/combineURLs.js
var require_combineURLs = __commonJS({
  "node_modules/axios/lib/helpers/combineURLs.js"(exports, module) {
    "use strict";
    module.exports = function combineURLs(baseURL, relativeURL) {
      return relativeURL ? baseURL.replace(/\/+$/, "") + "/" + relativeURL.replace(/^\/+/, "") : baseURL;
    };
  }
});

// node_modules/axios/lib/core/buildFullPath.js
var require_buildFullPath = __commonJS({
  "node_modules/axios/lib/core/buildFullPath.js"(exports, module) {
    "use strict";
    var isAbsoluteURL = require_isAbsoluteURL();
    var combineURLs = require_combineURLs();
    module.exports = function buildFullPath(baseURL, requestedURL) {
      if (baseURL && !isAbsoluteURL(requestedURL)) {
        return combineURLs(baseURL, requestedURL);
      }
      return requestedURL;
    };
  }
});

// node_modules/axios/lib/helpers/parseHeaders.js
var require_parseHeaders = __commonJS({
  "node_modules/axios/lib/helpers/parseHeaders.js"(exports, module) {
    "use strict";
    var utils = require_utils7();
    var ignoreDuplicateOf = [
      "age",
      "authorization",
      "content-length",
      "content-type",
      "etag",
      "expires",
      "from",
      "host",
      "if-modified-since",
      "if-unmodified-since",
      "last-modified",
      "location",
      "max-forwards",
      "proxy-authorization",
      "referer",
      "retry-after",
      "user-agent"
    ];
    module.exports = function parseHeaders(headers) {
      var parsed = {};
      var key;
      var val;
      var i;
      if (!headers) {
        return parsed;
      }
      utils.forEach(headers.split("\n"), function parser(line) {
        i = line.indexOf(":");
        key = utils.trim(line.substr(0, i)).toLowerCase();
        val = utils.trim(line.substr(i + 1));
        if (key) {
          if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
            return;
          }
          if (key === "set-cookie") {
            parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
          } else {
            parsed[key] = parsed[key] ? parsed[key] + ", " + val : val;
          }
        }
      });
      return parsed;
    };
  }
});

// node_modules/axios/lib/helpers/isURLSameOrigin.js
var require_isURLSameOrigin = __commonJS({
  "node_modules/axios/lib/helpers/isURLSameOrigin.js"(exports, module) {
    "use strict";
    var utils = require_utils7();
    module.exports = utils.isStandardBrowserEnv() ? (
      // Standard browser envs have full support of the APIs needed to test
      // whether the request URL is of the same origin as current location.
      function standardBrowserEnv() {
        var msie = /(msie|trident)/i.test(navigator.userAgent);
        var urlParsingNode = document.createElement("a");
        var originURL;
        function resolveURL(url) {
          var href = url;
          if (msie) {
            urlParsingNode.setAttribute("href", href);
            href = urlParsingNode.href;
          }
          urlParsingNode.setAttribute("href", href);
          return {
            href: urlParsingNode.href,
            protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, "") : "",
            host: urlParsingNode.host,
            search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, "") : "",
            hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, "") : "",
            hostname: urlParsingNode.hostname,
            port: urlParsingNode.port,
            pathname: urlParsingNode.pathname.charAt(0) === "/" ? urlParsingNode.pathname : "/" + urlParsingNode.pathname
          };
        }
        originURL = resolveURL(window.location.href);
        return function isURLSameOrigin(requestURL) {
          var parsed = utils.isString(requestURL) ? resolveURL(requestURL) : requestURL;
          return parsed.protocol === originURL.protocol && parsed.host === originURL.host;
        };
      }()
    ) : (
      // Non standard browser envs (web workers, react-native) lack needed support.
      /* @__PURE__ */ function nonStandardBrowserEnv() {
        return function isURLSameOrigin() {
          return true;
        };
      }()
    );
  }
});

// node_modules/axios/lib/adapters/xhr.js
var require_xhr = __commonJS({
  "node_modules/axios/lib/adapters/xhr.js"(exports, module) {
    "use strict";
    var utils = require_utils7();
    var settle = require_settle();
    var cookies = require_cookies();
    var buildURL = require_buildURL();
    var buildFullPath = require_buildFullPath();
    var parseHeaders = require_parseHeaders();
    var isURLSameOrigin = require_isURLSameOrigin();
    var createError = require_createError();
    module.exports = function xhrAdapter(config) {
      return new Promise(function dispatchXhrRequest(resolve, reject) {
        var requestData = config.data;
        var requestHeaders = config.headers;
        var responseType = config.responseType;
        if (utils.isFormData(requestData)) {
          delete requestHeaders["Content-Type"];
        }
        var request = new XMLHttpRequest();
        if (config.auth) {
          var username = config.auth.username || "";
          var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : "";
          requestHeaders.Authorization = "Basic " + btoa(username + ":" + password);
        }
        var fullPath = buildFullPath(config.baseURL, config.url);
        request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);
        request.timeout = config.timeout;
        function onloadend() {
          if (!request) {
            return;
          }
          var responseHeaders = "getAllResponseHeaders" in request ? parseHeaders(request.getAllResponseHeaders()) : null;
          var responseData = !responseType || responseType === "text" || responseType === "json" ? request.responseText : request.response;
          var response = {
            data: responseData,
            status: request.status,
            statusText: request.statusText,
            headers: responseHeaders,
            config,
            request
          };
          settle(resolve, reject, response);
          request = null;
        }
        if ("onloadend" in request) {
          request.onloadend = onloadend;
        } else {
          request.onreadystatechange = function handleLoad() {
            if (!request || request.readyState !== 4) {
              return;
            }
            if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf("file:") === 0)) {
              return;
            }
            setTimeout(onloadend);
          };
        }
        request.onabort = function handleAbort() {
          if (!request) {
            return;
          }
          reject(createError("Request aborted", config, "ECONNABORTED", request));
          request = null;
        };
        request.onerror = function handleError() {
          reject(createError("Network Error", config, null, request));
          request = null;
        };
        request.ontimeout = function handleTimeout() {
          var timeoutErrorMessage = "timeout of " + config.timeout + "ms exceeded";
          if (config.timeoutErrorMessage) {
            timeoutErrorMessage = config.timeoutErrorMessage;
          }
          reject(createError(
            timeoutErrorMessage,
            config,
            config.transitional && config.transitional.clarifyTimeoutError ? "ETIMEDOUT" : "ECONNABORTED",
            request
          ));
          request = null;
        };
        if (utils.isStandardBrowserEnv()) {
          var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ? cookies.read(config.xsrfCookieName) : void 0;
          if (xsrfValue) {
            requestHeaders[config.xsrfHeaderName] = xsrfValue;
          }
        }
        if ("setRequestHeader" in request) {
          utils.forEach(requestHeaders, function setRequestHeader(val, key) {
            if (typeof requestData === "undefined" && key.toLowerCase() === "content-type") {
              delete requestHeaders[key];
            } else {
              request.setRequestHeader(key, val);
            }
          });
        }
        if (!utils.isUndefined(config.withCredentials)) {
          request.withCredentials = !!config.withCredentials;
        }
        if (responseType && responseType !== "json") {
          request.responseType = config.responseType;
        }
        if (typeof config.onDownloadProgress === "function") {
          request.addEventListener("progress", config.onDownloadProgress);
        }
        if (typeof config.onUploadProgress === "function" && request.upload) {
          request.upload.addEventListener("progress", config.onUploadProgress);
        }
        if (config.cancelToken) {
          config.cancelToken.promise.then(function onCanceled(cancel) {
            if (!request) {
              return;
            }
            request.abort();
            reject(cancel);
            request = null;
          });
        }
        if (!requestData) {
          requestData = null;
        }
        request.send(requestData);
      });
    };
  }
});

// node_modules/axios/lib/defaults.js
var require_defaults = __commonJS({
  "node_modules/axios/lib/defaults.js"(exports, module) {
    "use strict";
    var utils = require_utils7();
    var normalizeHeaderName = require_normalizeHeaderName();
    var enhanceError = require_enhanceError();
    var DEFAULT_CONTENT_TYPE = {
      "Content-Type": "application/x-www-form-urlencoded"
    };
    function setContentTypeIfUnset(headers, value) {
      if (!utils.isUndefined(headers) && utils.isUndefined(headers["Content-Type"])) {
        headers["Content-Type"] = value;
      }
    }
    function getDefaultAdapter() {
      var adapter;
      if (typeof XMLHttpRequest !== "undefined") {
        adapter = require_xhr();
      } else if (typeof process !== "undefined" && Object.prototype.toString.call(process) === "[object process]") {
        adapter = require_xhr();
      }
      return adapter;
    }
    function stringifySafely(rawValue, parser, encoder) {
      if (utils.isString(rawValue)) {
        try {
          (parser || JSON.parse)(rawValue);
          return utils.trim(rawValue);
        } catch (e) {
          if (e.name !== "SyntaxError") {
            throw e;
          }
        }
      }
      return (encoder || JSON.stringify)(rawValue);
    }
    var defaults = {
      transitional: {
        silentJSONParsing: true,
        forcedJSONParsing: true,
        clarifyTimeoutError: false
      },
      adapter: getDefaultAdapter(),
      transformRequest: [function transformRequest(data, headers) {
        normalizeHeaderName(headers, "Accept");
        normalizeHeaderName(headers, "Content-Type");
        if (utils.isFormData(data) || utils.isArrayBuffer(data) || utils.isBuffer(data) || utils.isStream(data) || utils.isFile(data) || utils.isBlob(data)) {
          return data;
        }
        if (utils.isArrayBufferView(data)) {
          return data.buffer;
        }
        if (utils.isURLSearchParams(data)) {
          setContentTypeIfUnset(headers, "application/x-www-form-urlencoded;charset=utf-8");
          return data.toString();
        }
        if (utils.isObject(data) || headers && headers["Content-Type"] === "application/json") {
          setContentTypeIfUnset(headers, "application/json");
          return stringifySafely(data);
        }
        return data;
      }],
      transformResponse: [function transformResponse(data) {
        var transitional = this.transitional;
        var silentJSONParsing = transitional && transitional.silentJSONParsing;
        var forcedJSONParsing = transitional && transitional.forcedJSONParsing;
        var strictJSONParsing = !silentJSONParsing && this.responseType === "json";
        if (strictJSONParsing || forcedJSONParsing && utils.isString(data) && data.length) {
          try {
            return JSON.parse(data);
          } catch (e) {
            if (strictJSONParsing) {
              if (e.name === "SyntaxError") {
                throw enhanceError(e, this, "E_JSON_PARSE");
              }
              throw e;
            }
          }
        }
        return data;
      }],
      /**
       * A timeout in milliseconds to abort a request. If set to 0 (default) a
       * timeout is not created.
       */
      timeout: 0,
      xsrfCookieName: "XSRF-TOKEN",
      xsrfHeaderName: "X-XSRF-TOKEN",
      maxContentLength: -1,
      maxBodyLength: -1,
      validateStatus: function validateStatus(status) {
        return status >= 200 && status < 300;
      }
    };
    defaults.headers = {
      common: {
        "Accept": "application/json, text/plain, */*"
      }
    };
    utils.forEach(["delete", "get", "head"], function forEachMethodNoData(method) {
      defaults.headers[method] = {};
    });
    utils.forEach(["post", "put", "patch"], function forEachMethodWithData(method) {
      defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
    });
    module.exports = defaults;
  }
});

// node_modules/axios/lib/core/transformData.js
var require_transformData = __commonJS({
  "node_modules/axios/lib/core/transformData.js"(exports, module) {
    "use strict";
    var utils = require_utils7();
    var defaults = require_defaults();
    module.exports = function transformData(data, headers, fns) {
      var context = this || defaults;
      utils.forEach(fns, function transform(fn) {
        data = fn.call(context, data, headers);
      });
      return data;
    };
  }
});

// node_modules/axios/lib/cancel/isCancel.js
var require_isCancel = __commonJS({
  "node_modules/axios/lib/cancel/isCancel.js"(exports, module) {
    "use strict";
    module.exports = function isCancel(value) {
      return !!(value && value.__CANCEL__);
    };
  }
});

// node_modules/axios/lib/core/dispatchRequest.js
var require_dispatchRequest = __commonJS({
  "node_modules/axios/lib/core/dispatchRequest.js"(exports, module) {
    "use strict";
    var utils = require_utils7();
    var transformData = require_transformData();
    var isCancel = require_isCancel();
    var defaults = require_defaults();
    function throwIfCancellationRequested(config) {
      if (config.cancelToken) {
        config.cancelToken.throwIfRequested();
      }
    }
    module.exports = function dispatchRequest(config) {
      throwIfCancellationRequested(config);
      config.headers = config.headers || {};
      config.data = transformData.call(
        config,
        config.data,
        config.headers,
        config.transformRequest
      );
      config.headers = utils.merge(
        config.headers.common || {},
        config.headers[config.method] || {},
        config.headers
      );
      utils.forEach(
        ["delete", "get", "head", "post", "put", "patch", "common"],
        function cleanHeaderConfig(method) {
          delete config.headers[method];
        }
      );
      var adapter = config.adapter || defaults.adapter;
      return adapter(config).then(function onAdapterResolution(response) {
        throwIfCancellationRequested(config);
        response.data = transformData.call(
          config,
          response.data,
          response.headers,
          config.transformResponse
        );
        return response;
      }, function onAdapterRejection(reason) {
        if (!isCancel(reason)) {
          throwIfCancellationRequested(config);
          if (reason && reason.response) {
            reason.response.data = transformData.call(
              config,
              reason.response.data,
              reason.response.headers,
              config.transformResponse
            );
          }
        }
        return Promise.reject(reason);
      });
    };
  }
});

// node_modules/axios/lib/core/mergeConfig.js
var require_mergeConfig = __commonJS({
  "node_modules/axios/lib/core/mergeConfig.js"(exports, module) {
    "use strict";
    var utils = require_utils7();
    module.exports = function mergeConfig(config1, config2) {
      config2 = config2 || {};
      var config = {};
      var valueFromConfig2Keys = ["url", "method", "data"];
      var mergeDeepPropertiesKeys = ["headers", "auth", "proxy", "params"];
      var defaultToConfig2Keys = [
        "baseURL",
        "transformRequest",
        "transformResponse",
        "paramsSerializer",
        "timeout",
        "timeoutMessage",
        "withCredentials",
        "adapter",
        "responseType",
        "xsrfCookieName",
        "xsrfHeaderName",
        "onUploadProgress",
        "onDownloadProgress",
        "decompress",
        "maxContentLength",
        "maxBodyLength",
        "maxRedirects",
        "transport",
        "httpAgent",
        "httpsAgent",
        "cancelToken",
        "socketPath",
        "responseEncoding"
      ];
      var directMergeKeys = ["validateStatus"];
      function getMergedValue(target, source) {
        if (utils.isPlainObject(target) && utils.isPlainObject(source)) {
          return utils.merge(target, source);
        } else if (utils.isPlainObject(source)) {
          return utils.merge({}, source);
        } else if (utils.isArray(source)) {
          return source.slice();
        }
        return source;
      }
      function mergeDeepProperties(prop) {
        if (!utils.isUndefined(config2[prop])) {
          config[prop] = getMergedValue(config1[prop], config2[prop]);
        } else if (!utils.isUndefined(config1[prop])) {
          config[prop] = getMergedValue(void 0, config1[prop]);
        }
      }
      utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {
        if (!utils.isUndefined(config2[prop])) {
          config[prop] = getMergedValue(void 0, config2[prop]);
        }
      });
      utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);
      utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {
        if (!utils.isUndefined(config2[prop])) {
          config[prop] = getMergedValue(void 0, config2[prop]);
        } else if (!utils.isUndefined(config1[prop])) {
          config[prop] = getMergedValue(void 0, config1[prop]);
        }
      });
      utils.forEach(directMergeKeys, function merge(prop) {
        if (prop in config2) {
          config[prop] = getMergedValue(config1[prop], config2[prop]);
        } else if (prop in config1) {
          config[prop] = getMergedValue(void 0, config1[prop]);
        }
      });
      var axiosKeys = valueFromConfig2Keys.concat(mergeDeepPropertiesKeys).concat(defaultToConfig2Keys).concat(directMergeKeys);
      var otherKeys = Object.keys(config1).concat(Object.keys(config2)).filter(function filterAxiosKeys(key) {
        return axiosKeys.indexOf(key) === -1;
      });
      utils.forEach(otherKeys, mergeDeepProperties);
      return config;
    };
  }
});

// node_modules/axios/package.json
var require_package2 = __commonJS({
  "node_modules/axios/package.json"(exports, module) {
    module.exports = {
      name: "axios",
      version: "0.21.4",
      description: "Promise based HTTP client for the browser and node.js",
      main: "index.js",
      scripts: {
        test: "grunt test",
        start: "node ./sandbox/server.js",
        build: "NODE_ENV=production grunt build",
        preversion: "npm test",
        version: "npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json",
        postversion: "git push && git push --tags",
        examples: "node ./examples/server.js",
        coveralls: "cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js",
        fix: "eslint --fix lib/**/*.js"
      },
      repository: {
        type: "git",
        url: "https://github.com/axios/axios.git"
      },
      keywords: [
        "xhr",
        "http",
        "ajax",
        "promise",
        "node"
      ],
      author: "Matt Zabriskie",
      license: "MIT",
      bugs: {
        url: "https://github.com/axios/axios/issues"
      },
      homepage: "https://axios-http.com",
      devDependencies: {
        coveralls: "^3.0.0",
        "es6-promise": "^4.2.4",
        grunt: "^1.3.0",
        "grunt-banner": "^0.6.0",
        "grunt-cli": "^1.2.0",
        "grunt-contrib-clean": "^1.1.0",
        "grunt-contrib-watch": "^1.0.0",
        "grunt-eslint": "^23.0.0",
        "grunt-karma": "^4.0.0",
        "grunt-mocha-test": "^0.13.3",
        "grunt-ts": "^6.0.0-beta.19",
        "grunt-webpack": "^4.0.2",
        "istanbul-instrumenter-loader": "^1.0.0",
        "jasmine-core": "^2.4.1",
        karma: "^6.3.2",
        "karma-chrome-launcher": "^3.1.0",
        "karma-firefox-launcher": "^2.1.0",
        "karma-jasmine": "^1.1.1",
        "karma-jasmine-ajax": "^0.1.13",
        "karma-safari-launcher": "^1.0.0",
        "karma-sauce-launcher": "^4.3.6",
        "karma-sinon": "^1.0.5",
        "karma-sourcemap-loader": "^0.3.8",
        "karma-webpack": "^4.0.2",
        "load-grunt-tasks": "^3.5.2",
        minimist: "^1.2.0",
        mocha: "^8.2.1",
        sinon: "^4.5.0",
        "terser-webpack-plugin": "^4.2.3",
        typescript: "^4.0.5",
        "url-search-params": "^0.10.0",
        webpack: "^4.44.2",
        "webpack-dev-server": "^3.11.0"
      },
      browser: {
        "./lib/adapters/http.js": "./lib/adapters/xhr.js"
      },
      jsdelivr: "dist/axios.min.js",
      unpkg: "dist/axios.min.js",
      typings: "./index.d.ts",
      dependencies: {
        "follow-redirects": "^1.14.0"
      },
      bundlesize: [
        {
          path: "./dist/axios.min.js",
          threshold: "5kB"
        }
      ]
    };
  }
});

// node_modules/axios/lib/helpers/validator.js
var require_validator2 = __commonJS({
  "node_modules/axios/lib/helpers/validator.js"(exports, module) {
    "use strict";
    var pkg = require_package2();
    var validators = {};
    ["object", "boolean", "number", "function", "string", "symbol"].forEach(function(type, i) {
      validators[type] = function validator(thing) {
        return typeof thing === type || "a" + (i < 1 ? "n " : " ") + type;
      };
    });
    var deprecatedWarnings = {};
    var currentVerArr = pkg.version.split(".");
    function isOlderVersion(version, thanVersion) {
      var pkgVersionArr = thanVersion ? thanVersion.split(".") : currentVerArr;
      var destVer = version.split(".");
      for (var i = 0; i < 3; i++) {
        if (pkgVersionArr[i] > destVer[i]) {
          return true;
        } else if (pkgVersionArr[i] < destVer[i]) {
          return false;
        }
      }
      return false;
    }
    validators.transitional = function transitional(validator, version, message) {
      var isDeprecated = version && isOlderVersion(version);
      function formatMessage(opt, desc) {
        return "[Axios v" + pkg.version + "] Transitional option '" + opt + "'" + desc + (message ? ". " + message : "");
      }
      return function(value, opt, opts) {
        if (validator === false) {
          throw new Error(formatMessage(opt, " has been removed in " + version));
        }
        if (isDeprecated && !deprecatedWarnings[opt]) {
          deprecatedWarnings[opt] = true;
          console.warn(
            formatMessage(
              opt,
              " has been deprecated since v" + version + " and will be removed in the near future"
            )
          );
        }
        return validator ? validator(value, opt, opts) : true;
      };
    };
    function assertOptions(options, schema, allowUnknown) {
      if (typeof options !== "object") {
        throw new TypeError("options must be an object");
      }
      var keys = Object.keys(options);
      var i = keys.length;
      while (i-- > 0) {
        var opt = keys[i];
        var validator = schema[opt];
        if (validator) {
          var value = options[opt];
          var result = value === void 0 || validator(value, opt, options);
          if (result !== true) {
            throw new TypeError("option " + opt + " must be " + result);
          }
          continue;
        }
        if (allowUnknown !== true) {
          throw Error("Unknown option " + opt);
        }
      }
    }
    module.exports = {
      isOlderVersion,
      assertOptions,
      validators
    };
  }
});

// node_modules/axios/lib/core/Axios.js
var require_Axios = __commonJS({
  "node_modules/axios/lib/core/Axios.js"(exports, module) {
    "use strict";
    var utils = require_utils7();
    var buildURL = require_buildURL();
    var InterceptorManager = require_InterceptorManager();
    var dispatchRequest = require_dispatchRequest();
    var mergeConfig = require_mergeConfig();
    var validator = require_validator2();
    var validators = validator.validators;
    function Axios(instanceConfig) {
      this.defaults = instanceConfig;
      this.interceptors = {
        request: new InterceptorManager(),
        response: new InterceptorManager()
      };
    }
    Axios.prototype.request = function request(config) {
      if (typeof config === "string") {
        config = arguments[1] || {};
        config.url = arguments[0];
      } else {
        config = config || {};
      }
      config = mergeConfig(this.defaults, config);
      if (config.method) {
        config.method = config.method.toLowerCase();
      } else if (this.defaults.method) {
        config.method = this.defaults.method.toLowerCase();
      } else {
        config.method = "get";
      }
      var transitional = config.transitional;
      if (transitional !== void 0) {
        validator.assertOptions(transitional, {
          silentJSONParsing: validators.transitional(validators.boolean, "1.0.0"),
          forcedJSONParsing: validators.transitional(validators.boolean, "1.0.0"),
          clarifyTimeoutError: validators.transitional(validators.boolean, "1.0.0")
        }, false);
      }
      var requestInterceptorChain = [];
      var synchronousRequestInterceptors = true;
      this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
        if (typeof interceptor.runWhen === "function" && interceptor.runWhen(config) === false) {
          return;
        }
        synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;
        requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);
      });
      var responseInterceptorChain = [];
      this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
        responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);
      });
      var promise;
      if (!synchronousRequestInterceptors) {
        var chain = [dispatchRequest, void 0];
        Array.prototype.unshift.apply(chain, requestInterceptorChain);
        chain = chain.concat(responseInterceptorChain);
        promise = Promise.resolve(config);
        while (chain.length) {
          promise = promise.then(chain.shift(), chain.shift());
        }
        return promise;
      }
      var newConfig = config;
      while (requestInterceptorChain.length) {
        var onFulfilled = requestInterceptorChain.shift();
        var onRejected = requestInterceptorChain.shift();
        try {
          newConfig = onFulfilled(newConfig);
        } catch (error) {
          onRejected(error);
          break;
        }
      }
      try {
        promise = dispatchRequest(newConfig);
      } catch (error) {
        return Promise.reject(error);
      }
      while (responseInterceptorChain.length) {
        promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());
      }
      return promise;
    };
    Axios.prototype.getUri = function getUri(config) {
      config = mergeConfig(this.defaults, config);
      return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\?/, "");
    };
    utils.forEach(["delete", "get", "head", "options"], function forEachMethodNoData(method) {
      Axios.prototype[method] = function(url, config) {
        return this.request(mergeConfig(config || {}, {
          method,
          url,
          data: (config || {}).data
        }));
      };
    });
    utils.forEach(["post", "put", "patch"], function forEachMethodWithData(method) {
      Axios.prototype[method] = function(url, data, config) {
        return this.request(mergeConfig(config || {}, {
          method,
          url,
          data
        }));
      };
    });
    module.exports = Axios;
  }
});

// node_modules/axios/lib/cancel/Cancel.js
var require_Cancel = __commonJS({
  "node_modules/axios/lib/cancel/Cancel.js"(exports, module) {
    "use strict";
    function Cancel(message) {
      this.message = message;
    }
    Cancel.prototype.toString = function toString() {
      return "Cancel" + (this.message ? ": " + this.message : "");
    };
    Cancel.prototype.__CANCEL__ = true;
    module.exports = Cancel;
  }
});

// node_modules/axios/lib/cancel/CancelToken.js
var require_CancelToken = __commonJS({
  "node_modules/axios/lib/cancel/CancelToken.js"(exports, module) {
    "use strict";
    var Cancel = require_Cancel();
    function CancelToken(executor) {
      if (typeof executor !== "function") {
        throw new TypeError("executor must be a function.");
      }
      var resolvePromise;
      this.promise = new Promise(function promiseExecutor(resolve) {
        resolvePromise = resolve;
      });
      var token = this;
      executor(function cancel(message) {
        if (token.reason) {
          return;
        }
        token.reason = new Cancel(message);
        resolvePromise(token.reason);
      });
    }
    CancelToken.prototype.throwIfRequested = function throwIfRequested() {
      if (this.reason) {
        throw this.reason;
      }
    };
    CancelToken.source = function source() {
      var cancel;
      var token = new CancelToken(function executor(c) {
        cancel = c;
      });
      return {
        token,
        cancel
      };
    };
    module.exports = CancelToken;
  }
});

// node_modules/axios/lib/helpers/spread.js
var require_spread = __commonJS({
  "node_modules/axios/lib/helpers/spread.js"(exports, module) {
    "use strict";
    module.exports = function spread(callback) {
      return function wrap(arr) {
        return callback.apply(null, arr);
      };
    };
  }
});

// node_modules/axios/lib/helpers/isAxiosError.js
var require_isAxiosError = __commonJS({
  "node_modules/axios/lib/helpers/isAxiosError.js"(exports, module) {
    "use strict";
    module.exports = function isAxiosError(payload) {
      return typeof payload === "object" && payload.isAxiosError === true;
    };
  }
});

// node_modules/axios/lib/axios.js
var require_axios = __commonJS({
  "node_modules/axios/lib/axios.js"(exports, module) {
    "use strict";
    var utils = require_utils7();
    var bind = require_bind();
    var Axios = require_Axios();
    var mergeConfig = require_mergeConfig();
    var defaults = require_defaults();
    function createInstance(defaultConfig) {
      var context = new Axios(defaultConfig);
      var instance = bind(Axios.prototype.request, context);
      utils.extend(instance, Axios.prototype, context);
      utils.extend(instance, context);
      return instance;
    }
    var axios = createInstance(defaults);
    axios.Axios = Axios;
    axios.create = function create(instanceConfig) {
      return createInstance(mergeConfig(axios.defaults, instanceConfig));
    };
    axios.Cancel = require_Cancel();
    axios.CancelToken = require_CancelToken();
    axios.isCancel = require_isCancel();
    axios.all = function all(promises) {
      return Promise.all(promises);
    };
    axios.spread = require_spread();
    axios.isAxiosError = require_isAxiosError();
    module.exports = axios;
    module.exports.default = axios;
  }
});

// node_modules/axios/index.js
var require_axios2 = __commonJS({
  "node_modules/axios/index.js"(exports, module) {
    module.exports = require_axios();
  }
});

// node_modules/@cosmjs/tendermint-rpc/build/rpcclients/http.js
var require_http = __commonJS({
  "node_modules/@cosmjs/tendermint-rpc/build/rpcclients/http.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.http = void 0;
    var axios_1 = __importDefault(require_axios2());
    function filterBadStatus(res) {
      if (res.status >= 400) {
        throw new Error(`Bad status on response: ${res.status}`);
      }
      return res;
    }
    function isExperimental(nodeJsFunc) {
      return nodeJsFunc.toString().includes("emitExperimentalWarning");
    }
    async function http(method, url, headers, request) {
      if (typeof fetch === "function" && !isExperimental(fetch)) {
        const settings = {
          method,
          body: request ? JSON.stringify(request) : void 0,
          headers: {
            // eslint-disable-next-line @typescript-eslint/naming-convention
            "Content-Type": "application/json",
            ...headers
          }
        };
        return fetch(url, settings).then(filterBadStatus).then((res) => res.json());
      } else {
        return axios_1.default.request({ url, method, data: request, headers }).then((res) => res.data);
      }
    }
    exports.http = http;
  }
});

// node_modules/@cosmjs/tendermint-rpc/build/rpcclients/rpcclient.js
var require_rpcclient = __commonJS({
  "node_modules/@cosmjs/tendermint-rpc/build/rpcclients/rpcclient.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.hasProtocol = exports.instanceOfRpcStreamingClient = void 0;
    function instanceOfRpcStreamingClient(client) {
      return typeof client.listen === "function";
    }
    exports.instanceOfRpcStreamingClient = instanceOfRpcStreamingClient;
    function hasProtocol(url) {
      return url.search("://") !== -1;
    }
    exports.hasProtocol = hasProtocol;
  }
});

// node_modules/@cosmjs/tendermint-rpc/build/rpcclients/httpbatchclient.js
var require_httpbatchclient = __commonJS({
  "node_modules/@cosmjs/tendermint-rpc/build/rpcclients/httpbatchclient.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.HttpBatchClient = void 0;
    var json_rpc_1 = require_build9();
    var http_1 = require_http();
    var rpcclient_1 = require_rpcclient();
    var defaultHttpBatchClientOptions = {
      dispatchInterval: 20,
      batchSizeLimit: 20
    };
    var HttpBatchClient = class {
      constructor(endpoint, options = {}) {
        this.queue = [];
        this.options = {
          batchSizeLimit: options.batchSizeLimit ?? defaultHttpBatchClientOptions.batchSizeLimit,
          dispatchInterval: options.dispatchInterval ?? defaultHttpBatchClientOptions.dispatchInterval
        };
        if (typeof endpoint === "string") {
          this.url = (0, rpcclient_1.hasProtocol)(endpoint) ? endpoint : "http://" + endpoint;
        } else {
          this.url = endpoint.url;
          this.headers = endpoint.headers;
        }
        this.timer = setInterval(() => this.tick(), options.dispatchInterval);
        this.validate();
      }
      disconnect() {
        this.timer && clearInterval(this.timer);
        this.timer = void 0;
      }
      async execute(request) {
        return new Promise((resolve, reject) => {
          this.queue.push({ request, resolve, reject });
          if (this.queue.length >= this.options.batchSizeLimit) {
            this.tick();
          }
        });
      }
      validate() {
        if (!this.options.batchSizeLimit || !Number.isSafeInteger(this.options.batchSizeLimit) || this.options.batchSizeLimit < 1) {
          throw new Error("batchSizeLimit must be a safe integer >= 1");
        }
      }
      /**
       * This is called in an interval where promise rejections cannot be handled.
       * So this is not async and HTTP errors need to be handled by the queued promises.
       */
      tick() {
        const batch = this.queue.splice(0, this.options.batchSizeLimit);
        if (!batch.length)
          return;
        const requests = batch.map((s) => s.request);
        const requestIds = requests.map((request) => request.id);
        (0, http_1.http)("POST", this.url, this.headers, requests).then((raw) => {
          const arr = Array.isArray(raw) ? raw : [raw];
          arr.forEach((el) => {
            const req = batch.find((s) => s.request.id === el.id);
            if (!req)
              return;
            const { reject, resolve } = req;
            const response = (0, json_rpc_1.parseJsonRpcResponse)(el);
            if ((0, json_rpc_1.isJsonRpcErrorResponse)(response)) {
              reject(new Error(JSON.stringify(response.error)));
            } else {
              resolve(response);
            }
          });
        }, (error) => {
          for (const requestId of requestIds) {
            const req = batch.find((s) => s.request.id === requestId);
            if (!req)
              return;
            req.reject(error);
          }
        });
      }
    };
    exports.HttpBatchClient = HttpBatchClient;
  }
});

// node_modules/@cosmjs/tendermint-rpc/build/rpcclients/httpclient.js
var require_httpclient = __commonJS({
  "node_modules/@cosmjs/tendermint-rpc/build/rpcclients/httpclient.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.HttpClient = void 0;
    var json_rpc_1 = require_build9();
    var http_1 = require_http();
    var rpcclient_1 = require_rpcclient();
    var HttpClient = class {
      constructor(endpoint) {
        if (typeof endpoint === "string") {
          this.url = (0, rpcclient_1.hasProtocol)(endpoint) ? endpoint : "http://" + endpoint;
        } else {
          this.url = endpoint.url;
          this.headers = endpoint.headers;
        }
      }
      disconnect() {
      }
      async execute(request) {
        const response = (0, json_rpc_1.parseJsonRpcResponse)(await (0, http_1.http)("POST", this.url, this.headers, request));
        if ((0, json_rpc_1.isJsonRpcErrorResponse)(response)) {
          throw new Error(JSON.stringify(response.error));
        }
        return response;
      }
    };
    exports.HttpClient = HttpClient;
  }
});

// node_modules/isomorphic-ws/browser.js
var require_browser = __commonJS({
  "node_modules/isomorphic-ws/browser.js"(exports, module) {
    var ws = null;
    if (typeof WebSocket !== "undefined") {
      ws = WebSocket;
    } else if (typeof MozWebSocket !== "undefined") {
      ws = MozWebSocket;
    } else if (typeof global !== "undefined") {
      ws = global.WebSocket || global.MozWebSocket;
    } else if (typeof window !== "undefined") {
      ws = window.WebSocket || window.MozWebSocket;
    } else if (typeof self !== "undefined") {
      ws = self.WebSocket || self.MozWebSocket;
    }
    module.exports = ws;
  }
});

// node_modules/@cosmjs/socket/build/socketwrapper.js
var require_socketwrapper = __commonJS({
  "node_modules/@cosmjs/socket/build/socketwrapper.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SocketWrapper = void 0;
    var isomorphic_ws_1 = __importDefault(require_browser());
    function environmentIsNodeJs() {
      return typeof process !== "undefined" && typeof process.versions !== "undefined" && typeof process.versions.node !== "undefined";
    }
    var SocketWrapper = class {
      constructor(url, messageHandler, errorHandler, openHandler, closeHandler, timeout = 1e4) {
        this.closed = false;
        this.connected = new Promise((resolve, reject) => {
          this.connectedResolver = resolve;
          this.connectedRejecter = reject;
        });
        this.url = url;
        this.messageHandler = messageHandler;
        this.errorHandler = errorHandler;
        this.openHandler = openHandler;
        this.closeHandler = closeHandler;
        this.timeout = timeout;
      }
      /**
       * returns a promise that resolves when connection is open
       */
      connect() {
        const socket = new isomorphic_ws_1.default(this.url);
        socket.onerror = (error) => {
          this.clearTimeout();
          if (this.errorHandler) {
            this.errorHandler(error);
          }
        };
        socket.onmessage = (messageEvent) => {
          this.messageHandler({
            type: messageEvent.type,
            data: messageEvent.data
          });
        };
        socket.onopen = (_) => {
          this.clearTimeout();
          this.connectedResolver();
          if (this.openHandler) {
            this.openHandler();
          }
        };
        socket.onclose = (closeEvent) => {
          this.closed = true;
          if (this.closeHandler) {
            this.closeHandler(closeEvent);
          }
        };
        const started = Date.now();
        this.timeoutId = setTimeout(() => {
          socket.onmessage = () => 0;
          socket.onerror = () => 0;
          socket.onopen = () => 0;
          socket.onclose = () => 0;
          socket.close();
          this.socket = void 0;
          const elapsed = Math.floor(Date.now() - started);
          this.connectedRejecter(`Connection attempt timed out after ${elapsed} ms`);
        }, this.timeout);
        this.socket = socket;
      }
      /**
       * Closes an established connection and aborts other connection states
       */
      disconnect() {
        if (!this.socket) {
          throw new Error("Socket undefined. This must be called after connecting.");
        }
        this.clearTimeout();
        switch (this.socket.readyState) {
          case isomorphic_ws_1.default.OPEN:
            this.socket.close(
              1e3
              /* Normal Closure */
            );
            break;
          case isomorphic_ws_1.default.CLOSED:
            break;
          case isomorphic_ws_1.default.CONNECTING:
            this.socket.onopen = () => 0;
            this.socket.onclose = () => 0;
            this.socket.onerror = () => 0;
            this.socket.onmessage = () => 0;
            this.socket = void 0;
            if (this.closeHandler) {
              this.closeHandler({ wasClean: false, code: 4001 });
            }
            break;
          case isomorphic_ws_1.default.CLOSING:
            break;
          default:
            throw new Error(`Unknown readyState: ${this.socket.readyState}`);
        }
      }
      async send(data) {
        return new Promise((resolve, reject) => {
          if (!this.socket) {
            throw new Error("Socket undefined. This must be called after connecting.");
          }
          if (this.closed) {
            throw new Error("Socket was closed, so no data can be sent anymore.");
          }
          if (this.socket.readyState !== isomorphic_ws_1.default.OPEN) {
            throw new Error("Websocket is not open");
          }
          if (environmentIsNodeJs()) {
            this.socket.send(data, (err) => err ? reject(err) : resolve());
          } else {
            this.socket.send(data);
            resolve();
          }
        });
      }
      /**
       * Clears the timeout function, such that no timeout error will be raised anymore. This should be
       * called when the connection is established, a connection error occurred or the socket is disconnected.
       *
       * This method must not be called before `connect()`.
       * This method is idempotent.
       */
      clearTimeout() {
        if (!this.timeoutId) {
          throw new Error("Timeout ID not set. This should not happen and usually means connect() was not called.");
        }
        clearTimeout(this.timeoutId);
      }
    };
    exports.SocketWrapper = SocketWrapper;
  }
});

// node_modules/@cosmjs/socket/build/streamingsocket.js
var require_streamingsocket = __commonJS({
  "node_modules/@cosmjs/socket/build/streamingsocket.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.StreamingSocket = void 0;
    var xstream_1 = require_xstream();
    var socketwrapper_1 = require_socketwrapper();
    var StreamingSocket = class {
      constructor(url, timeout = 1e4) {
        this.socket = new socketwrapper_1.SocketWrapper(url, (event) => {
          if (this.eventProducerListener) {
            this.eventProducerListener.next(event);
          }
        }, (errorEvent) => {
          if (this.eventProducerListener) {
            this.eventProducerListener.error(errorEvent);
          }
        }, () => {
        }, (closeEvent) => {
          if (this.eventProducerListener) {
            if (closeEvent.wasClean) {
              this.eventProducerListener.complete();
            } else {
              this.eventProducerListener.error("Socket was closed unclean");
            }
          }
        }, timeout);
        this.connected = this.socket.connected;
        const eventProducer = {
          start: (listener) => this.eventProducerListener = listener,
          stop: () => this.eventProducerListener = void 0
        };
        this.events = xstream_1.Stream.create(eventProducer);
      }
      connect() {
        this.socket.connect();
      }
      disconnect() {
        this.socket.disconnect();
      }
      async send(data) {
        return this.socket.send(data);
      }
    };
    exports.StreamingSocket = StreamingSocket;
  }
});

// node_modules/@cosmjs/socket/build/queueingstreamingsocket.js
var require_queueingstreamingsocket = __commonJS({
  "node_modules/@cosmjs/socket/build/queueingstreamingsocket.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.QueueingStreamingSocket = exports.ConnectionStatus = void 0;
    var stream_1 = require_build8();
    var xstream_1 = require_xstream();
    var streamingsocket_1 = require_streamingsocket();
    var ConnectionStatus;
    (function(ConnectionStatus2) {
      ConnectionStatus2[ConnectionStatus2["Unconnected"] = 0] = "Unconnected";
      ConnectionStatus2[ConnectionStatus2["Connecting"] = 1] = "Connecting";
      ConnectionStatus2[ConnectionStatus2["Connected"] = 2] = "Connected";
      ConnectionStatus2[ConnectionStatus2["Disconnected"] = 3] = "Disconnected";
    })(ConnectionStatus = exports.ConnectionStatus || (exports.ConnectionStatus = {}));
    var QueueingStreamingSocket = class {
      constructor(url, timeout = 1e4, reconnectedHandler) {
        this.queue = [];
        this.isProcessingQueue = false;
        this.url = url;
        this.timeout = timeout;
        this.reconnectedHandler = reconnectedHandler;
        const eventProducer = {
          start: (listener) => this.eventProducerListener = listener,
          stop: () => this.eventProducerListener = void 0
        };
        this.events = xstream_1.Stream.create(eventProducer);
        this.connectionStatusProducer = new stream_1.DefaultValueProducer(ConnectionStatus.Unconnected);
        this.connectionStatus = new stream_1.ValueAndUpdates(this.connectionStatusProducer);
        this.socket = new streamingsocket_1.StreamingSocket(this.url, this.timeout);
        this.socket.events.subscribe({
          next: (event) => {
            if (!this.eventProducerListener)
              throw new Error("No event producer listener set");
            this.eventProducerListener.next(event);
          },
          error: () => this.connectionStatusProducer.update(ConnectionStatus.Disconnected)
        });
      }
      connect() {
        this.connectionStatusProducer.update(ConnectionStatus.Connecting);
        this.socket.connected.then(async () => {
          this.connectionStatusProducer.update(ConnectionStatus.Connected);
          return this.processQueue();
        }, () => this.connectionStatusProducer.update(ConnectionStatus.Disconnected));
        this.socket.connect();
      }
      disconnect() {
        this.connectionStatusProducer.update(ConnectionStatus.Disconnected);
        this.socket.disconnect();
      }
      reconnect() {
        this.socket = new streamingsocket_1.StreamingSocket(this.url, this.timeout);
        this.socket.events.subscribe({
          next: (event) => {
            if (!this.eventProducerListener)
              throw new Error("No event producer listener set");
            this.eventProducerListener.next(event);
          },
          error: () => this.connectionStatusProducer.update(ConnectionStatus.Disconnected)
        });
        this.socket.connected.then(() => {
          if (this.reconnectedHandler) {
            this.reconnectedHandler();
          }
        });
        this.connect();
      }
      getQueueLength() {
        return this.queue.length;
      }
      queueRequest(request) {
        this.queue.push(request);
        this.processQueue();
      }
      async processQueue() {
        if (this.isProcessingQueue || this.connectionStatus.value !== ConnectionStatus.Connected) {
          return;
        }
        this.isProcessingQueue = true;
        let request;
        while (request = this.queue.shift()) {
          try {
            await this.socket.send(request);
            this.isProcessingQueue = false;
          } catch (error) {
            this.queue.unshift(request);
            this.isProcessingQueue = false;
            return;
          }
        }
      }
    };
    exports.QueueingStreamingSocket = QueueingStreamingSocket;
  }
});

// node_modules/@cosmjs/socket/build/reconnectingsocket.js
var require_reconnectingsocket = __commonJS({
  "node_modules/@cosmjs/socket/build/reconnectingsocket.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ReconnectingSocket = void 0;
    var xstream_1 = require_xstream();
    var queueingstreamingsocket_1 = require_queueingstreamingsocket();
    var ReconnectingSocket = class _ReconnectingSocket {
      constructor(url, timeout = 1e4, reconnectedHandler) {
        this.unconnected = true;
        this.disconnected = false;
        this.timeoutIndex = 0;
        this.reconnectTimeout = null;
        const eventProducer = {
          start: (listener) => this.eventProducerListener = listener,
          stop: () => this.eventProducerListener = void 0
        };
        this.events = xstream_1.Stream.create(eventProducer);
        this.socket = new queueingstreamingsocket_1.QueueingStreamingSocket(url, timeout, reconnectedHandler);
        this.socket.events.subscribe({
          next: (event) => {
            if (this.eventProducerListener) {
              this.eventProducerListener.next(event);
            }
          },
          error: (error) => {
            if (this.eventProducerListener) {
              this.eventProducerListener.error(error);
            }
          }
        });
        this.connectionStatus = this.socket.connectionStatus;
        this.connectionStatus.updates.subscribe({
          next: (status) => {
            if (status === queueingstreamingsocket_1.ConnectionStatus.Connected) {
              this.timeoutIndex = 0;
            }
            if (status === queueingstreamingsocket_1.ConnectionStatus.Disconnected) {
              if (this.reconnectTimeout) {
                clearTimeout(this.reconnectTimeout);
                this.reconnectTimeout = null;
              }
              this.reconnectTimeout = setTimeout(() => this.socket.reconnect(), _ReconnectingSocket.calculateTimeout(this.timeoutIndex++));
            }
          }
        });
      }
      /** Starts with a 0.1 second timeout, then doubles every attempt with a maximum timeout of 5 seconds. */
      static calculateTimeout(index) {
        return Math.min(2 ** index * 100, 5e3);
      }
      connect() {
        if (!this.unconnected) {
          throw new Error("Cannot connect: socket has already connected");
        }
        this.socket.connect();
        this.unconnected = false;
      }
      disconnect() {
        if (this.unconnected) {
          throw new Error("Cannot disconnect: socket has not yet connected");
        }
        this.socket.disconnect();
        if (this.eventProducerListener) {
          this.eventProducerListener.complete();
        }
        this.disconnected = true;
      }
      queueRequest(request) {
        if (this.disconnected) {
          throw new Error("Cannot queue request: socket has disconnected");
        }
        this.socket.queueRequest(request);
      }
    };
    exports.ReconnectingSocket = ReconnectingSocket;
  }
});

// node_modules/@cosmjs/socket/build/index.js
var require_build10 = __commonJS({
  "node_modules/@cosmjs/socket/build/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.StreamingSocket = exports.SocketWrapper = exports.ReconnectingSocket = exports.QueueingStreamingSocket = exports.ConnectionStatus = void 0;
    var queueingstreamingsocket_1 = require_queueingstreamingsocket();
    Object.defineProperty(exports, "ConnectionStatus", { enumerable: true, get: function() {
      return queueingstreamingsocket_1.ConnectionStatus;
    } });
    Object.defineProperty(exports, "QueueingStreamingSocket", { enumerable: true, get: function() {
      return queueingstreamingsocket_1.QueueingStreamingSocket;
    } });
    var reconnectingsocket_1 = require_reconnectingsocket();
    Object.defineProperty(exports, "ReconnectingSocket", { enumerable: true, get: function() {
      return reconnectingsocket_1.ReconnectingSocket;
    } });
    var socketwrapper_1 = require_socketwrapper();
    Object.defineProperty(exports, "SocketWrapper", { enumerable: true, get: function() {
      return socketwrapper_1.SocketWrapper;
    } });
    var streamingsocket_1 = require_streamingsocket();
    Object.defineProperty(exports, "StreamingSocket", { enumerable: true, get: function() {
      return streamingsocket_1.StreamingSocket;
    } });
  }
});

// node_modules/@cosmjs/tendermint-rpc/build/rpcclients/websocketclient.js
var require_websocketclient = __commonJS({
  "node_modules/@cosmjs/tendermint-rpc/build/rpcclients/websocketclient.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.WebsocketClient = void 0;
    var json_rpc_1 = require_build9();
    var socket_1 = require_build10();
    var stream_1 = require_build8();
    var xstream_1 = require_xstream();
    var rpcclient_1 = require_rpcclient();
    function defaultErrorHandler(error) {
      throw error;
    }
    function toJsonRpcResponse(message) {
      if (message.type !== "message") {
        throw new Error(`Unexcepted message type on websocket: ${message.type}`);
      }
      const jsonRpcEvent = (0, json_rpc_1.parseJsonRpcResponse)(JSON.parse(message.data));
      return jsonRpcEvent;
    }
    var RpcEventProducer = class {
      constructor(request, socket) {
        this.running = false;
        this.subscriptions = [];
        this.request = request;
        this.socket = socket;
      }
      /**
       * Implementation of Producer.start
       */
      start(listener) {
        if (this.running) {
          throw Error("Already started. Please stop first before restarting.");
        }
        this.running = true;
        this.connectToClient(listener);
        this.socket.queueRequest(JSON.stringify(this.request));
      }
      /**
       * Implementation of Producer.stop
       *
       * Called by the stream when the stream's last listener stopped listening
       * or when the producer completed.
       */
      stop() {
        this.running = false;
        const endRequest = { ...this.request, method: "unsubscribe" };
        try {
          this.socket.queueRequest(JSON.stringify(endRequest));
        } catch (error) {
          if (error instanceof Error && error.message.match(/socket has disconnected/i)) {
          } else {
            throw error;
          }
        }
      }
      connectToClient(listener) {
        const responseStream = this.socket.events.map(toJsonRpcResponse);
        const idSubscription = responseStream.filter((response) => response.id === this.request.id).subscribe({
          next: (response) => {
            if ((0, json_rpc_1.isJsonRpcErrorResponse)(response)) {
              this.closeSubscriptions();
              listener.error(JSON.stringify(response.error));
            }
            idSubscription.unsubscribe();
          }
        });
        const idEventSubscription = responseStream.filter((response) => response.id === this.request.id).subscribe({
          next: (response) => {
            if ((0, json_rpc_1.isJsonRpcErrorResponse)(response)) {
              this.closeSubscriptions();
              listener.error(JSON.stringify(response.error));
            } else {
              listener.next(response.result);
            }
          }
        });
        const nonResponseSubscription = responseStream.subscribe({
          error: (error) => {
            this.closeSubscriptions();
            listener.error(error);
          },
          complete: () => {
            this.closeSubscriptions();
            listener.complete();
          }
        });
        this.subscriptions.push(idSubscription, idEventSubscription, nonResponseSubscription);
      }
      closeSubscriptions() {
        for (const subscription of this.subscriptions) {
          subscription.unsubscribe();
        }
        this.subscriptions = [];
      }
    };
    var WebsocketClient = class {
      constructor(baseUrl, onError = defaultErrorHandler) {
        this.subscriptionStreams = /* @__PURE__ */ new Map();
        const path = baseUrl.endsWith("/") ? "websocket" : "/websocket";
        const cleanBaseUrl = (0, rpcclient_1.hasProtocol)(baseUrl) ? baseUrl : "ws://" + baseUrl;
        this.url = cleanBaseUrl + path;
        this.socket = new socket_1.ReconnectingSocket(this.url);
        const errorSubscription = this.socket.events.subscribe({
          error: (error) => {
            onError(error);
            errorSubscription.unsubscribe();
          }
        });
        this.jsonRpcResponseStream = this.socket.events.map(toJsonRpcResponse);
        this.socket.connect();
      }
      async execute(request) {
        const pendingResponse = this.responseForRequestId(request.id);
        this.socket.queueRequest(JSON.stringify(request));
        const response = await pendingResponse;
        if ((0, json_rpc_1.isJsonRpcErrorResponse)(response)) {
          throw new Error(JSON.stringify(response.error));
        }
        return response;
      }
      listen(request) {
        if (request.method !== "subscribe") {
          throw new Error(`Request method must be "subscribe" to start event listening`);
        }
        const query = request.params.query;
        if (typeof query !== "string") {
          throw new Error("request.params.query must be a string");
        }
        if (!this.subscriptionStreams.has(query)) {
          const producer = new RpcEventProducer(request, this.socket);
          const stream = xstream_1.Stream.create(producer);
          this.subscriptionStreams.set(query, stream);
        }
        return this.subscriptionStreams.get(query).filter((response) => response.query !== void 0);
      }
      /**
       * Resolves as soon as websocket is connected. execute() queues requests automatically,
       * so this should be required for testing purposes only.
       */
      async connected() {
        await this.socket.connectionStatus.waitFor(socket_1.ConnectionStatus.Connected);
      }
      disconnect() {
        this.socket.disconnect();
      }
      async responseForRequestId(id) {
        return (0, stream_1.firstEvent)(this.jsonRpcResponseStream.filter((r) => r.id === id));
      }
    };
    exports.WebsocketClient = WebsocketClient;
  }
});

// node_modules/@cosmjs/tendermint-rpc/build/rpcclients/index.js
var require_rpcclients = __commonJS({
  "node_modules/@cosmjs/tendermint-rpc/build/rpcclients/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.WebsocketClient = exports.instanceOfRpcStreamingClient = exports.HttpClient = exports.HttpBatchClient = void 0;
    var httpbatchclient_1 = require_httpbatchclient();
    Object.defineProperty(exports, "HttpBatchClient", { enumerable: true, get: function() {
      return httpbatchclient_1.HttpBatchClient;
    } });
    var httpclient_1 = require_httpclient();
    Object.defineProperty(exports, "HttpClient", { enumerable: true, get: function() {
      return httpclient_1.HttpClient;
    } });
    var rpcclient_1 = require_rpcclient();
    Object.defineProperty(exports, "instanceOfRpcStreamingClient", { enumerable: true, get: function() {
      return rpcclient_1.instanceOfRpcStreamingClient;
    } });
    var websocketclient_1 = require_websocketclient();
    Object.defineProperty(exports, "WebsocketClient", { enumerable: true, get: function() {
      return websocketclient_1.WebsocketClient;
    } });
  }
});

// node_modules/@cosmjs/tendermint-rpc/build/tendermint34/requests.js
var require_requests = __commonJS({
  "node_modules/@cosmjs/tendermint-rpc/build/tendermint34/requests.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.buildQuery = exports.SubscriptionEventType = exports.Method = void 0;
    var Method;
    (function(Method2) {
      Method2["AbciInfo"] = "abci_info";
      Method2["AbciQuery"] = "abci_query";
      Method2["Block"] = "block";
      Method2["Blockchain"] = "blockchain";
      Method2["BlockResults"] = "block_results";
      Method2["BlockSearch"] = "block_search";
      Method2["BroadcastTxAsync"] = "broadcast_tx_async";
      Method2["BroadcastTxSync"] = "broadcast_tx_sync";
      Method2["BroadcastTxCommit"] = "broadcast_tx_commit";
      Method2["Commit"] = "commit";
      Method2["Genesis"] = "genesis";
      Method2["Health"] = "health";
      Method2["NumUnconfirmedTxs"] = "num_unconfirmed_txs";
      Method2["Status"] = "status";
      Method2["Subscribe"] = "subscribe";
      Method2["Tx"] = "tx";
      Method2["TxSearch"] = "tx_search";
      Method2["Validators"] = "validators";
      Method2["Unsubscribe"] = "unsubscribe";
    })(Method = exports.Method || (exports.Method = {}));
    var SubscriptionEventType;
    (function(SubscriptionEventType2) {
      SubscriptionEventType2["NewBlock"] = "NewBlock";
      SubscriptionEventType2["NewBlockHeader"] = "NewBlockHeader";
      SubscriptionEventType2["Tx"] = "Tx";
    })(SubscriptionEventType = exports.SubscriptionEventType || (exports.SubscriptionEventType = {}));
    function buildQuery(components) {
      const tags = components.tags ? components.tags : [];
      const tagComponents = tags.map((tag) => `${tag.key}='${tag.value}'`);
      const rawComponents = components.raw ? [components.raw] : [];
      return [...tagComponents, ...rawComponents].join(" AND ");
    }
    exports.buildQuery = buildQuery;
  }
});

// node_modules/@cosmjs/tendermint-rpc/build/tendermint34/responses.js
var require_responses = __commonJS({
  "node_modules/@cosmjs/tendermint-rpc/build/tendermint34/responses.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.VoteType = exports.broadcastTxCommitSuccess = exports.broadcastTxSyncSuccess = void 0;
    function broadcastTxSyncSuccess(res) {
      return res.code === 0;
    }
    exports.broadcastTxSyncSuccess = broadcastTxSyncSuccess;
    function broadcastTxCommitSuccess(response) {
      return response.checkTx.code === 0 && !!response.deliverTx && response.deliverTx.code === 0;
    }
    exports.broadcastTxCommitSuccess = broadcastTxCommitSuccess;
    var VoteType;
    (function(VoteType2) {
      VoteType2[VoteType2["PreVote"] = 1] = "PreVote";
      VoteType2[VoteType2["PreCommit"] = 2] = "PreCommit";
    })(VoteType = exports.VoteType || (exports.VoteType = {}));
  }
});

// node_modules/@cosmjs/tendermint-rpc/build/jsonrpc.js
var require_jsonrpc = __commonJS({
  "node_modules/@cosmjs/tendermint-rpc/build/jsonrpc.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createJsonRpcRequest = void 0;
    var numbersWithoutZero = "123456789";
    function randomNumericChar() {
      return numbersWithoutZero[Math.floor(Math.random() * numbersWithoutZero.length)];
    }
    function randomId() {
      return parseInt(Array.from({ length: 12 }).map(() => randomNumericChar()).join(""), 10);
    }
    function createJsonRpcRequest(method, params) {
      const paramsCopy = params ? { ...params } : {};
      return {
        jsonrpc: "2.0",
        id: randomId(),
        method,
        params: paramsCopy
      };
    }
    exports.createJsonRpcRequest = createJsonRpcRequest;
  }
});

// node_modules/@cosmjs/tendermint-rpc/build/tendermint34/encodings.js
var require_encodings = __commonJS({
  "node_modules/@cosmjs/tendermint-rpc/build/tendermint34/encodings.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.encodeBlockId = exports.encodeVersion = exports.encodeBytes = exports.encodeTime = exports.encodeUvarint = exports.encodeString = exports.dictionaryToStringMap = exports.may = exports.assertNotEmpty = exports.assertObject = exports.assertArray = exports.assertNumber = exports.assertString = exports.assertBoolean = exports.assertSet = void 0;
    var encoding_1 = require_build2();
    function assertSet(value) {
      if (value === void 0) {
        throw new Error("Value must not be undefined");
      }
      if (value === null) {
        throw new Error("Value must not be null");
      }
      return value;
    }
    exports.assertSet = assertSet;
    function assertBoolean(value) {
      assertSet(value);
      if (typeof value !== "boolean") {
        throw new Error("Value must be a boolean");
      }
      return value;
    }
    exports.assertBoolean = assertBoolean;
    function assertString(value) {
      assertSet(value);
      if (typeof value !== "string") {
        throw new Error("Value must be a string");
      }
      return value;
    }
    exports.assertString = assertString;
    function assertNumber(value) {
      assertSet(value);
      if (typeof value !== "number") {
        throw new Error("Value must be a number");
      }
      return value;
    }
    exports.assertNumber = assertNumber;
    function assertArray(value) {
      assertSet(value);
      if (!Array.isArray(value)) {
        throw new Error("Value must be a an array");
      }
      return value;
    }
    exports.assertArray = assertArray;
    function assertObject(value) {
      assertSet(value);
      if (typeof value !== "object") {
        throw new Error("Value must be an object");
      }
      if (Object.prototype.toString.call(value) !== "[object Object]") {
        throw new Error("Value must be a simple object");
      }
      return value;
    }
    exports.assertObject = assertObject;
    function assertNotEmpty(value) {
      assertSet(value);
      if (typeof value === "number" && value === 0) {
        throw new Error("must provide a non-zero value");
      } else if (value.length === 0) {
        throw new Error("must provide a non-empty value");
      }
      return value;
    }
    exports.assertNotEmpty = assertNotEmpty;
    function may(transform, value) {
      return value === void 0 || value === null ? void 0 : transform(value);
    }
    exports.may = may;
    function dictionaryToStringMap(obj) {
      const out = /* @__PURE__ */ new Map();
      for (const key of Object.keys(obj)) {
        const value = obj[key];
        if (typeof value !== "string") {
          throw new Error("Found dictionary value of type other than string");
        }
        out.set(key, value);
      }
      return out;
    }
    exports.dictionaryToStringMap = dictionaryToStringMap;
    function encodeString(s) {
      const utf8 = (0, encoding_1.toUtf8)(s);
      return Uint8Array.from([utf8.length, ...utf8]);
    }
    exports.encodeString = encodeString;
    function encodeUvarint(n) {
      return n >= 128 ? (
        // eslint-disable-next-line no-bitwise
        Uint8Array.from([n & 255 | 128, ...encodeUvarint(n >> 7)])
      ) : (
        // eslint-disable-next-line no-bitwise
        Uint8Array.from([n & 255])
      );
    }
    exports.encodeUvarint = encodeUvarint;
    function encodeTime(time) {
      const milliseconds = time.getTime();
      const seconds = Math.floor(milliseconds / 1e3);
      const secondsArray = seconds ? [8, ...encodeUvarint(seconds)] : new Uint8Array();
      const nanoseconds = (time.nanoseconds || 0) + milliseconds % 1e3 * 1e6;
      const nanosecondsArray = nanoseconds ? [16, ...encodeUvarint(nanoseconds)] : new Uint8Array();
      return Uint8Array.from([...secondsArray, ...nanosecondsArray]);
    }
    exports.encodeTime = encodeTime;
    function encodeBytes(bytes) {
      if (bytes.length >= 128)
        throw new Error("Not implemented for byte arrays of length 128 or more");
      return bytes.length ? Uint8Array.from([bytes.length, ...bytes]) : new Uint8Array();
    }
    exports.encodeBytes = encodeBytes;
    function encodeVersion(version) {
      const blockArray = version.block ? Uint8Array.from([8, ...encodeUvarint(version.block)]) : new Uint8Array();
      const appArray = version.app ? Uint8Array.from([16, ...encodeUvarint(version.app)]) : new Uint8Array();
      return Uint8Array.from([...blockArray, ...appArray]);
    }
    exports.encodeVersion = encodeVersion;
    function encodeBlockId(blockId) {
      return Uint8Array.from([
        10,
        blockId.hash.length,
        ...blockId.hash,
        18,
        blockId.parts.hash.length + 4,
        8,
        blockId.parts.total,
        18,
        blockId.parts.hash.length,
        ...blockId.parts.hash
      ]);
    }
    exports.encodeBlockId = encodeBlockId;
  }
});

// node_modules/@cosmjs/tendermint-rpc/build/tendermint34/hasher.js
var require_hasher = __commonJS({
  "node_modules/@cosmjs/tendermint-rpc/build/tendermint34/hasher.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.hashBlock = exports.hashTx = void 0;
    var crypto_1 = require_build4();
    var encodings_1 = require_encodings();
    function hashTx(tx) {
      return (0, crypto_1.sha256)(tx);
    }
    exports.hashTx = hashTx;
    function getSplitPoint(n) {
      if (n < 1)
        throw new Error("Cannot split an empty tree");
      const largestPowerOf2 = 2 ** Math.floor(Math.log2(n));
      return largestPowerOf2 < n ? largestPowerOf2 : largestPowerOf2 / 2;
    }
    function hashLeaf(leaf) {
      const hash = new crypto_1.Sha256(Uint8Array.from([0]));
      hash.update(leaf);
      return hash.digest();
    }
    function hashInner(left, right) {
      const hash = new crypto_1.Sha256(Uint8Array.from([1]));
      hash.update(left);
      hash.update(right);
      return hash.digest();
    }
    function hashTree(hashes) {
      switch (hashes.length) {
        case 0:
          throw new Error("Cannot hash empty tree");
        case 1:
          return hashLeaf(hashes[0]);
        default: {
          const slicePoint = getSplitPoint(hashes.length);
          const left = hashTree(hashes.slice(0, slicePoint));
          const right = hashTree(hashes.slice(slicePoint));
          return hashInner(left, right);
        }
      }
    }
    function hashBlock(header) {
      if (!header.lastBlockId) {
        throw new Error("Hashing a block header with no last block ID (i.e. header at height 1) is not supported. If you need this, contributions are welcome. Please add documentation and test vectors for this case.");
      }
      const encodedFields = [
        (0, encodings_1.encodeVersion)(header.version),
        (0, encodings_1.encodeString)(header.chainId),
        (0, encodings_1.encodeUvarint)(header.height),
        (0, encodings_1.encodeTime)(header.time),
        (0, encodings_1.encodeBlockId)(header.lastBlockId),
        (0, encodings_1.encodeBytes)(header.lastCommitHash),
        (0, encodings_1.encodeBytes)(header.dataHash),
        (0, encodings_1.encodeBytes)(header.validatorsHash),
        (0, encodings_1.encodeBytes)(header.nextValidatorsHash),
        (0, encodings_1.encodeBytes)(header.consensusHash),
        (0, encodings_1.encodeBytes)(header.appHash),
        (0, encodings_1.encodeBytes)(header.lastResultsHash),
        (0, encodings_1.encodeBytes)(header.evidenceHash),
        (0, encodings_1.encodeBytes)(header.proposerAddress)
      ];
      return hashTree(encodedFields);
    }
    exports.hashBlock = hashBlock;
  }
});

// node_modules/@cosmjs/tendermint-rpc/build/inthelpers.js
var require_inthelpers = __commonJS({
  "node_modules/@cosmjs/tendermint-rpc/build/inthelpers.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.smallIntToApi = exports.apiToBigInt = exports.apiToSmallInt = void 0;
    var math_1 = require_build();
    var encodings_1 = require_encodings();
    function apiToSmallInt(input) {
      const asInt = typeof input === "number" ? new math_1.Int53(input) : math_1.Int53.fromString(input);
      return asInt.toNumber();
    }
    exports.apiToSmallInt = apiToSmallInt;
    function apiToBigInt(input) {
      (0, encodings_1.assertString)(input);
      if (!input.match(/^-?[0-9]+$/)) {
        throw new Error("Invalid string format");
      }
      return BigInt(input);
    }
    exports.apiToBigInt = apiToBigInt;
    function smallIntToApi(num) {
      return new math_1.Int53(num).toString();
    }
    exports.smallIntToApi = smallIntToApi;
  }
});

// node_modules/@cosmjs/tendermint-rpc/build/tendermint34/adaptor/requests.js
var require_requests2 = __commonJS({
  "node_modules/@cosmjs/tendermint-rpc/build/tendermint34/adaptor/requests.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Params = void 0;
    var encoding_1 = require_build2();
    var inthelpers_1 = require_inthelpers();
    var jsonrpc_1 = require_jsonrpc();
    var encodings_1 = require_encodings();
    var requests = __importStar(require_requests());
    function encodeHeightParam(param) {
      return {
        height: (0, encodings_1.may)(inthelpers_1.smallIntToApi, param.height)
      };
    }
    function encodeBlockchainRequestParams(param) {
      return {
        minHeight: (0, encodings_1.may)(inthelpers_1.smallIntToApi, param.minHeight),
        maxHeight: (0, encodings_1.may)(inthelpers_1.smallIntToApi, param.maxHeight)
      };
    }
    function encodeBlockSearchParams(params) {
      return {
        query: params.query,
        page: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.page),
        per_page: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.per_page),
        order_by: params.order_by
      };
    }
    function encodeAbciQueryParams(params) {
      return {
        path: (0, encodings_1.assertNotEmpty)(params.path),
        data: (0, encoding_1.toHex)(params.data),
        height: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.height),
        prove: params.prove
      };
    }
    function encodeBroadcastTxParams(params) {
      return {
        tx: (0, encoding_1.toBase64)((0, encodings_1.assertNotEmpty)(params.tx))
      };
    }
    function encodeTxParams(params) {
      return {
        hash: (0, encoding_1.toBase64)((0, encodings_1.assertNotEmpty)(params.hash)),
        prove: params.prove
      };
    }
    function encodeTxSearchParams(params) {
      return {
        query: params.query,
        prove: params.prove,
        page: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.page),
        per_page: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.per_page),
        order_by: params.order_by
      };
    }
    function encodeValidatorsParams(params) {
      return {
        height: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.height),
        page: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.page),
        per_page: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.per_page)
      };
    }
    var Params = class {
      static encodeAbciInfo(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method);
      }
      static encodeAbciQuery(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeAbciQueryParams(req.params));
      }
      static encodeBlock(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeHeightParam(req.params));
      }
      static encodeBlockchain(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeBlockchainRequestParams(req.params));
      }
      static encodeBlockResults(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeHeightParam(req.params));
      }
      static encodeBlockSearch(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeBlockSearchParams(req.params));
      }
      static encodeBroadcastTx(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeBroadcastTxParams(req.params));
      }
      static encodeCommit(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeHeightParam(req.params));
      }
      static encodeGenesis(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method);
      }
      static encodeHealth(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method);
      }
      static encodeNumUnconfirmedTxs(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method);
      }
      static encodeStatus(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method);
      }
      static encodeSubscribe(req) {
        const eventTag = { key: "tm.event", value: req.query.type };
        const query = requests.buildQuery({ tags: [eventTag], raw: req.query.raw });
        return (0, jsonrpc_1.createJsonRpcRequest)("subscribe", { query });
      }
      static encodeTx(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeTxParams(req.params));
      }
      // TODO: encode params for query string???
      static encodeTxSearch(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeTxSearchParams(req.params));
      }
      static encodeValidators(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeValidatorsParams(req.params));
      }
    };
    exports.Params = Params;
  }
});

// node_modules/@cosmjs/tendermint-rpc/build/types.js
var require_types5 = __commonJS({
  "node_modules/@cosmjs/tendermint-rpc/build/types.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BlockIdFlag = void 0;
    var BlockIdFlag;
    (function(BlockIdFlag2) {
      BlockIdFlag2[BlockIdFlag2["Unknown"] = 0] = "Unknown";
      BlockIdFlag2[BlockIdFlag2["Absent"] = 1] = "Absent";
      BlockIdFlag2[BlockIdFlag2["Commit"] = 2] = "Commit";
      BlockIdFlag2[BlockIdFlag2["Nil"] = 3] = "Nil";
      BlockIdFlag2[BlockIdFlag2["Unrecognized"] = -1] = "Unrecognized";
    })(BlockIdFlag = exports.BlockIdFlag || (exports.BlockIdFlag = {}));
  }
});

// node_modules/@cosmjs/tendermint-rpc/build/tendermint34/adaptor/responses.js
var require_responses2 = __commonJS({
  "node_modules/@cosmjs/tendermint-rpc/build/tendermint34/adaptor/responses.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Responses = exports.decodeValidatorInfo = exports.decodeValidatorGenesis = exports.decodeValidatorUpdate = exports.decodeEvent = void 0;
    var encoding_1 = require_build2();
    var utils_1 = require_build3();
    var dates_1 = require_dates();
    var inthelpers_1 = require_inthelpers();
    var types_1 = require_types5();
    var encodings_1 = require_encodings();
    var hasher_1 = require_hasher();
    function decodeAbciInfo(data) {
      return {
        data: data.data,
        lastBlockHeight: (0, encodings_1.may)(inthelpers_1.apiToSmallInt, data.last_block_height),
        lastBlockAppHash: (0, encodings_1.may)(encoding_1.fromBase64, data.last_block_app_hash)
      };
    }
    function decodeQueryProof(data) {
      return {
        ops: data.ops.map((op) => ({
          type: op.type,
          key: (0, encoding_1.fromBase64)(op.key),
          data: (0, encoding_1.fromBase64)(op.data)
        }))
      };
    }
    function decodeAbciQuery(data) {
      return {
        key: (0, encoding_1.fromBase64)((0, encodings_1.assertString)(data.key ?? "")),
        value: (0, encoding_1.fromBase64)((0, encodings_1.assertString)(data.value ?? "")),
        proof: (0, encodings_1.may)(decodeQueryProof, data.proofOps),
        height: (0, encodings_1.may)(inthelpers_1.apiToSmallInt, data.height),
        code: (0, encodings_1.may)(inthelpers_1.apiToSmallInt, data.code),
        codespace: (0, encodings_1.assertString)(data.codespace ?? ""),
        index: (0, encodings_1.may)(inthelpers_1.apiToSmallInt, data.index),
        log: data.log,
        info: (0, encodings_1.assertString)(data.info ?? "")
      };
    }
    function decodeAttribute(attribute) {
      return {
        key: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(attribute.key)),
        value: (0, encoding_1.fromBase64)((0, encodings_1.assertString)(attribute.value ?? ""))
      };
    }
    function decodeAttributes(attributes) {
      return (0, encodings_1.assertArray)(attributes).map(decodeAttribute);
    }
    function decodeEvent(event) {
      return {
        type: event.type,
        attributes: event.attributes ? decodeAttributes(event.attributes) : []
      };
    }
    exports.decodeEvent = decodeEvent;
    function decodeEvents(events) {
      return (0, encodings_1.assertArray)(events).map(decodeEvent);
    }
    function decodeTxData(data) {
      return {
        code: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNumber)(data.code ?? 0)),
        codespace: data.codespace,
        log: data.log,
        data: (0, encodings_1.may)(encoding_1.fromBase64, data.data),
        events: data.events ? decodeEvents(data.events) : [],
        gasWanted: (0, inthelpers_1.apiToSmallInt)(data.gas_wanted ?? "0"),
        gasUsed: (0, inthelpers_1.apiToSmallInt)(data.gas_used ?? "0")
      };
    }
    function decodePubkey(data) {
      if ("Sum" in data) {
        const [[algorithm, value]] = Object.entries(data.Sum.value);
        (0, utils_1.assert)(algorithm === "ed25519" || algorithm === "secp256k1", `unknown pubkey type: ${algorithm}`);
        return {
          algorithm,
          data: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(value))
        };
      } else {
        switch (data.type) {
          case "tendermint/PubKeyEd25519":
            return {
              algorithm: "ed25519",
              data: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(data.value))
            };
          case "tendermint/PubKeySecp256k1":
            return {
              algorithm: "secp256k1",
              data: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(data.value))
            };
          default:
            throw new Error(`unknown pubkey type: ${data.type}`);
        }
      }
    }
    function decodeBlockParams(data) {
      return {
        maxBytes: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.max_bytes)),
        maxGas: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.max_gas))
      };
    }
    function decodeEvidenceParams(data) {
      return {
        maxAgeNumBlocks: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.max_age_num_blocks)),
        maxAgeDuration: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.max_age_duration))
      };
    }
    function decodeConsensusParams(data) {
      return {
        block: decodeBlockParams((0, encodings_1.assertObject)(data.block)),
        evidence: decodeEvidenceParams((0, encodings_1.assertObject)(data.evidence))
      };
    }
    function decodeValidatorUpdate(data) {
      return {
        pubkey: decodePubkey((0, encodings_1.assertObject)(data.pub_key)),
        votingPower: (0, inthelpers_1.apiToBigInt)(data.power ?? "0")
      };
    }
    exports.decodeValidatorUpdate = decodeValidatorUpdate;
    function decodeBlockResults(data) {
      return {
        height: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.height)),
        results: (data.txs_results || []).map(decodeTxData),
        validatorUpdates: (data.validator_updates || []).map(decodeValidatorUpdate),
        consensusUpdates: (0, encodings_1.may)(decodeConsensusParams, data.consensus_param_updates),
        beginBlockEvents: decodeEvents(data.begin_block_events || []),
        endBlockEvents: decodeEvents(data.end_block_events || [])
      };
    }
    function decodeBlockId(data) {
      return {
        hash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.hash)),
        parts: {
          total: (0, encodings_1.assertNotEmpty)(data.parts.total),
          hash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.parts.hash))
        }
      };
    }
    function decodeBlockVersion(data) {
      return {
        block: (0, inthelpers_1.apiToSmallInt)(data.block),
        app: (0, inthelpers_1.apiToSmallInt)(data.app ?? 0)
      };
    }
    function decodeHeader(data) {
      return {
        version: decodeBlockVersion(data.version),
        chainId: (0, encodings_1.assertNotEmpty)(data.chain_id),
        height: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.height)),
        time: (0, dates_1.fromRfc3339WithNanoseconds)((0, encodings_1.assertNotEmpty)(data.time)),
        // When there is no last block ID (i.e. this block's height is 1), we get an empty structure like this:
        // { hash: '', parts: { total: 0, hash: '' } }
        lastBlockId: data.last_block_id.hash ? decodeBlockId(data.last_block_id) : null,
        lastCommitHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.last_commit_hash)),
        dataHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.data_hash)),
        validatorsHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.validators_hash)),
        nextValidatorsHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.next_validators_hash)),
        consensusHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.consensus_hash)),
        appHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.app_hash)),
        lastResultsHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.last_results_hash)),
        evidenceHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.evidence_hash)),
        proposerAddress: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.proposer_address))
      };
    }
    function decodeBlockMeta(data) {
      return {
        blockId: decodeBlockId(data.block_id),
        blockSize: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.block_size)),
        header: decodeHeader(data.header),
        numTxs: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.num_txs))
      };
    }
    function decodeBlockchain(data) {
      return {
        lastHeight: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.last_height)),
        blockMetas: (0, encodings_1.assertArray)(data.block_metas).map(decodeBlockMeta)
      };
    }
    function decodeBroadcastTxSync(data) {
      return {
        ...decodeTxData(data),
        hash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.hash))
      };
    }
    function decodeBroadcastTxCommit(data) {
      return {
        height: (0, inthelpers_1.apiToSmallInt)(data.height),
        hash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.hash)),
        checkTx: decodeTxData((0, encodings_1.assertObject)(data.check_tx)),
        deliverTx: (0, encodings_1.may)(decodeTxData, data.deliver_tx)
      };
    }
    function decodeBlockIdFlag(blockIdFlag) {
      (0, utils_1.assert)(blockIdFlag in types_1.BlockIdFlag);
      return blockIdFlag;
    }
    function decodeOptionalTime(timestamp) {
      const nonZeroTime = timestamp && !timestamp.startsWith("0001-01-01");
      return nonZeroTime ? (0, dates_1.fromRfc3339WithNanoseconds)(timestamp) : void 0;
    }
    function decodeCommitSignature(data) {
      return {
        blockIdFlag: decodeBlockIdFlag(data.block_id_flag),
        validatorAddress: data.validator_address ? (0, encoding_1.fromHex)(data.validator_address) : void 0,
        timestamp: decodeOptionalTime(data.timestamp),
        signature: data.signature ? (0, encoding_1.fromBase64)(data.signature) : void 0
      };
    }
    function decodeCommit(data) {
      return {
        blockId: decodeBlockId((0, encodings_1.assertObject)(data.block_id)),
        height: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.height)),
        round: (0, inthelpers_1.apiToSmallInt)(data.round),
        signatures: (0, encodings_1.assertArray)(data.signatures).map(decodeCommitSignature)
      };
    }
    function decodeCommitResponse(data) {
      return {
        canonical: (0, encodings_1.assertBoolean)(data.canonical),
        header: decodeHeader(data.signed_header.header),
        commit: decodeCommit(data.signed_header.commit)
      };
    }
    function decodeValidatorGenesis(data) {
      return {
        address: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.address)),
        pubkey: decodePubkey((0, encodings_1.assertObject)(data.pub_key)),
        votingPower: (0, inthelpers_1.apiToBigInt)((0, encodings_1.assertNotEmpty)(data.power))
      };
    }
    exports.decodeValidatorGenesis = decodeValidatorGenesis;
    function decodeGenesis(data) {
      return {
        genesisTime: (0, dates_1.fromRfc3339WithNanoseconds)((0, encodings_1.assertNotEmpty)(data.genesis_time)),
        chainId: (0, encodings_1.assertNotEmpty)(data.chain_id),
        consensusParams: decodeConsensusParams(data.consensus_params),
        validators: data.validators ? (0, encodings_1.assertArray)(data.validators).map(decodeValidatorGenesis) : [],
        appHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.app_hash)),
        appState: data.app_state
      };
    }
    function decodeValidatorInfo(data) {
      return {
        pubkey: decodePubkey((0, encodings_1.assertObject)(data.pub_key)),
        votingPower: (0, inthelpers_1.apiToBigInt)((0, encodings_1.assertNotEmpty)(data.voting_power)),
        address: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.address)),
        proposerPriority: data.proposer_priority ? (0, inthelpers_1.apiToSmallInt)(data.proposer_priority) : void 0
      };
    }
    exports.decodeValidatorInfo = decodeValidatorInfo;
    function decodeNodeInfo(data) {
      return {
        id: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.id)),
        listenAddr: (0, encodings_1.assertNotEmpty)(data.listen_addr),
        network: (0, encodings_1.assertNotEmpty)(data.network),
        version: (0, encodings_1.assertString)(data.version),
        channels: (0, encodings_1.assertNotEmpty)(data.channels),
        moniker: (0, encodings_1.assertNotEmpty)(data.moniker),
        other: (0, encodings_1.dictionaryToStringMap)(data.other),
        protocolVersion: {
          app: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.protocol_version.app)),
          block: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.protocol_version.block)),
          p2p: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.protocol_version.p2p))
        }
      };
    }
    function decodeSyncInfo(data) {
      return {
        latestBlockHash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.latest_block_hash)),
        latestAppHash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.latest_app_hash)),
        latestBlockTime: (0, dates_1.fromRfc3339WithNanoseconds)((0, encodings_1.assertNotEmpty)(data.latest_block_time)),
        latestBlockHeight: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.latest_block_height)),
        catchingUp: (0, encodings_1.assertBoolean)(data.catching_up)
      };
    }
    function decodeStatus(data) {
      return {
        nodeInfo: decodeNodeInfo(data.node_info),
        syncInfo: decodeSyncInfo(data.sync_info),
        validatorInfo: decodeValidatorInfo(data.validator_info)
      };
    }
    function decodeTxProof(data) {
      return {
        data: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(data.data)),
        rootHash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.root_hash)),
        proof: {
          total: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.proof.total)),
          index: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.proof.index)),
          leafHash: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(data.proof.leaf_hash)),
          aunts: (0, encodings_1.assertArray)(data.proof.aunts).map(encoding_1.fromBase64)
        }
      };
    }
    function decodeTxResponse(data) {
      return {
        tx: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(data.tx)),
        result: decodeTxData((0, encodings_1.assertObject)(data.tx_result)),
        height: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.height)),
        index: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNumber)(data.index)),
        hash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.hash)),
        proof: (0, encodings_1.may)(decodeTxProof, data.proof)
      };
    }
    function decodeTxSearch(data) {
      return {
        totalCount: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.total_count)),
        txs: (0, encodings_1.assertArray)(data.txs).map(decodeTxResponse)
      };
    }
    function decodeTxEvent(data) {
      const tx = (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(data.tx));
      return {
        tx,
        hash: (0, hasher_1.hashTx)(tx),
        result: decodeTxData(data.result),
        height: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.height))
      };
    }
    function decodeValidators(data) {
      return {
        blockHeight: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.block_height)),
        validators: (0, encodings_1.assertArray)(data.validators).map(decodeValidatorInfo),
        count: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.count)),
        total: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.total))
      };
    }
    function decodeBlock(data) {
      var _a;
      return {
        header: decodeHeader((0, encodings_1.assertObject)(data.header)),
        // For the block at height 1, last commit is not set. This is represented in an empty object like this:
        // { height: '0', round: 0, block_id: { hash: '', parts: [Object] }, signatures: [] }
        lastCommit: data.last_commit.block_id.hash ? decodeCommit((0, encodings_1.assertObject)(data.last_commit)) : null,
        txs: data.data.txs ? (0, encodings_1.assertArray)(data.data.txs).map(encoding_1.fromBase64) : [],
        // Lift up .evidence.evidence to just .evidence
        // See https://github.com/tendermint/tendermint/issues/7697
        evidence: ((_a = data.evidence) == null ? void 0 : _a.evidence) ?? []
      };
    }
    function decodeBlockResponse(data) {
      return {
        blockId: decodeBlockId(data.block_id),
        block: decodeBlock(data.block)
      };
    }
    function decodeBlockSearch(data) {
      return {
        totalCount: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.total_count)),
        blocks: (0, encodings_1.assertArray)(data.blocks).map(decodeBlockResponse)
      };
    }
    function decodeNumUnconfirmedTxs(data) {
      return {
        total: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.total)),
        totalBytes: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.total_bytes))
      };
    }
    var Responses = class _Responses {
      static decodeAbciInfo(response) {
        return decodeAbciInfo((0, encodings_1.assertObject)(response.result.response));
      }
      static decodeAbciQuery(response) {
        return decodeAbciQuery((0, encodings_1.assertObject)(response.result.response));
      }
      static decodeBlock(response) {
        return decodeBlockResponse(response.result);
      }
      static decodeBlockResults(response) {
        return decodeBlockResults(response.result);
      }
      static decodeBlockSearch(response) {
        return decodeBlockSearch(response.result);
      }
      static decodeBlockchain(response) {
        return decodeBlockchain(response.result);
      }
      static decodeBroadcastTxSync(response) {
        return decodeBroadcastTxSync(response.result);
      }
      static decodeBroadcastTxAsync(response) {
        return _Responses.decodeBroadcastTxSync(response);
      }
      static decodeBroadcastTxCommit(response) {
        return decodeBroadcastTxCommit(response.result);
      }
      static decodeCommit(response) {
        return decodeCommitResponse(response.result);
      }
      static decodeGenesis(response) {
        return decodeGenesis((0, encodings_1.assertObject)(response.result.genesis));
      }
      static decodeHealth() {
        return null;
      }
      static decodeNumUnconfirmedTxs(response) {
        return decodeNumUnconfirmedTxs(response.result);
      }
      static decodeStatus(response) {
        return decodeStatus(response.result);
      }
      static decodeNewBlockEvent(event) {
        return decodeBlock(event.data.value.block);
      }
      static decodeNewBlockHeaderEvent(event) {
        return decodeHeader(event.data.value.header);
      }
      static decodeTxEvent(event) {
        return decodeTxEvent(event.data.value.TxResult);
      }
      static decodeTx(response) {
        return decodeTxResponse(response.result);
      }
      static decodeTxSearch(response) {
        return decodeTxSearch(response.result);
      }
      static decodeValidators(response) {
        return decodeValidators(response.result);
      }
    };
    exports.Responses = Responses;
  }
});

// node_modules/@cosmjs/tendermint-rpc/build/tendermint34/adaptor/index.js
var require_adaptor = __commonJS({
  "node_modules/@cosmjs/tendermint-rpc/build/tendermint34/adaptor/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.adaptor34 = void 0;
    var hasher_1 = require_hasher();
    var requests_1 = require_requests2();
    var responses_1 = require_responses2();
    exports.adaptor34 = {
      params: requests_1.Params,
      responses: responses_1.Responses,
      hashTx: hasher_1.hashTx,
      hashBlock: hasher_1.hashBlock
    };
  }
});

// node_modules/@cosmjs/tendermint-rpc/build/tendermint34/tendermint34client.js
var require_tendermint34client = __commonJS({
  "node_modules/@cosmjs/tendermint-rpc/build/tendermint34/tendermint34client.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Tendermint34Client = void 0;
    var jsonrpc_1 = require_jsonrpc();
    var rpcclients_1 = require_rpcclients();
    var adaptor_1 = require_adaptor();
    var requests = __importStar(require_requests());
    var Tendermint34Client = class _Tendermint34Client {
      /**
       * Use `Tendermint34Client.connect` or `Tendermint34Client.create` to create an instance.
       */
      constructor(client) {
        this.client = client;
        this.p = adaptor_1.adaptor34.params;
        this.r = adaptor_1.adaptor34.responses;
      }
      /**
       * Creates a new Tendermint client for the given endpoint.
       *
       * Uses HTTP when the URL schema is http or https. Uses WebSockets otherwise.
       */
      static async connect(endpoint) {
        if (typeof endpoint === "object") {
          return _Tendermint34Client.create(new rpcclients_1.HttpClient(endpoint));
        } else {
          const useHttp = endpoint.startsWith("http://") || endpoint.startsWith("https://");
          const rpcClient = useHttp ? new rpcclients_1.HttpClient(endpoint) : new rpcclients_1.WebsocketClient(endpoint);
          return _Tendermint34Client.create(rpcClient);
        }
      }
      /**
       * Creates a new Tendermint client given an RPC client.
       */
      static async create(rpcClient) {
        const _version = await this.detectVersion(rpcClient);
        return new _Tendermint34Client(rpcClient);
      }
      static async detectVersion(client) {
        const req = (0, jsonrpc_1.createJsonRpcRequest)(requests.Method.Status);
        const response = await client.execute(req);
        const result = response.result;
        if (!result || !result.node_info) {
          throw new Error("Unrecognized format for status response");
        }
        const version = result.node_info.version;
        if (typeof version !== "string") {
          throw new Error("Unrecognized version format: must be string");
        }
        return version;
      }
      disconnect() {
        this.client.disconnect();
      }
      async abciInfo() {
        const query = { method: requests.Method.AbciInfo };
        return this.doCall(query, this.p.encodeAbciInfo, this.r.decodeAbciInfo);
      }
      async abciQuery(params) {
        const query = { params, method: requests.Method.AbciQuery };
        return this.doCall(query, this.p.encodeAbciQuery, this.r.decodeAbciQuery);
      }
      async block(height) {
        const query = { method: requests.Method.Block, params: { height } };
        return this.doCall(query, this.p.encodeBlock, this.r.decodeBlock);
      }
      async blockResults(height) {
        const query = {
          method: requests.Method.BlockResults,
          params: { height }
        };
        return this.doCall(query, this.p.encodeBlockResults, this.r.decodeBlockResults);
      }
      /**
       * Search for events that are in a block.
       *
       * NOTE
       * This method will error on any node that is running a Tendermint version lower than 0.34.9.
       *
       * @see https://docs.tendermint.com/master/rpc/#/Info/block_search
       */
      async blockSearch(params) {
        const query = { params, method: requests.Method.BlockSearch };
        const resp = await this.doCall(query, this.p.encodeBlockSearch, this.r.decodeBlockSearch);
        return {
          ...resp,
          // make sure we sort by height, as tendermint may be sorting by string value of the height
          blocks: [...resp.blocks].sort((a, b) => a.block.header.height - b.block.header.height)
        };
      }
      // this should paginate through all blockSearch options to ensure it returns all results.
      // starts with page 1 or whatever was provided (eg. to start on page 7)
      //
      // NOTE
      // This method will error on any node that is running a Tendermint version lower than 0.34.9.
      async blockSearchAll(params) {
        let page = params.page || 1;
        const blocks = [];
        let done = false;
        while (!done) {
          const resp = await this.blockSearch({ ...params, page });
          blocks.push(...resp.blocks);
          if (blocks.length < resp.totalCount) {
            page++;
          } else {
            done = true;
          }
        }
        blocks.sort((a, b) => a.block.header.height - b.block.header.height);
        return {
          totalCount: blocks.length,
          blocks
        };
      }
      /**
       * Queries block headers filtered by minHeight <= height <= maxHeight.
       *
       * @param minHeight The minimum height to be included in the result. Defaults to 0.
       * @param maxHeight The maximum height to be included in the result. Defaults to infinity.
       */
      async blockchain(minHeight, maxHeight) {
        const query = {
          method: requests.Method.Blockchain,
          params: {
            minHeight,
            maxHeight
          }
        };
        return this.doCall(query, this.p.encodeBlockchain, this.r.decodeBlockchain);
      }
      /**
       * Broadcast transaction to mempool and wait for response
       *
       * @see https://docs.tendermint.com/master/rpc/#/Tx/broadcast_tx_sync
       */
      async broadcastTxSync(params) {
        const query = { params, method: requests.Method.BroadcastTxSync };
        return this.doCall(query, this.p.encodeBroadcastTx, this.r.decodeBroadcastTxSync);
      }
      /**
       * Broadcast transaction to mempool and do not wait for result
       *
       * @see https://docs.tendermint.com/master/rpc/#/Tx/broadcast_tx_async
       */
      async broadcastTxAsync(params) {
        const query = { params, method: requests.Method.BroadcastTxAsync };
        return this.doCall(query, this.p.encodeBroadcastTx, this.r.decodeBroadcastTxAsync);
      }
      /**
       * Broadcast transaction to mempool and wait for block
       *
       * @see https://docs.tendermint.com/master/rpc/#/Tx/broadcast_tx_commit
       */
      async broadcastTxCommit(params) {
        const query = { params, method: requests.Method.BroadcastTxCommit };
        return this.doCall(query, this.p.encodeBroadcastTx, this.r.decodeBroadcastTxCommit);
      }
      async commit(height) {
        const query = { method: requests.Method.Commit, params: { height } };
        return this.doCall(query, this.p.encodeCommit, this.r.decodeCommit);
      }
      async genesis() {
        const query = { method: requests.Method.Genesis };
        return this.doCall(query, this.p.encodeGenesis, this.r.decodeGenesis);
      }
      async health() {
        const query = { method: requests.Method.Health };
        return this.doCall(query, this.p.encodeHealth, this.r.decodeHealth);
      }
      async numUnconfirmedTxs() {
        const query = { method: requests.Method.NumUnconfirmedTxs };
        return this.doCall(query, this.p.encodeNumUnconfirmedTxs, this.r.decodeNumUnconfirmedTxs);
      }
      async status() {
        const query = { method: requests.Method.Status };
        return this.doCall(query, this.p.encodeStatus, this.r.decodeStatus);
      }
      subscribeNewBlock() {
        const request = {
          method: requests.Method.Subscribe,
          query: { type: requests.SubscriptionEventType.NewBlock }
        };
        return this.subscribe(request, this.r.decodeNewBlockEvent);
      }
      subscribeNewBlockHeader() {
        const request = {
          method: requests.Method.Subscribe,
          query: { type: requests.SubscriptionEventType.NewBlockHeader }
        };
        return this.subscribe(request, this.r.decodeNewBlockHeaderEvent);
      }
      subscribeTx(query) {
        const request = {
          method: requests.Method.Subscribe,
          query: {
            type: requests.SubscriptionEventType.Tx,
            raw: query
          }
        };
        return this.subscribe(request, this.r.decodeTxEvent);
      }
      /**
       * Get a single transaction by hash
       *
       * @see https://docs.tendermint.com/master/rpc/#/Info/tx
       */
      async tx(params) {
        const query = { params, method: requests.Method.Tx };
        return this.doCall(query, this.p.encodeTx, this.r.decodeTx);
      }
      /**
       * Search for transactions that are in a block
       *
       * @see https://docs.tendermint.com/master/rpc/#/Info/tx_search
       */
      async txSearch(params) {
        const query = { params, method: requests.Method.TxSearch };
        return this.doCall(query, this.p.encodeTxSearch, this.r.decodeTxSearch);
      }
      // this should paginate through all txSearch options to ensure it returns all results.
      // starts with page 1 or whatever was provided (eg. to start on page 7)
      async txSearchAll(params) {
        let page = params.page || 1;
        const txs = [];
        let done = false;
        while (!done) {
          const resp = await this.txSearch({ ...params, page });
          txs.push(...resp.txs);
          if (txs.length < resp.totalCount) {
            page++;
          } else {
            done = true;
          }
        }
        return {
          totalCount: txs.length,
          txs
        };
      }
      async validators(params) {
        const query = {
          method: requests.Method.Validators,
          params
        };
        return this.doCall(query, this.p.encodeValidators, this.r.decodeValidators);
      }
      async validatorsAll(height) {
        const validators = [];
        let page = 1;
        let done = false;
        let blockHeight = height;
        while (!done) {
          const response = await this.validators({
            per_page: 50,
            height: blockHeight,
            page
          });
          validators.push(...response.validators);
          blockHeight = blockHeight || response.blockHeight;
          if (validators.length < response.total) {
            page++;
          } else {
            done = true;
          }
        }
        return {
          // NOTE: Default value is for type safety but this should always be set
          blockHeight: blockHeight ?? 0,
          count: validators.length,
          total: validators.length,
          validators
        };
      }
      // doCall is a helper to handle the encode/call/decode logic
      async doCall(request, encode, decode) {
        const req = encode(request);
        const result = await this.client.execute(req);
        return decode(result);
      }
      subscribe(request, decode) {
        if (!(0, rpcclients_1.instanceOfRpcStreamingClient)(this.client)) {
          throw new Error("This RPC client type cannot subscribe to events");
        }
        const req = this.p.encodeSubscribe(request);
        const eventStream = this.client.listen(req);
        return eventStream.map((event) => {
          return decode(event);
        });
      }
    };
    exports.Tendermint34Client = Tendermint34Client;
  }
});

// node_modules/@cosmjs/tendermint-rpc/build/tendermint34/index.js
var require_tendermint34 = __commonJS({
  "node_modules/@cosmjs/tendermint-rpc/build/tendermint34/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Tendermint34Client = exports.VoteType = exports.broadcastTxSyncSuccess = exports.broadcastTxCommitSuccess = exports.SubscriptionEventType = exports.Method = void 0;
    var requests_1 = require_requests();
    Object.defineProperty(exports, "Method", { enumerable: true, get: function() {
      return requests_1.Method;
    } });
    Object.defineProperty(exports, "SubscriptionEventType", { enumerable: true, get: function() {
      return requests_1.SubscriptionEventType;
    } });
    var responses_1 = require_responses();
    Object.defineProperty(exports, "broadcastTxCommitSuccess", { enumerable: true, get: function() {
      return responses_1.broadcastTxCommitSuccess;
    } });
    Object.defineProperty(exports, "broadcastTxSyncSuccess", { enumerable: true, get: function() {
      return responses_1.broadcastTxSyncSuccess;
    } });
    Object.defineProperty(exports, "VoteType", { enumerable: true, get: function() {
      return responses_1.VoteType;
    } });
    var tendermint34client_1 = require_tendermint34client();
    Object.defineProperty(exports, "Tendermint34Client", { enumerable: true, get: function() {
      return tendermint34client_1.Tendermint34Client;
    } });
  }
});

// node_modules/@cosmjs/tendermint-rpc/build/tendermint37/requests.js
var require_requests3 = __commonJS({
  "node_modules/@cosmjs/tendermint-rpc/build/tendermint37/requests.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.buildQuery = exports.SubscriptionEventType = exports.Method = void 0;
    var Method;
    (function(Method2) {
      Method2["AbciInfo"] = "abci_info";
      Method2["AbciQuery"] = "abci_query";
      Method2["Block"] = "block";
      Method2["Blockchain"] = "blockchain";
      Method2["BlockResults"] = "block_results";
      Method2["BlockSearch"] = "block_search";
      Method2["BroadcastTxAsync"] = "broadcast_tx_async";
      Method2["BroadcastTxSync"] = "broadcast_tx_sync";
      Method2["BroadcastTxCommit"] = "broadcast_tx_commit";
      Method2["Commit"] = "commit";
      Method2["Genesis"] = "genesis";
      Method2["Health"] = "health";
      Method2["NumUnconfirmedTxs"] = "num_unconfirmed_txs";
      Method2["Status"] = "status";
      Method2["Subscribe"] = "subscribe";
      Method2["Tx"] = "tx";
      Method2["TxSearch"] = "tx_search";
      Method2["Validators"] = "validators";
      Method2["Unsubscribe"] = "unsubscribe";
    })(Method = exports.Method || (exports.Method = {}));
    var SubscriptionEventType;
    (function(SubscriptionEventType2) {
      SubscriptionEventType2["NewBlock"] = "NewBlock";
      SubscriptionEventType2["NewBlockHeader"] = "NewBlockHeader";
      SubscriptionEventType2["Tx"] = "Tx";
    })(SubscriptionEventType = exports.SubscriptionEventType || (exports.SubscriptionEventType = {}));
    function buildQuery(components) {
      const tags = components.tags ? components.tags : [];
      const tagComponents = tags.map((tag) => `${tag.key}='${tag.value}'`);
      const rawComponents = components.raw ? [components.raw] : [];
      return [...tagComponents, ...rawComponents].join(" AND ");
    }
    exports.buildQuery = buildQuery;
  }
});

// node_modules/@cosmjs/tendermint-rpc/build/tendermint37/responses.js
var require_responses3 = __commonJS({
  "node_modules/@cosmjs/tendermint-rpc/build/tendermint37/responses.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.VoteType = exports.broadcastTxCommitSuccess = exports.broadcastTxSyncSuccess = void 0;
    function broadcastTxSyncSuccess(res) {
      return res.code === 0;
    }
    exports.broadcastTxSyncSuccess = broadcastTxSyncSuccess;
    function broadcastTxCommitSuccess(response) {
      return response.checkTx.code === 0 && !!response.deliverTx && response.deliverTx.code === 0;
    }
    exports.broadcastTxCommitSuccess = broadcastTxCommitSuccess;
    var VoteType;
    (function(VoteType2) {
      VoteType2[VoteType2["PreVote"] = 1] = "PreVote";
      VoteType2[VoteType2["PreCommit"] = 2] = "PreCommit";
    })(VoteType = exports.VoteType || (exports.VoteType = {}));
  }
});

// node_modules/@cosmjs/tendermint-rpc/build/tendermint37/encodings.js
var require_encodings2 = __commonJS({
  "node_modules/@cosmjs/tendermint-rpc/build/tendermint37/encodings.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.encodeBlockId = exports.encodeVersion = exports.encodeBytes = exports.encodeTime = exports.encodeUvarint = exports.encodeString = exports.dictionaryToStringMap = exports.may = exports.assertNotEmpty = exports.assertObject = exports.assertArray = exports.assertNumber = exports.assertString = exports.assertBoolean = exports.assertSet = void 0;
    var encoding_1 = require_build2();
    function assertSet(value) {
      if (value === void 0) {
        throw new Error("Value must not be undefined");
      }
      if (value === null) {
        throw new Error("Value must not be null");
      }
      return value;
    }
    exports.assertSet = assertSet;
    function assertBoolean(value) {
      assertSet(value);
      if (typeof value !== "boolean") {
        throw new Error("Value must be a boolean");
      }
      return value;
    }
    exports.assertBoolean = assertBoolean;
    function assertString(value) {
      assertSet(value);
      if (typeof value !== "string") {
        throw new Error("Value must be a string");
      }
      return value;
    }
    exports.assertString = assertString;
    function assertNumber(value) {
      assertSet(value);
      if (typeof value !== "number") {
        throw new Error("Value must be a number");
      }
      return value;
    }
    exports.assertNumber = assertNumber;
    function assertArray(value) {
      assertSet(value);
      if (!Array.isArray(value)) {
        throw new Error("Value must be a an array");
      }
      return value;
    }
    exports.assertArray = assertArray;
    function assertObject(value) {
      assertSet(value);
      if (typeof value !== "object") {
        throw new Error("Value must be an object");
      }
      if (Object.prototype.toString.call(value) !== "[object Object]") {
        throw new Error("Value must be a simple object");
      }
      return value;
    }
    exports.assertObject = assertObject;
    function assertNotEmpty(value) {
      assertSet(value);
      if (typeof value === "number" && value === 0) {
        throw new Error("must provide a non-zero value");
      } else if (value.length === 0) {
        throw new Error("must provide a non-empty value");
      }
      return value;
    }
    exports.assertNotEmpty = assertNotEmpty;
    function may(transform, value) {
      return value === void 0 || value === null ? void 0 : transform(value);
    }
    exports.may = may;
    function dictionaryToStringMap(obj) {
      const out = /* @__PURE__ */ new Map();
      for (const key of Object.keys(obj)) {
        const value = obj[key];
        if (typeof value !== "string") {
          throw new Error("Found dictionary value of type other than string");
        }
        out.set(key, value);
      }
      return out;
    }
    exports.dictionaryToStringMap = dictionaryToStringMap;
    function encodeString(s) {
      const utf8 = (0, encoding_1.toUtf8)(s);
      return Uint8Array.from([utf8.length, ...utf8]);
    }
    exports.encodeString = encodeString;
    function encodeUvarint(n) {
      return n >= 128 ? (
        // eslint-disable-next-line no-bitwise
        Uint8Array.from([n & 255 | 128, ...encodeUvarint(n >> 7)])
      ) : (
        // eslint-disable-next-line no-bitwise
        Uint8Array.from([n & 255])
      );
    }
    exports.encodeUvarint = encodeUvarint;
    function encodeTime(time) {
      const milliseconds = time.getTime();
      const seconds = Math.floor(milliseconds / 1e3);
      const secondsArray = seconds ? [8, ...encodeUvarint(seconds)] : new Uint8Array();
      const nanoseconds = (time.nanoseconds || 0) + milliseconds % 1e3 * 1e6;
      const nanosecondsArray = nanoseconds ? [16, ...encodeUvarint(nanoseconds)] : new Uint8Array();
      return Uint8Array.from([...secondsArray, ...nanosecondsArray]);
    }
    exports.encodeTime = encodeTime;
    function encodeBytes(bytes) {
      if (bytes.length >= 128)
        throw new Error("Not implemented for byte arrays of length 128 or more");
      return bytes.length ? Uint8Array.from([bytes.length, ...bytes]) : new Uint8Array();
    }
    exports.encodeBytes = encodeBytes;
    function encodeVersion(version) {
      const blockArray = version.block ? Uint8Array.from([8, ...encodeUvarint(version.block)]) : new Uint8Array();
      const appArray = version.app ? Uint8Array.from([16, ...encodeUvarint(version.app)]) : new Uint8Array();
      return Uint8Array.from([...blockArray, ...appArray]);
    }
    exports.encodeVersion = encodeVersion;
    function encodeBlockId(blockId) {
      return Uint8Array.from([
        10,
        blockId.hash.length,
        ...blockId.hash,
        18,
        blockId.parts.hash.length + 4,
        8,
        blockId.parts.total,
        18,
        blockId.parts.hash.length,
        ...blockId.parts.hash
      ]);
    }
    exports.encodeBlockId = encodeBlockId;
  }
});

// node_modules/@cosmjs/tendermint-rpc/build/tendermint37/hasher.js
var require_hasher2 = __commonJS({
  "node_modules/@cosmjs/tendermint-rpc/build/tendermint37/hasher.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.hashBlock = exports.hashTx = void 0;
    var crypto_1 = require_build4();
    var encodings_1 = require_encodings2();
    function hashTx(tx) {
      return (0, crypto_1.sha256)(tx);
    }
    exports.hashTx = hashTx;
    function getSplitPoint(n) {
      if (n < 1)
        throw new Error("Cannot split an empty tree");
      const largestPowerOf2 = 2 ** Math.floor(Math.log2(n));
      return largestPowerOf2 < n ? largestPowerOf2 : largestPowerOf2 / 2;
    }
    function hashLeaf(leaf) {
      const hash = new crypto_1.Sha256(Uint8Array.from([0]));
      hash.update(leaf);
      return hash.digest();
    }
    function hashInner(left, right) {
      const hash = new crypto_1.Sha256(Uint8Array.from([1]));
      hash.update(left);
      hash.update(right);
      return hash.digest();
    }
    function hashTree(hashes) {
      switch (hashes.length) {
        case 0:
          throw new Error("Cannot hash empty tree");
        case 1:
          return hashLeaf(hashes[0]);
        default: {
          const slicePoint = getSplitPoint(hashes.length);
          const left = hashTree(hashes.slice(0, slicePoint));
          const right = hashTree(hashes.slice(slicePoint));
          return hashInner(left, right);
        }
      }
    }
    function hashBlock(header) {
      if (!header.lastBlockId) {
        throw new Error("Hashing a block header with no last block ID (i.e. header at height 1) is not supported. If you need this, contributions are welcome. Please add documentation and test vectors for this case.");
      }
      const encodedFields = [
        (0, encodings_1.encodeVersion)(header.version),
        (0, encodings_1.encodeString)(header.chainId),
        (0, encodings_1.encodeUvarint)(header.height),
        (0, encodings_1.encodeTime)(header.time),
        (0, encodings_1.encodeBlockId)(header.lastBlockId),
        (0, encodings_1.encodeBytes)(header.lastCommitHash),
        (0, encodings_1.encodeBytes)(header.dataHash),
        (0, encodings_1.encodeBytes)(header.validatorsHash),
        (0, encodings_1.encodeBytes)(header.nextValidatorsHash),
        (0, encodings_1.encodeBytes)(header.consensusHash),
        (0, encodings_1.encodeBytes)(header.appHash),
        (0, encodings_1.encodeBytes)(header.lastResultsHash),
        (0, encodings_1.encodeBytes)(header.evidenceHash),
        (0, encodings_1.encodeBytes)(header.proposerAddress)
      ];
      return hashTree(encodedFields);
    }
    exports.hashBlock = hashBlock;
  }
});

// node_modules/@cosmjs/tendermint-rpc/build/tendermint37/adaptor/requests.js
var require_requests4 = __commonJS({
  "node_modules/@cosmjs/tendermint-rpc/build/tendermint37/adaptor/requests.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Params = void 0;
    var encoding_1 = require_build2();
    var inthelpers_1 = require_inthelpers();
    var jsonrpc_1 = require_jsonrpc();
    var encodings_1 = require_encodings2();
    var requests = __importStar(require_requests3());
    function encodeHeightParam(param) {
      return {
        height: (0, encodings_1.may)(inthelpers_1.smallIntToApi, param.height)
      };
    }
    function encodeBlockchainRequestParams(param) {
      return {
        minHeight: (0, encodings_1.may)(inthelpers_1.smallIntToApi, param.minHeight),
        maxHeight: (0, encodings_1.may)(inthelpers_1.smallIntToApi, param.maxHeight)
      };
    }
    function encodeBlockSearchParams(params) {
      return {
        query: params.query,
        page: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.page),
        per_page: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.per_page),
        order_by: params.order_by
      };
    }
    function encodeAbciQueryParams(params) {
      return {
        path: (0, encodings_1.assertNotEmpty)(params.path),
        data: (0, encoding_1.toHex)(params.data),
        height: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.height),
        prove: params.prove
      };
    }
    function encodeBroadcastTxParams(params) {
      return {
        tx: (0, encoding_1.toBase64)((0, encodings_1.assertNotEmpty)(params.tx))
      };
    }
    function encodeTxParams(params) {
      return {
        hash: (0, encoding_1.toBase64)((0, encodings_1.assertNotEmpty)(params.hash)),
        prove: params.prove
      };
    }
    function encodeTxSearchParams(params) {
      return {
        query: params.query,
        prove: params.prove,
        page: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.page),
        per_page: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.per_page),
        order_by: params.order_by
      };
    }
    function encodeValidatorsParams(params) {
      return {
        height: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.height),
        page: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.page),
        per_page: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.per_page)
      };
    }
    var Params = class {
      static encodeAbciInfo(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method);
      }
      static encodeAbciQuery(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeAbciQueryParams(req.params));
      }
      static encodeBlock(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeHeightParam(req.params));
      }
      static encodeBlockchain(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeBlockchainRequestParams(req.params));
      }
      static encodeBlockResults(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeHeightParam(req.params));
      }
      static encodeBlockSearch(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeBlockSearchParams(req.params));
      }
      static encodeBroadcastTx(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeBroadcastTxParams(req.params));
      }
      static encodeCommit(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeHeightParam(req.params));
      }
      static encodeGenesis(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method);
      }
      static encodeHealth(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method);
      }
      static encodeNumUnconfirmedTxs(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method);
      }
      static encodeStatus(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method);
      }
      static encodeSubscribe(req) {
        const eventTag = { key: "tm.event", value: req.query.type };
        const query = requests.buildQuery({ tags: [eventTag], raw: req.query.raw });
        return (0, jsonrpc_1.createJsonRpcRequest)("subscribe", { query });
      }
      static encodeTx(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeTxParams(req.params));
      }
      // TODO: encode params for query string???
      static encodeTxSearch(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeTxSearchParams(req.params));
      }
      static encodeValidators(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeValidatorsParams(req.params));
      }
    };
    exports.Params = Params;
  }
});

// node_modules/@cosmjs/tendermint-rpc/build/tendermint37/adaptor/responses.js
var require_responses4 = __commonJS({
  "node_modules/@cosmjs/tendermint-rpc/build/tendermint37/adaptor/responses.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Responses = exports.decodeValidatorInfo = exports.decodeValidatorGenesis = exports.decodeValidatorUpdate = exports.decodeEvent = void 0;
    var encoding_1 = require_build2();
    var utils_1 = require_build3();
    var dates_1 = require_dates();
    var inthelpers_1 = require_inthelpers();
    var types_1 = require_types5();
    var encodings_1 = require_encodings2();
    var hasher_1 = require_hasher2();
    function decodeAbciInfo(data) {
      return {
        data: data.data,
        lastBlockHeight: (0, encodings_1.may)(inthelpers_1.apiToSmallInt, data.last_block_height),
        lastBlockAppHash: (0, encodings_1.may)(encoding_1.fromBase64, data.last_block_app_hash)
      };
    }
    function decodeQueryProof(data) {
      return {
        ops: data.ops.map((op) => ({
          type: op.type,
          key: (0, encoding_1.fromBase64)(op.key),
          data: (0, encoding_1.fromBase64)(op.data)
        }))
      };
    }
    function decodeAbciQuery(data) {
      return {
        key: (0, encoding_1.fromBase64)((0, encodings_1.assertString)(data.key ?? "")),
        value: (0, encoding_1.fromBase64)((0, encodings_1.assertString)(data.value ?? "")),
        proof: (0, encodings_1.may)(decodeQueryProof, data.proofOps),
        height: (0, encodings_1.may)(inthelpers_1.apiToSmallInt, data.height),
        code: (0, encodings_1.may)(inthelpers_1.apiToSmallInt, data.code),
        codespace: (0, encodings_1.assertString)(data.codespace ?? ""),
        index: (0, encodings_1.may)(inthelpers_1.apiToSmallInt, data.index),
        log: data.log,
        info: (0, encodings_1.assertString)(data.info ?? "")
      };
    }
    function decodeEventAttribute(attribute) {
      return {
        key: (0, encodings_1.assertNotEmpty)(attribute.key),
        value: attribute.value ?? ""
      };
    }
    function decodeAttributes(attributes) {
      return (0, encodings_1.assertArray)(attributes).map(decodeEventAttribute);
    }
    function decodeEvent(event) {
      return {
        type: event.type,
        attributes: event.attributes ? decodeAttributes(event.attributes) : []
      };
    }
    exports.decodeEvent = decodeEvent;
    function decodeEvents(events) {
      return (0, encodings_1.assertArray)(events).map(decodeEvent);
    }
    function decodeTxData(data) {
      return {
        code: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNumber)(data.code ?? 0)),
        codespace: data.codespace,
        log: data.log,
        data: (0, encodings_1.may)(encoding_1.fromBase64, data.data),
        events: data.events ? decodeEvents(data.events) : [],
        gasWanted: (0, inthelpers_1.apiToSmallInt)(data.gas_wanted ?? "0"),
        gasUsed: (0, inthelpers_1.apiToSmallInt)(data.gas_used ?? "0")
      };
    }
    function decodePubkey(data) {
      if ("Sum" in data) {
        const [[algorithm, value]] = Object.entries(data.Sum.value);
        (0, utils_1.assert)(algorithm === "ed25519" || algorithm === "secp256k1", `unknown pubkey type: ${algorithm}`);
        return {
          algorithm,
          data: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(value))
        };
      } else {
        switch (data.type) {
          case "tendermint/PubKeyEd25519":
            return {
              algorithm: "ed25519",
              data: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(data.value))
            };
          case "tendermint/PubKeySecp256k1":
            return {
              algorithm: "secp256k1",
              data: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(data.value))
            };
          default:
            throw new Error(`unknown pubkey type: ${data.type}`);
        }
      }
    }
    function decodeBlockParams(data) {
      return {
        maxBytes: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.max_bytes)),
        maxGas: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.max_gas))
      };
    }
    function decodeEvidenceParams(data) {
      return {
        maxAgeNumBlocks: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.max_age_num_blocks)),
        maxAgeDuration: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.max_age_duration))
      };
    }
    function decodeConsensusParams(data) {
      return {
        block: decodeBlockParams((0, encodings_1.assertObject)(data.block)),
        evidence: decodeEvidenceParams((0, encodings_1.assertObject)(data.evidence))
      };
    }
    function decodeValidatorUpdate(data) {
      return {
        pubkey: decodePubkey((0, encodings_1.assertObject)(data.pub_key)),
        votingPower: (0, inthelpers_1.apiToBigInt)(data.power ?? "0")
      };
    }
    exports.decodeValidatorUpdate = decodeValidatorUpdate;
    function decodeBlockResults(data) {
      return {
        height: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.height)),
        results: (data.txs_results || []).map(decodeTxData),
        validatorUpdates: (data.validator_updates || []).map(decodeValidatorUpdate),
        consensusUpdates: (0, encodings_1.may)(decodeConsensusParams, data.consensus_param_updates),
        beginBlockEvents: decodeEvents(data.begin_block_events || []),
        endBlockEvents: decodeEvents(data.end_block_events || [])
      };
    }
    function decodeBlockId(data) {
      return {
        hash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.hash)),
        parts: {
          total: (0, encodings_1.assertNotEmpty)(data.parts.total),
          hash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.parts.hash))
        }
      };
    }
    function decodeBlockVersion(data) {
      return {
        block: (0, inthelpers_1.apiToSmallInt)(data.block),
        app: (0, inthelpers_1.apiToSmallInt)(data.app ?? 0)
      };
    }
    function decodeHeader(data) {
      return {
        version: decodeBlockVersion(data.version),
        chainId: (0, encodings_1.assertNotEmpty)(data.chain_id),
        height: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.height)),
        time: (0, dates_1.fromRfc3339WithNanoseconds)((0, encodings_1.assertNotEmpty)(data.time)),
        // When there is no last block ID (i.e. this block's height is 1), we get an empty structure like this:
        // { hash: '', parts: { total: 0, hash: '' } }
        lastBlockId: data.last_block_id.hash ? decodeBlockId(data.last_block_id) : null,
        lastCommitHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.last_commit_hash)),
        dataHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.data_hash)),
        validatorsHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.validators_hash)),
        nextValidatorsHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.next_validators_hash)),
        consensusHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.consensus_hash)),
        appHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.app_hash)),
        lastResultsHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.last_results_hash)),
        evidenceHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.evidence_hash)),
        proposerAddress: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.proposer_address))
      };
    }
    function decodeBlockMeta(data) {
      return {
        blockId: decodeBlockId(data.block_id),
        blockSize: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.block_size)),
        header: decodeHeader(data.header),
        numTxs: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.num_txs))
      };
    }
    function decodeBlockchain(data) {
      return {
        lastHeight: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.last_height)),
        blockMetas: (0, encodings_1.assertArray)(data.block_metas).map(decodeBlockMeta)
      };
    }
    function decodeBroadcastTxSync(data) {
      return {
        ...decodeTxData(data),
        hash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.hash))
      };
    }
    function decodeBroadcastTxCommit(data) {
      return {
        height: (0, inthelpers_1.apiToSmallInt)(data.height),
        hash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.hash)),
        checkTx: decodeTxData((0, encodings_1.assertObject)(data.check_tx)),
        deliverTx: (0, encodings_1.may)(decodeTxData, data.deliver_tx)
      };
    }
    function decodeBlockIdFlag(blockIdFlag) {
      (0, utils_1.assert)(blockIdFlag in types_1.BlockIdFlag);
      return blockIdFlag;
    }
    function decodeOptionalTime(timestamp) {
      const nonZeroTime = timestamp && !timestamp.startsWith("0001-01-01");
      return nonZeroTime ? (0, dates_1.fromRfc3339WithNanoseconds)(timestamp) : void 0;
    }
    function decodeCommitSignature(data) {
      return {
        blockIdFlag: decodeBlockIdFlag(data.block_id_flag),
        validatorAddress: data.validator_address ? (0, encoding_1.fromHex)(data.validator_address) : void 0,
        timestamp: decodeOptionalTime(data.timestamp),
        signature: data.signature ? (0, encoding_1.fromBase64)(data.signature) : void 0
      };
    }
    function decodeCommit(data) {
      return {
        blockId: decodeBlockId((0, encodings_1.assertObject)(data.block_id)),
        height: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.height)),
        round: (0, inthelpers_1.apiToSmallInt)(data.round),
        signatures: (0, encodings_1.assertArray)(data.signatures).map(decodeCommitSignature)
      };
    }
    function decodeCommitResponse(data) {
      return {
        canonical: (0, encodings_1.assertBoolean)(data.canonical),
        header: decodeHeader(data.signed_header.header),
        commit: decodeCommit(data.signed_header.commit)
      };
    }
    function decodeValidatorGenesis(data) {
      return {
        address: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.address)),
        pubkey: decodePubkey((0, encodings_1.assertObject)(data.pub_key)),
        votingPower: (0, inthelpers_1.apiToBigInt)((0, encodings_1.assertNotEmpty)(data.power))
      };
    }
    exports.decodeValidatorGenesis = decodeValidatorGenesis;
    function decodeGenesis(data) {
      return {
        genesisTime: (0, dates_1.fromRfc3339WithNanoseconds)((0, encodings_1.assertNotEmpty)(data.genesis_time)),
        chainId: (0, encodings_1.assertNotEmpty)(data.chain_id),
        consensusParams: decodeConsensusParams(data.consensus_params),
        validators: data.validators ? (0, encodings_1.assertArray)(data.validators).map(decodeValidatorGenesis) : [],
        appHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.app_hash)),
        appState: data.app_state
      };
    }
    function decodeValidatorInfo(data) {
      return {
        pubkey: decodePubkey((0, encodings_1.assertObject)(data.pub_key)),
        votingPower: (0, inthelpers_1.apiToBigInt)((0, encodings_1.assertNotEmpty)(data.voting_power)),
        address: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.address)),
        proposerPriority: data.proposer_priority ? (0, inthelpers_1.apiToSmallInt)(data.proposer_priority) : void 0
      };
    }
    exports.decodeValidatorInfo = decodeValidatorInfo;
    function decodeNodeInfo(data) {
      return {
        id: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.id)),
        listenAddr: (0, encodings_1.assertNotEmpty)(data.listen_addr),
        network: (0, encodings_1.assertNotEmpty)(data.network),
        version: (0, encodings_1.assertString)(data.version),
        channels: (0, encodings_1.assertNotEmpty)(data.channels),
        moniker: (0, encodings_1.assertNotEmpty)(data.moniker),
        other: (0, encodings_1.dictionaryToStringMap)(data.other),
        protocolVersion: {
          app: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.protocol_version.app)),
          block: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.protocol_version.block)),
          p2p: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.protocol_version.p2p))
        }
      };
    }
    function decodeSyncInfo(data) {
      return {
        latestBlockHash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.latest_block_hash)),
        latestAppHash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.latest_app_hash)),
        latestBlockTime: (0, dates_1.fromRfc3339WithNanoseconds)((0, encodings_1.assertNotEmpty)(data.latest_block_time)),
        latestBlockHeight: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.latest_block_height)),
        catchingUp: (0, encodings_1.assertBoolean)(data.catching_up)
      };
    }
    function decodeStatus(data) {
      return {
        nodeInfo: decodeNodeInfo(data.node_info),
        syncInfo: decodeSyncInfo(data.sync_info),
        validatorInfo: decodeValidatorInfo(data.validator_info)
      };
    }
    function decodeTxProof(data) {
      return {
        data: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(data.data)),
        rootHash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.root_hash)),
        proof: {
          total: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.proof.total)),
          index: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.proof.index)),
          leafHash: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(data.proof.leaf_hash)),
          aunts: (0, encodings_1.assertArray)(data.proof.aunts).map(encoding_1.fromBase64)
        }
      };
    }
    function decodeTxResponse(data) {
      return {
        tx: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(data.tx)),
        result: decodeTxData((0, encodings_1.assertObject)(data.tx_result)),
        height: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.height)),
        index: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNumber)(data.index)),
        hash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.hash)),
        proof: (0, encodings_1.may)(decodeTxProof, data.proof)
      };
    }
    function decodeTxSearch(data) {
      return {
        totalCount: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.total_count)),
        txs: (0, encodings_1.assertArray)(data.txs).map(decodeTxResponse)
      };
    }
    function decodeTxEvent(data) {
      const tx = (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(data.tx));
      return {
        tx,
        hash: (0, hasher_1.hashTx)(tx),
        result: decodeTxData(data.result),
        height: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.height))
      };
    }
    function decodeValidators(data) {
      return {
        blockHeight: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.block_height)),
        validators: (0, encodings_1.assertArray)(data.validators).map(decodeValidatorInfo),
        count: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.count)),
        total: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.total))
      };
    }
    function decodeBlock(data) {
      var _a;
      return {
        header: decodeHeader((0, encodings_1.assertObject)(data.header)),
        // For the block at height 1, last commit is not set. This is represented in an empty object like this:
        // { height: '0', round: 0, block_id: { hash: '', parts: [Object] }, signatures: [] }
        lastCommit: data.last_commit.block_id.hash ? decodeCommit((0, encodings_1.assertObject)(data.last_commit)) : null,
        txs: data.data.txs ? (0, encodings_1.assertArray)(data.data.txs).map(encoding_1.fromBase64) : [],
        // Lift up .evidence.evidence to just .evidence
        // See https://github.com/tendermint/tendermint/issues/7697
        evidence: ((_a = data.evidence) == null ? void 0 : _a.evidence) ?? []
      };
    }
    function decodeBlockResponse(data) {
      return {
        blockId: decodeBlockId(data.block_id),
        block: decodeBlock(data.block)
      };
    }
    function decodeBlockSearch(data) {
      return {
        totalCount: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.total_count)),
        blocks: (0, encodings_1.assertArray)(data.blocks).map(decodeBlockResponse)
      };
    }
    function decodeNumUnconfirmedTxs(data) {
      return {
        total: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.total)),
        totalBytes: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.total_bytes))
      };
    }
    var Responses = class _Responses {
      static decodeAbciInfo(response) {
        return decodeAbciInfo((0, encodings_1.assertObject)(response.result.response));
      }
      static decodeAbciQuery(response) {
        return decodeAbciQuery((0, encodings_1.assertObject)(response.result.response));
      }
      static decodeBlock(response) {
        return decodeBlockResponse(response.result);
      }
      static decodeBlockResults(response) {
        return decodeBlockResults(response.result);
      }
      static decodeBlockSearch(response) {
        return decodeBlockSearch(response.result);
      }
      static decodeBlockchain(response) {
        return decodeBlockchain(response.result);
      }
      static decodeBroadcastTxSync(response) {
        return decodeBroadcastTxSync(response.result);
      }
      static decodeBroadcastTxAsync(response) {
        return _Responses.decodeBroadcastTxSync(response);
      }
      static decodeBroadcastTxCommit(response) {
        return decodeBroadcastTxCommit(response.result);
      }
      static decodeCommit(response) {
        return decodeCommitResponse(response.result);
      }
      static decodeGenesis(response) {
        return decodeGenesis((0, encodings_1.assertObject)(response.result.genesis));
      }
      static decodeHealth() {
        return null;
      }
      static decodeNumUnconfirmedTxs(response) {
        return decodeNumUnconfirmedTxs(response.result);
      }
      static decodeStatus(response) {
        return decodeStatus(response.result);
      }
      static decodeNewBlockEvent(event) {
        return decodeBlock(event.data.value.block);
      }
      static decodeNewBlockHeaderEvent(event) {
        return decodeHeader(event.data.value.header);
      }
      static decodeTxEvent(event) {
        return decodeTxEvent(event.data.value.TxResult);
      }
      static decodeTx(response) {
        return decodeTxResponse(response.result);
      }
      static decodeTxSearch(response) {
        return decodeTxSearch(response.result);
      }
      static decodeValidators(response) {
        return decodeValidators(response.result);
      }
    };
    exports.Responses = Responses;
  }
});

// node_modules/@cosmjs/tendermint-rpc/build/tendermint37/adaptor/index.js
var require_adaptor2 = __commonJS({
  "node_modules/@cosmjs/tendermint-rpc/build/tendermint37/adaptor/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.adaptor37 = void 0;
    var hasher_1 = require_hasher2();
    var requests_1 = require_requests4();
    var responses_1 = require_responses4();
    exports.adaptor37 = {
      params: requests_1.Params,
      responses: responses_1.Responses,
      hashTx: hasher_1.hashTx,
      hashBlock: hasher_1.hashBlock
    };
  }
});

// node_modules/@cosmjs/tendermint-rpc/build/tendermint37/tendermint37client.js
var require_tendermint37client = __commonJS({
  "node_modules/@cosmjs/tendermint-rpc/build/tendermint37/tendermint37client.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Tendermint37Client = void 0;
    var jsonrpc_1 = require_jsonrpc();
    var rpcclients_1 = require_rpcclients();
    var adaptor_1 = require_adaptor2();
    var requests = __importStar(require_requests3());
    var Tendermint37Client = class _Tendermint37Client {
      /**
       * Use `Tendermint37Client.connect` or `Tendermint37Client.create` to create an instance.
       */
      constructor(client) {
        this.client = client;
        this.p = adaptor_1.adaptor37.params;
        this.r = adaptor_1.adaptor37.responses;
      }
      /**
       * Creates a new Tendermint client for the given endpoint.
       *
       * Uses HTTP when the URL schema is http or https. Uses WebSockets otherwise.
       */
      static async connect(endpoint) {
        if (typeof endpoint === "object") {
          return _Tendermint37Client.create(new rpcclients_1.HttpClient(endpoint));
        } else {
          const useHttp = endpoint.startsWith("http://") || endpoint.startsWith("https://");
          const rpcClient = useHttp ? new rpcclients_1.HttpClient(endpoint) : new rpcclients_1.WebsocketClient(endpoint);
          return _Tendermint37Client.create(rpcClient);
        }
      }
      /**
       * Creates a new Tendermint client given an RPC client.
       */
      static async create(rpcClient) {
        const _version = await this.detectVersion(rpcClient);
        return new _Tendermint37Client(rpcClient);
      }
      static async detectVersion(client) {
        const req = (0, jsonrpc_1.createJsonRpcRequest)(requests.Method.Status);
        const response = await client.execute(req);
        const result = response.result;
        if (!result || !result.node_info) {
          throw new Error("Unrecognized format for status response");
        }
        const version = result.node_info.version;
        if (typeof version !== "string") {
          throw new Error("Unrecognized version format: must be string");
        }
        return version;
      }
      disconnect() {
        this.client.disconnect();
      }
      async abciInfo() {
        const query = { method: requests.Method.AbciInfo };
        return this.doCall(query, this.p.encodeAbciInfo, this.r.decodeAbciInfo);
      }
      async abciQuery(params) {
        const query = { params, method: requests.Method.AbciQuery };
        return this.doCall(query, this.p.encodeAbciQuery, this.r.decodeAbciQuery);
      }
      async block(height) {
        const query = { method: requests.Method.Block, params: { height } };
        return this.doCall(query, this.p.encodeBlock, this.r.decodeBlock);
      }
      async blockResults(height) {
        const query = {
          method: requests.Method.BlockResults,
          params: { height }
        };
        return this.doCall(query, this.p.encodeBlockResults, this.r.decodeBlockResults);
      }
      /**
       * Search for events that are in a block.
       *
       * NOTE
       * This method will error on any node that is running a Tendermint version lower than 0.34.9.
       *
       * @see https://docs.tendermint.com/master/rpc/#/Info/block_search
       */
      async blockSearch(params) {
        const query = { params, method: requests.Method.BlockSearch };
        const resp = await this.doCall(query, this.p.encodeBlockSearch, this.r.decodeBlockSearch);
        return {
          ...resp,
          // make sure we sort by height, as tendermint may be sorting by string value of the height
          blocks: [...resp.blocks].sort((a, b) => a.block.header.height - b.block.header.height)
        };
      }
      // this should paginate through all blockSearch options to ensure it returns all results.
      // starts with page 1 or whatever was provided (eg. to start on page 7)
      //
      // NOTE
      // This method will error on any node that is running a Tendermint version lower than 0.34.9.
      async blockSearchAll(params) {
        let page = params.page || 1;
        const blocks = [];
        let done = false;
        while (!done) {
          const resp = await this.blockSearch({ ...params, page });
          blocks.push(...resp.blocks);
          if (blocks.length < resp.totalCount) {
            page++;
          } else {
            done = true;
          }
        }
        blocks.sort((a, b) => a.block.header.height - b.block.header.height);
        return {
          totalCount: blocks.length,
          blocks
        };
      }
      /**
       * Queries block headers filtered by minHeight <= height <= maxHeight.
       *
       * @param minHeight The minimum height to be included in the result. Defaults to 0.
       * @param maxHeight The maximum height to be included in the result. Defaults to infinity.
       */
      async blockchain(minHeight, maxHeight) {
        const query = {
          method: requests.Method.Blockchain,
          params: {
            minHeight,
            maxHeight
          }
        };
        return this.doCall(query, this.p.encodeBlockchain, this.r.decodeBlockchain);
      }
      /**
       * Broadcast transaction to mempool and wait for response
       *
       * @see https://docs.tendermint.com/master/rpc/#/Tx/broadcast_tx_sync
       */
      async broadcastTxSync(params) {
        const query = { params, method: requests.Method.BroadcastTxSync };
        return this.doCall(query, this.p.encodeBroadcastTx, this.r.decodeBroadcastTxSync);
      }
      /**
       * Broadcast transaction to mempool and do not wait for result
       *
       * @see https://docs.tendermint.com/master/rpc/#/Tx/broadcast_tx_async
       */
      async broadcastTxAsync(params) {
        const query = { params, method: requests.Method.BroadcastTxAsync };
        return this.doCall(query, this.p.encodeBroadcastTx, this.r.decodeBroadcastTxAsync);
      }
      /**
       * Broadcast transaction to mempool and wait for block
       *
       * @see https://docs.tendermint.com/master/rpc/#/Tx/broadcast_tx_commit
       */
      async broadcastTxCommit(params) {
        const query = { params, method: requests.Method.BroadcastTxCommit };
        return this.doCall(query, this.p.encodeBroadcastTx, this.r.decodeBroadcastTxCommit);
      }
      async commit(height) {
        const query = { method: requests.Method.Commit, params: { height } };
        return this.doCall(query, this.p.encodeCommit, this.r.decodeCommit);
      }
      async genesis() {
        const query = { method: requests.Method.Genesis };
        return this.doCall(query, this.p.encodeGenesis, this.r.decodeGenesis);
      }
      async health() {
        const query = { method: requests.Method.Health };
        return this.doCall(query, this.p.encodeHealth, this.r.decodeHealth);
      }
      async numUnconfirmedTxs() {
        const query = { method: requests.Method.NumUnconfirmedTxs };
        return this.doCall(query, this.p.encodeNumUnconfirmedTxs, this.r.decodeNumUnconfirmedTxs);
      }
      async status() {
        const query = { method: requests.Method.Status };
        return this.doCall(query, this.p.encodeStatus, this.r.decodeStatus);
      }
      subscribeNewBlock() {
        const request = {
          method: requests.Method.Subscribe,
          query: { type: requests.SubscriptionEventType.NewBlock }
        };
        return this.subscribe(request, this.r.decodeNewBlockEvent);
      }
      subscribeNewBlockHeader() {
        const request = {
          method: requests.Method.Subscribe,
          query: { type: requests.SubscriptionEventType.NewBlockHeader }
        };
        return this.subscribe(request, this.r.decodeNewBlockHeaderEvent);
      }
      subscribeTx(query) {
        const request = {
          method: requests.Method.Subscribe,
          query: {
            type: requests.SubscriptionEventType.Tx,
            raw: query
          }
        };
        return this.subscribe(request, this.r.decodeTxEvent);
      }
      /**
       * Get a single transaction by hash
       *
       * @see https://docs.tendermint.com/master/rpc/#/Info/tx
       */
      async tx(params) {
        const query = { params, method: requests.Method.Tx };
        return this.doCall(query, this.p.encodeTx, this.r.decodeTx);
      }
      /**
       * Search for transactions that are in a block
       *
       * @see https://docs.tendermint.com/master/rpc/#/Info/tx_search
       */
      async txSearch(params) {
        const query = { params, method: requests.Method.TxSearch };
        return this.doCall(query, this.p.encodeTxSearch, this.r.decodeTxSearch);
      }
      // this should paginate through all txSearch options to ensure it returns all results.
      // starts with page 1 or whatever was provided (eg. to start on page 7)
      async txSearchAll(params) {
        let page = params.page || 1;
        const txs = [];
        let done = false;
        while (!done) {
          const resp = await this.txSearch({ ...params, page });
          txs.push(...resp.txs);
          if (txs.length < resp.totalCount) {
            page++;
          } else {
            done = true;
          }
        }
        return {
          totalCount: txs.length,
          txs
        };
      }
      async validators(params) {
        const query = {
          method: requests.Method.Validators,
          params
        };
        return this.doCall(query, this.p.encodeValidators, this.r.decodeValidators);
      }
      async validatorsAll(height) {
        const validators = [];
        let page = 1;
        let done = false;
        let blockHeight = height;
        while (!done) {
          const response = await this.validators({
            per_page: 50,
            height: blockHeight,
            page
          });
          validators.push(...response.validators);
          blockHeight = blockHeight || response.blockHeight;
          if (validators.length < response.total) {
            page++;
          } else {
            done = true;
          }
        }
        return {
          // NOTE: Default value is for type safety but this should always be set
          blockHeight: blockHeight ?? 0,
          count: validators.length,
          total: validators.length,
          validators
        };
      }
      // doCall is a helper to handle the encode/call/decode logic
      async doCall(request, encode, decode) {
        const req = encode(request);
        const result = await this.client.execute(req);
        return decode(result);
      }
      subscribe(request, decode) {
        if (!(0, rpcclients_1.instanceOfRpcStreamingClient)(this.client)) {
          throw new Error("This RPC client type cannot subscribe to events");
        }
        const req = this.p.encodeSubscribe(request);
        const eventStream = this.client.listen(req);
        return eventStream.map((event) => {
          return decode(event);
        });
      }
    };
    exports.Tendermint37Client = Tendermint37Client;
  }
});

// node_modules/@cosmjs/tendermint-rpc/build/tendermint37/index.js
var require_tendermint37 = __commonJS({
  "node_modules/@cosmjs/tendermint-rpc/build/tendermint37/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Tendermint37Client = exports.VoteType = exports.broadcastTxSyncSuccess = exports.broadcastTxCommitSuccess = exports.SubscriptionEventType = exports.Method = void 0;
    var requests_1 = require_requests3();
    Object.defineProperty(exports, "Method", { enumerable: true, get: function() {
      return requests_1.Method;
    } });
    Object.defineProperty(exports, "SubscriptionEventType", { enumerable: true, get: function() {
      return requests_1.SubscriptionEventType;
    } });
    var responses_1 = require_responses3();
    Object.defineProperty(exports, "broadcastTxCommitSuccess", { enumerable: true, get: function() {
      return responses_1.broadcastTxCommitSuccess;
    } });
    Object.defineProperty(exports, "broadcastTxSyncSuccess", { enumerable: true, get: function() {
      return responses_1.broadcastTxSyncSuccess;
    } });
    Object.defineProperty(exports, "VoteType", { enumerable: true, get: function() {
      return responses_1.VoteType;
    } });
    var tendermint37client_1 = require_tendermint37client();
    Object.defineProperty(exports, "Tendermint37Client", { enumerable: true, get: function() {
      return tendermint37client_1.Tendermint37Client;
    } });
  }
});

// node_modules/@cosmjs/tendermint-rpc/build/tendermintclient.js
var require_tendermintclient = __commonJS({
  "node_modules/@cosmjs/tendermint-rpc/build/tendermintclient.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isTendermint37Client = exports.isTendermint34Client = void 0;
    var tendermint34_1 = require_tendermint34();
    var tendermint37_1 = require_tendermint37();
    function isTendermint34Client(client) {
      return client instanceof tendermint34_1.Tendermint34Client;
    }
    exports.isTendermint34Client = isTendermint34Client;
    function isTendermint37Client(client) {
      return client instanceof tendermint37_1.Tendermint37Client;
    }
    exports.isTendermint37Client = isTendermint37Client;
  }
});

// node_modules/@cosmjs/tendermint-rpc/build/index.js
var require_build11 = __commonJS({
  "node_modules/@cosmjs/tendermint-rpc/build/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BlockIdFlag = exports.isTendermint37Client = exports.isTendermint34Client = exports.Tendermint37Client = exports.tendermint37 = exports.Tendermint34Client = exports.tendermint34 = exports.VoteType = exports.SubscriptionEventType = exports.Method = exports.broadcastTxSyncSuccess = exports.broadcastTxCommitSuccess = exports.WebsocketClient = exports.HttpClient = exports.HttpBatchClient = exports.toSeconds = exports.toRfc3339WithNanoseconds = exports.fromSeconds = exports.fromRfc3339WithNanoseconds = exports.DateTime = exports.rawSecp256k1PubkeyToRawAddress = exports.rawEd25519PubkeyToRawAddress = exports.pubkeyToRawAddress = exports.pubkeyToAddress = void 0;
    var addresses_1 = require_addresses2();
    Object.defineProperty(exports, "pubkeyToAddress", { enumerable: true, get: function() {
      return addresses_1.pubkeyToAddress;
    } });
    Object.defineProperty(exports, "pubkeyToRawAddress", { enumerable: true, get: function() {
      return addresses_1.pubkeyToRawAddress;
    } });
    Object.defineProperty(exports, "rawEd25519PubkeyToRawAddress", { enumerable: true, get: function() {
      return addresses_1.rawEd25519PubkeyToRawAddress;
    } });
    Object.defineProperty(exports, "rawSecp256k1PubkeyToRawAddress", { enumerable: true, get: function() {
      return addresses_1.rawSecp256k1PubkeyToRawAddress;
    } });
    var dates_1 = require_dates();
    Object.defineProperty(exports, "DateTime", { enumerable: true, get: function() {
      return dates_1.DateTime;
    } });
    Object.defineProperty(exports, "fromRfc3339WithNanoseconds", { enumerable: true, get: function() {
      return dates_1.fromRfc3339WithNanoseconds;
    } });
    Object.defineProperty(exports, "fromSeconds", { enumerable: true, get: function() {
      return dates_1.fromSeconds;
    } });
    Object.defineProperty(exports, "toRfc3339WithNanoseconds", { enumerable: true, get: function() {
      return dates_1.toRfc3339WithNanoseconds;
    } });
    Object.defineProperty(exports, "toSeconds", { enumerable: true, get: function() {
      return dates_1.toSeconds;
    } });
    var rpcclients_1 = require_rpcclients();
    Object.defineProperty(exports, "HttpBatchClient", { enumerable: true, get: function() {
      return rpcclients_1.HttpBatchClient;
    } });
    Object.defineProperty(exports, "HttpClient", { enumerable: true, get: function() {
      return rpcclients_1.HttpClient;
    } });
    Object.defineProperty(exports, "WebsocketClient", { enumerable: true, get: function() {
      return rpcclients_1.WebsocketClient;
    } });
    var tendermint34_1 = require_tendermint34();
    Object.defineProperty(exports, "broadcastTxCommitSuccess", { enumerable: true, get: function() {
      return tendermint34_1.broadcastTxCommitSuccess;
    } });
    Object.defineProperty(exports, "broadcastTxSyncSuccess", { enumerable: true, get: function() {
      return tendermint34_1.broadcastTxSyncSuccess;
    } });
    Object.defineProperty(exports, "Method", { enumerable: true, get: function() {
      return tendermint34_1.Method;
    } });
    Object.defineProperty(exports, "SubscriptionEventType", { enumerable: true, get: function() {
      return tendermint34_1.SubscriptionEventType;
    } });
    Object.defineProperty(exports, "VoteType", { enumerable: true, get: function() {
      return tendermint34_1.VoteType;
    } });
    exports.tendermint34 = __importStar(require_tendermint34());
    var tendermint34_2 = require_tendermint34();
    Object.defineProperty(exports, "Tendermint34Client", { enumerable: true, get: function() {
      return tendermint34_2.Tendermint34Client;
    } });
    exports.tendermint37 = __importStar(require_tendermint37());
    var tendermint37_1 = require_tendermint37();
    Object.defineProperty(exports, "Tendermint37Client", { enumerable: true, get: function() {
      return tendermint37_1.Tendermint37Client;
    } });
    var tendermintclient_1 = require_tendermintclient();
    Object.defineProperty(exports, "isTendermint34Client", { enumerable: true, get: function() {
      return tendermintclient_1.isTendermint34Client;
    } });
    Object.defineProperty(exports, "isTendermint37Client", { enumerable: true, get: function() {
      return tendermintclient_1.isTendermint37Client;
    } });
    var types_1 = require_types5();
    Object.defineProperty(exports, "BlockIdFlag", { enumerable: true, get: function() {
      return types_1.BlockIdFlag;
    } });
  }
});

// node_modules/@cosmjs/stargate/build/stargateclient.js
var require_stargateclient = __commonJS({
  "node_modules/@cosmjs/stargate/build/stargateclient.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.StargateClient = exports.BroadcastTxError = exports.assertIsDeliverTxFailure = exports.assertIsDeliverTxSuccess = exports.isDeliverTxSuccess = exports.isDeliverTxFailure = exports.TimeoutError = void 0;
    var amino_1 = require_build5();
    var encoding_1 = require_build2();
    var math_1 = require_build();
    var tendermint_rpc_1 = require_build11();
    var utils_1 = require_build3();
    var accounts_1 = require_accounts();
    var events_1 = require_events();
    var modules_1 = require_modules();
    var queryclient_1 = require_queryclient2();
    var search_1 = require_search();
    var TimeoutError = class extends Error {
      constructor(message, txId) {
        super(message);
        this.txId = txId;
      }
    };
    exports.TimeoutError = TimeoutError;
    function isDeliverTxFailure(result) {
      return !!result.code;
    }
    exports.isDeliverTxFailure = isDeliverTxFailure;
    function isDeliverTxSuccess(result) {
      return !isDeliverTxFailure(result);
    }
    exports.isDeliverTxSuccess = isDeliverTxSuccess;
    function assertIsDeliverTxSuccess(result) {
      if (isDeliverTxFailure(result)) {
        throw new Error(`Error when broadcasting tx ${result.transactionHash} at height ${result.height}. Code: ${result.code}; Raw log: ${result.rawLog}`);
      }
    }
    exports.assertIsDeliverTxSuccess = assertIsDeliverTxSuccess;
    function assertIsDeliverTxFailure(result) {
      if (isDeliverTxSuccess(result)) {
        throw new Error(`Transaction ${result.transactionHash} did not fail at height ${result.height}. Code: ${result.code}; Raw log: ${result.rawLog}`);
      }
    }
    exports.assertIsDeliverTxFailure = assertIsDeliverTxFailure;
    var BroadcastTxError = class extends Error {
      constructor(code, codespace, log) {
        super(`Broadcasting transaction failed with code ${code} (codespace: ${codespace}). Log: ${log}`);
        this.code = code;
        this.codespace = codespace;
        this.log = log;
      }
    };
    exports.BroadcastTxError = BroadcastTxError;
    var StargateClient = class _StargateClient {
      constructor(tmClient, options) {
        if (tmClient) {
          this.tmClient = tmClient;
          this.queryClient = queryclient_1.QueryClient.withExtensions(tmClient, modules_1.setupAuthExtension, modules_1.setupBankExtension, modules_1.setupStakingExtension, modules_1.setupTxExtension);
        }
        const { accountParser = accounts_1.accountFromAny } = options;
        this.accountParser = accountParser;
      }
      /**
       * Creates an instance by connecting to the given Tendermint RPC endpoint.
       *
       * For now this uses the Tendermint 0.34 client. If you need Tendermint 0.37
       * support, see `create`.
       */
      static async connect(endpoint, options = {}) {
        const tmClient = await tendermint_rpc_1.Tendermint34Client.connect(endpoint);
        return _StargateClient.create(tmClient, options);
      }
      /**
       * Creates an instance from a manually created Tendermint client.
       * Use this to use `Tendermint37Client` instead of `Tendermint34Client`.
       */
      static async create(tmClient, options = {}) {
        return new _StargateClient(tmClient, options);
      }
      getTmClient() {
        return this.tmClient;
      }
      forceGetTmClient() {
        if (!this.tmClient) {
          throw new Error("Tendermint client not available. You cannot use online functionality in offline mode.");
        }
        return this.tmClient;
      }
      getQueryClient() {
        return this.queryClient;
      }
      forceGetQueryClient() {
        if (!this.queryClient) {
          throw new Error("Query client not available. You cannot use online functionality in offline mode.");
        }
        return this.queryClient;
      }
      async getChainId() {
        if (!this.chainId) {
          const response = await this.forceGetTmClient().status();
          const chainId = response.nodeInfo.network;
          if (!chainId)
            throw new Error("Chain ID must not be empty");
          this.chainId = chainId;
        }
        return this.chainId;
      }
      async getHeight() {
        const status = await this.forceGetTmClient().status();
        return status.syncInfo.latestBlockHeight;
      }
      async getAccount(searchAddress) {
        try {
          const account = await this.forceGetQueryClient().auth.account(searchAddress);
          return account ? this.accountParser(account) : null;
        } catch (error) {
          if (/rpc error: code = NotFound/i.test(error.toString())) {
            return null;
          }
          throw error;
        }
      }
      async getSequence(address) {
        const account = await this.getAccount(address);
        if (!account) {
          throw new Error(`Account '${address}' does not exist on chain. Send some tokens there before trying to query sequence.`);
        }
        return {
          accountNumber: account.accountNumber,
          sequence: account.sequence
        };
      }
      async getBlock(height) {
        const response = await this.forceGetTmClient().block(height);
        return {
          id: (0, encoding_1.toHex)(response.blockId.hash).toUpperCase(),
          header: {
            version: {
              block: new math_1.Uint53(response.block.header.version.block).toString(),
              app: new math_1.Uint53(response.block.header.version.app).toString()
            },
            height: response.block.header.height,
            chainId: response.block.header.chainId,
            time: (0, tendermint_rpc_1.toRfc3339WithNanoseconds)(response.block.header.time)
          },
          txs: response.block.txs
        };
      }
      async getBalance(address, searchDenom) {
        return this.forceGetQueryClient().bank.balance(address, searchDenom);
      }
      /**
       * Queries all balances for all denoms that belong to this address.
       *
       * Uses the grpc queries (which iterates over the store internally), and we cannot get
       * proofs from such a method.
       */
      async getAllBalances(address) {
        return this.forceGetQueryClient().bank.allBalances(address);
      }
      async getBalanceStaked(address) {
        const allDelegations = [];
        let startAtKey = void 0;
        do {
          const { delegationResponses, pagination } = await this.forceGetQueryClient().staking.delegatorDelegations(address, startAtKey);
          const loadedDelegations = delegationResponses || [];
          allDelegations.push(...loadedDelegations);
          startAtKey = pagination == null ? void 0 : pagination.nextKey;
        } while (startAtKey !== void 0 && startAtKey.length !== 0);
        const sumValues = allDelegations.reduce((previousValue, currentValue) => {
          (0, utils_1.assert)(currentValue.balance);
          return previousValue !== null ? (0, amino_1.addCoins)(previousValue, currentValue.balance) : currentValue.balance;
        }, null);
        return sumValues;
      }
      async getDelegation(delegatorAddress, validatorAddress) {
        var _a;
        let delegatedAmount;
        try {
          delegatedAmount = (_a = (await this.forceGetQueryClient().staking.delegation(delegatorAddress, validatorAddress)).delegationResponse) == null ? void 0 : _a.balance;
        } catch (e) {
          if (e.toString().includes("key not found")) {
          } else {
            throw e;
          }
        }
        return delegatedAmount || null;
      }
      async getTx(id) {
        const results = await this.txsQuery(`tx.hash='${id}'`);
        return results[0] ?? null;
      }
      async searchTx(query, filter = {}) {
        const minHeight = filter.minHeight || 0;
        const maxHeight = filter.maxHeight || Number.MAX_SAFE_INTEGER;
        if (maxHeight < minHeight)
          return [];
        function withFilters(originalQuery) {
          return `${originalQuery} AND tx.height>=${minHeight} AND tx.height<=${maxHeight}`;
        }
        let txs;
        if ((0, search_1.isSearchByHeightQuery)(query)) {
          txs = query.height >= minHeight && query.height <= maxHeight ? await this.txsQuery(`tx.height=${query.height}`) : [];
        } else if ((0, search_1.isSearchBySentFromOrToQuery)(query)) {
          const sentQuery = withFilters(`message.module='bank' AND transfer.sender='${query.sentFromOrTo}'`);
          const receivedQuery = withFilters(`message.module='bank' AND transfer.recipient='${query.sentFromOrTo}'`);
          const [sent, received] = await Promise.all([sentQuery, receivedQuery].map((rawQuery) => this.txsQuery(rawQuery)));
          const sentHashes = sent.map((t) => t.hash);
          txs = [...sent, ...received.filter((t) => !sentHashes.includes(t.hash))];
        } else if ((0, search_1.isSearchByTagsQuery)(query)) {
          const rawQuery = withFilters(query.tags.map((t) => `${t.key}='${t.value}'`).join(" AND "));
          txs = await this.txsQuery(rawQuery);
        } else {
          throw new Error("Unknown query type");
        }
        const filtered = txs.filter((tx) => tx.height >= minHeight && tx.height <= maxHeight);
        return filtered;
      }
      disconnect() {
        if (this.tmClient)
          this.tmClient.disconnect();
      }
      /**
       * Broadcasts a signed transaction to the network and monitors its inclusion in a block.
       *
       * If broadcasting is rejected by the node for some reason (e.g. because of a CheckTx failure),
       * an error is thrown.
       *
       * If the transaction is not included in a block before the provided timeout, this errors with a `TimeoutError`.
       *
       * If the transaction is included in a block, a `DeliverTxResponse` is returned. The caller then
       * usually needs to check for execution success or failure.
       */
      async broadcastTx(tx, timeoutMs = 6e4, pollIntervalMs = 3e3) {
        let timedOut = false;
        const txPollTimeout = setTimeout(() => {
          timedOut = true;
        }, timeoutMs);
        const pollForTx = async (txId) => {
          if (timedOut) {
            throw new TimeoutError(`Transaction with ID ${txId} was submitted but was not yet found on the chain. You might want to check later. There was a wait of ${timeoutMs / 1e3} seconds.`, txId);
          }
          await (0, utils_1.sleep)(pollIntervalMs);
          const result = await this.getTx(txId);
          return result ? {
            code: result.code,
            height: result.height,
            txIndex: result.txIndex,
            events: result.events,
            rawLog: result.rawLog,
            transactionHash: txId,
            gasUsed: result.gasUsed,
            gasWanted: result.gasWanted
          } : pollForTx(txId);
        };
        const broadcasted = await this.forceGetTmClient().broadcastTxSync({ tx });
        if (broadcasted.code) {
          return Promise.reject(new BroadcastTxError(broadcasted.code, broadcasted.codespace ?? "", broadcasted.log));
        }
        const transactionId = (0, encoding_1.toHex)(broadcasted.hash).toUpperCase();
        return new Promise((resolve, reject) => pollForTx(transactionId).then((value) => {
          clearTimeout(txPollTimeout);
          resolve(value);
        }, (error) => {
          clearTimeout(txPollTimeout);
          reject(error);
        }));
      }
      async txsQuery(query) {
        const results = await this.forceGetTmClient().txSearchAll({ query });
        return results.txs.map((tx) => {
          return {
            height: tx.height,
            txIndex: tx.index,
            hash: (0, encoding_1.toHex)(tx.hash).toUpperCase(),
            code: tx.result.code,
            events: tx.result.events.map(events_1.fromTendermintEvent),
            rawLog: tx.result.log || "",
            tx: tx.tx,
            gasUsed: tx.result.gasUsed,
            gasWanted: tx.result.gasWanted
          };
        });
      }
    };
    exports.StargateClient = StargateClient;
  }
});

// node_modules/@cosmjs/stargate/build/signingstargateclient.js
var require_signingstargateclient = __commonJS({
  "node_modules/@cosmjs/stargate/build/signingstargateclient.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SigningStargateClient = exports.createDefaultAminoConverters = exports.defaultRegistryTypes = void 0;
    var amino_1 = require_build5();
    var encoding_1 = require_build2();
    var math_1 = require_build();
    var proto_signing_1 = require_build6();
    var tendermint_rpc_1 = require_build11();
    var utils_1 = require_build3();
    var coin_1 = require_coin();
    var tx_1 = require_tx4();
    var tx_2 = require_tx11();
    var signing_1 = require_signing();
    var tx_3 = require_tx();
    var tx_4 = require_tx7();
    var long_1 = __importDefault(require_long());
    var aminotypes_1 = require_aminotypes();
    var fee_1 = require_fee();
    var modules_1 = require_modules();
    var modules_2 = require_modules();
    var stargateclient_1 = require_stargateclient();
    exports.defaultRegistryTypes = [
      ["/cosmos.base.v1beta1.Coin", coin_1.Coin],
      ...modules_1.authzTypes,
      ...modules_1.bankTypes,
      ...modules_1.distributionTypes,
      ...modules_1.feegrantTypes,
      ...modules_1.govTypes,
      ...modules_1.stakingTypes,
      ...modules_1.ibcTypes,
      ...modules_1.vestingTypes
    ];
    function createDefaultAminoConverters() {
      return {
        ...(0, modules_2.createAuthzAminoConverters)(),
        ...(0, modules_2.createBankAminoConverters)(),
        ...(0, modules_2.createDistributionAminoConverters)(),
        ...(0, modules_2.createGovAminoConverters)(),
        ...(0, modules_2.createStakingAminoConverters)(),
        ...(0, modules_2.createIbcAminoConverters)(),
        ...(0, modules_2.createFeegrantAminoConverters)(),
        ...(0, modules_2.createVestingAminoConverters)()
      };
    }
    exports.createDefaultAminoConverters = createDefaultAminoConverters;
    var SigningStargateClient = class _SigningStargateClient extends stargateclient_1.StargateClient {
      constructor(tmClient, signer, options) {
        super(tmClient, options);
        const { registry = new proto_signing_1.Registry(exports.defaultRegistryTypes), aminoTypes = new aminotypes_1.AminoTypes(createDefaultAminoConverters()) } = options;
        this.registry = registry;
        this.aminoTypes = aminoTypes;
        this.signer = signer;
        this.broadcastTimeoutMs = options.broadcastTimeoutMs;
        this.broadcastPollIntervalMs = options.broadcastPollIntervalMs;
        this.gasPrice = options.gasPrice;
      }
      /**
       * Creates an instance by connecting to the given Tendermint RPC endpoint.
       *
       * For now this uses the Tendermint 0.34 client. If you need Tendermint 0.37
       * support, see `createWithSigner`.
       */
      static async connectWithSigner(endpoint, signer, options = {}) {
        const tmClient = await tendermint_rpc_1.Tendermint34Client.connect(endpoint);
        return _SigningStargateClient.createWithSigner(tmClient, signer, options);
      }
      /**
       * Creates an instance from a manually created Tendermint client.
       * Use this to use `Tendermint37Client` instead of `Tendermint34Client`.
       */
      static async createWithSigner(tmClient, signer, options = {}) {
        return new _SigningStargateClient(tmClient, signer, options);
      }
      /**
       * Creates a client in offline mode.
       *
       * This should only be used in niche cases where you know exactly what you're doing,
       * e.g. when building an offline signing application.
       *
       * When you try to use online functionality with such a signer, an
       * exception will be raised.
       */
      static async offline(signer, options = {}) {
        return new _SigningStargateClient(void 0, signer, options);
      }
      async simulate(signerAddress, messages, memo) {
        const anyMsgs = messages.map((m) => this.registry.encodeAsAny(m));
        const accountFromSigner = (await this.signer.getAccounts()).find((account) => account.address === signerAddress);
        if (!accountFromSigner) {
          throw new Error("Failed to retrieve account from signer");
        }
        const pubkey = (0, amino_1.encodeSecp256k1Pubkey)(accountFromSigner.pubkey);
        const { sequence } = await this.getSequence(signerAddress);
        const { gasInfo } = await this.forceGetQueryClient().tx.simulate(anyMsgs, memo, pubkey, sequence);
        (0, utils_1.assertDefined)(gasInfo);
        return math_1.Uint53.fromString(gasInfo.gasUsed.toString()).toNumber();
      }
      async sendTokens(senderAddress, recipientAddress, amount, fee, memo = "") {
        const sendMsg = {
          typeUrl: "/cosmos.bank.v1beta1.MsgSend",
          value: {
            fromAddress: senderAddress,
            toAddress: recipientAddress,
            amount: [...amount]
          }
        };
        return this.signAndBroadcast(senderAddress, [sendMsg], fee, memo);
      }
      async delegateTokens(delegatorAddress, validatorAddress, amount, fee, memo = "") {
        const delegateMsg = {
          typeUrl: "/cosmos.staking.v1beta1.MsgDelegate",
          value: tx_2.MsgDelegate.fromPartial({
            delegatorAddress,
            validatorAddress,
            amount
          })
        };
        return this.signAndBroadcast(delegatorAddress, [delegateMsg], fee, memo);
      }
      async undelegateTokens(delegatorAddress, validatorAddress, amount, fee, memo = "") {
        const undelegateMsg = {
          typeUrl: "/cosmos.staking.v1beta1.MsgUndelegate",
          value: tx_2.MsgUndelegate.fromPartial({
            delegatorAddress,
            validatorAddress,
            amount
          })
        };
        return this.signAndBroadcast(delegatorAddress, [undelegateMsg], fee, memo);
      }
      async withdrawRewards(delegatorAddress, validatorAddress, fee, memo = "") {
        const withdrawMsg = {
          typeUrl: "/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward",
          value: tx_1.MsgWithdrawDelegatorReward.fromPartial({
            delegatorAddress,
            validatorAddress
          })
        };
        return this.signAndBroadcast(delegatorAddress, [withdrawMsg], fee, memo);
      }
      async sendIbcTokens(senderAddress, recipientAddress, transferAmount, sourcePort, sourceChannel, timeoutHeight, timeoutTimestamp, fee, memo = "") {
        const timeoutTimestampNanoseconds = timeoutTimestamp ? long_1.default.fromNumber(timeoutTimestamp).multiply(1e9) : void 0;
        const transferMsg = {
          typeUrl: "/ibc.applications.transfer.v1.MsgTransfer",
          value: tx_4.MsgTransfer.fromPartial({
            sourcePort,
            sourceChannel,
            sender: senderAddress,
            receiver: recipientAddress,
            token: transferAmount,
            timeoutHeight,
            timeoutTimestamp: timeoutTimestampNanoseconds
          })
        };
        return this.signAndBroadcast(senderAddress, [transferMsg], fee, memo);
      }
      async signAndBroadcast(signerAddress, messages, fee, memo = "") {
        let usedFee;
        if (fee == "auto" || typeof fee === "number") {
          (0, utils_1.assertDefined)(this.gasPrice, "Gas price must be set in the client options when auto gas is used.");
          const gasEstimation = await this.simulate(signerAddress, messages, memo);
          const multiplier = typeof fee === "number" ? fee : 1.3;
          usedFee = (0, fee_1.calculateFee)(Math.round(gasEstimation * multiplier), this.gasPrice);
        } else {
          usedFee = fee;
        }
        const txRaw = await this.sign(signerAddress, messages, usedFee, memo);
        const txBytes = tx_3.TxRaw.encode(txRaw).finish();
        return this.broadcastTx(txBytes, this.broadcastTimeoutMs, this.broadcastPollIntervalMs);
      }
      /**
       * Gets account number and sequence from the API, creates a sign doc,
       * creates a single signature and assembles the signed transaction.
       *
       * The sign mode (SIGN_MODE_DIRECT or SIGN_MODE_LEGACY_AMINO_JSON) is determined by this client's signer.
       *
       * You can pass signer data (account number, sequence and chain ID) explicitly instead of querying them
       * from the chain. This is needed when signing for a multisig account, but it also allows for offline signing
       * (See the SigningStargateClient.offline constructor).
       */
      async sign(signerAddress, messages, fee, memo, explicitSignerData) {
        let signerData;
        if (explicitSignerData) {
          signerData = explicitSignerData;
        } else {
          const { accountNumber, sequence } = await this.getSequence(signerAddress);
          const chainId = await this.getChainId();
          signerData = {
            accountNumber,
            sequence,
            chainId
          };
        }
        return (0, proto_signing_1.isOfflineDirectSigner)(this.signer) ? this.signDirect(signerAddress, messages, fee, memo, signerData) : this.signAmino(signerAddress, messages, fee, memo, signerData);
      }
      async signAmino(signerAddress, messages, fee, memo, { accountNumber, sequence, chainId }) {
        (0, utils_1.assert)(!(0, proto_signing_1.isOfflineDirectSigner)(this.signer));
        const accountFromSigner = (await this.signer.getAccounts()).find((account) => account.address === signerAddress);
        if (!accountFromSigner) {
          throw new Error("Failed to retrieve account from signer");
        }
        const pubkey = (0, proto_signing_1.encodePubkey)((0, amino_1.encodeSecp256k1Pubkey)(accountFromSigner.pubkey));
        const signMode = signing_1.SignMode.SIGN_MODE_LEGACY_AMINO_JSON;
        const msgs = messages.map((msg) => this.aminoTypes.toAmino(msg));
        const signDoc = (0, amino_1.makeSignDoc)(msgs, fee, chainId, memo, accountNumber, sequence);
        const { signature, signed } = await this.signer.signAmino(signerAddress, signDoc);
        const signedTxBody = {
          messages: signed.msgs.map((msg) => this.aminoTypes.fromAmino(msg)),
          memo: signed.memo
        };
        const signedTxBodyEncodeObject = {
          typeUrl: "/cosmos.tx.v1beta1.TxBody",
          value: signedTxBody
        };
        const signedTxBodyBytes = this.registry.encode(signedTxBodyEncodeObject);
        const signedGasLimit = math_1.Int53.fromString(signed.fee.gas).toNumber();
        const signedSequence = math_1.Int53.fromString(signed.sequence).toNumber();
        const signedAuthInfoBytes = (0, proto_signing_1.makeAuthInfoBytes)([{ pubkey, sequence: signedSequence }], signed.fee.amount, signedGasLimit, signed.fee.granter, signed.fee.payer, signMode);
        return tx_3.TxRaw.fromPartial({
          bodyBytes: signedTxBodyBytes,
          authInfoBytes: signedAuthInfoBytes,
          signatures: [(0, encoding_1.fromBase64)(signature.signature)]
        });
      }
      async signDirect(signerAddress, messages, fee, memo, { accountNumber, sequence, chainId }) {
        (0, utils_1.assert)((0, proto_signing_1.isOfflineDirectSigner)(this.signer));
        const accountFromSigner = (await this.signer.getAccounts()).find((account) => account.address === signerAddress);
        if (!accountFromSigner) {
          throw new Error("Failed to retrieve account from signer");
        }
        const pubkey = (0, proto_signing_1.encodePubkey)((0, amino_1.encodeSecp256k1Pubkey)(accountFromSigner.pubkey));
        const txBodyEncodeObject = {
          typeUrl: "/cosmos.tx.v1beta1.TxBody",
          value: {
            messages,
            memo
          }
        };
        const txBodyBytes = this.registry.encode(txBodyEncodeObject);
        const gasLimit = math_1.Int53.fromString(fee.gas).toNumber();
        const authInfoBytes = (0, proto_signing_1.makeAuthInfoBytes)([{ pubkey, sequence }], fee.amount, gasLimit, fee.granter, fee.payer);
        const signDoc = (0, proto_signing_1.makeSignDoc)(txBodyBytes, authInfoBytes, chainId, accountNumber);
        const { signature, signed } = await this.signer.signDirect(signerAddress, signDoc);
        return tx_3.TxRaw.fromPartial({
          bodyBytes: signed.bodyBytes,
          authInfoBytes: signed.authInfoBytes,
          signatures: [(0, encoding_1.fromBase64)(signature.signature)]
        });
      }
    };
    exports.SigningStargateClient = SigningStargateClient;
  }
});

// node_modules/@cosmjs/stargate/build/index.js
var require_build12 = __commonJS({
  "node_modules/@cosmjs/stargate/build/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.setupAuthExtension = exports.isMsgWithdrawDelegatorRewardEncodeObject = exports.isMsgVoteWeightedEncodeObject = exports.isMsgVoteEncodeObject = exports.isMsgUndelegateEncodeObject = exports.isMsgTransferEncodeObject = exports.isMsgSubmitProposalEncodeObject = exports.isMsgSendEncodeObject = exports.isMsgEditValidatorEncodeObject = exports.isMsgDepositEncodeObject = exports.isMsgDelegateEncodeObject = exports.isMsgCreateValidatorEncodeObject = exports.isMsgBeginRedelegateEncodeObject = exports.isAminoMsgWithdrawValidatorCommission = exports.isAminoMsgWithdrawDelegatorReward = exports.isAminoMsgVoteWeighted = exports.isAminoMsgVote = exports.isAminoMsgVerifyInvariant = exports.isAminoMsgUnjail = exports.isAminoMsgUndelegate = exports.isAminoMsgTransfer = exports.isAminoMsgSubmitProposal = exports.isAminoMsgSubmitEvidence = exports.isAminoMsgSetWithdrawAddress = exports.isAminoMsgSend = exports.isAminoMsgMultiSend = exports.isAminoMsgFundCommunityPool = exports.isAminoMsgEditValidator = exports.isAminoMsgDeposit = exports.isAminoMsgDelegate = exports.isAminoMsgCreateVestingAccount = exports.isAminoMsgCreateValidator = exports.isAminoMsgBeginRedelegate = exports.createVestingAminoConverters = exports.createStakingAminoConverters = exports.createSlashingAminoConverters = exports.createIbcAminoConverters = exports.createGovAminoConverters = exports.createFeegrantAminoConverters = exports.createEvidenceAminoConverters = exports.createDistributionAminoConverters = exports.createCrysisAminoConverters = exports.createBankAminoConverters = exports.createAuthzAminoConverters = exports.logs = exports.GasPrice = exports.calculateFee = exports.fromTendermintEvent = exports.AminoTypes = exports.accountFromAny = void 0;
    exports.parseCoins = exports.makeCosmoshubPath = exports.coins = exports.coin = exports.TimeoutError = exports.StargateClient = exports.isDeliverTxSuccess = exports.isDeliverTxFailure = exports.BroadcastTxError = exports.assertIsDeliverTxSuccess = exports.assertIsDeliverTxFailure = exports.SigningStargateClient = exports.defaultRegistryTypes = exports.createDefaultAminoConverters = exports.isSearchByTagsQuery = exports.isSearchBySentFromOrToQuery = exports.isSearchByHeightQuery = exports.QueryClient = exports.decodeCosmosSdkDecFromProto = exports.createProtobufRpcClient = exports.createPagination = exports.makeMultisignedTxBytes = exports.makeMultisignedTx = exports.setupTxExtension = exports.setupStakingExtension = exports.setupSlashingExtension = exports.setupMintExtension = exports.setupIbcExtension = exports.setupGovExtension = exports.setupFeegrantExtension = exports.setupDistributionExtension = exports.setupBankExtension = exports.setupAuthzExtension = void 0;
    var accounts_1 = require_accounts();
    Object.defineProperty(exports, "accountFromAny", { enumerable: true, get: function() {
      return accounts_1.accountFromAny;
    } });
    var aminotypes_1 = require_aminotypes();
    Object.defineProperty(exports, "AminoTypes", { enumerable: true, get: function() {
      return aminotypes_1.AminoTypes;
    } });
    var events_1 = require_events();
    Object.defineProperty(exports, "fromTendermintEvent", { enumerable: true, get: function() {
      return events_1.fromTendermintEvent;
    } });
    var fee_1 = require_fee();
    Object.defineProperty(exports, "calculateFee", { enumerable: true, get: function() {
      return fee_1.calculateFee;
    } });
    Object.defineProperty(exports, "GasPrice", { enumerable: true, get: function() {
      return fee_1.GasPrice;
    } });
    exports.logs = __importStar(require_logs());
    var modules_1 = require_modules();
    Object.defineProperty(exports, "createAuthzAminoConverters", { enumerable: true, get: function() {
      return modules_1.createAuthzAminoConverters;
    } });
    Object.defineProperty(exports, "createBankAminoConverters", { enumerable: true, get: function() {
      return modules_1.createBankAminoConverters;
    } });
    Object.defineProperty(exports, "createCrysisAminoConverters", { enumerable: true, get: function() {
      return modules_1.createCrysisAminoConverters;
    } });
    Object.defineProperty(exports, "createDistributionAminoConverters", { enumerable: true, get: function() {
      return modules_1.createDistributionAminoConverters;
    } });
    Object.defineProperty(exports, "createEvidenceAminoConverters", { enumerable: true, get: function() {
      return modules_1.createEvidenceAminoConverters;
    } });
    Object.defineProperty(exports, "createFeegrantAminoConverters", { enumerable: true, get: function() {
      return modules_1.createFeegrantAminoConverters;
    } });
    Object.defineProperty(exports, "createGovAminoConverters", { enumerable: true, get: function() {
      return modules_1.createGovAminoConverters;
    } });
    Object.defineProperty(exports, "createIbcAminoConverters", { enumerable: true, get: function() {
      return modules_1.createIbcAminoConverters;
    } });
    Object.defineProperty(exports, "createSlashingAminoConverters", { enumerable: true, get: function() {
      return modules_1.createSlashingAminoConverters;
    } });
    Object.defineProperty(exports, "createStakingAminoConverters", { enumerable: true, get: function() {
      return modules_1.createStakingAminoConverters;
    } });
    Object.defineProperty(exports, "createVestingAminoConverters", { enumerable: true, get: function() {
      return modules_1.createVestingAminoConverters;
    } });
    Object.defineProperty(exports, "isAminoMsgBeginRedelegate", { enumerable: true, get: function() {
      return modules_1.isAminoMsgBeginRedelegate;
    } });
    Object.defineProperty(exports, "isAminoMsgCreateValidator", { enumerable: true, get: function() {
      return modules_1.isAminoMsgCreateValidator;
    } });
    Object.defineProperty(exports, "isAminoMsgCreateVestingAccount", { enumerable: true, get: function() {
      return modules_1.isAminoMsgCreateVestingAccount;
    } });
    Object.defineProperty(exports, "isAminoMsgDelegate", { enumerable: true, get: function() {
      return modules_1.isAminoMsgDelegate;
    } });
    Object.defineProperty(exports, "isAminoMsgDeposit", { enumerable: true, get: function() {
      return modules_1.isAminoMsgDeposit;
    } });
    Object.defineProperty(exports, "isAminoMsgEditValidator", { enumerable: true, get: function() {
      return modules_1.isAminoMsgEditValidator;
    } });
    Object.defineProperty(exports, "isAminoMsgFundCommunityPool", { enumerable: true, get: function() {
      return modules_1.isAminoMsgFundCommunityPool;
    } });
    Object.defineProperty(exports, "isAminoMsgMultiSend", { enumerable: true, get: function() {
      return modules_1.isAminoMsgMultiSend;
    } });
    Object.defineProperty(exports, "isAminoMsgSend", { enumerable: true, get: function() {
      return modules_1.isAminoMsgSend;
    } });
    Object.defineProperty(exports, "isAminoMsgSetWithdrawAddress", { enumerable: true, get: function() {
      return modules_1.isAminoMsgSetWithdrawAddress;
    } });
    Object.defineProperty(exports, "isAminoMsgSubmitEvidence", { enumerable: true, get: function() {
      return modules_1.isAminoMsgSubmitEvidence;
    } });
    Object.defineProperty(exports, "isAminoMsgSubmitProposal", { enumerable: true, get: function() {
      return modules_1.isAminoMsgSubmitProposal;
    } });
    Object.defineProperty(exports, "isAminoMsgTransfer", { enumerable: true, get: function() {
      return modules_1.isAminoMsgTransfer;
    } });
    Object.defineProperty(exports, "isAminoMsgUndelegate", { enumerable: true, get: function() {
      return modules_1.isAminoMsgUndelegate;
    } });
    Object.defineProperty(exports, "isAminoMsgUnjail", { enumerable: true, get: function() {
      return modules_1.isAminoMsgUnjail;
    } });
    Object.defineProperty(exports, "isAminoMsgVerifyInvariant", { enumerable: true, get: function() {
      return modules_1.isAminoMsgVerifyInvariant;
    } });
    Object.defineProperty(exports, "isAminoMsgVote", { enumerable: true, get: function() {
      return modules_1.isAminoMsgVote;
    } });
    Object.defineProperty(exports, "isAminoMsgVoteWeighted", { enumerable: true, get: function() {
      return modules_1.isAminoMsgVoteWeighted;
    } });
    Object.defineProperty(exports, "isAminoMsgWithdrawDelegatorReward", { enumerable: true, get: function() {
      return modules_1.isAminoMsgWithdrawDelegatorReward;
    } });
    Object.defineProperty(exports, "isAminoMsgWithdrawValidatorCommission", { enumerable: true, get: function() {
      return modules_1.isAminoMsgWithdrawValidatorCommission;
    } });
    Object.defineProperty(exports, "isMsgBeginRedelegateEncodeObject", { enumerable: true, get: function() {
      return modules_1.isMsgBeginRedelegateEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgCreateValidatorEncodeObject", { enumerable: true, get: function() {
      return modules_1.isMsgCreateValidatorEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgDelegateEncodeObject", { enumerable: true, get: function() {
      return modules_1.isMsgDelegateEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgDepositEncodeObject", { enumerable: true, get: function() {
      return modules_1.isMsgDepositEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgEditValidatorEncodeObject", { enumerable: true, get: function() {
      return modules_1.isMsgEditValidatorEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgSendEncodeObject", { enumerable: true, get: function() {
      return modules_1.isMsgSendEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgSubmitProposalEncodeObject", { enumerable: true, get: function() {
      return modules_1.isMsgSubmitProposalEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgTransferEncodeObject", { enumerable: true, get: function() {
      return modules_1.isMsgTransferEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgUndelegateEncodeObject", { enumerable: true, get: function() {
      return modules_1.isMsgUndelegateEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgVoteEncodeObject", { enumerable: true, get: function() {
      return modules_1.isMsgVoteEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgVoteWeightedEncodeObject", { enumerable: true, get: function() {
      return modules_1.isMsgVoteWeightedEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgWithdrawDelegatorRewardEncodeObject", { enumerable: true, get: function() {
      return modules_1.isMsgWithdrawDelegatorRewardEncodeObject;
    } });
    Object.defineProperty(exports, "setupAuthExtension", { enumerable: true, get: function() {
      return modules_1.setupAuthExtension;
    } });
    Object.defineProperty(exports, "setupAuthzExtension", { enumerable: true, get: function() {
      return modules_1.setupAuthzExtension;
    } });
    Object.defineProperty(exports, "setupBankExtension", { enumerable: true, get: function() {
      return modules_1.setupBankExtension;
    } });
    Object.defineProperty(exports, "setupDistributionExtension", { enumerable: true, get: function() {
      return modules_1.setupDistributionExtension;
    } });
    Object.defineProperty(exports, "setupFeegrantExtension", { enumerable: true, get: function() {
      return modules_1.setupFeegrantExtension;
    } });
    Object.defineProperty(exports, "setupGovExtension", { enumerable: true, get: function() {
      return modules_1.setupGovExtension;
    } });
    Object.defineProperty(exports, "setupIbcExtension", { enumerable: true, get: function() {
      return modules_1.setupIbcExtension;
    } });
    Object.defineProperty(exports, "setupMintExtension", { enumerable: true, get: function() {
      return modules_1.setupMintExtension;
    } });
    Object.defineProperty(exports, "setupSlashingExtension", { enumerable: true, get: function() {
      return modules_1.setupSlashingExtension;
    } });
    Object.defineProperty(exports, "setupStakingExtension", { enumerable: true, get: function() {
      return modules_1.setupStakingExtension;
    } });
    Object.defineProperty(exports, "setupTxExtension", { enumerable: true, get: function() {
      return modules_1.setupTxExtension;
    } });
    var multisignature_1 = require_multisignature();
    Object.defineProperty(exports, "makeMultisignedTx", { enumerable: true, get: function() {
      return multisignature_1.makeMultisignedTx;
    } });
    Object.defineProperty(exports, "makeMultisignedTxBytes", { enumerable: true, get: function() {
      return multisignature_1.makeMultisignedTxBytes;
    } });
    var queryclient_1 = require_queryclient2();
    Object.defineProperty(exports, "createPagination", { enumerable: true, get: function() {
      return queryclient_1.createPagination;
    } });
    Object.defineProperty(exports, "createProtobufRpcClient", { enumerable: true, get: function() {
      return queryclient_1.createProtobufRpcClient;
    } });
    Object.defineProperty(exports, "decodeCosmosSdkDecFromProto", { enumerable: true, get: function() {
      return queryclient_1.decodeCosmosSdkDecFromProto;
    } });
    Object.defineProperty(exports, "QueryClient", { enumerable: true, get: function() {
      return queryclient_1.QueryClient;
    } });
    var search_1 = require_search();
    Object.defineProperty(exports, "isSearchByHeightQuery", { enumerable: true, get: function() {
      return search_1.isSearchByHeightQuery;
    } });
    Object.defineProperty(exports, "isSearchBySentFromOrToQuery", { enumerable: true, get: function() {
      return search_1.isSearchBySentFromOrToQuery;
    } });
    Object.defineProperty(exports, "isSearchByTagsQuery", { enumerable: true, get: function() {
      return search_1.isSearchByTagsQuery;
    } });
    var signingstargateclient_1 = require_signingstargateclient();
    Object.defineProperty(exports, "createDefaultAminoConverters", { enumerable: true, get: function() {
      return signingstargateclient_1.createDefaultAminoConverters;
    } });
    Object.defineProperty(exports, "defaultRegistryTypes", { enumerable: true, get: function() {
      return signingstargateclient_1.defaultRegistryTypes;
    } });
    Object.defineProperty(exports, "SigningStargateClient", { enumerable: true, get: function() {
      return signingstargateclient_1.SigningStargateClient;
    } });
    var stargateclient_1 = require_stargateclient();
    Object.defineProperty(exports, "assertIsDeliverTxFailure", { enumerable: true, get: function() {
      return stargateclient_1.assertIsDeliverTxFailure;
    } });
    Object.defineProperty(exports, "assertIsDeliverTxSuccess", { enumerable: true, get: function() {
      return stargateclient_1.assertIsDeliverTxSuccess;
    } });
    Object.defineProperty(exports, "BroadcastTxError", { enumerable: true, get: function() {
      return stargateclient_1.BroadcastTxError;
    } });
    Object.defineProperty(exports, "isDeliverTxFailure", { enumerable: true, get: function() {
      return stargateclient_1.isDeliverTxFailure;
    } });
    Object.defineProperty(exports, "isDeliverTxSuccess", { enumerable: true, get: function() {
      return stargateclient_1.isDeliverTxSuccess;
    } });
    Object.defineProperty(exports, "StargateClient", { enumerable: true, get: function() {
      return stargateclient_1.StargateClient;
    } });
    Object.defineProperty(exports, "TimeoutError", { enumerable: true, get: function() {
      return stargateclient_1.TimeoutError;
    } });
    var proto_signing_1 = require_build6();
    Object.defineProperty(exports, "coin", { enumerable: true, get: function() {
      return proto_signing_1.coin;
    } });
    Object.defineProperty(exports, "coins", { enumerable: true, get: function() {
      return proto_signing_1.coins;
    } });
    Object.defineProperty(exports, "makeCosmoshubPath", { enumerable: true, get: function() {
      return proto_signing_1.makeCosmoshubPath;
    } });
    Object.defineProperty(exports, "parseCoins", { enumerable: true, get: function() {
      return proto_signing_1.parseCoins;
    } });
  }
});

export {
  require_build2 as require_build,
  require_build3 as require_build2,
  require_build as require_build3,
  require_build4,
  require_build5,
  require_helpers,
  require_any,
  require_signing,
  require_coin,
  require_tx,
  require_build6,
  require_pagination,
  require_tx4 as require_tx2,
  require_tx11 as require_tx3,
  require_build11 as require_build7,
  require_build12 as require_build8
};
/*! Bundled license information:

@noble/hashes/utils.js:
  (*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) *)
*/
//# sourceMappingURL=chunk-2STNDH4F.js.map
