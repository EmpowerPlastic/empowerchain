{
  "version": 3,
  "sources": ["../../node_modules/@empower-plastic/empowerjs/module/codegen/empowerchain/certificates/tx.rpc.msg.js", "../../node_modules/@empower-plastic/empowerjs/module/codegen/empowerchain/certificates/tx.js"],
  "sourcesContent": ["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as _m0 from \"protobufjs/minimal\";\nimport { MsgUpdateParams, MsgUpdateParamsResponse, MsgCreateCertificate, MsgCreateCertificateResponse } from \"./tx\";\nexport class MsgClientImpl {\n  constructor(rpc) {\n    _defineProperty(this, \"rpc\", void 0);\n    this.rpc = rpc;\n    this.updateParams = this.updateParams.bind(this);\n    this.createCertificate = this.createCertificate.bind(this);\n  }\n  updateParams(request) {\n    const data = MsgUpdateParams.encode(request).finish();\n    const promise = this.rpc.request(\"empowerchain.certificates.Msg\", \"UpdateParams\", data);\n    return promise.then(data => MsgUpdateParamsResponse.decode(new _m0.Reader(data)));\n  }\n  createCertificate(request) {\n    const data = MsgCreateCertificate.encode(request).finish();\n    const promise = this.rpc.request(\"empowerchain.certificates.Msg\", \"CreateCertificate\", data);\n    return promise.then(data => MsgCreateCertificateResponse.decode(new _m0.Reader(data)));\n  }\n}", "import { Params, AdditionalData, certificateTypeFromJSON, certificateTypeToJSON } from \"./types\";\nimport * as _m0 from \"protobufjs/minimal\";\nimport { isSet, Long } from \"../../helpers\";\nfunction createBaseMsgUpdateParams() {\n  return {\n    authority: \"\",\n    params: undefined\n  };\n}\nexport const MsgUpdateParams = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.authority !== \"\") {\n      writer.uint32(10).string(message.authority);\n    }\n    if (message.params !== undefined) {\n      Params.encode(message.params, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateParams();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.authority = reader.string();\n          break;\n        case 2:\n          message.params = Params.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      authority: isSet(object.authority) ? String(object.authority) : \"\",\n      params: isSet(object.params) ? Params.fromJSON(object.params) : undefined\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.authority !== undefined && (obj.authority = message.authority);\n    message.params !== undefined && (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$authority;\n    const message = createBaseMsgUpdateParams();\n    message.authority = (_object$authority = object.authority) !== null && _object$authority !== void 0 ? _object$authority : \"\";\n    message.params = object.params !== undefined && object.params !== null ? Params.fromPartial(object.params) : undefined;\n    return message;\n  }\n};\nfunction createBaseMsgUpdateParamsResponse() {\n  return {};\n}\nexport const MsgUpdateParamsResponse = {\n  encode(_, writer = _m0.Writer.create()) {\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateParamsResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    return {};\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = createBaseMsgUpdateParamsResponse();\n    return message;\n  }\n};\nfunction createBaseMsgCreateCertificate() {\n  return {\n    issuer: \"\",\n    type: 0,\n    owner: \"\",\n    additionalData: []\n  };\n}\nexport const MsgCreateCertificate = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.issuer !== \"\") {\n      writer.uint32(10).string(message.issuer);\n    }\n    if (message.type !== 0) {\n      writer.uint32(16).int32(message.type);\n    }\n    if (message.owner !== \"\") {\n      writer.uint32(26).string(message.owner);\n    }\n    for (const v of message.additionalData) {\n      AdditionalData.encode(v, writer.uint32(34).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgCreateCertificate();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.issuer = reader.string();\n          break;\n        case 2:\n          message.type = reader.int32();\n          break;\n        case 3:\n          message.owner = reader.string();\n          break;\n        case 4:\n          message.additionalData.push(AdditionalData.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      issuer: isSet(object.issuer) ? String(object.issuer) : \"\",\n      type: isSet(object.type) ? certificateTypeFromJSON(object.type) : 0,\n      owner: isSet(object.owner) ? String(object.owner) : \"\",\n      additionalData: Array.isArray(object === null || object === void 0 ? void 0 : object.additionalData) ? object.additionalData.map(e => AdditionalData.fromJSON(e)) : []\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.issuer !== undefined && (obj.issuer = message.issuer);\n    message.type !== undefined && (obj.type = certificateTypeToJSON(message.type));\n    message.owner !== undefined && (obj.owner = message.owner);\n    if (message.additionalData) {\n      obj.additionalData = message.additionalData.map(e => e ? AdditionalData.toJSON(e) : undefined);\n    } else {\n      obj.additionalData = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$issuer, _object$type, _object$owner, _object$additionalDat;\n    const message = createBaseMsgCreateCertificate();\n    message.issuer = (_object$issuer = object.issuer) !== null && _object$issuer !== void 0 ? _object$issuer : \"\";\n    message.type = (_object$type = object.type) !== null && _object$type !== void 0 ? _object$type : 0;\n    message.owner = (_object$owner = object.owner) !== null && _object$owner !== void 0 ? _object$owner : \"\";\n    message.additionalData = ((_object$additionalDat = object.additionalData) === null || _object$additionalDat === void 0 ? void 0 : _object$additionalDat.map(e => AdditionalData.fromPartial(e))) || [];\n    return message;\n  }\n};\nfunction createBaseMsgCreateCertificateResponse() {\n  return {\n    certificateId: BigInt(\"0\")\n  };\n}\nexport const MsgCreateCertificateResponse = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.certificateId !== BigInt(0)) {\n      writer.uint32(8).uint64(Long.fromString(message.certificateId.toString()));\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgCreateCertificateResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.certificateId = BigInt(reader.uint64().toString());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      certificateId: isSet(object.certificateId) ? BigInt(object.certificateId.toString()) : BigInt(\"0\")\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.certificateId !== undefined && (obj.certificateId = (message.certificateId || BigInt(\"0\")).toString());\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseMsgCreateCertificateResponse();\n    message.certificateId = object.certificateId !== undefined && object.certificateId !== null ? BigInt(object.certificateId.toString()) : BigInt(\"0\");\n    return message;\n  }\n};"],
  "mappings": "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",
  "names": ["_m0", "Long", "data"]
}
