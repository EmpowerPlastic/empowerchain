{
  "version": 3,
  "sources": ["../../node_modules/@empower-plastic/empowerjs/module/codegen/empowerchain/plasticcredit/types.js"],
  "sourcesContent": ["import { Coin } from \"../../cosmos/base/v1beta1/coin\";\nimport * as _m0 from \"protobufjs/minimal\";\nimport { isSet, Long } from \"../../helpers\";\nexport let ProjectStatus = /*#__PURE__*/function (ProjectStatus) {\n  ProjectStatus[ProjectStatus[\"NEW\"] = 0] = \"NEW\";\n  ProjectStatus[ProjectStatus[\"APPROVED\"] = 1] = \"APPROVED\";\n  ProjectStatus[ProjectStatus[\"REJECTED\"] = 2] = \"REJECTED\";\n  ProjectStatus[ProjectStatus[\"SUSPENDED\"] = 3] = \"SUSPENDED\";\n  ProjectStatus[ProjectStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n  return ProjectStatus;\n}({});\nexport const ProjectStatusSDKType = ProjectStatus;\nexport function projectStatusFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"NEW\":\n      return ProjectStatus.NEW;\n    case 1:\n    case \"APPROVED\":\n      return ProjectStatus.APPROVED;\n    case 2:\n    case \"REJECTED\":\n      return ProjectStatus.REJECTED;\n    case 3:\n    case \"SUSPENDED\":\n      return ProjectStatus.SUSPENDED;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return ProjectStatus.UNRECOGNIZED;\n  }\n}\nexport function projectStatusToJSON(object) {\n  switch (object) {\n    case ProjectStatus.NEW:\n      return \"NEW\";\n    case ProjectStatus.APPROVED:\n      return \"APPROVED\";\n    case ProjectStatus.REJECTED:\n      return \"REJECTED\";\n    case ProjectStatus.SUSPENDED:\n      return \"SUSPENDED\";\n    case ProjectStatus.UNRECOGNIZED:\n    default:\n      return \"UNRECOGNIZED\";\n  }\n}\n/** Params defines the parameters for the module. */\n\n/** Params defines the parameters for the module. */\n\nfunction createBaseParams() {\n  return {\n    issuerCreator: \"\",\n    creditTypeCreationFee: undefined\n  };\n}\nexport const Params = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.issuerCreator !== \"\") {\n      writer.uint32(10).string(message.issuerCreator);\n    }\n    if (message.creditTypeCreationFee !== undefined) {\n      Coin.encode(message.creditTypeCreationFee, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseParams();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.issuerCreator = reader.string();\n          break;\n        case 2:\n          message.creditTypeCreationFee = Coin.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      issuerCreator: isSet(object.issuerCreator) ? String(object.issuerCreator) : \"\",\n      creditTypeCreationFee: isSet(object.creditTypeCreationFee) ? Coin.fromJSON(object.creditTypeCreationFee) : undefined\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.issuerCreator !== undefined && (obj.issuerCreator = message.issuerCreator);\n    message.creditTypeCreationFee !== undefined && (obj.creditTypeCreationFee = message.creditTypeCreationFee ? Coin.toJSON(message.creditTypeCreationFee) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$issuerCreator;\n    const message = createBaseParams();\n    message.issuerCreator = (_object$issuerCreator = object.issuerCreator) !== null && _object$issuerCreator !== void 0 ? _object$issuerCreator : \"\";\n    message.creditTypeCreationFee = object.creditTypeCreationFee !== undefined && object.creditTypeCreationFee !== null ? Coin.fromPartial(object.creditTypeCreationFee) : undefined;\n    return message;\n  }\n};\nfunction createBaseIDCounters() {\n  return {\n    nextIssuerId: BigInt(\"0\"),\n    nextApplicantId: BigInt(\"0\"),\n    nextProjectId: BigInt(\"0\")\n  };\n}\nexport const IDCounters = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.nextIssuerId !== BigInt(0)) {\n      writer.uint32(8).uint64(Long.fromString(message.nextIssuerId.toString()));\n    }\n    if (message.nextApplicantId !== BigInt(0)) {\n      writer.uint32(16).uint64(Long.fromString(message.nextApplicantId.toString()));\n    }\n    if (message.nextProjectId !== BigInt(0)) {\n      writer.uint32(24).uint64(Long.fromString(message.nextProjectId.toString()));\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseIDCounters();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.nextIssuerId = BigInt(reader.uint64().toString());\n          break;\n        case 2:\n          message.nextApplicantId = BigInt(reader.uint64().toString());\n          break;\n        case 3:\n          message.nextProjectId = BigInt(reader.uint64().toString());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      nextIssuerId: isSet(object.nextIssuerId) ? BigInt(object.nextIssuerId.toString()) : BigInt(\"0\"),\n      nextApplicantId: isSet(object.nextApplicantId) ? BigInt(object.nextApplicantId.toString()) : BigInt(\"0\"),\n      nextProjectId: isSet(object.nextProjectId) ? BigInt(object.nextProjectId.toString()) : BigInt(\"0\")\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.nextIssuerId !== undefined && (obj.nextIssuerId = (message.nextIssuerId || BigInt(\"0\")).toString());\n    message.nextApplicantId !== undefined && (obj.nextApplicantId = (message.nextApplicantId || BigInt(\"0\")).toString());\n    message.nextProjectId !== undefined && (obj.nextProjectId = (message.nextProjectId || BigInt(\"0\")).toString());\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseIDCounters();\n    message.nextIssuerId = object.nextIssuerId !== undefined && object.nextIssuerId !== null ? BigInt(object.nextIssuerId.toString()) : BigInt(\"0\");\n    message.nextApplicantId = object.nextApplicantId !== undefined && object.nextApplicantId !== null ? BigInt(object.nextApplicantId.toString()) : BigInt(\"0\");\n    message.nextProjectId = object.nextProjectId !== undefined && object.nextProjectId !== null ? BigInt(object.nextProjectId.toString()) : BigInt(\"0\");\n    return message;\n  }\n};\nfunction createBaseIssuer() {\n  return {\n    id: BigInt(\"0\"),\n    name: \"\",\n    description: \"\",\n    admin: \"\"\n  };\n}\nexport const Issuer = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.id !== BigInt(0)) {\n      writer.uint32(8).uint64(Long.fromString(message.id.toString()));\n    }\n    if (message.name !== \"\") {\n      writer.uint32(18).string(message.name);\n    }\n    if (message.description !== \"\") {\n      writer.uint32(26).string(message.description);\n    }\n    if (message.admin !== \"\") {\n      writer.uint32(34).string(message.admin);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseIssuer();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.id = BigInt(reader.uint64().toString());\n          break;\n        case 2:\n          message.name = reader.string();\n          break;\n        case 3:\n          message.description = reader.string();\n          break;\n        case 4:\n          message.admin = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      id: isSet(object.id) ? BigInt(object.id.toString()) : BigInt(\"0\"),\n      name: isSet(object.name) ? String(object.name) : \"\",\n      description: isSet(object.description) ? String(object.description) : \"\",\n      admin: isSet(object.admin) ? String(object.admin) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.id !== undefined && (obj.id = (message.id || BigInt(\"0\")).toString());\n    message.name !== undefined && (obj.name = message.name);\n    message.description !== undefined && (obj.description = message.description);\n    message.admin !== undefined && (obj.admin = message.admin);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$name, _object$description, _object$admin;\n    const message = createBaseIssuer();\n    message.id = object.id !== undefined && object.id !== null ? BigInt(object.id.toString()) : BigInt(\"0\");\n    message.name = (_object$name = object.name) !== null && _object$name !== void 0 ? _object$name : \"\";\n    message.description = (_object$description = object.description) !== null && _object$description !== void 0 ? _object$description : \"\";\n    message.admin = (_object$admin = object.admin) !== null && _object$admin !== void 0 ? _object$admin : \"\";\n    return message;\n  }\n};\nfunction createBaseApplicant() {\n  return {\n    id: BigInt(\"0\"),\n    name: \"\",\n    description: \"\",\n    admin: \"\"\n  };\n}\nexport const Applicant = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.id !== BigInt(0)) {\n      writer.uint32(8).uint64(Long.fromString(message.id.toString()));\n    }\n    if (message.name !== \"\") {\n      writer.uint32(18).string(message.name);\n    }\n    if (message.description !== \"\") {\n      writer.uint32(26).string(message.description);\n    }\n    if (message.admin !== \"\") {\n      writer.uint32(34).string(message.admin);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseApplicant();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.id = BigInt(reader.uint64().toString());\n          break;\n        case 2:\n          message.name = reader.string();\n          break;\n        case 3:\n          message.description = reader.string();\n          break;\n        case 4:\n          message.admin = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      id: isSet(object.id) ? BigInt(object.id.toString()) : BigInt(\"0\"),\n      name: isSet(object.name) ? String(object.name) : \"\",\n      description: isSet(object.description) ? String(object.description) : \"\",\n      admin: isSet(object.admin) ? String(object.admin) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.id !== undefined && (obj.id = (message.id || BigInt(\"0\")).toString());\n    message.name !== undefined && (obj.name = message.name);\n    message.description !== undefined && (obj.description = message.description);\n    message.admin !== undefined && (obj.admin = message.admin);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$name2, _object$description2, _object$admin2;\n    const message = createBaseApplicant();\n    message.id = object.id !== undefined && object.id !== null ? BigInt(object.id.toString()) : BigInt(\"0\");\n    message.name = (_object$name2 = object.name) !== null && _object$name2 !== void 0 ? _object$name2 : \"\";\n    message.description = (_object$description2 = object.description) !== null && _object$description2 !== void 0 ? _object$description2 : \"\";\n    message.admin = (_object$admin2 = object.admin) !== null && _object$admin2 !== void 0 ? _object$admin2 : \"\";\n    return message;\n  }\n};\nfunction createBaseCreditType() {\n  return {\n    abbreviation: \"\",\n    issuerId: BigInt(\"0\"),\n    name: \"\"\n  };\n}\nexport const CreditType = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.abbreviation !== \"\") {\n      writer.uint32(10).string(message.abbreviation);\n    }\n    if (message.issuerId !== BigInt(0)) {\n      writer.uint32(16).uint64(Long.fromString(message.issuerId.toString()));\n    }\n    if (message.name !== \"\") {\n      writer.uint32(26).string(message.name);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseCreditType();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.abbreviation = reader.string();\n          break;\n        case 2:\n          message.issuerId = BigInt(reader.uint64().toString());\n          break;\n        case 3:\n          message.name = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      abbreviation: isSet(object.abbreviation) ? String(object.abbreviation) : \"\",\n      issuerId: isSet(object.issuerId) ? BigInt(object.issuerId.toString()) : BigInt(\"0\"),\n      name: isSet(object.name) ? String(object.name) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.abbreviation !== undefined && (obj.abbreviation = message.abbreviation);\n    message.issuerId !== undefined && (obj.issuerId = (message.issuerId || BigInt(\"0\")).toString());\n    message.name !== undefined && (obj.name = message.name);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$abbreviation, _object$name3;\n    const message = createBaseCreditType();\n    message.abbreviation = (_object$abbreviation = object.abbreviation) !== null && _object$abbreviation !== void 0 ? _object$abbreviation : \"\";\n    message.issuerId = object.issuerId !== undefined && object.issuerId !== null ? BigInt(object.issuerId.toString()) : BigInt(\"0\");\n    message.name = (_object$name3 = object.name) !== null && _object$name3 !== void 0 ? _object$name3 : \"\";\n    return message;\n  }\n};\nfunction createBaseProject() {\n  return {\n    id: BigInt(\"0\"),\n    applicantId: BigInt(\"0\"),\n    creditTypeAbbreviation: \"\",\n    name: \"\",\n    status: 0\n  };\n}\nexport const Project = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.id !== BigInt(0)) {\n      writer.uint32(8).uint64(Long.fromString(message.id.toString()));\n    }\n    if (message.applicantId !== BigInt(0)) {\n      writer.uint32(16).uint64(Long.fromString(message.applicantId.toString()));\n    }\n    if (message.creditTypeAbbreviation !== \"\") {\n      writer.uint32(26).string(message.creditTypeAbbreviation);\n    }\n    if (message.name !== \"\") {\n      writer.uint32(34).string(message.name);\n    }\n    if (message.status !== 0) {\n      writer.uint32(40).int32(message.status);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseProject();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.id = BigInt(reader.uint64().toString());\n          break;\n        case 2:\n          message.applicantId = BigInt(reader.uint64().toString());\n          break;\n        case 3:\n          message.creditTypeAbbreviation = reader.string();\n          break;\n        case 4:\n          message.name = reader.string();\n          break;\n        case 5:\n          message.status = reader.int32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      id: isSet(object.id) ? BigInt(object.id.toString()) : BigInt(\"0\"),\n      applicantId: isSet(object.applicantId) ? BigInt(object.applicantId.toString()) : BigInt(\"0\"),\n      creditTypeAbbreviation: isSet(object.creditTypeAbbreviation) ? String(object.creditTypeAbbreviation) : \"\",\n      name: isSet(object.name) ? String(object.name) : \"\",\n      status: isSet(object.status) ? projectStatusFromJSON(object.status) : 0\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.id !== undefined && (obj.id = (message.id || BigInt(\"0\")).toString());\n    message.applicantId !== undefined && (obj.applicantId = (message.applicantId || BigInt(\"0\")).toString());\n    message.creditTypeAbbreviation !== undefined && (obj.creditTypeAbbreviation = message.creditTypeAbbreviation);\n    message.name !== undefined && (obj.name = message.name);\n    message.status !== undefined && (obj.status = projectStatusToJSON(message.status));\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$creditTypeAbb, _object$name4, _object$status;\n    const message = createBaseProject();\n    message.id = object.id !== undefined && object.id !== null ? BigInt(object.id.toString()) : BigInt(\"0\");\n    message.applicantId = object.applicantId !== undefined && object.applicantId !== null ? BigInt(object.applicantId.toString()) : BigInt(\"0\");\n    message.creditTypeAbbreviation = (_object$creditTypeAbb = object.creditTypeAbbreviation) !== null && _object$creditTypeAbb !== void 0 ? _object$creditTypeAbb : \"\";\n    message.name = (_object$name4 = object.name) !== null && _object$name4 !== void 0 ? _object$name4 : \"\";\n    message.status = (_object$status = object.status) !== null && _object$status !== void 0 ? _object$status : 0;\n    return message;\n  }\n};\nfunction createBaseCreditCollection() {\n  return {\n    denom: \"\",\n    projectId: BigInt(\"0\"),\n    totalAmount: undefined,\n    metadataUris: []\n  };\n}\nexport const CreditCollection = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.denom !== \"\") {\n      writer.uint32(10).string(message.denom);\n    }\n    if (message.projectId !== BigInt(0)) {\n      writer.uint32(16).uint64(Long.fromString(message.projectId.toString()));\n    }\n    if (message.totalAmount !== undefined) {\n      CreditAmount.encode(message.totalAmount, writer.uint32(26).fork()).ldelim();\n    }\n    for (const v of message.metadataUris) {\n      writer.uint32(34).string(v);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseCreditCollection();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.denom = reader.string();\n          break;\n        case 2:\n          message.projectId = BigInt(reader.uint64().toString());\n          break;\n        case 3:\n          message.totalAmount = CreditAmount.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.metadataUris.push(reader.string());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      denom: isSet(object.denom) ? String(object.denom) : \"\",\n      projectId: isSet(object.projectId) ? BigInt(object.projectId.toString()) : BigInt(\"0\"),\n      totalAmount: isSet(object.totalAmount) ? CreditAmount.fromJSON(object.totalAmount) : undefined,\n      metadataUris: Array.isArray(object === null || object === void 0 ? void 0 : object.metadataUris) ? object.metadataUris.map(e => String(e)) : []\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.denom !== undefined && (obj.denom = message.denom);\n    message.projectId !== undefined && (obj.projectId = (message.projectId || BigInt(\"0\")).toString());\n    message.totalAmount !== undefined && (obj.totalAmount = message.totalAmount ? CreditAmount.toJSON(message.totalAmount) : undefined);\n    if (message.metadataUris) {\n      obj.metadataUris = message.metadataUris.map(e => e);\n    } else {\n      obj.metadataUris = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$denom, _object$metadataUris;\n    const message = createBaseCreditCollection();\n    message.denom = (_object$denom = object.denom) !== null && _object$denom !== void 0 ? _object$denom : \"\";\n    message.projectId = object.projectId !== undefined && object.projectId !== null ? BigInt(object.projectId.toString()) : BigInt(\"0\");\n    message.totalAmount = object.totalAmount !== undefined && object.totalAmount !== null ? CreditAmount.fromPartial(object.totalAmount) : undefined;\n    message.metadataUris = ((_object$metadataUris = object.metadataUris) === null || _object$metadataUris === void 0 ? void 0 : _object$metadataUris.map(e => e)) || [];\n    return message;\n  }\n};\nfunction createBaseCreditBalance() {\n  return {\n    owner: \"\",\n    denom: \"\",\n    balance: undefined\n  };\n}\nexport const CreditBalance = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.owner !== \"\") {\n      writer.uint32(10).string(message.owner);\n    }\n    if (message.denom !== \"\") {\n      writer.uint32(18).string(message.denom);\n    }\n    if (message.balance !== undefined) {\n      CreditAmount.encode(message.balance, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseCreditBalance();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.owner = reader.string();\n          break;\n        case 2:\n          message.denom = reader.string();\n          break;\n        case 3:\n          message.balance = CreditAmount.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      owner: isSet(object.owner) ? String(object.owner) : \"\",\n      denom: isSet(object.denom) ? String(object.denom) : \"\",\n      balance: isSet(object.balance) ? CreditAmount.fromJSON(object.balance) : undefined\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.owner !== undefined && (obj.owner = message.owner);\n    message.denom !== undefined && (obj.denom = message.denom);\n    message.balance !== undefined && (obj.balance = message.balance ? CreditAmount.toJSON(message.balance) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$owner, _object$denom2;\n    const message = createBaseCreditBalance();\n    message.owner = (_object$owner = object.owner) !== null && _object$owner !== void 0 ? _object$owner : \"\";\n    message.denom = (_object$denom2 = object.denom) !== null && _object$denom2 !== void 0 ? _object$denom2 : \"\";\n    message.balance = object.balance !== undefined && object.balance !== null ? CreditAmount.fromPartial(object.balance) : undefined;\n    return message;\n  }\n};\nfunction createBaseCreditAmount() {\n  return {\n    active: BigInt(\"0\"),\n    retired: BigInt(\"0\")\n  };\n}\nexport const CreditAmount = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.active !== BigInt(0)) {\n      writer.uint32(8).uint64(Long.fromString(message.active.toString()));\n    }\n    if (message.retired !== BigInt(0)) {\n      writer.uint32(16).uint64(Long.fromString(message.retired.toString()));\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseCreditAmount();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.active = BigInt(reader.uint64().toString());\n          break;\n        case 2:\n          message.retired = BigInt(reader.uint64().toString());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      active: isSet(object.active) ? BigInt(object.active.toString()) : BigInt(\"0\"),\n      retired: isSet(object.retired) ? BigInt(object.retired.toString()) : BigInt(\"0\")\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.active !== undefined && (obj.active = (message.active || BigInt(\"0\")).toString());\n    message.retired !== undefined && (obj.retired = (message.retired || BigInt(\"0\")).toString());\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseCreditAmount();\n    message.active = object.active !== undefined && object.active !== null ? BigInt(object.active.toString()) : BigInt(\"0\");\n    message.retired = object.retired !== undefined && object.retired !== null ? BigInt(object.retired.toString()) : BigInt(\"0\");\n    return message;\n  }\n};\nfunction createBaseProvenData() {\n  return {\n    uri: \"\",\n    hash: \"\"\n  };\n}\nexport const ProvenData = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.uri !== \"\") {\n      writer.uint32(10).string(message.uri);\n    }\n    if (message.hash !== \"\") {\n      writer.uint32(18).string(message.hash);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseProvenData();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.uri = reader.string();\n          break;\n        case 2:\n          message.hash = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      uri: isSet(object.uri) ? String(object.uri) : \"\",\n      hash: isSet(object.hash) ? String(object.hash) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.uri !== undefined && (obj.uri = message.uri);\n    message.hash !== undefined && (obj.hash = message.hash);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$uri, _object$hash;\n    const message = createBaseProvenData();\n    message.uri = (_object$uri = object.uri) !== null && _object$uri !== void 0 ? _object$uri : \"\";\n    message.hash = (_object$hash = object.hash) !== null && _object$hash !== void 0 ? _object$hash : \"\";\n    return message;\n  }\n};"],
  "mappings": ";;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,UAAqB;AAEd,IAAI,gBAA6B,SAAUA,gBAAe;AAC/D,EAAAA,eAAcA,eAAc,KAAK,IAAI,CAAC,IAAI;AAC1C,EAAAA,eAAcA,eAAc,UAAU,IAAI,CAAC,IAAI;AAC/C,EAAAA,eAAcA,eAAc,UAAU,IAAI,CAAC,IAAI;AAC/C,EAAAA,eAAcA,eAAc,WAAW,IAAI,CAAC,IAAI;AAChD,EAAAA,eAAcA,eAAc,cAAc,IAAI,EAAE,IAAI;AACpD,SAAOA;AACT,EAAE,CAAC,CAAC;AACG,IAAM,uBAAuB;AAC7B,SAAS,sBAAsB,QAAQ;AAC5C,UAAQ,QAAQ;AAAA,IACd,KAAK;AAAA,IACL,KAAK;AACH,aAAO,cAAc;AAAA,IACvB,KAAK;AAAA,IACL,KAAK;AACH,aAAO,cAAc;AAAA,IACvB,KAAK;AAAA,IACL,KAAK;AACH,aAAO,cAAc;AAAA,IACvB,KAAK;AAAA,IACL,KAAK;AACH,aAAO,cAAc;AAAA,IACvB,KAAK;AAAA,IACL,KAAK;AAAA,IACL;AACE,aAAO,cAAc;AAAA,EACzB;AACF;AACO,SAAS,oBAAoB,QAAQ;AAC1C,UAAQ,QAAQ;AAAA,IACd,KAAK,cAAc;AACjB,aAAO;AAAA,IACT,KAAK,cAAc;AACjB,aAAO;AAAA,IACT,KAAK,cAAc;AACjB,aAAO;AAAA,IACT,KAAK,cAAc;AACjB,aAAO;AAAA,IACT,KAAK,cAAc;AAAA,IACnB;AACE,aAAO;AAAA,EACX;AACF;AAKA,SAAS,mBAAmB;AAC1B,SAAO;AAAA,IACL,eAAe;AAAA,IACf,uBAAuB;AAAA,EACzB;AACF;AACO,IAAM,SAAS;AAAA,EACpB,OAAO,SAAS,SAAa,WAAO,OAAO,GAAG;AAC5C,QAAI,QAAQ,kBAAkB,IAAI;AAChC,aAAO,OAAO,EAAE,EAAE,OAAO,QAAQ,aAAa;AAAA,IAChD;AACA,QAAI,QAAQ,0BAA0B,QAAW;AAC/C,WAAK,OAAO,QAAQ,uBAAuB,OAAO,OAAO,EAAE,EAAE,KAAK,CAAC,EAAE,OAAO;AAAA,IAC9E;AACA,WAAO;AAAA,EACT;AAAA,EACA,OAAO,OAAO,QAAQ;AACpB,UAAM,SAAS,iBAAqB,aAAS,QAAQ,IAAQ,WAAO,KAAK;AACzE,QAAI,MAAM,WAAW,SAAY,OAAO,MAAM,OAAO,MAAM;AAC3D,UAAM,UAAU,iBAAiB;AACjC,WAAO,OAAO,MAAM,KAAK;AACvB,YAAM,MAAM,OAAO,OAAO;AAC1B,cAAQ,QAAQ,GAAG;AAAA,QACjB,KAAK;AACH,kBAAQ,gBAAgB,OAAO,OAAO;AACtC;AAAA,QACF,KAAK;AACH,kBAAQ,wBAAwB,KAAK,OAAO,QAAQ,OAAO,OAAO,CAAC;AACnE;AAAA,QACF;AACE,iBAAO,SAAS,MAAM,CAAC;AACvB;AAAA,MACJ;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA,EACA,SAAS,QAAQ;AACf,WAAO;AAAA,MACL,eAAe,MAAM,OAAO,aAAa,IAAI,OAAO,OAAO,aAAa,IAAI;AAAA,MAC5E,uBAAuB,MAAM,OAAO,qBAAqB,IAAI,KAAK,SAAS,OAAO,qBAAqB,IAAI;AAAA,IAC7G;AAAA,EACF;AAAA,EACA,OAAO,SAAS;AACd,UAAM,MAAM,CAAC;AACb,YAAQ,kBAAkB,WAAc,IAAI,gBAAgB,QAAQ;AACpE,YAAQ,0BAA0B,WAAc,IAAI,wBAAwB,QAAQ,wBAAwB,KAAK,OAAO,QAAQ,qBAAqB,IAAI;AACzJ,WAAO;AAAA,EACT;AAAA,EACA,YAAY,QAAQ;AAClB,QAAI;AACJ,UAAM,UAAU,iBAAiB;AACjC,YAAQ,iBAAiB,wBAAwB,OAAO,mBAAmB,QAAQ,0BAA0B,SAAS,wBAAwB;AAC9I,YAAQ,wBAAwB,OAAO,0BAA0B,UAAa,OAAO,0BAA0B,OAAO,KAAK,YAAY,OAAO,qBAAqB,IAAI;AACvK,WAAO;AAAA,EACT;AACF;AACA,SAAS,uBAAuB;AAC9B,SAAO;AAAA,IACL,cAAc,OAAO,GAAG;AAAA,IACxB,iBAAiB,OAAO,GAAG;AAAA,IAC3B,eAAe,OAAO,GAAG;AAAA,EAC3B;AACF;AACO,IAAM,aAAa;AAAA,EACxB,OAAO,SAAS,SAAa,WAAO,OAAO,GAAG;AAC5C,QAAI,QAAQ,iBAAiB,OAAO,CAAC,GAAG;AACtC,aAAO,OAAO,CAAC,EAAE,OAAO,YAAAC,QAAK,WAAW,QAAQ,aAAa,SAAS,CAAC,CAAC;AAAA,IAC1E;AACA,QAAI,QAAQ,oBAAoB,OAAO,CAAC,GAAG;AACzC,aAAO,OAAO,EAAE,EAAE,OAAO,YAAAA,QAAK,WAAW,QAAQ,gBAAgB,SAAS,CAAC,CAAC;AAAA,IAC9E;AACA,QAAI,QAAQ,kBAAkB,OAAO,CAAC,GAAG;AACvC,aAAO,OAAO,EAAE,EAAE,OAAO,YAAAA,QAAK,WAAW,QAAQ,cAAc,SAAS,CAAC,CAAC;AAAA,IAC5E;AACA,WAAO;AAAA,EACT;AAAA,EACA,OAAO,OAAO,QAAQ;AACpB,UAAM,SAAS,iBAAqB,aAAS,QAAQ,IAAQ,WAAO,KAAK;AACzE,QAAI,MAAM,WAAW,SAAY,OAAO,MAAM,OAAO,MAAM;AAC3D,UAAM,UAAU,qBAAqB;AACrC,WAAO,OAAO,MAAM,KAAK;AACvB,YAAM,MAAM,OAAO,OAAO;AAC1B,cAAQ,QAAQ,GAAG;AAAA,QACjB,KAAK;AACH,kBAAQ,eAAe,OAAO,OAAO,OAAO,EAAE,SAAS,CAAC;AACxD;AAAA,QACF,KAAK;AACH,kBAAQ,kBAAkB,OAAO,OAAO,OAAO,EAAE,SAAS,CAAC;AAC3D;AAAA,QACF,KAAK;AACH,kBAAQ,gBAAgB,OAAO,OAAO,OAAO,EAAE,SAAS,CAAC;AACzD;AAAA,QACF;AACE,iBAAO,SAAS,MAAM,CAAC;AACvB;AAAA,MACJ;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA,EACA,SAAS,QAAQ;AACf,WAAO;AAAA,MACL,cAAc,MAAM,OAAO,YAAY,IAAI,OAAO,OAAO,aAAa,SAAS,CAAC,IAAI,OAAO,GAAG;AAAA,MAC9F,iBAAiB,MAAM,OAAO,eAAe,IAAI,OAAO,OAAO,gBAAgB,SAAS,CAAC,IAAI,OAAO,GAAG;AAAA,MACvG,eAAe,MAAM,OAAO,aAAa,IAAI,OAAO,OAAO,cAAc,SAAS,CAAC,IAAI,OAAO,GAAG;AAAA,IACnG;AAAA,EACF;AAAA,EACA,OAAO,SAAS;AACd,UAAM,MAAM,CAAC;AACb,YAAQ,iBAAiB,WAAc,IAAI,gBAAgB,QAAQ,gBAAgB,OAAO,GAAG,GAAG,SAAS;AACzG,YAAQ,oBAAoB,WAAc,IAAI,mBAAmB,QAAQ,mBAAmB,OAAO,GAAG,GAAG,SAAS;AAClH,YAAQ,kBAAkB,WAAc,IAAI,iBAAiB,QAAQ,iBAAiB,OAAO,GAAG,GAAG,SAAS;AAC5G,WAAO;AAAA,EACT;AAAA,EACA,YAAY,QAAQ;AAClB,UAAM,UAAU,qBAAqB;AACrC,YAAQ,eAAe,OAAO,iBAAiB,UAAa,OAAO,iBAAiB,OAAO,OAAO,OAAO,aAAa,SAAS,CAAC,IAAI,OAAO,GAAG;AAC9I,YAAQ,kBAAkB,OAAO,oBAAoB,UAAa,OAAO,oBAAoB,OAAO,OAAO,OAAO,gBAAgB,SAAS,CAAC,IAAI,OAAO,GAAG;AAC1J,YAAQ,gBAAgB,OAAO,kBAAkB,UAAa,OAAO,kBAAkB,OAAO,OAAO,OAAO,cAAc,SAAS,CAAC,IAAI,OAAO,GAAG;AAClJ,WAAO;AAAA,EACT;AACF;AACA,SAAS,mBAAmB;AAC1B,SAAO;AAAA,IACL,IAAI,OAAO,GAAG;AAAA,IACd,MAAM;AAAA,IACN,aAAa;AAAA,IACb,OAAO;AAAA,EACT;AACF;AACO,IAAM,SAAS;AAAA,EACpB,OAAO,SAAS,SAAa,WAAO,OAAO,GAAG;AAC5C,QAAI,QAAQ,OAAO,OAAO,CAAC,GAAG;AAC5B,aAAO,OAAO,CAAC,EAAE,OAAO,YAAAA,QAAK,WAAW,QAAQ,GAAG,SAAS,CAAC,CAAC;AAAA,IAChE;AACA,QAAI,QAAQ,SAAS,IAAI;AACvB,aAAO,OAAO,EAAE,EAAE,OAAO,QAAQ,IAAI;AAAA,IACvC;AACA,QAAI,QAAQ,gBAAgB,IAAI;AAC9B,aAAO,OAAO,EAAE,EAAE,OAAO,QAAQ,WAAW;AAAA,IAC9C;AACA,QAAI,QAAQ,UAAU,IAAI;AACxB,aAAO,OAAO,EAAE,EAAE,OAAO,QAAQ,KAAK;AAAA,IACxC;AACA,WAAO;AAAA,EACT;AAAA,EACA,OAAO,OAAO,QAAQ;AACpB,UAAM,SAAS,iBAAqB,aAAS,QAAQ,IAAQ,WAAO,KAAK;AACzE,QAAI,MAAM,WAAW,SAAY,OAAO,MAAM,OAAO,MAAM;AAC3D,UAAM,UAAU,iBAAiB;AACjC,WAAO,OAAO,MAAM,KAAK;AACvB,YAAM,MAAM,OAAO,OAAO;AAC1B,cAAQ,QAAQ,GAAG;AAAA,QACjB,KAAK;AACH,kBAAQ,KAAK,OAAO,OAAO,OAAO,EAAE,SAAS,CAAC;AAC9C;AAAA,QACF,KAAK;AACH,kBAAQ,OAAO,OAAO,OAAO;AAC7B;AAAA,QACF,KAAK;AACH,kBAAQ,cAAc,OAAO,OAAO;AACpC;AAAA,QACF,KAAK;AACH,kBAAQ,QAAQ,OAAO,OAAO;AAC9B;AAAA,QACF;AACE,iBAAO,SAAS,MAAM,CAAC;AACvB;AAAA,MACJ;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA,EACA,SAAS,QAAQ;AACf,WAAO;AAAA,MACL,IAAI,MAAM,OAAO,EAAE,IAAI,OAAO,OAAO,GAAG,SAAS,CAAC,IAAI,OAAO,GAAG;AAAA,MAChE,MAAM,MAAM,OAAO,IAAI,IAAI,OAAO,OAAO,IAAI,IAAI;AAAA,MACjD,aAAa,MAAM,OAAO,WAAW,IAAI,OAAO,OAAO,WAAW,IAAI;AAAA,MACtE,OAAO,MAAM,OAAO,KAAK,IAAI,OAAO,OAAO,KAAK,IAAI;AAAA,IACtD;AAAA,EACF;AAAA,EACA,OAAO,SAAS;AACd,UAAM,MAAM,CAAC;AACb,YAAQ,OAAO,WAAc,IAAI,MAAM,QAAQ,MAAM,OAAO,GAAG,GAAG,SAAS;AAC3E,YAAQ,SAAS,WAAc,IAAI,OAAO,QAAQ;AAClD,YAAQ,gBAAgB,WAAc,IAAI,cAAc,QAAQ;AAChE,YAAQ,UAAU,WAAc,IAAI,QAAQ,QAAQ;AACpD,WAAO;AAAA,EACT;AAAA,EACA,YAAY,QAAQ;AAClB,QAAI,cAAc,qBAAqB;AACvC,UAAM,UAAU,iBAAiB;AACjC,YAAQ,KAAK,OAAO,OAAO,UAAa,OAAO,OAAO,OAAO,OAAO,OAAO,GAAG,SAAS,CAAC,IAAI,OAAO,GAAG;AACtG,YAAQ,QAAQ,eAAe,OAAO,UAAU,QAAQ,iBAAiB,SAAS,eAAe;AACjG,YAAQ,eAAe,sBAAsB,OAAO,iBAAiB,QAAQ,wBAAwB,SAAS,sBAAsB;AACpI,YAAQ,SAAS,gBAAgB,OAAO,WAAW,QAAQ,kBAAkB,SAAS,gBAAgB;AACtG,WAAO;AAAA,EACT;AACF;AACA,SAAS,sBAAsB;AAC7B,SAAO;AAAA,IACL,IAAI,OAAO,GAAG;AAAA,IACd,MAAM;AAAA,IACN,aAAa;AAAA,IACb,OAAO;AAAA,EACT;AACF;AACO,IAAM,YAAY;AAAA,EACvB,OAAO,SAAS,SAAa,WAAO,OAAO,GAAG;AAC5C,QAAI,QAAQ,OAAO,OAAO,CAAC,GAAG;AAC5B,aAAO,OAAO,CAAC,EAAE,OAAO,YAAAA,QAAK,WAAW,QAAQ,GAAG,SAAS,CAAC,CAAC;AAAA,IAChE;AACA,QAAI,QAAQ,SAAS,IAAI;AACvB,aAAO,OAAO,EAAE,EAAE,OAAO,QAAQ,IAAI;AAAA,IACvC;AACA,QAAI,QAAQ,gBAAgB,IAAI;AAC9B,aAAO,OAAO,EAAE,EAAE,OAAO,QAAQ,WAAW;AAAA,IAC9C;AACA,QAAI,QAAQ,UAAU,IAAI;AACxB,aAAO,OAAO,EAAE,EAAE,OAAO,QAAQ,KAAK;AAAA,IACxC;AACA,WAAO;AAAA,EACT;AAAA,EACA,OAAO,OAAO,QAAQ;AACpB,UAAM,SAAS,iBAAqB,aAAS,QAAQ,IAAQ,WAAO,KAAK;AACzE,QAAI,MAAM,WAAW,SAAY,OAAO,MAAM,OAAO,MAAM;AAC3D,UAAM,UAAU,oBAAoB;AACpC,WAAO,OAAO,MAAM,KAAK;AACvB,YAAM,MAAM,OAAO,OAAO;AAC1B,cAAQ,QAAQ,GAAG;AAAA,QACjB,KAAK;AACH,kBAAQ,KAAK,OAAO,OAAO,OAAO,EAAE,SAAS,CAAC;AAC9C;AAAA,QACF,KAAK;AACH,kBAAQ,OAAO,OAAO,OAAO;AAC7B;AAAA,QACF,KAAK;AACH,kBAAQ,cAAc,OAAO,OAAO;AACpC;AAAA,QACF,KAAK;AACH,kBAAQ,QAAQ,OAAO,OAAO;AAC9B;AAAA,QACF;AACE,iBAAO,SAAS,MAAM,CAAC;AACvB;AAAA,MACJ;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA,EACA,SAAS,QAAQ;AACf,WAAO;AAAA,MACL,IAAI,MAAM,OAAO,EAAE,IAAI,OAAO,OAAO,GAAG,SAAS,CAAC,IAAI,OAAO,GAAG;AAAA,MAChE,MAAM,MAAM,OAAO,IAAI,IAAI,OAAO,OAAO,IAAI,IAAI;AAAA,MACjD,aAAa,MAAM,OAAO,WAAW,IAAI,OAAO,OAAO,WAAW,IAAI;AAAA,MACtE,OAAO,MAAM,OAAO,KAAK,IAAI,OAAO,OAAO,KAAK,IAAI;AAAA,IACtD;AAAA,EACF;AAAA,EACA,OAAO,SAAS;AACd,UAAM,MAAM,CAAC;AACb,YAAQ,OAAO,WAAc,IAAI,MAAM,QAAQ,MAAM,OAAO,GAAG,GAAG,SAAS;AAC3E,YAAQ,SAAS,WAAc,IAAI,OAAO,QAAQ;AAClD,YAAQ,gBAAgB,WAAc,IAAI,cAAc,QAAQ;AAChE,YAAQ,UAAU,WAAc,IAAI,QAAQ,QAAQ;AACpD,WAAO;AAAA,EACT;AAAA,EACA,YAAY,QAAQ;AAClB,QAAI,eAAe,sBAAsB;AACzC,UAAM,UAAU,oBAAoB;AACpC,YAAQ,KAAK,OAAO,OAAO,UAAa,OAAO,OAAO,OAAO,OAAO,OAAO,GAAG,SAAS,CAAC,IAAI,OAAO,GAAG;AACtG,YAAQ,QAAQ,gBAAgB,OAAO,UAAU,QAAQ,kBAAkB,SAAS,gBAAgB;AACpG,YAAQ,eAAe,uBAAuB,OAAO,iBAAiB,QAAQ,yBAAyB,SAAS,uBAAuB;AACvI,YAAQ,SAAS,iBAAiB,OAAO,WAAW,QAAQ,mBAAmB,SAAS,iBAAiB;AACzG,WAAO;AAAA,EACT;AACF;AACA,SAAS,uBAAuB;AAC9B,SAAO;AAAA,IACL,cAAc;AAAA,IACd,UAAU,OAAO,GAAG;AAAA,IACpB,MAAM;AAAA,EACR;AACF;AACO,IAAM,aAAa;AAAA,EACxB,OAAO,SAAS,SAAa,WAAO,OAAO,GAAG;AAC5C,QAAI,QAAQ,iBAAiB,IAAI;AAC/B,aAAO,OAAO,EAAE,EAAE,OAAO,QAAQ,YAAY;AAAA,IAC/C;AACA,QAAI,QAAQ,aAAa,OAAO,CAAC,GAAG;AAClC,aAAO,OAAO,EAAE,EAAE,OAAO,YAAAA,QAAK,WAAW,QAAQ,SAAS,SAAS,CAAC,CAAC;AAAA,IACvE;AACA,QAAI,QAAQ,SAAS,IAAI;AACvB,aAAO,OAAO,EAAE,EAAE,OAAO,QAAQ,IAAI;AAAA,IACvC;AACA,WAAO;AAAA,EACT;AAAA,EACA,OAAO,OAAO,QAAQ;AACpB,UAAM,SAAS,iBAAqB,aAAS,QAAQ,IAAQ,WAAO,KAAK;AACzE,QAAI,MAAM,WAAW,SAAY,OAAO,MAAM,OAAO,MAAM;AAC3D,UAAM,UAAU,qBAAqB;AACrC,WAAO,OAAO,MAAM,KAAK;AACvB,YAAM,MAAM,OAAO,OAAO;AAC1B,cAAQ,QAAQ,GAAG;AAAA,QACjB,KAAK;AACH,kBAAQ,eAAe,OAAO,OAAO;AACrC;AAAA,QACF,KAAK;AACH,kBAAQ,WAAW,OAAO,OAAO,OAAO,EAAE,SAAS,CAAC;AACpD;AAAA,QACF,KAAK;AACH,kBAAQ,OAAO,OAAO,OAAO;AAC7B;AAAA,QACF;AACE,iBAAO,SAAS,MAAM,CAAC;AACvB;AAAA,MACJ;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA,EACA,SAAS,QAAQ;AACf,WAAO;AAAA,MACL,cAAc,MAAM,OAAO,YAAY,IAAI,OAAO,OAAO,YAAY,IAAI;AAAA,MACzE,UAAU,MAAM,OAAO,QAAQ,IAAI,OAAO,OAAO,SAAS,SAAS,CAAC,IAAI,OAAO,GAAG;AAAA,MAClF,MAAM,MAAM,OAAO,IAAI,IAAI,OAAO,OAAO,IAAI,IAAI;AAAA,IACnD;AAAA,EACF;AAAA,EACA,OAAO,SAAS;AACd,UAAM,MAAM,CAAC;AACb,YAAQ,iBAAiB,WAAc,IAAI,eAAe,QAAQ;AAClE,YAAQ,aAAa,WAAc,IAAI,YAAY,QAAQ,YAAY,OAAO,GAAG,GAAG,SAAS;AAC7F,YAAQ,SAAS,WAAc,IAAI,OAAO,QAAQ;AAClD,WAAO;AAAA,EACT;AAAA,EACA,YAAY,QAAQ;AAClB,QAAI,sBAAsB;AAC1B,UAAM,UAAU,qBAAqB;AACrC,YAAQ,gBAAgB,uBAAuB,OAAO,kBAAkB,QAAQ,yBAAyB,SAAS,uBAAuB;AACzI,YAAQ,WAAW,OAAO,aAAa,UAAa,OAAO,aAAa,OAAO,OAAO,OAAO,SAAS,SAAS,CAAC,IAAI,OAAO,GAAG;AAC9H,YAAQ,QAAQ,gBAAgB,OAAO,UAAU,QAAQ,kBAAkB,SAAS,gBAAgB;AACpG,WAAO;AAAA,EACT;AACF;AACA,SAAS,oBAAoB;AAC3B,SAAO;AAAA,IACL,IAAI,OAAO,GAAG;AAAA,IACd,aAAa,OAAO,GAAG;AAAA,IACvB,wBAAwB;AAAA,IACxB,MAAM;AAAA,IACN,QAAQ;AAAA,EACV;AACF;AACO,IAAM,UAAU;AAAA,EACrB,OAAO,SAAS,SAAa,WAAO,OAAO,GAAG;AAC5C,QAAI,QAAQ,OAAO,OAAO,CAAC,GAAG;AAC5B,aAAO,OAAO,CAAC,EAAE,OAAO,YAAAA,QAAK,WAAW,QAAQ,GAAG,SAAS,CAAC,CAAC;AAAA,IAChE;AACA,QAAI,QAAQ,gBAAgB,OAAO,CAAC,GAAG;AACrC,aAAO,OAAO,EAAE,EAAE,OAAO,YAAAA,QAAK,WAAW,QAAQ,YAAY,SAAS,CAAC,CAAC;AAAA,IAC1E;AACA,QAAI,QAAQ,2BAA2B,IAAI;AACzC,aAAO,OAAO,EAAE,EAAE,OAAO,QAAQ,sBAAsB;AAAA,IACzD;AACA,QAAI,QAAQ,SAAS,IAAI;AACvB,aAAO,OAAO,EAAE,EAAE,OAAO,QAAQ,IAAI;AAAA,IACvC;AACA,QAAI,QAAQ,WAAW,GAAG;AACxB,aAAO,OAAO,EAAE,EAAE,MAAM,QAAQ,MAAM;AAAA,IACxC;AACA,WAAO;AAAA,EACT;AAAA,EACA,OAAO,OAAO,QAAQ;AACpB,UAAM,SAAS,iBAAqB,aAAS,QAAQ,IAAQ,WAAO,KAAK;AACzE,QAAI,MAAM,WAAW,SAAY,OAAO,MAAM,OAAO,MAAM;AAC3D,UAAM,UAAU,kBAAkB;AAClC,WAAO,OAAO,MAAM,KAAK;AACvB,YAAM,MAAM,OAAO,OAAO;AAC1B,cAAQ,QAAQ,GAAG;AAAA,QACjB,KAAK;AACH,kBAAQ,KAAK,OAAO,OAAO,OAAO,EAAE,SAAS,CAAC;AAC9C;AAAA,QACF,KAAK;AACH,kBAAQ,cAAc,OAAO,OAAO,OAAO,EAAE,SAAS,CAAC;AACvD;AAAA,QACF,KAAK;AACH,kBAAQ,yBAAyB,OAAO,OAAO;AAC/C;AAAA,QACF,KAAK;AACH,kBAAQ,OAAO,OAAO,OAAO;AAC7B;AAAA,QACF,KAAK;AACH,kBAAQ,SAAS,OAAO,MAAM;AAC9B;AAAA,QACF;AACE,iBAAO,SAAS,MAAM,CAAC;AACvB;AAAA,MACJ;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA,EACA,SAAS,QAAQ;AACf,WAAO;AAAA,MACL,IAAI,MAAM,OAAO,EAAE,IAAI,OAAO,OAAO,GAAG,SAAS,CAAC,IAAI,OAAO,GAAG;AAAA,MAChE,aAAa,MAAM,OAAO,WAAW,IAAI,OAAO,OAAO,YAAY,SAAS,CAAC,IAAI,OAAO,GAAG;AAAA,MAC3F,wBAAwB,MAAM,OAAO,sBAAsB,IAAI,OAAO,OAAO,sBAAsB,IAAI;AAAA,MACvG,MAAM,MAAM,OAAO,IAAI,IAAI,OAAO,OAAO,IAAI,IAAI;AAAA,MACjD,QAAQ,MAAM,OAAO,MAAM,IAAI,sBAAsB,OAAO,MAAM,IAAI;AAAA,IACxE;AAAA,EACF;AAAA,EACA,OAAO,SAAS;AACd,UAAM,MAAM,CAAC;AACb,YAAQ,OAAO,WAAc,IAAI,MAAM,QAAQ,MAAM,OAAO,GAAG,GAAG,SAAS;AAC3E,YAAQ,gBAAgB,WAAc,IAAI,eAAe,QAAQ,eAAe,OAAO,GAAG,GAAG,SAAS;AACtG,YAAQ,2BAA2B,WAAc,IAAI,yBAAyB,QAAQ;AACtF,YAAQ,SAAS,WAAc,IAAI,OAAO,QAAQ;AAClD,YAAQ,WAAW,WAAc,IAAI,SAAS,oBAAoB,QAAQ,MAAM;AAChF,WAAO;AAAA,EACT;AAAA,EACA,YAAY,QAAQ;AAClB,QAAI,uBAAuB,eAAe;AAC1C,UAAM,UAAU,kBAAkB;AAClC,YAAQ,KAAK,OAAO,OAAO,UAAa,OAAO,OAAO,OAAO,OAAO,OAAO,GAAG,SAAS,CAAC,IAAI,OAAO,GAAG;AACtG,YAAQ,cAAc,OAAO,gBAAgB,UAAa,OAAO,gBAAgB,OAAO,OAAO,OAAO,YAAY,SAAS,CAAC,IAAI,OAAO,GAAG;AAC1I,YAAQ,0BAA0B,wBAAwB,OAAO,4BAA4B,QAAQ,0BAA0B,SAAS,wBAAwB;AAChK,YAAQ,QAAQ,gBAAgB,OAAO,UAAU,QAAQ,kBAAkB,SAAS,gBAAgB;AACpG,YAAQ,UAAU,iBAAiB,OAAO,YAAY,QAAQ,mBAAmB,SAAS,iBAAiB;AAC3G,WAAO;AAAA,EACT;AACF;AACA,SAAS,6BAA6B;AACpC,SAAO;AAAA,IACL,OAAO;AAAA,IACP,WAAW,OAAO,GAAG;AAAA,IACrB,aAAa;AAAA,IACb,cAAc,CAAC;AAAA,EACjB;AACF;AACO,IAAM,mBAAmB;AAAA,EAC9B,OAAO,SAAS,SAAa,WAAO,OAAO,GAAG;AAC5C,QAAI,QAAQ,UAAU,IAAI;AACxB,aAAO,OAAO,EAAE,EAAE,OAAO,QAAQ,KAAK;AAAA,IACxC;AACA,QAAI,QAAQ,cAAc,OAAO,CAAC,GAAG;AACnC,aAAO,OAAO,EAAE,EAAE,OAAO,YAAAA,QAAK,WAAW,QAAQ,UAAU,SAAS,CAAC,CAAC;AAAA,IACxE;AACA,QAAI,QAAQ,gBAAgB,QAAW;AACrC,mBAAa,OAAO,QAAQ,aAAa,OAAO,OAAO,EAAE,EAAE,KAAK,CAAC,EAAE,OAAO;AAAA,IAC5E;AACA,eAAW,KAAK,QAAQ,cAAc;AACpC,aAAO,OAAO,EAAE,EAAE,OAAO,CAAC;AAAA,IAC5B;AACA,WAAO;AAAA,EACT;AAAA,EACA,OAAO,OAAO,QAAQ;AACpB,UAAM,SAAS,iBAAqB,aAAS,QAAQ,IAAQ,WAAO,KAAK;AACzE,QAAI,MAAM,WAAW,SAAY,OAAO,MAAM,OAAO,MAAM;AAC3D,UAAM,UAAU,2BAA2B;AAC3C,WAAO,OAAO,MAAM,KAAK;AACvB,YAAM,MAAM,OAAO,OAAO;AAC1B,cAAQ,QAAQ,GAAG;AAAA,QACjB,KAAK;AACH,kBAAQ,QAAQ,OAAO,OAAO;AAC9B;AAAA,QACF,KAAK;AACH,kBAAQ,YAAY,OAAO,OAAO,OAAO,EAAE,SAAS,CAAC;AACrD;AAAA,QACF,KAAK;AACH,kBAAQ,cAAc,aAAa,OAAO,QAAQ,OAAO,OAAO,CAAC;AACjE;AAAA,QACF,KAAK;AACH,kBAAQ,aAAa,KAAK,OAAO,OAAO,CAAC;AACzC;AAAA,QACF;AACE,iBAAO,SAAS,MAAM,CAAC;AACvB;AAAA,MACJ;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA,EACA,SAAS,QAAQ;AACf,WAAO;AAAA,MACL,OAAO,MAAM,OAAO,KAAK,IAAI,OAAO,OAAO,KAAK,IAAI;AAAA,MACpD,WAAW,MAAM,OAAO,SAAS,IAAI,OAAO,OAAO,UAAU,SAAS,CAAC,IAAI,OAAO,GAAG;AAAA,MACrF,aAAa,MAAM,OAAO,WAAW,IAAI,aAAa,SAAS,OAAO,WAAW,IAAI;AAAA,MACrF,cAAc,MAAM,QAAQ,WAAW,QAAQ,WAAW,SAAS,SAAS,OAAO,YAAY,IAAI,OAAO,aAAa,IAAI,OAAK,OAAO,CAAC,CAAC,IAAI,CAAC;AAAA,IAChJ;AAAA,EACF;AAAA,EACA,OAAO,SAAS;AACd,UAAM,MAAM,CAAC;AACb,YAAQ,UAAU,WAAc,IAAI,QAAQ,QAAQ;AACpD,YAAQ,cAAc,WAAc,IAAI,aAAa,QAAQ,aAAa,OAAO,GAAG,GAAG,SAAS;AAChG,YAAQ,gBAAgB,WAAc,IAAI,cAAc,QAAQ,cAAc,aAAa,OAAO,QAAQ,WAAW,IAAI;AACzH,QAAI,QAAQ,cAAc;AACxB,UAAI,eAAe,QAAQ,aAAa,IAAI,OAAK,CAAC;AAAA,IACpD,OAAO;AACL,UAAI,eAAe,CAAC;AAAA,IACtB;AACA,WAAO;AAAA,EACT;AAAA,EACA,YAAY,QAAQ;AAClB,QAAI,eAAe;AACnB,UAAM,UAAU,2BAA2B;AAC3C,YAAQ,SAAS,gBAAgB,OAAO,WAAW,QAAQ,kBAAkB,SAAS,gBAAgB;AACtG,YAAQ,YAAY,OAAO,cAAc,UAAa,OAAO,cAAc,OAAO,OAAO,OAAO,UAAU,SAAS,CAAC,IAAI,OAAO,GAAG;AAClI,YAAQ,cAAc,OAAO,gBAAgB,UAAa,OAAO,gBAAgB,OAAO,aAAa,YAAY,OAAO,WAAW,IAAI;AACvI,YAAQ,iBAAiB,uBAAuB,OAAO,kBAAkB,QAAQ,yBAAyB,SAAS,SAAS,qBAAqB,IAAI,OAAK,CAAC,MAAM,CAAC;AAClK,WAAO;AAAA,EACT;AACF;AACA,SAAS,0BAA0B;AACjC,SAAO;AAAA,IACL,OAAO;AAAA,IACP,OAAO;AAAA,IACP,SAAS;AAAA,EACX;AACF;AACO,IAAM,gBAAgB;AAAA,EAC3B,OAAO,SAAS,SAAa,WAAO,OAAO,GAAG;AAC5C,QAAI,QAAQ,UAAU,IAAI;AACxB,aAAO,OAAO,EAAE,EAAE,OAAO,QAAQ,KAAK;AAAA,IACxC;AACA,QAAI,QAAQ,UAAU,IAAI;AACxB,aAAO,OAAO,EAAE,EAAE,OAAO,QAAQ,KAAK;AAAA,IACxC;AACA,QAAI,QAAQ,YAAY,QAAW;AACjC,mBAAa,OAAO,QAAQ,SAAS,OAAO,OAAO,EAAE,EAAE,KAAK,CAAC,EAAE,OAAO;AAAA,IACxE;AACA,WAAO;AAAA,EACT;AAAA,EACA,OAAO,OAAO,QAAQ;AACpB,UAAM,SAAS,iBAAqB,aAAS,QAAQ,IAAQ,WAAO,KAAK;AACzE,QAAI,MAAM,WAAW,SAAY,OAAO,MAAM,OAAO,MAAM;AAC3D,UAAM,UAAU,wBAAwB;AACxC,WAAO,OAAO,MAAM,KAAK;AACvB,YAAM,MAAM,OAAO,OAAO;AAC1B,cAAQ,QAAQ,GAAG;AAAA,QACjB,KAAK;AACH,kBAAQ,QAAQ,OAAO,OAAO;AAC9B;AAAA,QACF,KAAK;AACH,kBAAQ,QAAQ,OAAO,OAAO;AAC9B;AAAA,QACF,KAAK;AACH,kBAAQ,UAAU,aAAa,OAAO,QAAQ,OAAO,OAAO,CAAC;AAC7D;AAAA,QACF;AACE,iBAAO,SAAS,MAAM,CAAC;AACvB;AAAA,MACJ;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA,EACA,SAAS,QAAQ;AACf,WAAO;AAAA,MACL,OAAO,MAAM,OAAO,KAAK,IAAI,OAAO,OAAO,KAAK,IAAI;AAAA,MACpD,OAAO,MAAM,OAAO,KAAK,IAAI,OAAO,OAAO,KAAK,IAAI;AAAA,MACpD,SAAS,MAAM,OAAO,OAAO,IAAI,aAAa,SAAS,OAAO,OAAO,IAAI;AAAA,IAC3E;AAAA,EACF;AAAA,EACA,OAAO,SAAS;AACd,UAAM,MAAM,CAAC;AACb,YAAQ,UAAU,WAAc,IAAI,QAAQ,QAAQ;AACpD,YAAQ,UAAU,WAAc,IAAI,QAAQ,QAAQ;AACpD,YAAQ,YAAY,WAAc,IAAI,UAAU,QAAQ,UAAU,aAAa,OAAO,QAAQ,OAAO,IAAI;AACzG,WAAO;AAAA,EACT;AAAA,EACA,YAAY,QAAQ;AAClB,QAAI,eAAe;AACnB,UAAM,UAAU,wBAAwB;AACxC,YAAQ,SAAS,gBAAgB,OAAO,WAAW,QAAQ,kBAAkB,SAAS,gBAAgB;AACtG,YAAQ,SAAS,iBAAiB,OAAO,WAAW,QAAQ,mBAAmB,SAAS,iBAAiB;AACzG,YAAQ,UAAU,OAAO,YAAY,UAAa,OAAO,YAAY,OAAO,aAAa,YAAY,OAAO,OAAO,IAAI;AACvH,WAAO;AAAA,EACT;AACF;AACA,SAAS,yBAAyB;AAChC,SAAO;AAAA,IACL,QAAQ,OAAO,GAAG;AAAA,IAClB,SAAS,OAAO,GAAG;AAAA,EACrB;AACF;AACO,IAAM,eAAe;AAAA,EAC1B,OAAO,SAAS,SAAa,WAAO,OAAO,GAAG;AAC5C,QAAI,QAAQ,WAAW,OAAO,CAAC,GAAG;AAChC,aAAO,OAAO,CAAC,EAAE,OAAO,YAAAA,QAAK,WAAW,QAAQ,OAAO,SAAS,CAAC,CAAC;AAAA,IACpE;AACA,QAAI,QAAQ,YAAY,OAAO,CAAC,GAAG;AACjC,aAAO,OAAO,EAAE,EAAE,OAAO,YAAAA,QAAK,WAAW,QAAQ,QAAQ,SAAS,CAAC,CAAC;AAAA,IACtE;AACA,WAAO;AAAA,EACT;AAAA,EACA,OAAO,OAAO,QAAQ;AACpB,UAAM,SAAS,iBAAqB,aAAS,QAAQ,IAAQ,WAAO,KAAK;AACzE,QAAI,MAAM,WAAW,SAAY,OAAO,MAAM,OAAO,MAAM;AAC3D,UAAM,UAAU,uBAAuB;AACvC,WAAO,OAAO,MAAM,KAAK;AACvB,YAAM,MAAM,OAAO,OAAO;AAC1B,cAAQ,QAAQ,GAAG;AAAA,QACjB,KAAK;AACH,kBAAQ,SAAS,OAAO,OAAO,OAAO,EAAE,SAAS,CAAC;AAClD;AAAA,QACF,KAAK;AACH,kBAAQ,UAAU,OAAO,OAAO,OAAO,EAAE,SAAS,CAAC;AACnD;AAAA,QACF;AACE,iBAAO,SAAS,MAAM,CAAC;AACvB;AAAA,MACJ;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA,EACA,SAAS,QAAQ;AACf,WAAO;AAAA,MACL,QAAQ,MAAM,OAAO,MAAM,IAAI,OAAO,OAAO,OAAO,SAAS,CAAC,IAAI,OAAO,GAAG;AAAA,MAC5E,SAAS,MAAM,OAAO,OAAO,IAAI,OAAO,OAAO,QAAQ,SAAS,CAAC,IAAI,OAAO,GAAG;AAAA,IACjF;AAAA,EACF;AAAA,EACA,OAAO,SAAS;AACd,UAAM,MAAM,CAAC;AACb,YAAQ,WAAW,WAAc,IAAI,UAAU,QAAQ,UAAU,OAAO,GAAG,GAAG,SAAS;AACvF,YAAQ,YAAY,WAAc,IAAI,WAAW,QAAQ,WAAW,OAAO,GAAG,GAAG,SAAS;AAC1F,WAAO;AAAA,EACT;AAAA,EACA,YAAY,QAAQ;AAClB,UAAM,UAAU,uBAAuB;AACvC,YAAQ,SAAS,OAAO,WAAW,UAAa,OAAO,WAAW,OAAO,OAAO,OAAO,OAAO,SAAS,CAAC,IAAI,OAAO,GAAG;AACtH,YAAQ,UAAU,OAAO,YAAY,UAAa,OAAO,YAAY,OAAO,OAAO,OAAO,QAAQ,SAAS,CAAC,IAAI,OAAO,GAAG;AAC1H,WAAO;AAAA,EACT;AACF;AACA,SAAS,uBAAuB;AAC9B,SAAO;AAAA,IACL,KAAK;AAAA,IACL,MAAM;AAAA,EACR;AACF;AACO,IAAM,aAAa;AAAA,EACxB,OAAO,SAAS,SAAa,WAAO,OAAO,GAAG;AAC5C,QAAI,QAAQ,QAAQ,IAAI;AACtB,aAAO,OAAO,EAAE,EAAE,OAAO,QAAQ,GAAG;AAAA,IACtC;AACA,QAAI,QAAQ,SAAS,IAAI;AACvB,aAAO,OAAO,EAAE,EAAE,OAAO,QAAQ,IAAI;AAAA,IACvC;AACA,WAAO;AAAA,EACT;AAAA,EACA,OAAO,OAAO,QAAQ;AACpB,UAAM,SAAS,iBAAqB,aAAS,QAAQ,IAAQ,WAAO,KAAK;AACzE,QAAI,MAAM,WAAW,SAAY,OAAO,MAAM,OAAO,MAAM;AAC3D,UAAM,UAAU,qBAAqB;AACrC,WAAO,OAAO,MAAM,KAAK;AACvB,YAAM,MAAM,OAAO,OAAO;AAC1B,cAAQ,QAAQ,GAAG;AAAA,QACjB,KAAK;AACH,kBAAQ,MAAM,OAAO,OAAO;AAC5B;AAAA,QACF,KAAK;AACH,kBAAQ,OAAO,OAAO,OAAO;AAC7B;AAAA,QACF;AACE,iBAAO,SAAS,MAAM,CAAC;AACvB;AAAA,MACJ;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA,EACA,SAAS,QAAQ;AACf,WAAO;AAAA,MACL,KAAK,MAAM,OAAO,GAAG,IAAI,OAAO,OAAO,GAAG,IAAI;AAAA,MAC9C,MAAM,MAAM,OAAO,IAAI,IAAI,OAAO,OAAO,IAAI,IAAI;AAAA,IACnD;AAAA,EACF;AAAA,EACA,OAAO,SAAS;AACd,UAAM,MAAM,CAAC;AACb,YAAQ,QAAQ,WAAc,IAAI,MAAM,QAAQ;AAChD,YAAQ,SAAS,WAAc,IAAI,OAAO,QAAQ;AAClD,WAAO;AAAA,EACT;AAAA,EACA,YAAY,QAAQ;AAClB,QAAI,aAAa;AACjB,UAAM,UAAU,qBAAqB;AACrC,YAAQ,OAAO,cAAc,OAAO,SAAS,QAAQ,gBAAgB,SAAS,cAAc;AAC5F,YAAQ,QAAQ,eAAe,OAAO,UAAU,QAAQ,iBAAiB,SAAS,eAAe;AACjG,WAAO;AAAA,EACT;AACF;",
  "names": ["ProjectStatus", "Long"]
}
