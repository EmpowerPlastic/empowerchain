{
  "version": 3,
  "sources": ["../../node_modules/@empower-plastic/empowerjs/module/codegen/empowerchain/proofofexistence/query.rpc.Query.js", "../../node_modules/@empower-plastic/empowerjs/module/codegen/empowerchain/proofofexistence/query.js", "../../node_modules/@empower-plastic/empowerjs/module/codegen/empowerchain/proofofexistence/types.js"],
  "sourcesContent": ["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as _m0 from \"protobufjs/minimal\";\nimport { createProtobufRpcClient } from \"@cosmjs/stargate\";\nimport { QueryProofRequest, QueryProofResponse } from \"./query\";\nexport class QueryClientImpl {\n  constructor(rpc) {\n    _defineProperty(this, \"rpc\", void 0);\n    this.rpc = rpc;\n    this.proof = this.proof.bind(this);\n  }\n  proof(request) {\n    const data = QueryProofRequest.encode(request).finish();\n    const promise = this.rpc.request(\"empowerchain.proofofexistence.Query\", \"Proof\", data);\n    return promise.then(data => QueryProofResponse.decode(new _m0.Reader(data)));\n  }\n}\nexport const createRpcQueryExtension = base => {\n  const rpc = createProtobufRpcClient(base);\n  const queryService = new QueryClientImpl(rpc);\n  return {\n    proof(request) {\n      return queryService.proof(request);\n    }\n  };\n};", "import { ProofMetadata } from \"./types\";\nimport * as _m0 from \"protobufjs/minimal\";\nimport { isSet } from \"../../helpers\";\nfunction createBaseQueryProofRequest() {\n  return {\n    hash: \"\"\n  };\n}\nexport const QueryProofRequest = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.hash !== \"\") {\n      writer.uint32(10).string(message.hash);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryProofRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.hash = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      hash: isSet(object.hash) ? String(object.hash) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.hash !== undefined && (obj.hash = message.hash);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$hash;\n    const message = createBaseQueryProofRequest();\n    message.hash = (_object$hash = object.hash) !== null && _object$hash !== void 0 ? _object$hash : \"\";\n    return message;\n  }\n};\nfunction createBaseQueryProofResponse() {\n  return {\n    metadata: undefined\n  };\n}\nexport const QueryProofResponse = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.metadata !== undefined) {\n      ProofMetadata.encode(message.metadata, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryProofResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.metadata = ProofMetadata.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      metadata: isSet(object.metadata) ? ProofMetadata.fromJSON(object.metadata) : undefined\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.metadata !== undefined && (obj.metadata = message.metadata ? ProofMetadata.toJSON(message.metadata) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseQueryProofResponse();\n    message.metadata = object.metadata !== undefined && object.metadata !== null ? ProofMetadata.fromPartial(object.metadata) : undefined;\n    return message;\n  }\n};", "import { Timestamp } from \"../../google/protobuf/timestamp\";\nimport * as _m0 from \"protobufjs/minimal\";\nimport { toTimestamp, fromTimestamp, isSet, fromJsonTimestamp } from \"../../helpers\";\n/**\n * ProofMetadata is the metadata attached to a specific data proof\n * Because the proof itself is also the key, the data structure is hash -> ProofMetadata\n * The hash is the SHA-256 hash of the data of which is being made a proof for.\n */\n\n/**\n * ProofMetadata is the metadata attached to a specific data proof\n * Because the proof itself is also the key, the data structure is hash -> ProofMetadata\n * The hash is the SHA-256 hash of the data of which is being made a proof for.\n */\n\nfunction createBaseProofMetadata() {\n  return {\n    timestamp: undefined,\n    creator: \"\"\n  };\n}\nexport const ProofMetadata = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.timestamp !== undefined) {\n      Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(10).fork()).ldelim();\n    }\n    if (message.creator !== \"\") {\n      writer.uint32(18).string(message.creator);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseProofMetadata();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.creator = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      timestamp: isSet(object.timestamp) ? fromJsonTimestamp(object.timestamp) : undefined,\n      creator: isSet(object.creator) ? String(object.creator) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.timestamp !== undefined && (obj.timestamp = message.timestamp.toISOString());\n    message.creator !== undefined && (obj.creator = message.creator);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$timestamp, _object$creator;\n    const message = createBaseProofMetadata();\n    message.timestamp = (_object$timestamp = object.timestamp) !== null && _object$timestamp !== void 0 ? _object$timestamp : undefined;\n    message.creator = (_object$creator = object.creator) !== null && _object$creator !== void 0 ? _object$creator : \"\";\n    return message;\n  }\n};"],
  "mappings": "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",
  "names": ["_m0", "_m0", "data"]
}
