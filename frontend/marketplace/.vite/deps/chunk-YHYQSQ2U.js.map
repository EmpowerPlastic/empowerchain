{
  "version": 3,
  "sources": ["../../node_modules/@empower-plastic/empowerjs/module/codegen/cosmos/group/v1/tx.rpc.msg.js", "../../node_modules/@empower-plastic/empowerjs/module/codegen/cosmos/group/v1/tx.js"],
  "sourcesContent": ["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as _m0 from \"protobufjs/minimal\";\nimport { MsgCreateGroup, MsgCreateGroupResponse, MsgUpdateGroupMembers, MsgUpdateGroupMembersResponse, MsgUpdateGroupAdmin, MsgUpdateGroupAdminResponse, MsgUpdateGroupMetadata, MsgUpdateGroupMetadataResponse, MsgCreateGroupPolicy, MsgCreateGroupPolicyResponse, MsgCreateGroupWithPolicy, MsgCreateGroupWithPolicyResponse, MsgUpdateGroupPolicyAdmin, MsgUpdateGroupPolicyAdminResponse, MsgUpdateGroupPolicyDecisionPolicy, MsgUpdateGroupPolicyDecisionPolicyResponse, MsgUpdateGroupPolicyMetadata, MsgUpdateGroupPolicyMetadataResponse, MsgSubmitProposal, MsgSubmitProposalResponse, MsgWithdrawProposal, MsgWithdrawProposalResponse, MsgVote, MsgVoteResponse, MsgExec, MsgExecResponse, MsgLeaveGroup, MsgLeaveGroupResponse } from \"./tx\";\n/** Msg is the cosmos.group.v1 Msg service. */\n\nexport class MsgClientImpl {\n  constructor(rpc) {\n    _defineProperty(this, \"rpc\", void 0);\n    this.rpc = rpc;\n    this.createGroup = this.createGroup.bind(this);\n    this.updateGroupMembers = this.updateGroupMembers.bind(this);\n    this.updateGroupAdmin = this.updateGroupAdmin.bind(this);\n    this.updateGroupMetadata = this.updateGroupMetadata.bind(this);\n    this.createGroupPolicy = this.createGroupPolicy.bind(this);\n    this.createGroupWithPolicy = this.createGroupWithPolicy.bind(this);\n    this.updateGroupPolicyAdmin = this.updateGroupPolicyAdmin.bind(this);\n    this.updateGroupPolicyDecisionPolicy = this.updateGroupPolicyDecisionPolicy.bind(this);\n    this.updateGroupPolicyMetadata = this.updateGroupPolicyMetadata.bind(this);\n    this.submitProposal = this.submitProposal.bind(this);\n    this.withdrawProposal = this.withdrawProposal.bind(this);\n    this.vote = this.vote.bind(this);\n    this.exec = this.exec.bind(this);\n    this.leaveGroup = this.leaveGroup.bind(this);\n  }\n  createGroup(request) {\n    const data = MsgCreateGroup.encode(request).finish();\n    const promise = this.rpc.request(\"cosmos.group.v1.Msg\", \"CreateGroup\", data);\n    return promise.then(data => MsgCreateGroupResponse.decode(new _m0.Reader(data)));\n  }\n  updateGroupMembers(request) {\n    const data = MsgUpdateGroupMembers.encode(request).finish();\n    const promise = this.rpc.request(\"cosmos.group.v1.Msg\", \"UpdateGroupMembers\", data);\n    return promise.then(data => MsgUpdateGroupMembersResponse.decode(new _m0.Reader(data)));\n  }\n  updateGroupAdmin(request) {\n    const data = MsgUpdateGroupAdmin.encode(request).finish();\n    const promise = this.rpc.request(\"cosmos.group.v1.Msg\", \"UpdateGroupAdmin\", data);\n    return promise.then(data => MsgUpdateGroupAdminResponse.decode(new _m0.Reader(data)));\n  }\n  updateGroupMetadata(request) {\n    const data = MsgUpdateGroupMetadata.encode(request).finish();\n    const promise = this.rpc.request(\"cosmos.group.v1.Msg\", \"UpdateGroupMetadata\", data);\n    return promise.then(data => MsgUpdateGroupMetadataResponse.decode(new _m0.Reader(data)));\n  }\n  createGroupPolicy(request) {\n    const data = MsgCreateGroupPolicy.encode(request).finish();\n    const promise = this.rpc.request(\"cosmos.group.v1.Msg\", \"CreateGroupPolicy\", data);\n    return promise.then(data => MsgCreateGroupPolicyResponse.decode(new _m0.Reader(data)));\n  }\n  createGroupWithPolicy(request) {\n    const data = MsgCreateGroupWithPolicy.encode(request).finish();\n    const promise = this.rpc.request(\"cosmos.group.v1.Msg\", \"CreateGroupWithPolicy\", data);\n    return promise.then(data => MsgCreateGroupWithPolicyResponse.decode(new _m0.Reader(data)));\n  }\n  updateGroupPolicyAdmin(request) {\n    const data = MsgUpdateGroupPolicyAdmin.encode(request).finish();\n    const promise = this.rpc.request(\"cosmos.group.v1.Msg\", \"UpdateGroupPolicyAdmin\", data);\n    return promise.then(data => MsgUpdateGroupPolicyAdminResponse.decode(new _m0.Reader(data)));\n  }\n  updateGroupPolicyDecisionPolicy(request) {\n    const data = MsgUpdateGroupPolicyDecisionPolicy.encode(request).finish();\n    const promise = this.rpc.request(\"cosmos.group.v1.Msg\", \"UpdateGroupPolicyDecisionPolicy\", data);\n    return promise.then(data => MsgUpdateGroupPolicyDecisionPolicyResponse.decode(new _m0.Reader(data)));\n  }\n  updateGroupPolicyMetadata(request) {\n    const data = MsgUpdateGroupPolicyMetadata.encode(request).finish();\n    const promise = this.rpc.request(\"cosmos.group.v1.Msg\", \"UpdateGroupPolicyMetadata\", data);\n    return promise.then(data => MsgUpdateGroupPolicyMetadataResponse.decode(new _m0.Reader(data)));\n  }\n  submitProposal(request) {\n    const data = MsgSubmitProposal.encode(request).finish();\n    const promise = this.rpc.request(\"cosmos.group.v1.Msg\", \"SubmitProposal\", data);\n    return promise.then(data => MsgSubmitProposalResponse.decode(new _m0.Reader(data)));\n  }\n  withdrawProposal(request) {\n    const data = MsgWithdrawProposal.encode(request).finish();\n    const promise = this.rpc.request(\"cosmos.group.v1.Msg\", \"WithdrawProposal\", data);\n    return promise.then(data => MsgWithdrawProposalResponse.decode(new _m0.Reader(data)));\n  }\n  vote(request) {\n    const data = MsgVote.encode(request).finish();\n    const promise = this.rpc.request(\"cosmos.group.v1.Msg\", \"Vote\", data);\n    return promise.then(data => MsgVoteResponse.decode(new _m0.Reader(data)));\n  }\n  exec(request) {\n    const data = MsgExec.encode(request).finish();\n    const promise = this.rpc.request(\"cosmos.group.v1.Msg\", \"Exec\", data);\n    return promise.then(data => MsgExecResponse.decode(new _m0.Reader(data)));\n  }\n  leaveGroup(request) {\n    const data = MsgLeaveGroup.encode(request).finish();\n    const promise = this.rpc.request(\"cosmos.group.v1.Msg\", \"LeaveGroup\", data);\n    return promise.then(data => MsgLeaveGroupResponse.decode(new _m0.Reader(data)));\n  }\n}", "import { MemberRequest, voteOptionFromJSON, voteOptionToJSON, proposalExecutorResultFromJSON, proposalExecutorResultToJSON } from \"./types\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport * as _m0 from \"protobufjs/minimal\";\nimport { isSet, Long } from \"../../../helpers\";\n/** Exec defines modes of execution of a proposal on creation or on new vote. */\nexport let Exec = /*#__PURE__*/function (Exec) {\n  Exec[Exec[\"EXEC_UNSPECIFIED\"] = 0] = \"EXEC_UNSPECIFIED\";\n  Exec[Exec[\"EXEC_TRY\"] = 1] = \"EXEC_TRY\";\n  Exec[Exec[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n  return Exec;\n}({});\nexport const ExecSDKType = Exec;\nexport function execFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"EXEC_UNSPECIFIED\":\n      return Exec.EXEC_UNSPECIFIED;\n    case 1:\n    case \"EXEC_TRY\":\n      return Exec.EXEC_TRY;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return Exec.UNRECOGNIZED;\n  }\n}\nexport function execToJSON(object) {\n  switch (object) {\n    case Exec.EXEC_UNSPECIFIED:\n      return \"EXEC_UNSPECIFIED\";\n    case Exec.EXEC_TRY:\n      return \"EXEC_TRY\";\n    case Exec.UNRECOGNIZED:\n    default:\n      return \"UNRECOGNIZED\";\n  }\n}\n/** MsgCreateGroup is the Msg/CreateGroup request type. */\n\n/** MsgCreateGroup is the Msg/CreateGroup request type. */\n\n/** MsgCreateGroupResponse is the Msg/CreateGroup response type. */\n\n/** MsgCreateGroupResponse is the Msg/CreateGroup response type. */\n\n/** MsgUpdateGroupMembers is the Msg/UpdateGroupMembers request type. */\n\n/** MsgUpdateGroupMembers is the Msg/UpdateGroupMembers request type. */\n\n/** MsgUpdateGroupMembersResponse is the Msg/UpdateGroupMembers response type. */\n\n/** MsgUpdateGroupMembersResponse is the Msg/UpdateGroupMembers response type. */\n\n/** MsgUpdateGroupAdmin is the Msg/UpdateGroupAdmin request type. */\n\n/** MsgUpdateGroupAdmin is the Msg/UpdateGroupAdmin request type. */\n\n/** MsgUpdateGroupAdminResponse is the Msg/UpdateGroupAdmin response type. */\n\n/** MsgUpdateGroupAdminResponse is the Msg/UpdateGroupAdmin response type. */\n\n/** MsgUpdateGroupMetadata is the Msg/UpdateGroupMetadata request type. */\n\n/** MsgUpdateGroupMetadata is the Msg/UpdateGroupMetadata request type. */\n\n/** MsgUpdateGroupMetadataResponse is the Msg/UpdateGroupMetadata response type. */\n\n/** MsgUpdateGroupMetadataResponse is the Msg/UpdateGroupMetadata response type. */\n\n/** MsgCreateGroupPolicy is the Msg/CreateGroupPolicy request type. */\n\n/** MsgCreateGroupPolicy is the Msg/CreateGroupPolicy request type. */\n\n/** MsgCreateGroupPolicyResponse is the Msg/CreateGroupPolicy response type. */\n\n/** MsgCreateGroupPolicyResponse is the Msg/CreateGroupPolicy response type. */\n\n/** MsgUpdateGroupPolicyAdmin is the Msg/UpdateGroupPolicyAdmin request type. */\n\n/** MsgUpdateGroupPolicyAdmin is the Msg/UpdateGroupPolicyAdmin request type. */\n\n/** MsgUpdateGroupPolicyAdminResponse is the Msg/UpdateGroupPolicyAdmin response type. */\n\n/** MsgUpdateGroupPolicyAdminResponse is the Msg/UpdateGroupPolicyAdmin response type. */\n\n/** MsgCreateGroupWithPolicy is the Msg/CreateGroupWithPolicy request type. */\n\n/** MsgCreateGroupWithPolicy is the Msg/CreateGroupWithPolicy request type. */\n\n/** MsgCreateGroupWithPolicyResponse is the Msg/CreateGroupWithPolicy response type. */\n\n/** MsgCreateGroupWithPolicyResponse is the Msg/CreateGroupWithPolicy response type. */\n\n/** MsgUpdateGroupPolicyDecisionPolicy is the Msg/UpdateGroupPolicyDecisionPolicy request type. */\n\n/** MsgUpdateGroupPolicyDecisionPolicy is the Msg/UpdateGroupPolicyDecisionPolicy request type. */\n\n/** MsgUpdateGroupPolicyDecisionPolicyResponse is the Msg/UpdateGroupPolicyDecisionPolicy response type. */\n\n/** MsgUpdateGroupPolicyDecisionPolicyResponse is the Msg/UpdateGroupPolicyDecisionPolicy response type. */\n\n/** MsgUpdateGroupPolicyMetadata is the Msg/UpdateGroupPolicyMetadata request type. */\n\n/** MsgUpdateGroupPolicyMetadata is the Msg/UpdateGroupPolicyMetadata request type. */\n\n/** MsgUpdateGroupPolicyMetadataResponse is the Msg/UpdateGroupPolicyMetadata response type. */\n\n/** MsgUpdateGroupPolicyMetadataResponse is the Msg/UpdateGroupPolicyMetadata response type. */\n\n/** MsgSubmitProposal is the Msg/SubmitProposal request type. */\n\n/** MsgSubmitProposal is the Msg/SubmitProposal request type. */\n\n/** MsgSubmitProposalResponse is the Msg/SubmitProposal response type. */\n\n/** MsgSubmitProposalResponse is the Msg/SubmitProposal response type. */\n\n/** MsgWithdrawProposal is the Msg/WithdrawProposal request type. */\n\n/** MsgWithdrawProposal is the Msg/WithdrawProposal request type. */\n\n/** MsgWithdrawProposalResponse is the Msg/WithdrawProposal response type. */\n\n/** MsgWithdrawProposalResponse is the Msg/WithdrawProposal response type. */\n\n/** MsgVote is the Msg/Vote request type. */\n\n/** MsgVote is the Msg/Vote request type. */\n\n/** MsgVoteResponse is the Msg/Vote response type. */\n\n/** MsgVoteResponse is the Msg/Vote response type. */\n\n/** MsgExec is the Msg/Exec request type. */\n\n/** MsgExec is the Msg/Exec request type. */\n\n/** MsgExecResponse is the Msg/Exec request type. */\n\n/** MsgExecResponse is the Msg/Exec request type. */\n\n/** MsgLeaveGroup is the Msg/LeaveGroup request type. */\n\n/** MsgLeaveGroup is the Msg/LeaveGroup request type. */\n\n/** MsgLeaveGroupResponse is the Msg/LeaveGroup response type. */\n\n/** MsgLeaveGroupResponse is the Msg/LeaveGroup response type. */\n\nfunction createBaseMsgCreateGroup() {\n  return {\n    admin: \"\",\n    members: [],\n    metadata: \"\"\n  };\n}\nexport const MsgCreateGroup = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.admin !== \"\") {\n      writer.uint32(10).string(message.admin);\n    }\n    for (const v of message.members) {\n      MemberRequest.encode(v, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.metadata !== \"\") {\n      writer.uint32(26).string(message.metadata);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgCreateGroup();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.admin = reader.string();\n          break;\n        case 2:\n          message.members.push(MemberRequest.decode(reader, reader.uint32()));\n          break;\n        case 3:\n          message.metadata = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      admin: isSet(object.admin) ? String(object.admin) : \"\",\n      members: Array.isArray(object === null || object === void 0 ? void 0 : object.members) ? object.members.map(e => MemberRequest.fromJSON(e)) : [],\n      metadata: isSet(object.metadata) ? String(object.metadata) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.admin !== undefined && (obj.admin = message.admin);\n    if (message.members) {\n      obj.members = message.members.map(e => e ? MemberRequest.toJSON(e) : undefined);\n    } else {\n      obj.members = [];\n    }\n    message.metadata !== undefined && (obj.metadata = message.metadata);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$admin, _object$members, _object$metadata;\n    const message = createBaseMsgCreateGroup();\n    message.admin = (_object$admin = object.admin) !== null && _object$admin !== void 0 ? _object$admin : \"\";\n    message.members = ((_object$members = object.members) === null || _object$members === void 0 ? void 0 : _object$members.map(e => MemberRequest.fromPartial(e))) || [];\n    message.metadata = (_object$metadata = object.metadata) !== null && _object$metadata !== void 0 ? _object$metadata : \"\";\n    return message;\n  }\n};\nfunction createBaseMsgCreateGroupResponse() {\n  return {\n    groupId: BigInt(\"0\")\n  };\n}\nexport const MsgCreateGroupResponse = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.groupId !== BigInt(0)) {\n      writer.uint32(8).uint64(Long.fromString(message.groupId.toString()));\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgCreateGroupResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.groupId = BigInt(reader.uint64().toString());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      groupId: isSet(object.groupId) ? BigInt(object.groupId.toString()) : BigInt(\"0\")\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.groupId !== undefined && (obj.groupId = (message.groupId || BigInt(\"0\")).toString());\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseMsgCreateGroupResponse();\n    message.groupId = object.groupId !== undefined && object.groupId !== null ? BigInt(object.groupId.toString()) : BigInt(\"0\");\n    return message;\n  }\n};\nfunction createBaseMsgUpdateGroupMembers() {\n  return {\n    admin: \"\",\n    groupId: BigInt(\"0\"),\n    memberUpdates: []\n  };\n}\nexport const MsgUpdateGroupMembers = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.admin !== \"\") {\n      writer.uint32(10).string(message.admin);\n    }\n    if (message.groupId !== BigInt(0)) {\n      writer.uint32(16).uint64(Long.fromString(message.groupId.toString()));\n    }\n    for (const v of message.memberUpdates) {\n      MemberRequest.encode(v, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateGroupMembers();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.admin = reader.string();\n          break;\n        case 2:\n          message.groupId = BigInt(reader.uint64().toString());\n          break;\n        case 3:\n          message.memberUpdates.push(MemberRequest.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      admin: isSet(object.admin) ? String(object.admin) : \"\",\n      groupId: isSet(object.groupId) ? BigInt(object.groupId.toString()) : BigInt(\"0\"),\n      memberUpdates: Array.isArray(object === null || object === void 0 ? void 0 : object.memberUpdates) ? object.memberUpdates.map(e => MemberRequest.fromJSON(e)) : []\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.admin !== undefined && (obj.admin = message.admin);\n    message.groupId !== undefined && (obj.groupId = (message.groupId || BigInt(\"0\")).toString());\n    if (message.memberUpdates) {\n      obj.memberUpdates = message.memberUpdates.map(e => e ? MemberRequest.toJSON(e) : undefined);\n    } else {\n      obj.memberUpdates = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$admin2, _object$memberUpdates;\n    const message = createBaseMsgUpdateGroupMembers();\n    message.admin = (_object$admin2 = object.admin) !== null && _object$admin2 !== void 0 ? _object$admin2 : \"\";\n    message.groupId = object.groupId !== undefined && object.groupId !== null ? BigInt(object.groupId.toString()) : BigInt(\"0\");\n    message.memberUpdates = ((_object$memberUpdates = object.memberUpdates) === null || _object$memberUpdates === void 0 ? void 0 : _object$memberUpdates.map(e => MemberRequest.fromPartial(e))) || [];\n    return message;\n  }\n};\nfunction createBaseMsgUpdateGroupMembersResponse() {\n  return {};\n}\nexport const MsgUpdateGroupMembersResponse = {\n  encode(_, writer = _m0.Writer.create()) {\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateGroupMembersResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    return {};\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = createBaseMsgUpdateGroupMembersResponse();\n    return message;\n  }\n};\nfunction createBaseMsgUpdateGroupAdmin() {\n  return {\n    admin: \"\",\n    groupId: BigInt(\"0\"),\n    newAdmin: \"\"\n  };\n}\nexport const MsgUpdateGroupAdmin = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.admin !== \"\") {\n      writer.uint32(10).string(message.admin);\n    }\n    if (message.groupId !== BigInt(0)) {\n      writer.uint32(16).uint64(Long.fromString(message.groupId.toString()));\n    }\n    if (message.newAdmin !== \"\") {\n      writer.uint32(26).string(message.newAdmin);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateGroupAdmin();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.admin = reader.string();\n          break;\n        case 2:\n          message.groupId = BigInt(reader.uint64().toString());\n          break;\n        case 3:\n          message.newAdmin = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      admin: isSet(object.admin) ? String(object.admin) : \"\",\n      groupId: isSet(object.groupId) ? BigInt(object.groupId.toString()) : BigInt(\"0\"),\n      newAdmin: isSet(object.newAdmin) ? String(object.newAdmin) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.admin !== undefined && (obj.admin = message.admin);\n    message.groupId !== undefined && (obj.groupId = (message.groupId || BigInt(\"0\")).toString());\n    message.newAdmin !== undefined && (obj.newAdmin = message.newAdmin);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$admin3, _object$newAdmin;\n    const message = createBaseMsgUpdateGroupAdmin();\n    message.admin = (_object$admin3 = object.admin) !== null && _object$admin3 !== void 0 ? _object$admin3 : \"\";\n    message.groupId = object.groupId !== undefined && object.groupId !== null ? BigInt(object.groupId.toString()) : BigInt(\"0\");\n    message.newAdmin = (_object$newAdmin = object.newAdmin) !== null && _object$newAdmin !== void 0 ? _object$newAdmin : \"\";\n    return message;\n  }\n};\nfunction createBaseMsgUpdateGroupAdminResponse() {\n  return {};\n}\nexport const MsgUpdateGroupAdminResponse = {\n  encode(_, writer = _m0.Writer.create()) {\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateGroupAdminResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    return {};\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = createBaseMsgUpdateGroupAdminResponse();\n    return message;\n  }\n};\nfunction createBaseMsgUpdateGroupMetadata() {\n  return {\n    admin: \"\",\n    groupId: BigInt(\"0\"),\n    metadata: \"\"\n  };\n}\nexport const MsgUpdateGroupMetadata = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.admin !== \"\") {\n      writer.uint32(10).string(message.admin);\n    }\n    if (message.groupId !== BigInt(0)) {\n      writer.uint32(16).uint64(Long.fromString(message.groupId.toString()));\n    }\n    if (message.metadata !== \"\") {\n      writer.uint32(26).string(message.metadata);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateGroupMetadata();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.admin = reader.string();\n          break;\n        case 2:\n          message.groupId = BigInt(reader.uint64().toString());\n          break;\n        case 3:\n          message.metadata = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      admin: isSet(object.admin) ? String(object.admin) : \"\",\n      groupId: isSet(object.groupId) ? BigInt(object.groupId.toString()) : BigInt(\"0\"),\n      metadata: isSet(object.metadata) ? String(object.metadata) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.admin !== undefined && (obj.admin = message.admin);\n    message.groupId !== undefined && (obj.groupId = (message.groupId || BigInt(\"0\")).toString());\n    message.metadata !== undefined && (obj.metadata = message.metadata);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$admin4, _object$metadata2;\n    const message = createBaseMsgUpdateGroupMetadata();\n    message.admin = (_object$admin4 = object.admin) !== null && _object$admin4 !== void 0 ? _object$admin4 : \"\";\n    message.groupId = object.groupId !== undefined && object.groupId !== null ? BigInt(object.groupId.toString()) : BigInt(\"0\");\n    message.metadata = (_object$metadata2 = object.metadata) !== null && _object$metadata2 !== void 0 ? _object$metadata2 : \"\";\n    return message;\n  }\n};\nfunction createBaseMsgUpdateGroupMetadataResponse() {\n  return {};\n}\nexport const MsgUpdateGroupMetadataResponse = {\n  encode(_, writer = _m0.Writer.create()) {\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateGroupMetadataResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    return {};\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = createBaseMsgUpdateGroupMetadataResponse();\n    return message;\n  }\n};\nfunction createBaseMsgCreateGroupPolicy() {\n  return {\n    admin: \"\",\n    groupId: BigInt(\"0\"),\n    metadata: \"\",\n    decisionPolicy: undefined\n  };\n}\nexport const MsgCreateGroupPolicy = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.admin !== \"\") {\n      writer.uint32(10).string(message.admin);\n    }\n    if (message.groupId !== BigInt(0)) {\n      writer.uint32(16).uint64(Long.fromString(message.groupId.toString()));\n    }\n    if (message.metadata !== \"\") {\n      writer.uint32(26).string(message.metadata);\n    }\n    if (message.decisionPolicy !== undefined) {\n      Any.encode(message.decisionPolicy, writer.uint32(34).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgCreateGroupPolicy();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.admin = reader.string();\n          break;\n        case 2:\n          message.groupId = BigInt(reader.uint64().toString());\n          break;\n        case 3:\n          message.metadata = reader.string();\n          break;\n        case 4:\n          message.decisionPolicy = Any.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      admin: isSet(object.admin) ? String(object.admin) : \"\",\n      groupId: isSet(object.groupId) ? BigInt(object.groupId.toString()) : BigInt(\"0\"),\n      metadata: isSet(object.metadata) ? String(object.metadata) : \"\",\n      decisionPolicy: isSet(object.decisionPolicy) ? Any.fromJSON(object.decisionPolicy) : undefined\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.admin !== undefined && (obj.admin = message.admin);\n    message.groupId !== undefined && (obj.groupId = (message.groupId || BigInt(\"0\")).toString());\n    message.metadata !== undefined && (obj.metadata = message.metadata);\n    message.decisionPolicy !== undefined && (obj.decisionPolicy = message.decisionPolicy ? Any.toJSON(message.decisionPolicy) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$admin5, _object$metadata3;\n    const message = createBaseMsgCreateGroupPolicy();\n    message.admin = (_object$admin5 = object.admin) !== null && _object$admin5 !== void 0 ? _object$admin5 : \"\";\n    message.groupId = object.groupId !== undefined && object.groupId !== null ? BigInt(object.groupId.toString()) : BigInt(\"0\");\n    message.metadata = (_object$metadata3 = object.metadata) !== null && _object$metadata3 !== void 0 ? _object$metadata3 : \"\";\n    message.decisionPolicy = object.decisionPolicy !== undefined && object.decisionPolicy !== null ? Any.fromPartial(object.decisionPolicy) : undefined;\n    return message;\n  }\n};\nfunction createBaseMsgCreateGroupPolicyResponse() {\n  return {\n    address: \"\"\n  };\n}\nexport const MsgCreateGroupPolicyResponse = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.address !== \"\") {\n      writer.uint32(10).string(message.address);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgCreateGroupPolicyResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.address = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      address: isSet(object.address) ? String(object.address) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.address !== undefined && (obj.address = message.address);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$address;\n    const message = createBaseMsgCreateGroupPolicyResponse();\n    message.address = (_object$address = object.address) !== null && _object$address !== void 0 ? _object$address : \"\";\n    return message;\n  }\n};\nfunction createBaseMsgUpdateGroupPolicyAdmin() {\n  return {\n    admin: \"\",\n    groupPolicyAddress: \"\",\n    newAdmin: \"\"\n  };\n}\nexport const MsgUpdateGroupPolicyAdmin = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.admin !== \"\") {\n      writer.uint32(10).string(message.admin);\n    }\n    if (message.groupPolicyAddress !== \"\") {\n      writer.uint32(18).string(message.groupPolicyAddress);\n    }\n    if (message.newAdmin !== \"\") {\n      writer.uint32(26).string(message.newAdmin);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateGroupPolicyAdmin();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.admin = reader.string();\n          break;\n        case 2:\n          message.groupPolicyAddress = reader.string();\n          break;\n        case 3:\n          message.newAdmin = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      admin: isSet(object.admin) ? String(object.admin) : \"\",\n      groupPolicyAddress: isSet(object.groupPolicyAddress) ? String(object.groupPolicyAddress) : \"\",\n      newAdmin: isSet(object.newAdmin) ? String(object.newAdmin) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.admin !== undefined && (obj.admin = message.admin);\n    message.groupPolicyAddress !== undefined && (obj.groupPolicyAddress = message.groupPolicyAddress);\n    message.newAdmin !== undefined && (obj.newAdmin = message.newAdmin);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$admin6, _object$groupPolicyAd, _object$newAdmin2;\n    const message = createBaseMsgUpdateGroupPolicyAdmin();\n    message.admin = (_object$admin6 = object.admin) !== null && _object$admin6 !== void 0 ? _object$admin6 : \"\";\n    message.groupPolicyAddress = (_object$groupPolicyAd = object.groupPolicyAddress) !== null && _object$groupPolicyAd !== void 0 ? _object$groupPolicyAd : \"\";\n    message.newAdmin = (_object$newAdmin2 = object.newAdmin) !== null && _object$newAdmin2 !== void 0 ? _object$newAdmin2 : \"\";\n    return message;\n  }\n};\nfunction createBaseMsgUpdateGroupPolicyAdminResponse() {\n  return {};\n}\nexport const MsgUpdateGroupPolicyAdminResponse = {\n  encode(_, writer = _m0.Writer.create()) {\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateGroupPolicyAdminResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    return {};\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = createBaseMsgUpdateGroupPolicyAdminResponse();\n    return message;\n  }\n};\nfunction createBaseMsgCreateGroupWithPolicy() {\n  return {\n    admin: \"\",\n    members: [],\n    groupMetadata: \"\",\n    groupPolicyMetadata: \"\",\n    groupPolicyAsAdmin: false,\n    decisionPolicy: undefined\n  };\n}\nexport const MsgCreateGroupWithPolicy = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.admin !== \"\") {\n      writer.uint32(10).string(message.admin);\n    }\n    for (const v of message.members) {\n      MemberRequest.encode(v, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.groupMetadata !== \"\") {\n      writer.uint32(26).string(message.groupMetadata);\n    }\n    if (message.groupPolicyMetadata !== \"\") {\n      writer.uint32(34).string(message.groupPolicyMetadata);\n    }\n    if (message.groupPolicyAsAdmin === true) {\n      writer.uint32(40).bool(message.groupPolicyAsAdmin);\n    }\n    if (message.decisionPolicy !== undefined) {\n      Any.encode(message.decisionPolicy, writer.uint32(50).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgCreateGroupWithPolicy();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.admin = reader.string();\n          break;\n        case 2:\n          message.members.push(MemberRequest.decode(reader, reader.uint32()));\n          break;\n        case 3:\n          message.groupMetadata = reader.string();\n          break;\n        case 4:\n          message.groupPolicyMetadata = reader.string();\n          break;\n        case 5:\n          message.groupPolicyAsAdmin = reader.bool();\n          break;\n        case 6:\n          message.decisionPolicy = Any.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      admin: isSet(object.admin) ? String(object.admin) : \"\",\n      members: Array.isArray(object === null || object === void 0 ? void 0 : object.members) ? object.members.map(e => MemberRequest.fromJSON(e)) : [],\n      groupMetadata: isSet(object.groupMetadata) ? String(object.groupMetadata) : \"\",\n      groupPolicyMetadata: isSet(object.groupPolicyMetadata) ? String(object.groupPolicyMetadata) : \"\",\n      groupPolicyAsAdmin: isSet(object.groupPolicyAsAdmin) ? Boolean(object.groupPolicyAsAdmin) : false,\n      decisionPolicy: isSet(object.decisionPolicy) ? Any.fromJSON(object.decisionPolicy) : undefined\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.admin !== undefined && (obj.admin = message.admin);\n    if (message.members) {\n      obj.members = message.members.map(e => e ? MemberRequest.toJSON(e) : undefined);\n    } else {\n      obj.members = [];\n    }\n    message.groupMetadata !== undefined && (obj.groupMetadata = message.groupMetadata);\n    message.groupPolicyMetadata !== undefined && (obj.groupPolicyMetadata = message.groupPolicyMetadata);\n    message.groupPolicyAsAdmin !== undefined && (obj.groupPolicyAsAdmin = message.groupPolicyAsAdmin);\n    message.decisionPolicy !== undefined && (obj.decisionPolicy = message.decisionPolicy ? Any.toJSON(message.decisionPolicy) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$admin7, _object$members2, _object$groupMetadata, _object$groupPolicyMe, _object$groupPolicyAs;\n    const message = createBaseMsgCreateGroupWithPolicy();\n    message.admin = (_object$admin7 = object.admin) !== null && _object$admin7 !== void 0 ? _object$admin7 : \"\";\n    message.members = ((_object$members2 = object.members) === null || _object$members2 === void 0 ? void 0 : _object$members2.map(e => MemberRequest.fromPartial(e))) || [];\n    message.groupMetadata = (_object$groupMetadata = object.groupMetadata) !== null && _object$groupMetadata !== void 0 ? _object$groupMetadata : \"\";\n    message.groupPolicyMetadata = (_object$groupPolicyMe = object.groupPolicyMetadata) !== null && _object$groupPolicyMe !== void 0 ? _object$groupPolicyMe : \"\";\n    message.groupPolicyAsAdmin = (_object$groupPolicyAs = object.groupPolicyAsAdmin) !== null && _object$groupPolicyAs !== void 0 ? _object$groupPolicyAs : false;\n    message.decisionPolicy = object.decisionPolicy !== undefined && object.decisionPolicy !== null ? Any.fromPartial(object.decisionPolicy) : undefined;\n    return message;\n  }\n};\nfunction createBaseMsgCreateGroupWithPolicyResponse() {\n  return {\n    groupId: BigInt(\"0\"),\n    groupPolicyAddress: \"\"\n  };\n}\nexport const MsgCreateGroupWithPolicyResponse = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.groupId !== BigInt(0)) {\n      writer.uint32(8).uint64(Long.fromString(message.groupId.toString()));\n    }\n    if (message.groupPolicyAddress !== \"\") {\n      writer.uint32(18).string(message.groupPolicyAddress);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgCreateGroupWithPolicyResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.groupId = BigInt(reader.uint64().toString());\n          break;\n        case 2:\n          message.groupPolicyAddress = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      groupId: isSet(object.groupId) ? BigInt(object.groupId.toString()) : BigInt(\"0\"),\n      groupPolicyAddress: isSet(object.groupPolicyAddress) ? String(object.groupPolicyAddress) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.groupId !== undefined && (obj.groupId = (message.groupId || BigInt(\"0\")).toString());\n    message.groupPolicyAddress !== undefined && (obj.groupPolicyAddress = message.groupPolicyAddress);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$groupPolicyAd2;\n    const message = createBaseMsgCreateGroupWithPolicyResponse();\n    message.groupId = object.groupId !== undefined && object.groupId !== null ? BigInt(object.groupId.toString()) : BigInt(\"0\");\n    message.groupPolicyAddress = (_object$groupPolicyAd2 = object.groupPolicyAddress) !== null && _object$groupPolicyAd2 !== void 0 ? _object$groupPolicyAd2 : \"\";\n    return message;\n  }\n};\nfunction createBaseMsgUpdateGroupPolicyDecisionPolicy() {\n  return {\n    admin: \"\",\n    groupPolicyAddress: \"\",\n    decisionPolicy: undefined\n  };\n}\nexport const MsgUpdateGroupPolicyDecisionPolicy = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.admin !== \"\") {\n      writer.uint32(10).string(message.admin);\n    }\n    if (message.groupPolicyAddress !== \"\") {\n      writer.uint32(18).string(message.groupPolicyAddress);\n    }\n    if (message.decisionPolicy !== undefined) {\n      Any.encode(message.decisionPolicy, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateGroupPolicyDecisionPolicy();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.admin = reader.string();\n          break;\n        case 2:\n          message.groupPolicyAddress = reader.string();\n          break;\n        case 3:\n          message.decisionPolicy = Any.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      admin: isSet(object.admin) ? String(object.admin) : \"\",\n      groupPolicyAddress: isSet(object.groupPolicyAddress) ? String(object.groupPolicyAddress) : \"\",\n      decisionPolicy: isSet(object.decisionPolicy) ? Any.fromJSON(object.decisionPolicy) : undefined\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.admin !== undefined && (obj.admin = message.admin);\n    message.groupPolicyAddress !== undefined && (obj.groupPolicyAddress = message.groupPolicyAddress);\n    message.decisionPolicy !== undefined && (obj.decisionPolicy = message.decisionPolicy ? Any.toJSON(message.decisionPolicy) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$admin8, _object$groupPolicyAd3;\n    const message = createBaseMsgUpdateGroupPolicyDecisionPolicy();\n    message.admin = (_object$admin8 = object.admin) !== null && _object$admin8 !== void 0 ? _object$admin8 : \"\";\n    message.groupPolicyAddress = (_object$groupPolicyAd3 = object.groupPolicyAddress) !== null && _object$groupPolicyAd3 !== void 0 ? _object$groupPolicyAd3 : \"\";\n    message.decisionPolicy = object.decisionPolicy !== undefined && object.decisionPolicy !== null ? Any.fromPartial(object.decisionPolicy) : undefined;\n    return message;\n  }\n};\nfunction createBaseMsgUpdateGroupPolicyDecisionPolicyResponse() {\n  return {};\n}\nexport const MsgUpdateGroupPolicyDecisionPolicyResponse = {\n  encode(_, writer = _m0.Writer.create()) {\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateGroupPolicyDecisionPolicyResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    return {};\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = createBaseMsgUpdateGroupPolicyDecisionPolicyResponse();\n    return message;\n  }\n};\nfunction createBaseMsgUpdateGroupPolicyMetadata() {\n  return {\n    admin: \"\",\n    groupPolicyAddress: \"\",\n    metadata: \"\"\n  };\n}\nexport const MsgUpdateGroupPolicyMetadata = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.admin !== \"\") {\n      writer.uint32(10).string(message.admin);\n    }\n    if (message.groupPolicyAddress !== \"\") {\n      writer.uint32(18).string(message.groupPolicyAddress);\n    }\n    if (message.metadata !== \"\") {\n      writer.uint32(26).string(message.metadata);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateGroupPolicyMetadata();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.admin = reader.string();\n          break;\n        case 2:\n          message.groupPolicyAddress = reader.string();\n          break;\n        case 3:\n          message.metadata = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      admin: isSet(object.admin) ? String(object.admin) : \"\",\n      groupPolicyAddress: isSet(object.groupPolicyAddress) ? String(object.groupPolicyAddress) : \"\",\n      metadata: isSet(object.metadata) ? String(object.metadata) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.admin !== undefined && (obj.admin = message.admin);\n    message.groupPolicyAddress !== undefined && (obj.groupPolicyAddress = message.groupPolicyAddress);\n    message.metadata !== undefined && (obj.metadata = message.metadata);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$admin9, _object$groupPolicyAd4, _object$metadata4;\n    const message = createBaseMsgUpdateGroupPolicyMetadata();\n    message.admin = (_object$admin9 = object.admin) !== null && _object$admin9 !== void 0 ? _object$admin9 : \"\";\n    message.groupPolicyAddress = (_object$groupPolicyAd4 = object.groupPolicyAddress) !== null && _object$groupPolicyAd4 !== void 0 ? _object$groupPolicyAd4 : \"\";\n    message.metadata = (_object$metadata4 = object.metadata) !== null && _object$metadata4 !== void 0 ? _object$metadata4 : \"\";\n    return message;\n  }\n};\nfunction createBaseMsgUpdateGroupPolicyMetadataResponse() {\n  return {};\n}\nexport const MsgUpdateGroupPolicyMetadataResponse = {\n  encode(_, writer = _m0.Writer.create()) {\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateGroupPolicyMetadataResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    return {};\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = createBaseMsgUpdateGroupPolicyMetadataResponse();\n    return message;\n  }\n};\nfunction createBaseMsgSubmitProposal() {\n  return {\n    groupPolicyAddress: \"\",\n    proposers: [],\n    metadata: \"\",\n    messages: [],\n    exec: 0,\n    title: \"\",\n    summary: \"\"\n  };\n}\nexport const MsgSubmitProposal = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.groupPolicyAddress !== \"\") {\n      writer.uint32(10).string(message.groupPolicyAddress);\n    }\n    for (const v of message.proposers) {\n      writer.uint32(18).string(v);\n    }\n    if (message.metadata !== \"\") {\n      writer.uint32(26).string(message.metadata);\n    }\n    for (const v of message.messages) {\n      Any.encode(v, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.exec !== 0) {\n      writer.uint32(40).int32(message.exec);\n    }\n    if (message.title !== \"\") {\n      writer.uint32(50).string(message.title);\n    }\n    if (message.summary !== \"\") {\n      writer.uint32(58).string(message.summary);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgSubmitProposal();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.groupPolicyAddress = reader.string();\n          break;\n        case 2:\n          message.proposers.push(reader.string());\n          break;\n        case 3:\n          message.metadata = reader.string();\n          break;\n        case 4:\n          message.messages.push(Any.decode(reader, reader.uint32()));\n          break;\n        case 5:\n          message.exec = reader.int32();\n          break;\n        case 6:\n          message.title = reader.string();\n          break;\n        case 7:\n          message.summary = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      groupPolicyAddress: isSet(object.groupPolicyAddress) ? String(object.groupPolicyAddress) : \"\",\n      proposers: Array.isArray(object === null || object === void 0 ? void 0 : object.proposers) ? object.proposers.map(e => String(e)) : [],\n      metadata: isSet(object.metadata) ? String(object.metadata) : \"\",\n      messages: Array.isArray(object === null || object === void 0 ? void 0 : object.messages) ? object.messages.map(e => Any.fromJSON(e)) : [],\n      exec: isSet(object.exec) ? execFromJSON(object.exec) : 0,\n      title: isSet(object.title) ? String(object.title) : \"\",\n      summary: isSet(object.summary) ? String(object.summary) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.groupPolicyAddress !== undefined && (obj.groupPolicyAddress = message.groupPolicyAddress);\n    if (message.proposers) {\n      obj.proposers = message.proposers.map(e => e);\n    } else {\n      obj.proposers = [];\n    }\n    message.metadata !== undefined && (obj.metadata = message.metadata);\n    if (message.messages) {\n      obj.messages = message.messages.map(e => e ? Any.toJSON(e) : undefined);\n    } else {\n      obj.messages = [];\n    }\n    message.exec !== undefined && (obj.exec = execToJSON(message.exec));\n    message.title !== undefined && (obj.title = message.title);\n    message.summary !== undefined && (obj.summary = message.summary);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$groupPolicyAd5, _object$proposers, _object$metadata5, _object$messages, _object$exec, _object$title, _object$summary;\n    const message = createBaseMsgSubmitProposal();\n    message.groupPolicyAddress = (_object$groupPolicyAd5 = object.groupPolicyAddress) !== null && _object$groupPolicyAd5 !== void 0 ? _object$groupPolicyAd5 : \"\";\n    message.proposers = ((_object$proposers = object.proposers) === null || _object$proposers === void 0 ? void 0 : _object$proposers.map(e => e)) || [];\n    message.metadata = (_object$metadata5 = object.metadata) !== null && _object$metadata5 !== void 0 ? _object$metadata5 : \"\";\n    message.messages = ((_object$messages = object.messages) === null || _object$messages === void 0 ? void 0 : _object$messages.map(e => Any.fromPartial(e))) || [];\n    message.exec = (_object$exec = object.exec) !== null && _object$exec !== void 0 ? _object$exec : 0;\n    message.title = (_object$title = object.title) !== null && _object$title !== void 0 ? _object$title : \"\";\n    message.summary = (_object$summary = object.summary) !== null && _object$summary !== void 0 ? _object$summary : \"\";\n    return message;\n  }\n};\nfunction createBaseMsgSubmitProposalResponse() {\n  return {\n    proposalId: BigInt(\"0\")\n  };\n}\nexport const MsgSubmitProposalResponse = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.proposalId !== BigInt(0)) {\n      writer.uint32(8).uint64(Long.fromString(message.proposalId.toString()));\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgSubmitProposalResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.proposalId = BigInt(reader.uint64().toString());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      proposalId: isSet(object.proposalId) ? BigInt(object.proposalId.toString()) : BigInt(\"0\")\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.proposalId !== undefined && (obj.proposalId = (message.proposalId || BigInt(\"0\")).toString());\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseMsgSubmitProposalResponse();\n    message.proposalId = object.proposalId !== undefined && object.proposalId !== null ? BigInt(object.proposalId.toString()) : BigInt(\"0\");\n    return message;\n  }\n};\nfunction createBaseMsgWithdrawProposal() {\n  return {\n    proposalId: BigInt(\"0\"),\n    address: \"\"\n  };\n}\nexport const MsgWithdrawProposal = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.proposalId !== BigInt(0)) {\n      writer.uint32(8).uint64(Long.fromString(message.proposalId.toString()));\n    }\n    if (message.address !== \"\") {\n      writer.uint32(18).string(message.address);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgWithdrawProposal();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.proposalId = BigInt(reader.uint64().toString());\n          break;\n        case 2:\n          message.address = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      proposalId: isSet(object.proposalId) ? BigInt(object.proposalId.toString()) : BigInt(\"0\"),\n      address: isSet(object.address) ? String(object.address) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.proposalId !== undefined && (obj.proposalId = (message.proposalId || BigInt(\"0\")).toString());\n    message.address !== undefined && (obj.address = message.address);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$address2;\n    const message = createBaseMsgWithdrawProposal();\n    message.proposalId = object.proposalId !== undefined && object.proposalId !== null ? BigInt(object.proposalId.toString()) : BigInt(\"0\");\n    message.address = (_object$address2 = object.address) !== null && _object$address2 !== void 0 ? _object$address2 : \"\";\n    return message;\n  }\n};\nfunction createBaseMsgWithdrawProposalResponse() {\n  return {};\n}\nexport const MsgWithdrawProposalResponse = {\n  encode(_, writer = _m0.Writer.create()) {\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgWithdrawProposalResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    return {};\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = createBaseMsgWithdrawProposalResponse();\n    return message;\n  }\n};\nfunction createBaseMsgVote() {\n  return {\n    proposalId: BigInt(\"0\"),\n    voter: \"\",\n    option: 0,\n    metadata: \"\",\n    exec: 0\n  };\n}\nexport const MsgVote = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.proposalId !== BigInt(0)) {\n      writer.uint32(8).uint64(Long.fromString(message.proposalId.toString()));\n    }\n    if (message.voter !== \"\") {\n      writer.uint32(18).string(message.voter);\n    }\n    if (message.option !== 0) {\n      writer.uint32(24).int32(message.option);\n    }\n    if (message.metadata !== \"\") {\n      writer.uint32(34).string(message.metadata);\n    }\n    if (message.exec !== 0) {\n      writer.uint32(40).int32(message.exec);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgVote();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.proposalId = BigInt(reader.uint64().toString());\n          break;\n        case 2:\n          message.voter = reader.string();\n          break;\n        case 3:\n          message.option = reader.int32();\n          break;\n        case 4:\n          message.metadata = reader.string();\n          break;\n        case 5:\n          message.exec = reader.int32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      proposalId: isSet(object.proposalId) ? BigInt(object.proposalId.toString()) : BigInt(\"0\"),\n      voter: isSet(object.voter) ? String(object.voter) : \"\",\n      option: isSet(object.option) ? voteOptionFromJSON(object.option) : 0,\n      metadata: isSet(object.metadata) ? String(object.metadata) : \"\",\n      exec: isSet(object.exec) ? execFromJSON(object.exec) : 0\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.proposalId !== undefined && (obj.proposalId = (message.proposalId || BigInt(\"0\")).toString());\n    message.voter !== undefined && (obj.voter = message.voter);\n    message.option !== undefined && (obj.option = voteOptionToJSON(message.option));\n    message.metadata !== undefined && (obj.metadata = message.metadata);\n    message.exec !== undefined && (obj.exec = execToJSON(message.exec));\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$voter, _object$option, _object$metadata6, _object$exec2;\n    const message = createBaseMsgVote();\n    message.proposalId = object.proposalId !== undefined && object.proposalId !== null ? BigInt(object.proposalId.toString()) : BigInt(\"0\");\n    message.voter = (_object$voter = object.voter) !== null && _object$voter !== void 0 ? _object$voter : \"\";\n    message.option = (_object$option = object.option) !== null && _object$option !== void 0 ? _object$option : 0;\n    message.metadata = (_object$metadata6 = object.metadata) !== null && _object$metadata6 !== void 0 ? _object$metadata6 : \"\";\n    message.exec = (_object$exec2 = object.exec) !== null && _object$exec2 !== void 0 ? _object$exec2 : 0;\n    return message;\n  }\n};\nfunction createBaseMsgVoteResponse() {\n  return {};\n}\nexport const MsgVoteResponse = {\n  encode(_, writer = _m0.Writer.create()) {\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgVoteResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    return {};\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = createBaseMsgVoteResponse();\n    return message;\n  }\n};\nfunction createBaseMsgExec() {\n  return {\n    proposalId: BigInt(\"0\"),\n    executor: \"\"\n  };\n}\nexport const MsgExec = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.proposalId !== BigInt(0)) {\n      writer.uint32(8).uint64(Long.fromString(message.proposalId.toString()));\n    }\n    if (message.executor !== \"\") {\n      writer.uint32(18).string(message.executor);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgExec();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.proposalId = BigInt(reader.uint64().toString());\n          break;\n        case 2:\n          message.executor = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      proposalId: isSet(object.proposalId) ? BigInt(object.proposalId.toString()) : BigInt(\"0\"),\n      executor: isSet(object.executor) ? String(object.executor) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.proposalId !== undefined && (obj.proposalId = (message.proposalId || BigInt(\"0\")).toString());\n    message.executor !== undefined && (obj.executor = message.executor);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$executor;\n    const message = createBaseMsgExec();\n    message.proposalId = object.proposalId !== undefined && object.proposalId !== null ? BigInt(object.proposalId.toString()) : BigInt(\"0\");\n    message.executor = (_object$executor = object.executor) !== null && _object$executor !== void 0 ? _object$executor : \"\";\n    return message;\n  }\n};\nfunction createBaseMsgExecResponse() {\n  return {\n    result: 0\n  };\n}\nexport const MsgExecResponse = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.result !== 0) {\n      writer.uint32(16).int32(message.result);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgExecResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 2:\n          message.result = reader.int32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      result: isSet(object.result) ? proposalExecutorResultFromJSON(object.result) : 0\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.result !== undefined && (obj.result = proposalExecutorResultToJSON(message.result));\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$result;\n    const message = createBaseMsgExecResponse();\n    message.result = (_object$result = object.result) !== null && _object$result !== void 0 ? _object$result : 0;\n    return message;\n  }\n};\nfunction createBaseMsgLeaveGroup() {\n  return {\n    address: \"\",\n    groupId: BigInt(\"0\")\n  };\n}\nexport const MsgLeaveGroup = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.address !== \"\") {\n      writer.uint32(10).string(message.address);\n    }\n    if (message.groupId !== BigInt(0)) {\n      writer.uint32(16).uint64(Long.fromString(message.groupId.toString()));\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgLeaveGroup();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.address = reader.string();\n          break;\n        case 2:\n          message.groupId = BigInt(reader.uint64().toString());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      address: isSet(object.address) ? String(object.address) : \"\",\n      groupId: isSet(object.groupId) ? BigInt(object.groupId.toString()) : BigInt(\"0\")\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.address !== undefined && (obj.address = message.address);\n    message.groupId !== undefined && (obj.groupId = (message.groupId || BigInt(\"0\")).toString());\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$address3;\n    const message = createBaseMsgLeaveGroup();\n    message.address = (_object$address3 = object.address) !== null && _object$address3 !== void 0 ? _object$address3 : \"\";\n    message.groupId = object.groupId !== undefined && object.groupId !== null ? BigInt(object.groupId.toString()) : BigInt(\"0\");\n    return message;\n  }\n};\nfunction createBaseMsgLeaveGroupResponse() {\n  return {};\n}\nexport const MsgLeaveGroupResponse = {\n  encode(_, writer = _m0.Writer.create()) {\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgLeaveGroupResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    return {};\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = createBaseMsgLeaveGroupResponse();\n    return message;\n  }\n};"],
  "mappings": "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",
  "names": ["_m0", "Exec", "Long", "data"]
}
