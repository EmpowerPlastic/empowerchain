{
  "version": 3,
  "sources": ["../../node_modules/@empower-plastic/empowerjs/module/codegen/tendermint/types/params.js"],
  "sourcesContent": ["import { Duration } from \"../../google/protobuf/duration\";\nimport * as _m0 from \"protobufjs/minimal\";\nimport { isSet, Long } from \"../../helpers\";\n/**\n * ConsensusParams contains consensus critical parameters that determine the\n * validity of blocks.\n */\n\n/**\n * ConsensusParams contains consensus critical parameters that determine the\n * validity of blocks.\n */\n\n/** BlockParams contains limits on the block size. */\n\n/** BlockParams contains limits on the block size. */\n\n/** EvidenceParams determine how we handle evidence of malfeasance. */\n\n/** EvidenceParams determine how we handle evidence of malfeasance. */\n\n/**\n * ValidatorParams restrict the public key types validators can use.\n * NOTE: uses ABCI pubkey naming, not Amino names.\n */\n\n/**\n * ValidatorParams restrict the public key types validators can use.\n * NOTE: uses ABCI pubkey naming, not Amino names.\n */\n\n/** VersionParams contains the ABCI application version. */\n\n/** VersionParams contains the ABCI application version. */\n\n/**\n * HashedParams is a subset of ConsensusParams.\n * \n * It is hashed into the Header.ConsensusHash.\n */\n\n/**\n * HashedParams is a subset of ConsensusParams.\n * \n * It is hashed into the Header.ConsensusHash.\n */\n\nfunction createBaseConsensusParams() {\n  return {\n    block: undefined,\n    evidence: undefined,\n    validator: undefined,\n    version: undefined\n  };\n}\nexport const ConsensusParams = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.block !== undefined) {\n      BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.evidence !== undefined) {\n      EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.validator !== undefined) {\n      ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.version !== undefined) {\n      VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseConsensusParams();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.block = BlockParams.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.evidence = EvidenceParams.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.validator = ValidatorParams.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.version = VersionParams.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      block: isSet(object.block) ? BlockParams.fromJSON(object.block) : undefined,\n      evidence: isSet(object.evidence) ? EvidenceParams.fromJSON(object.evidence) : undefined,\n      validator: isSet(object.validator) ? ValidatorParams.fromJSON(object.validator) : undefined,\n      version: isSet(object.version) ? VersionParams.fromJSON(object.version) : undefined\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.block !== undefined && (obj.block = message.block ? BlockParams.toJSON(message.block) : undefined);\n    message.evidence !== undefined && (obj.evidence = message.evidence ? EvidenceParams.toJSON(message.evidence) : undefined);\n    message.validator !== undefined && (obj.validator = message.validator ? ValidatorParams.toJSON(message.validator) : undefined);\n    message.version !== undefined && (obj.version = message.version ? VersionParams.toJSON(message.version) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseConsensusParams();\n    message.block = object.block !== undefined && object.block !== null ? BlockParams.fromPartial(object.block) : undefined;\n    message.evidence = object.evidence !== undefined && object.evidence !== null ? EvidenceParams.fromPartial(object.evidence) : undefined;\n    message.validator = object.validator !== undefined && object.validator !== null ? ValidatorParams.fromPartial(object.validator) : undefined;\n    message.version = object.version !== undefined && object.version !== null ? VersionParams.fromPartial(object.version) : undefined;\n    return message;\n  }\n};\nfunction createBaseBlockParams() {\n  return {\n    maxBytes: BigInt(\"0\"),\n    maxGas: BigInt(\"0\")\n  };\n}\nexport const BlockParams = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.maxBytes !== BigInt(0)) {\n      writer.uint32(8).int64(Long.fromString(message.maxBytes.toString()));\n    }\n    if (message.maxGas !== BigInt(0)) {\n      writer.uint32(16).int64(Long.fromString(message.maxGas.toString()));\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseBlockParams();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.maxBytes = BigInt(reader.int64().toString());\n          break;\n        case 2:\n          message.maxGas = BigInt(reader.int64().toString());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      maxBytes: isSet(object.maxBytes) ? BigInt(object.maxBytes.toString()) : BigInt(\"0\"),\n      maxGas: isSet(object.maxGas) ? BigInt(object.maxGas.toString()) : BigInt(\"0\")\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.maxBytes !== undefined && (obj.maxBytes = (message.maxBytes || BigInt(\"0\")).toString());\n    message.maxGas !== undefined && (obj.maxGas = (message.maxGas || BigInt(\"0\")).toString());\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseBlockParams();\n    message.maxBytes = object.maxBytes !== undefined && object.maxBytes !== null ? BigInt(object.maxBytes.toString()) : BigInt(\"0\");\n    message.maxGas = object.maxGas !== undefined && object.maxGas !== null ? BigInt(object.maxGas.toString()) : BigInt(\"0\");\n    return message;\n  }\n};\nfunction createBaseEvidenceParams() {\n  return {\n    maxAgeNumBlocks: BigInt(\"0\"),\n    maxAgeDuration: undefined,\n    maxBytes: BigInt(\"0\")\n  };\n}\nexport const EvidenceParams = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.maxAgeNumBlocks !== BigInt(0)) {\n      writer.uint32(8).int64(Long.fromString(message.maxAgeNumBlocks.toString()));\n    }\n    if (message.maxAgeDuration !== undefined) {\n      Duration.encode(message.maxAgeDuration, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.maxBytes !== BigInt(0)) {\n      writer.uint32(24).int64(Long.fromString(message.maxBytes.toString()));\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseEvidenceParams();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.maxAgeNumBlocks = BigInt(reader.int64().toString());\n          break;\n        case 2:\n          message.maxAgeDuration = Duration.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.maxBytes = BigInt(reader.int64().toString());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      maxAgeNumBlocks: isSet(object.maxAgeNumBlocks) ? BigInt(object.maxAgeNumBlocks.toString()) : BigInt(\"0\"),\n      maxAgeDuration: isSet(object.maxAgeDuration) ? Duration.fromJSON(object.maxAgeDuration) : undefined,\n      maxBytes: isSet(object.maxBytes) ? BigInt(object.maxBytes.toString()) : BigInt(\"0\")\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.maxAgeNumBlocks !== undefined && (obj.maxAgeNumBlocks = (message.maxAgeNumBlocks || BigInt(\"0\")).toString());\n    message.maxAgeDuration !== undefined && (obj.maxAgeDuration = message.maxAgeDuration ? Duration.toJSON(message.maxAgeDuration) : undefined);\n    message.maxBytes !== undefined && (obj.maxBytes = (message.maxBytes || BigInt(\"0\")).toString());\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseEvidenceParams();\n    message.maxAgeNumBlocks = object.maxAgeNumBlocks !== undefined && object.maxAgeNumBlocks !== null ? BigInt(object.maxAgeNumBlocks.toString()) : BigInt(\"0\");\n    message.maxAgeDuration = object.maxAgeDuration !== undefined && object.maxAgeDuration !== null ? Duration.fromPartial(object.maxAgeDuration) : undefined;\n    message.maxBytes = object.maxBytes !== undefined && object.maxBytes !== null ? BigInt(object.maxBytes.toString()) : BigInt(\"0\");\n    return message;\n  }\n};\nfunction createBaseValidatorParams() {\n  return {\n    pubKeyTypes: []\n  };\n}\nexport const ValidatorParams = {\n  encode(message, writer = _m0.Writer.create()) {\n    for (const v of message.pubKeyTypes) {\n      writer.uint32(10).string(v);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseValidatorParams();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.pubKeyTypes.push(reader.string());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      pubKeyTypes: Array.isArray(object === null || object === void 0 ? void 0 : object.pubKeyTypes) ? object.pubKeyTypes.map(e => String(e)) : []\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.pubKeyTypes) {\n      obj.pubKeyTypes = message.pubKeyTypes.map(e => e);\n    } else {\n      obj.pubKeyTypes = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$pubKeyTypes;\n    const message = createBaseValidatorParams();\n    message.pubKeyTypes = ((_object$pubKeyTypes = object.pubKeyTypes) === null || _object$pubKeyTypes === void 0 ? void 0 : _object$pubKeyTypes.map(e => e)) || [];\n    return message;\n  }\n};\nfunction createBaseVersionParams() {\n  return {\n    app: BigInt(\"0\")\n  };\n}\nexport const VersionParams = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.app !== BigInt(0)) {\n      writer.uint32(8).uint64(Long.fromString(message.app.toString()));\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseVersionParams();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.app = BigInt(reader.uint64().toString());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      app: isSet(object.app) ? BigInt(object.app.toString()) : BigInt(\"0\")\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.app !== undefined && (obj.app = (message.app || BigInt(\"0\")).toString());\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseVersionParams();\n    message.app = object.app !== undefined && object.app !== null ? BigInt(object.app.toString()) : BigInt(\"0\");\n    return message;\n  }\n};\nfunction createBaseHashedParams() {\n  return {\n    blockMaxBytes: BigInt(\"0\"),\n    blockMaxGas: BigInt(\"0\")\n  };\n}\nexport const HashedParams = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.blockMaxBytes !== BigInt(0)) {\n      writer.uint32(8).int64(Long.fromString(message.blockMaxBytes.toString()));\n    }\n    if (message.blockMaxGas !== BigInt(0)) {\n      writer.uint32(16).int64(Long.fromString(message.blockMaxGas.toString()));\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseHashedParams();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.blockMaxBytes = BigInt(reader.int64().toString());\n          break;\n        case 2:\n          message.blockMaxGas = BigInt(reader.int64().toString());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      blockMaxBytes: isSet(object.blockMaxBytes) ? BigInt(object.blockMaxBytes.toString()) : BigInt(\"0\"),\n      blockMaxGas: isSet(object.blockMaxGas) ? BigInt(object.blockMaxGas.toString()) : BigInt(\"0\")\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.blockMaxBytes !== undefined && (obj.blockMaxBytes = (message.blockMaxBytes || BigInt(\"0\")).toString());\n    message.blockMaxGas !== undefined && (obj.blockMaxGas = (message.blockMaxGas || BigInt(\"0\")).toString());\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseHashedParams();\n    message.blockMaxBytes = object.blockMaxBytes !== undefined && object.blockMaxBytes !== null ? BigInt(object.blockMaxBytes.toString()) : BigInt(\"0\");\n    message.blockMaxGas = object.blockMaxGas !== undefined && object.blockMaxGas !== null ? BigInt(object.blockMaxGas.toString()) : BigInt(\"0\");\n    return message;\n  }\n};"],
  "mappings": "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",
  "names": ["Long"]
}
