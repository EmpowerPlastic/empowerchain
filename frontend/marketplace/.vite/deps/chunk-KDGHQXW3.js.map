{
  "version": 3,
  "sources": ["../../node_modules/@empower-plastic/empowerjs/module/codegen/tendermint/abci/types.js"],
  "sourcesContent": ["import { Timestamp } from \"../../google/protobuf/timestamp\";\nimport { ConsensusParams } from \"../types/params\";\nimport { Header } from \"../types/types\";\nimport { ProofOps } from \"../crypto/proof\";\nimport { PublicKey } from \"../crypto/keys\";\nimport * as _m0 from \"protobufjs/minimal\";\nimport { isSet, Long, toTimestamp, fromTimestamp, fromJsonTimestamp, bytesFromBase64, base64FromBytes } from \"../../helpers\";\nexport let CheckTxType = /*#__PURE__*/function (CheckTxType) {\n  CheckTxType[CheckTxType[\"NEW\"] = 0] = \"NEW\";\n  CheckTxType[CheckTxType[\"RECHECK\"] = 1] = \"RECHECK\";\n  CheckTxType[CheckTxType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n  return CheckTxType;\n}({});\nexport const CheckTxTypeSDKType = CheckTxType;\nexport function checkTxTypeFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"NEW\":\n      return CheckTxType.NEW;\n    case 1:\n    case \"RECHECK\":\n      return CheckTxType.RECHECK;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return CheckTxType.UNRECOGNIZED;\n  }\n}\nexport function checkTxTypeToJSON(object) {\n  switch (object) {\n    case CheckTxType.NEW:\n      return \"NEW\";\n    case CheckTxType.RECHECK:\n      return \"RECHECK\";\n    case CheckTxType.UNRECOGNIZED:\n    default:\n      return \"UNRECOGNIZED\";\n  }\n}\nexport let ResponseOfferSnapshot_Result = /*#__PURE__*/function (ResponseOfferSnapshot_Result) {\n  ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n  ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ABORT\"] = 2] = \"ABORT\";\n  ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT\"] = 3] = \"REJECT\";\n  ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_FORMAT\"] = 4] = \"REJECT_FORMAT\";\n  ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_SENDER\"] = 5] = \"REJECT_SENDER\";\n  ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n  return ResponseOfferSnapshot_Result;\n}({});\nexport const ResponseOfferSnapshot_ResultSDKType = ResponseOfferSnapshot_Result;\nexport function responseOfferSnapshot_ResultFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"UNKNOWN\":\n      return ResponseOfferSnapshot_Result.UNKNOWN;\n    case 1:\n    case \"ACCEPT\":\n      return ResponseOfferSnapshot_Result.ACCEPT;\n    case 2:\n    case \"ABORT\":\n      return ResponseOfferSnapshot_Result.ABORT;\n    case 3:\n    case \"REJECT\":\n      return ResponseOfferSnapshot_Result.REJECT;\n    case 4:\n    case \"REJECT_FORMAT\":\n      return ResponseOfferSnapshot_Result.REJECT_FORMAT;\n    case 5:\n    case \"REJECT_SENDER\":\n      return ResponseOfferSnapshot_Result.REJECT_SENDER;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return ResponseOfferSnapshot_Result.UNRECOGNIZED;\n  }\n}\nexport function responseOfferSnapshot_ResultToJSON(object) {\n  switch (object) {\n    case ResponseOfferSnapshot_Result.UNKNOWN:\n      return \"UNKNOWN\";\n    case ResponseOfferSnapshot_Result.ACCEPT:\n      return \"ACCEPT\";\n    case ResponseOfferSnapshot_Result.ABORT:\n      return \"ABORT\";\n    case ResponseOfferSnapshot_Result.REJECT:\n      return \"REJECT\";\n    case ResponseOfferSnapshot_Result.REJECT_FORMAT:\n      return \"REJECT_FORMAT\";\n    case ResponseOfferSnapshot_Result.REJECT_SENDER:\n      return \"REJECT_SENDER\";\n    case ResponseOfferSnapshot_Result.UNRECOGNIZED:\n    default:\n      return \"UNRECOGNIZED\";\n  }\n}\nexport let ResponseApplySnapshotChunk_Result = /*#__PURE__*/function (ResponseApplySnapshotChunk_Result) {\n  ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n  ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ABORT\"] = 2] = \"ABORT\";\n  ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY\"] = 3] = \"RETRY\";\n  ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY_SNAPSHOT\"] = 4] = \"RETRY_SNAPSHOT\";\n  ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"REJECT_SNAPSHOT\"] = 5] = \"REJECT_SNAPSHOT\";\n  ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n  return ResponseApplySnapshotChunk_Result;\n}({});\nexport const ResponseApplySnapshotChunk_ResultSDKType = ResponseApplySnapshotChunk_Result;\nexport function responseApplySnapshotChunk_ResultFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"UNKNOWN\":\n      return ResponseApplySnapshotChunk_Result.UNKNOWN;\n    case 1:\n    case \"ACCEPT\":\n      return ResponseApplySnapshotChunk_Result.ACCEPT;\n    case 2:\n    case \"ABORT\":\n      return ResponseApplySnapshotChunk_Result.ABORT;\n    case 3:\n    case \"RETRY\":\n      return ResponseApplySnapshotChunk_Result.RETRY;\n    case 4:\n    case \"RETRY_SNAPSHOT\":\n      return ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT;\n    case 5:\n    case \"REJECT_SNAPSHOT\":\n      return ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return ResponseApplySnapshotChunk_Result.UNRECOGNIZED;\n  }\n}\nexport function responseApplySnapshotChunk_ResultToJSON(object) {\n  switch (object) {\n    case ResponseApplySnapshotChunk_Result.UNKNOWN:\n      return \"UNKNOWN\";\n    case ResponseApplySnapshotChunk_Result.ACCEPT:\n      return \"ACCEPT\";\n    case ResponseApplySnapshotChunk_Result.ABORT:\n      return \"ABORT\";\n    case ResponseApplySnapshotChunk_Result.RETRY:\n      return \"RETRY\";\n    case ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT:\n      return \"RETRY_SNAPSHOT\";\n    case ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT:\n      return \"REJECT_SNAPSHOT\";\n    case ResponseApplySnapshotChunk_Result.UNRECOGNIZED:\n    default:\n      return \"UNRECOGNIZED\";\n  }\n}\nexport let ResponseProcessProposal_ProposalStatus = /*#__PURE__*/function (ResponseProcessProposal_ProposalStatus) {\n  ResponseProcessProposal_ProposalStatus[ResponseProcessProposal_ProposalStatus[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  ResponseProcessProposal_ProposalStatus[ResponseProcessProposal_ProposalStatus[\"ACCEPT\"] = 1] = \"ACCEPT\";\n  ResponseProcessProposal_ProposalStatus[ResponseProcessProposal_ProposalStatus[\"REJECT\"] = 2] = \"REJECT\";\n  ResponseProcessProposal_ProposalStatus[ResponseProcessProposal_ProposalStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n  return ResponseProcessProposal_ProposalStatus;\n}({});\nexport const ResponseProcessProposal_ProposalStatusSDKType = ResponseProcessProposal_ProposalStatus;\nexport function responseProcessProposal_ProposalStatusFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"UNKNOWN\":\n      return ResponseProcessProposal_ProposalStatus.UNKNOWN;\n    case 1:\n    case \"ACCEPT\":\n      return ResponseProcessProposal_ProposalStatus.ACCEPT;\n    case 2:\n    case \"REJECT\":\n      return ResponseProcessProposal_ProposalStatus.REJECT;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return ResponseProcessProposal_ProposalStatus.UNRECOGNIZED;\n  }\n}\nexport function responseProcessProposal_ProposalStatusToJSON(object) {\n  switch (object) {\n    case ResponseProcessProposal_ProposalStatus.UNKNOWN:\n      return \"UNKNOWN\";\n    case ResponseProcessProposal_ProposalStatus.ACCEPT:\n      return \"ACCEPT\";\n    case ResponseProcessProposal_ProposalStatus.REJECT:\n      return \"REJECT\";\n    case ResponseProcessProposal_ProposalStatus.UNRECOGNIZED:\n    default:\n      return \"UNRECOGNIZED\";\n  }\n}\nexport let MisbehaviorType = /*#__PURE__*/function (MisbehaviorType) {\n  MisbehaviorType[MisbehaviorType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  MisbehaviorType[MisbehaviorType[\"DUPLICATE_VOTE\"] = 1] = \"DUPLICATE_VOTE\";\n  MisbehaviorType[MisbehaviorType[\"LIGHT_CLIENT_ATTACK\"] = 2] = \"LIGHT_CLIENT_ATTACK\";\n  MisbehaviorType[MisbehaviorType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n  return MisbehaviorType;\n}({});\nexport const MisbehaviorTypeSDKType = MisbehaviorType;\nexport function misbehaviorTypeFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"UNKNOWN\":\n      return MisbehaviorType.UNKNOWN;\n    case 1:\n    case \"DUPLICATE_VOTE\":\n      return MisbehaviorType.DUPLICATE_VOTE;\n    case 2:\n    case \"LIGHT_CLIENT_ATTACK\":\n      return MisbehaviorType.LIGHT_CLIENT_ATTACK;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return MisbehaviorType.UNRECOGNIZED;\n  }\n}\nexport function misbehaviorTypeToJSON(object) {\n  switch (object) {\n    case MisbehaviorType.UNKNOWN:\n      return \"UNKNOWN\";\n    case MisbehaviorType.DUPLICATE_VOTE:\n      return \"DUPLICATE_VOTE\";\n    case MisbehaviorType.LIGHT_CLIENT_ATTACK:\n      return \"LIGHT_CLIENT_ATTACK\";\n    case MisbehaviorType.UNRECOGNIZED:\n    default:\n      return \"UNRECOGNIZED\";\n  }\n}\n\n/** lists available snapshots */\n\n/** lists available snapshots */\n\n/** offers a snapshot to the application */\n\n/** offers a snapshot to the application */\n\n/** loads a snapshot chunk */\n\n/** loads a snapshot chunk */\n\n/** Applies a snapshot chunk */\n\n/** Applies a snapshot chunk */\n\n/** nondeterministic */\n\n/** nondeterministic */\n\n/**\n * Event allows application developers to attach additional information to\n * ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.\n * Later, transactions may be queried using these events.\n */\n\n/**\n * Event allows application developers to attach additional information to\n * ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.\n * Later, transactions may be queried using these events.\n */\n\n/** EventAttribute is a single key-value pair, associated with an event. */\n\n/** EventAttribute is a single key-value pair, associated with an event. */\n\n/**\n * TxResult contains results of executing the transaction.\n * \n * One usage is indexing transaction results.\n */\n\n/**\n * TxResult contains results of executing the transaction.\n * \n * One usage is indexing transaction results.\n */\n\n/** Validator */\n\n/** Validator */\n\n/** ValidatorUpdate */\n\n/** ValidatorUpdate */\n\n/** VoteInfo */\n\n/** VoteInfo */\n\nfunction createBaseRequest() {\n  return {\n    echo: undefined,\n    flush: undefined,\n    info: undefined,\n    initChain: undefined,\n    query: undefined,\n    beginBlock: undefined,\n    checkTx: undefined,\n    deliverTx: undefined,\n    endBlock: undefined,\n    commit: undefined,\n    listSnapshots: undefined,\n    offerSnapshot: undefined,\n    loadSnapshotChunk: undefined,\n    applySnapshotChunk: undefined,\n    prepareProposal: undefined,\n    processProposal: undefined\n  };\n}\nexport const Request = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.echo !== undefined) {\n      RequestEcho.encode(message.echo, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.flush !== undefined) {\n      RequestFlush.encode(message.flush, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.info !== undefined) {\n      RequestInfo.encode(message.info, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.initChain !== undefined) {\n      RequestInitChain.encode(message.initChain, writer.uint32(42).fork()).ldelim();\n    }\n    if (message.query !== undefined) {\n      RequestQuery.encode(message.query, writer.uint32(50).fork()).ldelim();\n    }\n    if (message.beginBlock !== undefined) {\n      RequestBeginBlock.encode(message.beginBlock, writer.uint32(58).fork()).ldelim();\n    }\n    if (message.checkTx !== undefined) {\n      RequestCheckTx.encode(message.checkTx, writer.uint32(66).fork()).ldelim();\n    }\n    if (message.deliverTx !== undefined) {\n      RequestDeliverTx.encode(message.deliverTx, writer.uint32(74).fork()).ldelim();\n    }\n    if (message.endBlock !== undefined) {\n      RequestEndBlock.encode(message.endBlock, writer.uint32(82).fork()).ldelim();\n    }\n    if (message.commit !== undefined) {\n      RequestCommit.encode(message.commit, writer.uint32(90).fork()).ldelim();\n    }\n    if (message.listSnapshots !== undefined) {\n      RequestListSnapshots.encode(message.listSnapshots, writer.uint32(98).fork()).ldelim();\n    }\n    if (message.offerSnapshot !== undefined) {\n      RequestOfferSnapshot.encode(message.offerSnapshot, writer.uint32(106).fork()).ldelim();\n    }\n    if (message.loadSnapshotChunk !== undefined) {\n      RequestLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(114).fork()).ldelim();\n    }\n    if (message.applySnapshotChunk !== undefined) {\n      RequestApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(122).fork()).ldelim();\n    }\n    if (message.prepareProposal !== undefined) {\n      RequestPrepareProposal.encode(message.prepareProposal, writer.uint32(130).fork()).ldelim();\n    }\n    if (message.processProposal !== undefined) {\n      RequestProcessProposal.encode(message.processProposal, writer.uint32(138).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.echo = RequestEcho.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.flush = RequestFlush.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.info = RequestInfo.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.initChain = RequestInitChain.decode(reader, reader.uint32());\n          break;\n        case 6:\n          message.query = RequestQuery.decode(reader, reader.uint32());\n          break;\n        case 7:\n          message.beginBlock = RequestBeginBlock.decode(reader, reader.uint32());\n          break;\n        case 8:\n          message.checkTx = RequestCheckTx.decode(reader, reader.uint32());\n          break;\n        case 9:\n          message.deliverTx = RequestDeliverTx.decode(reader, reader.uint32());\n          break;\n        case 10:\n          message.endBlock = RequestEndBlock.decode(reader, reader.uint32());\n          break;\n        case 11:\n          message.commit = RequestCommit.decode(reader, reader.uint32());\n          break;\n        case 12:\n          message.listSnapshots = RequestListSnapshots.decode(reader, reader.uint32());\n          break;\n        case 13:\n          message.offerSnapshot = RequestOfferSnapshot.decode(reader, reader.uint32());\n          break;\n        case 14:\n          message.loadSnapshotChunk = RequestLoadSnapshotChunk.decode(reader, reader.uint32());\n          break;\n        case 15:\n          message.applySnapshotChunk = RequestApplySnapshotChunk.decode(reader, reader.uint32());\n          break;\n        case 16:\n          message.prepareProposal = RequestPrepareProposal.decode(reader, reader.uint32());\n          break;\n        case 17:\n          message.processProposal = RequestProcessProposal.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      echo: isSet(object.echo) ? RequestEcho.fromJSON(object.echo) : undefined,\n      flush: isSet(object.flush) ? RequestFlush.fromJSON(object.flush) : undefined,\n      info: isSet(object.info) ? RequestInfo.fromJSON(object.info) : undefined,\n      initChain: isSet(object.initChain) ? RequestInitChain.fromJSON(object.initChain) : undefined,\n      query: isSet(object.query) ? RequestQuery.fromJSON(object.query) : undefined,\n      beginBlock: isSet(object.beginBlock) ? RequestBeginBlock.fromJSON(object.beginBlock) : undefined,\n      checkTx: isSet(object.checkTx) ? RequestCheckTx.fromJSON(object.checkTx) : undefined,\n      deliverTx: isSet(object.deliverTx) ? RequestDeliverTx.fromJSON(object.deliverTx) : undefined,\n      endBlock: isSet(object.endBlock) ? RequestEndBlock.fromJSON(object.endBlock) : undefined,\n      commit: isSet(object.commit) ? RequestCommit.fromJSON(object.commit) : undefined,\n      listSnapshots: isSet(object.listSnapshots) ? RequestListSnapshots.fromJSON(object.listSnapshots) : undefined,\n      offerSnapshot: isSet(object.offerSnapshot) ? RequestOfferSnapshot.fromJSON(object.offerSnapshot) : undefined,\n      loadSnapshotChunk: isSet(object.loadSnapshotChunk) ? RequestLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk) : undefined,\n      applySnapshotChunk: isSet(object.applySnapshotChunk) ? RequestApplySnapshotChunk.fromJSON(object.applySnapshotChunk) : undefined,\n      prepareProposal: isSet(object.prepareProposal) ? RequestPrepareProposal.fromJSON(object.prepareProposal) : undefined,\n      processProposal: isSet(object.processProposal) ? RequestProcessProposal.fromJSON(object.processProposal) : undefined\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.echo !== undefined && (obj.echo = message.echo ? RequestEcho.toJSON(message.echo) : undefined);\n    message.flush !== undefined && (obj.flush = message.flush ? RequestFlush.toJSON(message.flush) : undefined);\n    message.info !== undefined && (obj.info = message.info ? RequestInfo.toJSON(message.info) : undefined);\n    message.initChain !== undefined && (obj.initChain = message.initChain ? RequestInitChain.toJSON(message.initChain) : undefined);\n    message.query !== undefined && (obj.query = message.query ? RequestQuery.toJSON(message.query) : undefined);\n    message.beginBlock !== undefined && (obj.beginBlock = message.beginBlock ? RequestBeginBlock.toJSON(message.beginBlock) : undefined);\n    message.checkTx !== undefined && (obj.checkTx = message.checkTx ? RequestCheckTx.toJSON(message.checkTx) : undefined);\n    message.deliverTx !== undefined && (obj.deliverTx = message.deliverTx ? RequestDeliverTx.toJSON(message.deliverTx) : undefined);\n    message.endBlock !== undefined && (obj.endBlock = message.endBlock ? RequestEndBlock.toJSON(message.endBlock) : undefined);\n    message.commit !== undefined && (obj.commit = message.commit ? RequestCommit.toJSON(message.commit) : undefined);\n    message.listSnapshots !== undefined && (obj.listSnapshots = message.listSnapshots ? RequestListSnapshots.toJSON(message.listSnapshots) : undefined);\n    message.offerSnapshot !== undefined && (obj.offerSnapshot = message.offerSnapshot ? RequestOfferSnapshot.toJSON(message.offerSnapshot) : undefined);\n    message.loadSnapshotChunk !== undefined && (obj.loadSnapshotChunk = message.loadSnapshotChunk ? RequestLoadSnapshotChunk.toJSON(message.loadSnapshotChunk) : undefined);\n    message.applySnapshotChunk !== undefined && (obj.applySnapshotChunk = message.applySnapshotChunk ? RequestApplySnapshotChunk.toJSON(message.applySnapshotChunk) : undefined);\n    message.prepareProposal !== undefined && (obj.prepareProposal = message.prepareProposal ? RequestPrepareProposal.toJSON(message.prepareProposal) : undefined);\n    message.processProposal !== undefined && (obj.processProposal = message.processProposal ? RequestProcessProposal.toJSON(message.processProposal) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseRequest();\n    message.echo = object.echo !== undefined && object.echo !== null ? RequestEcho.fromPartial(object.echo) : undefined;\n    message.flush = object.flush !== undefined && object.flush !== null ? RequestFlush.fromPartial(object.flush) : undefined;\n    message.info = object.info !== undefined && object.info !== null ? RequestInfo.fromPartial(object.info) : undefined;\n    message.initChain = object.initChain !== undefined && object.initChain !== null ? RequestInitChain.fromPartial(object.initChain) : undefined;\n    message.query = object.query !== undefined && object.query !== null ? RequestQuery.fromPartial(object.query) : undefined;\n    message.beginBlock = object.beginBlock !== undefined && object.beginBlock !== null ? RequestBeginBlock.fromPartial(object.beginBlock) : undefined;\n    message.checkTx = object.checkTx !== undefined && object.checkTx !== null ? RequestCheckTx.fromPartial(object.checkTx) : undefined;\n    message.deliverTx = object.deliverTx !== undefined && object.deliverTx !== null ? RequestDeliverTx.fromPartial(object.deliverTx) : undefined;\n    message.endBlock = object.endBlock !== undefined && object.endBlock !== null ? RequestEndBlock.fromPartial(object.endBlock) : undefined;\n    message.commit = object.commit !== undefined && object.commit !== null ? RequestCommit.fromPartial(object.commit) : undefined;\n    message.listSnapshots = object.listSnapshots !== undefined && object.listSnapshots !== null ? RequestListSnapshots.fromPartial(object.listSnapshots) : undefined;\n    message.offerSnapshot = object.offerSnapshot !== undefined && object.offerSnapshot !== null ? RequestOfferSnapshot.fromPartial(object.offerSnapshot) : undefined;\n    message.loadSnapshotChunk = object.loadSnapshotChunk !== undefined && object.loadSnapshotChunk !== null ? RequestLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk) : undefined;\n    message.applySnapshotChunk = object.applySnapshotChunk !== undefined && object.applySnapshotChunk !== null ? RequestApplySnapshotChunk.fromPartial(object.applySnapshotChunk) : undefined;\n    message.prepareProposal = object.prepareProposal !== undefined && object.prepareProposal !== null ? RequestPrepareProposal.fromPartial(object.prepareProposal) : undefined;\n    message.processProposal = object.processProposal !== undefined && object.processProposal !== null ? RequestProcessProposal.fromPartial(object.processProposal) : undefined;\n    return message;\n  }\n};\nfunction createBaseRequestEcho() {\n  return {\n    message: \"\"\n  };\n}\nexport const RequestEcho = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.message !== \"\") {\n      writer.uint32(10).string(message.message);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseRequestEcho();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.message = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      message: isSet(object.message) ? String(object.message) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.message !== undefined && (obj.message = message.message);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$message;\n    const message = createBaseRequestEcho();\n    message.message = (_object$message = object.message) !== null && _object$message !== void 0 ? _object$message : \"\";\n    return message;\n  }\n};\nfunction createBaseRequestFlush() {\n  return {};\n}\nexport const RequestFlush = {\n  encode(_, writer = _m0.Writer.create()) {\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseRequestFlush();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    return {};\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = createBaseRequestFlush();\n    return message;\n  }\n};\nfunction createBaseRequestInfo() {\n  return {\n    version: \"\",\n    blockVersion: BigInt(\"0\"),\n    p2pVersion: BigInt(\"0\"),\n    abciVersion: \"\"\n  };\n}\nexport const RequestInfo = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.version !== \"\") {\n      writer.uint32(10).string(message.version);\n    }\n    if (message.blockVersion !== BigInt(0)) {\n      writer.uint32(16).uint64(Long.fromString(message.blockVersion.toString()));\n    }\n    if (message.p2pVersion !== BigInt(0)) {\n      writer.uint32(24).uint64(Long.fromString(message.p2pVersion.toString()));\n    }\n    if (message.abciVersion !== \"\") {\n      writer.uint32(34).string(message.abciVersion);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseRequestInfo();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.version = reader.string();\n          break;\n        case 2:\n          message.blockVersion = BigInt(reader.uint64().toString());\n          break;\n        case 3:\n          message.p2pVersion = BigInt(reader.uint64().toString());\n          break;\n        case 4:\n          message.abciVersion = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      version: isSet(object.version) ? String(object.version) : \"\",\n      blockVersion: isSet(object.blockVersion) ? BigInt(object.blockVersion.toString()) : BigInt(\"0\"),\n      p2pVersion: isSet(object.p2pVersion) ? BigInt(object.p2pVersion.toString()) : BigInt(\"0\"),\n      abciVersion: isSet(object.abciVersion) ? String(object.abciVersion) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.version !== undefined && (obj.version = message.version);\n    message.blockVersion !== undefined && (obj.blockVersion = (message.blockVersion || BigInt(\"0\")).toString());\n    message.p2pVersion !== undefined && (obj.p2pVersion = (message.p2pVersion || BigInt(\"0\")).toString());\n    message.abciVersion !== undefined && (obj.abciVersion = message.abciVersion);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$version, _object$abciVersion;\n    const message = createBaseRequestInfo();\n    message.version = (_object$version = object.version) !== null && _object$version !== void 0 ? _object$version : \"\";\n    message.blockVersion = object.blockVersion !== undefined && object.blockVersion !== null ? BigInt(object.blockVersion.toString()) : BigInt(\"0\");\n    message.p2pVersion = object.p2pVersion !== undefined && object.p2pVersion !== null ? BigInt(object.p2pVersion.toString()) : BigInt(\"0\");\n    message.abciVersion = (_object$abciVersion = object.abciVersion) !== null && _object$abciVersion !== void 0 ? _object$abciVersion : \"\";\n    return message;\n  }\n};\nfunction createBaseRequestInitChain() {\n  return {\n    time: undefined,\n    chainId: \"\",\n    consensusParams: undefined,\n    validators: [],\n    appStateBytes: new Uint8Array(),\n    initialHeight: BigInt(\"0\")\n  };\n}\nexport const RequestInitChain = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.time !== undefined) {\n      Timestamp.encode(toTimestamp(message.time), writer.uint32(10).fork()).ldelim();\n    }\n    if (message.chainId !== \"\") {\n      writer.uint32(18).string(message.chainId);\n    }\n    if (message.consensusParams !== undefined) {\n      ConsensusParams.encode(message.consensusParams, writer.uint32(26).fork()).ldelim();\n    }\n    for (const v of message.validators) {\n      ValidatorUpdate.encode(v, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.appStateBytes.length !== 0) {\n      writer.uint32(42).bytes(message.appStateBytes);\n    }\n    if (message.initialHeight !== BigInt(0)) {\n      writer.uint32(48).int64(Long.fromString(message.initialHeight.toString()));\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseRequestInitChain();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.chainId = reader.string();\n          break;\n        case 3:\n          message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n          break;\n        case 5:\n          message.appStateBytes = reader.bytes();\n          break;\n        case 6:\n          message.initialHeight = BigInt(reader.int64().toString());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      time: isSet(object.time) ? fromJsonTimestamp(object.time) : undefined,\n      chainId: isSet(object.chainId) ? String(object.chainId) : \"\",\n      consensusParams: isSet(object.consensusParams) ? ConsensusParams.fromJSON(object.consensusParams) : undefined,\n      validators: Array.isArray(object === null || object === void 0 ? void 0 : object.validators) ? object.validators.map(e => ValidatorUpdate.fromJSON(e)) : [],\n      appStateBytes: isSet(object.appStateBytes) ? bytesFromBase64(object.appStateBytes) : new Uint8Array(),\n      initialHeight: isSet(object.initialHeight) ? BigInt(object.initialHeight.toString()) : BigInt(\"0\")\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.time !== undefined && (obj.time = message.time.toISOString());\n    message.chainId !== undefined && (obj.chainId = message.chainId);\n    message.consensusParams !== undefined && (obj.consensusParams = message.consensusParams ? ConsensusParams.toJSON(message.consensusParams) : undefined);\n    if (message.validators) {\n      obj.validators = message.validators.map(e => e ? ValidatorUpdate.toJSON(e) : undefined);\n    } else {\n      obj.validators = [];\n    }\n    message.appStateBytes !== undefined && (obj.appStateBytes = base64FromBytes(message.appStateBytes !== undefined ? message.appStateBytes : new Uint8Array()));\n    message.initialHeight !== undefined && (obj.initialHeight = (message.initialHeight || BigInt(\"0\")).toString());\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$time, _object$chainId, _object$validators, _object$appStateBytes;\n    const message = createBaseRequestInitChain();\n    message.time = (_object$time = object.time) !== null && _object$time !== void 0 ? _object$time : undefined;\n    message.chainId = (_object$chainId = object.chainId) !== null && _object$chainId !== void 0 ? _object$chainId : \"\";\n    message.consensusParams = object.consensusParams !== undefined && object.consensusParams !== null ? ConsensusParams.fromPartial(object.consensusParams) : undefined;\n    message.validators = ((_object$validators = object.validators) === null || _object$validators === void 0 ? void 0 : _object$validators.map(e => ValidatorUpdate.fromPartial(e))) || [];\n    message.appStateBytes = (_object$appStateBytes = object.appStateBytes) !== null && _object$appStateBytes !== void 0 ? _object$appStateBytes : new Uint8Array();\n    message.initialHeight = object.initialHeight !== undefined && object.initialHeight !== null ? BigInt(object.initialHeight.toString()) : BigInt(\"0\");\n    return message;\n  }\n};\nfunction createBaseRequestQuery() {\n  return {\n    data: new Uint8Array(),\n    path: \"\",\n    height: BigInt(\"0\"),\n    prove: false\n  };\n}\nexport const RequestQuery = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.data.length !== 0) {\n      writer.uint32(10).bytes(message.data);\n    }\n    if (message.path !== \"\") {\n      writer.uint32(18).string(message.path);\n    }\n    if (message.height !== BigInt(0)) {\n      writer.uint32(24).int64(Long.fromString(message.height.toString()));\n    }\n    if (message.prove === true) {\n      writer.uint32(32).bool(message.prove);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseRequestQuery();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.data = reader.bytes();\n          break;\n        case 2:\n          message.path = reader.string();\n          break;\n        case 3:\n          message.height = BigInt(reader.int64().toString());\n          break;\n        case 4:\n          message.prove = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      data: isSet(object.data) ? bytesFromBase64(object.data) : new Uint8Array(),\n      path: isSet(object.path) ? String(object.path) : \"\",\n      height: isSet(object.height) ? BigInt(object.height.toString()) : BigInt(\"0\"),\n      prove: isSet(object.prove) ? Boolean(object.prove) : false\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n    message.path !== undefined && (obj.path = message.path);\n    message.height !== undefined && (obj.height = (message.height || BigInt(\"0\")).toString());\n    message.prove !== undefined && (obj.prove = message.prove);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$data, _object$path, _object$prove;\n    const message = createBaseRequestQuery();\n    message.data = (_object$data = object.data) !== null && _object$data !== void 0 ? _object$data : new Uint8Array();\n    message.path = (_object$path = object.path) !== null && _object$path !== void 0 ? _object$path : \"\";\n    message.height = object.height !== undefined && object.height !== null ? BigInt(object.height.toString()) : BigInt(\"0\");\n    message.prove = (_object$prove = object.prove) !== null && _object$prove !== void 0 ? _object$prove : false;\n    return message;\n  }\n};\nfunction createBaseRequestBeginBlock() {\n  return {\n    hash: new Uint8Array(),\n    header: undefined,\n    lastCommitInfo: undefined,\n    byzantineValidators: []\n  };\n}\nexport const RequestBeginBlock = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.hash.length !== 0) {\n      writer.uint32(10).bytes(message.hash);\n    }\n    if (message.header !== undefined) {\n      Header.encode(message.header, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.lastCommitInfo !== undefined) {\n      CommitInfo.encode(message.lastCommitInfo, writer.uint32(26).fork()).ldelim();\n    }\n    for (const v of message.byzantineValidators) {\n      Misbehavior.encode(v, writer.uint32(34).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseRequestBeginBlock();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.hash = reader.bytes();\n          break;\n        case 2:\n          message.header = Header.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.lastCommitInfo = CommitInfo.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.byzantineValidators.push(Misbehavior.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      hash: isSet(object.hash) ? bytesFromBase64(object.hash) : new Uint8Array(),\n      header: isSet(object.header) ? Header.fromJSON(object.header) : undefined,\n      lastCommitInfo: isSet(object.lastCommitInfo) ? CommitInfo.fromJSON(object.lastCommitInfo) : undefined,\n      byzantineValidators: Array.isArray(object === null || object === void 0 ? void 0 : object.byzantineValidators) ? object.byzantineValidators.map(e => Misbehavior.fromJSON(e)) : []\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n    message.header !== undefined && (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n    message.lastCommitInfo !== undefined && (obj.lastCommitInfo = message.lastCommitInfo ? CommitInfo.toJSON(message.lastCommitInfo) : undefined);\n    if (message.byzantineValidators) {\n      obj.byzantineValidators = message.byzantineValidators.map(e => e ? Misbehavior.toJSON(e) : undefined);\n    } else {\n      obj.byzantineValidators = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$hash, _object$byzantineVali;\n    const message = createBaseRequestBeginBlock();\n    message.hash = (_object$hash = object.hash) !== null && _object$hash !== void 0 ? _object$hash : new Uint8Array();\n    message.header = object.header !== undefined && object.header !== null ? Header.fromPartial(object.header) : undefined;\n    message.lastCommitInfo = object.lastCommitInfo !== undefined && object.lastCommitInfo !== null ? CommitInfo.fromPartial(object.lastCommitInfo) : undefined;\n    message.byzantineValidators = ((_object$byzantineVali = object.byzantineValidators) === null || _object$byzantineVali === void 0 ? void 0 : _object$byzantineVali.map(e => Misbehavior.fromPartial(e))) || [];\n    return message;\n  }\n};\nfunction createBaseRequestCheckTx() {\n  return {\n    tx: new Uint8Array(),\n    type: 0\n  };\n}\nexport const RequestCheckTx = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.tx.length !== 0) {\n      writer.uint32(10).bytes(message.tx);\n    }\n    if (message.type !== 0) {\n      writer.uint32(16).int32(message.type);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseRequestCheckTx();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.tx = reader.bytes();\n          break;\n        case 2:\n          message.type = reader.int32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      tx: isSet(object.tx) ? bytesFromBase64(object.tx) : new Uint8Array(),\n      type: isSet(object.type) ? checkTxTypeFromJSON(object.type) : 0\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.tx !== undefined && (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n    message.type !== undefined && (obj.type = checkTxTypeToJSON(message.type));\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$tx, _object$type;\n    const message = createBaseRequestCheckTx();\n    message.tx = (_object$tx = object.tx) !== null && _object$tx !== void 0 ? _object$tx : new Uint8Array();\n    message.type = (_object$type = object.type) !== null && _object$type !== void 0 ? _object$type : 0;\n    return message;\n  }\n};\nfunction createBaseRequestDeliverTx() {\n  return {\n    tx: new Uint8Array()\n  };\n}\nexport const RequestDeliverTx = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.tx.length !== 0) {\n      writer.uint32(10).bytes(message.tx);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseRequestDeliverTx();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.tx = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      tx: isSet(object.tx) ? bytesFromBase64(object.tx) : new Uint8Array()\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.tx !== undefined && (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$tx2;\n    const message = createBaseRequestDeliverTx();\n    message.tx = (_object$tx2 = object.tx) !== null && _object$tx2 !== void 0 ? _object$tx2 : new Uint8Array();\n    return message;\n  }\n};\nfunction createBaseRequestEndBlock() {\n  return {\n    height: BigInt(\"0\")\n  };\n}\nexport const RequestEndBlock = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.height !== BigInt(0)) {\n      writer.uint32(8).int64(Long.fromString(message.height.toString()));\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseRequestEndBlock();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.height = BigInt(reader.int64().toString());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      height: isSet(object.height) ? BigInt(object.height.toString()) : BigInt(\"0\")\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.height !== undefined && (obj.height = (message.height || BigInt(\"0\")).toString());\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseRequestEndBlock();\n    message.height = object.height !== undefined && object.height !== null ? BigInt(object.height.toString()) : BigInt(\"0\");\n    return message;\n  }\n};\nfunction createBaseRequestCommit() {\n  return {};\n}\nexport const RequestCommit = {\n  encode(_, writer = _m0.Writer.create()) {\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseRequestCommit();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    return {};\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = createBaseRequestCommit();\n    return message;\n  }\n};\nfunction createBaseRequestListSnapshots() {\n  return {};\n}\nexport const RequestListSnapshots = {\n  encode(_, writer = _m0.Writer.create()) {\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseRequestListSnapshots();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    return {};\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = createBaseRequestListSnapshots();\n    return message;\n  }\n};\nfunction createBaseRequestOfferSnapshot() {\n  return {\n    snapshot: undefined,\n    appHash: new Uint8Array()\n  };\n}\nexport const RequestOfferSnapshot = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.snapshot !== undefined) {\n      Snapshot.encode(message.snapshot, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.appHash.length !== 0) {\n      writer.uint32(18).bytes(message.appHash);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseRequestOfferSnapshot();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.snapshot = Snapshot.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.appHash = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      snapshot: isSet(object.snapshot) ? Snapshot.fromJSON(object.snapshot) : undefined,\n      appHash: isSet(object.appHash) ? bytesFromBase64(object.appHash) : new Uint8Array()\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.snapshot !== undefined && (obj.snapshot = message.snapshot ? Snapshot.toJSON(message.snapshot) : undefined);\n    message.appHash !== undefined && (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$appHash;\n    const message = createBaseRequestOfferSnapshot();\n    message.snapshot = object.snapshot !== undefined && object.snapshot !== null ? Snapshot.fromPartial(object.snapshot) : undefined;\n    message.appHash = (_object$appHash = object.appHash) !== null && _object$appHash !== void 0 ? _object$appHash : new Uint8Array();\n    return message;\n  }\n};\nfunction createBaseRequestLoadSnapshotChunk() {\n  return {\n    height: BigInt(\"0\"),\n    format: 0,\n    chunk: 0\n  };\n}\nexport const RequestLoadSnapshotChunk = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.height !== BigInt(0)) {\n      writer.uint32(8).uint64(Long.fromString(message.height.toString()));\n    }\n    if (message.format !== 0) {\n      writer.uint32(16).uint32(message.format);\n    }\n    if (message.chunk !== 0) {\n      writer.uint32(24).uint32(message.chunk);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseRequestLoadSnapshotChunk();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.height = BigInt(reader.uint64().toString());\n          break;\n        case 2:\n          message.format = reader.uint32();\n          break;\n        case 3:\n          message.chunk = reader.uint32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      height: isSet(object.height) ? BigInt(object.height.toString()) : BigInt(\"0\"),\n      format: isSet(object.format) ? Number(object.format) : 0,\n      chunk: isSet(object.chunk) ? Number(object.chunk) : 0\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.height !== undefined && (obj.height = (message.height || BigInt(\"0\")).toString());\n    message.format !== undefined && (obj.format = Math.round(message.format));\n    message.chunk !== undefined && (obj.chunk = Math.round(message.chunk));\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$format, _object$chunk;\n    const message = createBaseRequestLoadSnapshotChunk();\n    message.height = object.height !== undefined && object.height !== null ? BigInt(object.height.toString()) : BigInt(\"0\");\n    message.format = (_object$format = object.format) !== null && _object$format !== void 0 ? _object$format : 0;\n    message.chunk = (_object$chunk = object.chunk) !== null && _object$chunk !== void 0 ? _object$chunk : 0;\n    return message;\n  }\n};\nfunction createBaseRequestApplySnapshotChunk() {\n  return {\n    index: 0,\n    chunk: new Uint8Array(),\n    sender: \"\"\n  };\n}\nexport const RequestApplySnapshotChunk = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.index !== 0) {\n      writer.uint32(8).uint32(message.index);\n    }\n    if (message.chunk.length !== 0) {\n      writer.uint32(18).bytes(message.chunk);\n    }\n    if (message.sender !== \"\") {\n      writer.uint32(26).string(message.sender);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseRequestApplySnapshotChunk();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.index = reader.uint32();\n          break;\n        case 2:\n          message.chunk = reader.bytes();\n          break;\n        case 3:\n          message.sender = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      index: isSet(object.index) ? Number(object.index) : 0,\n      chunk: isSet(object.chunk) ? bytesFromBase64(object.chunk) : new Uint8Array(),\n      sender: isSet(object.sender) ? String(object.sender) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.index !== undefined && (obj.index = Math.round(message.index));\n    message.chunk !== undefined && (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n    message.sender !== undefined && (obj.sender = message.sender);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$index, _object$chunk2, _object$sender;\n    const message = createBaseRequestApplySnapshotChunk();\n    message.index = (_object$index = object.index) !== null && _object$index !== void 0 ? _object$index : 0;\n    message.chunk = (_object$chunk2 = object.chunk) !== null && _object$chunk2 !== void 0 ? _object$chunk2 : new Uint8Array();\n    message.sender = (_object$sender = object.sender) !== null && _object$sender !== void 0 ? _object$sender : \"\";\n    return message;\n  }\n};\nfunction createBaseRequestPrepareProposal() {\n  return {\n    maxTxBytes: BigInt(\"0\"),\n    txs: [],\n    localLastCommit: undefined,\n    misbehavior: [],\n    height: BigInt(\"0\"),\n    time: undefined,\n    nextValidatorsHash: new Uint8Array(),\n    proposerAddress: new Uint8Array()\n  };\n}\nexport const RequestPrepareProposal = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.maxTxBytes !== BigInt(0)) {\n      writer.uint32(8).int64(Long.fromString(message.maxTxBytes.toString()));\n    }\n    for (const v of message.txs) {\n      writer.uint32(18).bytes(v);\n    }\n    if (message.localLastCommit !== undefined) {\n      ExtendedCommitInfo.encode(message.localLastCommit, writer.uint32(26).fork()).ldelim();\n    }\n    for (const v of message.misbehavior) {\n      Misbehavior.encode(v, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.height !== BigInt(0)) {\n      writer.uint32(40).int64(Long.fromString(message.height.toString()));\n    }\n    if (message.time !== undefined) {\n      Timestamp.encode(toTimestamp(message.time), writer.uint32(50).fork()).ldelim();\n    }\n    if (message.nextValidatorsHash.length !== 0) {\n      writer.uint32(58).bytes(message.nextValidatorsHash);\n    }\n    if (message.proposerAddress.length !== 0) {\n      writer.uint32(66).bytes(message.proposerAddress);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseRequestPrepareProposal();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.maxTxBytes = BigInt(reader.int64().toString());\n          break;\n        case 2:\n          message.txs.push(reader.bytes());\n          break;\n        case 3:\n          message.localLastCommit = ExtendedCommitInfo.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.misbehavior.push(Misbehavior.decode(reader, reader.uint32()));\n          break;\n        case 5:\n          message.height = BigInt(reader.int64().toString());\n          break;\n        case 6:\n          message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n          break;\n        case 7:\n          message.nextValidatorsHash = reader.bytes();\n          break;\n        case 8:\n          message.proposerAddress = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      maxTxBytes: isSet(object.maxTxBytes) ? BigInt(object.maxTxBytes.toString()) : BigInt(\"0\"),\n      txs: Array.isArray(object === null || object === void 0 ? void 0 : object.txs) ? object.txs.map(e => bytesFromBase64(e)) : [],\n      localLastCommit: isSet(object.localLastCommit) ? ExtendedCommitInfo.fromJSON(object.localLastCommit) : undefined,\n      misbehavior: Array.isArray(object === null || object === void 0 ? void 0 : object.misbehavior) ? object.misbehavior.map(e => Misbehavior.fromJSON(e)) : [],\n      height: isSet(object.height) ? BigInt(object.height.toString()) : BigInt(\"0\"),\n      time: isSet(object.time) ? fromJsonTimestamp(object.time) : undefined,\n      nextValidatorsHash: isSet(object.nextValidatorsHash) ? bytesFromBase64(object.nextValidatorsHash) : new Uint8Array(),\n      proposerAddress: isSet(object.proposerAddress) ? bytesFromBase64(object.proposerAddress) : new Uint8Array()\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.maxTxBytes !== undefined && (obj.maxTxBytes = (message.maxTxBytes || BigInt(\"0\")).toString());\n    if (message.txs) {\n      obj.txs = message.txs.map(e => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n    } else {\n      obj.txs = [];\n    }\n    message.localLastCommit !== undefined && (obj.localLastCommit = message.localLastCommit ? ExtendedCommitInfo.toJSON(message.localLastCommit) : undefined);\n    if (message.misbehavior) {\n      obj.misbehavior = message.misbehavior.map(e => e ? Misbehavior.toJSON(e) : undefined);\n    } else {\n      obj.misbehavior = [];\n    }\n    message.height !== undefined && (obj.height = (message.height || BigInt(\"0\")).toString());\n    message.time !== undefined && (obj.time = message.time.toISOString());\n    message.nextValidatorsHash !== undefined && (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined ? message.nextValidatorsHash : new Uint8Array()));\n    message.proposerAddress !== undefined && (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined ? message.proposerAddress : new Uint8Array()));\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$txs, _object$misbehavior, _object$time2, _object$nextValidator, _object$proposerAddre;\n    const message = createBaseRequestPrepareProposal();\n    message.maxTxBytes = object.maxTxBytes !== undefined && object.maxTxBytes !== null ? BigInt(object.maxTxBytes.toString()) : BigInt(\"0\");\n    message.txs = ((_object$txs = object.txs) === null || _object$txs === void 0 ? void 0 : _object$txs.map(e => e)) || [];\n    message.localLastCommit = object.localLastCommit !== undefined && object.localLastCommit !== null ? ExtendedCommitInfo.fromPartial(object.localLastCommit) : undefined;\n    message.misbehavior = ((_object$misbehavior = object.misbehavior) === null || _object$misbehavior === void 0 ? void 0 : _object$misbehavior.map(e => Misbehavior.fromPartial(e))) || [];\n    message.height = object.height !== undefined && object.height !== null ? BigInt(object.height.toString()) : BigInt(\"0\");\n    message.time = (_object$time2 = object.time) !== null && _object$time2 !== void 0 ? _object$time2 : undefined;\n    message.nextValidatorsHash = (_object$nextValidator = object.nextValidatorsHash) !== null && _object$nextValidator !== void 0 ? _object$nextValidator : new Uint8Array();\n    message.proposerAddress = (_object$proposerAddre = object.proposerAddress) !== null && _object$proposerAddre !== void 0 ? _object$proposerAddre : new Uint8Array();\n    return message;\n  }\n};\nfunction createBaseRequestProcessProposal() {\n  return {\n    txs: [],\n    proposedLastCommit: undefined,\n    misbehavior: [],\n    hash: new Uint8Array(),\n    height: BigInt(\"0\"),\n    time: undefined,\n    nextValidatorsHash: new Uint8Array(),\n    proposerAddress: new Uint8Array()\n  };\n}\nexport const RequestProcessProposal = {\n  encode(message, writer = _m0.Writer.create()) {\n    for (const v of message.txs) {\n      writer.uint32(10).bytes(v);\n    }\n    if (message.proposedLastCommit !== undefined) {\n      CommitInfo.encode(message.proposedLastCommit, writer.uint32(18).fork()).ldelim();\n    }\n    for (const v of message.misbehavior) {\n      Misbehavior.encode(v, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.hash.length !== 0) {\n      writer.uint32(34).bytes(message.hash);\n    }\n    if (message.height !== BigInt(0)) {\n      writer.uint32(40).int64(Long.fromString(message.height.toString()));\n    }\n    if (message.time !== undefined) {\n      Timestamp.encode(toTimestamp(message.time), writer.uint32(50).fork()).ldelim();\n    }\n    if (message.nextValidatorsHash.length !== 0) {\n      writer.uint32(58).bytes(message.nextValidatorsHash);\n    }\n    if (message.proposerAddress.length !== 0) {\n      writer.uint32(66).bytes(message.proposerAddress);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseRequestProcessProposal();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.txs.push(reader.bytes());\n          break;\n        case 2:\n          message.proposedLastCommit = CommitInfo.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.misbehavior.push(Misbehavior.decode(reader, reader.uint32()));\n          break;\n        case 4:\n          message.hash = reader.bytes();\n          break;\n        case 5:\n          message.height = BigInt(reader.int64().toString());\n          break;\n        case 6:\n          message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n          break;\n        case 7:\n          message.nextValidatorsHash = reader.bytes();\n          break;\n        case 8:\n          message.proposerAddress = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      txs: Array.isArray(object === null || object === void 0 ? void 0 : object.txs) ? object.txs.map(e => bytesFromBase64(e)) : [],\n      proposedLastCommit: isSet(object.proposedLastCommit) ? CommitInfo.fromJSON(object.proposedLastCommit) : undefined,\n      misbehavior: Array.isArray(object === null || object === void 0 ? void 0 : object.misbehavior) ? object.misbehavior.map(e => Misbehavior.fromJSON(e)) : [],\n      hash: isSet(object.hash) ? bytesFromBase64(object.hash) : new Uint8Array(),\n      height: isSet(object.height) ? BigInt(object.height.toString()) : BigInt(\"0\"),\n      time: isSet(object.time) ? fromJsonTimestamp(object.time) : undefined,\n      nextValidatorsHash: isSet(object.nextValidatorsHash) ? bytesFromBase64(object.nextValidatorsHash) : new Uint8Array(),\n      proposerAddress: isSet(object.proposerAddress) ? bytesFromBase64(object.proposerAddress) : new Uint8Array()\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.txs) {\n      obj.txs = message.txs.map(e => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n    } else {\n      obj.txs = [];\n    }\n    message.proposedLastCommit !== undefined && (obj.proposedLastCommit = message.proposedLastCommit ? CommitInfo.toJSON(message.proposedLastCommit) : undefined);\n    if (message.misbehavior) {\n      obj.misbehavior = message.misbehavior.map(e => e ? Misbehavior.toJSON(e) : undefined);\n    } else {\n      obj.misbehavior = [];\n    }\n    message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n    message.height !== undefined && (obj.height = (message.height || BigInt(\"0\")).toString());\n    message.time !== undefined && (obj.time = message.time.toISOString());\n    message.nextValidatorsHash !== undefined && (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined ? message.nextValidatorsHash : new Uint8Array()));\n    message.proposerAddress !== undefined && (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined ? message.proposerAddress : new Uint8Array()));\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$txs2, _object$misbehavior2, _object$hash2, _object$time3, _object$nextValidator2, _object$proposerAddre2;\n    const message = createBaseRequestProcessProposal();\n    message.txs = ((_object$txs2 = object.txs) === null || _object$txs2 === void 0 ? void 0 : _object$txs2.map(e => e)) || [];\n    message.proposedLastCommit = object.proposedLastCommit !== undefined && object.proposedLastCommit !== null ? CommitInfo.fromPartial(object.proposedLastCommit) : undefined;\n    message.misbehavior = ((_object$misbehavior2 = object.misbehavior) === null || _object$misbehavior2 === void 0 ? void 0 : _object$misbehavior2.map(e => Misbehavior.fromPartial(e))) || [];\n    message.hash = (_object$hash2 = object.hash) !== null && _object$hash2 !== void 0 ? _object$hash2 : new Uint8Array();\n    message.height = object.height !== undefined && object.height !== null ? BigInt(object.height.toString()) : BigInt(\"0\");\n    message.time = (_object$time3 = object.time) !== null && _object$time3 !== void 0 ? _object$time3 : undefined;\n    message.nextValidatorsHash = (_object$nextValidator2 = object.nextValidatorsHash) !== null && _object$nextValidator2 !== void 0 ? _object$nextValidator2 : new Uint8Array();\n    message.proposerAddress = (_object$proposerAddre2 = object.proposerAddress) !== null && _object$proposerAddre2 !== void 0 ? _object$proposerAddre2 : new Uint8Array();\n    return message;\n  }\n};\nfunction createBaseResponse() {\n  return {\n    exception: undefined,\n    echo: undefined,\n    flush: undefined,\n    info: undefined,\n    initChain: undefined,\n    query: undefined,\n    beginBlock: undefined,\n    checkTx: undefined,\n    deliverTx: undefined,\n    endBlock: undefined,\n    commit: undefined,\n    listSnapshots: undefined,\n    offerSnapshot: undefined,\n    loadSnapshotChunk: undefined,\n    applySnapshotChunk: undefined,\n    prepareProposal: undefined,\n    processProposal: undefined\n  };\n}\nexport const Response = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.exception !== undefined) {\n      ResponseException.encode(message.exception, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.echo !== undefined) {\n      ResponseEcho.encode(message.echo, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.flush !== undefined) {\n      ResponseFlush.encode(message.flush, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.info !== undefined) {\n      ResponseInfo.encode(message.info, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.initChain !== undefined) {\n      ResponseInitChain.encode(message.initChain, writer.uint32(50).fork()).ldelim();\n    }\n    if (message.query !== undefined) {\n      ResponseQuery.encode(message.query, writer.uint32(58).fork()).ldelim();\n    }\n    if (message.beginBlock !== undefined) {\n      ResponseBeginBlock.encode(message.beginBlock, writer.uint32(66).fork()).ldelim();\n    }\n    if (message.checkTx !== undefined) {\n      ResponseCheckTx.encode(message.checkTx, writer.uint32(74).fork()).ldelim();\n    }\n    if (message.deliverTx !== undefined) {\n      ResponseDeliverTx.encode(message.deliverTx, writer.uint32(82).fork()).ldelim();\n    }\n    if (message.endBlock !== undefined) {\n      ResponseEndBlock.encode(message.endBlock, writer.uint32(90).fork()).ldelim();\n    }\n    if (message.commit !== undefined) {\n      ResponseCommit.encode(message.commit, writer.uint32(98).fork()).ldelim();\n    }\n    if (message.listSnapshots !== undefined) {\n      ResponseListSnapshots.encode(message.listSnapshots, writer.uint32(106).fork()).ldelim();\n    }\n    if (message.offerSnapshot !== undefined) {\n      ResponseOfferSnapshot.encode(message.offerSnapshot, writer.uint32(114).fork()).ldelim();\n    }\n    if (message.loadSnapshotChunk !== undefined) {\n      ResponseLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(122).fork()).ldelim();\n    }\n    if (message.applySnapshotChunk !== undefined) {\n      ResponseApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(130).fork()).ldelim();\n    }\n    if (message.prepareProposal !== undefined) {\n      ResponsePrepareProposal.encode(message.prepareProposal, writer.uint32(138).fork()).ldelim();\n    }\n    if (message.processProposal !== undefined) {\n      ResponseProcessProposal.encode(message.processProposal, writer.uint32(146).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.exception = ResponseException.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.echo = ResponseEcho.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.flush = ResponseFlush.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.info = ResponseInfo.decode(reader, reader.uint32());\n          break;\n        case 6:\n          message.initChain = ResponseInitChain.decode(reader, reader.uint32());\n          break;\n        case 7:\n          message.query = ResponseQuery.decode(reader, reader.uint32());\n          break;\n        case 8:\n          message.beginBlock = ResponseBeginBlock.decode(reader, reader.uint32());\n          break;\n        case 9:\n          message.checkTx = ResponseCheckTx.decode(reader, reader.uint32());\n          break;\n        case 10:\n          message.deliverTx = ResponseDeliverTx.decode(reader, reader.uint32());\n          break;\n        case 11:\n          message.endBlock = ResponseEndBlock.decode(reader, reader.uint32());\n          break;\n        case 12:\n          message.commit = ResponseCommit.decode(reader, reader.uint32());\n          break;\n        case 13:\n          message.listSnapshots = ResponseListSnapshots.decode(reader, reader.uint32());\n          break;\n        case 14:\n          message.offerSnapshot = ResponseOfferSnapshot.decode(reader, reader.uint32());\n          break;\n        case 15:\n          message.loadSnapshotChunk = ResponseLoadSnapshotChunk.decode(reader, reader.uint32());\n          break;\n        case 16:\n          message.applySnapshotChunk = ResponseApplySnapshotChunk.decode(reader, reader.uint32());\n          break;\n        case 17:\n          message.prepareProposal = ResponsePrepareProposal.decode(reader, reader.uint32());\n          break;\n        case 18:\n          message.processProposal = ResponseProcessProposal.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      exception: isSet(object.exception) ? ResponseException.fromJSON(object.exception) : undefined,\n      echo: isSet(object.echo) ? ResponseEcho.fromJSON(object.echo) : undefined,\n      flush: isSet(object.flush) ? ResponseFlush.fromJSON(object.flush) : undefined,\n      info: isSet(object.info) ? ResponseInfo.fromJSON(object.info) : undefined,\n      initChain: isSet(object.initChain) ? ResponseInitChain.fromJSON(object.initChain) : undefined,\n      query: isSet(object.query) ? ResponseQuery.fromJSON(object.query) : undefined,\n      beginBlock: isSet(object.beginBlock) ? ResponseBeginBlock.fromJSON(object.beginBlock) : undefined,\n      checkTx: isSet(object.checkTx) ? ResponseCheckTx.fromJSON(object.checkTx) : undefined,\n      deliverTx: isSet(object.deliverTx) ? ResponseDeliverTx.fromJSON(object.deliverTx) : undefined,\n      endBlock: isSet(object.endBlock) ? ResponseEndBlock.fromJSON(object.endBlock) : undefined,\n      commit: isSet(object.commit) ? ResponseCommit.fromJSON(object.commit) : undefined,\n      listSnapshots: isSet(object.listSnapshots) ? ResponseListSnapshots.fromJSON(object.listSnapshots) : undefined,\n      offerSnapshot: isSet(object.offerSnapshot) ? ResponseOfferSnapshot.fromJSON(object.offerSnapshot) : undefined,\n      loadSnapshotChunk: isSet(object.loadSnapshotChunk) ? ResponseLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk) : undefined,\n      applySnapshotChunk: isSet(object.applySnapshotChunk) ? ResponseApplySnapshotChunk.fromJSON(object.applySnapshotChunk) : undefined,\n      prepareProposal: isSet(object.prepareProposal) ? ResponsePrepareProposal.fromJSON(object.prepareProposal) : undefined,\n      processProposal: isSet(object.processProposal) ? ResponseProcessProposal.fromJSON(object.processProposal) : undefined\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.exception !== undefined && (obj.exception = message.exception ? ResponseException.toJSON(message.exception) : undefined);\n    message.echo !== undefined && (obj.echo = message.echo ? ResponseEcho.toJSON(message.echo) : undefined);\n    message.flush !== undefined && (obj.flush = message.flush ? ResponseFlush.toJSON(message.flush) : undefined);\n    message.info !== undefined && (obj.info = message.info ? ResponseInfo.toJSON(message.info) : undefined);\n    message.initChain !== undefined && (obj.initChain = message.initChain ? ResponseInitChain.toJSON(message.initChain) : undefined);\n    message.query !== undefined && (obj.query = message.query ? ResponseQuery.toJSON(message.query) : undefined);\n    message.beginBlock !== undefined && (obj.beginBlock = message.beginBlock ? ResponseBeginBlock.toJSON(message.beginBlock) : undefined);\n    message.checkTx !== undefined && (obj.checkTx = message.checkTx ? ResponseCheckTx.toJSON(message.checkTx) : undefined);\n    message.deliverTx !== undefined && (obj.deliverTx = message.deliverTx ? ResponseDeliverTx.toJSON(message.deliverTx) : undefined);\n    message.endBlock !== undefined && (obj.endBlock = message.endBlock ? ResponseEndBlock.toJSON(message.endBlock) : undefined);\n    message.commit !== undefined && (obj.commit = message.commit ? ResponseCommit.toJSON(message.commit) : undefined);\n    message.listSnapshots !== undefined && (obj.listSnapshots = message.listSnapshots ? ResponseListSnapshots.toJSON(message.listSnapshots) : undefined);\n    message.offerSnapshot !== undefined && (obj.offerSnapshot = message.offerSnapshot ? ResponseOfferSnapshot.toJSON(message.offerSnapshot) : undefined);\n    message.loadSnapshotChunk !== undefined && (obj.loadSnapshotChunk = message.loadSnapshotChunk ? ResponseLoadSnapshotChunk.toJSON(message.loadSnapshotChunk) : undefined);\n    message.applySnapshotChunk !== undefined && (obj.applySnapshotChunk = message.applySnapshotChunk ? ResponseApplySnapshotChunk.toJSON(message.applySnapshotChunk) : undefined);\n    message.prepareProposal !== undefined && (obj.prepareProposal = message.prepareProposal ? ResponsePrepareProposal.toJSON(message.prepareProposal) : undefined);\n    message.processProposal !== undefined && (obj.processProposal = message.processProposal ? ResponseProcessProposal.toJSON(message.processProposal) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseResponse();\n    message.exception = object.exception !== undefined && object.exception !== null ? ResponseException.fromPartial(object.exception) : undefined;\n    message.echo = object.echo !== undefined && object.echo !== null ? ResponseEcho.fromPartial(object.echo) : undefined;\n    message.flush = object.flush !== undefined && object.flush !== null ? ResponseFlush.fromPartial(object.flush) : undefined;\n    message.info = object.info !== undefined && object.info !== null ? ResponseInfo.fromPartial(object.info) : undefined;\n    message.initChain = object.initChain !== undefined && object.initChain !== null ? ResponseInitChain.fromPartial(object.initChain) : undefined;\n    message.query = object.query !== undefined && object.query !== null ? ResponseQuery.fromPartial(object.query) : undefined;\n    message.beginBlock = object.beginBlock !== undefined && object.beginBlock !== null ? ResponseBeginBlock.fromPartial(object.beginBlock) : undefined;\n    message.checkTx = object.checkTx !== undefined && object.checkTx !== null ? ResponseCheckTx.fromPartial(object.checkTx) : undefined;\n    message.deliverTx = object.deliverTx !== undefined && object.deliverTx !== null ? ResponseDeliverTx.fromPartial(object.deliverTx) : undefined;\n    message.endBlock = object.endBlock !== undefined && object.endBlock !== null ? ResponseEndBlock.fromPartial(object.endBlock) : undefined;\n    message.commit = object.commit !== undefined && object.commit !== null ? ResponseCommit.fromPartial(object.commit) : undefined;\n    message.listSnapshots = object.listSnapshots !== undefined && object.listSnapshots !== null ? ResponseListSnapshots.fromPartial(object.listSnapshots) : undefined;\n    message.offerSnapshot = object.offerSnapshot !== undefined && object.offerSnapshot !== null ? ResponseOfferSnapshot.fromPartial(object.offerSnapshot) : undefined;\n    message.loadSnapshotChunk = object.loadSnapshotChunk !== undefined && object.loadSnapshotChunk !== null ? ResponseLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk) : undefined;\n    message.applySnapshotChunk = object.applySnapshotChunk !== undefined && object.applySnapshotChunk !== null ? ResponseApplySnapshotChunk.fromPartial(object.applySnapshotChunk) : undefined;\n    message.prepareProposal = object.prepareProposal !== undefined && object.prepareProposal !== null ? ResponsePrepareProposal.fromPartial(object.prepareProposal) : undefined;\n    message.processProposal = object.processProposal !== undefined && object.processProposal !== null ? ResponseProcessProposal.fromPartial(object.processProposal) : undefined;\n    return message;\n  }\n};\nfunction createBaseResponseException() {\n  return {\n    error: \"\"\n  };\n}\nexport const ResponseException = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.error !== \"\") {\n      writer.uint32(10).string(message.error);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseResponseException();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.error = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      error: isSet(object.error) ? String(object.error) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.error !== undefined && (obj.error = message.error);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$error;\n    const message = createBaseResponseException();\n    message.error = (_object$error = object.error) !== null && _object$error !== void 0 ? _object$error : \"\";\n    return message;\n  }\n};\nfunction createBaseResponseEcho() {\n  return {\n    message: \"\"\n  };\n}\nexport const ResponseEcho = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.message !== \"\") {\n      writer.uint32(10).string(message.message);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseResponseEcho();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.message = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      message: isSet(object.message) ? String(object.message) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.message !== undefined && (obj.message = message.message);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$message2;\n    const message = createBaseResponseEcho();\n    message.message = (_object$message2 = object.message) !== null && _object$message2 !== void 0 ? _object$message2 : \"\";\n    return message;\n  }\n};\nfunction createBaseResponseFlush() {\n  return {};\n}\nexport const ResponseFlush = {\n  encode(_, writer = _m0.Writer.create()) {\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseResponseFlush();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    return {};\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = createBaseResponseFlush();\n    return message;\n  }\n};\nfunction createBaseResponseInfo() {\n  return {\n    data: \"\",\n    version: \"\",\n    appVersion: BigInt(\"0\"),\n    lastBlockHeight: BigInt(\"0\"),\n    lastBlockAppHash: new Uint8Array()\n  };\n}\nexport const ResponseInfo = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.data !== \"\") {\n      writer.uint32(10).string(message.data);\n    }\n    if (message.version !== \"\") {\n      writer.uint32(18).string(message.version);\n    }\n    if (message.appVersion !== BigInt(0)) {\n      writer.uint32(24).uint64(Long.fromString(message.appVersion.toString()));\n    }\n    if (message.lastBlockHeight !== BigInt(0)) {\n      writer.uint32(32).int64(Long.fromString(message.lastBlockHeight.toString()));\n    }\n    if (message.lastBlockAppHash.length !== 0) {\n      writer.uint32(42).bytes(message.lastBlockAppHash);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseResponseInfo();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.data = reader.string();\n          break;\n        case 2:\n          message.version = reader.string();\n          break;\n        case 3:\n          message.appVersion = BigInt(reader.uint64().toString());\n          break;\n        case 4:\n          message.lastBlockHeight = BigInt(reader.int64().toString());\n          break;\n        case 5:\n          message.lastBlockAppHash = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      data: isSet(object.data) ? String(object.data) : \"\",\n      version: isSet(object.version) ? String(object.version) : \"\",\n      appVersion: isSet(object.appVersion) ? BigInt(object.appVersion.toString()) : BigInt(\"0\"),\n      lastBlockHeight: isSet(object.lastBlockHeight) ? BigInt(object.lastBlockHeight.toString()) : BigInt(\"0\"),\n      lastBlockAppHash: isSet(object.lastBlockAppHash) ? bytesFromBase64(object.lastBlockAppHash) : new Uint8Array()\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.data !== undefined && (obj.data = message.data);\n    message.version !== undefined && (obj.version = message.version);\n    message.appVersion !== undefined && (obj.appVersion = (message.appVersion || BigInt(\"0\")).toString());\n    message.lastBlockHeight !== undefined && (obj.lastBlockHeight = (message.lastBlockHeight || BigInt(\"0\")).toString());\n    message.lastBlockAppHash !== undefined && (obj.lastBlockAppHash = base64FromBytes(message.lastBlockAppHash !== undefined ? message.lastBlockAppHash : new Uint8Array()));\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$data2, _object$version2, _object$lastBlockAppH;\n    const message = createBaseResponseInfo();\n    message.data = (_object$data2 = object.data) !== null && _object$data2 !== void 0 ? _object$data2 : \"\";\n    message.version = (_object$version2 = object.version) !== null && _object$version2 !== void 0 ? _object$version2 : \"\";\n    message.appVersion = object.appVersion !== undefined && object.appVersion !== null ? BigInt(object.appVersion.toString()) : BigInt(\"0\");\n    message.lastBlockHeight = object.lastBlockHeight !== undefined && object.lastBlockHeight !== null ? BigInt(object.lastBlockHeight.toString()) : BigInt(\"0\");\n    message.lastBlockAppHash = (_object$lastBlockAppH = object.lastBlockAppHash) !== null && _object$lastBlockAppH !== void 0 ? _object$lastBlockAppH : new Uint8Array();\n    return message;\n  }\n};\nfunction createBaseResponseInitChain() {\n  return {\n    consensusParams: undefined,\n    validators: [],\n    appHash: new Uint8Array()\n  };\n}\nexport const ResponseInitChain = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.consensusParams !== undefined) {\n      ConsensusParams.encode(message.consensusParams, writer.uint32(10).fork()).ldelim();\n    }\n    for (const v of message.validators) {\n      ValidatorUpdate.encode(v, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.appHash.length !== 0) {\n      writer.uint32(26).bytes(message.appHash);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseResponseInitChain();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n          break;\n        case 3:\n          message.appHash = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      consensusParams: isSet(object.consensusParams) ? ConsensusParams.fromJSON(object.consensusParams) : undefined,\n      validators: Array.isArray(object === null || object === void 0 ? void 0 : object.validators) ? object.validators.map(e => ValidatorUpdate.fromJSON(e)) : [],\n      appHash: isSet(object.appHash) ? bytesFromBase64(object.appHash) : new Uint8Array()\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.consensusParams !== undefined && (obj.consensusParams = message.consensusParams ? ConsensusParams.toJSON(message.consensusParams) : undefined);\n    if (message.validators) {\n      obj.validators = message.validators.map(e => e ? ValidatorUpdate.toJSON(e) : undefined);\n    } else {\n      obj.validators = [];\n    }\n    message.appHash !== undefined && (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$validators2, _object$appHash2;\n    const message = createBaseResponseInitChain();\n    message.consensusParams = object.consensusParams !== undefined && object.consensusParams !== null ? ConsensusParams.fromPartial(object.consensusParams) : undefined;\n    message.validators = ((_object$validators2 = object.validators) === null || _object$validators2 === void 0 ? void 0 : _object$validators2.map(e => ValidatorUpdate.fromPartial(e))) || [];\n    message.appHash = (_object$appHash2 = object.appHash) !== null && _object$appHash2 !== void 0 ? _object$appHash2 : new Uint8Array();\n    return message;\n  }\n};\nfunction createBaseResponseQuery() {\n  return {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    index: BigInt(\"0\"),\n    key: new Uint8Array(),\n    value: new Uint8Array(),\n    proofOps: undefined,\n    height: BigInt(\"0\"),\n    codespace: \"\"\n  };\n}\nexport const ResponseQuery = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.code !== 0) {\n      writer.uint32(8).uint32(message.code);\n    }\n    if (message.log !== \"\") {\n      writer.uint32(26).string(message.log);\n    }\n    if (message.info !== \"\") {\n      writer.uint32(34).string(message.info);\n    }\n    if (message.index !== BigInt(0)) {\n      writer.uint32(40).int64(Long.fromString(message.index.toString()));\n    }\n    if (message.key.length !== 0) {\n      writer.uint32(50).bytes(message.key);\n    }\n    if (message.value.length !== 0) {\n      writer.uint32(58).bytes(message.value);\n    }\n    if (message.proofOps !== undefined) {\n      ProofOps.encode(message.proofOps, writer.uint32(66).fork()).ldelim();\n    }\n    if (message.height !== BigInt(0)) {\n      writer.uint32(72).int64(Long.fromString(message.height.toString()));\n    }\n    if (message.codespace !== \"\") {\n      writer.uint32(82).string(message.codespace);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseResponseQuery();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.code = reader.uint32();\n          break;\n        case 3:\n          message.log = reader.string();\n          break;\n        case 4:\n          message.info = reader.string();\n          break;\n        case 5:\n          message.index = BigInt(reader.int64().toString());\n          break;\n        case 6:\n          message.key = reader.bytes();\n          break;\n        case 7:\n          message.value = reader.bytes();\n          break;\n        case 8:\n          message.proofOps = ProofOps.decode(reader, reader.uint32());\n          break;\n        case 9:\n          message.height = BigInt(reader.int64().toString());\n          break;\n        case 10:\n          message.codespace = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      code: isSet(object.code) ? Number(object.code) : 0,\n      log: isSet(object.log) ? String(object.log) : \"\",\n      info: isSet(object.info) ? String(object.info) : \"\",\n      index: isSet(object.index) ? BigInt(object.index.toString()) : BigInt(\"0\"),\n      key: isSet(object.key) ? bytesFromBase64(object.key) : new Uint8Array(),\n      value: isSet(object.value) ? bytesFromBase64(object.value) : new Uint8Array(),\n      proofOps: isSet(object.proofOps) ? ProofOps.fromJSON(object.proofOps) : undefined,\n      height: isSet(object.height) ? BigInt(object.height.toString()) : BigInt(\"0\"),\n      codespace: isSet(object.codespace) ? String(object.codespace) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.code !== undefined && (obj.code = Math.round(message.code));\n    message.log !== undefined && (obj.log = message.log);\n    message.info !== undefined && (obj.info = message.info);\n    message.index !== undefined && (obj.index = (message.index || BigInt(\"0\")).toString());\n    message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n    message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n    message.proofOps !== undefined && (obj.proofOps = message.proofOps ? ProofOps.toJSON(message.proofOps) : undefined);\n    message.height !== undefined && (obj.height = (message.height || BigInt(\"0\")).toString());\n    message.codespace !== undefined && (obj.codespace = message.codespace);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$code, _object$log, _object$info, _object$key, _object$value, _object$codespace;\n    const message = createBaseResponseQuery();\n    message.code = (_object$code = object.code) !== null && _object$code !== void 0 ? _object$code : 0;\n    message.log = (_object$log = object.log) !== null && _object$log !== void 0 ? _object$log : \"\";\n    message.info = (_object$info = object.info) !== null && _object$info !== void 0 ? _object$info : \"\";\n    message.index = object.index !== undefined && object.index !== null ? BigInt(object.index.toString()) : BigInt(\"0\");\n    message.key = (_object$key = object.key) !== null && _object$key !== void 0 ? _object$key : new Uint8Array();\n    message.value = (_object$value = object.value) !== null && _object$value !== void 0 ? _object$value : new Uint8Array();\n    message.proofOps = object.proofOps !== undefined && object.proofOps !== null ? ProofOps.fromPartial(object.proofOps) : undefined;\n    message.height = object.height !== undefined && object.height !== null ? BigInt(object.height.toString()) : BigInt(\"0\");\n    message.codespace = (_object$codespace = object.codespace) !== null && _object$codespace !== void 0 ? _object$codespace : \"\";\n    return message;\n  }\n};\nfunction createBaseResponseBeginBlock() {\n  return {\n    events: []\n  };\n}\nexport const ResponseBeginBlock = {\n  encode(message, writer = _m0.Writer.create()) {\n    for (const v of message.events) {\n      Event.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseResponseBeginBlock();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.events.push(Event.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      events: Array.isArray(object === null || object === void 0 ? void 0 : object.events) ? object.events.map(e => Event.fromJSON(e)) : []\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.events) {\n      obj.events = message.events.map(e => e ? Event.toJSON(e) : undefined);\n    } else {\n      obj.events = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$events;\n    const message = createBaseResponseBeginBlock();\n    message.events = ((_object$events = object.events) === null || _object$events === void 0 ? void 0 : _object$events.map(e => Event.fromPartial(e))) || [];\n    return message;\n  }\n};\nfunction createBaseResponseCheckTx() {\n  return {\n    code: 0,\n    data: new Uint8Array(),\n    log: \"\",\n    info: \"\",\n    gasWanted: BigInt(\"0\"),\n    gasUsed: BigInt(\"0\"),\n    events: [],\n    codespace: \"\",\n    sender: \"\",\n    priority: BigInt(\"0\"),\n    mempoolError: \"\"\n  };\n}\nexport const ResponseCheckTx = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.code !== 0) {\n      writer.uint32(8).uint32(message.code);\n    }\n    if (message.data.length !== 0) {\n      writer.uint32(18).bytes(message.data);\n    }\n    if (message.log !== \"\") {\n      writer.uint32(26).string(message.log);\n    }\n    if (message.info !== \"\") {\n      writer.uint32(34).string(message.info);\n    }\n    if (message.gasWanted !== BigInt(0)) {\n      writer.uint32(40).int64(Long.fromString(message.gasWanted.toString()));\n    }\n    if (message.gasUsed !== BigInt(0)) {\n      writer.uint32(48).int64(Long.fromString(message.gasUsed.toString()));\n    }\n    for (const v of message.events) {\n      Event.encode(v, writer.uint32(58).fork()).ldelim();\n    }\n    if (message.codespace !== \"\") {\n      writer.uint32(66).string(message.codespace);\n    }\n    if (message.sender !== \"\") {\n      writer.uint32(74).string(message.sender);\n    }\n    if (message.priority !== BigInt(0)) {\n      writer.uint32(80).int64(Long.fromString(message.priority.toString()));\n    }\n    if (message.mempoolError !== \"\") {\n      writer.uint32(90).string(message.mempoolError);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseResponseCheckTx();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.code = reader.uint32();\n          break;\n        case 2:\n          message.data = reader.bytes();\n          break;\n        case 3:\n          message.log = reader.string();\n          break;\n        case 4:\n          message.info = reader.string();\n          break;\n        case 5:\n          message.gasWanted = BigInt(reader.int64().toString());\n          break;\n        case 6:\n          message.gasUsed = BigInt(reader.int64().toString());\n          break;\n        case 7:\n          message.events.push(Event.decode(reader, reader.uint32()));\n          break;\n        case 8:\n          message.codespace = reader.string();\n          break;\n        case 9:\n          message.sender = reader.string();\n          break;\n        case 10:\n          message.priority = BigInt(reader.int64().toString());\n          break;\n        case 11:\n          message.mempoolError = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      code: isSet(object.code) ? Number(object.code) : 0,\n      data: isSet(object.data) ? bytesFromBase64(object.data) : new Uint8Array(),\n      log: isSet(object.log) ? String(object.log) : \"\",\n      info: isSet(object.info) ? String(object.info) : \"\",\n      gasWanted: isSet(object.gas_wanted) ? BigInt(object.gas_wanted.toString()) : BigInt(\"0\"),\n      gasUsed: isSet(object.gas_used) ? BigInt(object.gas_used.toString()) : BigInt(\"0\"),\n      events: Array.isArray(object === null || object === void 0 ? void 0 : object.events) ? object.events.map(e => Event.fromJSON(e)) : [],\n      codespace: isSet(object.codespace) ? String(object.codespace) : \"\",\n      sender: isSet(object.sender) ? String(object.sender) : \"\",\n      priority: isSet(object.priority) ? BigInt(object.priority.toString()) : BigInt(\"0\"),\n      mempoolError: isSet(object.mempoolError) ? String(object.mempoolError) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.code !== undefined && (obj.code = Math.round(message.code));\n    message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n    message.log !== undefined && (obj.log = message.log);\n    message.info !== undefined && (obj.info = message.info);\n    message.gasWanted !== undefined && (obj.gas_wanted = (message.gasWanted || BigInt(\"0\")).toString());\n    message.gasUsed !== undefined && (obj.gas_used = (message.gasUsed || BigInt(\"0\")).toString());\n    if (message.events) {\n      obj.events = message.events.map(e => e ? Event.toJSON(e) : undefined);\n    } else {\n      obj.events = [];\n    }\n    message.codespace !== undefined && (obj.codespace = message.codespace);\n    message.sender !== undefined && (obj.sender = message.sender);\n    message.priority !== undefined && (obj.priority = (message.priority || BigInt(\"0\")).toString());\n    message.mempoolError !== undefined && (obj.mempoolError = message.mempoolError);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$code2, _object$data3, _object$log2, _object$info2, _object$events2, _object$codespace2, _object$sender2, _object$mempoolError;\n    const message = createBaseResponseCheckTx();\n    message.code = (_object$code2 = object.code) !== null && _object$code2 !== void 0 ? _object$code2 : 0;\n    message.data = (_object$data3 = object.data) !== null && _object$data3 !== void 0 ? _object$data3 : new Uint8Array();\n    message.log = (_object$log2 = object.log) !== null && _object$log2 !== void 0 ? _object$log2 : \"\";\n    message.info = (_object$info2 = object.info) !== null && _object$info2 !== void 0 ? _object$info2 : \"\";\n    message.gasWanted = object.gasWanted !== undefined && object.gasWanted !== null ? BigInt(object.gasWanted.toString()) : BigInt(\"0\");\n    message.gasUsed = object.gasUsed !== undefined && object.gasUsed !== null ? BigInt(object.gasUsed.toString()) : BigInt(\"0\");\n    message.events = ((_object$events2 = object.events) === null || _object$events2 === void 0 ? void 0 : _object$events2.map(e => Event.fromPartial(e))) || [];\n    message.codespace = (_object$codespace2 = object.codespace) !== null && _object$codespace2 !== void 0 ? _object$codespace2 : \"\";\n    message.sender = (_object$sender2 = object.sender) !== null && _object$sender2 !== void 0 ? _object$sender2 : \"\";\n    message.priority = object.priority !== undefined && object.priority !== null ? BigInt(object.priority.toString()) : BigInt(\"0\");\n    message.mempoolError = (_object$mempoolError = object.mempoolError) !== null && _object$mempoolError !== void 0 ? _object$mempoolError : \"\";\n    return message;\n  }\n};\nfunction createBaseResponseDeliverTx() {\n  return {\n    code: 0,\n    data: new Uint8Array(),\n    log: \"\",\n    info: \"\",\n    gasWanted: BigInt(\"0\"),\n    gasUsed: BigInt(\"0\"),\n    events: [],\n    codespace: \"\"\n  };\n}\nexport const ResponseDeliverTx = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.code !== 0) {\n      writer.uint32(8).uint32(message.code);\n    }\n    if (message.data.length !== 0) {\n      writer.uint32(18).bytes(message.data);\n    }\n    if (message.log !== \"\") {\n      writer.uint32(26).string(message.log);\n    }\n    if (message.info !== \"\") {\n      writer.uint32(34).string(message.info);\n    }\n    if (message.gasWanted !== BigInt(0)) {\n      writer.uint32(40).int64(Long.fromString(message.gasWanted.toString()));\n    }\n    if (message.gasUsed !== BigInt(0)) {\n      writer.uint32(48).int64(Long.fromString(message.gasUsed.toString()));\n    }\n    for (const v of message.events) {\n      Event.encode(v, writer.uint32(58).fork()).ldelim();\n    }\n    if (message.codespace !== \"\") {\n      writer.uint32(66).string(message.codespace);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseResponseDeliverTx();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.code = reader.uint32();\n          break;\n        case 2:\n          message.data = reader.bytes();\n          break;\n        case 3:\n          message.log = reader.string();\n          break;\n        case 4:\n          message.info = reader.string();\n          break;\n        case 5:\n          message.gasWanted = BigInt(reader.int64().toString());\n          break;\n        case 6:\n          message.gasUsed = BigInt(reader.int64().toString());\n          break;\n        case 7:\n          message.events.push(Event.decode(reader, reader.uint32()));\n          break;\n        case 8:\n          message.codespace = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      code: isSet(object.code) ? Number(object.code) : 0,\n      data: isSet(object.data) ? bytesFromBase64(object.data) : new Uint8Array(),\n      log: isSet(object.log) ? String(object.log) : \"\",\n      info: isSet(object.info) ? String(object.info) : \"\",\n      gasWanted: isSet(object.gas_wanted) ? BigInt(object.gas_wanted.toString()) : BigInt(\"0\"),\n      gasUsed: isSet(object.gas_used) ? BigInt(object.gas_used.toString()) : BigInt(\"0\"),\n      events: Array.isArray(object === null || object === void 0 ? void 0 : object.events) ? object.events.map(e => Event.fromJSON(e)) : [],\n      codespace: isSet(object.codespace) ? String(object.codespace) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.code !== undefined && (obj.code = Math.round(message.code));\n    message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n    message.log !== undefined && (obj.log = message.log);\n    message.info !== undefined && (obj.info = message.info);\n    message.gasWanted !== undefined && (obj.gas_wanted = (message.gasWanted || BigInt(\"0\")).toString());\n    message.gasUsed !== undefined && (obj.gas_used = (message.gasUsed || BigInt(\"0\")).toString());\n    if (message.events) {\n      obj.events = message.events.map(e => e ? Event.toJSON(e) : undefined);\n    } else {\n      obj.events = [];\n    }\n    message.codespace !== undefined && (obj.codespace = message.codespace);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$code3, _object$data4, _object$log3, _object$info3, _object$events3, _object$codespace3;\n    const message = createBaseResponseDeliverTx();\n    message.code = (_object$code3 = object.code) !== null && _object$code3 !== void 0 ? _object$code3 : 0;\n    message.data = (_object$data4 = object.data) !== null && _object$data4 !== void 0 ? _object$data4 : new Uint8Array();\n    message.log = (_object$log3 = object.log) !== null && _object$log3 !== void 0 ? _object$log3 : \"\";\n    message.info = (_object$info3 = object.info) !== null && _object$info3 !== void 0 ? _object$info3 : \"\";\n    message.gasWanted = object.gasWanted !== undefined && object.gasWanted !== null ? BigInt(object.gasWanted.toString()) : BigInt(\"0\");\n    message.gasUsed = object.gasUsed !== undefined && object.gasUsed !== null ? BigInt(object.gasUsed.toString()) : BigInt(\"0\");\n    message.events = ((_object$events3 = object.events) === null || _object$events3 === void 0 ? void 0 : _object$events3.map(e => Event.fromPartial(e))) || [];\n    message.codespace = (_object$codespace3 = object.codespace) !== null && _object$codespace3 !== void 0 ? _object$codespace3 : \"\";\n    return message;\n  }\n};\nfunction createBaseResponseEndBlock() {\n  return {\n    validatorUpdates: [],\n    consensusParamUpdates: undefined,\n    events: []\n  };\n}\nexport const ResponseEndBlock = {\n  encode(message, writer = _m0.Writer.create()) {\n    for (const v of message.validatorUpdates) {\n      ValidatorUpdate.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.consensusParamUpdates !== undefined) {\n      ConsensusParams.encode(message.consensusParamUpdates, writer.uint32(18).fork()).ldelim();\n    }\n    for (const v of message.events) {\n      Event.encode(v, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseResponseEndBlock();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.validatorUpdates.push(ValidatorUpdate.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.consensusParamUpdates = ConsensusParams.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.events.push(Event.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      validatorUpdates: Array.isArray(object === null || object === void 0 ? void 0 : object.validatorUpdates) ? object.validatorUpdates.map(e => ValidatorUpdate.fromJSON(e)) : [],\n      consensusParamUpdates: isSet(object.consensusParamUpdates) ? ConsensusParams.fromJSON(object.consensusParamUpdates) : undefined,\n      events: Array.isArray(object === null || object === void 0 ? void 0 : object.events) ? object.events.map(e => Event.fromJSON(e)) : []\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.validatorUpdates) {\n      obj.validatorUpdates = message.validatorUpdates.map(e => e ? ValidatorUpdate.toJSON(e) : undefined);\n    } else {\n      obj.validatorUpdates = [];\n    }\n    message.consensusParamUpdates !== undefined && (obj.consensusParamUpdates = message.consensusParamUpdates ? ConsensusParams.toJSON(message.consensusParamUpdates) : undefined);\n    if (message.events) {\n      obj.events = message.events.map(e => e ? Event.toJSON(e) : undefined);\n    } else {\n      obj.events = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$validatorUpda, _object$events4;\n    const message = createBaseResponseEndBlock();\n    message.validatorUpdates = ((_object$validatorUpda = object.validatorUpdates) === null || _object$validatorUpda === void 0 ? void 0 : _object$validatorUpda.map(e => ValidatorUpdate.fromPartial(e))) || [];\n    message.consensusParamUpdates = object.consensusParamUpdates !== undefined && object.consensusParamUpdates !== null ? ConsensusParams.fromPartial(object.consensusParamUpdates) : undefined;\n    message.events = ((_object$events4 = object.events) === null || _object$events4 === void 0 ? void 0 : _object$events4.map(e => Event.fromPartial(e))) || [];\n    return message;\n  }\n};\nfunction createBaseResponseCommit() {\n  return {\n    data: new Uint8Array(),\n    retainHeight: BigInt(\"0\")\n  };\n}\nexport const ResponseCommit = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.data.length !== 0) {\n      writer.uint32(18).bytes(message.data);\n    }\n    if (message.retainHeight !== BigInt(0)) {\n      writer.uint32(24).int64(Long.fromString(message.retainHeight.toString()));\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseResponseCommit();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 2:\n          message.data = reader.bytes();\n          break;\n        case 3:\n          message.retainHeight = BigInt(reader.int64().toString());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      data: isSet(object.data) ? bytesFromBase64(object.data) : new Uint8Array(),\n      retainHeight: isSet(object.retainHeight) ? BigInt(object.retainHeight.toString()) : BigInt(\"0\")\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n    message.retainHeight !== undefined && (obj.retainHeight = (message.retainHeight || BigInt(\"0\")).toString());\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$data5;\n    const message = createBaseResponseCommit();\n    message.data = (_object$data5 = object.data) !== null && _object$data5 !== void 0 ? _object$data5 : new Uint8Array();\n    message.retainHeight = object.retainHeight !== undefined && object.retainHeight !== null ? BigInt(object.retainHeight.toString()) : BigInt(\"0\");\n    return message;\n  }\n};\nfunction createBaseResponseListSnapshots() {\n  return {\n    snapshots: []\n  };\n}\nexport const ResponseListSnapshots = {\n  encode(message, writer = _m0.Writer.create()) {\n    for (const v of message.snapshots) {\n      Snapshot.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseResponseListSnapshots();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.snapshots.push(Snapshot.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      snapshots: Array.isArray(object === null || object === void 0 ? void 0 : object.snapshots) ? object.snapshots.map(e => Snapshot.fromJSON(e)) : []\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.snapshots) {\n      obj.snapshots = message.snapshots.map(e => e ? Snapshot.toJSON(e) : undefined);\n    } else {\n      obj.snapshots = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$snapshots;\n    const message = createBaseResponseListSnapshots();\n    message.snapshots = ((_object$snapshots = object.snapshots) === null || _object$snapshots === void 0 ? void 0 : _object$snapshots.map(e => Snapshot.fromPartial(e))) || [];\n    return message;\n  }\n};\nfunction createBaseResponseOfferSnapshot() {\n  return {\n    result: 0\n  };\n}\nexport const ResponseOfferSnapshot = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.result !== 0) {\n      writer.uint32(8).int32(message.result);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseResponseOfferSnapshot();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.result = reader.int32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      result: isSet(object.result) ? responseOfferSnapshot_ResultFromJSON(object.result) : 0\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.result !== undefined && (obj.result = responseOfferSnapshot_ResultToJSON(message.result));\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$result;\n    const message = createBaseResponseOfferSnapshot();\n    message.result = (_object$result = object.result) !== null && _object$result !== void 0 ? _object$result : 0;\n    return message;\n  }\n};\nfunction createBaseResponseLoadSnapshotChunk() {\n  return {\n    chunk: new Uint8Array()\n  };\n}\nexport const ResponseLoadSnapshotChunk = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.chunk.length !== 0) {\n      writer.uint32(10).bytes(message.chunk);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseResponseLoadSnapshotChunk();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.chunk = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      chunk: isSet(object.chunk) ? bytesFromBase64(object.chunk) : new Uint8Array()\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.chunk !== undefined && (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$chunk3;\n    const message = createBaseResponseLoadSnapshotChunk();\n    message.chunk = (_object$chunk3 = object.chunk) !== null && _object$chunk3 !== void 0 ? _object$chunk3 : new Uint8Array();\n    return message;\n  }\n};\nfunction createBaseResponseApplySnapshotChunk() {\n  return {\n    result: 0,\n    refetchChunks: [],\n    rejectSenders: []\n  };\n}\nexport const ResponseApplySnapshotChunk = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.result !== 0) {\n      writer.uint32(8).int32(message.result);\n    }\n    writer.uint32(18).fork();\n    for (const v of message.refetchChunks) {\n      writer.uint32(v);\n    }\n    writer.ldelim();\n    for (const v of message.rejectSenders) {\n      writer.uint32(26).string(v);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseResponseApplySnapshotChunk();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.result = reader.int32();\n          break;\n        case 2:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.refetchChunks.push(reader.uint32());\n            }\n          } else {\n            message.refetchChunks.push(reader.uint32());\n          }\n          break;\n        case 3:\n          message.rejectSenders.push(reader.string());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      result: isSet(object.result) ? responseApplySnapshotChunk_ResultFromJSON(object.result) : 0,\n      refetchChunks: Array.isArray(object === null || object === void 0 ? void 0 : object.refetchChunks) ? object.refetchChunks.map(e => Number(e)) : [],\n      rejectSenders: Array.isArray(object === null || object === void 0 ? void 0 : object.rejectSenders) ? object.rejectSenders.map(e => String(e)) : []\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.result !== undefined && (obj.result = responseApplySnapshotChunk_ResultToJSON(message.result));\n    if (message.refetchChunks) {\n      obj.refetchChunks = message.refetchChunks.map(e => Math.round(e));\n    } else {\n      obj.refetchChunks = [];\n    }\n    if (message.rejectSenders) {\n      obj.rejectSenders = message.rejectSenders.map(e => e);\n    } else {\n      obj.rejectSenders = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$result2, _object$refetchChunks, _object$rejectSenders;\n    const message = createBaseResponseApplySnapshotChunk();\n    message.result = (_object$result2 = object.result) !== null && _object$result2 !== void 0 ? _object$result2 : 0;\n    message.refetchChunks = ((_object$refetchChunks = object.refetchChunks) === null || _object$refetchChunks === void 0 ? void 0 : _object$refetchChunks.map(e => e)) || [];\n    message.rejectSenders = ((_object$rejectSenders = object.rejectSenders) === null || _object$rejectSenders === void 0 ? void 0 : _object$rejectSenders.map(e => e)) || [];\n    return message;\n  }\n};\nfunction createBaseResponsePrepareProposal() {\n  return {\n    txs: []\n  };\n}\nexport const ResponsePrepareProposal = {\n  encode(message, writer = _m0.Writer.create()) {\n    for (const v of message.txs) {\n      writer.uint32(10).bytes(v);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseResponsePrepareProposal();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.txs.push(reader.bytes());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      txs: Array.isArray(object === null || object === void 0 ? void 0 : object.txs) ? object.txs.map(e => bytesFromBase64(e)) : []\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.txs) {\n      obj.txs = message.txs.map(e => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n    } else {\n      obj.txs = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$txs3;\n    const message = createBaseResponsePrepareProposal();\n    message.txs = ((_object$txs3 = object.txs) === null || _object$txs3 === void 0 ? void 0 : _object$txs3.map(e => e)) || [];\n    return message;\n  }\n};\nfunction createBaseResponseProcessProposal() {\n  return {\n    status: 0\n  };\n}\nexport const ResponseProcessProposal = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.status !== 0) {\n      writer.uint32(8).int32(message.status);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseResponseProcessProposal();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.status = reader.int32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      status: isSet(object.status) ? responseProcessProposal_ProposalStatusFromJSON(object.status) : 0\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.status !== undefined && (obj.status = responseProcessProposal_ProposalStatusToJSON(message.status));\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$status;\n    const message = createBaseResponseProcessProposal();\n    message.status = (_object$status = object.status) !== null && _object$status !== void 0 ? _object$status : 0;\n    return message;\n  }\n};\nfunction createBaseCommitInfo() {\n  return {\n    round: 0,\n    votes: []\n  };\n}\nexport const CommitInfo = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.round !== 0) {\n      writer.uint32(8).int32(message.round);\n    }\n    for (const v of message.votes) {\n      VoteInfo.encode(v, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseCommitInfo();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.round = reader.int32();\n          break;\n        case 2:\n          message.votes.push(VoteInfo.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      round: isSet(object.round) ? Number(object.round) : 0,\n      votes: Array.isArray(object === null || object === void 0 ? void 0 : object.votes) ? object.votes.map(e => VoteInfo.fromJSON(e)) : []\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.round !== undefined && (obj.round = Math.round(message.round));\n    if (message.votes) {\n      obj.votes = message.votes.map(e => e ? VoteInfo.toJSON(e) : undefined);\n    } else {\n      obj.votes = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$round, _object$votes;\n    const message = createBaseCommitInfo();\n    message.round = (_object$round = object.round) !== null && _object$round !== void 0 ? _object$round : 0;\n    message.votes = ((_object$votes = object.votes) === null || _object$votes === void 0 ? void 0 : _object$votes.map(e => VoteInfo.fromPartial(e))) || [];\n    return message;\n  }\n};\nfunction createBaseExtendedCommitInfo() {\n  return {\n    round: 0,\n    votes: []\n  };\n}\nexport const ExtendedCommitInfo = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.round !== 0) {\n      writer.uint32(8).int32(message.round);\n    }\n    for (const v of message.votes) {\n      ExtendedVoteInfo.encode(v, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseExtendedCommitInfo();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.round = reader.int32();\n          break;\n        case 2:\n          message.votes.push(ExtendedVoteInfo.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      round: isSet(object.round) ? Number(object.round) : 0,\n      votes: Array.isArray(object === null || object === void 0 ? void 0 : object.votes) ? object.votes.map(e => ExtendedVoteInfo.fromJSON(e)) : []\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.round !== undefined && (obj.round = Math.round(message.round));\n    if (message.votes) {\n      obj.votes = message.votes.map(e => e ? ExtendedVoteInfo.toJSON(e) : undefined);\n    } else {\n      obj.votes = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$round2, _object$votes2;\n    const message = createBaseExtendedCommitInfo();\n    message.round = (_object$round2 = object.round) !== null && _object$round2 !== void 0 ? _object$round2 : 0;\n    message.votes = ((_object$votes2 = object.votes) === null || _object$votes2 === void 0 ? void 0 : _object$votes2.map(e => ExtendedVoteInfo.fromPartial(e))) || [];\n    return message;\n  }\n};\nfunction createBaseEvent() {\n  return {\n    type: \"\",\n    attributes: []\n  };\n}\nexport const Event = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.type !== \"\") {\n      writer.uint32(10).string(message.type);\n    }\n    for (const v of message.attributes) {\n      EventAttribute.encode(v, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseEvent();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.type = reader.string();\n          break;\n        case 2:\n          message.attributes.push(EventAttribute.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      type: isSet(object.type) ? String(object.type) : \"\",\n      attributes: Array.isArray(object === null || object === void 0 ? void 0 : object.attributes) ? object.attributes.map(e => EventAttribute.fromJSON(e)) : []\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.type !== undefined && (obj.type = message.type);\n    if (message.attributes) {\n      obj.attributes = message.attributes.map(e => e ? EventAttribute.toJSON(e) : undefined);\n    } else {\n      obj.attributes = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$type2, _object$attributes;\n    const message = createBaseEvent();\n    message.type = (_object$type2 = object.type) !== null && _object$type2 !== void 0 ? _object$type2 : \"\";\n    message.attributes = ((_object$attributes = object.attributes) === null || _object$attributes === void 0 ? void 0 : _object$attributes.map(e => EventAttribute.fromPartial(e))) || [];\n    return message;\n  }\n};\nfunction createBaseEventAttribute() {\n  return {\n    key: \"\",\n    value: \"\",\n    index: false\n  };\n}\nexport const EventAttribute = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.key !== \"\") {\n      writer.uint32(10).string(message.key);\n    }\n    if (message.value !== \"\") {\n      writer.uint32(18).string(message.value);\n    }\n    if (message.index === true) {\n      writer.uint32(24).bool(message.index);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseEventAttribute();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.string();\n          break;\n        case 2:\n          message.value = reader.string();\n          break;\n        case 3:\n          message.index = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      key: isSet(object.key) ? String(object.key) : \"\",\n      value: isSet(object.value) ? String(object.value) : \"\",\n      index: isSet(object.index) ? Boolean(object.index) : false\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.key !== undefined && (obj.key = message.key);\n    message.value !== undefined && (obj.value = message.value);\n    message.index !== undefined && (obj.index = message.index);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$key2, _object$value2, _object$index2;\n    const message = createBaseEventAttribute();\n    message.key = (_object$key2 = object.key) !== null && _object$key2 !== void 0 ? _object$key2 : \"\";\n    message.value = (_object$value2 = object.value) !== null && _object$value2 !== void 0 ? _object$value2 : \"\";\n    message.index = (_object$index2 = object.index) !== null && _object$index2 !== void 0 ? _object$index2 : false;\n    return message;\n  }\n};\nfunction createBaseTxResult() {\n  return {\n    height: BigInt(\"0\"),\n    index: 0,\n    tx: new Uint8Array(),\n    result: undefined\n  };\n}\nexport const TxResult = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.height !== BigInt(0)) {\n      writer.uint32(8).int64(Long.fromString(message.height.toString()));\n    }\n    if (message.index !== 0) {\n      writer.uint32(16).uint32(message.index);\n    }\n    if (message.tx.length !== 0) {\n      writer.uint32(26).bytes(message.tx);\n    }\n    if (message.result !== undefined) {\n      ResponseDeliverTx.encode(message.result, writer.uint32(34).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseTxResult();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.height = BigInt(reader.int64().toString());\n          break;\n        case 2:\n          message.index = reader.uint32();\n          break;\n        case 3:\n          message.tx = reader.bytes();\n          break;\n        case 4:\n          message.result = ResponseDeliverTx.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      height: isSet(object.height) ? BigInt(object.height.toString()) : BigInt(\"0\"),\n      index: isSet(object.index) ? Number(object.index) : 0,\n      tx: isSet(object.tx) ? bytesFromBase64(object.tx) : new Uint8Array(),\n      result: isSet(object.result) ? ResponseDeliverTx.fromJSON(object.result) : undefined\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.height !== undefined && (obj.height = (message.height || BigInt(\"0\")).toString());\n    message.index !== undefined && (obj.index = Math.round(message.index));\n    message.tx !== undefined && (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n    message.result !== undefined && (obj.result = message.result ? ResponseDeliverTx.toJSON(message.result) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$index3, _object$tx3;\n    const message = createBaseTxResult();\n    message.height = object.height !== undefined && object.height !== null ? BigInt(object.height.toString()) : BigInt(\"0\");\n    message.index = (_object$index3 = object.index) !== null && _object$index3 !== void 0 ? _object$index3 : 0;\n    message.tx = (_object$tx3 = object.tx) !== null && _object$tx3 !== void 0 ? _object$tx3 : new Uint8Array();\n    message.result = object.result !== undefined && object.result !== null ? ResponseDeliverTx.fromPartial(object.result) : undefined;\n    return message;\n  }\n};\nfunction createBaseValidator() {\n  return {\n    address: new Uint8Array(),\n    power: BigInt(\"0\")\n  };\n}\nexport const Validator = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.address.length !== 0) {\n      writer.uint32(10).bytes(message.address);\n    }\n    if (message.power !== BigInt(0)) {\n      writer.uint32(24).int64(Long.fromString(message.power.toString()));\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseValidator();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.address = reader.bytes();\n          break;\n        case 3:\n          message.power = BigInt(reader.int64().toString());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      address: isSet(object.address) ? bytesFromBase64(object.address) : new Uint8Array(),\n      power: isSet(object.power) ? BigInt(object.power.toString()) : BigInt(\"0\")\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.address !== undefined && (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n    message.power !== undefined && (obj.power = (message.power || BigInt(\"0\")).toString());\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$address;\n    const message = createBaseValidator();\n    message.address = (_object$address = object.address) !== null && _object$address !== void 0 ? _object$address : new Uint8Array();\n    message.power = object.power !== undefined && object.power !== null ? BigInt(object.power.toString()) : BigInt(\"0\");\n    return message;\n  }\n};\nfunction createBaseValidatorUpdate() {\n  return {\n    pubKey: undefined,\n    power: BigInt(\"0\")\n  };\n}\nexport const ValidatorUpdate = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.pubKey !== undefined) {\n      PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.power !== BigInt(0)) {\n      writer.uint32(16).int64(Long.fromString(message.power.toString()));\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseValidatorUpdate();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.pubKey = PublicKey.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.power = BigInt(reader.int64().toString());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      pubKey: isSet(object.pubKey) ? PublicKey.fromJSON(object.pubKey) : undefined,\n      power: isSet(object.power) ? BigInt(object.power.toString()) : BigInt(\"0\")\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.pubKey !== undefined && (obj.pubKey = message.pubKey ? PublicKey.toJSON(message.pubKey) : undefined);\n    message.power !== undefined && (obj.power = (message.power || BigInt(\"0\")).toString());\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseValidatorUpdate();\n    message.pubKey = object.pubKey !== undefined && object.pubKey !== null ? PublicKey.fromPartial(object.pubKey) : undefined;\n    message.power = object.power !== undefined && object.power !== null ? BigInt(object.power.toString()) : BigInt(\"0\");\n    return message;\n  }\n};\nfunction createBaseVoteInfo() {\n  return {\n    validator: undefined,\n    signedLastBlock: false\n  };\n}\nexport const VoteInfo = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.validator !== undefined) {\n      Validator.encode(message.validator, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.signedLastBlock === true) {\n      writer.uint32(16).bool(message.signedLastBlock);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseVoteInfo();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.validator = Validator.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.signedLastBlock = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      validator: isSet(object.validator) ? Validator.fromJSON(object.validator) : undefined,\n      signedLastBlock: isSet(object.signedLastBlock) ? Boolean(object.signedLastBlock) : false\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.validator !== undefined && (obj.validator = message.validator ? Validator.toJSON(message.validator) : undefined);\n    message.signedLastBlock !== undefined && (obj.signedLastBlock = message.signedLastBlock);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$signedLastBlo;\n    const message = createBaseVoteInfo();\n    message.validator = object.validator !== undefined && object.validator !== null ? Validator.fromPartial(object.validator) : undefined;\n    message.signedLastBlock = (_object$signedLastBlo = object.signedLastBlock) !== null && _object$signedLastBlo !== void 0 ? _object$signedLastBlo : false;\n    return message;\n  }\n};\nfunction createBaseExtendedVoteInfo() {\n  return {\n    validator: undefined,\n    signedLastBlock: false,\n    voteExtension: new Uint8Array()\n  };\n}\nexport const ExtendedVoteInfo = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.validator !== undefined) {\n      Validator.encode(message.validator, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.signedLastBlock === true) {\n      writer.uint32(16).bool(message.signedLastBlock);\n    }\n    if (message.voteExtension.length !== 0) {\n      writer.uint32(26).bytes(message.voteExtension);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseExtendedVoteInfo();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.validator = Validator.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.signedLastBlock = reader.bool();\n          break;\n        case 3:\n          message.voteExtension = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      validator: isSet(object.validator) ? Validator.fromJSON(object.validator) : undefined,\n      signedLastBlock: isSet(object.signedLastBlock) ? Boolean(object.signedLastBlock) : false,\n      voteExtension: isSet(object.voteExtension) ? bytesFromBase64(object.voteExtension) : new Uint8Array()\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.validator !== undefined && (obj.validator = message.validator ? Validator.toJSON(message.validator) : undefined);\n    message.signedLastBlock !== undefined && (obj.signedLastBlock = message.signedLastBlock);\n    message.voteExtension !== undefined && (obj.voteExtension = base64FromBytes(message.voteExtension !== undefined ? message.voteExtension : new Uint8Array()));\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$signedLastBlo2, _object$voteExtension;\n    const message = createBaseExtendedVoteInfo();\n    message.validator = object.validator !== undefined && object.validator !== null ? Validator.fromPartial(object.validator) : undefined;\n    message.signedLastBlock = (_object$signedLastBlo2 = object.signedLastBlock) !== null && _object$signedLastBlo2 !== void 0 ? _object$signedLastBlo2 : false;\n    message.voteExtension = (_object$voteExtension = object.voteExtension) !== null && _object$voteExtension !== void 0 ? _object$voteExtension : new Uint8Array();\n    return message;\n  }\n};\nfunction createBaseMisbehavior() {\n  return {\n    type: 0,\n    validator: undefined,\n    height: BigInt(\"0\"),\n    time: undefined,\n    totalVotingPower: BigInt(\"0\")\n  };\n}\nexport const Misbehavior = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.type !== 0) {\n      writer.uint32(8).int32(message.type);\n    }\n    if (message.validator !== undefined) {\n      Validator.encode(message.validator, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.height !== BigInt(0)) {\n      writer.uint32(24).int64(Long.fromString(message.height.toString()));\n    }\n    if (message.time !== undefined) {\n      Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n    }\n    if (message.totalVotingPower !== BigInt(0)) {\n      writer.uint32(40).int64(Long.fromString(message.totalVotingPower.toString()));\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMisbehavior();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.type = reader.int32();\n          break;\n        case 2:\n          message.validator = Validator.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.height = BigInt(reader.int64().toString());\n          break;\n        case 4:\n          message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n          break;\n        case 5:\n          message.totalVotingPower = BigInt(reader.int64().toString());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      type: isSet(object.type) ? misbehaviorTypeFromJSON(object.type) : 0,\n      validator: isSet(object.validator) ? Validator.fromJSON(object.validator) : undefined,\n      height: isSet(object.height) ? BigInt(object.height.toString()) : BigInt(\"0\"),\n      time: isSet(object.time) ? fromJsonTimestamp(object.time) : undefined,\n      totalVotingPower: isSet(object.totalVotingPower) ? BigInt(object.totalVotingPower.toString()) : BigInt(\"0\")\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.type !== undefined && (obj.type = misbehaviorTypeToJSON(message.type));\n    message.validator !== undefined && (obj.validator = message.validator ? Validator.toJSON(message.validator) : undefined);\n    message.height !== undefined && (obj.height = (message.height || BigInt(\"0\")).toString());\n    message.time !== undefined && (obj.time = message.time.toISOString());\n    message.totalVotingPower !== undefined && (obj.totalVotingPower = (message.totalVotingPower || BigInt(\"0\")).toString());\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$type3, _object$time4;\n    const message = createBaseMisbehavior();\n    message.type = (_object$type3 = object.type) !== null && _object$type3 !== void 0 ? _object$type3 : 0;\n    message.validator = object.validator !== undefined && object.validator !== null ? Validator.fromPartial(object.validator) : undefined;\n    message.height = object.height !== undefined && object.height !== null ? BigInt(object.height.toString()) : BigInt(\"0\");\n    message.time = (_object$time4 = object.time) !== null && _object$time4 !== void 0 ? _object$time4 : undefined;\n    message.totalVotingPower = object.totalVotingPower !== undefined && object.totalVotingPower !== null ? BigInt(object.totalVotingPower.toString()) : BigInt(\"0\");\n    return message;\n  }\n};\nfunction createBaseSnapshot() {\n  return {\n    height: BigInt(\"0\"),\n    format: 0,\n    chunks: 0,\n    hash: new Uint8Array(),\n    metadata: new Uint8Array()\n  };\n}\nexport const Snapshot = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.height !== BigInt(0)) {\n      writer.uint32(8).uint64(Long.fromString(message.height.toString()));\n    }\n    if (message.format !== 0) {\n      writer.uint32(16).uint32(message.format);\n    }\n    if (message.chunks !== 0) {\n      writer.uint32(24).uint32(message.chunks);\n    }\n    if (message.hash.length !== 0) {\n      writer.uint32(34).bytes(message.hash);\n    }\n    if (message.metadata.length !== 0) {\n      writer.uint32(42).bytes(message.metadata);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSnapshot();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.height = BigInt(reader.uint64().toString());\n          break;\n        case 2:\n          message.format = reader.uint32();\n          break;\n        case 3:\n          message.chunks = reader.uint32();\n          break;\n        case 4:\n          message.hash = reader.bytes();\n          break;\n        case 5:\n          message.metadata = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      height: isSet(object.height) ? BigInt(object.height.toString()) : BigInt(\"0\"),\n      format: isSet(object.format) ? Number(object.format) : 0,\n      chunks: isSet(object.chunks) ? Number(object.chunks) : 0,\n      hash: isSet(object.hash) ? bytesFromBase64(object.hash) : new Uint8Array(),\n      metadata: isSet(object.metadata) ? bytesFromBase64(object.metadata) : new Uint8Array()\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.height !== undefined && (obj.height = (message.height || BigInt(\"0\")).toString());\n    message.format !== undefined && (obj.format = Math.round(message.format));\n    message.chunks !== undefined && (obj.chunks = Math.round(message.chunks));\n    message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n    message.metadata !== undefined && (obj.metadata = base64FromBytes(message.metadata !== undefined ? message.metadata : new Uint8Array()));\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$format2, _object$chunks, _object$hash3, _object$metadata;\n    const message = createBaseSnapshot();\n    message.height = object.height !== undefined && object.height !== null ? BigInt(object.height.toString()) : BigInt(\"0\");\n    message.format = (_object$format2 = object.format) !== null && _object$format2 !== void 0 ? _object$format2 : 0;\n    message.chunks = (_object$chunks = object.chunks) !== null && _object$chunks !== void 0 ? _object$chunks : 0;\n    message.hash = (_object$hash3 = object.hash) !== null && _object$hash3 !== void 0 ? _object$hash3 : new Uint8Array();\n    message.metadata = (_object$metadata = object.metadata) !== null && _object$metadata !== void 0 ? _object$metadata : new Uint8Array();\n    return message;\n  }\n};"],
  "mappings": "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",
  "names": ["CheckTxType", "ResponseOfferSnapshot_Result", "ResponseApplySnapshotChunk_Result", "ResponseProcessProposal_ProposalStatus", "MisbehaviorType", "Long"]
}
