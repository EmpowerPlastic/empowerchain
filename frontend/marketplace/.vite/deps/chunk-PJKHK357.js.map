{
  "version": 3,
  "sources": ["../../node_modules/@empower-plastic/empowerjs/module/codegen/cosmos/base/query/v1beta1/pagination.js"],
  "sourcesContent": ["import * as _m0 from \"protobufjs/minimal\";\nimport { Long, isSet, bytesFromBase64, base64FromBytes } from \"../../../../helpers\";\n/**\n * PageRequest is to be embedded in gRPC request messages for efficient\n * pagination. Ex:\n * \n *  message SomeRequest {\n *          Foo some_parameter = 1;\n *          PageRequest pagination = 2;\n *  }\n */\n\n/**\n * PageRequest is to be embedded in gRPC request messages for efficient\n * pagination. Ex:\n * \n *  message SomeRequest {\n *          Foo some_parameter = 1;\n *          PageRequest pagination = 2;\n *  }\n */\n\n/**\n * PageResponse is to be embedded in gRPC response messages where the\n * corresponding request message has used PageRequest.\n * \n *  message SomeResponse {\n *          repeated Bar results = 1;\n *          PageResponse page = 2;\n *  }\n */\n\n/**\n * PageResponse is to be embedded in gRPC response messages where the\n * corresponding request message has used PageRequest.\n * \n *  message SomeResponse {\n *          repeated Bar results = 1;\n *          PageResponse page = 2;\n *  }\n */\n\nfunction createBasePageRequest() {\n  return {\n    key: new Uint8Array(),\n    offset: BigInt(\"0\"),\n    limit: BigInt(\"0\"),\n    countTotal: false,\n    reverse: false\n  };\n}\nexport const PageRequest = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.key.length !== 0) {\n      writer.uint32(10).bytes(message.key);\n    }\n    if (message.offset !== BigInt(0)) {\n      writer.uint32(16).uint64(Long.fromString(message.offset.toString()));\n    }\n    if (message.limit !== BigInt(0)) {\n      writer.uint32(24).uint64(Long.fromString(message.limit.toString()));\n    }\n    if (message.countTotal === true) {\n      writer.uint32(32).bool(message.countTotal);\n    }\n    if (message.reverse === true) {\n      writer.uint32(40).bool(message.reverse);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBasePageRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.bytes();\n          break;\n        case 2:\n          message.offset = BigInt(reader.uint64().toString());\n          break;\n        case 3:\n          message.limit = BigInt(reader.uint64().toString());\n          break;\n        case 4:\n          message.countTotal = reader.bool();\n          break;\n        case 5:\n          message.reverse = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      key: isSet(object.key) ? bytesFromBase64(object.key) : new Uint8Array(),\n      offset: isSet(object.offset) ? BigInt(object.offset.toString()) : BigInt(\"0\"),\n      limit: isSet(object.limit) ? BigInt(object.limit.toString()) : BigInt(\"0\"),\n      countTotal: isSet(object.countTotal) ? Boolean(object.countTotal) : false,\n      reverse: isSet(object.reverse) ? Boolean(object.reverse) : false\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n    message.offset !== undefined && (obj.offset = (message.offset || BigInt(\"0\")).toString());\n    message.limit !== undefined && (obj.limit = (message.limit || BigInt(\"0\")).toString());\n    message.countTotal !== undefined && (obj.countTotal = message.countTotal);\n    message.reverse !== undefined && (obj.reverse = message.reverse);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$key, _object$countTotal, _object$reverse;\n    const message = createBasePageRequest();\n    message.key = (_object$key = object.key) !== null && _object$key !== void 0 ? _object$key : new Uint8Array();\n    message.offset = object.offset !== undefined && object.offset !== null ? BigInt(object.offset.toString()) : BigInt(\"0\");\n    message.limit = object.limit !== undefined && object.limit !== null ? BigInt(object.limit.toString()) : BigInt(\"0\");\n    message.countTotal = (_object$countTotal = object.countTotal) !== null && _object$countTotal !== void 0 ? _object$countTotal : false;\n    message.reverse = (_object$reverse = object.reverse) !== null && _object$reverse !== void 0 ? _object$reverse : false;\n    return message;\n  }\n};\nfunction createBasePageResponse() {\n  return {\n    nextKey: new Uint8Array(),\n    total: BigInt(\"0\")\n  };\n}\nexport const PageResponse = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.nextKey.length !== 0) {\n      writer.uint32(10).bytes(message.nextKey);\n    }\n    if (message.total !== BigInt(0)) {\n      writer.uint32(16).uint64(Long.fromString(message.total.toString()));\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBasePageResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.nextKey = reader.bytes();\n          break;\n        case 2:\n          message.total = BigInt(reader.uint64().toString());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      nextKey: isSet(object.nextKey) ? bytesFromBase64(object.nextKey) : new Uint8Array(),\n      total: isSet(object.total) ? BigInt(object.total.toString()) : BigInt(\"0\")\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.nextKey !== undefined && (obj.nextKey = base64FromBytes(message.nextKey !== undefined ? message.nextKey : new Uint8Array()));\n    message.total !== undefined && (obj.total = (message.total || BigInt(\"0\")).toString());\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$nextKey;\n    const message = createBasePageResponse();\n    message.nextKey = (_object$nextKey = object.nextKey) !== null && _object$nextKey !== void 0 ? _object$nextKey : new Uint8Array();\n    message.total = object.total !== undefined && object.total !== null ? BigInt(object.total.toString()) : BigInt(\"0\");\n    return message;\n  }\n};"],
  "mappings": "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",
  "names": ["Long"]
}
