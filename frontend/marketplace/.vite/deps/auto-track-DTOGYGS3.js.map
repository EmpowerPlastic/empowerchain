{
  "version": 3,
  "sources": ["../../node_modules/@segment/analytics-next/src/core/auto-track.ts"],
  "sourcesContent": ["import { Analytics } from './analytics'\nimport { EventProperties, Options } from './events'\nimport { pTimeout } from './callback'\n\n// Check if a user is opening the link in a new tab\nfunction userNewTab(event: Event): boolean {\n  const typedEvent = event as Event & {\n    ctrlKey: boolean\n    shiftKey: boolean\n    metaKey: boolean\n    button: number\n  }\n  if (\n    typedEvent.ctrlKey ||\n    typedEvent.shiftKey ||\n    typedEvent.metaKey ||\n    (typedEvent.button && typedEvent.button == 1)\n  ) {\n    return true\n  }\n  return false\n}\n\n// Check if the link opens in new tab\nfunction linkNewTab(element: HTMLAnchorElement, href: string | null): boolean {\n  if (element.target === '_blank' && href) {\n    return true\n  }\n  return false\n}\n\nexport interface JQueryShim<TElement = HTMLElement> {\n  toArray(): TElement[]\n}\n\nexport function link(\n  this: Analytics,\n  links: Element | Array<Element> | JQueryShim | null,\n  event: string | Function,\n  properties?: EventProperties | Function,\n  options?: Options\n): Analytics {\n  let elements: Array<Element> = []\n  // always arrays, handles jquery\n  if (!links) {\n    return this\n  }\n  if (links instanceof Element) {\n    elements = [links]\n  } else if ('toArray' in links) {\n    elements = links.toArray()\n  } else {\n    elements = links\n  }\n\n  elements.forEach((el: Element) => {\n    el.addEventListener(\n      'click',\n      (elementEvent: Event) => {\n        const ev = event instanceof Function ? event(el) : event\n        const props =\n          properties instanceof Function ? properties(el) : properties\n        const href =\n          el.getAttribute('href') ||\n          el.getAttributeNS('http://www.w3.org/1999/xlink', 'href') ||\n          el.getAttribute('xlink:href') ||\n          el.getElementsByTagName('a')[0]?.getAttribute('href')\n\n        const trackEvent = pTimeout(\n          this.track(ev, props, options ?? {}),\n          this.settings.timeout ?? 500\n        )\n\n        if (\n          !linkNewTab(el as HTMLAnchorElement, href) &&\n          !userNewTab(elementEvent)\n        ) {\n          if (href) {\n            elementEvent.preventDefault\n              ? elementEvent.preventDefault()\n              : (elementEvent.returnValue = false)\n            trackEvent\n              .catch(console.error)\n              .then(() => {\n                window.location.href = href\n              })\n              .catch(console.error)\n          }\n        }\n      },\n      false\n    )\n  })\n\n  return this\n}\n\nexport type LinkArgs = Parameters<typeof link>\n\nexport function form(\n  this: Analytics,\n  forms: HTMLFormElement | Array<HTMLFormElement> | null,\n  event: string | Function,\n  properties?: EventProperties | Function,\n  options?: Options\n): Analytics {\n  // always arrays, handles jquery\n  if (!forms) return this\n  if (forms instanceof HTMLFormElement) forms = [forms]\n\n  const elements = forms\n\n  elements.forEach((el) => {\n    if (!(el instanceof Element))\n      throw new TypeError('Must pass HTMLElement to trackForm/trackSubmit.')\n    const handler = (elementEvent: Event): void => {\n      elementEvent.preventDefault\n        ? elementEvent.preventDefault()\n        : (elementEvent.returnValue = false)\n\n      const ev = event instanceof Function ? event(el) : event\n      const props = properties instanceof Function ? properties(el) : properties\n\n      const trackEvent = pTimeout(\n        this.track(ev, props, options ?? {}),\n        this.settings.timeout ?? 500\n      )\n\n      trackEvent\n        .catch(console.error)\n        .then(() => {\n          el.submit()\n        })\n        .catch(console.error)\n    }\n\n    // Support the events happening through jQuery or Zepto instead of through\n    // the normal DOM API, because `el.submit` doesn't bubble up events...\n\n    const $ = (window as any).jQuery || (window as any).Zepto\n    if ($) {\n      $(el).submit(handler)\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      el.addEventListener('submit', handler, false)\n    }\n  })\n\n  return this\n}\n\nexport type FormArgs = Parameters<typeof form>\n"],
  "mappings": ";;;;;;;AAKA,SAAS,WAAW,OAAY;AAC9B,MAAM,aAAa;AAMnB,MACE,WAAW,WACX,WAAW,YACX,WAAW,WACV,WAAW,UAAU,WAAW,UAAU,GAC3C;AACA,WAAO;;AAET,SAAO;AACT;AAGA,SAAS,WAAW,SAA4B,MAAmB;AACjE,MAAI,QAAQ,WAAW,YAAY,MAAM;AACvC,WAAO;;AAET,SAAO;AACT;AAMM,SAAU,KAEd,OACA,OACA,YACA,SAAiB;AALnB,MAAA,QAAA;AAOE,MAAI,WAA2B,CAAA;AAE/B,MAAI,CAAC,OAAO;AACV,WAAO;;AAET,MAAI,iBAAiB,SAAS;AAC5B,eAAW,CAAC,KAAK;aACR,aAAa,OAAO;AAC7B,eAAW,MAAM,QAAO;SACnB;AACL,eAAW;;AAGb,WAAS,QAAQ,SAAC,IAAW;AAC3B,OAAG,iBACD,SACA,SAAC,cAAmB;;AAClB,UAAM,KAAK,iBAAiB,WAAW,MAAM,EAAE,IAAI;AACnD,UAAM,QACJ,sBAAsB,WAAW,WAAW,EAAE,IAAI;AACpD,UAAM,OACJ,GAAG,aAAa,MAAM,KACtB,GAAG,eAAe,gCAAgC,MAAM,KACxD,GAAG,aAAa,YAAY,OAC5B,KAAA,GAAG,qBAAqB,GAAG,EAAE,CAAC,OAAC,QAAA,OAAA,SAAA,SAAA,GAAE,aAAa,MAAM;AAEtD,UAAM,aAAa,SACjB,MAAK,MAAM,IAAI,OAAO,YAAO,QAAP,YAAO,SAAP,UAAW,CAAA,CAAE,IACnC,KAAA,MAAK,SAAS,aAAO,QAAA,OAAA,SAAA,KAAI,GAAG;AAG9B,UACE,CAAC,WAAW,IAAyB,IAAI,KACzC,CAAC,WAAW,YAAY,GACxB;AACA,YAAI,MAAM;AACR,uBAAa,iBACT,aAAa,eAAc,IAC1B,aAAa,cAAc;AAChC,qBACG,MAAM,QAAQ,KAAK,EACnB,KAAK,WAAA;AACJ,mBAAO,SAAS,OAAO;UACzB,CAAC,EACA,MAAM,QAAQ,KAAK;;;IAG5B,GACA,KAAK;EAET,CAAC;AAED,SAAO;AACT;AAIM,SAAU,KAEd,OACA,OACA,YACA,SAAiB;AALnB,MAAA,QAAA;AAQE,MAAI,CAAC;AAAO,WAAO;AACnB,MAAI,iBAAiB;AAAiB,YAAQ,CAAC,KAAK;AAEpD,MAAM,WAAW;AAEjB,WAAS,QAAQ,SAAC,IAAE;AAClB,QAAI,EAAE,cAAc;AAClB,YAAM,IAAI,UAAU,iDAAiD;AACvE,QAAM,UAAU,SAAC,cAAmB;;AAClC,mBAAa,iBACT,aAAa,eAAc,IAC1B,aAAa,cAAc;AAEhC,UAAM,KAAK,iBAAiB,WAAW,MAAM,EAAE,IAAI;AACnD,UAAM,QAAQ,sBAAsB,WAAW,WAAW,EAAE,IAAI;AAEhE,UAAM,aAAa,SACjB,MAAK,MAAM,IAAI,OAAO,YAAO,QAAP,YAAO,SAAP,UAAW,CAAA,CAAE,IACnC,KAAA,MAAK,SAAS,aAAO,QAAA,OAAA,SAAA,KAAI,GAAG;AAG9B,iBACG,MAAM,QAAQ,KAAK,EACnB,KAAK,WAAA;AACJ,WAAG,OAAM;MACX,CAAC,EACA,MAAM,QAAQ,KAAK;IACxB;AAKA,QAAM,IAAK,OAAe,UAAW,OAAe;AACpD,QAAI,GAAG;AACL,QAAE,EAAE,EAAE,OAAO,OAAO;WACf;AAEL,SAAG,iBAAiB,UAAU,SAAS,KAAK;;EAEhD,CAAC;AAED,SAAO;AACT;",
  "names": []
}
