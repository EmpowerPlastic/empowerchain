{
  "version": 3,
  "sources": ["../../node_modules/@segment/analytics-next/src/plugins/schema-filter/index.ts"],
  "sourcesContent": ["import { LegacySettings } from '../../browser'\nimport { Context } from '../../core/context'\nimport { PlanEvent, TrackPlan } from '../../core/events/interfaces'\nimport { Plugin } from '../../core/plugin'\nimport { isPlanEventEnabled } from '../../lib/is-plan-event-enabled'\nimport { RemotePlugin } from '../remote-loader'\n\nfunction disabledActionDestinations(\n  plan: PlanEvent | undefined,\n  settings: LegacySettings\n): { [destination: string]: string[] } {\n  if (!plan || !Object.keys(plan)) {\n    return {}\n  }\n\n  const disabledIntegrations = plan.integrations\n    ? Object.keys(plan.integrations).filter(\n        (i) => plan.integrations![i] === false\n      )\n    : []\n\n  // This accounts for cases like Fullstory, where the settings.integrations\n  // contains a \"Fullstory\" object but settings.remotePlugins contains \"Fullstory (Actions)\"\n  const disabledRemotePlugins: string[] = []\n  ;(settings.remotePlugins ?? []).forEach((p: RemotePlugin) => {\n    disabledIntegrations.forEach((int) => {\n      if (p.name.includes(int) || int.includes(p.name)) {\n        disabledRemotePlugins.push(p.name)\n      }\n    })\n  })\n\n  return (settings.remotePlugins ?? []).reduce((acc, p) => {\n    if (p.settings['subscriptions']) {\n      if (disabledRemotePlugins.includes(p.name)) {\n        // @ts-expect-error element implicitly has an 'any' type because p.settings is a JSONObject\n        p.settings['subscriptions'].forEach(\n          // @ts-expect-error parameter 'sub' implicitly has an 'any' type\n          (sub) => (acc[`${p.name} ${sub.partnerAction}`] = false)\n        )\n      }\n    }\n    return acc\n  }, {})\n}\n\nexport function schemaFilter(\n  track: TrackPlan | undefined,\n  settings: LegacySettings\n): Plugin {\n  function filter(ctx: Context): Context {\n    const plan = track\n    const ev = ctx.event.event\n\n    if (plan && ev) {\n      const planEvent = plan[ev]\n      if (!isPlanEventEnabled(plan, planEvent)) {\n        ctx.updateEvent('integrations', {\n          ...ctx.event.integrations,\n          All: false,\n          'Segment.io': true,\n        })\n        return ctx\n      } else {\n        const disabledActions = disabledActionDestinations(planEvent, settings)\n\n        ctx.updateEvent('integrations', {\n          ...ctx.event.integrations,\n          ...planEvent?.integrations,\n          ...disabledActions,\n        })\n      }\n    }\n\n    return ctx\n  }\n\n  return {\n    name: 'Schema Filter',\n    version: '0.1.0',\n    isLoaded: () => true,\n    load: () => Promise.resolve(),\n    type: 'before',\n    page: filter,\n    alias: filter,\n    track: filter,\n    identify: filter,\n    group: filter,\n  }\n}\n"],
  "mappings": ";;;;;;;;;AAOA,SAAS,2BACP,MACA,UAAwB;;AAExB,MAAI,CAAC,QAAQ,CAAC,OAAO,KAAK,IAAI,GAAG;AAC/B,WAAO,CAAA;;AAGT,MAAM,uBAAuB,KAAK,eAC9B,OAAO,KAAK,KAAK,YAAY,EAAE,OAC7B,SAAC,GAAC;AAAK,WAAA,KAAK,aAAc,CAAC,MAAM;EAA1B,CAA+B,IAExC,CAAA;AAIJ,MAAM,wBAAkC,CAAA;AACvC,IAAC,KAAA,SAAS,mBAAa,QAAA,OAAA,SAAA,KAAI,CAAA,GAAI,QAAQ,SAAC,GAAe;AACtD,yBAAqB,QAAQ,SAAC,KAAG;AAC/B,UAAI,EAAE,KAAK,SAAS,GAAG,KAAK,IAAI,SAAS,EAAE,IAAI,GAAG;AAChD,8BAAsB,KAAK,EAAE,IAAI;;IAErC,CAAC;EACH,CAAC;AAED,WAAQ,KAAA,SAAS,mBAAa,QAAA,OAAA,SAAA,KAAI,CAAA,GAAI,OAAO,SAAC,KAAK,GAAC;AAClD,QAAI,EAAE,SAAS,eAAe,GAAG;AAC/B,UAAI,sBAAsB,SAAS,EAAE,IAAI,GAAG;AAE1C,UAAE,SAAS,eAAe,EAAE;;UAE1B,SAAC,KAAG;AAAK,mBAAC,IAAI,GAAA,OAAG,EAAE,MAAI,GAAA,EAAA,OAAI,IAAI,aAAa,CAAE,IAAI;UAAzC;QAA+C;;;AAI9D,WAAO;EACT,GAAG,CAAA,CAAE;AACP;AAEM,SAAU,aACd,OACA,UAAwB;AAExB,WAAS,OAAO,KAAY;AAC1B,QAAM,OAAO;AACb,QAAM,KAAK,IAAI,MAAM;AAErB,QAAI,QAAQ,IAAI;AACd,UAAM,YAAY,KAAK,EAAE;AACzB,UAAI,CAAC,mBAAmB,MAAM,SAAS,GAAG;AACxC,YAAI,YAAY,gBAAc,SAAA,SAAA,CAAA,GACzB,IAAI,MAAM,YAAY,GAAA,EACzB,KAAK,OACL,cAAc,KAAI,CAAA,CAAA;AAEpB,eAAO;aACF;AACL,YAAM,kBAAkB,2BAA2B,WAAW,QAAQ;AAEtE,YAAI,YAAY,gBAAc,SAAA,SAAA,SAAA,CAAA,GACzB,IAAI,MAAM,YAAY,GACtB,cAAS,QAAT,cAAS,SAAA,SAAT,UAAW,YAAY,GACvB,eAAe,CAAA;;;AAKxB,WAAO;EACT;AAEA,SAAO;IACL,MAAM;IACN,SAAS;IACT,UAAU,WAAA;AAAM,aAAA;IAAA;IAChB,MAAM,WAAA;AAAM,aAAA,QAAQ,QAAO;IAAf;IACZ,MAAM;IACN,MAAM;IACN,OAAO;IACP,OAAO;IACP,UAAU;IACV,OAAO;;AAEX;",
  "names": []
}
