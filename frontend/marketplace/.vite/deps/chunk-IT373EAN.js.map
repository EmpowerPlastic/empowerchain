{
  "version": 3,
  "sources": ["../../node_modules/@empower-plastic/empowerjs/module/codegen/cosmos/slashing/v1beta1/slashing.js"],
  "sourcesContent": ["import { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nimport * as _m0 from \"protobufjs/minimal\";\nimport { Long, toTimestamp, fromTimestamp, isSet, fromJsonTimestamp, bytesFromBase64, base64FromBytes } from \"../../../helpers\";\n/**\n * ValidatorSigningInfo defines a validator's signing info for monitoring their\n * liveness activity.\n */\n\n/**\n * ValidatorSigningInfo defines a validator's signing info for monitoring their\n * liveness activity.\n */\n\n/** Params represents the parameters used for by the slashing module. */\n\n/** Params represents the parameters used for by the slashing module. */\n\nfunction createBaseValidatorSigningInfo() {\n  return {\n    address: \"\",\n    startHeight: BigInt(\"0\"),\n    indexOffset: BigInt(\"0\"),\n    jailedUntil: undefined,\n    tombstoned: false,\n    missedBlocksCounter: BigInt(\"0\")\n  };\n}\nexport const ValidatorSigningInfo = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.address !== \"\") {\n      writer.uint32(10).string(message.address);\n    }\n    if (message.startHeight !== BigInt(0)) {\n      writer.uint32(16).int64(Long.fromString(message.startHeight.toString()));\n    }\n    if (message.indexOffset !== BigInt(0)) {\n      writer.uint32(24).int64(Long.fromString(message.indexOffset.toString()));\n    }\n    if (message.jailedUntil !== undefined) {\n      Timestamp.encode(toTimestamp(message.jailedUntil), writer.uint32(34).fork()).ldelim();\n    }\n    if (message.tombstoned === true) {\n      writer.uint32(40).bool(message.tombstoned);\n    }\n    if (message.missedBlocksCounter !== BigInt(0)) {\n      writer.uint32(48).int64(Long.fromString(message.missedBlocksCounter.toString()));\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseValidatorSigningInfo();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.address = reader.string();\n          break;\n        case 2:\n          message.startHeight = BigInt(reader.int64().toString());\n          break;\n        case 3:\n          message.indexOffset = BigInt(reader.int64().toString());\n          break;\n        case 4:\n          message.jailedUntil = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n          break;\n        case 5:\n          message.tombstoned = reader.bool();\n          break;\n        case 6:\n          message.missedBlocksCounter = BigInt(reader.int64().toString());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      address: isSet(object.address) ? String(object.address) : \"\",\n      startHeight: isSet(object.startHeight) ? BigInt(object.startHeight.toString()) : BigInt(\"0\"),\n      indexOffset: isSet(object.indexOffset) ? BigInt(object.indexOffset.toString()) : BigInt(\"0\"),\n      jailedUntil: isSet(object.jailedUntil) ? fromJsonTimestamp(object.jailedUntil) : undefined,\n      tombstoned: isSet(object.tombstoned) ? Boolean(object.tombstoned) : false,\n      missedBlocksCounter: isSet(object.missedBlocksCounter) ? BigInt(object.missedBlocksCounter.toString()) : BigInt(\"0\")\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.address !== undefined && (obj.address = message.address);\n    message.startHeight !== undefined && (obj.startHeight = (message.startHeight || BigInt(\"0\")).toString());\n    message.indexOffset !== undefined && (obj.indexOffset = (message.indexOffset || BigInt(\"0\")).toString());\n    message.jailedUntil !== undefined && (obj.jailedUntil = message.jailedUntil.toISOString());\n    message.tombstoned !== undefined && (obj.tombstoned = message.tombstoned);\n    message.missedBlocksCounter !== undefined && (obj.missedBlocksCounter = (message.missedBlocksCounter || BigInt(\"0\")).toString());\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$address, _object$jailedUntil, _object$tombstoned;\n    const message = createBaseValidatorSigningInfo();\n    message.address = (_object$address = object.address) !== null && _object$address !== void 0 ? _object$address : \"\";\n    message.startHeight = object.startHeight !== undefined && object.startHeight !== null ? BigInt(object.startHeight.toString()) : BigInt(\"0\");\n    message.indexOffset = object.indexOffset !== undefined && object.indexOffset !== null ? BigInt(object.indexOffset.toString()) : BigInt(\"0\");\n    message.jailedUntil = (_object$jailedUntil = object.jailedUntil) !== null && _object$jailedUntil !== void 0 ? _object$jailedUntil : undefined;\n    message.tombstoned = (_object$tombstoned = object.tombstoned) !== null && _object$tombstoned !== void 0 ? _object$tombstoned : false;\n    message.missedBlocksCounter = object.missedBlocksCounter !== undefined && object.missedBlocksCounter !== null ? BigInt(object.missedBlocksCounter.toString()) : BigInt(\"0\");\n    return message;\n  }\n};\nfunction createBaseParams() {\n  return {\n    signedBlocksWindow: BigInt(\"0\"),\n    minSignedPerWindow: new Uint8Array(),\n    downtimeJailDuration: undefined,\n    slashFractionDoubleSign: new Uint8Array(),\n    slashFractionDowntime: new Uint8Array()\n  };\n}\nexport const Params = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.signedBlocksWindow !== BigInt(0)) {\n      writer.uint32(8).int64(Long.fromString(message.signedBlocksWindow.toString()));\n    }\n    if (message.minSignedPerWindow.length !== 0) {\n      writer.uint32(18).bytes(message.minSignedPerWindow);\n    }\n    if (message.downtimeJailDuration !== undefined) {\n      Duration.encode(message.downtimeJailDuration, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.slashFractionDoubleSign.length !== 0) {\n      writer.uint32(34).bytes(message.slashFractionDoubleSign);\n    }\n    if (message.slashFractionDowntime.length !== 0) {\n      writer.uint32(42).bytes(message.slashFractionDowntime);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseParams();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.signedBlocksWindow = BigInt(reader.int64().toString());\n          break;\n        case 2:\n          message.minSignedPerWindow = reader.bytes();\n          break;\n        case 3:\n          message.downtimeJailDuration = Duration.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.slashFractionDoubleSign = reader.bytes();\n          break;\n        case 5:\n          message.slashFractionDowntime = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      signedBlocksWindow: isSet(object.signedBlocksWindow) ? BigInt(object.signedBlocksWindow.toString()) : BigInt(\"0\"),\n      minSignedPerWindow: isSet(object.minSignedPerWindow) ? bytesFromBase64(object.minSignedPerWindow) : new Uint8Array(),\n      downtimeJailDuration: isSet(object.downtimeJailDuration) ? Duration.fromJSON(object.downtimeJailDuration) : undefined,\n      slashFractionDoubleSign: isSet(object.slashFractionDoubleSign) ? bytesFromBase64(object.slashFractionDoubleSign) : new Uint8Array(),\n      slashFractionDowntime: isSet(object.slashFractionDowntime) ? bytesFromBase64(object.slashFractionDowntime) : new Uint8Array()\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.signedBlocksWindow !== undefined && (obj.signedBlocksWindow = (message.signedBlocksWindow || BigInt(\"0\")).toString());\n    message.minSignedPerWindow !== undefined && (obj.minSignedPerWindow = base64FromBytes(message.minSignedPerWindow !== undefined ? message.minSignedPerWindow : new Uint8Array()));\n    message.downtimeJailDuration !== undefined && (obj.downtimeJailDuration = message.downtimeJailDuration ? Duration.toJSON(message.downtimeJailDuration) : undefined);\n    message.slashFractionDoubleSign !== undefined && (obj.slashFractionDoubleSign = base64FromBytes(message.slashFractionDoubleSign !== undefined ? message.slashFractionDoubleSign : new Uint8Array()));\n    message.slashFractionDowntime !== undefined && (obj.slashFractionDowntime = base64FromBytes(message.slashFractionDowntime !== undefined ? message.slashFractionDowntime : new Uint8Array()));\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$minSignedPerW, _object$slashFraction, _object$slashFraction2;\n    const message = createBaseParams();\n    message.signedBlocksWindow = object.signedBlocksWindow !== undefined && object.signedBlocksWindow !== null ? BigInt(object.signedBlocksWindow.toString()) : BigInt(\"0\");\n    message.minSignedPerWindow = (_object$minSignedPerW = object.minSignedPerWindow) !== null && _object$minSignedPerW !== void 0 ? _object$minSignedPerW : new Uint8Array();\n    message.downtimeJailDuration = object.downtimeJailDuration !== undefined && object.downtimeJailDuration !== null ? Duration.fromPartial(object.downtimeJailDuration) : undefined;\n    message.slashFractionDoubleSign = (_object$slashFraction = object.slashFractionDoubleSign) !== null && _object$slashFraction !== void 0 ? _object$slashFraction : new Uint8Array();\n    message.slashFractionDowntime = (_object$slashFraction2 = object.slashFractionDowntime) !== null && _object$slashFraction2 !== void 0 ? _object$slashFraction2 : new Uint8Array();\n    return message;\n  }\n};"],
  "mappings": "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",
  "names": ["Long"]
}
