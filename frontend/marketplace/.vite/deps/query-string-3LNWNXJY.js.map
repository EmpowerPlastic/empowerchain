{
  "version": 3,
  "sources": ["../../node_modules/@segment/analytics-next/src/core/query-string/pickPrefix.ts", "../../node_modules/@segment/analytics-next/src/core/query-string/index.ts"],
  "sourcesContent": ["import { QueryStringParams } from '.'\n\n/**\n * Returns an object containing only the properties prefixed by the input\n * string.\n * Ex: prefix('ajs_traits_', { ajs_traits_address: '123 St' })\n * will return { address: '123 St' }\n **/\nexport function pickPrefix(\n  prefix: string,\n  object: QueryStringParams\n): QueryStringParams {\n  return Object.keys(object).reduce((acc: QueryStringParams, key: string) => {\n    if (key.startsWith(prefix)) {\n      const field = key.substr(prefix.length)\n      acc[field] = object[key]!\n    }\n    return acc\n  }, {})\n}\n", "import { pickPrefix } from './pickPrefix'\nimport { gracefulDecodeURIComponent } from './gracefulDecodeURIComponent'\nimport { Analytics } from '../analytics'\nimport { Context } from '../context'\nimport { isPlainObject } from '@segment/analytics-core'\n\nexport interface QueryStringParams {\n  [key: string]: string | null\n}\n\nexport function queryString(\n  analytics: Analytics,\n  query: string\n): Promise<Context[]> {\n  const a = document.createElement('a')\n  a.href = query\n  const parsed = a.search.slice(1)\n  const params = parsed.split('&').reduce((acc: QueryStringParams, str) => {\n    const [k, v] = str.split('=')\n    acc[k] = gracefulDecodeURIComponent(v)\n    return acc\n  }, {})\n\n  const calls = []\n\n  const { ajs_uid, ajs_event, ajs_aid } = params\n  const { aid: aidPattern = /.+/, uid: uidPattern = /.+/ } = isPlainObject(\n    analytics.options.useQueryString\n  )\n    ? analytics.options.useQueryString\n    : {}\n\n  if (ajs_aid) {\n    const anonId = Array.isArray(params.ajs_aid)\n      ? params.ajs_aid[0]\n      : params.ajs_aid\n\n    if (aidPattern.test(anonId)) {\n      analytics.setAnonymousId(anonId)\n    }\n  }\n\n  if (ajs_uid) {\n    const uid = Array.isArray(params.ajs_uid)\n      ? params.ajs_uid[0]\n      : params.ajs_uid\n\n    if (uidPattern.test(uid)) {\n      const traits = pickPrefix('ajs_trait_', params)\n\n      calls.push(analytics.identify(uid, traits))\n    }\n  }\n\n  if (ajs_event) {\n    const event = Array.isArray(params.ajs_event)\n      ? params.ajs_event[0]\n      : params.ajs_event\n    const props = pickPrefix('ajs_prop_', params)\n    calls.push(analytics.track(event, props))\n  }\n\n  return Promise.all(calls)\n}\n"],
  "mappings": ";;;;;;;;;;AAQM,SAAU,WACd,QACA,QAAyB;AAEzB,SAAO,OAAO,KAAK,MAAM,EAAE,OAAO,SAAC,KAAwB,KAAW;AACpE,QAAI,IAAI,WAAW,MAAM,GAAG;AAC1B,UAAM,QAAQ,IAAI,OAAO,OAAO,MAAM;AACtC,UAAI,KAAK,IAAI,OAAO,GAAG;;AAEzB,WAAO;EACT,GAAG,CAAA,CAAE;AACP;;;ACTM,SAAU,YACd,WACA,OAAa;AAEb,MAAM,IAAI,SAAS,cAAc,GAAG;AACpC,IAAE,OAAO;AACT,MAAM,SAAS,EAAE,OAAO,MAAM,CAAC;AAC/B,MAAM,SAAS,OAAO,MAAM,GAAG,EAAE,OAAO,SAAC,KAAwB,KAAG;AAC5D,QAAAA,MAAS,IAAI,MAAM,GAAG,GAArB,IAACA,IAAA,CAAA,GAAE,IAACA,IAAA,CAAA;AACX,QAAI,CAAC,IAAI,2BAA2B,CAAC;AACrC,WAAO;EACT,GAAG,CAAA,CAAE;AAEL,MAAM,QAAQ,CAAA;AAEN,MAAA,UAAgC,OAAM,SAA7B,YAAuB,OAAM,WAAlB,UAAY,OAAM;AACxC,MAAA,KAAqD,cACzD,UAAU,QAAQ,cAAc,IAE9B,UAAU,QAAQ,iBAClB,CAAA,GAJI,KAAA,GAAA,KAAK,aAAU,OAAA,SAAG,OAAI,IAAE,KAAA,GAAA,KAAK,aAAU,OAAA,SAAG,OAAI;AAMtD,MAAI,SAAS;AACX,QAAM,SAAS,MAAM,QAAQ,OAAO,OAAO,IACvC,OAAO,QAAQ,CAAC,IAChB,OAAO;AAEX,QAAI,WAAW,KAAK,MAAM,GAAG;AAC3B,gBAAU,eAAe,MAAM;;;AAInC,MAAI,SAAS;AACX,QAAM,MAAM,MAAM,QAAQ,OAAO,OAAO,IACpC,OAAO,QAAQ,CAAC,IAChB,OAAO;AAEX,QAAI,WAAW,KAAK,GAAG,GAAG;AACxB,UAAM,SAAS,WAAW,cAAc,MAAM;AAE9C,YAAM,KAAK,UAAU,SAAS,KAAK,MAAM,CAAC;;;AAI9C,MAAI,WAAW;AACb,QAAM,UAAQ,MAAM,QAAQ,OAAO,SAAS,IACxC,OAAO,UAAU,CAAC,IAClB,OAAO;AACX,QAAM,QAAQ,WAAW,aAAa,MAAM;AAC5C,UAAM,KAAK,UAAU,MAAM,SAAO,KAAK,CAAC;;AAG1C,SAAO,QAAQ,IAAI,KAAK;AAC1B;",
  "names": ["_a"]
}
