{
  "version": 3,
  "sources": ["../../node_modules/@empower-plastic/empowerjs/module/codegen/cosmos/auth/v1beta1/auth.js"],
  "sourcesContent": ["import { Any } from \"../../../google/protobuf/any\";\nimport * as _m0 from \"protobufjs/minimal\";\nimport { Long, isSet, bytesFromBase64, base64FromBytes } from \"../../../helpers\";\n/**\n * BaseAccount defines a base account type. It contains all the necessary fields\n * for basic account functionality. Any custom account type should extend this\n * type for additional functionality (e.g. vesting).\n */\n\n/**\n * BaseAccount defines a base account type. It contains all the necessary fields\n * for basic account functionality. Any custom account type should extend this\n * type for additional functionality (e.g. vesting).\n */\n\n/** ModuleAccount defines an account for modules that holds coins on a pool. */\n\n/** ModuleAccount defines an account for modules that holds coins on a pool. */\n\n/**\n * ModuleCredential represents a unclaimable pubkey for base accounts controlled by modules.\n * \n * Since: cosmos-sdk 0.47\n */\n\n/**\n * ModuleCredential represents a unclaimable pubkey for base accounts controlled by modules.\n * \n * Since: cosmos-sdk 0.47\n */\n\n/** Params defines the parameters for the auth module. */\n\n/** Params defines the parameters for the auth module. */\n\nfunction createBaseBaseAccount() {\n  return {\n    address: \"\",\n    pubKey: undefined,\n    accountNumber: BigInt(\"0\"),\n    sequence: BigInt(\"0\")\n  };\n}\nexport const BaseAccount = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.address !== \"\") {\n      writer.uint32(10).string(message.address);\n    }\n    if (message.pubKey !== undefined) {\n      Any.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.accountNumber !== BigInt(0)) {\n      writer.uint32(24).uint64(Long.fromString(message.accountNumber.toString()));\n    }\n    if (message.sequence !== BigInt(0)) {\n      writer.uint32(32).uint64(Long.fromString(message.sequence.toString()));\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseBaseAccount();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.address = reader.string();\n          break;\n        case 2:\n          message.pubKey = Any.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.accountNumber = BigInt(reader.uint64().toString());\n          break;\n        case 4:\n          message.sequence = BigInt(reader.uint64().toString());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      address: isSet(object.address) ? String(object.address) : \"\",\n      pubKey: isSet(object.pubKey) ? Any.fromJSON(object.pubKey) : undefined,\n      accountNumber: isSet(object.accountNumber) ? BigInt(object.accountNumber.toString()) : BigInt(\"0\"),\n      sequence: isSet(object.sequence) ? BigInt(object.sequence.toString()) : BigInt(\"0\")\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.address !== undefined && (obj.address = message.address);\n    message.pubKey !== undefined && (obj.pubKey = message.pubKey ? Any.toJSON(message.pubKey) : undefined);\n    message.accountNumber !== undefined && (obj.accountNumber = (message.accountNumber || BigInt(\"0\")).toString());\n    message.sequence !== undefined && (obj.sequence = (message.sequence || BigInt(\"0\")).toString());\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$address;\n    const message = createBaseBaseAccount();\n    message.address = (_object$address = object.address) !== null && _object$address !== void 0 ? _object$address : \"\";\n    message.pubKey = object.pubKey !== undefined && object.pubKey !== null ? Any.fromPartial(object.pubKey) : undefined;\n    message.accountNumber = object.accountNumber !== undefined && object.accountNumber !== null ? BigInt(object.accountNumber.toString()) : BigInt(\"0\");\n    message.sequence = object.sequence !== undefined && object.sequence !== null ? BigInt(object.sequence.toString()) : BigInt(\"0\");\n    return message;\n  }\n};\nfunction createBaseModuleAccount() {\n  return {\n    baseAccount: undefined,\n    name: \"\",\n    permissions: []\n  };\n}\nexport const ModuleAccount = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.baseAccount !== undefined) {\n      BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.name !== \"\") {\n      writer.uint32(18).string(message.name);\n    }\n    for (const v of message.permissions) {\n      writer.uint32(26).string(v);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseModuleAccount();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.name = reader.string();\n          break;\n        case 3:\n          message.permissions.push(reader.string());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      baseAccount: isSet(object.baseAccount) ? BaseAccount.fromJSON(object.baseAccount) : undefined,\n      name: isSet(object.name) ? String(object.name) : \"\",\n      permissions: Array.isArray(object === null || object === void 0 ? void 0 : object.permissions) ? object.permissions.map(e => String(e)) : []\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.baseAccount !== undefined && (obj.baseAccount = message.baseAccount ? BaseAccount.toJSON(message.baseAccount) : undefined);\n    message.name !== undefined && (obj.name = message.name);\n    if (message.permissions) {\n      obj.permissions = message.permissions.map(e => e);\n    } else {\n      obj.permissions = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$name, _object$permissions;\n    const message = createBaseModuleAccount();\n    message.baseAccount = object.baseAccount !== undefined && object.baseAccount !== null ? BaseAccount.fromPartial(object.baseAccount) : undefined;\n    message.name = (_object$name = object.name) !== null && _object$name !== void 0 ? _object$name : \"\";\n    message.permissions = ((_object$permissions = object.permissions) === null || _object$permissions === void 0 ? void 0 : _object$permissions.map(e => e)) || [];\n    return message;\n  }\n};\nfunction createBaseModuleCredential() {\n  return {\n    moduleName: \"\",\n    derivationKeys: []\n  };\n}\nexport const ModuleCredential = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.moduleName !== \"\") {\n      writer.uint32(10).string(message.moduleName);\n    }\n    for (const v of message.derivationKeys) {\n      writer.uint32(18).bytes(v);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseModuleCredential();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.moduleName = reader.string();\n          break;\n        case 2:\n          message.derivationKeys.push(reader.bytes());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      moduleName: isSet(object.moduleName) ? String(object.moduleName) : \"\",\n      derivationKeys: Array.isArray(object === null || object === void 0 ? void 0 : object.derivationKeys) ? object.derivationKeys.map(e => bytesFromBase64(e)) : []\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.moduleName !== undefined && (obj.moduleName = message.moduleName);\n    if (message.derivationKeys) {\n      obj.derivationKeys = message.derivationKeys.map(e => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n    } else {\n      obj.derivationKeys = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$moduleName, _object$derivationKey;\n    const message = createBaseModuleCredential();\n    message.moduleName = (_object$moduleName = object.moduleName) !== null && _object$moduleName !== void 0 ? _object$moduleName : \"\";\n    message.derivationKeys = ((_object$derivationKey = object.derivationKeys) === null || _object$derivationKey === void 0 ? void 0 : _object$derivationKey.map(e => e)) || [];\n    return message;\n  }\n};\nfunction createBaseParams() {\n  return {\n    maxMemoCharacters: BigInt(\"0\"),\n    txSigLimit: BigInt(\"0\"),\n    txSizeCostPerByte: BigInt(\"0\"),\n    sigVerifyCostEd25519: BigInt(\"0\"),\n    sigVerifyCostSecp256k1: BigInt(\"0\")\n  };\n}\nexport const Params = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.maxMemoCharacters !== BigInt(0)) {\n      writer.uint32(8).uint64(Long.fromString(message.maxMemoCharacters.toString()));\n    }\n    if (message.txSigLimit !== BigInt(0)) {\n      writer.uint32(16).uint64(Long.fromString(message.txSigLimit.toString()));\n    }\n    if (message.txSizeCostPerByte !== BigInt(0)) {\n      writer.uint32(24).uint64(Long.fromString(message.txSizeCostPerByte.toString()));\n    }\n    if (message.sigVerifyCostEd25519 !== BigInt(0)) {\n      writer.uint32(32).uint64(Long.fromString(message.sigVerifyCostEd25519.toString()));\n    }\n    if (message.sigVerifyCostSecp256k1 !== BigInt(0)) {\n      writer.uint32(40).uint64(Long.fromString(message.sigVerifyCostSecp256k1.toString()));\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseParams();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.maxMemoCharacters = BigInt(reader.uint64().toString());\n          break;\n        case 2:\n          message.txSigLimit = BigInt(reader.uint64().toString());\n          break;\n        case 3:\n          message.txSizeCostPerByte = BigInt(reader.uint64().toString());\n          break;\n        case 4:\n          message.sigVerifyCostEd25519 = BigInt(reader.uint64().toString());\n          break;\n        case 5:\n          message.sigVerifyCostSecp256k1 = BigInt(reader.uint64().toString());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      maxMemoCharacters: isSet(object.maxMemoCharacters) ? BigInt(object.maxMemoCharacters.toString()) : BigInt(\"0\"),\n      txSigLimit: isSet(object.txSigLimit) ? BigInt(object.txSigLimit.toString()) : BigInt(\"0\"),\n      txSizeCostPerByte: isSet(object.txSizeCostPerByte) ? BigInt(object.txSizeCostPerByte.toString()) : BigInt(\"0\"),\n      sigVerifyCostEd25519: isSet(object.sigVerifyCostEd25519) ? BigInt(object.sigVerifyCostEd25519.toString()) : BigInt(\"0\"),\n      sigVerifyCostSecp256k1: isSet(object.sigVerifyCostSecp256k1) ? BigInt(object.sigVerifyCostSecp256k1.toString()) : BigInt(\"0\")\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.maxMemoCharacters !== undefined && (obj.maxMemoCharacters = (message.maxMemoCharacters || BigInt(\"0\")).toString());\n    message.txSigLimit !== undefined && (obj.txSigLimit = (message.txSigLimit || BigInt(\"0\")).toString());\n    message.txSizeCostPerByte !== undefined && (obj.txSizeCostPerByte = (message.txSizeCostPerByte || BigInt(\"0\")).toString());\n    message.sigVerifyCostEd25519 !== undefined && (obj.sigVerifyCostEd25519 = (message.sigVerifyCostEd25519 || BigInt(\"0\")).toString());\n    message.sigVerifyCostSecp256k1 !== undefined && (obj.sigVerifyCostSecp256k1 = (message.sigVerifyCostSecp256k1 || BigInt(\"0\")).toString());\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseParams();\n    message.maxMemoCharacters = object.maxMemoCharacters !== undefined && object.maxMemoCharacters !== null ? BigInt(object.maxMemoCharacters.toString()) : BigInt(\"0\");\n    message.txSigLimit = object.txSigLimit !== undefined && object.txSigLimit !== null ? BigInt(object.txSigLimit.toString()) : BigInt(\"0\");\n    message.txSizeCostPerByte = object.txSizeCostPerByte !== undefined && object.txSizeCostPerByte !== null ? BigInt(object.txSizeCostPerByte.toString()) : BigInt(\"0\");\n    message.sigVerifyCostEd25519 = object.sigVerifyCostEd25519 !== undefined && object.sigVerifyCostEd25519 !== null ? BigInt(object.sigVerifyCostEd25519.toString()) : BigInt(\"0\");\n    message.sigVerifyCostSecp256k1 = object.sigVerifyCostSecp256k1 !== undefined && object.sigVerifyCostSecp256k1 !== null ? BigInt(object.sigVerifyCostSecp256k1.toString()) : BigInt(\"0\");\n    return message;\n  }\n};"],
  "mappings": "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",
  "names": ["Long"]
}
