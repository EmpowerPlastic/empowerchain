{
  "version": 3,
  "sources": ["../../node_modules/@empower-plastic/empowerjs/module/codegen/cosmos/consensus/v1/tx.rpc.msg.js", "../../node_modules/@empower-plastic/empowerjs/module/codegen/cosmos/consensus/v1/tx.js"],
  "sourcesContent": ["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as _m0 from \"protobufjs/minimal\";\nimport { MsgUpdateParams, MsgUpdateParamsResponse } from \"./tx\";\n/** Msg defines the bank Msg service. */\n\nexport class MsgClientImpl {\n  constructor(rpc) {\n    _defineProperty(this, \"rpc\", void 0);\n    this.rpc = rpc;\n    this.updateParams = this.updateParams.bind(this);\n  }\n  updateParams(request) {\n    const data = MsgUpdateParams.encode(request).finish();\n    const promise = this.rpc.request(\"cosmos.consensus.v1.Msg\", \"UpdateParams\", data);\n    return promise.then(data => MsgUpdateParamsResponse.decode(new _m0.Reader(data)));\n  }\n}", "import { BlockParams, EvidenceParams, ValidatorParams } from \"../../../tendermint/types/params\";\nimport * as _m0 from \"protobufjs/minimal\";\nimport { isSet } from \"../../../helpers\";\n/** MsgUpdateParams is the Msg/UpdateParams request type. */\n\n/** MsgUpdateParams is the Msg/UpdateParams request type. */\n\n/**\n * MsgUpdateParamsResponse defines the response structure for executing a\n * MsgUpdateParams message.\n */\n\n/**\n * MsgUpdateParamsResponse defines the response structure for executing a\n * MsgUpdateParams message.\n */\n\nfunction createBaseMsgUpdateParams() {\n  return {\n    authority: \"\",\n    block: undefined,\n    evidence: undefined,\n    validator: undefined\n  };\n}\nexport const MsgUpdateParams = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.authority !== \"\") {\n      writer.uint32(10).string(message.authority);\n    }\n    if (message.block !== undefined) {\n      BlockParams.encode(message.block, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.evidence !== undefined) {\n      EvidenceParams.encode(message.evidence, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.validator !== undefined) {\n      ValidatorParams.encode(message.validator, writer.uint32(34).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateParams();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.authority = reader.string();\n          break;\n        case 2:\n          message.block = BlockParams.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.evidence = EvidenceParams.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.validator = ValidatorParams.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      authority: isSet(object.authority) ? String(object.authority) : \"\",\n      block: isSet(object.block) ? BlockParams.fromJSON(object.block) : undefined,\n      evidence: isSet(object.evidence) ? EvidenceParams.fromJSON(object.evidence) : undefined,\n      validator: isSet(object.validator) ? ValidatorParams.fromJSON(object.validator) : undefined\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.authority !== undefined && (obj.authority = message.authority);\n    message.block !== undefined && (obj.block = message.block ? BlockParams.toJSON(message.block) : undefined);\n    message.evidence !== undefined && (obj.evidence = message.evidence ? EvidenceParams.toJSON(message.evidence) : undefined);\n    message.validator !== undefined && (obj.validator = message.validator ? ValidatorParams.toJSON(message.validator) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$authority;\n    const message = createBaseMsgUpdateParams();\n    message.authority = (_object$authority = object.authority) !== null && _object$authority !== void 0 ? _object$authority : \"\";\n    message.block = object.block !== undefined && object.block !== null ? BlockParams.fromPartial(object.block) : undefined;\n    message.evidence = object.evidence !== undefined && object.evidence !== null ? EvidenceParams.fromPartial(object.evidence) : undefined;\n    message.validator = object.validator !== undefined && object.validator !== null ? ValidatorParams.fromPartial(object.validator) : undefined;\n    return message;\n  }\n};\nfunction createBaseMsgUpdateParamsResponse() {\n  return {};\n}\nexport const MsgUpdateParamsResponse = {\n  encode(_, writer = _m0.Writer.create()) {\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateParamsResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    return {};\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = createBaseMsgUpdateParamsResponse();\n    return message;\n  }\n};"],
  "mappings": "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",
  "names": ["_m0", "data"]
}
