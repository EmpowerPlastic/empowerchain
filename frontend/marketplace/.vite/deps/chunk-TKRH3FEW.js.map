{
  "version": 3,
  "sources": ["../../node_modules/@empower-plastic/empowerjs/module/codegen/cosmos/mint/v1beta1/mint.js"],
  "sourcesContent": ["import * as _m0 from \"protobufjs/minimal\";\nimport { isSet, Long } from \"../../../helpers\";\n/** Minter represents the minting state. */\n\n/** Minter represents the minting state. */\n\n/** Params defines the parameters for the x/mint module. */\n\n/** Params defines the parameters for the x/mint module. */\n\nfunction createBaseMinter() {\n  return {\n    inflation: \"\",\n    annualProvisions: \"\"\n  };\n}\nexport const Minter = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.inflation !== \"\") {\n      writer.uint32(10).string(message.inflation);\n    }\n    if (message.annualProvisions !== \"\") {\n      writer.uint32(18).string(message.annualProvisions);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMinter();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.inflation = reader.string();\n          break;\n        case 2:\n          message.annualProvisions = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      inflation: isSet(object.inflation) ? String(object.inflation) : \"\",\n      annualProvisions: isSet(object.annualProvisions) ? String(object.annualProvisions) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.inflation !== undefined && (obj.inflation = message.inflation);\n    message.annualProvisions !== undefined && (obj.annualProvisions = message.annualProvisions);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$inflation, _object$annualProvisi;\n    const message = createBaseMinter();\n    message.inflation = (_object$inflation = object.inflation) !== null && _object$inflation !== void 0 ? _object$inflation : \"\";\n    message.annualProvisions = (_object$annualProvisi = object.annualProvisions) !== null && _object$annualProvisi !== void 0 ? _object$annualProvisi : \"\";\n    return message;\n  }\n};\nfunction createBaseParams() {\n  return {\n    mintDenom: \"\",\n    inflationRateChange: \"\",\n    inflationMax: \"\",\n    inflationMin: \"\",\n    goalBonded: \"\",\n    blocksPerYear: BigInt(\"0\")\n  };\n}\nexport const Params = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.mintDenom !== \"\") {\n      writer.uint32(10).string(message.mintDenom);\n    }\n    if (message.inflationRateChange !== \"\") {\n      writer.uint32(18).string(message.inflationRateChange);\n    }\n    if (message.inflationMax !== \"\") {\n      writer.uint32(26).string(message.inflationMax);\n    }\n    if (message.inflationMin !== \"\") {\n      writer.uint32(34).string(message.inflationMin);\n    }\n    if (message.goalBonded !== \"\") {\n      writer.uint32(42).string(message.goalBonded);\n    }\n    if (message.blocksPerYear !== BigInt(0)) {\n      writer.uint32(48).uint64(Long.fromString(message.blocksPerYear.toString()));\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseParams();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.mintDenom = reader.string();\n          break;\n        case 2:\n          message.inflationRateChange = reader.string();\n          break;\n        case 3:\n          message.inflationMax = reader.string();\n          break;\n        case 4:\n          message.inflationMin = reader.string();\n          break;\n        case 5:\n          message.goalBonded = reader.string();\n          break;\n        case 6:\n          message.blocksPerYear = BigInt(reader.uint64().toString());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      mintDenom: isSet(object.mintDenom) ? String(object.mintDenom) : \"\",\n      inflationRateChange: isSet(object.inflationRateChange) ? String(object.inflationRateChange) : \"\",\n      inflationMax: isSet(object.inflationMax) ? String(object.inflationMax) : \"\",\n      inflationMin: isSet(object.inflationMin) ? String(object.inflationMin) : \"\",\n      goalBonded: isSet(object.goalBonded) ? String(object.goalBonded) : \"\",\n      blocksPerYear: isSet(object.blocksPerYear) ? BigInt(object.blocksPerYear.toString()) : BigInt(\"0\")\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.mintDenom !== undefined && (obj.mintDenom = message.mintDenom);\n    message.inflationRateChange !== undefined && (obj.inflationRateChange = message.inflationRateChange);\n    message.inflationMax !== undefined && (obj.inflationMax = message.inflationMax);\n    message.inflationMin !== undefined && (obj.inflationMin = message.inflationMin);\n    message.goalBonded !== undefined && (obj.goalBonded = message.goalBonded);\n    message.blocksPerYear !== undefined && (obj.blocksPerYear = (message.blocksPerYear || BigInt(\"0\")).toString());\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$mintDenom, _object$inflationRate, _object$inflationMax, _object$inflationMin, _object$goalBonded;\n    const message = createBaseParams();\n    message.mintDenom = (_object$mintDenom = object.mintDenom) !== null && _object$mintDenom !== void 0 ? _object$mintDenom : \"\";\n    message.inflationRateChange = (_object$inflationRate = object.inflationRateChange) !== null && _object$inflationRate !== void 0 ? _object$inflationRate : \"\";\n    message.inflationMax = (_object$inflationMax = object.inflationMax) !== null && _object$inflationMax !== void 0 ? _object$inflationMax : \"\";\n    message.inflationMin = (_object$inflationMin = object.inflationMin) !== null && _object$inflationMin !== void 0 ? _object$inflationMin : \"\";\n    message.goalBonded = (_object$goalBonded = object.goalBonded) !== null && _object$goalBonded !== void 0 ? _object$goalBonded : \"\";\n    message.blocksPerYear = object.blocksPerYear !== undefined && object.blocksPerYear !== null ? BigInt(object.blocksPerYear.toString()) : BigInt(\"0\");\n    return message;\n  }\n};"],
  "mappings": "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",
  "names": ["Long"]
}
