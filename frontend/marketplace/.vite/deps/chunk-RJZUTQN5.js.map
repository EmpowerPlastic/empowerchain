{
  "version": 3,
  "sources": ["../../node_modules/@empower-plastic/empowerjs/module/codegen/cosmos/nft/v1beta1/tx.rpc.msg.js", "../../node_modules/@empower-plastic/empowerjs/module/codegen/cosmos/nft/v1beta1/tx.js"],
  "sourcesContent": ["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as _m0 from \"protobufjs/minimal\";\nimport { MsgSend, MsgSendResponse } from \"./tx\";\n/** Msg defines the nft Msg service. */\n\nexport class MsgClientImpl {\n  constructor(rpc) {\n    _defineProperty(this, \"rpc\", void 0);\n    this.rpc = rpc;\n    this.send = this.send.bind(this);\n  }\n  send(request) {\n    const data = MsgSend.encode(request).finish();\n    const promise = this.rpc.request(\"cosmos.nft.v1beta1.Msg\", \"Send\", data);\n    return promise.then(data => MsgSendResponse.decode(new _m0.Reader(data)));\n  }\n}", "import * as _m0 from \"protobufjs/minimal\";\nimport { isSet } from \"../../../helpers\";\n/** MsgSend represents a message to send a nft from one account to another account. */\n\n/** MsgSend represents a message to send a nft from one account to another account. */\n\n/** MsgSendResponse defines the Msg/Send response type. */\n\n/** MsgSendResponse defines the Msg/Send response type. */\n\nfunction createBaseMsgSend() {\n  return {\n    classId: \"\",\n    id: \"\",\n    sender: \"\",\n    receiver: \"\"\n  };\n}\nexport const MsgSend = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.classId !== \"\") {\n      writer.uint32(10).string(message.classId);\n    }\n    if (message.id !== \"\") {\n      writer.uint32(18).string(message.id);\n    }\n    if (message.sender !== \"\") {\n      writer.uint32(26).string(message.sender);\n    }\n    if (message.receiver !== \"\") {\n      writer.uint32(34).string(message.receiver);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgSend();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.classId = reader.string();\n          break;\n        case 2:\n          message.id = reader.string();\n          break;\n        case 3:\n          message.sender = reader.string();\n          break;\n        case 4:\n          message.receiver = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      classId: isSet(object.classId) ? String(object.classId) : \"\",\n      id: isSet(object.id) ? String(object.id) : \"\",\n      sender: isSet(object.sender) ? String(object.sender) : \"\",\n      receiver: isSet(object.receiver) ? String(object.receiver) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.classId !== undefined && (obj.classId = message.classId);\n    message.id !== undefined && (obj.id = message.id);\n    message.sender !== undefined && (obj.sender = message.sender);\n    message.receiver !== undefined && (obj.receiver = message.receiver);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$classId, _object$id, _object$sender, _object$receiver;\n    const message = createBaseMsgSend();\n    message.classId = (_object$classId = object.classId) !== null && _object$classId !== void 0 ? _object$classId : \"\";\n    message.id = (_object$id = object.id) !== null && _object$id !== void 0 ? _object$id : \"\";\n    message.sender = (_object$sender = object.sender) !== null && _object$sender !== void 0 ? _object$sender : \"\";\n    message.receiver = (_object$receiver = object.receiver) !== null && _object$receiver !== void 0 ? _object$receiver : \"\";\n    return message;\n  }\n};\nfunction createBaseMsgSendResponse() {\n  return {};\n}\nexport const MsgSendResponse = {\n  encode(_, writer = _m0.Writer.create()) {\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgSendResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    return {};\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = createBaseMsgSendResponse();\n    return message;\n  }\n};"],
  "mappings": ";;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA,IAAAA,OAAqB;;;ACDrB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAqB;AAUrB,SAAS,oBAAoB;AAC3B,SAAO;AAAA,IACL,SAAS;AAAA,IACT,IAAI;AAAA,IACJ,QAAQ;AAAA,IACR,UAAU;AAAA,EACZ;AACF;AACO,IAAM,UAAU;AAAA,EACrB,OAAO,SAAS,SAAa,WAAO,OAAO,GAAG;AAC5C,QAAI,QAAQ,YAAY,IAAI;AAC1B,aAAO,OAAO,EAAE,EAAE,OAAO,QAAQ,OAAO;AAAA,IAC1C;AACA,QAAI,QAAQ,OAAO,IAAI;AACrB,aAAO,OAAO,EAAE,EAAE,OAAO,QAAQ,EAAE;AAAA,IACrC;AACA,QAAI,QAAQ,WAAW,IAAI;AACzB,aAAO,OAAO,EAAE,EAAE,OAAO,QAAQ,MAAM;AAAA,IACzC;AACA,QAAI,QAAQ,aAAa,IAAI;AAC3B,aAAO,OAAO,EAAE,EAAE,OAAO,QAAQ,QAAQ;AAAA,IAC3C;AACA,WAAO;AAAA,EACT;AAAA,EACA,OAAO,OAAO,QAAQ;AACpB,UAAM,SAAS,iBAAqB,aAAS,QAAQ,IAAQ,WAAO,KAAK;AACzE,QAAI,MAAM,WAAW,SAAY,OAAO,MAAM,OAAO,MAAM;AAC3D,UAAM,UAAU,kBAAkB;AAClC,WAAO,OAAO,MAAM,KAAK;AACvB,YAAM,MAAM,OAAO,OAAO;AAC1B,cAAQ,QAAQ,GAAG;AAAA,QACjB,KAAK;AACH,kBAAQ,UAAU,OAAO,OAAO;AAChC;AAAA,QACF,KAAK;AACH,kBAAQ,KAAK,OAAO,OAAO;AAC3B;AAAA,QACF,KAAK;AACH,kBAAQ,SAAS,OAAO,OAAO;AAC/B;AAAA,QACF,KAAK;AACH,kBAAQ,WAAW,OAAO,OAAO;AACjC;AAAA,QACF;AACE,iBAAO,SAAS,MAAM,CAAC;AACvB;AAAA,MACJ;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA,EACA,SAAS,QAAQ;AACf,WAAO;AAAA,MACL,SAAS,MAAM,OAAO,OAAO,IAAI,OAAO,OAAO,OAAO,IAAI;AAAA,MAC1D,IAAI,MAAM,OAAO,EAAE,IAAI,OAAO,OAAO,EAAE,IAAI;AAAA,MAC3C,QAAQ,MAAM,OAAO,MAAM,IAAI,OAAO,OAAO,MAAM,IAAI;AAAA,MACvD,UAAU,MAAM,OAAO,QAAQ,IAAI,OAAO,OAAO,QAAQ,IAAI;AAAA,IAC/D;AAAA,EACF;AAAA,EACA,OAAO,SAAS;AACd,UAAM,MAAM,CAAC;AACb,YAAQ,YAAY,WAAc,IAAI,UAAU,QAAQ;AACxD,YAAQ,OAAO,WAAc,IAAI,KAAK,QAAQ;AAC9C,YAAQ,WAAW,WAAc,IAAI,SAAS,QAAQ;AACtD,YAAQ,aAAa,WAAc,IAAI,WAAW,QAAQ;AAC1D,WAAO;AAAA,EACT;AAAA,EACA,YAAY,QAAQ;AAClB,QAAI,iBAAiB,YAAY,gBAAgB;AACjD,UAAM,UAAU,kBAAkB;AAClC,YAAQ,WAAW,kBAAkB,OAAO,aAAa,QAAQ,oBAAoB,SAAS,kBAAkB;AAChH,YAAQ,MAAM,aAAa,OAAO,QAAQ,QAAQ,eAAe,SAAS,aAAa;AACvF,YAAQ,UAAU,iBAAiB,OAAO,YAAY,QAAQ,mBAAmB,SAAS,iBAAiB;AAC3G,YAAQ,YAAY,mBAAmB,OAAO,cAAc,QAAQ,qBAAqB,SAAS,mBAAmB;AACrH,WAAO;AAAA,EACT;AACF;AACA,SAAS,4BAA4B;AACnC,SAAO,CAAC;AACV;AACO,IAAM,kBAAkB;AAAA,EAC7B,OAAO,GAAG,SAAa,WAAO,OAAO,GAAG;AACtC,WAAO;AAAA,EACT;AAAA,EACA,OAAO,OAAO,QAAQ;AACpB,UAAM,SAAS,iBAAqB,aAAS,QAAQ,IAAQ,WAAO,KAAK;AACzE,QAAI,MAAM,WAAW,SAAY,OAAO,MAAM,OAAO,MAAM;AAC3D,UAAM,UAAU,0BAA0B;AAC1C,WAAO,OAAO,MAAM,KAAK;AACvB,YAAM,MAAM,OAAO,OAAO;AAC1B,cAAQ,QAAQ,GAAG;AAAA,QACjB;AACE,iBAAO,SAAS,MAAM,CAAC;AACvB;AAAA,MACJ;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA,EACA,SAAS,GAAG;AACV,WAAO,CAAC;AAAA,EACV;AAAA,EACA,OAAO,GAAG;AACR,UAAM,MAAM,CAAC;AACb,WAAO;AAAA,EACT;AAAA,EACA,YAAY,GAAG;AACb,UAAM,UAAU,0BAA0B;AAC1C,WAAO;AAAA,EACT;AACF;;;ADjHO,IAAM,gBAAN,MAAoB;AAAA,EACzB,YAAY,KAAK;AACf,oBAAgB,MAAM,OAAO,MAAM;AACnC,SAAK,MAAM;AACX,SAAK,OAAO,KAAK,KAAK,KAAK,IAAI;AAAA,EACjC;AAAA,EACA,KAAK,SAAS;AACZ,UAAM,OAAO,QAAQ,OAAO,OAAO,EAAE,OAAO;AAC5C,UAAM,UAAU,KAAK,IAAI,QAAQ,0BAA0B,QAAQ,IAAI;AACvE,WAAO,QAAQ,KAAK,CAAAC,UAAQ,gBAAgB,OAAO,IAAQ,YAAOA,KAAI,CAAC,CAAC;AAAA,EAC1E;AACF;",
  "names": ["_m0", "data"]
}
