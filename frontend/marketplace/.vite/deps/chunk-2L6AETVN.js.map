{
  "version": 3,
  "sources": ["../../node_modules/@empower-plastic/empowerjs/module/codegen/ibc/core/client/v1/client.js"],
  "sourcesContent": ["import { Any } from \"../../../../google/protobuf/any\";\nimport { Plan } from \"../../../../cosmos/upgrade/v1beta1/upgrade\";\nimport * as _m0 from \"protobufjs/minimal\";\nimport { isSet, Long } from \"../../../../helpers\";\n/**\n * IdentifiedClientState defines a client state with an additional client\n * identifier field.\n */\n\n/**\n * IdentifiedClientState defines a client state with an additional client\n * identifier field.\n */\n\n/**\n * ConsensusStateWithHeight defines a consensus state with an additional height\n * field.\n */\n\n/**\n * ConsensusStateWithHeight defines a consensus state with an additional height\n * field.\n */\n\n/**\n * ClientConsensusStates defines all the stored consensus states for a given\n * client.\n */\n\n/**\n * ClientConsensusStates defines all the stored consensus states for a given\n * client.\n */\n\n/**\n * ClientUpdateProposal is a governance proposal. If it passes, the substitute\n * client's latest consensus state is copied over to the subject client. The proposal\n * handler may fail if the subject and the substitute do not match in client and\n * chain parameters (with exception to latest height, frozen height, and chain-id).\n */\n\n/**\n * ClientUpdateProposal is a governance proposal. If it passes, the substitute\n * client's latest consensus state is copied over to the subject client. The proposal\n * handler may fail if the subject and the substitute do not match in client and\n * chain parameters (with exception to latest height, frozen height, and chain-id).\n */\n\n/**\n * UpgradeProposal is a gov Content type for initiating an IBC breaking\n * upgrade.\n */\n\n/**\n * UpgradeProposal is a gov Content type for initiating an IBC breaking\n * upgrade.\n */\n\n/**\n * Height is a monotonically increasing data type\n * that can be compared against another Height for the purposes of updating and\n * freezing clients\n * \n * Normally the RevisionHeight is incremented at each height while keeping\n * RevisionNumber the same. However some consensus algorithms may choose to\n * reset the height in certain conditions e.g. hard forks, state-machine\n * breaking changes In these cases, the RevisionNumber is incremented so that\n * height continues to be monitonically increasing even as the RevisionHeight\n * gets reset\n */\n\n/**\n * Height is a monotonically increasing data type\n * that can be compared against another Height for the purposes of updating and\n * freezing clients\n * \n * Normally the RevisionHeight is incremented at each height while keeping\n * RevisionNumber the same. However some consensus algorithms may choose to\n * reset the height in certain conditions e.g. hard forks, state-machine\n * breaking changes In these cases, the RevisionNumber is incremented so that\n * height continues to be monitonically increasing even as the RevisionHeight\n * gets reset\n */\n\n/** Params defines the set of IBC light client parameters. */\n\n/** Params defines the set of IBC light client parameters. */\n\nfunction createBaseIdentifiedClientState() {\n  return {\n    clientId: \"\",\n    clientState: undefined\n  };\n}\nexport const IdentifiedClientState = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.clientId !== \"\") {\n      writer.uint32(10).string(message.clientId);\n    }\n    if (message.clientState !== undefined) {\n      Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseIdentifiedClientState();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n        case 2:\n          message.clientState = Any.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      clientId: isSet(object.clientId) ? String(object.clientId) : \"\",\n      clientState: isSet(object.clientState) ? Any.fromJSON(object.clientState) : undefined\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.clientId !== undefined && (obj.clientId = message.clientId);\n    message.clientState !== undefined && (obj.clientState = message.clientState ? Any.toJSON(message.clientState) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$clientId;\n    const message = createBaseIdentifiedClientState();\n    message.clientId = (_object$clientId = object.clientId) !== null && _object$clientId !== void 0 ? _object$clientId : \"\";\n    message.clientState = object.clientState !== undefined && object.clientState !== null ? Any.fromPartial(object.clientState) : undefined;\n    return message;\n  }\n};\nfunction createBaseConsensusStateWithHeight() {\n  return {\n    height: undefined,\n    consensusState: undefined\n  };\n}\nexport const ConsensusStateWithHeight = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.height !== undefined) {\n      Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.consensusState !== undefined) {\n      Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseConsensusStateWithHeight();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.height = Height.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.consensusState = Any.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      height: isSet(object.height) ? Height.fromJSON(object.height) : undefined,\n      consensusState: isSet(object.consensusState) ? Any.fromJSON(object.consensusState) : undefined\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.height !== undefined && (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n    message.consensusState !== undefined && (obj.consensusState = message.consensusState ? Any.toJSON(message.consensusState) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseConsensusStateWithHeight();\n    message.height = object.height !== undefined && object.height !== null ? Height.fromPartial(object.height) : undefined;\n    message.consensusState = object.consensusState !== undefined && object.consensusState !== null ? Any.fromPartial(object.consensusState) : undefined;\n    return message;\n  }\n};\nfunction createBaseClientConsensusStates() {\n  return {\n    clientId: \"\",\n    consensusStates: []\n  };\n}\nexport const ClientConsensusStates = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.clientId !== \"\") {\n      writer.uint32(10).string(message.clientId);\n    }\n    for (const v of message.consensusStates) {\n      ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseClientConsensusStates();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n        case 2:\n          message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      clientId: isSet(object.clientId) ? String(object.clientId) : \"\",\n      consensusStates: Array.isArray(object === null || object === void 0 ? void 0 : object.consensusStates) ? object.consensusStates.map(e => ConsensusStateWithHeight.fromJSON(e)) : []\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.clientId !== undefined && (obj.clientId = message.clientId);\n    if (message.consensusStates) {\n      obj.consensusStates = message.consensusStates.map(e => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n    } else {\n      obj.consensusStates = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$clientId2, _object$consensusStat;\n    const message = createBaseClientConsensusStates();\n    message.clientId = (_object$clientId2 = object.clientId) !== null && _object$clientId2 !== void 0 ? _object$clientId2 : \"\";\n    message.consensusStates = ((_object$consensusStat = object.consensusStates) === null || _object$consensusStat === void 0 ? void 0 : _object$consensusStat.map(e => ConsensusStateWithHeight.fromPartial(e))) || [];\n    return message;\n  }\n};\nfunction createBaseClientUpdateProposal() {\n  return {\n    title: \"\",\n    description: \"\",\n    subjectClientId: \"\",\n    substituteClientId: \"\"\n  };\n}\nexport const ClientUpdateProposal = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.title !== \"\") {\n      writer.uint32(10).string(message.title);\n    }\n    if (message.description !== \"\") {\n      writer.uint32(18).string(message.description);\n    }\n    if (message.subjectClientId !== \"\") {\n      writer.uint32(26).string(message.subjectClientId);\n    }\n    if (message.substituteClientId !== \"\") {\n      writer.uint32(34).string(message.substituteClientId);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseClientUpdateProposal();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.title = reader.string();\n          break;\n        case 2:\n          message.description = reader.string();\n          break;\n        case 3:\n          message.subjectClientId = reader.string();\n          break;\n        case 4:\n          message.substituteClientId = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      title: isSet(object.title) ? String(object.title) : \"\",\n      description: isSet(object.description) ? String(object.description) : \"\",\n      subjectClientId: isSet(object.subjectClientId) ? String(object.subjectClientId) : \"\",\n      substituteClientId: isSet(object.substituteClientId) ? String(object.substituteClientId) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.title !== undefined && (obj.title = message.title);\n    message.description !== undefined && (obj.description = message.description);\n    message.subjectClientId !== undefined && (obj.subjectClientId = message.subjectClientId);\n    message.substituteClientId !== undefined && (obj.substituteClientId = message.substituteClientId);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$title, _object$description, _object$subjectClient, _object$substituteCli;\n    const message = createBaseClientUpdateProposal();\n    message.title = (_object$title = object.title) !== null && _object$title !== void 0 ? _object$title : \"\";\n    message.description = (_object$description = object.description) !== null && _object$description !== void 0 ? _object$description : \"\";\n    message.subjectClientId = (_object$subjectClient = object.subjectClientId) !== null && _object$subjectClient !== void 0 ? _object$subjectClient : \"\";\n    message.substituteClientId = (_object$substituteCli = object.substituteClientId) !== null && _object$substituteCli !== void 0 ? _object$substituteCli : \"\";\n    return message;\n  }\n};\nfunction createBaseUpgradeProposal() {\n  return {\n    title: \"\",\n    description: \"\",\n    plan: undefined,\n    upgradedClientState: undefined\n  };\n}\nexport const UpgradeProposal = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.title !== \"\") {\n      writer.uint32(10).string(message.title);\n    }\n    if (message.description !== \"\") {\n      writer.uint32(18).string(message.description);\n    }\n    if (message.plan !== undefined) {\n      Plan.encode(message.plan, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.upgradedClientState !== undefined) {\n      Any.encode(message.upgradedClientState, writer.uint32(34).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseUpgradeProposal();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.title = reader.string();\n          break;\n        case 2:\n          message.description = reader.string();\n          break;\n        case 3:\n          message.plan = Plan.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.upgradedClientState = Any.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      title: isSet(object.title) ? String(object.title) : \"\",\n      description: isSet(object.description) ? String(object.description) : \"\",\n      plan: isSet(object.plan) ? Plan.fromJSON(object.plan) : undefined,\n      upgradedClientState: isSet(object.upgradedClientState) ? Any.fromJSON(object.upgradedClientState) : undefined\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.title !== undefined && (obj.title = message.title);\n    message.description !== undefined && (obj.description = message.description);\n    message.plan !== undefined && (obj.plan = message.plan ? Plan.toJSON(message.plan) : undefined);\n    message.upgradedClientState !== undefined && (obj.upgradedClientState = message.upgradedClientState ? Any.toJSON(message.upgradedClientState) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$title2, _object$description2;\n    const message = createBaseUpgradeProposal();\n    message.title = (_object$title2 = object.title) !== null && _object$title2 !== void 0 ? _object$title2 : \"\";\n    message.description = (_object$description2 = object.description) !== null && _object$description2 !== void 0 ? _object$description2 : \"\";\n    message.plan = object.plan !== undefined && object.plan !== null ? Plan.fromPartial(object.plan) : undefined;\n    message.upgradedClientState = object.upgradedClientState !== undefined && object.upgradedClientState !== null ? Any.fromPartial(object.upgradedClientState) : undefined;\n    return message;\n  }\n};\nfunction createBaseHeight() {\n  return {\n    revisionNumber: BigInt(\"0\"),\n    revisionHeight: BigInt(\"0\")\n  };\n}\nexport const Height = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.revisionNumber !== BigInt(0)) {\n      writer.uint32(8).uint64(Long.fromString(message.revisionNumber.toString()));\n    }\n    if (message.revisionHeight !== BigInt(0)) {\n      writer.uint32(16).uint64(Long.fromString(message.revisionHeight.toString()));\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseHeight();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.revisionNumber = BigInt(reader.uint64().toString());\n          break;\n        case 2:\n          message.revisionHeight = BigInt(reader.uint64().toString());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      revisionNumber: isSet(object.revisionNumber) ? BigInt(object.revisionNumber.toString()) : BigInt(\"0\"),\n      revisionHeight: isSet(object.revisionHeight) ? BigInt(object.revisionHeight.toString()) : BigInt(\"0\")\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.revisionNumber !== undefined && (obj.revisionNumber = (message.revisionNumber || BigInt(\"0\")).toString());\n    message.revisionHeight !== undefined && (obj.revisionHeight = (message.revisionHeight || BigInt(\"0\")).toString());\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseHeight();\n    message.revisionNumber = object.revisionNumber !== undefined && object.revisionNumber !== null ? BigInt(object.revisionNumber.toString()) : BigInt(\"0\");\n    message.revisionHeight = object.revisionHeight !== undefined && object.revisionHeight !== null ? BigInt(object.revisionHeight.toString()) : BigInt(\"0\");\n    return message;\n  }\n};\nfunction createBaseParams() {\n  return {\n    allowedClients: []\n  };\n}\nexport const Params = {\n  encode(message, writer = _m0.Writer.create()) {\n    for (const v of message.allowedClients) {\n      writer.uint32(10).string(v);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseParams();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.allowedClients.push(reader.string());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      allowedClients: Array.isArray(object === null || object === void 0 ? void 0 : object.allowedClients) ? object.allowedClients.map(e => String(e)) : []\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.allowedClients) {\n      obj.allowedClients = message.allowedClients.map(e => e);\n    } else {\n      obj.allowedClients = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$allowedClient;\n    const message = createBaseParams();\n    message.allowedClients = ((_object$allowedClient = object.allowedClients) === null || _object$allowedClient === void 0 ? void 0 : _object$allowedClient.map(e => e)) || [];\n    return message;\n  }\n};"],
  "mappings": "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",
  "names": ["Long"]
}
