{
  "version": 3,
  "sources": ["../../node_modules/@empower-plastic/empowerjs/module/codegen/cosmos/crisis/v1beta1/tx.rpc.msg.js", "../../node_modules/@empower-plastic/empowerjs/module/codegen/cosmos/crisis/v1beta1/tx.js"],
  "sourcesContent": ["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as _m0 from \"protobufjs/minimal\";\nimport { MsgVerifyInvariant, MsgVerifyInvariantResponse, MsgUpdateParams, MsgUpdateParamsResponse } from \"./tx\";\n/** Msg defines the bank Msg service. */\n\nexport class MsgClientImpl {\n  constructor(rpc) {\n    _defineProperty(this, \"rpc\", void 0);\n    this.rpc = rpc;\n    this.verifyInvariant = this.verifyInvariant.bind(this);\n    this.updateParams = this.updateParams.bind(this);\n  }\n  verifyInvariant(request) {\n    const data = MsgVerifyInvariant.encode(request).finish();\n    const promise = this.rpc.request(\"cosmos.crisis.v1beta1.Msg\", \"VerifyInvariant\", data);\n    return promise.then(data => MsgVerifyInvariantResponse.decode(new _m0.Reader(data)));\n  }\n  updateParams(request) {\n    const data = MsgUpdateParams.encode(request).finish();\n    const promise = this.rpc.request(\"cosmos.crisis.v1beta1.Msg\", \"UpdateParams\", data);\n    return promise.then(data => MsgUpdateParamsResponse.decode(new _m0.Reader(data)));\n  }\n}", "import { Coin } from \"../../base/v1beta1/coin\";\nimport * as _m0 from \"protobufjs/minimal\";\nimport { isSet } from \"../../../helpers\";\n/** MsgVerifyInvariant represents a message to verify a particular invariance. */\n\n/** MsgVerifyInvariant represents a message to verify a particular invariance. */\n\n/** MsgVerifyInvariantResponse defines the Msg/VerifyInvariant response type. */\n\n/** MsgVerifyInvariantResponse defines the Msg/VerifyInvariant response type. */\n\n/**\n * MsgUpdateParams is the Msg/UpdateParams request type.\n * \n * Since: cosmos-sdk 0.47\n */\n\n/**\n * MsgUpdateParams is the Msg/UpdateParams request type.\n * \n * Since: cosmos-sdk 0.47\n */\n\n/**\n * MsgUpdateParamsResponse defines the response structure for executing a\n * MsgUpdateParams message.\n * \n * Since: cosmos-sdk 0.47\n */\n\n/**\n * MsgUpdateParamsResponse defines the response structure for executing a\n * MsgUpdateParams message.\n * \n * Since: cosmos-sdk 0.47\n */\n\nfunction createBaseMsgVerifyInvariant() {\n  return {\n    sender: \"\",\n    invariantModuleName: \"\",\n    invariantRoute: \"\"\n  };\n}\nexport const MsgVerifyInvariant = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.sender !== \"\") {\n      writer.uint32(10).string(message.sender);\n    }\n    if (message.invariantModuleName !== \"\") {\n      writer.uint32(18).string(message.invariantModuleName);\n    }\n    if (message.invariantRoute !== \"\") {\n      writer.uint32(26).string(message.invariantRoute);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgVerifyInvariant();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.sender = reader.string();\n          break;\n        case 2:\n          message.invariantModuleName = reader.string();\n          break;\n        case 3:\n          message.invariantRoute = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      sender: isSet(object.sender) ? String(object.sender) : \"\",\n      invariantModuleName: isSet(object.invariantModuleName) ? String(object.invariantModuleName) : \"\",\n      invariantRoute: isSet(object.invariantRoute) ? String(object.invariantRoute) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.sender !== undefined && (obj.sender = message.sender);\n    message.invariantModuleName !== undefined && (obj.invariantModuleName = message.invariantModuleName);\n    message.invariantRoute !== undefined && (obj.invariantRoute = message.invariantRoute);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$sender, _object$invariantModu, _object$invariantRout;\n    const message = createBaseMsgVerifyInvariant();\n    message.sender = (_object$sender = object.sender) !== null && _object$sender !== void 0 ? _object$sender : \"\";\n    message.invariantModuleName = (_object$invariantModu = object.invariantModuleName) !== null && _object$invariantModu !== void 0 ? _object$invariantModu : \"\";\n    message.invariantRoute = (_object$invariantRout = object.invariantRoute) !== null && _object$invariantRout !== void 0 ? _object$invariantRout : \"\";\n    return message;\n  }\n};\nfunction createBaseMsgVerifyInvariantResponse() {\n  return {};\n}\nexport const MsgVerifyInvariantResponse = {\n  encode(_, writer = _m0.Writer.create()) {\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgVerifyInvariantResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    return {};\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = createBaseMsgVerifyInvariantResponse();\n    return message;\n  }\n};\nfunction createBaseMsgUpdateParams() {\n  return {\n    authority: \"\",\n    constantFee: undefined\n  };\n}\nexport const MsgUpdateParams = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.authority !== \"\") {\n      writer.uint32(10).string(message.authority);\n    }\n    if (message.constantFee !== undefined) {\n      Coin.encode(message.constantFee, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateParams();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.authority = reader.string();\n          break;\n        case 2:\n          message.constantFee = Coin.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      authority: isSet(object.authority) ? String(object.authority) : \"\",\n      constantFee: isSet(object.constantFee) ? Coin.fromJSON(object.constantFee) : undefined\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.authority !== undefined && (obj.authority = message.authority);\n    message.constantFee !== undefined && (obj.constantFee = message.constantFee ? Coin.toJSON(message.constantFee) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$authority;\n    const message = createBaseMsgUpdateParams();\n    message.authority = (_object$authority = object.authority) !== null && _object$authority !== void 0 ? _object$authority : \"\";\n    message.constantFee = object.constantFee !== undefined && object.constantFee !== null ? Coin.fromPartial(object.constantFee) : undefined;\n    return message;\n  }\n};\nfunction createBaseMsgUpdateParamsResponse() {\n  return {};\n}\nexport const MsgUpdateParamsResponse = {\n  encode(_, writer = _m0.Writer.create()) {\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateParamsResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    return {};\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = createBaseMsgUpdateParamsResponse();\n    return message;\n  }\n};"],
  "mappings": "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",
  "names": ["_m0", "data"]
}
