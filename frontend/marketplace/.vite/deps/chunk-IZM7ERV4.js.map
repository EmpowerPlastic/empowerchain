{
  "version": 3,
  "sources": ["../../node_modules/@empower-plastic/empowerjs/module/codegen/cosmos/evidence/v1beta1/tx.rpc.msg.js", "../../node_modules/@empower-plastic/empowerjs/module/codegen/cosmos/evidence/v1beta1/tx.js"],
  "sourcesContent": ["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as _m0 from \"protobufjs/minimal\";\nimport { MsgSubmitEvidence, MsgSubmitEvidenceResponse } from \"./tx\";\n/** Msg defines the evidence Msg service. */\n\nexport class MsgClientImpl {\n  constructor(rpc) {\n    _defineProperty(this, \"rpc\", void 0);\n    this.rpc = rpc;\n    this.submitEvidence = this.submitEvidence.bind(this);\n  }\n  submitEvidence(request) {\n    const data = MsgSubmitEvidence.encode(request).finish();\n    const promise = this.rpc.request(\"cosmos.evidence.v1beta1.Msg\", \"SubmitEvidence\", data);\n    return promise.then(data => MsgSubmitEvidenceResponse.decode(new _m0.Reader(data)));\n  }\n}", "import { Any } from \"../../../google/protobuf/any\";\nimport * as _m0 from \"protobufjs/minimal\";\nimport { isSet, bytesFromBase64, base64FromBytes } from \"../../../helpers\";\n/**\n * MsgSubmitEvidence represents a message that supports submitting arbitrary\n * Evidence of misbehavior such as equivocation or counterfactual signing.\n */\n\n/**\n * MsgSubmitEvidence represents a message that supports submitting arbitrary\n * Evidence of misbehavior such as equivocation or counterfactual signing.\n */\n\n/** MsgSubmitEvidenceResponse defines the Msg/SubmitEvidence response type. */\n\n/** MsgSubmitEvidenceResponse defines the Msg/SubmitEvidence response type. */\n\nfunction createBaseMsgSubmitEvidence() {\n  return {\n    submitter: \"\",\n    evidence: undefined\n  };\n}\nexport const MsgSubmitEvidence = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.submitter !== \"\") {\n      writer.uint32(10).string(message.submitter);\n    }\n    if (message.evidence !== undefined) {\n      Any.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgSubmitEvidence();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.submitter = reader.string();\n          break;\n        case 2:\n          message.evidence = Any.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      submitter: isSet(object.submitter) ? String(object.submitter) : \"\",\n      evidence: isSet(object.evidence) ? Any.fromJSON(object.evidence) : undefined\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.submitter !== undefined && (obj.submitter = message.submitter);\n    message.evidence !== undefined && (obj.evidence = message.evidence ? Any.toJSON(message.evidence) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$submitter;\n    const message = createBaseMsgSubmitEvidence();\n    message.submitter = (_object$submitter = object.submitter) !== null && _object$submitter !== void 0 ? _object$submitter : \"\";\n    message.evidence = object.evidence !== undefined && object.evidence !== null ? Any.fromPartial(object.evidence) : undefined;\n    return message;\n  }\n};\nfunction createBaseMsgSubmitEvidenceResponse() {\n  return {\n    hash: new Uint8Array()\n  };\n}\nexport const MsgSubmitEvidenceResponse = {\n  encode(message, writer = _m0.Writer.create()) {\n    if (message.hash.length !== 0) {\n      writer.uint32(34).bytes(message.hash);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgSubmitEvidenceResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 4:\n          message.hash = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      hash: isSet(object.hash) ? bytesFromBase64(object.hash) : new Uint8Array()\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n    return obj;\n  },\n  fromPartial(object) {\n    var _object$hash;\n    const message = createBaseMsgSubmitEvidenceResponse();\n    message.hash = (_object$hash = object.hash) !== null && _object$hash !== void 0 ? _object$hash : new Uint8Array();\n    return message;\n  }\n};"],
  "mappings": "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",
  "names": ["_m0", "data"]
}
