syntax = "proto3";
package empowerchain.plasticcredit;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/msg/v1/msg.proto";
import "empowerchain/plasticcredit/params.proto";

option go_package = "github.com/empowerchain/empowerchain/x/plasticcredit/types";

service Msg {
  // UpdateParams defines a governance operation for updating the x/plasticcredit module parameters.
  // The authority is defined in the keeper.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);

  // CreateIssuer creates a new Issuer that can create credit classes and issue new credits with those classes
  // There is only a single signer in the system that is allowed to create new issuers and it is defined in Params as "issuer_creator"
  rpc CreateIssuer(MsgCreateIssuer) returns (MsgCreateIssuerResponse);
}

message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";

  // authority is the address of the governance account.
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the x/plasitccredit parameters to update.
  //
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false];
}

message MsgUpdateParamsResponse {}

message MsgCreateIssuer {
  option (cosmos.msg.v1.signer) = "creator";

  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  string name = 2;
  string description = 3;
  string admin = 4 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message MsgCreateIssuerResponse {
  uint64 issuer_id = 1;
}