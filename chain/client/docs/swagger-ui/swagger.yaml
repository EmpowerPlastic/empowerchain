swagger: '2.0'
info:
  title: Empowerchain - API docs
  description: A REST interface for state queries
  version: 1.0.0
paths:
  /empowerchain/empowerchain/plasticcredit/applicants/{applicant_id}:
    get:
      operationId: Applicant
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              applicant:
                type: object
                properties:
                  id:
                    type: string
                    format: uint64
                  name:
                    type: string
                  description:
                    type: string
                  admin:
                    type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: applicant_id
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  /empowerchain/empowerchain/plasticcredit/credit-classes:
    get:
      operationId: CreditClasses
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              credit_classes:
                type: array
                items:
                  type: object
                  properties:
                    abbreviation:
                      type: string
                      title: >-
                        abbreviation is the short-hand name *and* the identifier
                        for a credit class
                    issuer_id:
                      type: string
                      format: uint64
                    name:
                      type: string
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /empowerchain/empowerchain/plasticcredit/credit-classes/{credit_class_abbreviation}:
    get:
      operationId: CreditClass
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              credit_class:
                type: object
                properties:
                  abbreviation:
                    type: string
                    title: >-
                      abbreviation is the short-hand name *and* the identifier
                      for a credit class
                  issuer_id:
                    type: string
                    format: uint64
                  name:
                    type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: credit_class_abbreviation
          in: path
          required: true
          type: string
      tags:
        - Query
  /empowerchain/empowerchain/plasticcredit/creditbalances/{owner}/{denom}:
    get:
      operationId: CreditBalance
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              balance:
                type: object
                properties:
                  owner:
                    type: string
                    title: Address of the credits owner, part of compound key
                  denom:
                    type: string
                    title: denominator of the credit, apart of compound key
                  balance:
                    title: Number of active and retired credits
                    type: object
                    properties:
                      active:
                        type: string
                        format: uint64
                      retired:
                        type: string
                        format: uint64
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: owner
          in: path
          required: true
          type: string
        - name: denom
          in: path
          required: true
          type: string
      tags:
        - Query
  /empowerchain/empowerchain/plasticcredit/creditcollections/{denom}:
    get:
      operationId: CreditCollection
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              credit_collection:
                type: object
                properties:
                  denom:
                    type: string
                    title: denominator of the credit, store key
                  project_id:
                    type: string
                    format: uint64
                    title: ID of a project related to the collection
                  total_amount:
                    title: >-
                      Total amount of active and retired credits for the
                      collection
                    type: object
                    properties:
                      active:
                        type: string
                        format: uint64
                      retired:
                        type: string
                        format: uint64
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: denom
          in: path
          required: true
          type: string
      tags:
        - Query
  /empowerchain/empowerchain/plasticcredit/issuers:
    get:
      operationId: Issuers
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              issuers:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uint64
                    name:
                      type: string
                    description:
                      type: string
                    admin:
                      type: string
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /empowerchain/empowerchain/plasticcredit/issuers/{issuer_id}:
    get:
      operationId: Issuer
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              issuer:
                type: object
                properties:
                  id:
                    type: string
                    format: uint64
                  name:
                    type: string
                  description:
                    type: string
                  admin:
                    type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: issuer_id
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  /empowerchain/empowerchain/plasticcredit/params:
    get:
      operationId: PlasticCreditParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                type: object
                properties:
                  issuer_creator:
                    type: string
                    title: >-
                      issuer_creator is the address that is allowed to create
                      new issuers

                      defaults to the governance account, but can be changed by
                      governance (to, for instance, a DAO/group/multisig)
                  credit_class_creation_fee:
                    title: >-
                      credit_class_creation_fee is the fee that is charged for
                      creating a new credit class

                      defaults to 50 $MPWR, but can be changed by governance
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                description: Params defines the parameters for the module.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /empowerchain/empowerchain/plasticcredit/projects/{project_id}:
    get:
      operationId: Project
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              project:
                type: object
                properties:
                  id:
                    type: string
                    format: uint64
                  applicant_id:
                    type: string
                    format: uint64
                  credit_class_abbreviation:
                    type: string
                  name:
                    type: string
                  status:
                    type: string
                    enum:
                      - NEW
                      - APPROVED
                      - REJECTED
                      - SUSPENDED
                    default: NEW
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: project_id
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  /empowerchain/empowerchain/proofofexistence/proof/{hash}:
    get:
      operationId: Proof
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              metadata:
                type: object
                properties:
                  timestamp:
                    type: string
                    format: date-time
                    title: >-
                      timestamp is the time the proof was added on-chain (block
                      time)
                  creator:
                    type: string
                    title: creator is the account address that created the proof
                description: >-
                  ProofMetadata is the metadata attached to a specific data
                  proof

                  Because the proof itself is also the key, the data structure
                  is hash -> ProofMetadata

                  The hash is the SHA-256 hash of the data of which is being
                  made a proof for.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: hash
          in: path
          required: true
          type: string
      tags:
        - Query
definitions:
  cosmos.base.query.v1beta1.PageRequest:
    type: object
    properties:
      key:
        type: string
        format: byte
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
      offset:
        type: string
        format: uint64
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
      limit:
        type: string
        format: uint64
        description: >-
          limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.
      count_total:
        type: boolean
        description: >-
          count_total is set to true  to indicate that the result set should
          include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when
          key

          is set.
      reverse:
        type: boolean
        description: >-
          reverse is set to true if results are to be returned in the descending
          order.


          Since: cosmos-sdk 0.43
    description: |-
      message SomeRequest {
               Foo some_parameter = 1;
               PageRequest pagination = 2;
       }
    title: |-
      PageRequest is to be embedded in gRPC request messages for efficient
      pagination. Ex:
  cosmos.base.query.v1beta1.PageResponse:
    type: object
    properties:
      next_key:
        type: string
        format: byte
        description: |-
          next_key is the key to be passed to PageRequest.key to
          query the next page most efficiently. It will be empty if
          there are no more results.
      total:
        type: string
        format: uint64
        title: |-
          total is total number of results available if PageRequest.count_total
          was set, its value is undefined otherwise
    description: |-
      PageResponse is to be embedded in gRPC response messages where the
      corresponding request message has used PageRequest.

       message SomeResponse {
               repeated Bar results = 1;
               PageResponse page = 2;
       }
  cosmos.base.v1beta1.Coin:
    type: object
    properties:
      denom:
        type: string
      amount:
        type: string
    description: |-
      Coin defines a token with a denomination and an amount.

      NOTE: The amount field is an Int which implements the custom method
      signatures required by gogoproto.
  empowerchain.plasticcredit.Applicant:
    type: object
    properties:
      id:
        type: string
        format: uint64
      name:
        type: string
      description:
        type: string
      admin:
        type: string
  empowerchain.plasticcredit.CreditAmount:
    type: object
    properties:
      active:
        type: string
        format: uint64
      retired:
        type: string
        format: uint64
  empowerchain.plasticcredit.CreditBalance:
    type: object
    properties:
      owner:
        type: string
        title: Address of the credits owner, part of compound key
      denom:
        type: string
        title: denominator of the credit, apart of compound key
      balance:
        title: Number of active and retired credits
        type: object
        properties:
          active:
            type: string
            format: uint64
          retired:
            type: string
            format: uint64
  empowerchain.plasticcredit.CreditClass:
    type: object
    properties:
      abbreviation:
        type: string
        title: >-
          abbreviation is the short-hand name *and* the identifier for a credit
          class
      issuer_id:
        type: string
        format: uint64
      name:
        type: string
  empowerchain.plasticcredit.CreditCollection:
    type: object
    properties:
      denom:
        type: string
        title: denominator of the credit, store key
      project_id:
        type: string
        format: uint64
        title: ID of a project related to the collection
      total_amount:
        title: Total amount of active and retired credits for the collection
        type: object
        properties:
          active:
            type: string
            format: uint64
          retired:
            type: string
            format: uint64
  empowerchain.plasticcredit.Issuer:
    type: object
    properties:
      id:
        type: string
        format: uint64
      name:
        type: string
      description:
        type: string
      admin:
        type: string
  empowerchain.plasticcredit.Params:
    type: object
    properties:
      issuer_creator:
        type: string
        title: >-
          issuer_creator is the address that is allowed to create new issuers

          defaults to the governance account, but can be changed by governance
          (to, for instance, a DAO/group/multisig)
      credit_class_creation_fee:
        title: >-
          credit_class_creation_fee is the fee that is charged for creating a
          new credit class

          defaults to 50 $MPWR, but can be changed by governance
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
    description: Params defines the parameters for the module.
  empowerchain.plasticcredit.Project:
    type: object
    properties:
      id:
        type: string
        format: uint64
      applicant_id:
        type: string
        format: uint64
      credit_class_abbreviation:
        type: string
      name:
        type: string
      status:
        type: string
        enum:
          - NEW
          - APPROVED
          - REJECTED
          - SUSPENDED
        default: NEW
  empowerchain.plasticcredit.ProjectStatus:
    type: string
    enum:
      - NEW
      - APPROVED
      - REJECTED
      - SUSPENDED
    default: NEW
  empowerchain.plasticcredit.QueryApplicantResponse:
    type: object
    properties:
      applicant:
        type: object
        properties:
          id:
            type: string
            format: uint64
          name:
            type: string
          description:
            type: string
          admin:
            type: string
  empowerchain.plasticcredit.QueryCreditBalanceResponse:
    type: object
    properties:
      balance:
        type: object
        properties:
          owner:
            type: string
            title: Address of the credits owner, part of compound key
          denom:
            type: string
            title: denominator of the credit, apart of compound key
          balance:
            title: Number of active and retired credits
            type: object
            properties:
              active:
                type: string
                format: uint64
              retired:
                type: string
                format: uint64
  empowerchain.plasticcredit.QueryCreditClassResponse:
    type: object
    properties:
      credit_class:
        type: object
        properties:
          abbreviation:
            type: string
            title: >-
              abbreviation is the short-hand name *and* the identifier for a
              credit class
          issuer_id:
            type: string
            format: uint64
          name:
            type: string
  empowerchain.plasticcredit.QueryCreditClassesResponse:
    type: object
    properties:
      credit_classes:
        type: array
        items:
          type: object
          properties:
            abbreviation:
              type: string
              title: >-
                abbreviation is the short-hand name *and* the identifier for a
                credit class
            issuer_id:
              type: string
              format: uint64
            name:
              type: string
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
  empowerchain.plasticcredit.QueryCreditCollectionResponse:
    type: object
    properties:
      credit_collection:
        type: object
        properties:
          denom:
            type: string
            title: denominator of the credit, store key
          project_id:
            type: string
            format: uint64
            title: ID of a project related to the collection
          total_amount:
            title: Total amount of active and retired credits for the collection
            type: object
            properties:
              active:
                type: string
                format: uint64
              retired:
                type: string
                format: uint64
  empowerchain.plasticcredit.QueryIssuerResponse:
    type: object
    properties:
      issuer:
        type: object
        properties:
          id:
            type: string
            format: uint64
          name:
            type: string
          description:
            type: string
          admin:
            type: string
  empowerchain.plasticcredit.QueryIssuersResponse:
    type: object
    properties:
      issuers:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              format: uint64
            name:
              type: string
            description:
              type: string
            admin:
              type: string
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
  empowerchain.plasticcredit.QueryParamsResponse:
    type: object
    properties:
      params:
        type: object
        properties:
          issuer_creator:
            type: string
            title: >-
              issuer_creator is the address that is allowed to create new
              issuers

              defaults to the governance account, but can be changed by
              governance (to, for instance, a DAO/group/multisig)
          credit_class_creation_fee:
            title: >-
              credit_class_creation_fee is the fee that is charged for creating
              a new credit class

              defaults to 50 $MPWR, but can be changed by governance
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
        description: Params defines the parameters for the module.
  empowerchain.plasticcredit.QueryProjectResponse:
    type: object
    properties:
      project:
        type: object
        properties:
          id:
            type: string
            format: uint64
          applicant_id:
            type: string
            format: uint64
          credit_class_abbreviation:
            type: string
          name:
            type: string
          status:
            type: string
            enum:
              - NEW
              - APPROVED
              - REJECTED
              - SUSPENDED
            default: NEW
  google.protobuf.Any:
    type: object
    properties:
      type_url:
        type: string
      value:
        type: string
        format: byte
  grpc.gateway.runtime.Error:
    type: object
    properties:
      error:
        type: string
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          properties:
            type_url:
              type: string
            value:
              type: string
              format: byte
  empowerchain.proofofexistence.ProofMetadata:
    type: object
    properties:
      timestamp:
        type: string
        format: date-time
        title: timestamp is the time the proof was added on-chain (block time)
      creator:
        type: string
        title: creator is the account address that created the proof
    description: >-
      ProofMetadata is the metadata attached to a specific data proof

      Because the proof itself is also the key, the data structure is hash ->
      ProofMetadata

      The hash is the SHA-256 hash of the data of which is being made a proof
      for.
  empowerchain.proofofexistence.QueryProofResponse:
    type: object
    properties:
      metadata:
        type: object
        properties:
          timestamp:
            type: string
            format: date-time
            title: timestamp is the time the proof was added on-chain (block time)
          creator:
            type: string
            title: creator is the account address that created the proof
        description: >-
          ProofMetadata is the metadata attached to a specific data proof

          Because the proof itself is also the key, the data structure is hash
          -> ProofMetadata

          The hash is the SHA-256 hash of the data of which is being made a
          proof for.
